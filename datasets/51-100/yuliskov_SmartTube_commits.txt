File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -444,6 +444,7 @@ public void onSectionFocused(int sectionId) {
         saveSelectedItems(); // save previous state
         mCurrentSection = findSectionById(sectionId);
         mCurrentVideo = null; // fast scroll through the sections (fix empty selected item)
+        restoreSelectedItems();
         updateCurrentSection();
     }
 
@@ -706,7 +707,7 @@ private void updateVideoGrid(BrowseSection section, Observable<MediaGroup> group
             return;
         }
 
-        restoreSelectedItems();
+        //restoreSelectedItems();
 
         Disposable updateAction = group
                 .subscribe(

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/MediaTrack.java
Patch:
@@ -8,7 +8,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 public abstract class MediaTrack {
-    private static final int BITRATE_DIFF_PERCENTS = 5;
+    private static final int BITRATE_DIFF_PERCENTS = 7;
     private static final int VP9_WEIGHT = 31;
     private static final int AVC_WEIGHT = 28;
     private static final int AV1_WEIGHT = 14;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -842,8 +842,7 @@ private void restoreState() {
         }
     }
 
-    @Override
-    protected void persistState() {
+    private void persistState() {
         mPrefs.setProfileData(VIDEO_PLAYER_DATA, Helpers.mergeData(mOKButtonBehavior, mUiHideTimeoutSec, null,
                 mSeekPreviewMode, mIsSeekConfirmPauseEnabled,
                 mIsClockEnabled, mIsRemainingTimeEnabled, mBackgroundMode, null, // afrData was there
@@ -859,7 +858,7 @@ protected void persistState() {
                 mIsSpeedPerChannelEnabled, Helpers.mergeArray(mSpeeds.values().toArray()), mPitch, mIsSkipShortsEnabled, mLastAudioLanguages
         ));
 
-        super.persistState();
+        onDataChange();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/RemoteControlData.java
Patch:
@@ -104,12 +104,12 @@ private void restoreState() {
         mIsConnectedBefore = Helpers.parseBoolean(split, 7, false);
     }
 
-    protected void persistState() {
+    private void persistState() {
         mAppPrefs.setData(DEVICE_LINK_DATA, Helpers.mergeData(
                 null, null, mIsDeviceLinkEnabled, mIsFinishOnDisconnectEnabled, mIsConnectMessagesEnabled,
                 mIsRemoteHistoryDisabled, mLastVideo, mIsConnectedBefore
         ));
 
-        super.persistState();
+        onDataChange();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/common/DataChangeBase.java
Patch:
@@ -9,15 +9,15 @@ public interface OnDataChange {
 
     private final WeakHashSet<OnDataChange> mOnChangeList = new WeakHashSet<>();
 
-    public void setOnChange(OnDataChange callback) {
+    public final void setOnChange(OnDataChange callback) {
         mOnChangeList.add(callback);
     }
 
-    public void removeOnChange(OnDataChange callback) {
+    public final void removeOnChange(OnDataChange callback) {
         mOnChangeList.remove(callback);
     }
 
-    protected void persistState() {
+    public final void onDataChange() {
         mOnChangeList.forEach(OnDataChange::onDataChange);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/common/DataSaverBase.java
Patch:
@@ -68,11 +68,10 @@ private void restoreState() {
         }
     }
 
-    @Override
-    protected void persistState() {
-        super.persistState();
+    private void persistState() {
         mAppPrefs.setData(mDataKey, Helpers.mergeData(
                 mValues.toArray()
         ));
+        onDataChange();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -193,7 +193,7 @@ private void initSectionMapping() {
         mSectionsMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, new BrowseSection(MediaGroup.TYPE_CHANNEL_UPLOADS, getContext().getString(R.string.header_channels), uploadsType, R.drawable.icon_channels, false));
         mSectionsMapping.put(MediaGroup.TYPE_SUBSCRIPTIONS, new BrowseSection(MediaGroup.TYPE_SUBSCRIPTIONS, getContext().getString(R.string.header_subscriptions), BrowseSection.TYPE_GRID, R.drawable.icon_subscriptions, false));
         mSectionsMapping.put(MediaGroup.TYPE_HISTORY, new BrowseSection(MediaGroup.TYPE_HISTORY, getContext().getString(R.string.header_history), BrowseSection.TYPE_GRID, R.drawable.icon_history, true));
-        mSectionsMapping.put(MediaGroup.TYPE_USER_PLAYLISTS, new BrowseSection(MediaGroup.TYPE_USER_PLAYLISTS, getContext().getString(R.string.header_playlists), BrowseSection.TYPE_ROW, R.drawable.icon_playlist, true));
+        mSectionsMapping.put(MediaGroup.TYPE_USER_PLAYLISTS, new BrowseSection(MediaGroup.TYPE_USER_PLAYLISTS, getContext().getString(R.string.header_playlists), BrowseSection.TYPE_ROW, R.drawable.icon_playlist, false));
         mSectionsMapping.put(MediaGroup.TYPE_NOTIFICATIONS, new BrowseSection(MediaGroup.TYPE_NOTIFICATIONS, getContext().getString(R.string.header_notifications), BrowseSection.TYPE_GRID, R.drawable.icon_notification, false));
 
         if (mSidebarService.isSettingsSectionEnabled()) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/MaxControlsVideoPlayerGlue.java
Patch:
@@ -54,7 +54,7 @@ protected void onBindDescription(ViewHolder viewHolder, Object obj) {
                         viewHolder.getTitle().setText(glue.getTitle());
                         viewHolder.getSubtitle().setText(glue.getSubtitle());
                         // MOD: add extra title line
-                        viewHolder.getBody().setText(glue.getBody());
+                        //viewHolder.getBody().setText(glue.getBody());
                     }
 
                     private void fixOverlappedTitle(ViewHolder viewHolder) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -143,7 +143,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
                 //.placeholder(mDefaultCardImage)
                 .apply(ViewUtil.glideOptions())
                 // improve image compression on low end devices
-                //.override(mWidth, mHeight)
+                .override(mWidth, mHeight)
                 // com.liskovsoft.smartyoutubetv2.tv.util.CacheGlideModule
                 // Cache makes app crashing on old android versions
                 .diskCacheStrategy(VERSION.SDK_INT > 21 ? DiskCacheStrategy.ALL : DiskCacheStrategy.NONE)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -240,6 +240,7 @@ private void startListeningInt() {
     private void stopListening() {
         RxHelper.disposeActions(mListeningAction, mPostStartPlayAction, mPostStateAction, mPostVolumeAction);
         unregisterVolumeObserver();
+        Utils.removeCallbacks(mStartListeningInt);
     }
 
     private void processCommand(Command command) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/ChannelCardPresenter.java
Patch:
@@ -98,8 +98,9 @@ public void onBindViewHolder(ViewHolder viewHolder, Object item) {
 
         Glide.with(context)
                 .load(video.cardImageUrl)
-                .apply(ViewUtil.glideOptions().error(R.drawable.card_placeholder)) // R.color.lb_grey
+                .apply(ViewUtil.glideOptions())
                 .listener(mErrorListener)
+                //.error(R.drawable.card_placeholder) // R.color.lb_grey
                 .into(imageView);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -120,7 +120,8 @@ public void onSuggestionItemClicked(Video item) {
     @Override
     public void onControlsShown(boolean shown) {
         if (shown) {
-            focusCurrentChapter();
+            //focusCurrentChapter();
+            Utils.postDelayed(this::focusCurrentChapter, 0); // fix ui jump when shown
         } else {
             startChapterNotificationServiceIfNeeded();
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -489,7 +489,7 @@ private boolean applyGenericErrorAction(int type, int rendererIndex, Throwable e
 
             if (mPlayerData.getVideoBufferType() == PlayerData.BUFFER_MEDIUM || mPlayerData.getVideoBufferType() == PlayerData.BUFFER_LOW) {
                 mPlayerTweaksData.enableSectionPlaylist(false);
-                mPlayerTweaksData.enableHighBitrateFormats(false);
+                //mPlayerTweaksData.enableHighBitrateFormats(false);
                 restartEngine = false;
             } else {
                 mPlayerData.setVideoBufferType(PlayerData.BUFFER_MEDIUM);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -350,9 +350,9 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
             if (mStateService.isHistoryBroken()) { // temp fix (not work as expected)
                 YouTubeServiceManager.instance().applyAntiBotFix(); // bot check error?
                 mPlayerTweaksData.enablePersistentAntiBotFix(true);
-                //scheduleReloadVideoTimer(5_000);
                 scheduleRebootAppTimer(5_000);
             } else {
+                YouTubeServiceManager.instance().applyAntiBotFix(); // bot check error?
                 scheduleNextVideoTimer(5_000);
             }
         } else if (formatInfo.containsDashVideoFormats() && acceptDashVideoFormats(formatInfo)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -291,7 +291,8 @@ private void processCommand(Command command) {
                     //postStartPlaying(getController().getVideo(), true);
                     postPlay(true);
                 } else {
-                    openNewVideo(mVideo);
+                    // Already connected
+                    openNewVideo(mVideo != null ? mVideo : mRemoteControlData.getLastVideo());
                 }
                 break;
             case Command.TYPE_PAUSE:

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -121,8 +121,8 @@ public void onEngineReleased() {
 
     @Override
     public void onFinish() {
-        // User action detected. Stop remote session.
-        //mConnected = false;
+        // User action detected. Hide remote playlist.
+        mConnected = false;
         mVideo = null;
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -80,6 +80,7 @@ public void onVideoLoaded(Video item) {
         }
 
         postStartPlaying(item, getPlayer().getPlayWhenReady());
+        postVolumeChange(Utils.getVolume(getContext(), getPlayer(), NORMALIZE));
         mVideo = item;
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -288,7 +288,8 @@ private static int getGlobalVolume(Context context, boolean normalize) {
     }
 
     private static boolean isGlobalVolumeFixed(Context context) {
-        return getGlobalVolume(context, false) == 100;
+        //return getGlobalVolume(context, false) == 100;
+        return Helpers.isAmazonFireTVDevice();
     }
 
     public static int getVolume(Context context, PlayerManager player) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/CommentsController.java
Patch:
@@ -162,7 +162,7 @@ private void showDialog(CommentsReceiver receiver, String title) {
         AppDialogPresenter appDialogPresenter = AppDialogPresenter.instance(getContext());
 
         appDialogPresenter.appendCommentsCategory(title, UiOptionItem.from(title, receiver));
-        appDialogPresenter.enableTransparent(true);
+        //appDialogPresenter.enableTransparent(true);
         appDialogPresenter.showDialog();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -116,7 +116,7 @@ private void applyRunPerInstanceTasks() {
 
     private void runBackgroundTasks() {
         YouTubeServiceManager.instance().refreshCacheIfNeeded(); // warm up player engine
-        if (PlayerTweaksData.instance(getContext()).isPlaybackErrorsFixEnabled()) {
+        if (PlayerTweaksData.instance(getContext()).isPersistentAntiBotFixEnabled()) {
             YouTubeServiceManager.instance().applyAntiBotFix();
         }
         enableHistoryIfNeeded();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -236,10 +236,10 @@ private void appendDeveloperCategory(AppDialogPresenter settingsPresenter) {
 
         options.add(UiOptionItem.from("Playback buffering fix",
                 option -> {
-                    mPlayerTweaksData.enablePlaybackErrorsFix(option.isSelected());
+                    mPlayerTweaksData.enablePersistentAntiBotFix(option.isSelected());
                     mRestartApp = true;
                 },
-                mPlayerTweaksData.isPlaybackErrorsFixEnabled()));
+                mPlayerTweaksData.isPersistentAntiBotFixEnabled()));
 
         // Oculus Quest fix: back button not closing the activity
         options.add(UiOptionItem.from("Oculus Quest fix",

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/HQDialogController.java
Patch:
@@ -26,7 +26,6 @@ public class HQDialogController extends BasePlayerController {
     private final Map<Integer, OptionCategory> mCategories = new LinkedHashMap<>();
     private final Map<Integer, OptionCategory> mCategoriesInt = new LinkedHashMap<>();
     private final Set<Runnable> mHideListeners = new HashSet<>();
-    private VideoStateController mStateUpdater;
     private PlayerData mPlayerData;
     private PlayerTweaksData mPlayerTweaksData;
     private AppDialogPresenter mAppDialogPresenter;
@@ -36,7 +35,6 @@ public void onInit() {
         mPlayerData = PlayerData.instance(getContext());
         mPlayerTweaksData = PlayerTweaksData.instance(getContext());
         mAppDialogPresenter = AppDialogPresenter.instance(getContext());
-        mStateUpdater = getController(VideoStateController.class);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -406,7 +406,7 @@ private void restoreSubtitleFormat() {
         getPlayer().setFormat(result);
     }
 
-    private void saveState() {
+    public void saveState() {
         savePosition();
         updateHistory();
         //persistState(); // persist the state if the device reboots accidentally

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/ChannelGroupMenuProvider.java
Patch:
@@ -84,7 +84,7 @@ private void showGroupDialog(Video item, VideoMenuCallback callback) {
 
         List<OptionItem> options = new ArrayList<>();
         
-        String editDialogTitle = mContext.getString(R.string.new_subscriptions_group) + "/GrayJay/PocketTube URL";
+        String editDialogTitle = mContext.getString(R.string.new_subscriptions_group);
         options.add(UiOptionItem.from(editDialogTitle, optionItem -> {
             dialogPresenter.closeDialog();
             SimpleEditDialog.show(mContext, editDialogTitle,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -188,7 +188,8 @@ public boolean onNextClicked() {
 
     @Override
     public void onFinish() {
-        mPlaylist.clearPosition();
+        // ???
+        //mPlaylist.clearPosition();
     }
 
     public void loadPrevious() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -85,8 +85,8 @@ public void onViewInitialized() {
             return;
         }
 
-        applyRunPerInstanceTasks();
         applyRunOnceTasks();
+        applyRunPerInstanceTasks();
 
         //runRefreshCachePeriodicTask();
         showAccountSelectionIfNeeded();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -3,8 +3,6 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 
-import androidx.annotation.NonNull;
-
 import com.liskovsoft.mediaserviceinterfaces.yt.ContentService;
 import com.liskovsoft.mediaserviceinterfaces.yt.NotificationsService;
 import com.liskovsoft.mediaserviceinterfaces.yt.ServiceManager;
@@ -1110,7 +1108,7 @@ private void handleLoadError(Throwable error) {
         }
     }
 
-    private void appendLocalHistory(@NonNull VideoGroup videoGroup) {
+    private void appendLocalHistory(VideoGroup videoGroup) {
         VideoStateService stateService = VideoStateService.instance(getContext());
 
         if (!isHistorySection() || (!stateService.isHistoryBroken() && !videoGroup.isEmpty())) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -122,7 +122,7 @@ private void applyRunOnceTasks() {
         if (!sRunOnce) {
             sRunOnce = true;
             RxHelper.setupGlobalErrorHandler();
-            initGlobalData();
+            initGlobalPrefs();
             initProxy();
             initVideoStateService();
             initStreamReminderService();
@@ -174,7 +174,7 @@ private void initStreamReminderService() {
      * Inits media service language and context.<br/>
      * NOTE: this command should run before using any of the media service api.
      */
-    private void initGlobalData() {
+    private void initGlobalPrefs() {
         Log.d(TAG, "initGlobalData called...");
 
         if (getContext() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/BasePlayerController.java
Patch:
@@ -3,6 +3,8 @@
 import android.app.Activity;
 import android.content.Context;
 
+import androidx.annotation.Nullable;
+
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaItemMetadata;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.manager.PlayerManager;
@@ -26,6 +28,7 @@ protected <T extends PlayerEventListener> T getController(Class<T> clazz) {
         return mMainController != null ? mMainController.getController(clazz) : null;
     }
 
+    @Nullable
     public PlayerManager getPlayer() {
         return mMainController != null ? mMainController.getPlayer() : null;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -545,7 +545,7 @@ private void markAsQueueIfNeeded(Video item) {
     }
 
     private void focusCurrentChapter() {
-        if (!getPlayer().isControlsShown()) {
+        if (getPlayer() == null || !getPlayer().isControlsShown()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -529,7 +529,7 @@ public boolean isPlaylistInChannel() {
     }
 
     public boolean isMix() {
-        return !isLive && badge != null && !Helpers.hasDigits(badge) && (durationMs <= 0 || isSynced) && (hasPlaylist() || hasChannel() || hasNestedItems());
+        return !isLive && Helpers.hasWords(badge) && (durationMs <= 0 || isSynced) && (hasPlaylist() || hasChannel() || hasNestedItems());
     }
 
     public boolean isFullLive() {
@@ -852,7 +852,8 @@ public void sync(VideoStateService.State state) {
 
     public boolean isSectionPlaylistEnabled(Context context) {
         return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && getGroup() != null &&
-                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || forceSectionPlaylist) &&
+                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || forceSectionPlaylist ||
+                        (!isMix() && !belongsToSamePlaylistGroup())) && // skip hidden playlists (music videos usually)
                     (!isRemote || remotePlaylistId == null);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -34,7 +34,7 @@
 import java.util.Map;
 
 public class MediaServiceManager implements OnAccountChange {
-    private static final String TAG = SettingsManager.class.getSimpleName();
+    private static final String TAG = MediaServiceManager.class.getSimpleName();
     private static MediaServiceManager sInstance;
     private final MediaItemService mItemService;
     private final ContentService mContentService;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -28,7 +28,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SearchPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.menu.VideoMenuPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.menu.VideoMenuPresenter.VideoMenuCallback;
-import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.menu.providers.channelgroup.ChannelGroupServiceWrapper;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.settings.AutoFrameRateSettingsPresenter;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.track.SubtitleTrack;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -91,6 +91,7 @@ public final class Video {
     public float volume = 1.0f;
     public boolean deArrowProcessed;
     public boolean isLiveEnd;
+    public boolean forceSectionPlaylist;
     private int startSegmentNum;
     private long liveDurationMs = -1;
     private long durationMs = -1;
@@ -852,7 +853,7 @@ public void sync(VideoStateService.State state) {
 
     public boolean isSectionPlaylistEnabled(Context context) {
         return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && getGroup() != null &&
-                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || belongsToSearch() || belongsToHome()) &&
+                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || forceSectionPlaylist) &&
                     (!isRemote || remotePlaylistId == null);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -633,7 +633,8 @@ private void restoreData() {
         mIsSpeedButtonOldBehaviorEnabled = Helpers.parseBoolean(split, 23, false);
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
         mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, true);
-        mPlayerDataSource = Helpers.parseInt(split, 26, Utils.skipCronet() ? PLAYER_DATA_SOURCE_DEFAULT : PLAYER_DATA_SOURCE_CRONET);
+        //mPlayerDataSource = Helpers.parseInt(split, 26, Utils.skipCronet() ? PLAYER_DATA_SOURCE_DEFAULT : PLAYER_DATA_SOURCE_CRONET);
+        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_DEFAULT);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);
         mIsSonyFrameDropFixEnabled = Helpers.parseBoolean(split, 29, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -129,7 +129,7 @@ private void onLongBuffering() {
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < STREAM_END_THRESHOLD_MS) {
             getMainController().onPlayEnd();
         } else {
-            MessageHelpers.showLongMessage(getContext(), R.string.applying_fix);
+            //MessageHelpers.showLongMessage(getContext(), R.string.applying_fix);
             YouTubeServiceManager.instance().applyAntiBotFix(); // bot check error?
             reloadVideo();
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -242,7 +242,7 @@ public boolean equals(@Nullable Object obj) {
         if (obj instanceof Video) {
             Video video = (Video) obj;
 
-            return hashCode() == video.hashCode();
+            return hashCode() == video.hashCode() && isMix() == video.isMix();
         }
 
         return false;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -355,7 +355,7 @@ public static OptionCategory createAudioLanguageCategory(Context context, Player
         // Alphabetical order
         Collections.sort(options, (o1, o2) -> ((String) o1.getTitle()).compareTo((String) o2.getTitle()));
 
-        options.add(0, UiOptionItem.from(context.getString(R.string.dialog_account_none),
+        options.add(0, UiOptionItem.from(context.getString(R.string.default_lang),
                 optionItem -> {
                     playerData.setAudioLanguage("");
                     onSetCallback.run();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -529,7 +529,7 @@ public boolean isPlaylistInChannel() {
     }
 
     public boolean isMix() {
-        return !isLive && badge != null && !Helpers.hasDigits(badge) && durationMs <= 0 && (hasPlaylist() || hasChannel() || hasNestedItems());
+        return !isLive && badge != null && !Helpers.hasDigits(badge) && (durationMs <= 0 || isSynced) && (hasPlaylist() || hasChannel() || hasNestedItems());
     }
 
     public boolean isFullLive() {
@@ -852,7 +852,7 @@ public void sync(VideoStateService.State state) {
 
     public boolean isSectionPlaylistEnabled(Context context) {
         return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && getGroup() != null &&
-                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || belongsToSearch()) &&
+                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || belongsToSearch() || belongsToHome()) &&
                     (!isRemote || remotePlaylistId == null);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -234,7 +234,7 @@ private void appendPlayerButtonsCategory(AppDialogPresenter settingsPresenter) {
     private void appendDeveloperCategory(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
-        options.add(UiOptionItem.from("Playback errors fix",
+        options.add(UiOptionItem.from("Playback buffering fix",
                 option -> {
                     mPlayerTweaksData.enablePlaybackErrorsFix(option.isSelected());
                     mRestartApp = true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -645,7 +645,8 @@ private long getLiveBuffer() {
     }
 
     private void removeFromHistoryIfNeeded() {
-        if (mGeneralData.getHistoryState() == GeneralData.HISTORY_DISABLED) {
+        // Maintain history to keep video progress
+        if (mGeneralData.getHistoryState() == GeneralData.HISTORY_DISABLED && mStateService.isHistoryBroken()) {
             Video video = getVideo();
             if (video != null) {
                 mStateService.removeByVideoId(video.videoId);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/ViewUtil.java
Patch:
@@ -111,9 +111,10 @@ public static void applyMarqueeRtlParams(TextView textView, boolean scroll) {
 
         if (!Helpers.isTextRTL(textView.getText())) {
             // TextView may be reused from rtl context. Do reset.
-            textView.setTextAlignment(View.TEXT_ALIGNMENT_GRAVITY);
+            // NOTE: don't enable commented options because Setting item's text won't be centered.
+            //textView.setTextAlignment(View.TEXT_ALIGNMENT_GRAVITY);
             textView.setTextDirection(TextView.TEXT_DIRECTION_FIRST_STRONG);
-            textView.setGravity(Gravity.TOP | Gravity.START);
+            //textView.setGravity(Gravity.TOP | Gravity.START);
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -907,6 +907,9 @@ private void reorderSubtitles(List<FormatItem> subtitleFormats) {
         int begin = subtitleFormats.get(0).isDefault() ? 1 : 0;
         List<FormatItem> topSubtitles = new ArrayList<>();
         for (FormatItem item : mPlayerData.getLastSubtitleFormats()) {
+            if (item == null || item.getLanguage() == null) { // skip empty formats
+                continue;
+            }
             int index = 0;
             while (index != -1) {
                 index = subtitleFormats.indexOf(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -219,7 +219,7 @@ private void initSectionCallbacks() {
         mGridMapping.put(MediaGroup.TYPE_SHORTS, mContentService.getShortsObserve());
         mGridMapping.put(MediaGroup.TYPE_SUBSCRIPTIONS, mContentService.getSubscriptionsObserve());
         mGridMapping.put(MediaGroup.TYPE_HISTORY, mContentService.getHistoryObserve());
-        mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByUpdateObserve());
+        mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByNewContentObserve());
         mGridMapping.put(MediaGroup.TYPE_NOTIFICATIONS, mNotificationsService.getNotificationItemsObserve());
     }
 
@@ -316,7 +316,7 @@ public void updateChannelSorting() {
                 mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByNameObserve());
                 break;
             case MainUIData.CHANNEL_SORTING_NEW_CONTENT:
-                mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByUpdateObserve());
+                mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByNewContentObserve());
                 break;
             case MainUIData.CHANNEL_SORTING_LAST_VIEWED:
                 mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByLastViewedObserve());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -165,8 +165,7 @@ private void appendChannelSortingCategory(AppDialogPresenter settingsPresenter)
         for (int[] pair : new int[][] {
                 {R.string.sorting_last_viewed, MainUIData.CHANNEL_SORTING_LAST_VIEWED},
                 {R.string.sorting_alphabetically, MainUIData.CHANNEL_SORTING_NAME},
-                //{R.string.sorting_by_new_content, MainUIData.CHANNEL_SORTING_NEW_CONTENT},
-                }) {
+                {R.string.sorting_by_new_content, MainUIData.CHANNEL_SORTING_NEW_CONTENT}}) {
             options.add(UiOptionItem.from(getContext().getString(pair[0]), optionItem -> {
                 mMainUIData.setChannelCategorySorting(pair[1]);
                 BrowsePresenter.instance(getContext()).updateChannelSorting();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -188,7 +188,7 @@ public void loadChannelUploads(MediaItem item, OnMediaGroup onMediaGroup) {
     public void loadSubscribedChannels(OnMediaGroup onMediaGroup) {
         RxHelper.disposeActions(mSubscribedChannelsAction);
 
-        Observable<MediaGroup> observable = mContentService.getSubscribedChannelsByUpdateObserve();
+        Observable<MediaGroup> observable = mContentService.getSubscribedChannelsByNewContentObserve();
 
         mSubscribedChannelsAction = observable
                 .subscribe(

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -852,6 +852,7 @@ public void sync(VideoStateService.State state) {
 
     public boolean isSectionPlaylistEnabled(Context context) {
         return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && getGroup() != null &&
-                (playlistId == null || nextMediaItem == null || belongsToSearch()) && (!isRemote || remotePlaylistId == null);
+                (playlistId == null || PLAYLIST_LIKED_MUSIC.equals(playlistId) || nextMediaItem == null || belongsToSearch()) &&
+                    (!isRemote || remotePlaylistId == null);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -312,16 +312,14 @@ public void updateChannelSorting() {
                 mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsObserve());
                 break;
             case MainUIData.CHANNEL_SORTING_NAME2:
-                mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByName2Observe());
-                break;
             case MainUIData.CHANNEL_SORTING_NAME:
                 mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByNameObserve());
                 break;
             case MainUIData.CHANNEL_SORTING_NEW_CONTENT:
                 mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByUpdateObserve());
                 break;
             case MainUIData.CHANNEL_SORTING_LAST_VIEWED:
-                mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByViewedObserve());
+                mGridMapping.put(MediaGroup.TYPE_CHANNEL_UPLOADS, mContentService.getSubscribedChannelsByLastViewedObserve());
                 break;
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -192,7 +192,7 @@ public boolean isShorts() {
             return false;
         }
 
-        return mVideos.get(mVideos.size() - 1).isShorts;
+        return mVideos.get(0).isShorts;
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -319,7 +319,7 @@ private void removePlaylist(Video video) {
         Observable<Void> action = manager.removePlaylistObserve(video.playlistId);
         GeneralData.instance(getContext()).setPlaylistOrder(video.playlistId, -1);
         RxHelper.execute(action,
-                (error) -> MessageHelpers.showMessage(getContext(), getContext().getString(R.string.cant_delete_empty_playlist)),
+                (error) -> MessageHelpers.showMessage(getContext(), error.getLocalizedMessage()),
                 () -> MessageHelpers.showMessage(getContext(), getContext().getString(R.string.removed_from_playlists))
         );
     }
@@ -328,7 +328,7 @@ private void savePlaylist(Video video) {
         MediaItemService manager = YouTubeMediaItemService.instance();
         Observable<Void> action = manager.savePlaylistObserve(video.playlistId);
         RxHelper.execute(action,
-                (error) -> MessageHelpers.showMessage(getContext(), getContext().getString(R.string.cant_save_playlist)),
+                (error) -> MessageHelpers.showMessage(getContext(), error.getLocalizedMessage()),
                 () -> MessageHelpers.showMessage(getContext(), getContext().getString(R.string.saved_to_playlists))
         );
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -391,7 +391,7 @@ private void showCreatePlaylistDialog(Video video) {
                     Observable<Void> action = manager.createPlaylistObserve(newValue, video.hasVideo() ? video.videoId : null);
                     RxHelper.execute(
                             action,
-                            (error) -> MessageHelpers.showMessage(getContext(), getContext().getString(R.string.cant_save_playlist)),
+                            (error) -> MessageHelpers.showMessage(getContext(), error.getLocalizedMessage()),
                             () -> {
                                 if (!video.hasVideo()) { // Playlists section
                                     BrowsePresenter.instance(getContext()).refresh();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -185,7 +185,7 @@ private void initSectionMapping() {
         String country = LocaleUtility.getCurrentLocale(getContext()).getCountry();
         int uploadsType = mMainUIData.isUploadsOldLookEnabled() ? BrowseSection.TYPE_GRID : BrowseSection.TYPE_MULTI_GRID;
 
-        mSectionsMapping.put(MediaGroup.TYPE_HOME, new BrowseSection(MediaGroup.TYPE_HOME, getContext().getString(R.string.header_home), BrowseSection.TYPE_ROW, R.drawable.icon_home));
+        mSectionsMapping.put(MediaGroup.TYPE_HOME, new BrowseSection(MediaGroup.TYPE_HOME, getContext().getString(R.string.header_home), BrowseSection.TYPE_ROW, R.drawable.icon_home, true));
         mSectionsMapping.put(MediaGroup.TYPE_SHORTS, new BrowseSection(MediaGroup.TYPE_SHORTS, getContext().getString(R.string.header_shorts), BrowseSection.TYPE_SHORTS_GRID, R.drawable.icon_shorts));
         mSectionsMapping.put(MediaGroup.TYPE_TRENDING, new BrowseSection(MediaGroup.TYPE_TRENDING, getContext().getString(R.string.header_trending), BrowseSection.TYPE_ROW, R.drawable.icon_trending));
         mSectionsMapping.put(MediaGroup.TYPE_KIDS_HOME, new BrowseSection(MediaGroup.TYPE_KIDS_HOME, getContext().getString(R.string.header_kids_home), BrowseSection.TYPE_ROW, R.drawable.icon_kids_home));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -507,14 +507,14 @@ private boolean applyGenericErrorAction(int type, int rendererIndex, Throwable e
             } else {
                 restartEngine = false;
             }
-        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404", "Response code: 503", "Response code: 400")) {
+        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404", "Response code: 503")) {
             // "Response code: 403" (url deciphered incorrectly)
             // "Response code: 404" (not sure whether below helps)
             // "Response code: 503" (not sure whether below helps)
             // "Response code: 400" (not sure whether below helps)
             YouTubeServiceManager.instance().applyNoPlaybackFix();
             restartEngine = false;
-        } else if (Helpers.startsWithAny(message, "Response code: 429")) {
+        } else if (Helpers.startsWithAny(message, "Response code: 429", "Response code: 400")) {
             YouTubeServiceManager.instance().applyAntiBotFix();
             restartEngine = false;
         } else if (type == PlayerEventListener.ERROR_TYPE_SOURCE && rendererIndex == PlayerEventListener.RENDERER_INDEX_UNKNOWN) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -37,6 +37,7 @@
 import androidx.leanback.widget.VerticalGridView;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.KeyHelpers;
+import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SearchPresenter;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.smartyoutubetv2.tv.BuildConfig;
@@ -249,6 +250,8 @@ public void onRequestPermissionsResult(int requestCode, String[] permissions,
             if (permissions[0].equals(Manifest.permission.RECORD_AUDIO)
                     && grantResults[0] == PERMISSION_GRANTED) {
                 startRecognition();
+            } else {
+                MessageHelpers.showMessage(getContext(), com.liskovsoft.smartyoutubetv2.common.R.string.not_supported_by_device);
             }
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/CategoryEmptyError.java
Patch:
@@ -31,6 +31,6 @@ public String getMessage() {
 
     @Override
     public String getActionText() {
-        return !Helpers.startsWith(mError.getMessage(), "ErrorResponse") ? mContext.getString(R.string.action_signin) : null;
+        return Helpers.startsWith(mError.getMessage(), "AuthErrorResponse") ? mContext.getString(R.string.action_signin) : null;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -207,7 +207,7 @@ private void initSectionMapping() {
     }
 
     private void initSectionCallbacks() {
-        mRowMapping.put(MediaGroup.TYPE_HOME, mGeneralData.isOldHomeLookEnabled() ? mContentService.getHomeV1Observe() : mContentService.getHomeObserve());
+        mRowMapping.put(MediaGroup.TYPE_HOME, mContentService.getHomeObserve());
         mRowMapping.put(MediaGroup.TYPE_TRENDING, mContentService.getTrendingObserve());
         mRowMapping.put(MediaGroup.TYPE_KIDS_HOME, mContentService.getKidsHomeObserve());
         mRowMapping.put(MediaGroup.TYPE_SPORTS, mContentService.getSportsObserve());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -930,7 +930,7 @@ private void showNotificationsDialog(int buttonState) {
         for (NotificationState item : getPlayer().getVideo().notificationStates) {
             items.add(UiOptionItem.from(item.getTitle(), optionItem -> {
                 if (optionItem.isSelected()) {
-                    MediaServiceManager.instance().setNotificationState(item);
+                    MediaServiceManager.instance().setNotificationState(item, error -> MessageHelpers.showMessage(getContext(), error.getLocalizedMessage()));
                     getPlayer().getVideo().isSubscribed = true;
                     getPlayer().setButtonState(R.id.action_subscribe, PlayerUI.BUTTON_ON);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -110,8 +110,9 @@ public boolean dispatchTouchEvent(MotionEvent event) {
 
         try {
             return super.dispatchTouchEvent(event);
-        } catch (NullPointerException e) {
+        } catch (NullPointerException | SecurityException e) {
             // Attempt to invoke interface method 'boolean android.app.trust.ITrustManager.isDeviceLocked(int)' on a null object reference
+            // Permission Denial: starting Intent
             e.printStackTrace();
             return false;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -313,7 +313,8 @@ public void properlyFinishTheApp(Context activity) {
 
             PlaybackPresenter.instance(activity).forceFinish();
 
-            exitToHomeScreen(); // fix open another app from the history stack
+            // NOTE: The device may hung
+            //exitToHomeScreen(); // fix open another app from the history stack
 
             // Fix: can't start finished app activity from history.
             // Do reset state because the app should continue to run in the background.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -398,7 +398,7 @@ public void add(int idx, Video video) {
         video.setGroup(this);
 
         VideoStateService stateService = VideoStateService.instance(null);
-        if (stateService != null && (video.percentWatched == -1 || video.isLive)) {
+        if (stateService != null && (video.percentWatched == -1 || video.percentWatched == 100)) {
             State state = stateService.getByVideoId(video.videoId);
             video.sync(state);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -398,7 +398,7 @@ public void add(int idx, Video video) {
         video.setGroup(this);
 
         VideoStateService stateService = VideoStateService.instance(null);
-        if (stateService != null && video.percentWatched == -1) {
+        if (stateService != null && (video.percentWatched == -1 || video.isLive)) {
             State state = stateService.getByVideoId(video.videoId);
             video.sync(state);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GDriveBackupManager.java
Patch:
@@ -51,6 +51,7 @@ private GDriveBackupManager(Context context) {
         mSignInService = GoogleSignInService.instance();
         mDriveService = GDriveService.instance();
         mBackupNames = new String[] {
+                "search_tag_storage.xml",
                 "com.liskovsoft.appupdatechecker2.preferences.xml",
                 "com.liskovsoft.sharedutils.prefs.GlobalPreferences.xml",
                 "_preferences.xml" // before _ should be the app package name

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -646,7 +646,7 @@ private void restoreData() {
         mIsHighBitrateFormatsEnabled = Helpers.parseBoolean(split, 43, false);
         mIsLoopShortsEnabled = Helpers.parseBoolean(split, 44, true);
         mIsQuickSkipShortsEnabled = Helpers.parseBoolean(split, 45, true);
-        mIsRememberPositionOfLiveVideosEnabled = Helpers.parseBoolean(split, 46, false);
+        mIsRememberPositionOfLiveVideosEnabled = Helpers.parseBoolean(split, 46, true);
         mIsOculusQuestFixEnabled = Helpers.parseBoolean(split, 47, Utils.isOculusQuest());
         // mPlayerDataSource was here
         // Cronet is buffering too, unfortunately, so leave the default as a safest method (e.g. for "strtarmenia")

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -128,6 +128,7 @@ private void prepareAndShowDialogUnsigned() {
         appendAccountSelectionButton();
         appendMoveSectionButton();
         appendRenameSectionButton();
+        appendClearHistoryButton();
 
         for (Long menuItem : MainUIData.instance(getContext()).getMenuItemsOrdered()) {
             MenuAction menuAction = mMenuMapping.get(menuItem);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -25,7 +25,7 @@ public class VideoStateController extends BasePlayerController {
     private static final String TAG = VideoStateController.class.getSimpleName();
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long DEFAULT_LIVE_BUFFER_MS = 60_000; // Minimum issues
-    private static final long OFFICIAL_LIVE_BUFFER_MS = 20_000; // Official app buffer
+    private static final long OFFICIAL_LIVE_BUFFER_MS = 15_000; // Official app buffer
     private static final long LIVE_BUFFER_MS = OFFICIAL_LIVE_BUFFER_MS;
     private static final long SHORT_LIVE_BUFFER_MS = 0; // Note, on buffer lower than the 60sec you'll notice segment skip
     private static final long BEGIN_THRESHOLD_MS = 10_000;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -25,7 +25,7 @@ public class VideoStateController extends BasePlayerController {
     private static final String TAG = VideoStateController.class.getSimpleName();
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long DEFAULT_LIVE_BUFFER_MS = 60_000; // Minimum issues
-    private static final long OFFICIAL_LIVE_BUFFER_MS = 15_000; // Official app buffer
+    private static final long OFFICIAL_LIVE_BUFFER_MS = 20_000; // Official app buffer
     private static final long LIVE_BUFFER_MS = OFFICIAL_LIVE_BUFFER_MS;
     private static final long SHORT_LIVE_BUFFER_MS = 0; // Note, on buffer lower than the 60sec you'll notice segment skip
     private static final long BEGIN_THRESHOLD_MS = 10_000;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -297,7 +297,8 @@ public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray tra
         setQualityInfo(mTrackFormatter.getQualityLabel());
 
         // Manage audio focus. E.g. use Spotify when audio is disabled.
-        ExoPlayerInitializer.enableAudioFocus(mPlayer, mTrackSelectorManager.getAudioTrack() != null && !mTrackSelectorManager.getAudioTrack().isEmpty());
+        MediaTrack audioTrack = mTrackSelectorManager.getAudioTrack();
+        ExoPlayerInitializer.enableAudioFocus(mPlayer, audioTrack != null && !audioTrack.isEmpty());
     }
 
     private void notifyOnVideoLoad() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -155,7 +155,9 @@ public static VideoGroup fromChapters(List<ChapterItem> chapters, String title)
     }
 
     public List<Video> getVideos() {
-        return Collections.unmodifiableList(mVideos);
+        // NOTE: Don't make the collection read only
+        // The collection will be filtered inside VideoGroupObjectAdapter
+        return mVideos;
     }
 
     public String getTitle() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -626,7 +626,7 @@ private boolean isLiveEnd() {
             return false;
         }
 
-        return getPlayer().getDurationMs() - getPlayer().getPositionMs() <= 5_000;
+        return getPlayer().getDurationMs() - getPlayer().getPositionMs() <= 1_000;
     }
 
     private long getLiveThreshold() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -626,7 +626,7 @@ private boolean isLiveEnd() {
             return false;
         }
 
-        return getPlayer().getDurationMs() - getPlayer().getPositionMs() <= 0;
+        return getPlayer().getDurationMs() - getPlayer().getPositionMs() <= 5_000;
     }
 
     private long getLiveThreshold() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/CategoryEmptyError.java
Patch:
@@ -24,7 +24,7 @@ public void onAction() {
     public String getMessage() {
         String result = mContext.getString(R.string.msg_cant_load_content);
         if (!Helpers.containsAny(mError.getMessage(), "fromNullable result is null")) {
-            result = mError.getMessage() + "\n" + result;
+            result = mError.getMessage();
         }
         return result;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/CategoryEmptyError.java
Patch:
@@ -31,6 +31,7 @@ public String getMessage() {
 
     @Override
     public String getActionText() {
-        return mContext.getString(R.string.action_signin);
+        //return mContext.getString(R.string.action_signin);
+        return null;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -341,7 +341,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
             getPlayer().showProgressBar(false);
             mSuggestionsController.loadSuggestions(mLastVideo);
             bgImageUrl = mLastVideo.getBackgroundUrl();
-            if (formatInfo.isHistoryBroken()) { // temp fix (not work as expected)
+            if (mStateService.isHistoryBroken()) { // temp fix (not work as expected)
                 //YouTubeServiceManager.instance().applyNoPlaybackFix();
                 //scheduleReloadVideoTimer(5_000);
                 scheduleRebootAppTimer(5_000);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -250,10 +250,10 @@ private void appendDeveloperCategory(AppDialogPresenter settingsPresenter) {
         options.add(UiOptionItem.from(getContext().getString(R.string.prefer_ipv4),
                 getContext().getString(R.string.prefer_ipv4_desc),
                 option -> {
-                    GlobalPreferences.instance(getContext()).preferIPv4Dns(option.isSelected());
+                    mPlayerTweaksData.preferIPv4Dns(option.isSelected());
                     mRestartApp = true;
                 },
-                GlobalPreferences.instance(getContext()).isIPv4DnsPreferred()));
+                mPlayerTweaksData.isIPv4DnsPreferred()));
 
         // Disable long press on buggy controllers.
         options.add(UiOptionItem.from(getContext().getString(R.string.disable_ok_long_press),

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -60,11 +60,11 @@ private PlaybackPresenter(Context context) {
         // NOTE: position matters!!!
         mEventListeners.add(new VideoStateController());
         mEventListeners.add(new SuggestionsController());
+        mEventListeners.add(new PlayerUIController());
         mEventListeners.add(new VideoLoaderController());
         mEventListeners.add(new RemoteController(context));
         mEventListeners.add(new ContentBlockController());
         mEventListeners.add(new AutoFrameRateController());
-        mEventListeners.add(new PlayerUIController());
         mEventListeners.add(new HQDialogController());
         mEventListeners.add(new ChatController());
         mEventListeners.add(new CommentsController());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/ChannelGroupMenuProvider.java
Patch:
@@ -96,7 +96,7 @@ private void showGroupDialog(Video item, VideoMenuCallback callback) {
                     group.add(new Channel(item.getAuthor(), item.cardImageUrl, item.channelId));
                 } else {
                     group.remove(item.channelId);
-                    Object data = presenter.getCurrentSection().getData();
+                    Object data = presenter.getCurrentSection() != null ? presenter.getCurrentSection().getData() : null;
                     if (callback != null && (data instanceof Video) && ((Video) data).channelGroupId == group.id) {
                         callback.onItemAction(item, VideoMenuCallback.ACTION_REMOVE_AUTHOR);
                     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/service/VideoStateService.java
Patch:
@@ -18,6 +18,7 @@ public class VideoStateService implements ProfileChangeListener {
     private static VideoStateService sInstance;
     private static final int MIN_PERSISTENT_STATE_SIZE = 50;
     private static final int MAX_PERSISTENT_STATE_SIZE = 300;
+    private static final long PERSIST_DELAY_MS = 10_000;
     // Don't store state inside Video object.
     // As one video might correspond to multiple Video objects.
     //private final Map<String, State> mStates = Helpers.createLRUMap(MAX_PERSISTENT_STATE_SIZE);
@@ -94,7 +95,7 @@ private void restoreState() {
 
     public void persistState() {
         // Improve memory usage
-        Utils.postDelayed(mPersistStateReal, 1_000);
+        Utils.postDelayed(mPersistStateReal, PERSIST_DELAY_MS);
         //mPrefs.setStateUpdaterData(Helpers.mergeData(getStateData(), mIsHistoryBroken));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -800,6 +800,7 @@ public long getLiveDurationMs() {
 
         // Disable updates if stream ended while watching
         if (!isLive) {
+            // TODO: obtain duration from metadata somehow
             return liveDurationMs;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -484,8 +484,8 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
                 mPlayerData.setVideoBufferType(PlayerData.BUFFER_MEDIUM);
             }
         } else if (Helpers.containsAny(message, "Exception in CronetUrlRequest")) {
-            if (mLastVideo != null && !mLastVideo.isLive) { // Finished live stream may provoke errors in Cronet
-                mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
+            if (mLastVideo != null && !mLastVideo.isLive && !mPlayerTweaksData.isNetworkErrorFixingDisabled()) { // Finished live stream may provoke errors in Cronet
+                mPlayerTweaksData.setPlayerDataSource(getNextEngine());
             }
         } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404", "Response code: 503")) {
             // "Response code: 403" (url deciphered incorrectly)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -826,7 +826,7 @@ private synchronized void restoreState() {
         mIsRemapChannelUpToSearchEnabled = Helpers.parseBoolean(split, 23, false);
         mIsHideShortsFromHomeEnabled = Helpers.parseBoolean(split, 24, false);
         mIsHideShortsFromHistoryEnabled = Helpers.parseBoolean(split, 25, false);
-        mIsScreensaverDisabled = Helpers.parseBoolean(split, 26, false);
+        mIsScreensaverDisabled = Helpers.parseBoolean(split, 26, true);
         mIsVPNEnabled = Helpers.parseBoolean(split, 27, false);
         mLastPlaylistTitle = Helpers.parseStr(split, 28);
         mPlaylistOrder = Helpers.parseMap(split, 29, Helpers::parseStr, Helpers::parseInt);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -11,6 +11,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class VideoGroup {
     /**
@@ -93,7 +94,7 @@ public static VideoGroup from(MediaGroup mediaGroup, BrowseSection section, int
         videoGroup.mSection = section;
         videoGroup.mPosition = groupPosition;
         videoGroup.mId = videoGroup.hashCode();
-        videoGroup.mVideos = new ArrayList<>();
+        videoGroup.mVideos = new CopyOnWriteArrayList<>();
         videoGroup.mMediaGroup = mediaGroup;
         videoGroup.mTitle = mediaGroup != null && mediaGroup.getTitle() != null ?
                 mediaGroup.getTitle() : section != null ? section.getTitle() : null;
@@ -357,7 +358,7 @@ public Video get(int idx) {
         return mVideos.get(idx);
     }
 
-    public synchronized void remove(Video video) {
+    public void remove(Video video) {
         if (mVideos == null) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -357,7 +357,7 @@ public Video get(int idx) {
         return mVideos.get(idx);
     }
 
-    public void remove(Video video) {
+    public synchronized void remove(Video video) {
         if (mVideos == null) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -26,7 +26,7 @@ public class VideoStateController extends BasePlayerController {
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long LIVE_THRESHOLD_MS = 90_000; // should be greater than the live buffer
     private static final long LIVE_BUFFER_MS = 60_000;
-    private static final long SHORT_LIVE_BUFFER_MS = 0; // Note, on buffer lower than the 60sec you'll notice segment skip
+    private static final long SHORT_LIVE_BUFFER_MS = 20_000; // Note, on buffer lower than the 60sec you'll notice segment skip
     private static final long BEGIN_THRESHOLD_MS = 10_000;
     private static final int HISTORY_UPDATE_INTERVAL_MINUTES = 5; // Sync history every five minutes
     private boolean mIsPlayEnabled;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/ChannelGroup.java
Patch:
@@ -55,7 +55,7 @@ public ChannelGroup(String title, String iconUrl, Channel channel) {
     }
 
     public ChannelGroup(String title, String iconUrl, List<Channel> channels) {
-        this(Helpers.getRandomNumber(1_000, Integer.MAX_VALUE), title, iconUrl, channels);
+        this(Helpers.getRandomNumber(ChannelGroupService.SUBSCRIPTION_GROUP_ID + 100, Integer.MAX_VALUE), title, iconUrl, channels);
     }
 
     public ChannelGroup(int id, String title, String iconUrl, List<Channel> channels) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -11,7 +11,6 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
-import java.util.concurrent.CopyOnWriteArrayList;
 
 public class VideoGroup {
     /**
@@ -94,7 +93,7 @@ public static VideoGroup from(MediaGroup mediaGroup, BrowseSection section, int
         videoGroup.mSection = section;
         videoGroup.mPosition = groupPosition;
         videoGroup.mId = videoGroup.hashCode();
-        videoGroup.mVideos = new CopyOnWriteArrayList<>();
+        videoGroup.mVideos = new ArrayList<>();
         videoGroup.mMediaGroup = mediaGroup;
         videoGroup.mTitle = mediaGroup != null && mediaGroup.getTitle() != null ?
                 mediaGroup.getTitle() : section != null ? section.getTitle() : null;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -11,6 +11,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class VideoGroup {
     /**
@@ -93,7 +94,7 @@ public static VideoGroup from(MediaGroup mediaGroup, BrowseSection section, int
         videoGroup.mSection = section;
         videoGroup.mPosition = groupPosition;
         videoGroup.mId = videoGroup.hashCode();
-        videoGroup.mVideos = new ArrayList<>();
+        videoGroup.mVideos = new CopyOnWriteArrayList<>();
         videoGroup.mMediaGroup = mediaGroup;
         videoGroup.mTitle = mediaGroup != null && mediaGroup.getTitle() != null ?
                 mediaGroup.getTitle() : section != null ? section.getTitle() : null;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/service/SidebarService.java
Patch:
@@ -258,7 +258,7 @@ private void cleanupPinnedItems() {
             item.videoId = null;
 
             // Fix id collision between pinned and default sections
-            if (item.channelGroupId != -1 && item.channelGroupId < 1_000) {
+            if (item.channelGroupId != -1 && item.channelGroupId < 1_000 && item.channelGroupId >= -1) {
                 item.channelGroupId += 1_000;
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/service/SidebarService.java
Patch:
@@ -74,7 +74,7 @@ public void enableSection(int sectionId, boolean enabled) {
             //    return;
             //}
 
-            Video section = Helpers.findFirst(mPinnedItems, item -> item.sectionId == sectionId);
+            Video section = Helpers.findFirst(mPinnedItems, item -> item != null && item.sectionId == sectionId);
 
             if (section != null) { // don't reorder if item already exists
                 return;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/ChannelGroup.java
Patch:
@@ -55,7 +55,7 @@ public ChannelGroup(String title, String iconUrl, Channel channel) {
     }
 
     public ChannelGroup(String title, String iconUrl, List<Channel> channels) {
-        this(Helpers.getRandomIndex(Integer.MAX_VALUE), title, iconUrl, channels);
+        this(Helpers.getRandomNumber(1_000, Integer.MAX_VALUE), title, iconUrl, channels);
     }
 
     public ChannelGroup(int id, String title, String iconUrl, List<Channel> channels) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -250,7 +250,8 @@ public boolean equals(@Nullable Object obj) {
      */
     @Override
     public int hashCode() {
-        int hashCode = Helpers.hashCode(videoId, playlistId, reloadPageKey, playlistParams, channelId, mediaItem, sectionId, channelGroupId);
+        // NOTE: With full hash code won't jump to last known position
+        int hashCode = Helpers.hashCodeAny(videoId, playlistId, reloadPageKey, playlistParams, channelId, mediaItem, sectionId, channelGroupId);
         return hashCode != -1 ? hashCode : super.hashCode();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/service/SidebarService.java
Patch:
@@ -269,7 +269,7 @@ private void restoreState() {
         // Backward compatibility
         enableSection(MediaGroup.TYPE_SETTINGS, true);
 
-        cleanupPinnedItems();
+        //cleanupPinnedItems();
     }
 
     private void transferOldPinnedItems() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -250,7 +250,7 @@ public boolean equals(@Nullable Object obj) {
      */
     @Override
     public int hashCode() {
-        int hashCode = Helpers.hashCodeAny(videoId, playlistId, reloadPageKey, playlistParams, channelId, mediaItem, sectionId, channelGroupId);
+        int hashCode = Helpers.hashCode(videoId, playlistId, reloadPageKey, playlistParams, channelId, mediaItem, sectionId, channelGroupId);
         return hashCode != -1 ? hashCode : super.hashCode();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -79,7 +79,9 @@ public static VideoGroup from(List<Video> items, int groupPosition) {
         videoGroup.mPosition = groupPosition;
 
         for (Video item : items) {
-            item.setGroup(videoGroup);
+            if (item.getGroup() == null) {
+                item.setGroup(videoGroup);
+            }
         }
 
         return videoGroup;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/ChannelGroupService.java
Patch:
@@ -158,6 +158,8 @@ public void onProfileChanged() {
     private void cleanupChannelGroups() {
         Collection<Video> pinnedItems = SidebarService.instance(mContext).getPinnedItems();
 
-        Helpers.removeIf(mChannelGroups, value -> !pinnedItems.contains(Video.from(value)));
+        Helpers.removeIf(mChannelGroups, value -> {
+            return value.id != SUBSCRIPTION_GROUP_ID && !pinnedItems.contains(Video.from(value));
+        });
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/AppPrefs.java
Patch:
@@ -6,6 +6,7 @@
 import com.liskovsoft.mediaserviceinterfaces.yt.data.Account;
 import com.liskovsoft.sharedutils.prefs.SharedPreferencesBase;
 import com.liskovsoft.smartyoutubetv2.common.R;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.service.SidebarService;
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager.AccountChangeListener;
 
@@ -190,6 +191,8 @@ public void addListener(ProfileChangeListener listener) {
         if (!mListeners.contains(listener)) {
             if (listener instanceof GeneralData) {
                 mListeners.add(0, listener); // data classes should be called before regular listeners
+            } else if (listener instanceof SidebarService) {
+                mListeners.add(mListeners.isEmpty() ? 0 : 1, listener); // data classes should be called before regular listeners
             } else {
                 mListeners.add(listener);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/SubscriptionGroupMenuProvider.java
Patch:
@@ -96,7 +96,8 @@ private void showGroupDialog(Video item, VideoMenuCallback callback) {
                     group.add(new Channel(item.getAuthor(), item.cardImageUrl, item.channelId));
                 } else {
                     group.remove(item.channelId);
-                    if (callback != null && ((Video) presenter.getCurrentSection().getData()).channelGroupId == group.id) {
+                    Object data = presenter.getCurrentSection().getData();
+                    if (callback != null && (data instanceof Video) && ((Video) data).channelGroupId == group.id) {
                         callback.onItemAction(item, VideoMenuCallback.ACTION_REMOVE_AUTHOR);
                     }
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SignInPresenter.java
Patch:
@@ -49,7 +49,9 @@ public void onViewInitialized() {
             mPresenter = YTSignInPresenter.instance(getContext());
         } else if (GoogleSignInPresenter.instance(getContext()).isWaiting()) {
             mPresenter = GoogleSignInPresenter.instance(getContext());
-        } else {
+        }
+
+        if (mPresenter == null) {
             throw new IllegalStateException("At least one nested sign in presenter should be initialized.");
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -484,7 +484,9 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
                 mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
             }
         } else if (Helpers.containsAny(message, "Exception in CronetUrlRequest")) {
-            mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
+            if (mLastVideo != null && !mLastVideo.isLive) { // Finished live stream may provoke errors in Cronet
+                mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
+            }
         } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404", "Response code: 503")) {
             // "Response code: 403" (url deciphered incorrectly)
             // "Response code: 404" (not sure whether below helps)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -1083,7 +1083,7 @@ private void createPinnedMapping(Video item) {
 
     private BrowseSection createPinnedSection(Video item) {
         return new BrowseSection(
-                item.getId(), item.getTitle(), enableRows(item) ? BrowseSection.TYPE_ROW : BrowseSection.TYPE_GRID, item.getCardImageUrl(), false, item);
+                item.getId(), item.getTitle(), enableRows(item) ? BrowseSection.TYPE_ROW : BrowseSection.TYPE_GRID, R.drawable.icon_pin, item.getCardImageUrl(), false, item);
     }
 
     private boolean enableRows(Video item) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/SubscriptionGroupMenuProvider.java
Patch:
@@ -83,6 +83,7 @@ private void showGroupDialog(Video item, VideoMenuCallback callback) {
                         ChannelGroup group = new ChannelGroup(newValue, null, new Channel(item.getAuthor(), item.cardImageUrl, item.channelId));
                         mService.addChannelGroup(group);
                         BrowsePresenter.instance(mContext).pinItem(Video.from(group));
+                        MessageHelpers.showMessage(mContext, mContext.getString(R.string.pinned_to_sidebar));
                         return true;
                     });
         }, false));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/providers/channelgroup/RenameGroupMenuProvider.java
Patch:
@@ -41,6 +41,7 @@ public void onClicked(Video item) {
 
                     if (channelGroup != null) {
                         channelGroup.title = newValue;
+                        mService.addChannelGroup(channelGroup);
                     }
 
                     return true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -170,7 +170,7 @@ public Observable<MediaGroup> obtainUploadsObservable(Video item) {
         disposeActions();
 
         return item.hasNestedItems() || item.isChannel() ?
-               mContentService.getGroupObserve(item.mediaItem) :
+               mContentService.getGroupObserve(item.mediaItem != null ? item.mediaItem : SampleMediaItem.from(item)) :
                item.hasReloadPageKey() ?
                mContentService.getGroupObserve(item.getReloadPageKey()) :
                mItemManager.getMetadataObserve(item.videoId, item.playlistId, 0, item.playlistParams)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -1112,7 +1112,7 @@ private int getSectionId(Video item) {
             return -1;
         }
 
-        return item.sectionId == -1 ? item.hashCode() : item.sectionId;
+        return item.sectionId == -1 ? item.getId() : item.sectionId;
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -129,8 +129,9 @@ private void onLongBuffering() {
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < STREAM_END_THRESHOLD_MS) {
             getMainController().onPlayEnd();
         } else if (!mPlayerTweaksData.isNetworkErrorFixingDisabled()) {
-            mPlayerTweaksData.setPlayerDataSource(getNextEngine()); // ???
             MessageHelpers.showLongMessage(getContext(), R.string.applying_fix);
+            mPlayerTweaksData.setPlayerDataSource(getNextEngine()); // ???
+            restartEngine();
         }
 
         // NOTE: useless fixes. Won't fix the buffering actually.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/SimpleEditDialog.java
Patch:
@@ -51,7 +51,7 @@ private static void show(Context context, String defaultValue, OnChange onChange
         }
         KeyHelpers.fixShowKeyboard(editField);
 
-        editField.setText(defaultValue);
+        editField.setHint(defaultValue);
 
         // keep empty, will override below.
         // https://stackoverflow.com/a/15619098/5379584

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/CategoryEmptyError.java
Patch:
@@ -2,8 +2,7 @@
 
 import android.content.Context;
 import com.liskovsoft.smartyoutubetv2.common.R;
-import com.liskovsoft.smartyoutubetv2.common.app.views.SignInView;
-import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.YTSignInPresenter;
 
 public class CategoryEmptyError implements ErrorFragmentData {
     private final Context mContext;
@@ -14,7 +13,7 @@ public CategoryEmptyError(Context context) {
 
     @Override
     public void onAction() {
-        ViewManager.instance(mContext).startView(SignInView.class);
+        YTSignInPresenter.instance(mContext).start();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/SignInError.java
Patch:
@@ -2,8 +2,7 @@
 
 import android.content.Context;
 import com.liskovsoft.smartyoutubetv2.common.R;
-import com.liskovsoft.smartyoutubetv2.common.app.views.SignInView;
-import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.YTSignInPresenter;
 
 public class SignInError implements ErrorFragmentData {
     private final Context mContext;
@@ -14,7 +13,7 @@ public SignInError(Context context) {
 
     @Override
     public void onAction() {
-        ViewManager.instance(mContext).startView(SignInView.class);
+        YTSignInPresenter.instance(mContext).start();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/YTSignInPresenter.java
Patch:
@@ -13,9 +13,9 @@
 
 public class YTSignInPresenter extends SignInPresenter {
     private static final String TAG = YTSignInPresenter.class.getSimpleName();
-    //private static final String SIGN_IN_URL_SHORT = "https://yt.be/activate"; // doesn't support query params, no search history
-    //private static final String SIGN_IN_URL_FULL = "https://youtube.com/tv/activate"; // support query params, no search history
-    private static final String SIGN_IN_URL = "https://youtube.com/activate"; // supports search history
+    private static final String SIGN_IN_URL = "https://yt.be/activate"; // 18+, no search history
+    //private static final String SIGN_IN_URL = "https://youtube.com/tv/activate"; // 18+, no search history
+    //private static final String SIGN_IN_URL = "https://youtube.com/activate"; // age restricted, supports search history
     @SuppressLint("StaticFieldLeak")
     private static YTSignInPresenter sInstance;
     private final ServiceManager mService;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -62,7 +62,8 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
 
         Log.d(TAG, "Starting %s...", this.getClass().getSimpleName());
 
-        mIsOculusQuestFixEnabled = PlayerTweaksData.instance(this).isOculusQuestFixEnabled();
+        //mIsOculusQuestFixEnabled = PlayerTweaksData.instance(this).isOculusQuestFixEnabled();
+        mIsOculusQuestFixEnabled = Utils.isOculusQuest();
         mIsFullscreenModeEnabled = GeneralData.instance(this).isFullscreenModeEnabled();
 
         initDpi();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -225,7 +225,6 @@ public Observable<List<MediaGroup>> obtainChannelObservable(String channelId) {
 
     public void updateRows(List<MediaGroup> mediaGroups) {
         if (getView() == null) { // starting from outside (e.g. MediaServiceManager)
-            disposeActions();
             mChannelId = null;
             mPendingGroups.add(mediaGroups);
             ViewManager.instance(getContext()).startView(ChannelView.class);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -256,8 +256,6 @@ private void update(Observable<MediaGroup> group) {
     }
 
     public void update(MediaGroup mediaGroup) {
-        disposeActions();
-
         if (getView() == null) { // starting from outside (e.g. MediaServiceManager)
             mVideoItem = null;
             mRootGroup = mediaGroup; // start loading from this group

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/GlideCachingModule.java
Patch:
@@ -12,7 +12,7 @@
  * https://stackoverflow.com/questions/46108915/how-to-increase-the-cache-size-in-glide-android
  */
 @GlideModule
-public class CacheGlideModule extends AppGlideModule {
+public class GlideCachingModule extends AppGlideModule {
     private final static long CACHE_SIZE = 10 * 1024 * 1024; // 10 MB
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -101,6 +101,7 @@ public void onFinish() {
         // Otherwise keep the cache to easily restore in case activity is killed by the system.
         mChannelId = null;
         mPendingGroups.clear();
+        disposeActions();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -24,6 +24,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.views.ChannelUploadsView;
 import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
 import com.liskovsoft.smartyoutubetv2.common.misc.DeArrowProcessor;
+import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
 import com.liskovsoft.youtubeapi.service.YouTubeServiceManager;
 import io.reactivex.Observable;
 import io.reactivex.disposables.Disposable;
@@ -81,6 +82,7 @@ public void onFinish() {
         // Otherwise keep the cache to easily restore in case activity is killed by the system.
         mVideoItem = null;
         mRootGroup = null;
+        disposeActions();
     }
 
     @Override
@@ -177,6 +179,7 @@ public Observable<MediaGroup> obtainUploadsObservable(Video item) {
 
     private void disposeActions() {
         RxHelper.disposeActions(mUpdateAction, mScrollAction);
+        MediaServiceManager.instance().disposeActions();
     }
 
     private void continueGroup(VideoGroup group) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -298,7 +298,7 @@ public void authCheck(Runnable onSuccess, Runnable onError) {
     }
 
     public void disposeActions() {
-        RxHelper.disposeActions(mMetadataAction, mUploadsAction, mSignCheckAction);
+        RxHelper.disposeActions(mMetadataAction, mUploadsAction, mSignCheckAction, mRowsAction, mSubscribedChannelsAction);
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -622,14 +622,12 @@ public static void chooseChannelPresenter(Context context, Video item) {
             if (type == MediaGroup.TYPE_CHANNEL_UPLOADS) {
                 if (atomicIndex.incrementAndGet() == 1) {
                     ChannelUploadsPresenter.instance(context).clear();
-                    //ViewManager.instance(context).startView(ChannelUploadsView.class);
                 }
                 ChannelUploadsPresenter.instance(context).update(group.get(0));
             } else if (type == MediaGroup.TYPE_CHANNEL) {
                 if (atomicIndex.incrementAndGet() == 1) {
                     ChannelPresenter.instance(context).clear();
                     ChannelPresenter.instance(context).setChannel(item);
-                    //ViewManager.instance(context).startView(ChannelView.class);
                 }
                 ChannelPresenter.instance(context).updateRows(group);
             } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -87,7 +87,7 @@ public void onInit() {
     }
 
     @Override
-    public void openVideo(Video item) {
+    public void onNewVideo(Video item) {
         mSkipExclude = false;
         if (getPlayer() != null) {
             getPlayer().setSeekBarSegments(null); // reset colors

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -96,7 +96,7 @@ public void onInit() {
     }
 
     @Override
-    public void openVideo(Video item) {
+    public void onNewVideo(Video item) {
         enableUiAutoHideTimeout();
 
         if (item != null && getPlayer() != null && !item.equals(getPlayer().getVideo())) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -54,7 +54,7 @@ public void onDataChange() {
     }
 
     @Override
-    public void openVideo(Video item) {
+    public void onNewVideo(Video item) {
         if (item != null) {
             Log.d(TAG, "Open video. Is remote connected: %s", mConnected);
             item.isRemote = mConnected;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -66,7 +66,7 @@ public void onInit() {
     }
 
     @Override
-    public void openVideo(Video video) {
+    public void onNewVideo(Video video) {
         // Remote control fix. Slow network fix. Suggestions may still be loading.
         // This could lead to changing current video info (title, id etc) to wrong one.
         disposeActions();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -89,7 +89,7 @@ public void onInit() {
     }
 
     @Override
-    public void openVideo(Video item) {
+    public void onNewVideo(Video item) {
         if (item == null) {
             return;
         }
@@ -435,7 +435,7 @@ private void openVideoInt(Video item) {
         if (item.hasVideo()) {
             // NOTE: Next clicked: instant playback even a mix
             // NOTE: Bypass PIP fullscreen on next caused by startView
-            getMainController().openVideo(item);
+            getMainController().onNewVideo(item);
             //getPlayer().showOverlay(true);
         } else {
             VideoActionPresenter.instance(getContext()).apply(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -55,7 +55,7 @@ public void onInit() { // called each time a video opened from the browser
      * or video is opened from the intent
      */
     @Override
-    public void openVideo(Video item) {
+    public void onNewVideo(Video item) {
         // Ensure that we aren't running on presenter init stage
         if (getPlayer() != null) {
             if (!item.equals(getVideo())) { // video might be opened twice (when remote connection enabled). Fix for that.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEventListener.java
Patch:
@@ -6,7 +6,7 @@
 import com.liskovsoft.smartyoutubetv2.common.misc.TickleManager.TickleListener;
 
 public interface PlayerEventListener extends PlayerUiEventListener, PlayerEngineEventListener, ViewEventListener, TickleListener {
-    void openVideo(Video item);
+    void onNewVideo(Video item);
     void onMetadata(MediaItemMetadata metadata);
     /**
      * Called after creation of {@link PlayerManager}

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/CacheGlideModule.java
Patch:
@@ -12,7 +12,7 @@
  * https://stackoverflow.com/questions/46108915/how-to-increase-the-cache-size-in-glide-android
  */
 @GlideModule
-public class GlideModuleImpl extends AppGlideModule {
+public class CacheGlideModule extends AppGlideModule {
     private final static long CACHE_SIZE = 1024 * 1024 * 5; // 5 MB
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/GlideModuleImpl.java
Patch:
@@ -12,13 +12,14 @@
  * https://stackoverflow.com/questions/46108915/how-to-increase-the-cache-size-in-glide-android
  */
 @GlideModule
-public class CacheGlideModule extends AppGlideModule {
+public class GlideModuleImpl extends AppGlideModule {
     private final static long CACHE_SIZE = 1024 * 1024 * 5; // 5 MB
 
     @Override
     public void applyOptions(Context context, GlideBuilder builder) {
         //if (MyApplication.from(context).isTest())
         //    return; // NOTE: StatFs will crash on robolectric.
+        // Limit cache size
         builder.setDiskCache(new InternalCacheDiskCacheFactory(context, CACHE_SIZE));
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -146,7 +146,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
                 .apply(ViewUtil.glideOptions())
                 // improve image compression on low end devices
                 .override(mWidth, mHeight)
-                .diskCacheStrategy(DiskCacheStrategy.ALL)
+                .diskCacheStrategy(DiskCacheStrategy.ALL) // com.liskovsoft.smartyoutubetv2.tv.util.CacheGlideModule
                 .listener(mErrorListener)
                 .error(
                     // Updated thumbnail url not found

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -484,7 +484,7 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
             }
         } else if (Helpers.containsAny(message, "Exception in CronetUrlRequest")) {
             mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
-        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404")) {
+        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404", "Response code: 503")) {
             // "Response code: 403" (url deciphered incorrectly)
             // "Response code: 404" (not sure whether below helps)
             // "Response code: 503" (not sure whether below helps)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -378,7 +378,7 @@ private void initColorSchemes() {
     }
 
     private void restoreState() {
-        String data = mPrefs.getData(MAIN_UI_DATA);
+        String data = mPrefs.getProfileData(MAIN_UI_DATA);
 
         String[] split = Helpers.splitData(data);
 
@@ -416,7 +416,7 @@ private void restoreState() {
 
     @Override
     protected void persistState() {
-        mPrefs.setData(MAIN_UI_DATA, Helpers.mergeData(mIsCardAnimatedPreviewsEnabled,
+        mPrefs.setProfileData(MAIN_UI_DATA, Helpers.mergeData(mIsCardAnimatedPreviewsEnabled,
                 mVideoGridScale, mUIScale, mColorSchemeIndex, mIsCardMultilineTitleEnabled,
                 mChannelCategorySorting, mPlaylistsStyle, mCardTitleLinesNum, mIsCardTextAutoScrollEnabled,
                 mIsUploadsOldLookEnabled, mIsUploadsAutoLoadEnabled, mCardTextScrollSpeed, mMenuItems, mTopButtons,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/SubtitleManager.java
Patch:
@@ -16,6 +16,7 @@
 import com.google.android.exoplayer2.text.Cue;
 import com.google.android.exoplayer2.text.TextOutput;
 import com.google.android.exoplayer2.ui.SubtitleView;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
 import com.liskovsoft.smartyoutubetv2.common.prefs.common.DataChangeBase.OnDataChange;
@@ -102,7 +103,7 @@ private List<Cue> forceCenterAlignment(List<Cue> cues) {
         for (Cue cue : cues) {
             // Autogenerated subs repeated lines fix
             // if (cue.text.toString().endsWith("\n")) {
-            if (subsBuffer == null || !cue.text.toString().contains(subsBuffer)) {
+            if (Helpers.endsWithAny(cue.text.toString(), "\n", " ")) {
                 subsBuffer = cue.text;
             } else {
                 CharSequence text = subsBuffer != null ? cue.text.toString().replace(subsBuffer, "") : cue.text;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -80,7 +80,7 @@ public void onViewInitialized() {
         }
 
         if (ViewManager.instance(getContext()).isFinished()) {
-            Utils.restartTheApp(getContext());
+            Utils.restartTheApp(getContext(), getView().getNewIntent());
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/SubtitleManager.java
Patch:
@@ -101,7 +101,8 @@ private List<Cue> forceCenterAlignment(List<Cue> cues) {
 
         for (Cue cue : cues) {
             // Autogenerated subs repeated lines fix
-            if (cue.text.toString().endsWith("\n")) {
+            // if (cue.text.toString().endsWith("\n")) {
+            if (subsBuffer == null || !cue.text.toString().contains(subsBuffer)) {
                 subsBuffer = cue.text;
             } else {
                 CharSequence text = subsBuffer != null ? cue.text.toString().replace(subsBuffer, "") : cue.text;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -467,6 +467,9 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
 
         if (Helpers.startsWithAny(message, "Unable to connect to")) {
             // No internet connection
+            if (!mPlayerTweaksData.isNetworkErrorFixingDisabled()) {
+                mPlayerTweaksData.setPlayerDataSource(getNextEngine()); // ???
+            }
             MessageHelpers.showLongMessage(getContext(), errorTitle + "\n" + message);
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -381,7 +381,8 @@ private void safeStartActivity(Context context, Intent intent) {
     private void safeStartActivityInt(Context context, Intent intent) {
         try {
             context.startActivity(intent);
-        } catch (IllegalArgumentException | ActivityNotFoundException | IndexOutOfBoundsException e) {
+        } catch (IllegalArgumentException | ActivityNotFoundException | IndexOutOfBoundsException | NullPointerException e) {
+            // NPE: Attempt to write to field 'boolean com.android.server.am.ActivityStack.mConfigWillChange' on a null object reference
             Log.e(TAG, "Error when starting activity: %s", e.getMessage());
             MessageHelpers.showLongMessage(context, e.getLocalizedMessage());
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -67,7 +67,9 @@ private void setTitle(String userCode, String signInUrl) {
 
         Glide.with(getContext())
                 .load(Utils.toQrCodeLink(mFullSignInUrl))
-                .apply(ViewUtil.glideOptions()).error(ContextCompat.getDrawable(getContext(), R.drawable.activate_account_qrcode))
+                .placeholder(R.drawable.activate_account_qrcode)
+                .apply(ViewUtil.glideOptions())
+                .error(R.drawable.activate_account_qrcode)
                 .listener(mErrorListener)
                 .into(getGuidanceStylist().getIconView());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -478,7 +478,7 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
             }
         } else if (Helpers.containsAny(message, "Exception in CronetUrlRequest")) {
             mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
-        } else if (Helpers.startsWithAny(message, "Response code: 403")) {
+        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404")) {
             // "Response code: 403" (url deciphered incorrectly)
             // "Response code: 404" (not sure whether below helps)
             // "Response code: 503" (not sure whether below helps)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -128,6 +128,9 @@ private void onLongBuffering() {
         if ((!mLastVideo.isLive || mLastVideo.isLiveEnd) &&
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < STREAM_END_THRESHOLD_MS) {
             getMainController().onPlayEnd();
+        } else if (!mPlayerTweaksData.isNetworkErrorFixingDisabled()) {
+            mPlayerTweaksData.setPlayerDataSource(getNextEngine()); // ???
+            MessageHelpers.showLongMessage(getContext(), R.string.applying_fix);
         }
 
         // NOTE: useless fixes. Won't fix the buffering actually.
@@ -461,9 +464,6 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
 
         if (Helpers.startsWithAny(message, "Unable to connect to")) {
             // No internet connection
-            if (!mPlayerTweaksData.isNetworkErrorFixingDisabled()) {
-                mPlayerTweaksData.setPlayerDataSource(getNextEngine()); // ???
-            }
             MessageHelpers.showLongMessage(getContext(), errorTitle + "\n" + message);
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -364,7 +364,7 @@ public void remove(Video video) {
 
     public void add(Video video) {
         int size = getSize();
-        add(size > 0 ? (size - 1) : 0, video);
+        add(size != -1 ? size : 0, video);
     }
 
     public void add(int idx, Video video) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -588,7 +588,7 @@ public boolean belongsToNotifications() {
     }
 
     private boolean belongsToGroup(int groupId) {
-        return getGroup() != null && getGroup().getMediaGroup() != null && getGroup().getMediaGroup().getType() == groupId;
+        return getGroup() != null && getGroup().getType() == groupId;
     }
 
     public boolean belongsToSection() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -721,6 +721,7 @@ private void updateVideoGrid(BrowseSection section, Observable<MediaGroup> group
                         error -> {
                             Log.e(TAG, "updateGridHeader error: %s", error.getMessage());
                             VideoGroup videoGroup = VideoGroup.from(null, section, column);
+                            videoGroup.setType(MediaGroup.TYPE_HISTORY);
                             appendLocalHistory(videoGroup);
                             getView().updateSection(videoGroup);
                             handleLoadError();
@@ -1102,7 +1103,7 @@ private void appendLocalHistory(@NonNull VideoGroup videoGroup) {
         }
 
         for (State state : stateService.getStates()) {
-            videoGroup.getVideos().add(0, state.video);
+            videoGroup.add(0, state.video);
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -47,6 +47,7 @@ public class VideoLoaderController extends BasePlayerController implements OnDat
     private SuggestionsController mSuggestionsController;
     private PlayerData mPlayerData;
     private PlayerTweaksData mPlayerTweaksData;
+    private GeneralData mGeneralData;
     private long mSleepTimerStartMs;
     private Disposable mFormatInfoAction;
     private Disposable mMpdStreamAction;
@@ -83,6 +84,7 @@ public void onInit() {
         mPlayerData.setOnChange(this);
         mPlayerTweaksData = PlayerTweaksData.instance(getContext());
         mSleepTimerStartMs = System.currentTimeMillis();
+        mGeneralData = GeneralData.instance(getContext());
     }
 
     @Override
@@ -338,6 +340,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
         String bgImageUrl = null;
 
         mLastVideo.sync(formatInfo);
+        mGeneralData.setHistoryBroken(formatInfo.isHistoryBroken());
 
         if (formatInfo.isUnplayable()) {
             getPlayer().setTitle(formatInfo.getPlayabilityStatus());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -710,7 +710,7 @@ private void updateVideoGrid(BrowseSection section, Observable<MediaGroup> group
                             }
 
                             VideoGroup videoGroup = VideoGroup.from(mediaGroup, section, column);
-                            //appendLocalHistory(videoGroup);
+                            appendLocalHistory(videoGroup);
                             getView().updateSection(videoGroup);
                             mDeArrowProcessor.process(videoGroup);
 
@@ -1079,7 +1079,7 @@ private void handleLoadError() {
     }
 
     private void appendLocalHistory(VideoGroup videoGroup) {
-        if (!isHistorySection()) {
+        if (!isHistorySection() || !mGeneralData.isHistoryBroken()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -478,7 +478,8 @@ private void updateHistory() {
         Video video = getVideo();
 
         if (video == null || (video.isShorts && mGeneralData.isHideShortsFromHistoryEnabled()) ||
-                mIncognito || getPlayer() == null || !getPlayer().containsMedia() || (video.isRemote && mRemoteControlData.isRemoteHistoryDisabled())) {
+                mIncognito || getPlayer() == null || !getPlayer().containsMedia() ||
+                (video.isRemote && mRemoteControlData.isRemoteHistoryDisabled()) || mGeneralData.getHistoryState() == GeneralData.HISTORY_DISABLED) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -366,7 +366,9 @@ public boolean shouldContinueTheGroup(Context context, VideoGroup group, boolean
     }
 
     public void enableHistory(boolean enable) {
-        RxHelper.runAsyncUser(() -> mContentService.enableHistory(enable));
+        if (enable) { // don't disable history for other clients
+            RxHelper.runAsyncUser(() -> mContentService.enableHistory(true));
+        }
     }
 
     public void clearHistory() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -365,6 +365,6 @@ private void enablePlayerOnlyModeIfNeeded(Intent intent) {
 
         boolean isInternalIntent = intent.getBooleanExtra(GlobalConstants.INTERNAL_INTENT, false);
 
-        viewManager.enablePlayerOnlyMode(!isInternalIntent || GeneralData.instance(getContext()).isReturnToLauncherEnabled());
+        viewManager.enablePlayerOnlyMode(!isInternalIntent && GeneralData.instance(getContext()).isReturnToLauncherEnabled());
     }
 }

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/utils/AppUtil.java
Patch:
@@ -57,7 +57,7 @@ public Intent createAppIntent(String url) {
         intent.setAction(Intent.ACTION_VIEW);
         intent.setData(Uri.parse(url));
         intent.setClassName(getAppPackageName(), getBootstrapClassName());
-        intent.putExtra(GlobalConstants.INTERNAL_INTENT, true);
+        //intent.putExtra(GlobalConstants.INTERNAL_INTENT, true);
 
         return intent;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -340,7 +340,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
             mSuggestionsController.loadSuggestions(mLastVideo);
             bgImageUrl = mLastVideo.getBackgroundUrl();
             scheduleNextVideoTimer(5_000);
-            YouTubeServiceManager.instance().invalidateCache();
+            YouTubeServiceManager.instance().invalidatePlaybackCache();
         } else if (formatInfo.containsDashVideoInfo() && acceptDashVideoInfo(formatInfo)) {
             Log.d(TAG, "Found regular video in dash format. Loading...");
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -340,6 +340,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
             mSuggestionsController.loadSuggestions(mLastVideo);
             bgImageUrl = mLastVideo.getBackgroundUrl();
             scheduleNextVideoTimer(5_000);
+            YouTubeServiceManager.instance().invalidateCache();
         } else if (formatInfo.containsDashVideoInfo() && acceptDashVideoInfo(formatInfo)) {
             Log.d(TAG, "Found regular video in dash format. Loading...");
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -453,9 +453,10 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
             }
         } else if (Helpers.containsAny(message, "Exception in CronetUrlRequest")) {
             mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
-        } else if (Helpers.startsWithAny(message, "Response code: 403", "Response code: 404")) {
+        } else if (Helpers.startsWithAny(message, "Response code: 403")) {
             // "Response code: 403" (url deciphered incorrectly)
             // "Response code: 404" (not sure whether below helps)
+            // "Response code: 503" (not sure whether below helps)
             YouTubeServiceManager.instance().applyNoPlaybackFix();
         } else if (type == PlayerEventListener.ERROR_TYPE_SOURCE && rendererIndex == PlayerEventListener.RENDERER_INDEX_UNKNOWN &&
                 !mPlayerTweaksData.isNetworkErrorFixingDisabled()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/VolumeBooster.java
Patch:
@@ -29,7 +29,7 @@ public void onAudioSessionId(int audioSessionId) {
             mBooster = new LoudnessEnhancer(audioSessionId);
             mBooster.setEnabled(mEnabled);
             mBooster.setTargetGain((int) (1000 * mVolume));
-        } catch (RuntimeException | UnsatisfiedLinkError | NoClassDefFoundError e) { // Cannot initialize effect engine
+        } catch (RuntimeException | UnsatisfiedLinkError | NoClassDefFoundError | NoSuchFieldError e) { // Cannot initialize effect engine
             e.printStackTrace();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -444,10 +444,10 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
         }
 
         if (error instanceof OutOfMemoryError) {
-            if (mPlayerData.getVideoBufferType() == PlayerData.BUFFER_NONE) {
+            if (mPlayerData.getVideoBufferType() == PlayerData.BUFFER_LOWEST) {
                 mPlayerTweaksData.enableSectionPlaylist(false);
             } else if (mPlayerData.getVideoBufferType() == PlayerData.BUFFER_LOW) {
-                mPlayerData.setVideoBufferType(PlayerData.BUFFER_NONE);
+                mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOWEST);
             } else {
                 mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/manager/PlayerEngineConstants.java
Patch:
@@ -14,7 +14,7 @@ public interface PlayerEngineConstants {
     int BACKGROUND_MODE_SOUND = 1;
     int BACKGROUND_MODE_PIP = 2;
     int BACKGROUND_MODE_PLAY_BEHIND = 3;
-    int BUFFER_NONE = 3;
+    int BUFFER_LOWEST = 3;
     int BUFFER_LOW = 0;
     int BUFFER_MEDIUM = 1;
     int BUFFER_HIGH = 2;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -117,7 +117,7 @@ private DefaultLoadControl createLoadControl() {
                 minBufferMs = 30_000;
                 maxBufferMs = 30_000;
                 break;
-            case PlayerData.BUFFER_NONE:
+            case PlayerData.BUFFER_LOWEST:
                 minBufferMs = 5_000; // LIVE fix
                 maxBufferMs = 5_000; // LIVE fix
                 //bufferForPlaybackMs = 1_000;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -307,7 +307,7 @@ private static void setFormat(FormatItem formatItem, PlayerData playerData, Runn
     public static OptionCategory createVideoBufferCategory(Context context, PlayerData playerData, Runnable onBufferSelected) {
         String videoBufferTitle = context.getString(R.string.video_buffer);
         List<OptionItem> optionItems = new ArrayList<>();
-        optionItems.add(createVideoBufferOption(context, playerData, R.string.video_buffer_size_none, PlayerData.BUFFER_NONE, onBufferSelected));
+        optionItems.add(createVideoBufferOption(context, playerData, R.string.video_buffer_size_lowest, PlayerData.BUFFER_LOWEST, onBufferSelected));
         optionItems.add(createVideoBufferOption(context, playerData, R.string.video_buffer_size_low, PlayerData.BUFFER_LOW, onBufferSelected));
         optionItems.add(createVideoBufferOption(context, playerData, R.string.video_buffer_size_med, PlayerData.BUFFER_MEDIUM, onBufferSelected));
         optionItems.add(createVideoBufferOption(context, playerData, R.string.video_buffer_size_high, PlayerData.BUFFER_HIGH, onBufferSelected));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -118,8 +118,8 @@ private DefaultLoadControl createLoadControl() {
                 maxBufferMs = 30_000;
                 break;
             case PlayerData.BUFFER_NONE:
-                minBufferMs = 2_000; // LIVE fix
-                maxBufferMs = 2_000; // LIVE fix
+                minBufferMs = 5_000; // LIVE fix
+                maxBufferMs = 5_000; // LIVE fix
                 bufferForPlaybackMs = 1_000;
                 bufferForPlaybackAfterRebufferMs = 1_000;
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -118,8 +118,8 @@ private DefaultLoadControl createLoadControl() {
                 maxBufferMs = 30_000;
                 break;
             case PlayerData.BUFFER_NONE:
-                minBufferMs = 1_000;
-                maxBufferMs = 1_000;
+                minBufferMs = 2_000; // LIVE fix
+                maxBufferMs = 2_000; // LIVE fix
                 bufferForPlaybackMs = 1_000;
                 bufferForPlaybackAfterRebufferMs = 1_000;
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -121,7 +121,7 @@ private DefaultLoadControl createLoadControl() {
                 minBufferMs = 1_000;
                 maxBufferMs = 1_000;
                 bufferForPlaybackMs = 1_000;
-                bufferForPlaybackAfterRebufferMs = 0;
+                bufferForPlaybackAfterRebufferMs = 1_000;
                 break;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -227,6 +227,7 @@ public void updateRows(List<MediaGroup> mediaGroups) {
             disposeActions();
             mChannelId = null;
             mPendingGroups.add(mediaGroups);
+            ViewManager.instance(getContext()).startView(ChannelView.class);
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -623,14 +623,14 @@ public static void chooseChannelPresenter(Context context, Video item) {
             if (type == MediaGroup.TYPE_CHANNEL_UPLOADS) {
                 if (atomicIndex.incrementAndGet() == 1) {
                     ChannelUploadsPresenter.instance(context).clear();
-                    ViewManager.instance(context).startView(ChannelUploadsView.class);
+                    //ViewManager.instance(context).startView(ChannelUploadsView.class);
                 }
                 ChannelUploadsPresenter.instance(context).update(group.get(0));
             } else if (type == MediaGroup.TYPE_CHANNEL) {
                 if (atomicIndex.incrementAndGet() == 1) {
                     ChannelPresenter.instance(context).clear();
                     ChannelPresenter.instance(context).setChannel(item);
-                    ViewManager.instance(context).startView(ChannelView.class);
+                    //ViewManager.instance(context).startView(ChannelView.class);
                 }
                 ChannelPresenter.instance(context).updateRows(group);
             } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -53,7 +53,7 @@ public boolean add(PlayerEventListener listener) {
     };
     private Video mPendingVideo;
     // Fix for using destroyed view
-    private WeakReference<PlaybackView> mPlayer;
+    private WeakReference<PlaybackView> mPlayer = new WeakReference<>(null);
 
     private PlaybackPresenter(Context context) {
         super(context);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AddDevicePresenter.java
Patch:
@@ -51,7 +51,9 @@ public void onViewInitialized() {
     }
 
     public void onActionClicked() {
-        getView().close();
+        if (getView() != null) {
+            getView().close();
+        }
     }
 
     private void updateDeviceCode() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -81,7 +81,9 @@ private void setTitle(String userCode, String signInUrl) {
 
     @Override
     public void close() {
-        getActivity().finish();
+        if (getActivity() != null) {
+            getActivity().finish();
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/BasePlayerController.java
Patch:
@@ -35,7 +35,7 @@ public PlayerManager getPlayer() {
     }
 
     public Context getContext() {
-        return mMainController != null ? mMainController.getActivity() : mContext;
+        return mMainController != null ? mMainController.getContext() : mContext;
     }
 
     public Activity getActivity() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -369,8 +369,8 @@ private void releasePlayer() {
             Log.d(TAG, "releasePlayer: Start releasing player engine...");
             mPlaybackPresenter.onEngineReleased();
             destroyPlayerObjects();
-            // Improve memory usage???
-            Runtime.getRuntime().gc();
+            // Improve memory usage??? May cause early view destroy on some devices.
+            //Runtime.getRuntime().gc();
         }
     }
 
@@ -1124,7 +1124,7 @@ public void setVideoRotation(int angle) {
     @Override
     public void onDestroyView() {
         super.onDestroyView();
-        mPlaybackPresenter.onViewDestroyed();
+        //mPlaybackPresenter.onViewDestroyed();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -226,8 +226,8 @@ private void continueGroup(VideoGroup group) {
     }
 
     private void update(Video item) {
-        // Enable for liked music (behavior with other playlists is buggy)
-        if (item.isSectionPlaylistEnabled(getContext()) && Helpers.equals(item.playlistId, "LM")) {
+        // Liked music fix - not all videos displayed. The behavior with other playlists is buggy.
+        if (Helpers.equals(item.playlistId, "LM")) {
             update(item.getGroup());
         } else {
             update(obtainUploadsObservable(item));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -773,7 +773,7 @@ public void sync(VideoStateService.State state) {
     }
 
     public boolean isSectionPlaylistEnabled(Context context) {
-        return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && hasVideo() && getGroup() != null &&
+        return PlayerTweaksData.instance(context).isSectionPlaylistEnabled() && getGroup() != null &&
                 (playlistId == null || nextMediaItem == null || belongsToSearch()) && (!isRemote || remotePlaylistId == null);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaGroup;
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaItem;
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaItemMetadata;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxHelper;
@@ -225,7 +226,8 @@ private void continueGroup(VideoGroup group) {
     }
 
     private void update(Video item) {
-        if (item.isSectionPlaylistEnabled(getContext())) {
+        // Enable for liked music (behavior with other playlists is buggy)
+        if (item.isSectionPlaylistEnabled(getContext()) && Helpers.equals(item.playlistId, "LM")) {
             update(item.getGroup());
         } else {
             update(obtainUploadsObservable(item));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -520,7 +520,7 @@ private void appendRemoveFromNotificationsButton() {
     }
 
     private void appendMarkAsWatchedButton() {
-        if (mVideo == null || !mIsMarkAsWatchedButtonEnabled) {
+        if (mVideo == null || !mVideo.hasVideo() || !mIsMarkAsWatchedButtonEnabled) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/BasePlayerController.java
Patch:
@@ -31,7 +31,7 @@ protected <T extends PlayerEventListener> T getController(Class<T> clazz) {
     }
 
     public PlayerManager getPlayer() {
-        return mMainController != null ? mMainController.getView() : null;
+        return mMainController != null ? mMainController.getPlayer() : null;
     }
 
     public Context getContext() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -691,7 +691,9 @@ private void loadRandomNext() {
 
     private int getNextEngine() {
         int currentEngine = mPlayerTweaksData.getPlayerDataSource();
-        int[] engineList = { PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET, PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT, PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP };
+        int[] engineList = Utils.skipCronet() ?
+                new int[] { PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT, PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP } :
+                new int[] { PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET, PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT, PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP };
         return Helpers.getNextValue(currentEngine, engineList);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -597,9 +597,7 @@ private void restoreData() {
         mIsSpeedButtonOldBehaviorEnabled = Helpers.parseBoolean(split, 23, false);
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
         mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, true);
-        // Android 6 and below may crash running Cronet???
-        mPlayerDataSource = Helpers.parseInt(split, 26, VERSION.SDK_INT <= 23 || Helpers.equals(BuildConfig.FLAVOR, "strtarmenia") ?
-                 PLAYER_DATA_SOURCE_DEFAULT : PLAYER_DATA_SOURCE_CRONET);
+        mPlayerDataSource = Helpers.parseInt(split, 26, Utils.skipCronet() ? PLAYER_DATA_SOURCE_DEFAULT : PLAYER_DATA_SOURCE_CRONET);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);
         mIsSonyFrameDropFixEnabled = Helpers.parseBoolean(split, 29, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -57,7 +57,7 @@ public class ExoPlayerController implements Player.EventListener, PlayerControll
     public ExoPlayerController(Context context) {
         PlayerTweaksData playerTweaksData = PlayerTweaksData.instance(context);
         mContext = context.getApplicationContext();
-        mMediaSourceFactory = ExoMediaSourceFactory.instance(context);
+        mMediaSourceFactory = new ExoMediaSourceFactory(context);
         mTrackSelectorManager = new TrackSelectorManager(context);
         mTrackFormatter = new TrackInfoFormatter2();
         mTrackFormatter.enableBitrate(PlayerTweaksData.instance(context).isQualityInfoBitrateEnabled());
@@ -189,6 +189,7 @@ public boolean containsMedia() {
     @Override
     public void release() {
         mTrackSelectorManager.release();
+        mMediaSourceFactory.release();
 
         if (mPlayer != null) {
             mPlayer.removeListener(this);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/AccountSelectionPresenter.java
Patch:
@@ -135,7 +135,6 @@ private void nextAccountOrDialog(List<Account> accounts) {
 
     public void selectAccount(Account account) {
         mSignInService.selectAccount(account);
-        ExoMediaSourceFactory.unhold();
         BrowsePresenter.instance(getContext()).refresh(false);
         Utils.updateChannels(getContext());
         //BrowsePresenter.instance(getContext()).onViewInitialized(); // reset state

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/AccountSettingsPresenter.java
Patch:
@@ -167,7 +167,6 @@ private String getSimpleName(Account account) {
 
     private void removeAccount(Account account) {
         mMediaServiceManager.getSingInService().removeAccount(account);
-        ExoMediaSourceFactory.unhold();
         BrowsePresenter.instance(getContext()).refresh(false);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -612,8 +612,7 @@ private void appendProxyManager(AppDialogPresenter settingsPresenter, List<Optio
                         if (option.isSelected()) {
                             settingsPresenter.closeDialog();
                         }
-
-                        ExoMediaSourceFactory.unhold(); // reset data source
+                        
                         OkHttpManager.unhold();
                     },
                     mGeneralData.isProxyEnabled()));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -484,23 +484,20 @@ private void appendNetworkEngineCategory(AppDialogPresenter settingsPresenter) {
                 getContext().getString(R.string.default_stack_desc),
                 option -> {
                     mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
-                    ExoMediaSourceFactory.unhold();
                 },
                 mPlayerTweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT));
 
         options.add(UiOptionItem.from("Cronet",
                 getContext().getString(R.string.cronet_desc),
                 option -> {
                     mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET);
-                    ExoMediaSourceFactory.unhold();
                 },
                 mPlayerTweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET));
 
         options.add(UiOptionItem.from("OkHttp",
                 getContext().getString(R.string.okhttp_desc),
                 option -> {
                     mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP);
-                    ExoMediaSourceFactory.unhold();
                 },
                 mPlayerTweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -38,7 +38,7 @@
 public class VideoLoaderController extends PlayerEventListenerHelper implements OnDataChange {
     private static final String TAG = VideoLoaderController.class.getSimpleName();
     private static final long STREAM_END_THRESHOLD_MS = 180_000;
-    private static final long LONG_BUFFERING_THRESHOLD_MS = 20_000;
+    private static final long LONG_BUFFERING_THRESHOLD_MS = 10_000;
     private final Playlist mPlaylist;
     private final UniqueRandom mRandom;
     private Video mLastVideo;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -542,7 +542,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                         //    }
                         //}
 
-                        if (compare == 0) {
+                        if (compare == 0 && MediaTrack.preferByDrc(originTrack, result, mediaTrack)) {
                             if (MediaTrack.codecEquals(mediaTrack, originTrack)) {
                                 result = mediaTrack;
                             } else if (!MediaTrack.codecEquals(result, originTrack) &&

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GDriveBackupManager.java
Patch:
@@ -186,7 +186,7 @@ private void logIn(Runnable onDone) {
     }
 
     private boolean checkFileName(String name) {
-        return Helpers.endsWith(name, mBackupNames);
+        return Helpers.endsWithAny(name, mBackupNames);
     }
 
     private String fixAltPackageName(String name) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/IntentExtractor.java
Patch:
@@ -196,7 +196,7 @@ && extractUri(intent) != null
     public static boolean isRootUrl(Intent intent) {
         return intent != null
                 && extractUri(intent) != null
-                && (extractUri(intent).toString().endsWith(".com/") || extractUri(intent).toString().endsWith(".com"));
+                && Helpers.endsWithAny(extractUri(intent).toString(), ".com/", ".com", ".com/launch=remote");
     }
 
     public static boolean isStartVoiceCommand(Intent intent) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -73,7 +73,7 @@ public static String buildHighBitrateMark(Format format) {
         }
 
         // Unicode chars: https://symbl.cc/en/search/?q=mark
-        return format.containerMimeType == null ? HIGH_BITRATE_MARK : "";
+        return format.containerMimeType == null && format.height >= 1080 ? HIGH_BITRATE_MARK : "";
     }
 
     public static String buildHDRString(Format format) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -500,6 +500,8 @@ private void startChapterNotificationServiceIfNeededInt() {
 
     private void appendChaptersIfNeeded(MediaItemMetadata mediaItemMetadata) {
         mChapters = mediaItemMetadata.getChapters();
+        // Reset chapter title
+        getPlayer().setSeekPreviewTitle(mChapters != null ? "..." : null); // add placeholder to fix control panel animation on the first run
 
         addChapterMarkersIfNeeded();
         appendChapterSuggestionsIfNeeded();
@@ -527,9 +529,6 @@ private void markAsQueueIfNeeded(Video item) {
     }
 
     private void focusCurrentChapter() {
-        // Reset chapter title
-        getPlayer().setSeekPreviewTitle(mChapters != null ? "..." : null); // add placeholder to fix control panel animation on the first run
-
         if (!getPlayer().isControlsShown()) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -488,7 +488,9 @@ private void applyGenericErrorAction(int type, int rendererIndex, Throwable erro
             return;
         }
 
-        if (error instanceof OutOfMemoryError) {
+        if (Helpers.containsAny(error.getMessage(), "Exception in CronetUrlRequest")) {
+            mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
+        } else if (error instanceof OutOfMemoryError) {
             if (mPlayerData.getVideoBufferType() == PlayerData.BUFFER_LOW) {
                 mPlayerTweaksData.enableSectionPlaylist(false);
             } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEngineEventListener.java
Patch:
@@ -26,6 +26,7 @@ public interface PlayerEngineEventListener {
      * The error was an {@link OutOfMemoryError}.
      */
     int ERROR_TYPE_OUT_OF_MEMORY = ExoPlaybackException.TYPE_OUT_OF_MEMORY;
+    int RENDERER_INDEX_UNKNOWN = TrackSelectorManager.RENDERER_INDEX_UNKNOWN;
     int RENDERER_INDEX_VIDEO = TrackSelectorManager.RENDERER_INDEX_VIDEO;
     int RENDERER_INDEX_AUDIO = TrackSelectorManager.RENDERER_INDEX_AUDIO;
     int RENDERER_INDEX_SUBTITLE = TrackSelectorManager.RENDERER_INDEX_SUBTITLE;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -36,6 +36,7 @@
 
 public class TrackSelectorManager implements TrackSelectorCallback {
     private final Context mContext;
+    public static final int RENDERER_INDEX_UNKNOWN = -1;
     public static final int RENDERER_INDEX_VIDEO = 0;
     public static final int RENDERER_INDEX_AUDIO = 1;
     public static final int RENDERER_INDEX_SUBTITLE = 2;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -457,7 +457,7 @@ private void showSourceError(int rendererIndex, Throwable error) {
                 msgResId = R.string.unknown_source_error;
         }
 
-        MessageHelpers.showLongMessage(getContext(), getContext().getString(msgResId) + "\n" + message);
+        MessageHelpers.showLongMessage(getContext(), getContext().getString(msgResId) + "\n" + message + "\n" + getContext().getString(R.string.applying_fix));
     }
 
     private void showRendererError(int rendererIndex, Throwable error) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -490,7 +490,7 @@ private void applyGenericErrorAction(Throwable error) {
         } else if (Helpers.startsWithAny(error.getMessage(),
                 "Unable to connect to", "Invalid NAL length", "Response code: 421",
                 "Response code: 404", "Response code: 429", "Invalid integer size",
-                "Unexpected ArrayIndexOutOfBoundsException")) {
+                "Unexpected ArrayIndexOutOfBoundsException", "Unexpected IndexOutOfBoundsException")) {
             // Switch between network engines in hope that one of them fixes the error
             //mPlayerTweaksData.setPlayerDataSource(getNextEngine());
             YouTubeServiceManager.instance().applyNoPlaybackFix();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -278,7 +278,7 @@ private static List<OptionItem> fromPresets(Context context, VideoPreset[] prese
 
         FormatItem noVideo = ExoFormatItem.from(MediaTrack.forRendererIndex(TrackSelectorManager.RENDERER_INDEX_VIDEO), true);
         result.add(0, UiOptionItem.from(
-                context.getString(R.string.without_picture),
+                context.getString(R.string.video_disabled),
                 optionItem ->
                         setFormat(noVideo, playerData, onFormatSelected),
                 isPresetSelection && Helpers.equals(noVideo, selectedFormat)));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -502,7 +502,8 @@ private void applyGenericErrorAction(Throwable error) {
             }
         } else if (Helpers.startsWithAny(error.getMessage(),
                 "Unable to connect to", "Invalid NAL length", "Response code: 421",
-                "Invalid integer size", "Unexpected ArrayIndexOutOfBoundsException")) {
+                "Response code: 404", "Response code: 429", "Invalid integer size",
+                "Unexpected ArrayIndexOutOfBoundsException")) {
             // Switch between network engines in hope that one of them fixes the error
             //mPlayerTweaksData.setPlayerDataSource(getNextEngine());
             YouTubeServiceManager.instance().applyNoPlaybackFix();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -501,7 +501,8 @@ private void applyGenericErrorAction(Throwable error) {
                 mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
             }
         } else if (Helpers.startsWithAny(error.getMessage(),
-                "Unable to connect to", "Invalid NAL length", "Response code: 421", "Invalid integer size")) {
+                "Unable to connect to", "Invalid NAL length", "Response code: 421",
+                "Invalid integer size", "Unexpected ArrayIndexOutOfBoundsException")) {
             // Switch between network engines in hope that one of them fixes the error
             //mPlayerTweaksData.setPlayerDataSource(getNextEngine());
             YouTubeServiceManager.instance().applyNoPlaybackFix();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/actions/ScreenOffTimeoutAction.java
Patch:
@@ -10,7 +10,7 @@ public class ScreenOffTimeoutAction extends TwoStateAction {
     public ScreenOffTimeoutAction(Context context) {
         super(context, R.id.action_screen_off_timeout, R.drawable.action_screen_timeout_on);
 
-        String label = context.getString(R.string.player_screen_off_timeout);
+        String label = context.getString(R.string.action_screen_off);
         String[] labels = new String[2];
         // Note, labels denote the action taken when clicked
         labels[INDEX_OFF] = label;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/actions/ScreenOffTimeoutAction.java
Patch:
@@ -10,7 +10,7 @@ public class ScreenOffTimeoutAction extends TwoStateAction {
     public ScreenOffTimeoutAction(Context context) {
         super(context, R.id.action_screen_off_timeout, R.drawable.action_screen_timeout_on);
 
-        String label = context.getString(R.string.player_screen_off_timeout);
+        String label = context.getString(R.string.action_screen_off);
         String[] labels = new String[2];
         // Note, labels denote the action taken when clicked
         labels[INDEX_OFF] = label;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -487,7 +487,7 @@ private void applyRendererErrorAction(int rendererIndex, Throwable error) {
                 msgResId = R.string.unknown_renderer_error;
         }
 
-        MessageHelpers.showLongMessage(getContext(), getContext().getString(msgResId) + "\n" + message);
+        MessageHelpers.showLongMessage(getContext(), getContext().getString(msgResId) + "\n" + message + "\n" + getContext().getString(R.string.calm_msg));
     }
 
     private void applyGenericErrorAction(Throwable error) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/AppDataSourceManager.java
Patch:
@@ -69,7 +69,7 @@ public List<SettingsItem> getSettingItems(Context context) {
         settingItems.add(new SettingsItem(
                 context.getString(R.string.dearrow_provider), () -> DeArrowSettingsPresenter.instance(context).show(), R.drawable.settings_dearrow));
         settingItems.add(new SettingsItem(
-                context.getString(R.string.app_backup_restore), () -> BackupSettingsPresenter.instance(context).show(), R.drawable.settings_bakup));
+                context.getString(R.string.app_backup_restore), () -> BackupSettingsPresenter.instance(context).show(), R.drawable.settings_backup));
 
         if (Helpers.equalsAny(context.getPackageName(), KNOWN_PACKAGES)) {
             settingItems.add(new SettingsItem(

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -119,10 +119,10 @@ private void onLongBuffering() {
             getMainController().onPlayEnd();
         } else {
             updateErrorCounter(-1);
-            if (mErrorCount > 2) {
+            if (mErrorCount > 1) {
                 // Switch between network engines in hope that one of them fixes the error
-                //mPlayerTweaksData.setPlayerDataSource(getNextEngine());
-                YouTubeServiceManager.instance().applyNoPlaybackFix();
+                // Cronet engine do less buffering
+                mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET);
                 restartEngine();
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -403,7 +403,7 @@ public void selectTrack(MediaTrack track) {
 
         mSelectedTracks[rendererIndex] = track;
 
-        if (mRenderers[rendererIndex] == null || mRenderers[rendererIndex].mediaTracks == null) {
+        if (mRenderers[rendererIndex] == null || mRenderers[rendererIndex].mediaTracks == null || mRenderers[rendererIndex].sortedTracks == null) {
             Log.e(TAG, "Renderer isn't initialized. Waiting for later selection...");
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -474,7 +474,7 @@ private void updateHistory() {
         Video video = getVideo();
 
         if (video == null || (video.isShorts && mGeneralData.isHideShortsFromHistoryEnabled()) ||
-                mIncognito || !getPlayer().containsMedia() || (video.isRemote && mRemoteControlData.isRemoteHistoryDisabled())) {
+                mIncognito || getPlayer() == null || !getPlayer().containsMedia() || (video.isRemote && mRemoteControlData.isRemoteHistoryDisabled())) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -400,6 +400,7 @@ private void updateErrorCounter(int type) {
         }
 
         mLastErrorType = type;
+        mLastErrorTimeMs = currentTimeMillis;
     }
 
     @SuppressLint("StringFormatMatches")

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/mod/surface/SurfacePlaybackFragment.java
Patch:
@@ -94,7 +94,7 @@ protected void setAspectRatio(float aspectRatio) {
     }
 
     protected void setRotation(int angle) {
-        if (Helpers.floatEquals(mVideoSurfaceRoot.getRotation(), angle)) {
+        if (Helpers.floatEquals(mVideoSurfaceRoot.getRotation(), angle) || mVideoSurfaceWrapper == null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.res.Configuration;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
+import android.view.KeyCharacterMap.UnavailableException;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import androidx.annotation.NonNull;
@@ -99,6 +100,7 @@ public boolean dispatchTouchEvent(MotionEvent event) {
             return super.dispatchTouchEvent(event);
         } catch (NullPointerException e) {
             // Attempt to invoke interface method 'boolean android.app.trust.ITrustManager.isDeviceLocked(int)' on a null object reference
+            e.printStackTrace();
             return false;
         }
     }
@@ -120,7 +122,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
 
         try {
             return super.dispatchKeyEvent(event);
-        } catch (IllegalStateException | SecurityException e) {
+        } catch (IllegalStateException | SecurityException | UnavailableException e) {
             // Fatal Exception: java.lang.IllegalStateException
             // android.permission.RECORD_AUDIO required for search (Android 5 mostly)
             // Fatal Exception: java.lang.SecurityException

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -118,6 +118,8 @@ private void onLongBuffering() {
         if ((!mLastVideo.isLive || mLastVideo.isLiveEnd) &&
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < STREAM_END_THRESHOLD_MS) {
             getMainController().onPlayEnd();
+        } else {
+            YouTubeServiceManager.instance().applyVideoInfoFix();
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -717,7 +717,7 @@ public long getLiveDurationMs() {
         }
 
         // Disable updates if stream ended while watching
-        if (!isLive && liveDurationMs != 0) {
+        if (!isLive) {
             return liveDurationMs;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -716,8 +716,8 @@ public long getLiveDurationMs() {
             return 0;
         }
 
-        // fix stream end while watching
-        if (!isLive) {
+        // Disable updates if stream ended while watching
+        if (!isLive && liveDurationMs != 0) {
             return liveDurationMs;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -145,7 +145,7 @@ public void onTickle() {
         }
 
         // Sync history every five minutes
-        if (++mTickleLeft > 5) {
+        if (++mTickleLeft > 5 && getPlayer().isPlaying()) {
             mTickleLeft = 0;
             updateHistory();
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -76,7 +76,7 @@ public void onViewInitialized() {
             return;
         }
 
-        getView().setTagsProvider(new MediaServiceSearchTagProvider());
+        getView().setTagsProvider(new MediaServiceSearchTagProvider(mSearchData.isSearchHistoryDisabled()));
 
         startSearchInt();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -286,7 +286,7 @@ public void onViewResumed() {
 
     @Override
     public void onViewPaused() {
-        if (getPlayer().isInPIPMode()) {
+        if (getPlayer() != null && getPlayer().isInPIPMode()) {
             // UI couldn't be properly displayed in PIP mode
             getPlayer().showOverlay(false);
             getPlayer().showDebugInfo(false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerController.java
Patch:
@@ -25,11 +25,12 @@
 import com.liskovsoft.smartyoutubetv2.common.misc.TickleManager;
 
 import java.lang.ref.WeakReference;
-import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class MainPlayerController implements PlayerEventListener {
     private static final String TAG = MainPlayerController.class.getSimpleName();
-    private final ArrayList<PlayerEventListener> mEventListeners = new ArrayList<PlayerEventListener>() {
+    private final List<PlayerEventListener> mEventListeners = new CopyOnWriteArrayList<PlayerEventListener>() {
         @Override
         public boolean add(PlayerEventListener listener) {
             ((PlayerEventListenerHelper) listener).setMainController(MainPlayerController.this);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -390,9 +390,9 @@ public boolean isFinishing() {
         return mIsFinishing;
     }
 
-    public void enableMoveToBack(boolean enable) {
-        mIsMoveToBackEnabled = enable;
-    }
+    //public void enableMoveToBack(boolean enable) {
+    //    mIsMoveToBackEnabled = enable;
+    //}
 
     public boolean isNewViewPending() {
         return System.currentTimeMillis() - mPendingActivityMs < 1_000;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -182,11 +182,11 @@ public void finish() {
 
         // NOTE: block back button for PIP.
         // User pressed PIP button in the player.
-        if (mIsBackPressed && mGeneralData.getBackgroundPlaybackShortcut() != GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_HOME) {
+        if (!skipPip()) {
             enterPipMode(); // NOTE: without this call app will hangs when pressing on PIP button
         }
 
-        if (doNotDestroy() && mIsBackPressed && mGeneralData.getBackgroundPlaybackShortcut() != GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_HOME) {
+        if (doNotDestroy() && !skipPip()) {
             mPlaybackFragment.blockEngine(true);
             // Ensure to opening this activity when the user is returning to the app
             mViewManager.blockTop(this);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -182,11 +182,11 @@ public void finish() {
 
         // NOTE: block back button for PIP.
         // User pressed PIP button in the player.
-        if (!skipPip()) {
+        if (mIsBackPressed && mGeneralData.getBackgroundPlaybackShortcut() != GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_HOME) {
             enterPipMode(); // NOTE: without this call app will hangs when pressing on PIP button
         }
 
-        if (doNotDestroy() && !skipPip()) {
+        if (doNotDestroy() && mIsBackPressed && mGeneralData.getBackgroundPlaybackShortcut() != GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_HOME) {
             mPlaybackFragment.blockEngine(true);
             // Ensure to opening this activity when the user is returning to the app
             mViewManager.blockTop(this);
@@ -285,7 +285,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
     public void onUserLeaveHint() {
         // Check that user not open dialog/search activity instead of really leaving the activity
         // Activity may be overlapped by the dialog, back is pressed or new view started
-        if (isFinishing() || skipPip() || mViewManager.isNewViewPending() || mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
+        if (mIsBackPressed || isFinishing() || mViewManager.isNewViewPending() || mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -302,7 +302,7 @@ public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray tra
         setQualityInfo(mTrackFormatter.getQualityLabel());
 
         // Manage audio focus. E.g. use Spotify when audio is disabled.
-        ExoPlayerInitializer.enableAudioFocus(mPlayer, !mTrackSelectorManager.getAudioTrack().isEmpty());
+        ExoPlayerInitializer.enableAudioFocus(mPlayer, mTrackSelectorManager.getAudioTrack() != null && !mTrackSelectorManager.getAudioTrack().isEmpty());
     }
 
     private void notifyOnVideoLoad() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -476,7 +476,8 @@ private void applyRendererErrorAction(int rendererIndex, Throwable error) {
     private void applyGenericErrorAction(Throwable error) {
         if (error instanceof OutOfMemoryError) {
             mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
-        } else if (Helpers.startsWithAny(error.getMessage(), "Unable to connect to", "Invalid NAL length", "Response code: 421")) {
+        } else if (Helpers.startsWithAny(error.getMessage(),
+                "Unable to connect to", "Invalid NAL length", "Response code: 421", "Invalid integer size")) {
             // Switch between network engines in hope that one of them fixes the error
             mPlayerTweaksData.setPlayerDataSource(getNextEngine());
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -46,8 +46,7 @@ public int inBounds(MediaTrack track2) {
 
         if (Helpers.equals(id1, id2)) {
             result = 0;
-        //} else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, bitrate1)) {
-        } else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, (int)(bitrate1 * 1.1))) { // Fix muted audio on streams
+        } else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, bitrate1)) {
             result = 1;
         } else if (bitrate1 == -1 && (TrackSelectorUtil.is51Audio(format) || !TrackSelectorUtil.is51Audio(track2.format))) {
             result = 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -46,7 +46,8 @@ public int inBounds(MediaTrack track2) {
 
         if (Helpers.equals(id1, id2)) {
             result = 0;
-        } else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, bitrate1)) {
+        //} else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, bitrate1)) {
+        } else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, (int)(bitrate1 * 1.1))) { // Fix muted audio on streams
             result = 1;
         } else if (bitrate1 == -1 && (TrackSelectorUtil.is51Audio(format) || !TrackSelectorUtil.is51Audio(track2.format))) {
             result = 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -567,7 +567,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
             }
         }
 
-        Log.d(TAG, "findBestMatch: Found: " + result.format);
+        Log.d(TAG, "findBestMatch: Found: " + (result != null ? result.format : null));
 
         return result;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -498,6 +498,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
 
             MediaTrack[][] mediaTracks = filterByLanguage(renderer.mediaTracks, originTrack);
 
+            outerloop:
             for (int groupIndex = 0; groupIndex < mediaTracks.length; groupIndex++) {
                 prevResult = result;
 
@@ -524,7 +525,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                     // Multiple ru track fix
                     if (bounds == 0 && MediaTrack.bitrateEquals(originTrack, mediaTrack)) {
                         result = mediaTrack;
-                        break;
+                        break outerloop;
                     }
 
                     if (bounds >= 0) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/AutoFrameRateController.java
Patch:
@@ -229,7 +229,7 @@ private void restorePlayback() {
 
     // Avoid nested dialogs. They have problems with timings. So player controls may hide without user interaction.
     private void addUiOptions() {
-        if (mAutoFrameRateHelper.isSupported()) {
+        if (mAutoFrameRateHelper.isSupported() && getContext() != null) {
             OptionCategory afrCategory = createAutoFrameRateCategory(
                     getContext(), PlayerData.instance(getContext()),
                     () -> {}, this::onResolutionSwitchClick, this::onFpsCorrectionClick, this::onDoubleRefreshRateClick, this::onSkip24RateClick);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -160,7 +160,7 @@ protected void removeItemAuthor(Video item) {
     }
 
     private void removeItem(List<Video> items, int action) {
-        if (items.size() == 0) {
+        if (items.isEmpty()) {
             return;
         }
 
@@ -176,7 +176,7 @@ public boolean syncItem(Video item) {
     }
 
     public boolean syncItem(List<Video> items) {
-        if (items.size() == 0) {
+        if (items.isEmpty()) {
             return false;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -285,7 +285,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
     public void onUserLeaveHint() {
         // Check that user not open dialog/search activity instead of really leaving the activity
         // Activity may be overlapped by the dialog, back is pressed or new view started
-        if (skipPip() || mViewManager.isNewViewPending() || mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
+        if (isFinishing() || skipPip() || mViewManager.isNewViewPending() || mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
             return;
         }
 
@@ -301,15 +301,15 @@ public void onUserLeaveHint() {
                     // Ensure to opening this activity when the user will return to the app
                     mViewManager.blockTop(this);
                     // Enable collapse app to Home launcher
-                    //mViewManager.enableMoveToBack(true);
+                    mViewManager.enableMoveToBack(true);
                 }
                 break;
             case PlayerData.BACKGROUND_MODE_SOUND:
                 if (doNotDestroy()) {
                     // Ensure to continue a playback
                     mPlaybackFragment.blockEngine(true);
                     mViewManager.blockTop(this);
-                    //mViewManager.enableMoveToBack(true);
+                    mViewManager.enableMoveToBack(true);
                 }
                 break;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -497,7 +497,7 @@ private void applyRepeatMode(int repeatMode) {
 
         switch (repeatMode) {
             case PlayerEngineConstants.REPEAT_MODE_REVERSE_LIST:
-                if (video.hasPlaylist()) {
+                if (video.hasPlaylist() || video.belongsToChannelUploads() || video.belongsToChannel()) {
                     onPreviousClicked();
                     break;
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -6,6 +6,7 @@
 import com.liskovsoft.mediaserviceinterfaces.yt.ServiceManager;
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaItemFormatInfo;
 import com.liskovsoft.mediaserviceinterfaces.yt.data.MediaItemMetadata;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxHelper;
@@ -446,7 +447,7 @@ private void applyErrorAction(Throwable error) {
         if (error instanceof OutOfMemoryError) {
             mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
         //} else if (Helpers.startsWithAny(error.getMessage(), "Unable to connect to ", "Invalid NAL length")) {
-        } else {
+        } else if (!Helpers.startsWithAny(error.getMessage(), "Unable to connect to ")) {
             // Switch between network engines in hope that one of them fixes the error
             mPlayerTweaksData.setPlayerDataSource(getNextEngine());
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GDriveBackupWorker.java
Patch:
@@ -126,6 +126,6 @@ private void checkedRunBackup() {
                         // if id not found then disable auto backup in settings
                         GeneralData.instance(getApplicationContext()).enableAutoBackup(false);
                     }
-                });
+                }, throwable -> Log.e(TAG, throwable.getMessage()));
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -446,7 +446,8 @@ private void applyRendererErrorAction(int rendererIndex) {
     private void applyErrorAction(Throwable error) {
         if (error instanceof OutOfMemoryError) {
             mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
-        } else if (Helpers.startsWithAny(error.getMessage(), "Unable to connect to ", "Invalid NAL length")) {
+        //} else if (Helpers.startsWithAny(error.getMessage(), "Unable to connect to ", "Invalid NAL length")) {
+        } else {
             // Switch between network engines in hope that one of them fixes the error
             mPlayerTweaksData.setPlayerDataSource(getNextEngine());
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -254,7 +254,7 @@ private void processCommand(Command command) {
                 if (getPlayer() != null && mConnected) {
                     Video video = getPlayer().getVideo();
                     // Ensure that remote playlist already playing
-                    if (video != null && (video.getGroup() == null || video.getGroup().isQueue)) {
+                    if (video != null && video.remotePlaylistId != null) {
                         video.remotePlaylistId = command.getPlaylistId();
                         video.playlistParams = null;
                         video.isRemote = true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -348,7 +348,8 @@ private void appendSuggestions(Video video, MediaItemMetadata mediaItemMetadata)
      * Merge remote queue with player's queue (when phone cast just started or user clicked on playlist item)
      */
     private void mergeUserAndRemoteQueueIfNeeded(Video video, MediaItemMetadata metadata) {
-        if (video.isRemote && video.remotePlaylistId != null) { // ensure the user pressed video thumb on the phone
+        // Ensure that the user pressed video thumb on the phone
+        if (video.isRemote && video.remotePlaylistId != null) {
             // Create user queue from remote queue
 
             List<MediaGroup> suggestions = metadata.getSuggestions();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -36,6 +36,7 @@ public class VideoGroup {
     private BrowseSection mSection;
     private int mPosition = -1;
     private int mAction;
+    public boolean isQueue;
 
     public static VideoGroup from(BrowseSection category) {
         return from(null, category);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -355,7 +355,7 @@ private void appendSuggestions(Video video, MediaItemMetadata mediaItemMetadata)
     private void mergeRemoteAndUserQueueIfNeeded(Video video, VideoGroup videoGroup) {
         // NOTE: Commented out section below has risk of adding random videos into the queue
         //if (video.isRemote && (video.remotePlaylistId != null || !Playlist.instance().hasNext())) {
-        if (video.isRemote && video.remotePlaylistId != null && videoGroup.contains(video)) {
+        if (video.isRemote && video.remotePlaylistId != null) {
             videoGroup.removeAllBefore(video);
             // Double queue bugfix. Remove remote playlist id from the videos.
             videoGroup.stripPlaylistInfo();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -355,7 +355,7 @@ private void appendSuggestions(Video video, MediaItemMetadata mediaItemMetadata)
     private void mergeRemoteAndUserQueueIfNeeded(Video video, VideoGroup videoGroup) {
         // NOTE: Commented out section below has risk of adding random videos into the queue
         //if (video.isRemote && (video.remotePlaylistId != null || !Playlist.instance().hasNext())) {
-        if (video.isRemote && video.remotePlaylistId != null) {
+        if (video.isRemote && video.remotePlaylistId != null && videoGroup.contains(video)) {
             videoGroup.removeAllBefore(video);
             // Double queue bugfix. Remove remote playlist id from the videos.
             videoGroup.stripPlaylistInfo();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/HiddenPrefs.java
Patch:
@@ -9,7 +9,7 @@
 public class HiddenPrefs extends SharedPreferencesBase {
     @SuppressLint("StaticFieldLeak")
     private static HiddenPrefs sInstance;
-    private static final String SHARED_PREFERENCES_NAME = HiddenPrefs.class.getName();
+    public static final String SHARED_PREFERENCES_NAME = HiddenPrefs.class.getName();
     private static final String UNIQUE_ID = "unique_id";
 
     private HiddenPrefs(Context context) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -404,8 +404,8 @@ private void runErrorAction(int type, int rendererIndex, Throwable error) {
 
         applyErrorAction(error);
 
-        // Delay to fix frequent requests
-        Utils.postDelayed(mFixAndRestartEngine, 3_000);
+        // Give a time to user to do something
+        Utils.postDelayed(mFixAndRestartEngine, 5_000);
     }
 
     private void applyRendererErrorAction(int rendererIndex) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/BackupSettingsPresenter.java
Patch:
@@ -100,7 +100,7 @@ private void appendGDriveMiscButton(AppDialogPresenter settingsPresenter) {
                             option2 -> {
                                 mGeneralData.enableAutoBackup(option2.isSelected());
                                 if (option2.isSelected()) {
-                                    GDriveBackupWorker.schedule(getContext());
+                                    GDriveBackupWorker.forceSchedule(getContext());
                                 } else {
                                     GDriveBackupWorker.cancel(getContext());
                                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -40,8 +40,8 @@ public class VideoStateController extends PlayerEventListenerHelper {
     private boolean mIsBuffering;
     private boolean mIncognito;
     private final Runnable mStreamEndCheck = () -> {
-        if (getVideo() != null && getVideo().isLiveEnd && mIsBuffering &&
-                getPlayer().getDurationMs() - getPlayer().getPositionMs() < 3 * LIVE_BUFFER_MS) {
+        if (getVideo() != null && (!getVideo().isLive || getVideo().isLiveEnd) && mIsBuffering &&
+                getPlayer().getDurationMs() - getPlayer().getPositionMs() < LIVE_THRESHOLD_MS) {
             getMainController().onPlayEnd();
         }
     };

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -284,7 +284,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
     public void onUserLeaveHint() {
         // Check that user not open dialog/search activity instead of really leaving the activity
         // Activity may be overlapped by the dialog, back is pressed or new view started
-        if (skipPip() || mViewManager.isNewViewPending() || mIsBackPressed) {
+        if (skipPip() || mViewManager.isNewViewPending() || mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/ChannelHeaderPresenter.java
Patch:
@@ -57,7 +57,7 @@ public interface ChannelHeaderProvider {
         boolean onSearchChange(String newQuery);
         boolean onSearchSubmit(String query);
         void onSearchSettingsClicked();
-        String getChannelName();
+        String getChannelTitle();
     }
 
     public static class ChannelHeaderCallback extends Row implements ChannelHeaderProvider {
@@ -77,7 +77,7 @@ public void onSearchSettingsClicked() {
         }
 
         @Override
-        public String getChannelName() {
+        public String getChannelTitle() {
             return null;
         }
     }
@@ -158,7 +158,7 @@ protected void onBindRowViewHolder(ViewHolder vh, Object item) {
         SpeechOrbView speechOrbView = searchBar.findViewById(R.id.lb_search_bar_speech_orb);
         SearchEditText searchTextEditor = searchBar.findViewById(R.id.lb_search_text_editor);
         SearchOrbView searchSettingsOrbView = searchBar.findViewById(R.id.search_settings_orb);
-        String channelName = provider.getChannelName();
+        String channelName = provider.getChannelTitle();
         searchBar.setTitle(channelName != null ? channelName : context.getString(R.string.content_type_channel));
         switch (SearchData.instance(context).getSpeechRecognizerType()) {
             case SearchData.SPEECH_RECOGNIZER_SYSTEM:

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/BackupSettingsPresenter.java
Patch:
@@ -98,12 +98,12 @@ private void appendGDriveMiscButton(AppDialogPresenter settingsPresenter) {
                     settingsPresenter2.appendSingleSwitch(UiOptionItem.from(
                             getContext().getString(R.string.auto_backup),
                             option2 -> {
+                                mGeneralData.enableAutoBackup(option2.isSelected());
                                 if (option2.isSelected()) {
                                     GDriveBackupWorker.schedule(getContext());
                                 } else {
                                     GDriveBackupWorker.cancel(getContext());
                                 }
-                                mGeneralData.enableAutoBackup(option2.isSelected());
                             },
                             mGeneralData.isAutoBackupEnabled()
                     ));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GDriveBackupWorker.java
Patch:
@@ -49,7 +49,7 @@ public static void schedule(Context context) {
     }
 
     public static void cancel(Context context) {
-        if (VERSION.SDK_INT >= 23) {
+        if (VERSION.SDK_INT >= 23 && GeneralData.instance(context).isAutoBackupEnabled()) {
             Log.d(TAG, "Unregistering worker job...");
 
             WorkManager workManager = WorkManager.getInstance(context);

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/channels/UpdateChannelsWorker.java
Patch:
@@ -49,7 +49,7 @@ public static void schedule(Context context) {
     }
 
     public static void cancel(Context context) {
-        if (VERSION.SDK_INT >= 23) {
+        if (VERSION.SDK_INT >= 23 && GlobalPreferences.instance(context).isChannelsServiceEnabled()) {
             Log.d(TAG, "Unregistering Channels update job...");
 
             WorkManager workManager = WorkManager.getInstance(context);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -162,7 +162,8 @@ public void onButtonLongClicked(int buttonId, int buttonState) {
     }
 
     private boolean checkVideo(Video video) {
-        return video != null && !video.isLive && !video.isUpcoming;
+        //return video != null && !video.isLive && !video.isUpcoming;
+        return video != null;
     }
 
     private void updateSponsorSegmentsAndWatch(Video item) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -459,8 +459,8 @@ private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
         options.add(UiOptionItem.from(getContext().getString(R.string.return_to_launcher),
-                option -> mGeneralData.enablePlayerOnlyMode(option.isSelected()),
-                mGeneralData.isPlayerOnlyModeEnabled()));
+                option -> mGeneralData.enableReturnToLauncher(option.isSelected()),
+                mGeneralData.isReturnToLauncherEnabled()));
 
         options.add(UiOptionItem.from(getContext().getString(R.string.multi_profiles),
                 option -> {

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/utils/AppUtil.java
Patch:
@@ -57,7 +57,7 @@ public Intent createAppIntent(String url) {
         intent.setAction(Intent.ACTION_VIEW);
         intent.setData(Uri.parse(url));
         intent.setClassName(getAppPackageName(), getBootstrapClassName());
-        intent.putExtra(GlobalConstants.STANDALONE_PLAYER, true);
+        intent.putExtra(GlobalConstants.INTERNAL_INTENT, true);
 
         return intent;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -556,7 +556,7 @@ private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
                 option -> mGeneralData.enableSelectChannelSection(option.isSelected()),
                 mGeneralData.isSelectChannelSectionEnabled()));
 
-        options.add(UiOptionItem.from(getContext().getString(R.string.player_show_tooltips) + ": " + getContext().getString(R.string.long_press_for_settings),
+        options.add(UiOptionItem.from(getContext().getString(R.string.player_show_tooltips) + ": " + getContext().getString(R.string.long_press_for_options),
                 option -> {
                     mGeneralData.enableFirstUseTooltip(option.isSelected());
                     mRestartApp = true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -962,6 +962,6 @@ public static void triggerRebirth3(Context context, Class<?> myClass) {
 
     public static String updateTooltip(Context context, String tooltip) {
         return GeneralData.instance(context).isFirstUseTooltipEnabled() ?
-                String.format("%s (%s)", tooltip, context.getString(R.string.long_press_for_settings)) : tooltip;
+                String.format("%s (%s)", tooltip, context.getString(R.string.long_press_for_options)) : tooltip;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -86,6 +86,7 @@ public final class Video {
     public String subscriberCount;
     public float volume = 1.0f;
     public boolean deArrowProcessed;
+    public boolean isLiveEnd;
     private int startSegmentNum;
     private WeakReference<VideoGroup> group; // Memory leak fix. Used to get next page when scrolling.
     public List<NotificationState> notificationStates;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -41,7 +41,7 @@ public class VideoStateController extends PlayerEventListenerHelper {
     private boolean mIsBuffering;
     private boolean mIncognito;
     private final Runnable mStreamEndCheck = () -> {
-        if (getVideo() != null && getVideo().isLive && mIsBuffering &&
+        if (getVideo() != null && getVideo().isLiveEnd && mIsBuffering &&
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < 3 * LIVE_BUFFER_MS) {
             getMainController().onPlayEnd();
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -43,7 +43,7 @@ public class VideoStateController extends PlayerEventListenerHelper {
     private final Runnable mStreamEndCheck = () -> {
         if (getVideo() != null && getVideo().isLive && mIsBuffering &&
                 getPlayer().getDurationMs() - getPlayer().getPositionMs() < 3 * LIVE_BUFFER_MS) {
-            getPlayer().reloadPlayback();
+            getMainController().onPlayEnd();
         }
     };
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/ui/AbstractCommentsReceiver.java
Patch:
@@ -5,11 +5,11 @@
 import com.liskovsoft.mediaserviceinterfaces.yt.data.CommentItem;
 import com.liskovsoft.smartyoutubetv2.common.R;
 
-public abstract class CommentsReceiverImpl implements CommentsReceiver {
+public abstract class AbstractCommentsReceiver implements CommentsReceiver {
     private final Context mContext;
     private Callback mCallback;
 
-    public CommentsReceiverImpl(Context context) {
+    public AbstractCommentsReceiver(Context context) {
         mContext = context;
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -349,7 +349,7 @@ private void resetGlobalSpeedIfNeeded() {
     }
 
     private void resetPosition(Video video) {
-        video.percentWatched = 0;
+        video.markNotViewed();
         resetPosition(video.videoId);
     }
 
@@ -438,7 +438,7 @@ private void savePosition() {
         } else { // fully viewed
             // Mark video as fully viewed. This could help to restore proper progress marker on the video card later.
             mStateService.save(new State(video.videoId, durationMs, durationMs, getPlayer().getSpeed()));
-            video.percentWatched = 100;
+            video.markFullyViewed();
         }
 
         Playlist.instance().sync(video);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -527,7 +527,7 @@ private void appendMarkAsWatchedButton() {
         mDialogPresenter.appendSingleButton(
                 UiOptionItem.from(getContext().getString(R.string.mark_as_watched), optionItem -> {
                     MediaServiceManager.instance().updateHistory(mVideo, 0);
-                    mVideo.percentWatched = 100;
+                    mVideo.markFullyViewed();
                     VideoStateService.instance(getContext()).save(new State(mVideo.videoId, mVideo.getDurationMs()));
                     Playlist.instance().sync(mVideo);
                     mDialogPresenter.closeDialog();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -11,6 +11,7 @@
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.BrowseSection;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.service.VideoStateService;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
@@ -509,6 +510,7 @@ protected void appendClearHistoryButton() {
                         optionItem -> AppDialogUtil.showConfirmationDialog(getContext(),
                                 getContext().getString(R.string.clear_history), () -> {
                                     mServiceManager.clearHistory();
+                                    VideoStateService.instance(getContext()).clear();
                                     getDialogPresenter().closeDialog();
                                     presenter.refresh();
                         })));

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -111,7 +111,9 @@ public void onGuidedActionClicked(GuidedAction action) {
         if (action.getId() == CONTINUE) {
             mSignInPresenter.onActionClicked();
         } else if (action.getId() == OPEN_BROWSER) {
-            Utils.openLinkExt(getContext(), mFullSignInUrl);
+            if (mFullSignInUrl != null) {
+                Utils.openLinkExt(getContext(), mFullSignInUrl);
+            }
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -98,10 +98,10 @@ public void openVideo(Video item) {
     public void onVideoLoaded(Video item) {
         disposeActions();
 
-        boolean enabled = mContentBlockData.isSponsorBlockEnabled();
+        boolean enabled = mContentBlockData.isSponsorBlockEnabled() && checkVideo(item) && !isChannelExcluded(item.channelId);
         getPlayer().setButtonState(R.id.action_content_block, enabled ? PlayerUI.BUTTON_ON : PlayerUI.BUTTON_OFF);
 
-        if (enabled && checkVideo(item) && !isChannelExcluded(item.channelId)) {
+        if (enabled) {
             updateSponsorSegmentsAndWatch(item);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GDriveBackupManager.java
Patch:
@@ -106,7 +106,7 @@ private void startBackup(String backupDir, String dataDir) {
                                     file.getAbsolutePath().replace(dataDir, "")))));
                         }
                     }
-                });
+                }, error -> MessageHelpers.showLongMessage(mContext, error.getMessage()));
     }
 
     private void startRestore() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -594,7 +594,8 @@ private void restoreData() {
         mIsSonyFrameDropFixEnabled = Helpers.parseBoolean(split, 29, false);
         mIsBufferOnStreamsDisabled = Helpers.parseBoolean(split, 30, false);
         // Cause severe garbage collector stuttering
-        mIsSectionPlaylistEnabled = Helpers.parseBoolean(split, 31, VERSION.SDK_INT > 21 && Helpers.getDeviceRam(mPrefs.getContext()) > 1_000_000_000);
+        //mIsSectionPlaylistEnabled = Helpers.parseBoolean(split, 31, VERSION.SDK_INT > 21 && Helpers.getDeviceRam(mPrefs.getContext()) > 1_000_000_000);
+        mIsSectionPlaylistEnabled = Helpers.parseBoolean(split, 31, false);
         mIsScreenOffTimeoutEnabled = Helpers.parseBoolean(split, 32, false);
         mScreenOffTimeoutSec = Helpers.parseInt(split, 33, 0);
         mIsUIAnimationsEnabled = Helpers.parseBoolean(split, 34, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -14,7 +14,7 @@
 
 public class VideoGroup {
     /**
-     * Add at the end of the the existing group
+     * Add at the end of the existing group
      */
     public static final int ACTION_APPEND = 0;
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -832,9 +832,8 @@ public static boolean isOculusQuest() {
      * Finish the app but remain running services
      */
     public static void properlyFinishTheApp(Context context) {
-        //ViewManager.instance(context).properlyFinishTheApp(context);
-        //exitToHome(context);
-        forceFinishTheApp();
+        ViewManager.instance(context).properlyFinishTheApp(context);
+        //forceFinishTheApp();
     }
 
     public static void restartTheApp(Context context) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -832,7 +832,7 @@ public static boolean isOculusQuest() {
      * Finish the app but remain running services
      */
     public static void properlyFinishTheApp(Context context) {
-        ViewManager.instance(context).properlyFinishTheApp(context);
+        //ViewManager.instance(context).properlyFinishTheApp(context);
         //exitToHome(context);
         forceFinishTheApp();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -1014,7 +1014,7 @@ private void restoreState() {
         mRememberPinnedPosition = Helpers.parseBoolean(split, 62, false);
         mSelectedItems = Helpers.parseMap(split, 63, Helpers::parseInt, Video::fromString);
 
-        if (mPinnedItems == null) {
+        if (mPinnedItems.isEmpty()) {
             initPinnedItems();
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -51,7 +51,7 @@ public class ExoMediaSourceFactory {
     private static final String TAG = ExoMediaSourceFactory.class.getSimpleName();
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
-    private static final int MAX_SEGMENTS_PER_LOAD = 1;
+    private static final int MAX_SEGMENTS_PER_LOAD = 10;
     private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -1007,7 +1007,7 @@ private void restoreState() {
         mPlayerExitShortcut = Helpers.parseInt(split, 58, EXIT_SINGLE_BACK);
         // StackOverflow on old devices?
         mIsOldChannelLookEnabled = Helpers.parseBoolean(split, 59, Build.VERSION.SDK_INT <= 19);
-        mIsFullscreenModeEnabled = Helpers.parseBoolean(split, 60, !Helpers.isTouchSupported(mContext));
+        mIsFullscreenModeEnabled = Helpers.parseBoolean(split, 60, true);
         mIsHideWatchedFromWatchLaterEnabled = Helpers.parseBoolean(split, 61, false);
         mRememberPinnedPosition = Helpers.parseBoolean(split, 62, false);
         mSelectedItems = Helpers.parseMap(split, 63, Helpers::parseInt, Video::fromString);

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
Patch:
@@ -299,7 +299,7 @@ public DataSpec(
     this.flags = flags;
     this.httpRequestHeaders = Collections.unmodifiableMap(new HashMap<>(httpRequestHeaders));
 
-    applyRangeQuery();
+    //applyRangeQuery();
   }
 
   /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -507,7 +507,7 @@ private void appendHistoryCategory(AppDialogPresenter settingsPresenter) {
     private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
-        options.add(UiOptionItem.from(getContext().getString(R.string.player_only_mode),
+        options.add(UiOptionItem.from(getContext().getString(R.string.return_to_launcher),
                 option -> mGeneralData.enablePlayerOnlyMode(option.isSelected()),
                 mGeneralData.isPlayerOnlyModeEnabled()));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -273,7 +273,7 @@ private void initIntentChain() {
             viewManager.startDefaultView();
 
             // For debug purpose when using ATV bridge.
-            if (IntentExtractor.hasData(intent) && !IntentExtractor.isChannelUrl(intent) && !IntentExtractor.isRootUrl(intent)) {
+            if (IntentExtractor.hasData(intent) && !IntentExtractor.isATVChannelUrl(intent) && !IntentExtractor.isRootUrl(intent)) {
                 MessageHelpers.showLongMessage(getContext(), String.format("Can't process intent: %s", Helpers.toString(intent)));
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/IntentExtractor.java
Patch:
@@ -103,7 +103,7 @@ public static String extractSearchText(Intent intent) {
      * Data: https://www.youtube.com/channel/UCtDjOV5nk982w35AIdVDuNw
      */
     public static String extractChannelId(Intent intent) {
-        if (isEmptyIntent(intent)) {
+        if (isEmptyIntent(intent) || isATVChannelUrl(intent)) {
             return null;
         }
 
@@ -160,7 +160,7 @@ public static boolean hasData(Intent intent) {
     /**
      * ATV: Channel icon url
      */
-    public static boolean isChannelUrl(Intent intent) {
+    public static boolean isATVChannelUrl(Intent intent) {
         return intent != null
                 && extractUri(intent) != null
                 && Helpers.startsWithAny(extractUri(intent).toString(), SUBSCRIPTIONS_URL, HISTORY_URL, RECOMMENDED_URL);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -709,6 +709,7 @@ private void appendDislikes(Video video) {
         if (!mPlayerTweaksData.isLikesCounterEnabled()) {
             video.likeCount = null;
             video.dislikeCount = null;
+            getPlayer().setVideo(video);
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -224,7 +224,7 @@ private void initPinnedSections() {
 
         for (Video item : pinnedItems) {
             if (item != null) {
-                if (item.sectionId == -1) {
+                if (item.sectionId == -1) { // pinned channel or playlist
                     BrowseSection section = createPinnedSection(item);
                     mSections.add(section);
                 } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -98,10 +98,10 @@ public void openVideo(Video item) {
     public void onVideoLoaded(Video item) {
         disposeActions();
 
-        boolean enabled = mContentBlockData.isSponsorBlockEnabled() && !isChannelExcluded(item.channelId);
+        boolean enabled = mContentBlockData.isSponsorBlockEnabled();
         getPlayer().setButtonState(R.id.action_content_block, enabled ? PlayerUI.BUTTON_ON : PlayerUI.BUTTON_OFF);
 
-        if (enabled && checkVideo(item)) {
+        if (enabled && checkVideo(item) && !isChannelExcluded(item.channelId)) {
             updateSponsorSegmentsAndWatch(item);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -66,13 +66,14 @@ public class MainUIData extends DataChangeBase {
             MENU_ITEM_ADD_TO_PLAYLIST | MENU_ITEM_CREATE_PLAYLIST | MENU_ITEM_RENAME_PLAYLIST | MENU_ITEM_ADD_TO_NEW_PLAYLIST |
             MENU_ITEM_STREAM_REMINDER | MENU_ITEM_PLAYLIST_ORDER | MENU_ITEM_OPEN_CHANNEL | MENU_ITEM_REMOVE_FROM_SUBSCRIPTIONS |
             MENU_ITEM_PLAY_NEXT | MENU_ITEM_OPEN_PLAYLIST | MENU_ITEM_SUBSCRIBE;
-    private static final Long[] MENU_ITEM_DEFAULT_ORDER = { MENU_ITEM_PLAY_VIDEO, MENU_ITEM_PLAY_VIDEO_INCOGNITO, MENU_ITEM_REMOVE_FROM_HISTORY,
+    private static final Long[] MENU_ITEM_DEFAULT_ORDER = {
+            MENU_ITEM_EXIT_FROM_PIP, MENU_ITEM_PLAY_VIDEO, MENU_ITEM_PLAY_VIDEO_INCOGNITO, MENU_ITEM_REMOVE_FROM_HISTORY,
             MENU_ITEM_STREAM_REMINDER, MENU_ITEM_RECENT_PLAYLIST, MENU_ITEM_ADD_TO_PLAYLIST, MENU_ITEM_CREATE_PLAYLIST, MENU_ITEM_RENAME_PLAYLIST,
             MENU_ITEM_ADD_TO_NEW_PLAYLIST, MENU_ITEM_NOT_INTERESTED, MENU_ITEM_REMOVE_FROM_SUBSCRIPTIONS, MENU_ITEM_MARK_AS_WATCHED,
             MENU_ITEM_PLAYLIST_ORDER, MENU_ITEM_PLAY_NEXT, MENU_ITEM_ADD_TO_QUEUE, MENU_ITEM_SHOW_QUEUE, MENU_ITEM_OPEN_CHANNEL, MENU_ITEM_OPEN_PLAYLIST,
             MENU_ITEM_SUBSCRIBE, MENU_ITEM_EXCLUDE_FROM_CONTENT_BLOCK, MENU_ITEM_PIN_TO_SIDEBAR, MENU_ITEM_SAVE_REMOVE_PLAYLIST, MENU_ITEM_OPEN_DESCRIPTION,
             MENU_ITEM_OPEN_COMMENTS, MENU_ITEM_SHARE_LINK, MENU_ITEM_SHARE_EMBED_LINK, MENU_ITEM_SHARE_QR_LINK, MENU_ITEM_SELECT_ACCOUNT,
-            MENU_ITEM_TOGGLE_HISTORY, MENU_ITEM_CLEAR_HISTORY
+            MENU_ITEM_TOGGLE_HISTORY, MENU_ITEM_CLEAR_HISTORY, MENU_ITEM_MOVE_SECTION_UP, MENU_ITEM_MOVE_SECTION_DOWN, MENU_ITEM_UPDATE_CHECK
     };
     @SuppressLint("StaticFieldLeak")
     private static MainUIData sInstance;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -350,7 +350,7 @@ private void processCommand(Command command) {
                 if (getContext() != null && mRemoteControlData.isFinishOnDisconnectEnabled()) {
                     // NOTE: It's not a good idea to remember connection state (mConnected) at this point.
                     MessageHelpers.showLongMessage(getContext(), getContext().getString(R.string.device_disconnected, command.getDeviceName()));
-                    ViewManager.instance(getContext()).properlyFinishTheApp(getContext());
+                    Utils.properlyFinishTheApp(getContext());
                 }
                 //if (mRemoteControlData.isConnectMessagesEnabled()) {
                 //    MessageHelpers.showLongMessage(getContext(), getContext().getString(R.string.device_disconnected, command.getDeviceName()));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/BackupAndRestoreManager.java
Patch:
@@ -10,6 +10,7 @@
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
+import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -123,7 +124,7 @@ private void restoreData() {
         MessageHelpers.showMessage(mContext, R.string.msg_done);
 
         // To apply settings we need to kill the app
-        new Handler(mContext.getMainLooper()).postDelayed(() -> ViewManager.instance(mContext).forceFinishTheApp(), 1_000);
+        new Handler(mContext.getMainLooper()).postDelayed(() -> Utils.restartTheApp(mContext), 1_000);
     }
 
     /**

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/DislayUtils.java
Patch:
@@ -14,7 +14,7 @@
 
 import java.util.HashMap;
 
-public class Utils {
+public class DislayUtils {
 
     public interface MediaDimensions {
         double MEDIA_HEIGHT = 0.95;
@@ -25,7 +25,7 @@ public interface MediaDimensions {
         double MEDIA_LEFT_MARGIN = 0.025;
     }
     
-    private Utils() {
+    private DislayUtils() {
         // NOP
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -12,6 +12,7 @@
 import com.liskovsoft.smartyoutubetv2.common.misc.MotherActivity;
 import com.liskovsoft.smartyoutubetv2.common.misc.PlayerKeyTranslator;
 import com.liskovsoft.smartyoutubetv2.common.prefs.GeneralData;
+import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.keyhandler.DoubleBackManager2;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.PlaybackActivity;
 
@@ -130,6 +131,6 @@ public void finishReally() {
     }
 
     private void finishTheApp() {
-        mViewManager.properlyFinishTheApp(this);
+        Utils.properlyFinishTheApp(this);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -149,7 +149,8 @@ public void onViewPaused() {
     }
 
     private void saveSelectedItems() {
-        if (mCurrentVideo != null && mCurrentVideo.getPositionInsideGroup() == 0) { // fix position reset when jumping between sections
+        // Fix position reset when jumping between sections
+        if (mCurrentVideo != null && mCurrentVideo.getPositionInsideGroup() == 0 && (System.currentTimeMillis() - mCurrentVideo.timestamp) < 10_000) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -1094,7 +1094,6 @@ public void onProfileChanged() {
         // reset on profile change
         mPinnedItems.clear();
         mPendingStreams.clear();
-        mPlaylistOrder.clear();
 
         restoreState();
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -633,6 +633,8 @@ void setControlsMode(int mode) {
                     //mTimeInfo.setVisibility(View.VISIBLE);
                     // Don't set to GONE or carousel will crash (can't properly calculate length)
                     mThumbsBarWrapper.setVisibility(View.INVISIBLE);
+                    // MOD: fix old preview image on seek start
+                    mThumbsBar.clearThumbBitmaps();
                     break;
                 case CONTROLS_MODE_COMPACT:
                     mControlsVh.view.setVisibility(View.GONE);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -38,7 +38,6 @@
 import com.liskovsoft.smartyoutubetv2.tv.ui.widgets.browse.NavigateTitleView;
 
 import java.util.HashMap;
-import java.util.LinkedHashMap;
 import java.util.Map;
 
 /*

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/AutoFrameRateController.java
Patch:
@@ -31,7 +31,7 @@ public class AutoFrameRateController extends PlayerEventListenerHelper implement
     private static final int AUTO_FRAME_RATE_DELAY_ID = 22;
     private static final int AUTO_FRAME_RATE_MODES_ID = 23;
     private static final long SHORTS_DURATION_MIN_MS = 30 * 1_000;
-    private static final long SHORTS_DURATION_MAX_MS = 60 * 1_000;
+    private static final long SHORTS_DURATION_MAX_MS = 61 * 1_000;
     private final HQDialogController mHQController;
     private final VideoStateController mStateUpdater;
     private final AutoFrameRateHelper mAutoFrameRateHelper;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/PlayerKeyTranslator.java
Patch:
@@ -179,7 +179,7 @@ private void volumeUp(boolean up) {
         PlaybackView playbackView = getPlaybackView();
 
         if (playbackView != null) {
-            Utils.volumeUp(mContext, playbackView.getPlayer(), up);
+            Utils.volumeUpPlayer(mContext, playbackView.getPlayer(), up);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -951,7 +951,7 @@ private void restoreState() {
         mBootSectionId = Helpers.parseInt(split, 1, MediaGroup.TYPE_HOME);
         mIsSettingsSectionEnabled = Helpers.parseBoolean(split, 2, true);
         mAppExitShortcut = Helpers.parseInt(split, 3, EXIT_DOUBLE_BACK);
-        mIsPlayerOnlyModeEnabled = Helpers.parseBoolean(split, 4, true);
+        mIsPlayerOnlyModeEnabled = Helpers.parseBoolean(split, 4, false);
         mBackgroundShortcut = Helpers.parseInt(split, 5, BACKGROUND_PLAYBACK_SHORTCUT_HOME_BACK);
         String pinnedItems = Helpers.parseStr(split, 6);
         mIsHideShortsFromSubscriptionsEnabled = Helpers.parseBoolean(split, 7, false);

File: leanback-1.0.0/src/main/java/androidx/leanback/widget/GridLayoutManager.java
Patch:
@@ -1047,7 +1047,9 @@ void dispatchChildSelectedAndPositioned() {
     public boolean canScrollHorizontally() {
         // We can scroll horizontally if we have horizontal orientation, or if
         // we are vertical and have more than one column.
-        return mOrientation == HORIZONTAL || mNumRows > 1;
+        // MOD: fix gridview overscroll in touch mode
+        //return mOrientation == HORIZONTAL || mNumRows > 1;
+        return mOrientation == HORIZONTAL;
     }
 
     @Override

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/search/SearchableActivity.java
Patch:
@@ -7,6 +7,7 @@
 import androidx.annotation.Nullable;
 import com.liskovsoft.leanbackassistant.utils.AppUtil;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItem;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 
 import static androidx.core.content.IntentCompat.EXTRA_START_PLAYBACK;
@@ -23,7 +24,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
             Uri uri = getIntent().getData();
 
             if (uri.getLastPathSegment() != null) {
-                int id = Integer.valueOf(uri.getLastPathSegment());
+                int id = Helpers.parseInt(uri.getLastPathSegment());
 
                 boolean startPlayback = getIntent().getBooleanExtra(EXTRA_START_PLAYBACK, false);
                 Log.d(TAG, "Should start playback? " + (startPlayback ? "yes" : "no"));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -619,11 +619,11 @@ private boolean isStateOutdated(State state, Video item) {
     private void hideWatchedContent() {
         Video video = getVideo();
 
-        if (video == null || video.percentWatched < 95) {
+        if (video == null) {
             return;
         }
 
-        if (mGeneralData.isHideWatchedFromWatchLaterEnabled()) {
+        if (mGeneralData.isHideWatchedFromWatchLaterEnabled() && video.percentWatched > 95) {
             AppDialogUtil.removeFromWatchLaterPlaylist(getContext(), video);
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -256,7 +256,7 @@ private void initIntentChain() {
                 ViewManager viewManager = ViewManager.instance(getContext());
 
                 // Also, ensure that we're not opening tube link from description dialog
-                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && !ViewManager.isVisible(PlaybackPresenter.instance(getContext()).getView())) {
+                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && !AppDialogPresenter.instance(getContext()).isDialogShown()) {
                     viewManager.setSinglePlayerMode(true);
                 }
 
@@ -311,7 +311,7 @@ private void initIntentChain() {
         });
     }
 
-    private void applyNewIntent(Intent intent) {
+    public void applyNewIntent(Intent intent) {
         if (intent != null) {
             mBridgePackageName = intent.getStringExtra("bridge_package_name");
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -159,7 +159,8 @@ public static void openUrlInternally(Context context, Uri url) {
         //intent.setClass(context, ViewManager.instance(context).getActivity(SplashView.class));
         PackageManager packageManager = context.getPackageManager();
         if (intent.resolveActivity(packageManager) != null) {
-            context.startActivity(intent);
+            SplashPresenter.instance(context).applyNewIntent(intent);
+            //context.startActivity(intent);
         } else {
             // Fallback to the chooser dialog
             showMultiChooser(context, url);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -255,7 +255,7 @@ private void initIntentChain() {
                 ViewManager viewManager = ViewManager.instance(getContext());
 
                 // Also, ensure that we're not opening tube link from description dialog
-                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && !AppDialogPresenter.instance(getContext()).isDialogShown()) {
+                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && !ViewManager.isVisible(PlaybackPresenter.instance(getContext()).getView())) {
                     viewManager.setSinglePlayerMode(true);
                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -541,7 +541,7 @@ private void continueGroupIfNeeded(VideoGroup group) {
         }
     }
 
-    public void focusAndContinueIfNeeded(VideoGroup group) {
+    private void focusAndContinueIfNeeded(VideoGroup group) {
         Video video = getPlayer().getVideo();
 
         if (group == null || group.isEmpty() || video == null || !video.hasVideo()) {
@@ -553,7 +553,7 @@ public void focusAndContinueIfNeeded(VideoGroup group) {
         if (index >= 0) { // continuation group starts with zero index
             Log.d(TAG, "Found current video index: %s", index);
             Video found = group.getVideos().get(index);
-            if (!found.isMix()) {
+            if (!found.isMix() || isSectionPlaylistEnabled(video)) {
                 getPlayer().focusSuggestedItem(found);
             }
             mFocusCount = 0; // Stop the continuation loop
@@ -724,7 +724,7 @@ private void disposeActions() {
 
     private boolean isSectionPlaylistEnabled(Video video) {
         return mPlayerTweaksData.isSectionPlaylistEnabled() && video != null && video.getGroup() != null &&
-                (video.playlistId == null || video.nextMediaItem == null) && (!video.isRemote || video.remotePlaylistId == null);
+                (video.playlistId == null || video.nextMediaItem == null || video.belongsToSearch()) && (!video.isRemote || video.remotePlaylistId == null);
     }
 
     private void appendDislikes(Video video) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -429,7 +429,7 @@ private void applyRendererErrorAction(int rendererIndex) {
 
     private void applyErrorAction(Throwable error) {
         if (error instanceof OutOfMemoryError) {
-            mPlayerData.setVideoBufferType(PlayerEngine.BUFFER_LOW);
+            mPlayerData.setVideoBufferType(PlayerData.BUFFER_LOW);
         } else if (Helpers.startsWithAny(error.getMessage(), "Unable to connect to ", "Invalid NAL length")) {
             mPlayerTweaksData.setPlayerDataSource(PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
         }
@@ -526,7 +526,7 @@ private boolean acceptDashVideoInfo(MediaItemFormatInfo formatInfo) {
             return false;
         }
 
-        if (formatInfo.isLive() && mPlayerTweaksData.isDashUrlStreamsForced()) {
+        if (formatInfo.isLive() && (mPlayerTweaksData.isDashUrlStreamsForced() || mPlayerData.getVideoBufferType() == PlayerData.BUFFER_NONE)) {
             return false;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -271,15 +271,13 @@ private void appendDeveloperCategory(AppDialogPresenter settingsPresenter) {
                 getContext().getString(R.string.live_stream_fix_desc),
                 option -> {
                     mPlayerTweaksData.forceHlsStreams(option.isSelected());
-                    mPlayerTweaksData.forceDashUrlStreams(false);
                 },
                 mPlayerTweaksData.isHlsStreamsForced()));
 
         options.add(UiOptionItem.from(getContext().getString(R.string.live_stream_fix_4k),
                 getContext().getString(R.string.live_stream_fix_4k_desc),
                 option -> {
                     mPlayerTweaksData.forceDashUrlStreams(option.isSelected());
-                    mPlayerTweaksData.forceHlsStreams(false);
                 },
                 mPlayerTweaksData.isDashUrlStreamsForced()));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -12,6 +12,7 @@
 import com.liskovsoft.sharedutils.locale.LocaleUtility;
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.manager.PlayerEngine;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.manager.PlayerEngineConstants;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.manager.PlayerUI;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.SubtitleManager.SubtitleStyle;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
@@ -28,7 +29,7 @@
 import java.util.Map;
 import java.util.Set;
 
-public class PlayerData extends DataChangeBase implements ProfileChangeListener {
+public class PlayerData extends DataChangeBase implements PlayerEngineConstants, ProfileChangeListener {
     private static final String VIDEO_PLAYER_DATA = "video_player_data";
     public static final int ONLY_UI = 0;
     public static final int UI_AND_PAUSE = 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -211,6 +211,7 @@ public void enableKeepFinishedActivity(boolean enable) {
 
     public void forceHlsStreams(boolean enable) {
         mIsHlsStreamsForced = enable;
+        mIsDashUrlStreamsForced = false;
         persistData();
     }
 
@@ -220,6 +221,7 @@ public boolean isHlsStreamsForced() {
 
     public void forceDashUrlStreams(boolean enable) {
         mIsDashUrlStreamsForced = enable;
+        mIsHlsStreamsForced = false;
         persistData();
     }
 

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitle.java
Patch:
@@ -31,6 +31,7 @@
  */
 /* package */ final class WebvttSubtitle implements Subtitle {
 
+  private static final long MAX_CUE_LENGTH_US = 10_000_000; // NOTE: lower values may broke some videos
   private final List<WebvttCue> cues;
   private final int numCues;
   private final long[] cueTimesUs;
@@ -52,7 +53,7 @@ public WebvttSubtitle(List<WebvttCue> cues) {
       cueTimesUs[arrayIndex] = startTime;
       // MOD: fix long lasting subs
       //cueTimesUs[arrayIndex + 1] = cue.endTime;
-      cueTimesUs[arrayIndex + 1] = length <= 5_000_000 ? endTime : startTime + 5_000_000;
+      cueTimesUs[arrayIndex + 1] = length <= MAX_CUE_LENGTH_US ? endTime : startTime + MAX_CUE_LENGTH_US;
     }
     sortedCueTimesUs = Arrays.copyOf(cueTimesUs, cueTimesUs.length);
     Arrays.sort(sortedCueTimesUs);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/CommentsController.java
Patch:
@@ -64,7 +64,7 @@ private void openCommentsDialog() {
             getPlayer().showControls(false);
         }
 
-        String title = getPlayer() != null ? getPlayer().getVideo().getTitle() : mTitle;
+        String title = getPlayer() != null && getPlayer().getVideo() != null ? getPlayer().getVideo().getTitle() : mTitle;
 
         CommentsReceiver commentsReceiver = new CommentsReceiverImpl(getContext()) {
             @Override

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
Patch:
@@ -299,7 +299,7 @@ public DataSpec(
     this.flags = flags;
     this.httpRequestHeaders = Collections.unmodifiableMap(new HashMap<>(httpRequestHeaders));
 
-    //applyRangeQuery();
+    applyRangeQuery();
   }
 
   /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/KeyTranslator.java
Patch:
@@ -92,7 +92,8 @@ private boolean checkEvent(KeyEvent event) {
 
         mIsChecked = (event.getKeyCode() != KeyEvent.KEYCODE_DPAD_UP && event.getKeyCode() != KeyEvent.KEYCODE_DPAD_DOWN &&
                 event.getKeyCode() != KeyEvent.KEYCODE_DPAD_LEFT && event.getKeyCode() != KeyEvent.KEYCODE_DPAD_RIGHT) ||
-                (!PlaybackPresenter.instance(null).isOverlayShown() &&
+                (PlaybackPresenter.instance(null).isPlaying() &&
+                        !PlaybackPresenter.instance(null).isOverlayShown() &&
                         !AppDialogPresenter.instance(null).isDialogShown());
 
         return mIsChecked;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/AppPrefs.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class AppPrefs extends SharedPreferencesBase implements AccountChangeListener {
     private static final String TAG = AppPrefs.class.getSimpleName();
@@ -27,7 +28,7 @@ public class AppPrefs extends SharedPreferencesBase implements AccountChangeList
     private static final String LAST_PROFILE_NAME = "last_profile_name";
     private String mBootResolution;
     private final Map<String, Integer> mDataHashes = new HashMap<>();
-    private final List<ProfileChangeListener> mListeners = new ArrayList<>();
+    private final List<ProfileChangeListener> mListeners = new CopyOnWriteArrayList<>();
 
     public interface ProfileChangeListener {
         void onProfileChanged();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -251,8 +251,8 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
 
     @Override
     public void onBackPressed() {
-        super.onBackPressed();
         // Oculus Quest fix: back button not closing activity
+        //super.onBackPressed();
         finish();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -229,6 +229,8 @@ private void syncCurrentVideo(MediaItemMetadata mediaItemMetadata, Video video)
         getPlayer().setVideo(video);
 
         getPlayer().setNextTitle(getNext() != null ? getNext().getTitle() : null);
+
+        appendDislikes(video);
     }
 
     public void loadSuggestions(Video video) {
@@ -298,7 +300,6 @@ private void clearSuggestionsIfNeeded(Video video) {
 
     private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video) {
         syncCurrentVideo(mediaItemMetadata, video);
-        appendDislikes(video);
 
         appendSuggestions(video, mediaItemMetadata);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -1,5 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.common.utils;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.Build;
 import com.liskovsoft.mediaserviceinterfaces.MediaItemService;
@@ -560,6 +561,7 @@ public static OptionCategory createPlayerScreenOffDimmingCategory(Context contex
         return OptionCategory.from(PLAYER_SCREEN_DIMMING_ID, OptionCategory.TYPE_RADIO_LIST, title, options);
     }
 
+    @SuppressLint("StringFormatMatches")
     public static OptionCategory createPlayerScreenOffTimeoutCategory(Context context, PlayerTweaksData data, Runnable onApply) {
         List<OptionItem> options = new ArrayList<>();
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GlobalKeyTranslator.java
Patch:
@@ -22,6 +22,7 @@ protected void initKeyMapping() {
         Map<Integer, Integer> globalKeyMapping = getKeyMapping();
 
         // Fix rare situations with some remotes. E.g. Shield.
+        // NOTE: 'sendKey' won't work with Android 13
         globalKeyMapping.put(KeyEvent.KEYCODE_BUTTON_B, KeyEvent.KEYCODE_BACK);
         // Fix for the unknown usb remote controller: https://smartyoutubetv.github.io/#comment-3742343397
         globalKeyMapping.put(KeyEvent.KEYCODE_ESCAPE, KeyEvent.KEYCODE_BACK);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -631,6 +631,9 @@ public static void sendKey(int key) {
         }
     }
 
+    /**
+     * NOTE: Doesn't work in Android 13
+     */
     public static void sendKey(KeyEvent keyEvent) {
         try {
             Instrumentation instrumentation = new Instrumentation();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -59,7 +59,9 @@ public boolean dispatchKeyEvent(KeyEvent event) {
             finishTheApp();
         }
 
-        return mGlobalKeyTranslator.translate(event) || super.dispatchKeyEvent(event);
+        //return mGlobalKeyTranslator.translate(event) || super.dispatchKeyEvent(event);
+        KeyEvent newEvent = mGlobalKeyTranslator.translateAlt(event);
+        return super.dispatchKeyEvent(newEvent);
     }
 
     public UriBackgroundManager getBackgroundManager() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogActivity.java
Patch:
@@ -52,7 +52,9 @@ private void setupActivity() {
 
     @Override
     public boolean dispatchKeyEvent(KeyEvent event) {
-        return mGlobalKeyTranslator.translate(event) || super.dispatchKeyEvent(event);
+        //return mGlobalKeyTranslator.translate(event) || super.dispatchKeyEvent(event);
+        KeyEvent newEvent = mGlobalKeyTranslator.translateAlt(event);
+        return super.dispatchKeyEvent(newEvent);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -150,7 +150,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
                 .error(
                     // Updated thumbnail url not found
                     Glide.with(context)
-                        .load(video.getCardImageUrl())
+                        .load(video.cardImageUrl)
                         //.placeholder(mDefaultCardImage)
                         .apply(ViewUtil.glideOptions())
                         .listener(mErrorListener)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -213,7 +213,7 @@ private void initPinnedSections() {
         for (Video item : pinnedItems) {
             if (item != null) {
                 if (item.extra == -1) {
-                    BrowseSection section = new BrowseSection(item.hashCode(), item.getTitle(), BrowseSection.TYPE_GRID, item.cardImageUrl, false, item);
+                    BrowseSection section = new BrowseSection(item.hashCode(), item.getTitle(), BrowseSection.TYPE_GRID, item.getCardImageUrl(), false, item);
                     mSections.add(section);
                 } else {
                     BrowseSection section = mSectionsMapping.get(item.extra);
@@ -497,7 +497,7 @@ public void pinItem(Video item) {
         mGeneralData.addPinnedItem(item);
         mGridMapping.put(item.hashCode(), createPinnedAction(item));
 
-        BrowseSection newSection = new BrowseSection(item.hashCode(), item.getTitle(), BrowseSection.TYPE_GRID, item.cardImageUrl, false, item);
+        BrowseSection newSection = new BrowseSection(item.hashCode(), item.getTitle(), BrowseSection.TYPE_GRID, item.getCardImageUrl(), false, item);
         Helpers.removeIf(mSections, section -> section.getId() == newSection.getId());
         mSections.add(newSection);
         getView().addSection(-1, newSection);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/ClickbaitRemover.java
Patch:
@@ -40,10 +40,10 @@ public static String updateThumbnail(Video video, int thumbQuality) {
             return null;
         }
 
-        if (video.isLive || video.isUpcoming) {
-            return video.cardImageUrl;
+        if (video.isLive || video.isUpcoming || video.altCardImageUrl != null) {
+            return video.getCardImageUrl();
         }
 
-        return updateThumbnail(video.cardImageUrl, thumbQuality);
+        return updateThumbnail(video.getCardImageUrl(), thumbQuality);
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -150,7 +150,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
                 .error(
                     // Updated thumbnail url not found
                     Glide.with(context)
-                        .load(video.cardImageUrl)
+                        .load(video.getCardImageUrl())
                         //.placeholder(mDefaultCardImage)
                         .apply(ViewUtil.glideOptions())
                         .listener(mErrorListener)

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -518,7 +518,7 @@ private void createMediaSession() {
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, getVideo().getTitle());
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ARTIST, getVideo().getAuthor());
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, getVideo().getSecondTitle());
-            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, getVideo().cardImageUrl);
+            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, getVideo().getCardImageUrl());
             metadataBuilder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, getDurationMs());
 
             return metadataBuilder.build();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultiVideoGridFragment.java
Patch:
@@ -262,7 +262,7 @@ private void updateGroup2(VideoGroup group) {
             // Remove not supported
             return;
         } else if (action == VideoGroup.ACTION_SYNC) {
-            // Sync not supported
+            mGridAdapter2.sync(group);
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -607,6 +607,6 @@ private boolean isStateOutdated(State state, Video item) {
         float posPercents1 = state.positionMs * 100f / state.durationMs;
         float posPercents2 = item.getPositionMs() * 100f / item.getDurationMs();
 
-        return Math.abs(posPercents1 - posPercents2) > 3 && state.timestamp < item.timestamp;
+        return (posPercents2 != 0 && Math.abs(posPercents1 - posPercents2) > 3) && state.timestamp < item.timestamp;
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -32,7 +32,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
         //System.setProperty("java.net.preferIPv6Addresses", "true");
         // Another IPv6 fix (no effect)
         // https://stackoverflow.com/questions/1920623/sometimes-httpurlconnection-getinputstream-executes-too-slowly
-        System.setProperty("java.net.preferIPv4Stack" , "true");
+        //System.setProperty("java.net.preferIPv4Stack" , "true");
     }
 
     @Override

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
Patch:
@@ -299,7 +299,7 @@ public DataSpec(
     this.flags = flags;
     this.httpRequestHeaders = Collections.unmodifiableMap(new HashMap<>(httpRequestHeaders));
 
-    applyRangeQuery();
+    //applyRangeQuery();
   }
 
   /**

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/mod/SeekModePlaybackFragment.java
Patch:
@@ -81,9 +81,9 @@ private void setSeekMode(boolean inSeek) {
         mInSeek = inSeek;
         if (mInSeek) {
             stopFadeTimer();
+            // Show UI while seeking with FastForward/Rewind keys
+            showControlsOverlay(false);
         }
-        // Show UI while seeking with FastForward/Rewind keys
-        //showControlsOverlay(true);
     }
 
     private void stopFadeTimer() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/mod/SeekModePlaybackFragment.java
Patch:
@@ -83,7 +83,7 @@ private void setSeekMode(boolean inSeek) {
             stopFadeTimer();
         }
         // immediately fade in control row.
-        showControlsOverlay(true);
+        //showControlsOverlay(true);
     }
 
     private void stopFadeTimer() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -870,13 +870,13 @@ private void toggleSubscribe(Video video) {
 
         mSubscribeAction = RxHelper.execute(observable);
 
-        //video.isSubscribed = !video.isSubscribed;
+        boolean isSubscribed = !video.isSubscribed;
 
-        if (!video.isSubscribed && mCallback != null) {
+        if (!isSubscribed && mCallback != null) {
             mCallback.onItemAction(video, VideoMenuCallback.ACTION_UNSUBSCRIBE);
         }
 
-        MessageHelpers.showMessage(getContext(), getContext().getString(!video.isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel));
+        MessageHelpers.showMessage(getContext(), getContext().getString(!isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -51,7 +51,7 @@ public class ExoMediaSourceFactory {
     private static final String TAG = ExoMediaSourceFactory.class.getSimpleName();
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
-    private static final int MAX_SEGMENTS_PER_LOAD = 1;
+    private static final int MAX_SEGMENTS_PER_LOAD = 10;
     private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -870,7 +870,7 @@ private void toggleSubscribe(Video video) {
 
         mSubscribeAction = RxHelper.execute(observable);
 
-        video.isSubscribed = !video.isSubscribed;
+        //video.isSubscribed = !video.isSubscribed;
 
         if (!video.isSubscribed && mCallback != null) {
             mCallback.onItemAction(video, VideoMenuCallback.ACTION_UNSUBSCRIBE);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/chat/ChatItemMessage.java
Patch:
@@ -16,7 +16,7 @@
 import java.util.List;
 
 public class ChatItemMessage implements IMessage {
-    private static final int MAX_LENGTH = 800;
+    private static final int MAX_LENGTH = 700;
     private String mId;
     private CharSequence mText;
     private ChatItemAuthor mAuthor;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -15,6 +15,7 @@
 import com.liskovsoft.sharedutils.locale.LocaleUpdater;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxHelper;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.manager.PlayerEngine;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.ChannelUploadsPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
@@ -410,7 +411,8 @@ private void safeMoveTaskToBack(Activity activity) {
      * Small delay to fix PIP transition bug (UI become unresponsive)
      */
     private void safeStartActivity(Context context, Intent intent) {
-        if (PlaybackPresenter.instance(mContext).isInPipMode()) {
+        //if (PlaybackPresenter.instance(mContext).isInPipMode()) {
+        if (PlaybackPresenter.instance(mContext).getBackgroundMode() == PlayerEngine.BACKGROUND_MODE_PIP) {
             Utils.postDelayed(() -> safeStartActivityInt(context, intent), 50);
         } else {
             safeStartActivityInt(context, intent);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -400,10 +400,11 @@ private void runErrorAction(int type, int rendererIndex, Throwable error) {
                 break;
             default:
                 MessageHelpers.showLongMessage(getContext(), getContext().getString(R.string.msg_player_error, type) + "\n" + message);
-                applyErrorAction(error);
                 break;
         }
 
+        applyErrorAction(error);
+
         // Delay to fix frequent requests
         Utils.postDelayed(mFixAndRestartEngine, 3_000);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerController.java
Patch:
@@ -211,8 +211,8 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type, int rendererIndex, String message) {
-        process(listener -> listener.onEngineError(type, rendererIndex, message));
+    public void onEngineError(int type, int rendererIndex, Throwable error) {
+        process(listener -> listener.onEngineError(type, rendererIndex, error));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -118,7 +118,7 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type, int rendererIndex, String message) {
+    public void onEngineError(int type, int rendererIndex, Throwable error) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -177,7 +177,7 @@ public void onMetadata(MediaItemMetadata metadata) {
     }
 
     @Override
-    public void onEngineError(int type, int rendererIndex, String message) {
+    public void onEngineError(int type, int rendererIndex, Throwable error) {
         // Oops. Error happens while playing (network lost etc).
         if (getPlayer().getPositionMs() > 1_000) {
             saveState();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEngineEventListener.java
Patch:
@@ -39,7 +39,7 @@ public interface PlayerEngineEventListener {
     void onVideoLoaded(Video item);
     void onEngineInitialized();
     void onEngineReleased();
-    void onEngineError(int type, int rendererIndex, String message);
+    void onEngineError(int type, int rendererIndex, Throwable error);
     void onTrackChanged(FormatItem track);
     void onTrackSelected(FormatItem track);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -324,7 +324,7 @@ public void onPlayerError(ExoPlaybackException error) {
 
         Throwable nested = error.getCause() != null ? error.getCause() : error;
 
-        mEventListener.onEngineError(error.type, error.rendererIndex, nested.getMessage());
+        mEventListener.onEngineError(error.type, error.rendererIndex, nested);
     }
 
     @Override

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListAdapter.java
Patch:
@@ -189,7 +189,7 @@ public void addToStart(MESSAGE message, boolean scroll) {
      * @param reverse  {@code true} if need to reverse messages before adding.
      */
     public void addToEnd(List<MESSAGE> messages, boolean reverse) {
-        if (messages.isEmpty()) return;
+        if (messages == null || messages.isEmpty()) return;
 
         if (reverse) Collections.reverse(messages);
 
@@ -383,7 +383,7 @@ public void clear(boolean notifyDataSetChanged) {
     }
 
     public void scrollToPosition(int position) {
-        if (layoutManager != null && !items.isEmpty()) {
+        if (position != -1 && layoutManager != null && !items.isEmpty()) {
             layoutManager.scrollToPosition(position);
         }
     }

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/channels/RunOnInstallReceiver.java
Patch:
@@ -25,8 +25,8 @@ public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Synchronizing database");
 
         if (Helpers.isATVChannelsSupported(context) || Helpers.isATVRecommendationsSupported(context)) {
-            //SynchronizeDatabaseWorker.schedule(context);
-            SynchronizeDatabaseJobService.schedule(context);
+            SynchronizeDatabaseWorker.schedule(context);
+            //SynchronizeDatabaseJobService.schedule(context);
         }
     }
 }
\ No newline at end of file

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -168,7 +168,9 @@ public void onDestroyView() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mCommentsReceiver.onFinish(new CommentsBackup(mBackupMessages, mFocusedMessage, mCurrentGroup));
+        if (mCommentsReceiver != null) {
+            mCommentsReceiver.onFinish(new CommentsBackup(mBackupMessages, mFocusedMessage, mCurrentGroup));
+        }
     }
 
     private void backupMessages() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -322,10 +322,10 @@ private void processCommand(Command command) {
                 break;
             case Command.TYPE_VOLUME:
                 //Utils.setGlobalVolume(getActivity(), command.getVolume());
-                Utils.setVolume(getContext(), getPlayer(), command.getVolume());
+                Utils.setVolume(getContext(), getPlayer(), command.getVolume(), true);
 
                 //postVolumeChange(Utils.getGlobalVolume(getActivity()));
-                postVolumeChange(Utils.getVolume(getContext(), getPlayer())); // Just in case volume cannot be changed (e.g. Fire TV stick)
+                postVolumeChange(Utils.getVolume(getContext(), getPlayer(), true)); // Just in case volume cannot be changed (e.g. Fire TV stick)
                 break;
             case Command.TYPE_STOP:
                 // Close player
@@ -413,7 +413,7 @@ private void processCommand(Command command) {
     @Override
     public boolean onKeyDown(int keyCode) {
         //postVolumeChange(Utils.getGlobalVolume(getActivity()));
-        postVolumeChange(Utils.getVolume(getContext(), getPlayer()));
+        postVolumeChange(Utils.getVolume(getContext(), getPlayer(), true));
 
         return false;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/KeyTranslator.java
Patch:
@@ -3,6 +3,7 @@
 import android.view.KeyEvent;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxHelper;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 
@@ -63,8 +64,8 @@ private KeyEvent translate(KeyEvent origin, Integer newKeyCode) {
     private boolean checkEvent(KeyEvent event) {
         return (event.getKeyCode() != KeyEvent.KEYCODE_DPAD_UP && event.getKeyCode() != KeyEvent.KEYCODE_DPAD_DOWN &&
                 event.getKeyCode() != KeyEvent.KEYCODE_DPAD_LEFT && event.getKeyCode() != KeyEvent.KEYCODE_DPAD_RIGHT) ||
-                (PlaybackPresenter.instance(null).getView() != null &&
-                        !PlaybackPresenter.instance(null).getView().getPlayer().isOverlayShown());
+                (!PlaybackPresenter.instance(null).isOverlayShown() &&
+                 !AppDialogPresenter.instance(null).isDialogShown());
     }
 
     protected abstract void initKeyMapping();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -198,6 +198,7 @@ public void release() {
         }
 
         mPlayerView = null;
+        mVideo = null;
         // Don't destroy it (needed inside bridge)!
         //mEventListener = null;
     }

File: leanbackassistant/src/main/java/com/liskovsoft/leanbackassistant/channels/RunOnInstallReceiver.java
Patch:
@@ -25,8 +25,8 @@ public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Synchronizing database");
 
         if (Helpers.isATVChannelsSupported(context) || Helpers.isATVRecommendationsSupported(context)) {
-            SynchronizeDatabaseWorker.schedule(context);
-            //SynchronizeDatabaseJobService.schedule(context);
+            //SynchronizeDatabaseWorker.schedule(context);
+            SynchronizeDatabaseJobService.schedule(context);
         }
     }
 }
\ No newline at end of file

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -553,6 +553,7 @@ public static void chooseChannelPresenter(Context context, Video item) {
             } else if (type == MediaGroup.TYPE_CHANNEL) {
                 if (atomicIndex.incrementAndGet() == 1) {
                     ChannelPresenter.instance(context).clear();
+                    ChannelPresenter.instance(context).setChannel(item);
                 }
                 ChannelPresenter.instance(context).updateRows(group);
             } else {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -179,7 +179,7 @@ public void finish() {
         if (doNotDestroy() && !skipPip()) {
             // Ensure to opening this activity when the user is returning to the app
             mViewManager.blockTop(this);
-            mViewManager.startParentViewDelay(this);
+            mViewManager.startParentView(this);
         } else {
             if (mPlayerTweaksData.isKeepFinishedActivityEnabled()) {
                 //moveTaskToBack(true); // Don't do this or you'll have problems when player overlaps other apps (e.g. casting)
@@ -283,7 +283,7 @@ public void onUserLeaveHint() {
                     // Ensure to opening this activity when the user is returning to the app
                     mViewManager.blockTop(this);
                     // Return to previous activity (create point from that app could be launched)
-                    mViewManager.startParentViewDelay(this);
+                    mViewManager.startParentView(this);
                     // Enable collapse app to Home launcher
                     mViewManager.enableMoveToBack(true);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -435,7 +435,7 @@ private void safeStartActivity(Context context, Intent intent) {
     private void safeStartActivityInt(Context context, Intent intent) {
         try {
             context.startActivity(intent);
-        } catch (IllegalArgumentException | ActivityNotFoundException e) {
+        } catch (IllegalArgumentException | ActivityNotFoundException | IndexOutOfBoundsException e) {
             Log.e(TAG, "Error when starting activity: %s", e.getMessage());
             MessageHelpers.showLongMessage(context, e.getLocalizedMessage());
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -223,7 +223,7 @@ private void showHideScreensaver(boolean show) {
         }
 
         // Disable screensaver on certain circumstances
-        if (show && (isPlaying() || isSigning() || mGeneralData.isScreensaverDisabled() || mMode == MODE_SCREEN_OFF)) {
+        if (show && (isPlaying() || isSigning() || mGeneralData.isScreensaverDisabled())) {
             Helpers.disableScreensaver(activity);
             return;
         }
@@ -243,7 +243,8 @@ private boolean isPlaying() {
         }
 
         PlaybackView playbackView = PlaybackPresenter.instance(activity).getView();
-        return playbackView != null && playbackView.getPlayer().isPlaying();
+        // Fix screen off before the video started
+        return playbackView != null && (playbackView.getPlayer().isPlaying() || playbackView.getPlayer().getPositionMs() == 0);
     }
 
     private boolean isSigning() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -223,7 +223,7 @@ private void showHideScreensaver(boolean show) {
         }
 
         // Disable screensaver on certain circumstances
-        if (show && (isPlaying() || isSigning() || mGeneralData.isScreensaverDisabled())) {
+        if (show && (isPlaying() || isSigning() || mGeneralData.isScreensaverDisabled() || mMode == MODE_SCREEN_OFF)) {
             Helpers.disableScreensaver(activity);
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -111,7 +111,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
         boolean result = super.onKeyDown(keyCode, event);
 
         // Fix buggy G20s menu key (focus lost on key press)
-        return KeyHelpers.isMenuKey(keyCode) || throttleKeyDown() || result;
+        return KeyHelpers.isMenuKey(keyCode) || throttleKeyDown(keyCode) || result;
     }
 
     public void finishReally() {
@@ -300,8 +300,8 @@ public static void invalidate() {
      * Comments focus fix<br/>
      * https://stackoverflow.com/questions/34277425/recyclerview-items-lose-focus
      */
-    private boolean throttleKeyDown() {
-        if (mEnableThrottleKeyDown) {
+    private boolean throttleKeyDown(int keyCode) {
+        if (mEnableThrottleKeyDown && keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
             long current = System.currentTimeMillis();
             if (current - mLastKeyDownTime < 300) {
                 return true;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogFragment.java
Patch:
@@ -21,6 +21,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionCategory;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.views.AppDialogView;
+import com.liskovsoft.smartyoutubetv2.common.misc.MotherActivity;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.ChatPreference;
@@ -178,6 +179,7 @@ public boolean onPreferenceDisplayDialog(@NonNull PreferenceFragment caller, @No
 
             return true;
         } else if (pref instanceof CommentsPreference) {
+            ((MotherActivity) getActivity()).enableThrottleKeyDown(true);
             CommentsPreference commentsPreference = (CommentsPreference) pref;
             CommentsPreferenceDialogFragment f = CommentsPreferenceDialogFragment.newInstance(commentsPreference.getCommentsReceiver(), commentsPreference.getKey());
             f.enableTransparent(mIsTransparent);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -601,8 +601,7 @@ private void appendPlayVideoButton() {
     }
 
     private void appendPlayVideoIncognitoButton() {
-        if (!mIsPlayVideoIncognitoButtonEnabled || mVideo == null || mVideo.videoId == null ||
-            ViewManager.instance(getContext()).getTopView() == PlaybackView.class) {
+        if (!mIsPlayVideoIncognitoButtonEnabled || mVideo == null || mVideo.videoId == null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/AutoFrameRateController.java
Patch:
@@ -30,7 +30,7 @@ public class AutoFrameRateController extends PlayerEventListenerHelper implement
     private static final int AUTO_FRAME_RATE_ID = 21;
     private static final int AUTO_FRAME_RATE_DELAY_ID = 22;
     private static final int AUTO_FRAME_RATE_MODES_ID = 23;
-    private static final long SHORTS_DURATION_MS = 60 * 1_000;
+    private static final long SHORTS_DURATION_MS = 30 * 1_000;
     private final HQDialogController mUiManager;
     private final VideoStateController mStateUpdater;
     private final AutoFrameRateHelper mAutoFrameRateHelper;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -630,9 +630,11 @@ private void appendSubscribeButton() {
             return;
         }
 
+        mVideo.isSubscribed = mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads();
+
         mDialogPresenter.appendSingleButton(
                 UiOptionItem.from(getContext().getString(
-                        mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads() ?
+                        mVideo.isSubscribed ?
                                 R.string.unsubscribe_from_channel : R.string.subscribe_to_channel),
                         optionItem -> toggleSubscribe()));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -856,8 +856,7 @@ private void toggleSubscribe(Video video) {
             mCallback.onItemAction(video, VideoMenuCallback.ACTION_UNSUBSCRIBE);
         }
 
-        MessageHelpers.showMessage(getContext(),
-                video.getAuthor() + ": " + getContext().getString(!video.isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel));
+        MessageHelpers.showMessage(getContext(), getContext().getString(!video.isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -633,7 +633,7 @@ private void appendSubscribeButton() {
         mDialogPresenter.appendSingleButton(
                 UiOptionItem.from(getContext().getString(
                         mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads() ?
-                                R.string.unsubscribe_from_channel : R.string.subscribe_unsubscribe_from_channel),
+                                R.string.unsubscribe_from_channel : R.string.subscribe_to_channel),
                         optionItem -> toggleSubscribe()));
     }
 
@@ -822,6 +822,8 @@ private void toggleSubscribe() {
             return;
         }
 
+        mVideo.isSynced = true; // default to subscribe
+
         // Until synced we won't really know weather we subscribed to a channel.
         // Exclusion: channel item (can't be synced)
         // Note, regular items (from subscribed section etc) aren't contain channel id

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/HeaderVideoGroupObjectAdapter.java
Patch:
@@ -90,7 +90,7 @@ public void filter(String text) {
         });
 
         // Move 'started with text' channels to the top
-        if (text.length() > 1 || Helpers.isNumeric(text)) {
+        if (result != null && (text.length() > 1 || Helpers.isNumeric(text))) {
             Collections.sort(result, (o1, o2) -> {
                 String title1 = o1.getTitle();
                 String title2 = o2.getTitle();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/WeakHashSet.java
Patch:
@@ -3,15 +3,15 @@
 import com.liskovsoft.sharedutils.helpers.Helpers;
 
 import java.lang.ref.WeakReference;
-import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class WeakHashSet<T> {
     public interface OnItem<T> {
         void onItem(T item);
     }
 
-    private final List<WeakReference<T>> mWeakReferences = new ArrayList<>();
+    private final List<WeakReference<T>> mWeakReferences = new CopyOnWriteArrayList<>(); // ConcurrentModificationException fix
 
     public boolean add(T item) {
         if (item != null && !contains(item)) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultiVideoGridFragment.java
Patch:
@@ -310,6 +310,7 @@ private void addSearchHeader() {
         mGridAdapter1.setHeader(new SearchFieldCallback() {
             @Override
             public void onTextChanged(String text) {
+                super.onTextChanged(text);
                 mGridAdapter1.filter(text);
             }
         });

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/SearchFieldPresenter.java
Patch:
@@ -38,7 +38,6 @@ public ViewHolder onCreateViewHolder(ViewGroup parent) {
         View contentView = inflater.inflate(R.layout.search_field, parent, false);
 
         EditText editField = contentView.findViewById(R.id.simple_edit_value);
-        //KeyHelpers.fixShowKeyboard(editField);
         ViewUtil.setDimensions(editField, mWidth, -1); // don't do auto height
         contentView.setOnFocusChangeListener((v, hasFocus) -> {
             Log.d(TAG, "On edit field focused");

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -26,7 +26,7 @@
  */
 public final class Video {
     public static final String TERTIARY_TEXT_DELIM = "•";
-    public static final long MAX_DURATION_MS = 24 * 60 * 60 * 1_000;
+    public static final long MAX_LIVE_DURATION_MS = 24 * 60 * 60 * 1_000;
     private static final String OBJ_DELIM = "&vi;";
     private static final int MAX_AUTHOR_LENGTH_CHARS = 20;
     private static final String[] sNotPlaylistParams = new String[] {"EAIYAQ%3D%3D"};

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/MaxControlsVideoPlayerGlue.java
Patch:
@@ -197,7 +197,7 @@ private void updateLiveEndingTime() {
         }
 
         // Apply duration on videos with uncommon length.
-        if (playerAdapter.getDuration() > Video.MAX_DURATION_MS) {
+        if (playerAdapter.getDuration() > Video.MAX_LIVE_DURATION_MS) {
             controlsRow.setDuration(
                     playerAdapter.isPrepared() ? liveDurationMs : -1);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/SearchSettingsPresenter.java
Patch:
@@ -42,7 +42,7 @@ private void appendSpeechRecognizerCategory(AppDialogPresenter settingsPresenter
 
         for (int[] pair : new int[][] {
                 {R.string.speech_recognizer_system, SearchData.SPEECH_RECOGNIZER_SYSTEM},
-                {R.string.speech_recognizer_external_1, SearchData.SPEECH_RECOGNIZER_DEFAULT},
+                {R.string.speech_recognizer_external_1, SearchData.SPEECH_RECOGNIZER_INTENT},
                 {R.string.speech_recognizer_external_2, SearchData.SPEECH_RECOGNIZER_GOTEV}}) {
             options.add(UiOptionItem.from(getContext().getString(pair[0]),
                     optionItem -> mSearchData.setSpeechRecognizerType(pair[1]),

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -6,7 +6,7 @@
 
 public class SearchData {
     public static final int SPEECH_RECOGNIZER_SYSTEM = 0;
-    public static final int SPEECH_RECOGNIZER_DEFAULT = 1;
+    public static final int SPEECH_RECOGNIZER_INTENT = 1;
     public static final int SPEECH_RECOGNIZER_GOTEV = 2;
     private static final String SEARCH_DATA = "search_data";
     @SuppressLint("StaticFieldLeak")

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -160,7 +160,7 @@ private void setupListenersAndPermissions() {
                 //    setSpeechRecognitionCallback(mDefaultCallback);
                 //}
                 break;
-            case SearchData.SPEECH_RECOGNIZER_DEFAULT:
+            case SearchData.SPEECH_RECOGNIZER_INTENT:
                 setSpeechRecognitionCallback(mDefaultCallback);
                 break;
             case SearchData.SPEECH_RECOGNIZER_GOTEV:

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ChannelView.java
Patch:
@@ -4,6 +4,7 @@
 
 public interface ChannelView {
     void update(VideoGroup videoGroup);
+    void setPosition(int index);
     void showProgressBar(boolean show);
     void clear();
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultipleRowsFragment.java
Patch:
@@ -118,7 +118,7 @@ public void clear() {
         }
 
         // Reset the position (bug appeared after fragment been reused)
-        setPosition(0);
+        setPosition(mChannelHeaderCallback != null ? 1 : 0);
     }
 
     private void removeByIndex(int idx) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -349,6 +349,7 @@ public void onSearchSettingsClicked() {
                     for (MediaGroup group : items) {
                         final int tempIdx = idx;
                         options.add(UiOptionItem.from(group.getTitle(), item -> {
+                            dialogPresenter.closeDialog();
                             Observable<MediaGroup> continuation = mHubService.getContentService().continueGroupObserve(group);
                             Disposable result2 = continuation.subscribe(mediaGroup -> {
                                 VideoGroup replace = VideoGroup.from(mediaGroup);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -61,9 +61,8 @@ public class MainUIData extends DataChangeBase {
     public static final int TOP_BUTTON_DEFAULT = TOP_BUTTON_SEARCH | TOP_BUTTON_BROWSE_ACCOUNTS;
     public static final long MENU_ITEM_DEFAULT = MENU_ITEM_PIN_TO_SIDEBAR | MENU_ITEM_NOT_INTERESTED | MENU_ITEM_REMOVE_FROM_HISTORY |
             MENU_ITEM_MOVE_SECTION_UP | MENU_ITEM_MOVE_SECTION_DOWN | MENU_ITEM_RENAME_SECTION | MENU_ITEM_SAVE_PLAYLIST |
-            MENU_ITEM_ADD_TO_PLAYLIST | MENU_ITEM_SUBSCRIBE | MENU_ITEM_CREATE_PLAYLIST | MENU_ITEM_STREAM_REMINDER | MENU_ITEM_TOGGLE_HISTORY |
-            MENU_ITEM_PLAYLIST_ORDER | MENU_ITEM_CLEAR_HISTORY | MENU_ITEM_OPEN_CHANNEL | MENU_ITEM_REMOVE_FROM_SUBSCRIPTIONS | MENU_ITEM_PLAY_NEXT |
-            MENU_ITEM_OPEN_PLAYLIST | MENU_ITEM_SHARE_QR_LINK;
+            MENU_ITEM_ADD_TO_PLAYLIST | MENU_ITEM_CREATE_PLAYLIST | MENU_ITEM_STREAM_REMINDER | MENU_ITEM_PLAYLIST_ORDER |
+            MENU_ITEM_OPEN_CHANNEL | MENU_ITEM_REMOVE_FROM_SUBSCRIPTIONS | MENU_ITEM_PLAY_NEXT | MENU_ITEM_OPEN_PLAYLIST;
     private static final Long[] MENU_ITEM_DEFAULT_ORDER = { MENU_ITEM_PLAY_VIDEO, MENU_ITEM_PLAY_VIDEO_INCOGNITO, MENU_ITEM_REMOVE_FROM_HISTORY, MENU_ITEM_STREAM_REMINDER, MENU_ITEM_RECENT_PLAYLIST,
             MENU_ITEM_ADD_TO_PLAYLIST, MENU_ITEM_CREATE_PLAYLIST, MENU_ITEM_ADD_TO_NEW_PLAYLIST, MENU_ITEM_NOT_INTERESTED, MENU_ITEM_REMOVE_FROM_SUBSCRIPTIONS,
             MENU_ITEM_MARK_AS_WATCHED, MENU_ITEM_PLAYLIST_ORDER, MENU_ITEM_PLAY_NEXT, MENU_ITEM_ADD_TO_QUEUE, MENU_ITEM_SHOW_QUEUE, MENU_ITEM_OPEN_CHANNEL, MENU_ITEM_OPEN_PLAYLIST,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -186,7 +186,7 @@ private void continueGroup(VideoGroup group, OnVideoGroup callback, boolean show
                         continueMediaGroup -> {
                             getPlayer().showProgressBar(false);
 
-                            VideoGroup videoGroup = VideoGroup.from(continueMediaGroup, group);
+                            VideoGroup videoGroup = VideoGroup.from(group, continueMediaGroup);
                             getPlayer().updateSuggestions(videoGroup);
 
                             // Merge remote queue with player's queue

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -762,7 +762,7 @@ private void continueGroup(VideoGroup group, boolean showLoading) {
                         continueGroup -> {
                             getView().showProgressBar(false);
 
-                            VideoGroup videoGroup = VideoGroup.from(continueGroup, group);
+                            VideoGroup videoGroup = VideoGroup.from(group, continueGroup);
                             getView().updateSection(videoGroup);
 
                             continueGroupIfNeeded(videoGroup, showLoading);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -217,7 +217,7 @@ private void continueGroup(VideoGroup group) {
         mScrollAction = continuation
                 .subscribe(
                         //continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup)),
-                        continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup, group)),
+                        continueMediaGroup -> getView().update(VideoGroup.from(group, continueMediaGroup)),
                         error -> {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
                             if (getView() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -226,7 +226,7 @@ private void continueGroup(VideoGroup group) {
         mScrollAction = contentService.continueGroupObserve(mediaGroup)
                 .subscribe(
                         //continueMediaGroup -> getView().updateSearch(VideoGroup.from(continueMediaGroup)),
-                        continueMediaGroup -> getView().updateSearch(VideoGroup.from(continueMediaGroup, group)),
+                        continueMediaGroup -> getView().updateSearch(VideoGroup.from(group, continueMediaGroup)),
                         error -> {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
                             if (getView() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -445,7 +445,6 @@ private void showRestoreDialog(BackupAndRestoreManager backupManager, List<Strin
         } else {
             AppDialogUtil.showConfirmationDialog(getContext(), getContext().getString(R.string.app_restore), () -> {
                 backupManager.checkPermAndRestore();
-                MessageHelpers.showMessage(getContext(), R.string.msg_done);
             });
         }
     }
@@ -457,7 +456,6 @@ private void showRestoreSelectorDialog(List<String> backups, BackupAndRestoreMan
         for (String name : backups) {
             options.add(UiOptionItem.from(name, optionItem -> {
                 backupManager.checkPermAndRestore(name);
-                MessageHelpers.showMessage(getContext(), R.string.msg_done);
             }));
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/ViewUtil.java
Patch:
@@ -183,7 +183,7 @@ public static void enableTransparentDialog(Context context, View rootView) {
         int semiTransparent = ContextCompat.getColor(context, R.color.semi_grey);
 
         // Disable shadow outline on parent fragment
-        if (mainContainer instanceof FrameLayout) {
+        if (mainContainer instanceof FrameLayout && VERSION.SDK_INT >= 21) {
             // ViewOutlineProvider: NoClassDefFoundError on API 19
             mainContainer.setOutlineProvider(ViewOutlineProvider.BACKGROUND);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -205,7 +205,7 @@ public boolean isShorts() {
             return false;
         }
 
-        return mVideos.get(0).isShorts;
+        return mVideos.get(mVideos.size() - 1).isShorts;
     }
 
     /**

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
Patch:
@@ -299,7 +299,7 @@ public DataSpec(
     this.flags = flags;
     this.httpRequestHeaders = Collections.unmodifiableMap(new HashMap<>(httpRequestHeaders));
 
-    applyRangeQuery();
+    //applyRangeQuery();
   }
 
   /**
@@ -412,7 +412,7 @@ public DataSpec withUri(Uri uri) {
   }
 
   /**
-   * MODIFIED: Google throttle fix. Found on googlevideo.com<br/>
+   * MOD: Google throttle fix. Found on googlevideo.com<br/>
    * Source: https://github.com/yt-dlp/yt-dlp/issues/6369#issuecomment-1447763187<br/>
    * Also see: {@link DefaultHttpDataSource}
    */

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -368,6 +368,8 @@ public void onVideoItemClicked(Video item) {
             return;
         }
 
+        //Video.printDebugInfo(getContext(), item);
+
         // Check that channels new look enabled and we're on the first column
         if (belongsToChannelUploadsMultiGrid(item)) {
             updateChannelUploadsMultiGrid(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -793,7 +793,7 @@ private void restoreState() {
         mBootSectionId = Helpers.parseInt(split, 1, MediaGroup.TYPE_HOME);
         mIsSettingsSectionEnabled = Helpers.parseBoolean(split, 2, true);
         mAppExitShortcut = Helpers.parseInt(split, 3, EXIT_DOUBLE_BACK);
-        mIsReturnToLauncherEnabled = Helpers.parseBoolean(split, 4, true);
+        mIsReturnToLauncherEnabled = Helpers.parseBoolean(split, 4, false);
         mBackgroundShortcut = Helpers.parseInt(split, 5, BACKGROUND_PLAYBACK_SHORTCUT_HOME_BACK);
         String pinnedItems = Helpers.parseStr(split, 6);
         mIsHideShortsFromSubscriptionsEnabled = Helpers.parseBoolean(split, 7, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/SearchSettingsPresenter.java
Patch:
@@ -79,9 +79,9 @@ private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
                 option -> mSearchData.enableKeyboardAutoShow(option.isSelected()),
                 mSearchData.isKeyboardAutoShowEnabled()));
 
-        //options.add(UiOptionItem.from(getContext().getString(R.string.trending_searches),
-        //        option -> mSearchData.enableTrendingSearches(option.isSelected()),
-        //        mSearchData.isTrendingSearchesEnabled()));
+        options.add(UiOptionItem.from(getContext().getString(R.string.keyboard_fix),
+                option -> mSearchData.enableKeyboardFix(option.isSelected()),
+                mSearchData.isKeyboardFixEnabled()));
 
         settingsPresenter.appendCheckedCategory(getContext().getString(R.string.player_other), options);
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -48,6 +48,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         setupEventListeners();
         enableKeyboardAutoShow(mSearchData.isKeyboardAutoShowEnabled());
+        enableKeyboardFix(mSearchData.isKeyboardFixEnabled());
     }
 
     private void setupEventListeners() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -7,6 +7,7 @@
 import com.liskovsoft.mediaserviceinterfaces.data.MediaGroup;
 import com.liskovsoft.mediaserviceinterfaces.data.SearchOptions;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.sharedutils.rx.RxHelper;
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
@@ -23,7 +24,6 @@
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AccountsData;
 import com.liskovsoft.smartyoutubetv2.common.prefs.SearchData;
-import com.liskovsoft.sharedutils.rx.RxHelper;
 import com.liskovsoft.smartyoutubetv2.common.utils.AppDialogUtil;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
 import io.reactivex.disposables.Disposable;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -136,13 +136,15 @@ private void restoreData() {
         mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, false);
         mSearchOptions = Helpers.parseInt(split, 1, 0);
         mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
-        mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);
+        //mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);
         mIsTempBackgroundModeEnabled = Helpers.parseBoolean(split, 4, false);
         //mIsAltSpeechRecognizerEnabled
         mSpeechRecognizerType = Helpers.parseInt(split, 6, SPEECH_RECOGNIZER_SYSTEM);
         mIsTrendingSearchesEnabled = Helpers.parseBoolean(split, 7, true);
         mIsSearchHistoryDisabled = Helpers.parseBoolean(split, 8, false);
         mIsPopularSearchesDisabled = Helpers.parseBoolean(split, 9, false);
+        mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 10, true);
+
     }
 
     private void persistData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/proxy/WebProxyDialog.java
Patch:
@@ -152,7 +152,7 @@ protected void showProxyConfigDialog() {
         LayoutInflater inflater = LayoutInflater.from(mContext);
         View contentView = inflater.inflate(R.layout.web_proxy_dialog, null);
 
-        KeyHelpers.fixEnterKey(
+        KeyHelpers.fixShowKeyboard(
                 contentView.findViewById(R.id.proxy_host),
                 contentView.findViewById(R.id.proxy_port),
                 contentView.findViewById(R.id.proxy_username),

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/SimpleEditDialog.java
Patch:
@@ -28,7 +28,7 @@ public static void show(Context context, String defaultValue, OnChange onChange,
         View contentView = inflater.inflate(R.layout.simple_edit_dialog, null);
 
         EditText editField = contentView.findViewById(R.id.simple_edit_value);
-        KeyHelpers.fixEnterKey(editField);
+        KeyHelpers.fixShowKeyboard(editField);
 
         editField.setText(defaultValue);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/RemoteController.java
Patch:
@@ -242,6 +242,7 @@ private void processCommand(Command command) {
 
         switch (command.getType()) {
             case Command.TYPE_OPEN_VIDEO:
+            case Command.TYPE_SUBTITLES:
                 if (getPlayer() != null) {
                     getPlayer().showOverlay(false);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -51,7 +51,7 @@ public class ExoMediaSourceFactory {
     private static final String TAG = ExoMediaSourceFactory.class.getSimpleName();
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
-    private static final int MAX_SEGMENTS_PER_LOAD = 10;
+    private static final int MAX_SEGMENTS_PER_LOAD = 1;
     private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -51,7 +51,7 @@ public class ExoMediaSourceFactory {
     private static final String TAG = ExoMediaSourceFactory.class.getSimpleName();
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
-    private static final int MAX_SEGMENTS_PER_LOAD = 1;
+    private static final int MAX_SEGMENTS_PER_LOAD = 10;
     private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -686,12 +686,12 @@ private boolean handleShortsNavigation(int keyCode) {
 
         if (keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
             getMainController().onNextClicked();
-            return true;
+            return true; // hide ui
         }
 
         if (keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
             getMainController().onPreviousClicked();
-            return true;
+            return true; // hide ui
         }
 
         return false;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -86,9 +86,9 @@ public void openVideo(Video item) {
     @Override
     public boolean onPreviousClicked() {
         // Seek to the start on prev
-        if (getPlayer().getPositionMs() > BEGIN_THRESHOLD_MS) {
+        if (getPlayer().getPositionMs() > BEGIN_THRESHOLD_MS && !getVideo().isShorts) {
             saveState(); // in case the user wants to go to previous video
-            getPlayer().setPositionMs(0);
+            getPlayer().setPositionMs(100);
             return true;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/MediaTrack.java
Patch:
@@ -18,6 +18,7 @@ public abstract class MediaTrack {
     public int groupIndex = -1;
     public int trackIndex = -1;
     public boolean isSelected;
+    public boolean isSaved;
     public boolean isPreset;
     public int rendererIndex;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/preference/LeanbackListPreferenceDialogFragment.java
Patch:
@@ -354,7 +354,8 @@ public void onItemClick(ViewHolder viewHolder) {
             final MultiSelectListPreference multiSelectListPreference
                     = (MultiSelectListPreference) getPreference();
             // Pass copies of the set to callChangeListener and setValues to avoid mutations
-            if (multiSelectListPreference.callChangeListener(new HashSet<>(mSelections))) {
+            // MOD: npe fix
+            if (multiSelectListPreference != null && multiSelectListPreference.callChangeListener(new HashSet<>(mSelections))) {
                 multiSelectListPreference.setValues(new HashSet<>(mSelections));
                 mInitialSelections = mSelections;
             } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -207,6 +207,7 @@ private void continueGroup(VideoGroup group, OnVideoGroup callback, boolean show
                             if (getPlayer() != null) {
                                 getPlayer().showProgressBar(false);
                             }
+                            mLastScrollGroup = null;
                         }
                 );
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -771,6 +771,7 @@ private void continueGroup(VideoGroup group, boolean showLoading) {
                             if (getView() != null) {
                                 getView().showProgressBar(false);
                             }
+                            mLastScrollGroup = null;
                         }
                 );
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -253,6 +253,7 @@ private void continueGroup(VideoGroup group) {
                             if (getView() != null) {
                                 getView().showProgressBar(false);
                             }
+                            mLastScrollGroup = null;
                         },
                         () -> getView().showProgressBar(false)
                 );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -223,6 +223,7 @@ private void continueGroup(VideoGroup group) {
                             if (getView() != null) {
                                 getView().showProgressBar(false);
                             }
+                            mLastScrollGroup = null;
                         },
                         () -> getView().showProgressBar(false)
                 );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -10,7 +10,7 @@
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs.ProfileChangeListener;
-import com.liskovsoft.smartyoutubetv2.common.utils.HashList;
+import com.liskovsoft.smartyoutubetv2.common.utils.CopyOnWriteHashList;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -87,7 +87,7 @@ public class GeneralData implements ProfileChangeListener {
     private final Map<Integer, Integer> mDefaultSections = new LinkedHashMap<>();
     private final Map<String, Integer> mPlaylistOrder = new HashMap<>();
     private final List<Video> mPendingStreams = new CopyOnWriteArrayList<>();
-    private final List<Video> mPinnedItems = new HashList<>();
+    private final List<Video> mPinnedItems = new CopyOnWriteHashList<>();
 
     private GeneralData(Context context) {
         mContext = context;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/CopyOnWriteHashList.java
Patch:
@@ -1,8 +1,8 @@
 package com.liskovsoft.smartyoutubetv2.common.utils;
 
-import java.util.ArrayList;
+import java.util.concurrent.CopyOnWriteArrayList;
 
-public class HashList<T> extends ArrayList<T> {
+public class CopyOnWriteHashList<T> extends CopyOnWriteArrayList<T> {
     @Override
     public boolean add(T item) {
         int index = size() - 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -86,7 +86,7 @@ public class GeneralData implements ProfileChangeListener {
     private Video mSelectedSubscriptionsItem;
     private final Map<Integer, Integer> mDefaultSections = new LinkedHashMap<>();
     private final Map<String, Integer> mPlaylistOrder = new HashMap<>();
-    private final List<Video> mPendingStreams = new ArrayList<>();
+    private final List<Video> mPendingStreams = new CopyOnWriteArrayList<>();
     private final List<Video> mPinnedItems = new HashList<>();
 
     private GeneralData(Context context) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -15,7 +15,7 @@ public class VideoGroupObjectAdapter extends ObjectAdapter {
     private static final String TAG = VideoGroupObjectAdapter.class.getSimpleName();
     private final List<Video> mVideoItems;
     private final List<VideoGroup> mVideoGroups = new ArrayList<>(); // keep groups from being garbage collected
-    private static final int CHECK_MAX_SIZE = 100;
+    private static final int CHECK_MAX_SIZE = 200;
 
     public VideoGroupObjectAdapter(VideoGroup videoGroup, Presenter presenter) {
         super(presenter);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/HashList.java
Patch:
@@ -5,7 +5,8 @@
 public class HashList<T> extends ArrayList<T> {
     @Override
     public boolean add(T item) {
-        if (item == null || indexOf(item) == size() - 1) {
+        int index = size() - 1;
+        if (item == null || (index >= 0 && indexOf(item) == index)) {
             return false;
         } else if (contains(item)) {
             remove(item);
@@ -16,7 +17,7 @@ public boolean add(T item) {
 
     @Override
     public void add(int index, T item) {
-        if (item == null || indexOf(item) == index) {
+        if (item == null || (index >= 0 && indexOf(item) == index)) {
             return;
         } else if (contains(item)) {
             remove(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/WeakHashSet.java
Patch:
@@ -3,15 +3,15 @@
 import com.liskovsoft.sharedutils.helpers.Helpers;
 
 import java.lang.ref.WeakReference;
-import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 public class WeakHashSet<T> {
     public interface OnItem<T> {
         void onItem(T item);
     }
 
-    private final List<WeakReference<T>> mWeakReferences = new ArrayList<>();
+    private final List<WeakReference<T>> mWeakReferences = new CopyOnWriteArrayList<>();
 
     public boolean add(T t) {
         if (t != null && !contains(t)) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogActivity.java
Patch:
@@ -98,7 +98,7 @@ protected void onUserLeaveHint() {
         super.onUserLeaveHint();
 
         // Respect PIP mode
-        if (ViewManager.instance(this).getTopView() == PlaybackView.class) {
+        if (ViewManager.instance(this).getTopView() == PlaybackView.class && PlaybackPresenter.instance(this).getContext() instanceof PlaybackActivity) {
             ((PlaybackActivity) PlaybackPresenter.instance(this).getContext()).onUserLeaveHint();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -339,6 +339,7 @@ public void hideStreamsFromSubscriptions(boolean enable) {
 
     public void rememberSubscriptionsPosition(boolean remember) {
         mRememberSubscriptionsPosition = remember;
+        mSelectedSubscriptionsItem = null; // reset on change
         persistState();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -146,7 +146,7 @@ public void onViewPaused() {
     }
 
     private void saveSelectedItems() {
-        if (isSubscriptionsSection()) {
+        if (mCurrentVideo != null && mCurrentVideo.belongsToSubscriptions()) {
             mGeneralData.setSelectedSubscriptionsItem(mCurrentVideo);
         }
     }
@@ -423,6 +423,7 @@ public void onScrollEnd(Video item) {
 
     @Override
     public void onSectionFocused(int sectionId) {
+        saveSelectedItems();
         updateSection(sectionId);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -739,7 +739,9 @@ private void appendPlaylistOrderButton() {
             return;
         }
 
-        if (mVideo == null || !BrowsePresenter.instance(getContext()).isPlaylistsSection()) {
+        BrowsePresenter presenter = BrowsePresenter.instance(getContext());
+
+        if (mVideo == null || !(presenter.isPlaylistsSection() && presenter.inForeground())) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -167,7 +167,8 @@ private int inBounds(String id1, String id2, int size1, int size2, float frameRa
 
         if (Helpers.equals(id1, id2)) {
             result = 0;
-        } else if (sizeLessOrEquals(size2, size1) && fpsLessOrEquals(frameRate2, frameRate1) && bitrateLessOrEquals(bitrate2, bitrate1)) {
+        //} else if (sizeLessOrEquals(size2, size1) && fpsLessOrEquals(frameRate2, frameRate1) && bitrateLessOrEquals(bitrate2, bitrate1)) {
+        } else if (sizeLessOrEquals(size2, size1) && fpsLessOrEquals(frameRate2, frameRate1)) { // NOTE: Removed bitrate check to fix shorts?
             if (TrackSelectorUtil.isHdrCodec(codecs1) == TrackSelectorUtil.isHdrCodec(codecs2)) {
                 result = 1;
             } else if (TrackSelectorUtil.isHdrCodec(codecs1)) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -15,6 +15,7 @@ public class VideoGroupObjectAdapter extends ObjectAdapter {
     private static final String TAG = VideoGroupObjectAdapter.class.getSimpleName();
     private final List<Video> mVideoItems;
     private final List<VideoGroup> mVideoGroups = new ArrayList<>(); // keep groups from being garbage collected
+    private static final int CHECK_MAX_SIZE = 100;
 
     public VideoGroupObjectAdapter(VideoGroup videoGroup, Presenter presenter) {
         super(presenter);
@@ -27,7 +28,7 @@ public boolean addAll(@NonNull Collection<? extends Video> c) {
                 // Duplicated items suddenly appeared in Home, Subscriptions and History.
 
                 // Another alt method.
-                if (size() > 0 && size() < 30) {
+                if (size() > 0 && size() < CHECK_MAX_SIZE) {
                     Helpers.removeIf(c, this::contains);
                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -222,7 +222,9 @@ public static void updateRemoteControlService(Context context) {
                         context, context.getString(R.string.remote_control_permission), () -> {
                             PermissionHelpers.verifyOverlayPermissions(context);
                             // Service that prevents the app from destroying
-                            startService(context, RemoteControlService.class);
+                            if (context instanceof MotherActivity) {
+                                ((MotherActivity) context).addOnResult((request, response, data) -> startService(context, RemoteControlService.class));
+                            }
                         }
                 );
             } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -10,6 +10,7 @@
 import com.liskovsoft.mediaserviceinterfaces.data.Account;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaGroup;
 import com.liskovsoft.sharedutils.helpers.Helpers;
+import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.locale.LocaleUtility;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxHelper;
@@ -131,6 +132,7 @@ public void onViewInitialized() {
         updatePlaylistsStyle();
         updateSections();
         restoreSelectedItems();
+        Utils.updateRemoteControlService(getContext());
 
         // Move default focus
         int selectedSectionIndex = findSectionIndex(mBootstrapSectionId);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -78,7 +78,7 @@ public void onViewInitialized() {
         checkMasterPassword(() -> applyNewIntent(getView().getNewIntent()));
 
         checkAccountPassword();
-        showBootDialogs();
+        showUpdateNotification();
     }
 
     private void applyRunPerInstanceTasks() {
@@ -116,11 +116,10 @@ private void checkAccountPassword() {
         }
     }
 
-    private void showBootDialogs() {
+    private void showUpdateNotification() {
         BootDialogPresenter updatePresenter = BootDialogPresenter.instance(getContext());
         updatePresenter.start();
         //updatePresenter.unhold();
-        Utils.updateRemoteControlService(getContext());
     }
 
     private void runRemoteControlFakeTask() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -602,8 +602,7 @@ private void appendPlayVideoButton() {
 
     private void appendPlayVideoIncognitoButton() {
         if (!mIsPlayVideoIncognitoButtonEnabled || mVideo == null || mVideo.videoId == null ||
-            ViewManager.instance(getContext()).getTopView() == PlaybackView.class ||
-            BrowsePresenter.instance(getContext()).isHistorySection()) {
+            ViewManager.instance(getContext()).getTopView() == PlaybackView.class) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -653,6 +653,8 @@ public FormatItem getDefaultVideoFormat() {
         if (formatItem == null) {
             if (VERSION.SDK_INT <= 19) { // Android 4 playback crash fix (memory leak?)
                 formatItem = FormatItem.VIDEO_SD_AVC_30;
+            } else if (VERSION.SDK_INT <= 23 && Helpers.isVP9ResolutionSupported(1080)) {
+                formatItem = FormatItem.VIDEO_FHD_VP9_60;
             } else if (Helpers.isVP9ResolutionSupported(2160)) {
                 formatItem = FormatItem.VIDEO_4K_VP9_60;
             } else if (Helpers.isVP9ResolutionSupported(1080)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -322,7 +322,6 @@ private void checkMasterPassword(Runnable onSuccess) {
         // No passwd or the app already started
         if (password == null || ViewManager.instance(getContext()).getTopView() != null) {
             onSuccess.run();
-            getView().finishView();
         } else {
             SimpleEditDialog.show(
                     getContext(),
@@ -335,8 +334,7 @@ private void checkMasterPassword(Runnable onSuccess) {
                         return false;
                     },
                     getContext().getString(R.string.enter_master_password),
-                    true,
-                    () -> getView().finishView()
+                    true
             );
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -847,7 +847,7 @@ private void onSubscribe(int buttonState) {
     }
 
     private void reorderSubtitles(List<FormatItem> subtitleFormats) {
-        if (subtitleFormats == null || subtitleFormats.size() <= 1) {
+        if (subtitleFormats == null || subtitleFormats.isEmpty()) {
             return;
         }
 
@@ -861,6 +861,6 @@ private void reorderSubtitles(List<FormatItem> subtitleFormats) {
                 topSubtitles.add(subtitleFormats.remove(index));
             }
         }
-        subtitleFormats.addAll(begin, topSubtitles);
+        subtitleFormats.addAll(subtitleFormats.size() < begin ? 0 : begin, topSubtitles);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -65,15 +65,13 @@ public static void unhold() {
 
     @Override
     public void onViewInitialized() {
-        // Get intent before the view got destroyed
-        Intent intent = getView().getNewIntent();
-
         applyRunPerInstanceTasks();
         applyRunOnceTasks();
 
         //runRefreshCachePeriodicTask();
         showAccountSelectionIfNeeded();
 
+        Intent intent = getView() != null ? getView().getNewIntent() : null;
         checkMasterPassword(() -> applyNewIntent(intent));
 
         checkAccountPassword();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -65,13 +65,15 @@ public static void unhold() {
 
     @Override
     public void onViewInitialized() {
+        // Get intent before the view got destroyed
+        Intent intent = getView().getNewIntent();
+
         applyRunPerInstanceTasks();
         applyRunOnceTasks();
 
         //runRefreshCachePeriodicTask();
         showAccountSelectionIfNeeded();
 
-        Intent intent = getView().getNewIntent(); // get intent before view will be destroyed
         checkMasterPassword(() -> applyNewIntent(intent));
 
         checkAccountPassword();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -188,7 +188,7 @@ public void onSubtitleLongClicked(boolean enabled) {
         settingsPresenter.appendSingleButton(UiOptionItem.from(subtitlesAutoCategoryTitle, optionItem -> {
             List<FormatItem> subtitleFormats = getPlayer().getSubtitleFormats();
             List<FormatItem> subtitleAutoFormats = Helpers.filter(subtitleFormats,
-                    value -> value.isDefault() || SubtitleTrack.isAuto(value.getLanguage()) || !SubtitleTrack.isAuto(value.getLanguage()));
+                    value -> value.isDefault() || SubtitleTrack.isAuto(value.getLanguage()));
             reorderSubtitles(subtitleAutoFormats);
             settingsPresenter.appendRadioCategory(subtitlesAutoCategoryTitle,
                     UiOptionItem.from(subtitleAutoFormats,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -850,12 +850,13 @@ private void reorderSubtitles(List<FormatItem> subtitleFormats) {
         // Move last format to the top
         int index = 0;
         int position = subtitleFormats.get(0).isDefault() ? 1 : 0;
+        List<FormatItem> topFormats = new ArrayList<>();
         while (index != -1) {
             index = subtitleFormats.indexOf(mPlayerData.getLastSubtitleFormat());
             if (index != -1) {
-                FormatItem formatItem = subtitleFormats.remove(index);
-                subtitleFormats.add(position++, formatItem);
+                topFormats.add(subtitleFormats.remove(index));
             }
         }
+        subtitleFormats.addAll(position, topFormats);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -188,7 +188,7 @@ public void onSubtitleLongClicked(boolean enabled) {
         settingsPresenter.appendSingleButton(UiOptionItem.from(subtitlesAutoCategoryTitle, optionItem -> {
             List<FormatItem> subtitleFormats = getPlayer().getSubtitleFormats();
             List<FormatItem> subtitleAutoFormats = Helpers.filter(subtitleFormats,
-                    value -> value.isDefault() || SubtitleTrack.isAuto(value.getLanguage()));
+                    value -> value.isDefault() || SubtitleTrack.isAuto(value.getLanguage()) || !SubtitleTrack.isAuto(value.getLanguage()));
             reorderSubtitles(subtitleAutoFormats);
             settingsPresenter.appendRadioCategory(subtitlesAutoCategoryTitle,
                     UiOptionItem.from(subtitleAutoFormats,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -260,7 +260,7 @@ public boolean isMenuItemEnabled(long menuItems) {
 
     public void setMenuItemIndex(int index, Long menuItem) {
         int currentIndex = getMenuItemIndex(menuItem);
-        //index = index != 0 && currentIndex > index ? index + 1 : index;
+        index = currentIndex < index ? index - 1 : index;
 
         mMenuItemsOrdered.remove(menuItem);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/AppUpdatePresenter.java
Patch:
@@ -45,7 +45,7 @@ public static AppUpdatePresenter instance(Context context) {
         return sInstance;
     }
 
-    public void unhold() {
+    private void unhold() {
         sInstance = null;
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -260,7 +260,7 @@ public boolean isMenuItemEnabled(long menuItems) {
 
     public void setMenuItemIndex(int index, Long menuItem) {
         int currentIndex = getMenuItemIndex(menuItem);
-        index = index != 0 && currentIndex > index ? index + 1 : index;
+        //index = index != 0 && currentIndex > index ? index + 1 : index;
 
         mMenuItemsOrdered.remove(menuItem);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -443,8 +443,9 @@ private void appendUserQueueIfNeeded(Video video) {
 
     private void appendSectionPlaylistIfNeeded(Video video) {
         if (!isSectionPlaylistEnabled(video)) {
-            //mNextVideo = null;
-            //mPreviousVideo = null;
+            // Important fix. Gives priority to playlist or suggestion.
+            mNextVideo = null;
+            mPreviousVideo = null;
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/AccountsData.java
Patch:
@@ -90,7 +90,7 @@ public String getAccountPassword() {
     }
 
     public boolean isPasswordAccepted() {
-        return mIsPasswordAccepted;
+        return mIsPasswordAccepted || getAccountPassword() == null;
     }
 
     public void setPasswordAccepted(boolean accepted) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -67,7 +67,7 @@ public static SearchPresenter instance(Context context) {
     @Override
     public void onViewInitialized() {
         if (getView() != null) {
-            getView().setTagsProvider(new MediaServiceSearchTagProvider(!mSearchData.isPopularSearchesDisabled()));
+            getView().setTagsProvider(new MediaServiceSearchTagProvider());
         }
 
         startSearchInt();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/SearchSettingsPresenter.java
Patch:
@@ -55,9 +55,9 @@ private void appendSpeechRecognizerCategory(AppDialogPresenter settingsPresenter
     private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
-        options.add(UiOptionItem.from(getContext().getString(R.string.disable_popular_searches),
-                option -> mSearchData.disablePopularSearches(option.isSelected()),
-                mSearchData.isPopularSearchesDisabled()));
+        //options.add(UiOptionItem.from(getContext().getString(R.string.disable_popular_searches),
+        //        option -> mSearchData.disablePopularSearches(option.isSelected()),
+        //        mSearchData.isPopularSearchesDisabled()));
 
         options.add(UiOptionItem.from(getContext().getString(R.string.disable_search_history),
                 option -> mSearchData.disableSearchHistory(option.isSelected()),

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -142,7 +142,7 @@ private void restoreData() {
         mSpeechRecognizerType = Helpers.parseInt(split, 6, SPEECH_RECOGNIZER_SYSTEM);
         mIsTrendingSearchesEnabled = Helpers.parseBoolean(split, 7, true);
         mIsSearchHistoryDisabled = Helpers.parseBoolean(split, 8, false);
-        mIsPopularSearchesDisabled = Helpers.parseBoolean(split, 9, true);
+        mIsPopularSearchesDisabled = Helpers.parseBoolean(split, 9, false);
     }
 
     private void persistData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -927,7 +927,7 @@ private boolean isPartialMatch(MediaGroup value) {
     private boolean isFullMatch(MediaGroup value) {
         return Helpers.equalsAny(
                 value.getTitle(),
-                getContext().getString(R.string.news_row_name),
+                //getContext().getString(R.string.news_row_name),
                 getContext().getString(R.string.breaking_news_row_name),
                 getContext().getString(R.string.covid_news_row_name)
         );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -745,7 +745,8 @@ private void appendStreamReminderButton() {
     private void addRemoveFromPlaylist(String playlistId, String playlistTitle, boolean add) {
         if (add) {
             Observable<Void> editObserve = mItemManager.addToPlaylistObserve(playlistId, mVideo.videoId);
-            mAddToPlaylistAction = RxHelper.execute(editObserve);
+            // Handle error: Maximum playlist size exceeded (> 5000 items)
+            mAddToPlaylistAction = RxHelper.execute(editObserve, error -> MessageHelpers.showLongMessage(getContext(), error.getMessage()));
             mDialogPresenter.closeDialog();
             MessageHelpers.showMessage(getContext(),
                     getContext().getString(R.string.added_to, playlistTitle));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -780,7 +780,8 @@ private static void addRemoveFromPlaylist(Context context, Video video, VideoMen
             editObserve = itemManager.removeFromPlaylistObserve(playlistId, video.videoId);
         }
 
-        Disposable addRemoveAction = RxHelper.execute(editObserve); // ignore results (do the work in the background)
+        // Handle error: Maximum playlist size exceeded (> 5000 items)
+        RxHelper.execute(editObserve, error -> MessageHelpers.showLongMessage(context, error.getMessage()));
     }
 
     public static void showPlaylistOrderDialog(Context context, Video video, Runnable onClose) {
@@ -818,7 +819,7 @@ public static void showPlaylistOrderDialog(Context context, String playlistId, R
                 if (optionItem.isSelected()) {
                     RxHelper.execute(
                             YouTubeMediaItemService.instance().setPlaylistOrderObserve(playlistId, pair[1]),
-                            () -> MessageHelpers.showMessage(context, R.string.owned_playlist_warning),
+                            (error) -> MessageHelpers.showMessage(context, R.string.owned_playlist_warning),
                             () -> {
                                 generalData.setPlaylistOrder(playlistId, pair[1]);
                                 ViewManager.instance(context).refreshCurrentView();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -240,7 +240,7 @@ public void updateSections() {
         updateSections(false);
     }
 
-    private void updateSections(boolean refresh) {
+    public void updateSections(boolean refresh) {
         if (getView() == null) {
             return;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -26,7 +26,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
     static {
         // fix youtube bandwidth throttling (best - false)???
         // false is better for streams (less buffering)
-        System.setProperty("http.keepAlive", "false");
+        //System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
         // Better to remove this fix at all. Users complain about infinite loading.
         //System.setProperty("java.net.preferIPv6Addresses", "true");

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -121,6 +121,7 @@ public String toString() {
 
     private PlayerData(Context context) {
         mPrefs = AppPrefs.instance(context);
+        mPrefs.addListener(this);
         initSubtitleStyles();
         initDefaultFormats();
         restoreState();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -26,7 +26,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
     static {
         // fix youtube bandwidth throttling (best - false)???
         // false is better for streams (less buffering)
-        //System.setProperty("http.keepAlive", "false");
+        System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
         // Better to remove this fix at all. Users complain about infinite loading.
         //System.setProperty("java.net.preferIPv6Addresses", "true");

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -56,7 +56,7 @@ private void setTitle(String userCode) {
         getGuidanceStylist().getTitleView().setText(userCode);
 
         Glide.with(getContext())
-                .load(Utils.toQrCodeLink(SIGN_IN_URL + "?user_code=" + userCode))
+                .load(Utils.toQrCodeLink(SIGN_IN_URL + "?user_code=" + userCode.replace(" ", "-")))
                 .apply(ViewUtil.glideOptions())
                 .into(getGuidanceStylist().getIconView());
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/VideoGridFragment.java
Patch:
@@ -31,6 +31,7 @@
 
 public class VideoGridFragment extends GridFragment implements VideoSection {
     private static final String TAG = VideoGridFragment.class.getSimpleName();
+    private static final int RESTORE_MAX_SIZE = 5_000;
     private VideoGroupObjectAdapter mGridAdapter;
     private final List<VideoGroup> mPendingUpdates = new ArrayList<>();
     private UriBackgroundManager mBackgroundManager;
@@ -171,7 +172,7 @@ private void restorePosition() {
         setPosition(mSelectedItemIndex);
         selectItem(mSelectedItem);
 
-        if ((mSelectedItemIndex == -1 && mSelectedItem == null) || mGridAdapter == null || mGridAdapter.size() > 500) {
+        if ((mSelectedItemIndex == -1 && mSelectedItem == null) || mGridAdapter == null || mGridAdapter.size() > RESTORE_MAX_SIZE) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -7,12 +7,13 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 
 public interface BrowseView {
-    void addSection(int index, BrowseSection category);
+    void addSection(int index, BrowseSection section);
     void removeSection(BrowseSection category);
+    void removeAllSections();
     void selectSection(int index, boolean focusOnContent);
     void updateSection(VideoGroup group);
     void updateSection(SettingsGroup group);
-    void clearSection(BrowseSection category);
+    void clearSection(BrowseSection section);
     void selectSectionItem(int index);
     void selectSectionItem(Video item);
     void showError(ErrorFragmentData data);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -142,7 +142,7 @@ private void restoreData() {
         mSpeechRecognizerType = Helpers.parseInt(split, 6, SPEECH_RECOGNIZER_SYSTEM);
         mIsTrendingSearchesEnabled = Helpers.parseBoolean(split, 7, true);
         mIsSearchHistoryDisabled = Helpers.parseBoolean(split, 8, false);
-        mIsPopularSearchesDisabled = Helpers.parseBoolean(split, 9, false);
+        mIsPopularSearchesDisabled = Helpers.parseBoolean(split, 9, true);
     }
 
     private void persistData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -505,9 +505,10 @@ private void restoreSpeed() {
             getPlayer().setSpeed(1.0f);
         } else {
             State state = mStateService.getByVideoId(item.videoId);
+            float speed = mPlayerData.getSpeed(item.channelId);
             getPlayer().setSpeed(
                     state != null && mPlayerData.isSpeedPerVideoEnabled() ? state.speed :
-                            item.channelId != null ? mPlayerData.getSpeed(item.channelId) : 1.0f
+                            mPlayerData.isAllSpeedEnabled() || item.channelId != null ? speed : 1.0f
             );
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/AccountSettingsPresenter.java
Patch:
@@ -14,6 +14,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.ExoMediaSourceFactory;
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AccountsData;
+import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
 import com.liskovsoft.smartyoutubetv2.common.utils.AppDialogUtil;
 
 import java.util.ArrayList;
@@ -168,8 +169,10 @@ private String getSimpleName(Account account) {
     }
 
     private void selectAccount(Account account) {
+        AppPrefs.instance(getContext()).selectAccount(account);
         mMediaServiceManager.getSingInService().selectAccount(account);
         ExoMediaSourceFactory.unhold();
+        //BrowsePresenter.instance(getContext()).onViewInitialized(); // reset state
         BrowsePresenter.instance(getContext()).refresh(false);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEngineEventListener.java
Patch:
@@ -34,6 +34,7 @@ public interface PlayerEngineEventListener {
     void onPlayEnd();
     void onBuffering();
     void onSeekEnd();
+    void onSpeedChanged(float speed);
     void onSourceChanged(Video item);
     void onVideoLoaded(Video item);
     void onEngineInitialized();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -377,6 +377,7 @@ public void setSpeed(float speed) {
 
             mTrackFormatter.setSpeed(speed);
             setQualityInfo(mTrackFormatter.getQualityLabel());
+            mEventListener.onSpeedChanged(speed);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -611,7 +611,7 @@ public static OptionCategory createSpeedListCategory(Context context, PlayerMana
                     String.valueOf(speed),
                     optionItem -> {
                         if (playbackController != null) {
-                            playerData.setSpeed(playbackController.getVideo().channelId, speed);
+                            //playerData.setSpeed(playbackController.getVideo().channelId, speed);
                             playbackController.setSpeed(speed);
                         } else {
                             playerData.setSpeed(speed);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/time/DateTimeView.java
Patch:
@@ -1,5 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.widgets.time;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.View;
@@ -11,6 +12,7 @@
 /**
  * Note, same view is used inside player and in as global time view
  */
+@SuppressLint("AppCompatCustomView")
 public class DateTimeView extends TextView implements TickleListener {
     private TickleManager mTickleManager;
     private boolean mIsDateEnabled = true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -15,6 +15,7 @@
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.TrackSelection;
 import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.BuildConfig;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
@@ -370,7 +371,7 @@ public void onSeekProcessed() {
 
     @Override
     public void setSpeed(float speed) {
-        if (mPlayer != null && speed > 0) {
+        if (mPlayer != null && speed > 0 && !Helpers.floatEquals(speed, getSpeed())) {
             mPlayer.setPlaybackParameters(new PlaybackParameters(speed, mPlayer.getPlaybackParameters().pitch));
             mCurrentSpeed = speed; // NOTE: backup speed in case params not applied (playback is paused)
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -542,6 +542,7 @@ public float getSpeed(String channelId) {
 
         if (isSpeedPerChannelEnabled() && channelId != null) {
             speed = mSpeeds.get(channelId);
+            mSpeed = 1.0f; // reset speed if the channel not found
         }
 
         if (speed != null) {

File: leanback-1.0.0/src/main/java/androidx/leanback/widget/GuidedActionAdapter.java
Patch:
@@ -311,6 +311,8 @@ public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
 
         // MOD: VoiceView fix
         Helpers.describedBy(v, R.id.guidance_title);
+        // Or should I add description instead?
+        //v.setContentDescription(theCode);
 
         setupListeners(vh.getEditableTitleView());
         setupListeners(vh.getEditableDescriptionView());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -90,7 +90,9 @@ public void onInit() {
     @Override
     public void openVideo(Video item) {
         mSkipExclude = false;
-        getPlayer().setSeekBarSegments(null); // reset colors
+        if (getPlayer() != null) {
+            getPlayer().setSeekBarSegments(null); // reset colors
+        }
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/fragments/MultiGridFragment.java
Patch:
@@ -233,8 +233,9 @@ private void grid2OnItemSelected(int position, boolean isFocused) {
     }
 
     private void showOrHideTitle1() {
-        if (mGridViewHolder1.getGridView().findViewHolderForAdapterPosition(mSelectedPosition1)
-                == null || mMainFragmentAdapter.getFragmentHost() == null) {
+        if (mGridViewHolder1 == null
+                || mGridViewHolder1.getGridView().findViewHolderForAdapterPosition(mSelectedPosition1) == null
+                || mMainFragmentAdapter.getFragmentHost() == null) {
             return;
         }
         if (!mGridViewHolder1.getGridView().hasPreviousViewInSameRow(mSelectedPosition1)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -64,7 +64,7 @@ public class PlayerUIController extends PlayerEventListenerHelper implements Met
     private final Runnable mUiAutoHideHandler = () -> {
         // Playing the video and dialog overlay isn't shown
         if (getPlayer().isPlaying() && !AppDialogPresenter.instance(getContext()).isDialogShown()) {
-            if (!getPlayer().isSuggestionsShown()) { // don't hide when suggestions is shown
+            if (getPlayer().isControlsShown()) { // don't hide when suggestions is shown
                 getPlayer().showOverlay(false);
                 mOverlayHideTimeMs = System.currentTimeMillis();
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -71,7 +71,7 @@ public int compare(MediaTrack track2) {
             result = 0;
         } else if (Helpers.equals(format.id, track2.format.id)) {
             result = 1;
-        } else if (format.bitrate >= track2.format.bitrate ||
+        } else if (!codecEquals(this, track2) || format.bitrate >= track2.format.bitrate ||
                 Math.abs(format.bitrate - track2.format.bitrate) < (format.bitrate / 100 * BITRATE_DIFF_PERCENTS)) {
             result = 0;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -4,7 +4,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 public class AudioTrack extends MediaTrack {
-    private static final int BITRATE_DIFF_PERCENTS = 20;
+    private static final int BITRATE_DIFF_PERCENTS = 5;
 
     public AudioTrack(int rendererIndex) {
         super(rendererIndex);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -4,7 +4,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 public class AudioTrack extends MediaTrack {
-    private static final int BITRATE_DIFF_PERCENTS = 40;
+    private static final int BITRATE_DIFF_PERCENTS = 20;
 
     public AudioTrack(int rendererIndex) {
         super(rendererIndex);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -41,7 +41,6 @@
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.youtubeapi.common.helpers.DefaultHeaders;
-import com.liskovsoft.youtubeapi.common.helpers.RetrofitOkHttpHelper;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -53,7 +52,7 @@ public class ExoMediaSourceFactory {
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
     private static final int MAX_SEGMENTS_PER_LOAD = 1;
-    private static final String USER_AGENT = DefaultHeaders.APP_USER_AGENT;
+    private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();
     private final Factory mMediaDataSourceFactory;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/misc/ProgressBarManager.java
Patch:
@@ -93,8 +93,7 @@ public void show() {
         if (mEnableProgressBar) {
             mIsShowing = true;
             mHandler.removeCallbacks(hideRunnable);
-            //mHandler.postDelayed(showRunnable, mInitialDelay);
-            mHandler.post(showRunnable);
+            mHandler.postDelayed(showRunnable, mInitialDelay);
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/misc/ProgressBarManager.java
Patch:
@@ -93,7 +93,8 @@ public void show() {
         if (mEnableProgressBar) {
             mIsShowing = true;
             mHandler.removeCallbacks(hideRunnable);
-            mHandler.postDelayed(showRunnable, mInitialDelay);
+            //mHandler.postDelayed(showRunnable, mInitialDelay);
+            mHandler.post(showRunnable);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -239,7 +239,7 @@ private void updateSections() {
 
         int index = 0;
 
-        sortSections();
+        //sortSections();
 
         for (BrowseSection section : mErrorSections) {
             getView().addSection(index++, section);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -197,7 +197,7 @@ public Collection<Integer> getEnabledSections() {
      * Contains sections and pinned items!
      */
     public boolean isSectionEnabled(int sectionId) {
-        Video section = Helpers.findFirst(mPinnedItems, item -> (item.extra == -1 && item.hashCode() == sectionId) || item.extra == sectionId);
+        Video section = Helpers.findFirst(mPinnedItems, item -> item.getId() == sectionId);
         return section != null; // by default enable all pinned items
     }
 
@@ -266,7 +266,7 @@ private int findPinnedItemIndex(int sectionId) {
 
         for (Video item : mPinnedItems) {
             // Distinguish pinned items by hashCode or extra field (default section)!
-            if (item.hashCode() == sectionId || item.extra == sectionId) {
+            if (item.getId() == sectionId) {
                 index = mPinnedItems.indexOf(item);
                 break;
             }

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitle.java
Patch:
@@ -47,7 +47,9 @@ public WebvttSubtitle(List<WebvttCue> cues) {
       WebvttCue cue = cues.get(cueIndex);
       int arrayIndex = cueIndex * 2;
       cueTimesUs[arrayIndex] = cue.startTime;
-      cueTimesUs[arrayIndex + 1] = cue.endTime;
+      // MOD: fix long lasting subs
+      //cueTimesUs[arrayIndex + 1] = cue.endTime;
+      cueTimesUs[arrayIndex + 1] = cue.endTime - cue.startTime <= 5_000_000 ? cue.endTime : cue.startTime + 5_000_000;
     }
     sortedCueTimesUs = Arrays.copyOf(cueTimesUs, cueTimesUs.length);
     Arrays.sort(sortedCueTimesUs);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -122,7 +122,7 @@ protected void togglePinToSidebar(Video section) {
         } else {
             presenter.pinItem(section);
         }
-        MessageHelpers.showMessage(getContext(), section.title + ": " + getContext().getString(isItemPinned ? R.string.unpinned_from_sidebar : R.string.pinned_to_sidebar));
+        MessageHelpers.showMessage(getContext(), getContext().getString(isItemPinned ? R.string.unpinned_from_sidebar : R.string.pinned_to_sidebar) + ": " + section.title);
     }
 
     private Video createPinnedPlaylist(Video video) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -427,7 +427,7 @@ private int getSourceErrorResId(int rendererIndex) {
             case PlayerEventListener.RENDERER_INDEX_SUBTITLE:
                 return R.string.msg_player_error_subtitle_source;
             default:
-                return R.string.msg_player_error_source2;
+                return R.string.msg_player_unknown_error;
         }
     }
 
@@ -440,7 +440,7 @@ private int getRendererErrorResId(int rendererIndex) {
             case PlayerEventListener.RENDERER_INDEX_SUBTITLE:
                 return R.string.msg_player_error_subtitle_renderer;
             default:
-                return R.string.video_buffer_size_none;
+                return R.string.msg_player_unknown_error;
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -815,7 +815,7 @@ private void restoreState() {
         mIsRemapNextPrevToSpeedEnabled = Helpers.parseBoolean(split, 45, false);
         mIsRemapPlayPauseToOKEnabled = Helpers.parseBoolean(split, 46, false);
         mHistoryState = Helpers.parseInt(split, 47, HISTORY_ENABLED);
-        mRememberSubscriptionsPosition = Helpers.parseBoolean(split, 48, true);
+        mRememberSubscriptionsPosition = Helpers.parseBoolean(split, 48, false);
 
         if (pinnedItems != null && !pinnedItems.isEmpty()) {
             String[] pinnedItemsArr = Helpers.splitArray(pinnedItems);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/VideoGridFragment.java
Patch:
@@ -194,6 +194,9 @@ private void freeze(boolean freeze) {
     @Override
     public void clear() {
         if (mGridAdapter != null) {
+            // Fix: Invalid item position -1(-1). Item count:84 androidx.leanback.widget.VerticalGridView
+            freeze(true);
+
             mGridAdapter.clear();
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/fragments/GridFragment.java
Patch:
@@ -206,7 +206,6 @@ public BrowseSupportFragment.MainFragmentAdapter<Fragment> getMainFragmentAdapte
     public void setSelectedPosition(int position) {
         mSelectedPosition = position;
         if (mGridViewHolder != null && mGridViewHolder.getGridView().getAdapter() != null) {
-            // Use Smooth scroll to fix crash (Invalid item position -1(-1). Item count:84 androidx.leanback.widget.VerticalGridView)
             mGridViewHolder.getGridView().setSelectedPosition(position);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -260,7 +260,7 @@ public static void setGlobalVolume(Context context, int volume) {
         if (context != null) {
             AudioManager audioManager = (AudioManager) context.getSystemService(GLOBAL_VOLUME_SERVICE);
             if (audioManager != null) {
-                int streamMaxVolume = audioManager.getStreamMaxVolume(GLOBAL_VOLUME_TYPE);
+                int streamMaxVolume = audioManager.getStreamMaxVolume(GLOBAL_VOLUME_TYPE) / 2; // max volume is too loud
                 audioManager.setStreamVolume(GLOBAL_VOLUME_TYPE, (int) Math.ceil(streamMaxVolume / 100f * volume), 0);
             }
         }
@@ -275,7 +275,7 @@ public static int getGlobalVolume(Context context) {
         if (context != null) {
             AudioManager audioManager = (AudioManager) context.getSystemService(GLOBAL_VOLUME_SERVICE);
             if (audioManager != null) {
-                int streamMaxVolume = audioManager.getStreamMaxVolume(GLOBAL_VOLUME_TYPE);
+                int streamMaxVolume = audioManager.getStreamMaxVolume(GLOBAL_VOLUME_TYPE) / 2; // max volume is too loud
                 int streamVolume = audioManager.getStreamVolume(GLOBAL_VOLUME_TYPE);
 
                 return (int) Math.ceil(streamVolume / (streamMaxVolume / 100f));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -163,7 +163,7 @@ public Observable<MediaGroup> obtainPlaylistObservable(Video item) {
 
         disposeActions();
 
-        return item.hasNestedItems() || item.hasChannel() ?
+        return item.hasNestedItems() || item.isChannel() ?
                mGroupManager.getGroupObserve(item.mediaItem) :
                item.hasReloadPageKey() ?
                mGroupManager.getGroupObserve(item.getReloadPageKey()) :

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -413,6 +413,7 @@ private void appendHistoryCategory(AppDialogPresenter settingsPresenter) {
                 {R.string.disable_history, GeneralData.HISTORY_DISABLED}}) {
             options.add(UiOptionItem.from(getContext().getString(pair[0]), optionItem -> {
                 mGeneralData.setHistoryState(pair[1]);
+                MediaServiceManager.instance().enableHistory(pair[1] == GeneralData.HISTORY_AUTO || pair[1] == GeneralData.HISTORY_ENABLED);
             }, mGeneralData.getHistoryState() == pair[1]));
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/BackupAndRestoreManager.java
Patch:
@@ -141,7 +141,7 @@ private File getBackupCheck() {
         for (File backupDir : mBackupDirs) {
             // FileHelpers.isEmpty(backupDir) needs access device storage permission
             if (mBackupName != null && !mBackupName.isEmpty()) {
-                backupDir = new File(backupDir.getParentFile(), BACKUP_DIR_NAME + "_" + mBackupName);
+                backupDir = new File(backupDir.getParentFile(), mBackupName);
             }
 
             if (backupDir.exists()) {
@@ -201,7 +201,7 @@ public List<String> getBackupNames() {
 
             for (String dirName : list) {
                 if (dirName.startsWith(BACKUP_DIR_NAME)) {
-                    result.add(dirName.replace(BACKUP_DIR_NAME + "_", ""));
+                    result.add(dirName);
                 }
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -88,7 +88,7 @@ private static String buildAudioPropertyString(Format format) {
     }
 
     private static String buildLanguageString(Format format) {
-        return TextUtils.isEmpty(format.language) || "und".equals(format.language) ? "" : SubtitleTrack.trimAuto(format.language);
+        return TextUtils.isEmpty(format.language) || "und".equals(format.language) ? "" : SubtitleTrack.trimIfAuto(format.language);
     }
 
     private static String buildBitrateString(Format format) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -111,6 +111,7 @@ private void openMediaSource(MediaSource mediaSource) {
         resetPlayerState(); // fixes occasional video artifacts and problems with quality switching
         setQualityInfo("");
 
+        mTrackSelectorManager.setMergedSource(mediaSource instanceof MergingMediaSource);
         mTrackSelectorManager.invalidate();
         mOnSourceChanged = true;
         mEventListener.onSourceChanged(mVideo);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/SearchSettingsPresenter.java
Patch:
@@ -37,8 +37,8 @@ private void appendSpeechRecognizerCategory(AppDialogPresenter settingsPresenter
 
         for (int[] pair : new int[][] {
                 {R.string.speech_recognizer_system, SearchData.SPEECH_RECOGNIZER_SYSTEM},
-                {R.string.speech_recognizer_external_1, SearchData.SPEECH_RECOGNIZER_EXTERNAL_1},
-                {R.string.speech_recognizer_external_2, SearchData.SPEECH_RECOGNIZER_EXTERNAL_2}}) {
+                {R.string.speech_recognizer_external_1, SearchData.SPEECH_RECOGNIZER_DEFAULT},
+                {R.string.speech_recognizer_external_2, SearchData.SPEECH_RECOGNIZER_GOTEV}}) {
             options.add(UiOptionItem.from(getContext().getString(pair[0]),
                     optionItem -> mSearchData.setSpeechRecognizerType(pair[1]),
                     mSearchData.getSpeechRecognizerType() == pair[1]));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -6,8 +6,8 @@
 
 public class SearchData {
     public static final int SPEECH_RECOGNIZER_SYSTEM = 0;
-    public static final int SPEECH_RECOGNIZER_EXTERNAL_1 = 1;
-    public static final int SPEECH_RECOGNIZER_EXTERNAL_2 = 2;
+    public static final int SPEECH_RECOGNIZER_DEFAULT = 1;
+    public static final int SPEECH_RECOGNIZER_GOTEV = 2;
     private static final String SEARCH_DATA = "search_data";
     @SuppressLint("StaticFieldLeak")
     private static SearchData sInstance;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -375,7 +375,7 @@ private void appendAppBackupCategory(AppDialogPresenter settingsPresenter) {
                 option -> {
                     List<String> backups = backupManager.getBackupNames();
 
-                    if (backups != null && backups.size() > 0) {
+                    if (backups != null && backups.size() > 1) {
                         showRestoreSelectorDialog(backups, backupManager);
                     } else {
                         AppDialogUtil.showConfirmationDialog(getContext(), getContext().getString(R.string.app_restore), () -> {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerController.java
Patch:
@@ -211,8 +211,8 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type, String message) {
-        process(listener -> listener.onEngineError(type, message));
+    public void onEngineError(int type, int rendererIndex, String message) {
+        process(listener -> listener.onEngineError(type, rendererIndex, message));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -118,7 +118,7 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type, String message) {
+    public void onEngineError(int type, int rendererIndex, String message) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -428,7 +428,7 @@ private void appendUserQueueIfNeeded(Video video) {
     }
 
     private void appendSectionPlaylistIfNeeded(Video video) {
-        if (video.getGroup() == null || video.playlistId != null || video.remotePlaylistId != null || !mPlayerTweaksData.isSectionPlaylistEnabled()) {
+        if (video.getGroup() == null || video.playlistId != null || (video.isRemote && video.remotePlaylistId != null) || !mPlayerTweaksData.isSectionPlaylistEnabled()) {
             return;
         }
 
@@ -545,7 +545,7 @@ public void focusAndContinueIfNeeded(VideoGroup group) {
     private void appendNextSectionVideoIfNeeded(Video video) {
         mNextVideo = null;
 
-        if (video == null || video.getGroup() == null || video.playlistId != null || video.remotePlaylistId != null || !mPlayerTweaksData.isSectionPlaylistEnabled()) {
+        if (video == null || video.getGroup() == null || video.playlistId != null || (video.isRemote && video.remotePlaylistId != null) || !mPlayerTweaksData.isSectionPlaylistEnabled()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -165,7 +165,7 @@ public void onMetadata(MediaItemMetadata metadata) {
     }
 
     @Override
-    public void onEngineError(int type, String message) {
+    public void onEngineError(int type, int rendererIndex, String message) {
         // Oops. Error happens while playing (network lost etc).
         if (getPlayer().getPositionMs() > 1_000) {
             saveState();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -316,7 +316,7 @@ public void onPlayerError(ExoPlaybackException error) {
 
         Throwable nested = error.getCause() != null ? error.getCause() : error;
 
-        mEventListener.onEngineError(error.type, nested.getMessage());
+        mEventListener.onEngineError(error.type, error.rendererIndex, nested.getMessage());
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerController.java
Patch:
@@ -211,8 +211,8 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type) {
-        process(listener -> listener.onEngineError(type));
+    public void onEngineError(int type, String message) {
+        process(listener -> listener.onEngineError(type, message));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -118,7 +118,7 @@ public void onEngineReleased() {
     }
 
     @Override
-    public void onEngineError(int type) {
+    public void onEngineError(int type, String message) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -165,7 +165,7 @@ public void onMetadata(MediaItemMetadata metadata) {
     }
 
     @Override
-    public void onEngineError(int type) {
+    public void onEngineError(int type, String message) {
         // Oops. Error happens while playing (network lost etc).
         if (getPlayer().getPositionMs() > 1_000) {
             saveState();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -314,7 +314,9 @@ public void onPlayerError(ExoPlaybackException error) {
 
         // NOTE: Player is released at this point. So, there is no sense to restore the playback here.
 
-        mEventListener.onEngineError(error.type);
+        Throwable nested = error.getCause() != null ? error.getCause() : error;
+
+        mEventListener.onEngineError(error.type, nested.getMessage());
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -790,8 +790,8 @@ private void restoreState() {
         mIsOldHomeLookEnabled = Helpers.parseBoolean(split, 42, Build.VERSION.SDK_INT <= 19);
         mIsOldUpdateNotificationsEnabled = Helpers.parseBoolean(split, 43, false);
         mScreensaverDimmingPercents = Helpers.parseInt(split, 44, 80);
-        mIsRemapNextPrevToSpeedEnabled = Helpers.parseBoolean(split, 81, false);
-        mIsRemapPlayPauseToOKEnabled = Helpers.parseBoolean(split, 82, false);
+        mIsRemapNextPrevToSpeedEnabled = Helpers.parseBoolean(split, 45, false);
+        mIsRemapPlayPauseToOKEnabled = Helpers.parseBoolean(split, 46, false);
 
         if (pinnedItems != null && !pinnedItems.isEmpty()) {
             String[] pinnedItemsArr = Helpers.splitArray(pinnedItems);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -52,7 +52,7 @@ public class ExoMediaSourceFactory {
     @SuppressLint("StaticFieldLeak")
     private static ExoMediaSourceFactory sInstance;
     private static final int MAX_SEGMENTS_PER_LOAD = 1;
-    private static final String USER_AGENT = DefaultHeaders.USER_AGENT_WEB;
+    private static final String USER_AGENT = DefaultHeaders.APP_USER_AGENT;
     @SuppressLint("StaticFieldLeak")
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();
     private final Factory mMediaDataSourceFactory;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -263,7 +263,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
     public void onUserLeaveHint() {
         // Check that user not open dialog/search activity instead of really leaving the activity
         // Activity may be overlapped by the dialog, back is pressed or new view started
-        if (AppDialogPresenter.instance(this).isDialogShown() || skipPip() || mViewManager.isNewViewPending() ||
+        if (skipPip() || mViewManager.isNewViewPending() ||
                 mGeneralData.getBackgroundPlaybackShortcut() == GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_BACK) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -65,9 +65,9 @@ public int compare(MediaTrack track2) {
         if (format.id == null && format.language == null && format.bitrate == -1 && codecEquals(this, track2)) {
             result = 0;
         } else if (Helpers.equals(format.id, track2.format.id)) {
-            result = 0;
-        } else if (format.bitrate >= track2.format.bitrate) {
             result = 1;
+        } else if (format.bitrate >= track2.format.bitrate || Math.abs(format.bitrate - track2.format.bitrate) < 10_000) {
+            result = 0;
         }
 
         return result;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -599,10 +599,10 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                     int compare = originTrack.inBounds(mediaTrack);
 
                     if (compare >= 0) {
-                        //boolean firstExactMatch = MediaTrack.codecEquals(mediaTrack, originTrack) && !MediaTrack.codecEquals(result, originTrack);
+                        boolean firstExactMatch = MediaTrack.codecEquals(mediaTrack, originTrack) && !MediaTrack.codecEquals(result, originTrack);
                         // Select track with higher possible quality or by preferred codec
                         boolean sameOrBetter = mediaTrack.compare(result) >= 0;
-                        if (sameOrBetter) {
+                        if (sameOrBetter || firstExactMatch) {
                             // Get ready for group with multiple codecs: avc, av01
                             // Also handle situations where avc and av01 only (no vp9). E.g.: B4mIhE_15nc
                             if (MediaTrack.codecEquals(mediaTrack, originTrack)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -41,7 +41,9 @@ public int inBounds(MediaTrack track2) {
 
         if (Helpers.equals(id1, id2) && sameLanguage(language1, language2)) {
             result = 0;
-        } else if (bitrateLessOrEquals(bitrate2, bitrate1) && sameLanguage(language1, language2)) {
+        } else if (bitrate1 != -1 && bitrateLessOrEquals(bitrate2, bitrate1) && sameLanguage(language1, language2)) {
+            result = 1;
+        } else if (bitrate1 == -1 && (TrackSelectorUtil.is51Audio(format) || !TrackSelectorUtil.is51Audio(track2.format)) && sameLanguage(language1, language2)) {
             result = 1;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -635,7 +635,7 @@ private void updateVideoRows(BrowseSection section, Observable<List<MediaGroup>>
                         },
                         error -> {
                             Log.e(TAG, "updateRowsHeader error: %s", error.getMessage());
-                            if (getView() != null) {
+                            if (getView() != null && getView().isEmpty()) {
                                 getView().showProgressBar(false);
                                 getView().showError(new CategoryEmptyError(getContext()));
                                 Utils.postDelayed(mRefreshSection, 30_000);
@@ -691,7 +691,7 @@ private void updateVideoGrid(BrowseSection section, Observable<MediaGroup> group
                         },
                         error -> {
                             Log.e(TAG, "updateGridHeader error: %s", error.getMessage());
-                            if (getView() != null) {
+                            if (getView() != null && getView().isEmpty()) {
                                 getView().showProgressBar(false);
                                 getView().showError(new CategoryEmptyError(getContext()));
                                 Utils.postDelayed(mRefreshSection, 30_000);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -17,4 +17,5 @@ public interface BrowseView {
     void showProgressBar(boolean show);
     boolean isProgressBarShowing();
     void focusOnContent();
+    boolean isEmpty();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -749,7 +749,9 @@ private boolean isTrackUnique(MediaTrack mediaTrack) {
             return false;
         }
 
-        String formatId = format.width + format.height + format.frameRate + format.sampleMimeType + format.language;
+        String hdrTag = TrackSelectorUtil.isHdrCodec(format.codecs) ? "hdr" : "";
+
+        String formatId = format.width + format.height + format.frameRate + format.sampleMimeType + hdrTag + format.language;
 
         Integer bitrate = mBlacklist.get(formatId);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -653,7 +653,7 @@ private boolean handlePlayPauseKey(int keyCode) {
     }
 
     private boolean handleShortsNavigation(int keyCode) {
-        if (getPlayer().isOverlayShown() || !getPlayer().getVideo().isShorts) {
+        if (getPlayer().isOverlayShown() || getPlayer().getVideo() == null || !getPlayer().getVideo().isShorts) {
             return false;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -154,7 +154,8 @@ private void initMediaTracks(int rendererIndex) {
         renderer.mediaTracks = new MediaTrack[renderer.trackGroups.length][];
         // Fix for java.util.ConcurrentModificationException inside of:
         // com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem.from (ExoFormatItem.java:44)
-        // Won't help: renderer.sortedTracks = Collections.synchronizedSortedSet(new TreeSet<>(new MediaTrackFormatComparator()));
+        // Won't help:
+        // renderer.sortedTracks = Collections.synchronizedSortedSet(new TreeSet<>(new MediaTrackFormatComparator()));
         renderer.sortedTracks = new TreeSet<>(new MediaTrackFormatComparator());
 
         if (rendererIndex == RENDERER_INDEX_SUBTITLE) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/BrowseSection.java
Patch:
@@ -8,6 +8,7 @@ public class BrowseSection {
     public static final int TYPE_SETTINGS_GRID = 2;
     public static final int TYPE_MULTI_GRID = 3;
     public static final int TYPE_ERROR = 4;
+    public static final int TYPE_SHORTS_GRID = 5;
     private static final int MAX_TITLE_LENGTH_CHARS = 30;
     private final int mId;
     private String mTitle;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -387,7 +387,7 @@ private void appendNotInterestedButton() {
             return;
         }
 
-        if (!mVideo.belongsToHome() || !mIsNotInterestedButtonEnabled) {
+        if ((!mVideo.belongsToHome() && !mVideo.belongsToShorts()) || !mIsNotInterestedButtonEnabled) {
             return;
         }
 
@@ -414,7 +414,7 @@ private void appendNotRecommendChannelButton() {
             return;
         }
 
-        if (!mVideo.belongsToHome() || !mIsNotRecommendChannelEnabled) {
+        if ((!mVideo.belongsToHome() && !mVideo.belongsToShorts()) || !mIsNotRecommendChannelEnabled) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -695,6 +695,7 @@ public boolean isOldUpdateNotificationsEnabled() {
 
     private void initSections() {
         mDefaultSections.put(R.string.header_home, MediaGroup.TYPE_HOME);
+        mDefaultSections.put(R.string.header_shorts, MediaGroup.TYPE_SHORTS);
         mDefaultSections.put(R.string.header_trending, MediaGroup.TYPE_TRENDING);
         mDefaultSections.put(R.string.header_kids_home, MediaGroup.TYPE_KIDS_HOME);
         mDefaultSections.put(R.string.header_gaming, MediaGroup.TYPE_GAMING);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/ExoFormatItem.java
Patch:
@@ -141,7 +141,8 @@ public boolean equals(@Nullable Object obj) {
                         return mType == formatItem.mType &&
                                 Helpers.equals(mFormatId, formatItem.mFormatId); // instead of compare by bitrate
                     }
-                    return mType == formatItem.mType &&
+                    return mIsPreset == formatItem.mIsPreset &&
+                            mType == formatItem.mType &&
                             mFrameRate == formatItem.mFrameRate &&
                             mWidth == formatItem.mWidth &&
                             mHeight == formatItem.mHeight &&

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -117,7 +117,7 @@ private void restoreData() {
         mSearchOptions = Helpers.parseInt(split, 1, 0);
         mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
         mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);
-        mIsTempBackgroundModeEnabled = Helpers.parseBoolean(split, 4, true);
+        mIsTempBackgroundModeEnabled = Helpers.parseBoolean(split, 4, false);
         //mIsAltSpeechRecognizerEnabled
         mSpeechRecognizerType = Helpers.parseInt(split, 6, SPEECH_RECOGNIZER_SYSTEM);
         mIsTrendingSearchesEnabled = Helpers.parseBoolean(split, 7, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/VolumeBooster.java
Patch:
@@ -29,7 +29,7 @@ public void onAudioSessionId(int audioSessionId) {
             mBooster = new LoudnessEnhancer(audioSessionId);
             mBooster.setEnabled(mEnabled);
             mBooster.setTargetGain((int) (1000 * mVolume));
-        } catch (RuntimeException | UnsatisfiedLinkError e) { // Cannot initialize effect engine
+        } catch (RuntimeException | UnsatisfiedLinkError | NoClassDefFoundError e) { // Cannot initialize effect engine
             e.printStackTrace();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/SubtitleTrack.java
Patch:
@@ -83,7 +83,7 @@ public static String trimAuto(String language) {
         }
 
         return trimMarker(language)
-                .replaceAll(" \\(.*", ""); // english (us) bla -> english
+                .replaceAll(" \\(.*\\)$", ""); // english (us) bla -> english
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/SubtitleTrack.java
Patch:
@@ -62,7 +62,7 @@ private static boolean isAutoUser(String language) {
             return false;
         }
 
-        return language.contains("(") && language.contains(")");
+        return language.contains("(") && language.endsWith(")");
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -54,6 +54,8 @@ public static CharSequence buildTrackNameShort(Format format) {
         } else if (MimeTypes.isAudio(format.sampleMimeType)) {
             trackName = joinWithSeparator(joinWithSeparator(joinWithSeparator(joinWithSeparator(buildLanguageString(format),
                     buildAudioPropertyString(format)), buildBitrateString(format)), extractCodec(format)), buildChannels(format));
+        } else if (MimeTypes.isText(format.sampleMimeType)) {
+            trackName = buildLanguageString(format);
         } else {
             trackName = joinWithSeparator(joinWithSeparator(buildLanguageString(format), buildBitrateString(format)), extractCodec(format));
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/PlayerUIController.java
Patch:
@@ -158,7 +158,7 @@ public void onSubtitleClicked(boolean enabled) {
     @Override
     public void onSubtitleLongClicked(boolean enabled) {
         String subtitlesOrigCategoryTitle = getActivity().getString(R.string.subtitle_category_title);
-        String subtitlesAutoCategoryTitle = subtitlesOrigCategoryTitle + " (Auto)";
+        String subtitlesAutoCategoryTitle = subtitlesOrigCategoryTitle + " (" + getActivity().getString(R.string.autogenerated) + ")";
 
         AppDialogPresenter settingsPresenter = AppDialogPresenter.instance(getActivity());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -189,6 +189,8 @@ private void initMediaTracks(int rendererIndex) {
                 renderer.sortedTracks.add(mediaTrack);
             }
         }
+
+        mBlacklist.clear();
     }
 
     /**
@@ -673,7 +675,7 @@ public int compare(MediaTrack mediaTrack1, MediaTrack mediaTrack2) {
                     return result;
                 }
             }
-            
+
             int leftVal = format2.width + (int) format2.frameRate + MediaTrack.getCodecWeight(format2.codecs);
             int rightVal = format1.width + (int) format1.frameRate + MediaTrack.getCodecWeight(format1.codecs);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/manager/PlayerEngine.java
Patch:
@@ -35,6 +35,7 @@ public interface PlayerEngine {
     void openDashUrl(String dashManifestUrl);
     void openHlsUrl(String hlsPlaylistUrl);
     void openUrlList(List<String> urlList);
+    void openMerged(InputStream dashManifest, String hlsPlaylistUrl);
     long getPositionMs();
     void setPositionMs(long positionMs);
     long getDurationMs();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -14,6 +14,7 @@ public interface PlayerController {
     void openHlsUrl(String hlsPlaylistUrl);
     void openDashUrl(String dashManifestUrl);
     void openUrlList(List<String> urlList);
+    void openMerged(InputStream dashManifest, String hlsPlaylistUrl);
     long getPositionMs();
     void setPositionMs(long positionMs);
     long getDurationMs();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/MediaTrack.java
Patch:
@@ -131,7 +131,9 @@ public static int getCodecWeight(String codec) {
             return 0;
         }
 
-        return codec.contains("vp9") ? sVP9Weight : codec.contains("avc") ? sAVCWeight : codec.contains("av01") ? sAV1Weight : 0;
+        codec = codec.toLowerCase();
+
+        return Helpers.containsAny(codec, "vp9", "vp09") ? sVP9Weight : codec.contains("avc") ? sAVCWeight : codec.contains("av01") ? sAV1Weight : 0;
     }
 
     public static boolean preferByCodec(MediaTrack prevTrack, MediaTrack nextTrack) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -44,7 +44,7 @@ public boolean fixError(Exception e) {
 
         InvalidResponseCodeException ex = (InvalidResponseCodeException) e;
 
-        if (ex.responseCode != 404 && ex.responseCode != 503) {
+        if (ex.responseCode != 404 && ex.responseCode != 503 && ex.responseCode != 500) {
             return false;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -676,7 +676,8 @@ public int compare(MediaTrack mediaTrack1, MediaTrack mediaTrack2) {
 
             int delta = leftVal - rightVal;
             if (delta == 0) {
-                return format2.bitrate - format1.bitrate;
+                int delta2 = format2.bitrate - format1.bitrate;
+                return delta2 == 0 ? 1 : delta2; // NOTE: don't return 0 or track will be removed
             }
 
             return leftVal - rightVal;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -55,7 +55,7 @@ public class MainUIData extends DataChangeBase {
     public static final int TOP_BUTTON_BROWSE_ACCOUNTS = 0b1;
     public static final int TOP_BUTTON_CHANGE_LANGUAGE = 0b10;
     public static final int TOP_BUTTON_SEARCH = 0b100;
-    public static final int TOP_BUTTON_DEFAULT = TOP_BUTTON_SEARCH | TOP_BUTTON_BROWSE_ACCOUNTS | TOP_BUTTON_CHANGE_LANGUAGE;
+    public static final int TOP_BUTTON_DEFAULT = TOP_BUTTON_SEARCH | TOP_BUTTON_BROWSE_ACCOUNTS;
     public static final int MENU_ITEM_DEFAULT = MENU_ITEM_PIN_TO_SIDEBAR | MENU_ITEM_NOT_INTERESTED | MENU_ITEM_REMOVE_FROM_HISTORY |
             MENU_ITEM_MOVE_SECTION_UP | MENU_ITEM_MOVE_SECTION_DOWN | MENU_ITEM_RENAME_SECTION | MENU_ITEM_SAVE_PLAYLIST |
             MENU_ITEM_ADD_TO_PLAYLIST | MENU_ITEM_SUBSCRIBE | MENU_ITEM_CREATE_PLAYLIST | MENU_ITEM_STREAM_REMINDER | MENU_ITEM_TOGGLE_HISTORY |

File: exoplayer-amzn-2.10.6/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
Patch:
@@ -397,7 +397,9 @@ private static HlsMasterPlaylist parseMasterPlaylist(LineIterator iterator, Stri
       String language = parseOptionalStringAttr(line, REGEX_LANGUAGE, variableDefinitions);
       @C.SelectionFlags int selectionFlags = parseSelectionFlags(line);
       @C.RoleFlags int roleFlags = parseRoleFlags(line, variableDefinitions);
-      String formatId = groupId + ":" + name;
+      // MOD: Don't add 'Default' to format id
+      String formatId = groupId;
+      //String formatId = groupId + ":" + name;
       Format format;
       Metadata metadata =
           new Metadata(new HlsTrackMetadataEntry(groupId, name, Collections.emptyList()));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -86,11 +86,12 @@ private boolean selectDifferentCodec() {
         }
 
         String currentCodec = currentTrack.format.codecs;
+        int width = currentTrack.format.width;
 
         MediaTrack nextTrack = null;
 
         for (MediaTrack track : tracks) {
-            if (!currentCodec.equals(track.format.codecs)) {
+            if (!currentCodec.equals(track.format.codecs) && track.format.width <= width) {
                 nextTrack = track;
                 break;
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -37,7 +37,6 @@
 import com.liskovsoft.sharedutils.okhttp.OkHttpCommons;
 import com.liskovsoft.sharedutils.okhttp.OkHttpManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.DashDefaultLoadErrorHandlingPolicy;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.ErrorDefaultDashChunkSource;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.TrackErrorFixer;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
@@ -54,6 +53,7 @@ public class ExoMediaSourceFactory {
     private static ExoMediaSourceFactory sInstance;
     @SuppressLint("StaticFieldLeak")
     @SuppressWarnings("deprecation")
+    private static final int MAX_SEGMENTS_PER_LOAD = 1;
     private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();
     private final Factory mMediaDataSourceFactory;
     private final Context mContext;
@@ -299,8 +299,7 @@ public void setTrackErrorFixer(TrackErrorFixer trackErrorFixer) {
 
     @NonNull
     private DashChunkSource.Factory getDashChunkSourceFactory() {
-        //return new ErrorDefaultDashChunkSource.Factory(mMediaDataSourceFactory, mTrackErrorFixer);
-        return new DefaultDashChunkSource.Factory(mMediaDataSourceFactory, ErrorDefaultDashChunkSource.MAX_SEGMENTS_PER_LOAD);
+        return new DefaultDashChunkSource.Factory(mMediaDataSourceFactory, MAX_SEGMENTS_PER_LOAD);
     }
 
     // EXO: 2.10 - 2.12

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -73,6 +73,7 @@ public final class Video {
     public boolean incognito;
     public String likeCount;
     public String dislikeCount;
+    public float volume = 1.0f;
     private int startSegmentNum;
     private WeakReference<VideoGroup> group; // Memory leak fix. Used to get next page when scrolling.
 
@@ -588,6 +589,8 @@ public void sync(MediaItemFormatInfo formatInfo) {
             startTimeMs = formatInfo.getStartTimeMs() > 0 ? formatInfo.getStartTimeMs() : DateHelper.toUnixTimeMs(formatInfo.getStartTimestamp());
             startSegmentNum = formatInfo.getStartSegmentNum();
         }
+
+        volume = formatInfo.getVolumeLevel();
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -523,7 +523,7 @@ public boolean getPlayEnabled() {
     }
 
     private void restoreVolume() {
-        getPlayer().setVolume(mPlayerData.getPlayerVolume());
+        getPlayer().setVolume(mPlayerData.getPlayerVolume() * getVideo().volume);
     }
 
     private void restoreFormats() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -79,7 +79,7 @@ public class Utils {
     private static final String QR_CODE_URL_TEMPLATE = "https://api.qrserver.com/v1/create-qr-code/?data=%s";
     private static final int GLOBAL_VOLUME_TYPE = AudioManager.STREAM_MUSIC;
     private static final String GLOBAL_VOLUME_SERVICE = Context.AUDIO_SERVICE;
-    private static final Handler sHandler = new Handler(Looper.getMainLooper());
+    public static final Handler sHandler = new Handler(Looper.getMainLooper());
     public static final float[] SPEED_LIST_LONG =
             new float[]{0.25f, 0.5f, 0.75f, 0.80f, 0.85f, 0.90f, 0.95f, 1.0f, 1.05f, 1.1f, 1.15f, 1.2f, 1.25f, 1.3f, 1.4f, 1.5f, 1.75f, 2f, 2.25f, 2.5f, 2.75f, 3.0f, 3.25f, 3.5f, 3.75f, 4.0f};
     public static final float[] SPEED_LIST_SHORT =

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -456,7 +456,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                         if (MediaTrack.codecEquals(mediaTrack, originTrack)) {
                             result = mediaTrack;
                             // Don't do break for VideoTrack because we don't know whether there 30/60 fps.
-                            if (!(originTrack instanceof VideoTrack)) {
+                            if (!(originTrack instanceof VideoTrack) || MediaTrack.bitrateEquals(result, originTrack)) {
                                 break outerloop;
                             }
                         } else if (!MediaTrack.codecEquals(result, originTrack) && !MediaTrack.preferByCodec(result, mediaTrack)) {

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/Format.java
Patch:
@@ -1107,6 +1107,7 @@ public Format copyWithContainerInfo(
       int bitrate,
       int width,
       int height,
+      float frameRate, // MOD: add fps to hls format info
       int channelCount,
       @C.SelectionFlags int selectionFlags,
       @Nullable String language) {

File: exoplayer-amzn-2.10.6/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsSampleStreamWrapper.java
Patch:
@@ -1171,6 +1171,7 @@ private static Format deriveFormat(
         bitrate,
         playlistFormat.width,
         playlistFormat.height,
+        playlistFormat.frameRate, // MOD: add fps to hls format info
         channelCount,
         playlistFormat.selectionFlags,
         playlistFormat.language);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -501,7 +501,7 @@ public static OptionCategory createVideoRotateCategory(Context context, PlayerDa
     public static OptionCategory createPlayerScreenOffDimmingCategory(Context context, PlayerTweaksData data, Runnable onApply) {
         List<OptionItem> options = new ArrayList<>();
 
-        for (int dimPercents : Helpers.range(50, 100, 10)) {
+        for (int dimPercents : Helpers.range(10, 100, 10)) {
             options.add(UiOptionItem.from(dimPercents + "%",
                     optionItem -> {
                         data.setScreenOffDimmingPercents(dimPercents);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -497,7 +497,7 @@ public void setTimeFormat(int format) {
     }
 
     public int getTimeFormat() {
-        return mTimeFormat;
+        return mTimeFormat != -1 ? mTimeFormat : LocaleUtility.is24HourLocale(mContext) ? TIME_FORMAT_24 : TIME_FORMAT_12;
     }
 
     public void enableProxy(boolean enable) {
@@ -757,7 +757,7 @@ private void restoreState() {
         String playlistOrder = Helpers.parseStr(split, 29);
         String pendingStreams = Helpers.parseStr(split, 30);
         mIsGlobalClockEnabled = Helpers.parseBoolean(split, 31, true);
-        mTimeFormat = Helpers.parseInt(split, 32, LocaleUtility.is24HourLocale(mContext) ? TIME_FORMAT_24 : TIME_FORMAT_12);
+        mTimeFormat = Helpers.parseInt(split, 32, -1);
         mSettingsPassword = Helpers.parseStr(split, 33);
         mIsChildModeEnabled = Helpers.parseBoolean(split, 34, false);
         mIsHistoryEnabled = Helpers.parseBoolean(split, 35, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -55,7 +55,7 @@ public class MainUIData extends DataChangeBase {
     public static final int TOP_BUTTON_BROWSE_ACCOUNTS = 0b1;
     public static final int TOP_BUTTON_CHANGE_LANGUAGE = 0b10;
     public static final int TOP_BUTTON_SEARCH = 0b100;
-    public static final int TOP_BUTTON_DEFAULT = Integer.MAX_VALUE & ~(TOP_BUTTON_CHANGE_LANGUAGE); // all except this items
+    public static final int TOP_BUTTON_DEFAULT = TOP_BUTTON_SEARCH | TOP_BUTTON_BROWSE_ACCOUNTS | TOP_BUTTON_CHANGE_LANGUAGE;
     public static final int MENU_ITEM_DEFAULT = MENU_ITEM_PIN_TO_SIDEBAR | MENU_ITEM_NOT_INTERESTED | MENU_ITEM_REMOVE_FROM_HISTORY |
             MENU_ITEM_MOVE_SECTION_UP | MENU_ITEM_MOVE_SECTION_DOWN | MENU_ITEM_RENAME_SECTION | MENU_ITEM_SAVE_PLAYLIST |
             MENU_ITEM_ADD_TO_PLAYLIST | MENU_ITEM_SUBSCRIBE | MENU_ITEM_CREATE_PLAYLIST | MENU_ITEM_STREAM_REMINDER |

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -641,7 +641,7 @@ private void restoreState() {
         mAudioFormat = Helpers.firstNonNull(ExoFormatItem.from(Helpers.parseStr(split, 10)), getDefaultAudioFormat());
         mSubtitleFormat = Helpers.firstNonNull(ExoFormatItem.from(Helpers.parseStr(split, 11)), FormatItem.SUBTITLE_NONE);
         mVideoBufferType = Helpers.parseInt(split, 12, PlayerEngine.BUFFER_LOW);
-        mSubtitleStyleIndex = Helpers.parseInt(split, 13, 1);
+        mSubtitleStyleIndex = Helpers.parseInt(split, 13, 4); // yellow on semi bg
         mVideoZoomMode = Helpers.parseInt(split, 14, PlayerEngine.ZOOM_MODE_DEFAULT);
         mSpeed = Helpers.parseFloat(split, 15, 1.0f);
         mIsAfrEnabled = Helpers.parseBoolean(split, 16, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -117,7 +117,7 @@ private void restoreData() {
         mSearchOptions = Helpers.parseInt(split, 1, 0);
         mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
         mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);
-        mIsTempBackgroundModeEnabled = Helpers.parseBoolean(split, 4, false);
+        mIsTempBackgroundModeEnabled = Helpers.parseBoolean(split, 4, true);
         //mIsAltSpeechRecognizerEnabled
         mSpeechRecognizerType = Helpers.parseInt(split, 6, SPEECH_RECOGNIZER_SYSTEM);
         mIsTrendingSearchesEnabled = Helpers.parseBoolean(split, 7, true);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -307,7 +307,9 @@ public void updateSection(VideoGroup group) {
 
         fixInvisibleSearchOrb();
 
-        updateTitleView();
+        if (group.getAction() == VideoGroup.ACTION_REPLACE) { // minimize call frequency
+            updateTitleView();
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppDialogView.java
Patch:
@@ -8,6 +8,7 @@ public interface AppDialogView {
     void show(List<OptionCategory> categories, String title, boolean isExpandable, boolean isTransparent, int id);
     void finish();
     void goBack();
+    void clearBackstack();
     boolean isShown();
     boolean isTransparent();
     boolean isPaused();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -255,6 +255,9 @@ public boolean isMenuItemEnabled(int menuItems) {
     }
 
     public void setMenuItemIndex(int index, Integer menuItem) {
+        int currentIndex = getMenuItemIndex(menuItem);
+        index = index != 0 && currentIndex > index ? index + 1 : index;
+
         mMenuItemsOrdered.remove(menuItem);
 
         if (index <= mMenuItemsOrdered.size()) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/ControlBar.java
Patch:
@@ -32,7 +32,9 @@ public interface OnChildFocusedListener {
     private int mChildMarginFromCenter;
     private OnChildFocusedListener mOnChildFocusedListener;
     // Can't set to static. Because we have two control bars.
-    int mLastFocusIndex = -1;
+    //int mLastFocusIndex = -1;
+    // MOD: Seamless navigation across two button bars.
+    private static int mLastFocusIndex = -1;
     boolean mDefaultFocusToMiddle = true;
     boolean mFocusRecovery = true;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -682,7 +682,7 @@ private void restoreState() {
         mAudioLanguage = Helpers.parseStr(split, 52, LocaleUtility.getCurrentLanguage(mPrefs.getContext()));
         mSubtitleLanguage = Helpers.parseStr(split, 53, LocaleUtility.getCurrentLanguage(mPrefs.getContext()));
         String enabledSubtitles = Helpers.parseStr(split, 54);
-        mEnableSubtitlesForChannel = Helpers.parseBoolean(split, 55, false);
+        mEnableSubtitlesForChannel = Helpers.parseBoolean(split, 55, true);
 
         if (enabledSubtitles != null) {
             String[] channelsArr = Helpers.splitArray(enabledSubtitles);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -457,7 +457,7 @@ private void restoreData() {
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
         mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, true);
         // Android 6 and below may crash running Cronet???
-        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_CRONET);
+        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_DEFAULT);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);
         mIsSonyFrameDropFixEnabled = Helpers.parseBoolean(split, 29, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -576,8 +576,9 @@ private void showChapterDialog(ChapterItem chapter) {
         AppDialogPresenter dialogPresenter = AppDialogPresenter.instance(getActivity());
 
         if ((dialogPresenter.isDialogShown() && dialogPresenter.getId() != CHAPTER_NOTIFICATION_Id) ||
-                getPlayer() == null || getPlayer().isOverlayShown() || getPlayer().isInPIPMode()) {
-            // Another dialog is opened. Don't distract a user.
+                getPlayer() == null || getPlayer().isOverlayShown() || getPlayer().isInPIPMode() ||
+                Utils.isScreenOff(getActivity())) {
+            // Another window is opened. Don't distract a user.
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/ErrorDefaultDashChunkSource.java
Patch:
@@ -17,7 +17,7 @@
 public class ErrorDefaultDashChunkSource extends DefaultDashChunkSource {
     // Value greater than 1 increase video start time.
     // However, there's a possibility that bigger values could eliminate buffering problems.
-    public static final int MAX_SEGMENTS_PER_LOAD = 10;
+    public static final int MAX_SEGMENTS_PER_LOAD = 1;
     private final TrackErrorFixer mTrackErrorFixer;
 
     public static final class Factory implements DashChunkSource.Factory {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -27,7 +27,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
     static {
         // fix youtube bandwidth throttling (best - false)???
         // false is better for streams (less buffering)
-        //System.setProperty("http.keepAlive", "false");
+        System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
         // Better to remove this fix at all. Users complain about infinite loading.
         //System.setProperty("java.net.preferIPv6Addresses", "true");

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/UriBackgroundManager.java
Patch:
@@ -153,6 +153,8 @@ public void showBackgroundColor(int colorResId) {
             return;
         }
 
-        mBackgroundManager.setColor(ContextCompat.getColor(mActivity, colorResId));
+        if (mBackgroundManager != null) {
+            mBackgroundManager.setColor(ContextCompat.getColor(mActivity, colorResId));
+        }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -178,8 +178,7 @@ private void showHideDimming(boolean show) {
         if (show && mMode == MODE_DIMMING &&
                 (       isPlaying() ||
                         isSigning() ||
-                        mGeneralData.getScreenDimmingTimeoutMs() == GeneralData.SCREEN_DIMMING_NEVER ||
-                        Helpers.isKeyboardShown(activity)
+                        mGeneralData.getScreenDimmingTimeoutMs() == GeneralData.SCREEN_DIMMING_NEVER
                 )
         ) {
             return;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerController.java
Patch:
@@ -58,9 +58,9 @@ public MainPlayerController(Context context) {
         HQDialogController hqDialogManager = new HQDialogController(stateUpdater);
         AutoFrameRateController autoFrameRateManager = new AutoFrameRateController(hqDialogManager, stateUpdater);
 
+        suggestionsLoader.addMetadataListener(stateUpdater);
         suggestionsLoader.addMetadataListener(uiManager);
         suggestionsLoader.addMetadataListener(videoLoader);
-        suggestionsLoader.addMetadataListener(stateUpdater);
         suggestionsLoader.addMetadataListener(contentBlockManager);
         suggestionsLoader.addMetadataListener(liveChatManager);
         suggestionsLoader.addMetadataListener(commentsManager);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -358,7 +358,7 @@ public static OptionCategory createSubtitleStylesCategory(Context context, Playe
     }
 
     public static OptionItem createSubtitleChannelOption(Context context, PlayerData playerData) {
-        return UiOptionItem.from(context.getString(R.string.subtitle_channel),
+        return UiOptionItem.from(context.getString(R.string.subtitle_remember),
                 optionItem -> playerData.enableSubtitlesForChannel(optionItem.isSelected()),
                 playerData.isSubtitlesForChannelEnabled()
         );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -420,7 +420,7 @@ public boolean isPlaylistInChannel() {
     }
 
     public boolean isMix() {
-        return !isLive && mediaItem != null && mediaItem.getDurationMs() <= 0 && (hasPlaylist() || hasChannel() || hasNestedItems());
+        return !isLive && badge != null && mediaItem != null && mediaItem.getDurationMs() <= 0 && (hasPlaylist() || hasChannel() || hasNestedItems());
     }
 
     public boolean isEmpty() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -478,7 +478,9 @@ public void pinItem(Video item) {
     }
 
     public void pinItem(String title, int resId, ErrorFragmentData data) {
-        mErrorSections.add(new BrowseSection(title.hashCode(), title, BrowseSection.TYPE_ERROR, resId, false, data));
+        int id = title.hashCode();
+        Helpers.removeIf(mErrorSections, section -> section.getId() == id);
+        mErrorSections.add(new BrowseSection(id, title, BrowseSection.TYPE_ERROR, resId, false, data));
 
         updateSections();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -561,13 +561,13 @@ private MediaTrack[][] filterByLanguage(MediaTrack[][] trackGroupList, MediaTrac
                 MediaTrack mediaTrack = trackGroup[0];
 
                 if (mediaTrack.format != null) {
-                    if (Helpers.equals(mediaTrack.format.language, resultLanguage)) {
+                    if (Helpers.startsWith(mediaTrack.format.language, resultLanguage)) { // format language: en-us
                         if (resultTracks == null) {
                             resultTracks = new ArrayList<>();
                         }
 
                         resultTracks.add(trackGroup);
-                    } else if (Helpers.equals(mediaTrack.format.language, DEFAULT_LANGUAGE)) {
+                    } else if (Helpers.startsWith(mediaTrack.format.language, DEFAULT_LANGUAGE)) { // format language: en-us
                         if (resultTracksFallback == null) {
                             resultTracksFallback = new ArrayList<>();
                         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -369,7 +369,6 @@ private void destroyPlayerObjects() {
             mMediaSessionConnector.setPlayer(null);
         }
         if (mMediaSession != null) {
-            mMediaSession.setActive(false);
             mMediaSession.release();
         }
         setAdapter(null); // PlayerGlue->LeanbackPlayerAdapter->Context memory leak fix

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -145,8 +145,9 @@ private void updateLiveDescription() {
 
         loadMetadata(video, metadata -> {
             syncCurrentVideo(metadata, video);
+            video.isLive = true; // required to find start of the buffering
 
-            if (!video.isLive && getPlayer().getPlayWhenReady() && !getPlayer().isPlaying()) {
+            if (!metadata.isLive() && getPlayer().getPlayWhenReady() && !getPlayer().isPlaying()) {
                 getMainController().onPlayEnd(); // broadcast call
             }
         });

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -434,9 +434,6 @@ private void appendUserQueueIfNeeded(Video video) {
         VideoGroup videoGroup = VideoGroup.from(queue);
         videoGroup.setTitle(getActivity().getString(R.string.action_playback_queue));
         videoGroup.setId(videoGroup.getTitle().hashCode());
-        for (Video item : queue) {
-            item.setGroup(videoGroup);
-        }
         getPlayer().updateSuggestions(videoGroup);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/BrowseSection.java
Patch:
@@ -15,7 +15,7 @@ public class BrowseSection {
     private final String mIconUrl;
     private final boolean mIsAuthOnly;
     private final Object mData;
-    private boolean mEnabled;
+    private boolean mEnabled = true;
     private int mType;
 
     public BrowseSection(int id, String title, int type, int resId) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -146,9 +146,9 @@ private void updateLiveDescription() {
         loadMetadata(video, metadata -> {
             syncCurrentVideo(metadata, video);
 
-            //if (!video.isLive) {
-            //    getMainController().onPlayEnd(); // broadcast call
-            //}
+            if (!video.isLive && getPlayer().getPlayWhenReady() && !getPlayer().isPlaying()) {
+                getMainController().onPlayEnd(); // broadcast call
+            }
         });
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -243,6 +243,7 @@ private void initIntentChain() {
                 }
 
                 if (sectionId != -1) {
+                    ViewManager.instance(getContext()).startDefaultView(); // Nvidia Shield fix
                     BrowsePresenter.instance(getContext()).selectSection(sectionId);
 
                     return true;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -585,7 +585,7 @@ private void showChapterDialog(ChapterItem chapter) {
         AppDialogPresenter dialogPresenter = AppDialogPresenter.instance(getActivity());
 
         if ((dialogPresenter.isDialogShown() && dialogPresenter.getId() != CHAPTER_NOTIFICATION_Id) ||
-                getPlayer().isOverlayShown() || getPlayer().isInPIPMode()) {
+                getPlayer() == null || getPlayer().isOverlayShown() || getPlayer().isInPIPMode()) {
             // Another dialog is opened. Don't distract a user.
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -479,7 +479,7 @@ public void pinItem(Video item) {
 
     public void pinItem(String title, int resId, ErrorFragmentData data) {
         BrowseSection section = new BrowseSection(title.hashCode(), title, BrowseSection.TYPE_ERROR, resId, false, data);
-        mSections.add(section);
+        mSections.add(0, section);
         mSectionsMapping.put(title.hashCode(), section);
 
         if (getView() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -244,6 +244,7 @@ private void initIntentChain() {
 
                 if (sectionId != -1) {
                     BrowsePresenter.instance(getContext()).selectSection(sectionId);
+
                     return true;
                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -147,7 +147,7 @@ private void updateLiveMetadata() {
             syncCurrentVideo(metadata, video);
 
             if (!video.isLive) {
-                onPlayEnd();
+                getMainController().onPlayEnd(); // broadcast call
             }
         });
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -468,7 +468,7 @@ private void restoreData() {
         mScreenOffTimeoutSec = Helpers.parseInt(split, 33, 0);
         mIsUIAnimationsEnabled = Helpers.parseBoolean(split, 34, false);
         mIsLikesCounterEnabled = Helpers.parseBoolean(split, 35, true);
-        mIsChapterNotificationEnabled = Helpers.parseBoolean(split, 36, true);
+        mIsChapterNotificationEnabled = Helpers.parseBoolean(split, 36, false);
 
         updateDefaultValues();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -613,9 +613,7 @@ private void showChapterDialog(ChapterItem chapter) {
                     // return to previous dialog or close if no other dialogs in stack
                     dialogPresenter.closeDialog();
                     ChapterItem nextChapter = getNextChapter();
-                    if (nextChapter != null) {
-                        getPlayer().setPositionMs(nextChapter.getStartTimeMs());
-                    }
+                    getPlayer().setPositionMs(nextChapter != null ? nextChapter.getStartTimeMs() : getPlayer().getDurationMs());
                 }
         );
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -34,6 +34,7 @@
 public class ContentBlockController extends PlayerEventListenerHelper implements MetadataListener {
     private static final String TAG = ContentBlockController.class.getSimpleName();
     private static final long POLL_INTERVAL_MS = 1_000;
+    private static final int CONTENT_BLOCK_ID = 144;
     private MediaItemService mMediaItemManager;
     private ContentBlockData mContentBlockData;
     private Video mVideo;
@@ -288,6 +289,7 @@ private void confirmSkip(long skipPosMs, String category) {
 
         dialogPresenter.enableTransparent(true);
         dialogPresenter.enableExpandable(false);
+        dialogPresenter.setId(CONTENT_BLOCK_ID);
         dialogPresenter.showDialog(getActivity().getString(R.string.content_block_provider));
     }
 
@@ -389,7 +391,7 @@ private boolean isScreenOff() {
     private void closeTransparentDialog() {
         AppDialogPresenter dialogPresenter = AppDialogPresenter.instance(getActivity());
 
-        if (dialogPresenter.isDialogShown() && dialogPresenter.isTransparent()) {
+        if (dialogPresenter.isDialogShown() && dialogPresenter.getId() == CONTENT_BLOCK_ID) {
             dialogPresenter.closeDialog();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppDialogView.java
Patch:
@@ -5,9 +5,11 @@
 import java.util.List;
 
 public interface AppDialogView {
-    void show(List<OptionCategory> categories, String title, boolean isExpandable, boolean isTransparent);
+    void show(List<OptionCategory> categories, String title, boolean isExpandable, boolean isTransparent, int id);
     void finish();
     void goBack();
     boolean isShown();
     boolean isTransparent();
+    boolean isPaused();
+    int getViewId();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.os.Build;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaGroup;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.locale.LocaleUtility;
@@ -766,7 +767,8 @@ private void restoreState() {
         mVersionCode = Helpers.parseInt(split, 39, -1);
         mIsSelectChannelSectionEnabled = Helpers.parseBoolean(split, 40, true);
         mMasterPassword = Helpers.parseStr(split, 41);
-        mIsOldHomeLookEnabled = Helpers.parseBoolean(split, 42, false);
+        // StackOverflow on old devices?
+        mIsOldHomeLookEnabled = Helpers.parseBoolean(split, 42, Build.VERSION.SDK_INT <= 19);
         mIsOldUpdateNotificationsEnabled = Helpers.parseBoolean(split, 43, false);
 
         if (pinnedItems != null && !pinnedItems.isEmpty()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -245,8 +245,8 @@ private void simpleSkip(long skipPosMs) {
             return;
         }
 
-        setPositionMs(skipPosMs);
         closeTransparentDialog();
+        setPositionMs(skipPosMs);
     }
 
     private void messageSkip(long skipPosMs, String category) {
@@ -256,8 +256,8 @@ private void messageSkip(long skipPosMs, String category) {
 
         MessageHelpers.showMessage(getActivity(),
                 String.format("%s: %s", getActivity().getString(R.string.content_block_provider), getActivity().getString(R.string.msg_skipping_segment, category)));
-        setPositionMs(skipPosMs);
         closeTransparentDialog();
+        setPositionMs(skipPosMs);
     }
 
     private void confirmSkip(long skipPosMs, String category) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -12,6 +12,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Playlist;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.service.VideoStateService;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.service.VideoStateService.State;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
@@ -456,6 +457,7 @@ private void appendMarkAsWatchedButton() {
                 UiOptionItem.from(getContext().getString(R.string.mark_as_watched), optionItem -> {
                     MediaServiceManager.instance().updateHistory(mVideo, 0);
                     mVideo.percentWatched = 100;
+                    VideoStateService.instance(getContext()).save(new State(mVideo.videoId, mVideo.getDurationMs()));
                     Playlist.instance().sync(mVideo);
                     mDialogPresenter.closeDialog();
                 }));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/SuggestionsController.java
Patch:
@@ -122,8 +122,6 @@ public void onSuggestionItemClicked(Video item) {
     public void onControlsShown(boolean shown) {
         if (shown) {
             focusCurrentChapter();
-        } else {
-            startChapterNotificationServiceIfNeeded();
         }
     }
 
@@ -405,8 +403,9 @@ private void startChapterNotificationServiceIfNeeded() {
 
         if (chapter != null) {
             Utils.postDelayed(mChapterHandler, (long) ((chapter.getStartTimeMs() - positionMs) * getPlayer().getSpeed()));
-            showChapterDialog(getCurrentChapter());
         }
+
+        showChapterDialog(getCurrentChapter());
     }
 
     private void appendChaptersIfNeeded(MediaItemMetadata mediaItemMetadata) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -188,6 +188,8 @@ public void onPlayEnd() {
     @Override
     public void onSuggestionItemClicked(Video item) {
         openVideoInt(item);
+
+        getPlayer().showControls(false);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogActivity.java
Patch:
@@ -44,7 +44,7 @@ private void setupActivity() {
 
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
-        if (KeyHelpers.isMenuKey(keyCode)) { // toggle dialog with menu key
+        if (!mFragment.isTransparent() && KeyHelpers.isMenuKey(keyCode)) { // toggle dialog with menu key
             finish();
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1227,9 +1227,7 @@ public void showControls(boolean show) {
 
         showOverlay(show);
 
-        if (show) {
-            setPlayerRowIndex(0);
-        }
+        setPlayerRowIndex(0);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -347,7 +347,6 @@ private void appendAppBackupCategory(AppDialogPresenter settingsPresenter) {
                 option -> {
                     AppDialogUtil.showConfirmationDialog(getContext(), getContext().getString(R.string.app_backup), () -> {
                         mGeneralData.enableSection(MediaGroup.TYPE_SETTINGS, true); // prevent Settings lock
-                        mGeneralData.enableSettingsSection(true); // prevent Settings lock
                         backupManager.checkPermAndBackup();
                         MessageHelpers.showMessage(getContext(), R.string.msg_done);
                     });

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoLoaderController.java
Patch:
@@ -410,7 +410,6 @@ private void applyRepeatMode(int repeatMode) {
             case PlayerUI.REPEAT_MODE_ALL:
             case PlayerUI.REPEAT_MODE_SHUFFLE:
                 loadNext();
-                //getPlayer().showOverlay(true);
                 break;
             case PlayerUI.REPEAT_MODE_ONE:
                 getPlayer().setPositionMs(0);
@@ -442,7 +441,6 @@ private void applyRepeatMode(int repeatMode) {
                 Video video = getPlayer().getVideo();
                 if ((video != null && video.hasNextPlaylist()) || mPlaylist.getNext() != null) {
                     loadNext();
-                    getPlayer().showOverlay(true);
                 } else {
                     getPlayer().setPositionMs(getPlayer().getDurationMs());
                     getPlayer().setPlayWhenReady(false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -194,6 +194,7 @@ private void prepareAndShowDialogUnsigned() {
         appendReturnToBackgroundVideoButton();
         appendPlayVideoButton();
         appendPlayVideoIncognitoButton();
+        appendMarkAsWatchedButton();
         appendAddToPlaybackQueueButton();
         appendShowPlaybackQueueButton();
         appendOpenChannelButton();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -543,7 +543,8 @@ public void enableLiveChat(boolean enable) {
     public FormatItem getDefaultAudioFormat() {
         // Android 4 (probably some others) doesn't support opus (ac3 will be reverted to opus)
         // Note, 5.1 mp4a doesn't work in 5.1 mode
-        return FormatItem.AUDIO_HQ_MP4A;
+        // Use opus on modern devices. vp9 and opus should be supported at the same time?
+        return Helpers.isVP9ResolutionSupported(2160) ? FormatItem.AUDIO_51_AC3 : FormatItem.AUDIO_HQ_MP4A;
     }
 
     public FormatItem getDefaultVideoFormat() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -100,7 +100,7 @@ public void onVideoLoaded(Video item) {
         boolean enabled = mContentBlockData.isSponsorBlockEnabled() && !isChannelExcluded(item.channelId);
         getPlayer().setButtonState(R.id.action_content_block, enabled ? PlayerUI.BUTTON_ON : PlayerUI.BUTTON_OFF);
 
-        if (mContentBlockData.isSponsorBlockEnabled() && checkVideo(item)) {
+        if (enabled && checkVideo(item)) {
             updateSponsorSegmentsAndWatch(item);
         }
     }
@@ -180,7 +180,7 @@ private void startSponsorWatcher() {
         if (mContentBlockData.isColorMarkersEnabled()) {
             getPlayer().setSeekBarSegments(toSeekBarSegments(mOriginalSegments));
         }
-        if (mContentBlockData.isActionsEnabled() && !isChannelExcluded(mVideo.channelId)) {
+        if (mContentBlockData.isActionsEnabled()) {
             startPlaybackWatcher();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -90,6 +90,7 @@ public void onInit() {
     @Override
     public void openVideo(Video item) {
         mSkipExclude = false;
+        getPlayer().setSeekBarSegments(null); // reset colors
     }
 
     @Override
@@ -176,8 +177,6 @@ private void startSponsorWatcher() {
 
         mActiveSegments = new ArrayList<>(mOriginalSegments);
 
-        getPlayer().setSeekBarSegments(null); // reset colors
-
         if (mContentBlockData.isColorMarkersEnabled()) {
             getPlayer().setSeekBarSegments(toSeekBarSegments(mOriginalSegments));
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/ContentBlockController.java
Patch:
@@ -99,7 +99,7 @@ public void onVideoLoaded(Video item) {
         boolean enabled = mContentBlockData.isSponsorBlockEnabled() && !isChannelExcluded(item.channelId);
         getPlayer().setButtonState(R.id.action_content_block, enabled ? PlayerUI.BUTTON_ON : PlayerUI.BUTTON_OFF);
 
-        if (enabled && checkVideo(item)) {
+        if (mContentBlockData.isSponsorBlockEnabled() && checkVideo(item)) {
             updateSponsorSegmentsAndWatch(item);
         }
     }
@@ -181,7 +181,7 @@ private void startSponsorWatcher() {
         if (mContentBlockData.isColorMarkersEnabled()) {
             getPlayer().setSeekBarSegments(toSeekBarSegments(mOriginalSegments));
         }
-        if (mContentBlockData.isActionsEnabled()) {
+        if (mContentBlockData.isActionsEnabled() && !isChannelExcluded(mVideo.channelId)) {
             startPlaybackWatcher();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -541,9 +541,9 @@ public void enableLiveChat(boolean enable) {
     }
 
     public FormatItem getDefaultAudioFormat() {
-        // Android 4 doesn't support opus (ac3 will be reverted to opus)
+        // Android 4 (probably some others) doesn't support opus (ac3 will be reverted to opus)
         // Note, 5.1 mp4a doesn't work in 5.1 mode
-        return VERSION.SDK_INT <= 19 ? FormatItem.AUDIO_HQ_MP4A : FormatItem.AUDIO_51_AC3;
+        return FormatItem.AUDIO_HQ_MP4A;
     }
 
     public FormatItem getDefaultVideoFormat() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -447,7 +447,7 @@ private void restoreData() {
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
         mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, true);
         // Android 6 and below may crash running Cronet???
-        mPlayerDataSource = Helpers.parseInt(split, 26, VERSION.SDK_INT <= 19 ? PLAYER_DATA_SOURCE_DEFAULT : PLAYER_DATA_SOURCE_CRONET);
+        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_CRONET);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);
         mIsSonyFrameDropFixEnabled = Helpers.parseBoolean(split, 29, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/FormatItem.java
Patch:
@@ -11,9 +11,9 @@ public interface FormatItem {
     FormatItem VIDEO_FHD_VP9_60 = ExoFormatItem.fromVideoSpec("1920,1080,60,vp9", false);
     FormatItem VIDEO_4K_VP9_60 = ExoFormatItem.fromVideoSpec("3840,2160,60,vp9", false);
     FormatItem SUBTITLE_DEFAULT = ExoFormatItem.fromSubtitleParams(null);
-    FormatItem AUDIO_HQ_MP4A = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "mp4a")); // Note, 5.1 mp4a won't work
-    FormatItem AUDIO_51_EC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ec-3")); // Note, 5.1 mp4a won't work
-    FormatItem AUDIO_51_AC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ac-3")); // Note, 5.1 mp4a won't work
+    FormatItem AUDIO_HQ_MP4A = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "mp4a")); // Note, 5.1 mp4a doesn't work in 5.1 mode
+    FormatItem AUDIO_51_EC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ec-3")); // Note, 5.1 mp4a doesn't work in 5.1 mode
+    FormatItem AUDIO_51_AC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ac-3")); // Note, 5.1 mp4a doesn't work in 5.1 mode
     int TYPE_VIDEO = 0;
     int TYPE_AUDIO = 1;
     int TYPE_SUBTITLE = 2;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -541,7 +541,9 @@ public void enableLiveChat(boolean enable) {
     }
 
     public FormatItem getDefaultAudioFormat() {
-        return FormatItem.AUDIO_51_AC3; // Note, 5.1 mp4a won't work
+        // Android 4 doesn't support opus (ac3 will be reverted to opus)
+        // Note, 5.1 mp4a doesn't work in 5.1 mode
+        return VERSION.SDK_INT <= 19 ? FormatItem.AUDIO_HQ_MP4A : FormatItem.AUDIO_51_AC3;
     }
 
     public FormatItem getDefaultVideoFormat() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/VolumeBooster.java
Patch:
@@ -29,7 +29,7 @@ public void onAudioSessionId(int audioSessionId) {
             mBooster = new LoudnessEnhancer(audioSessionId);
             mBooster.setEnabled(mEnabled);
             mBooster.setTargetGain((int) (1000 * mVolume));
-        } catch (RuntimeException e) { // Cannot initialize effect engine
+        } catch (RuntimeException | UnsatisfiedLinkError e) { // Cannot initialize effect engine
             e.printStackTrace();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controllers/VideoStateController.java
Patch:
@@ -25,7 +25,7 @@ public class VideoStateController extends PlayerEventListenerHelper implements M
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long LIVE_THRESHOLD_MS = 90_000; // should be greater than the live buffer
     private static final long LIVE_BUFFER_MS = 60_000;
-    private static final long SHORT_LIVE_BUFFER_MS = 30_000; // minimal buffer without segment skip
+    private static final long SHORT_LIVE_BUFFER_MS = 0; // Note, on buffer lower than the 60sec you'll notice segment skip
     private static final long BEGIN_THRESHOLD_MS = 10_000;
     private boolean mIsPlayEnabled;
     private Video mVideo = new Video();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1516,6 +1516,7 @@ public void clearSuggestions() {
         }
 
         mMediaGroupAdapters.clear();
+        mPendingFocus = null;
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -452,7 +452,7 @@ private void appendMarkAsWatchedButton() {
         mDialogPresenter.appendSingleButton(
                 UiOptionItem.from(getContext().getString(R.string.mark_as_watched), optionItem -> {
                     MediaServiceManager.instance().updateHistory(mVideo, 0);
-                    mVideo.percentWatched = 0;
+                    mVideo.percentWatched = 100;
                     Playlist.instance().sync(mVideo);
                     mDialogPresenter.closeDialog();
                 }));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -353,7 +353,8 @@ public ColorScheme(int nameResId,
     private void updateDefaultValues() {
         // Enable only certain items (not all, like it was)
         if (mMenuItems >>> 30 == 0b1) { // check leftmost bit (old format)
-            mMenuItems = mMenuItems << (32 - 27) >>> (32 - 27); // remove auto enabled bits
+            int bits = 32 - 27;
+            mMenuItems = mMenuItems << bits >>> bits; // remove auto enabled bits
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -431,7 +431,8 @@ private void persistData() {
     private void updateDefaultValues() {
         // Enable only certain buttons (not all, like it was)
         if (mPlayerButtons >>> 30 == 0b1) { // check leftmost bit (old format)
-            mPlayerButtons = mPlayerButtons << (32 - 24) >>> (32 - 24); // remove auto enabled bits
+            int bits = 32 - 24;
+            mPlayerButtons = mPlayerButtons << bits >>> bits; // remove auto enabled bits
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -353,7 +353,7 @@ public ColorScheme(int nameResId,
     private void updateDefaultValues() {
         // Enable only certain items (not all, like it was)
         if (mMenuItems >>> 30 == 0b1) { // check leftmost bit (old format)
-            mMenuItems = mMenuItems >>> (31 - 27); // remove auto enabled bits
+            mMenuItems = mMenuItems << (32 - 27) >>> (32 - 27); // remove auto enabled bits
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -431,7 +431,7 @@ private void persistData() {
     private void updateDefaultValues() {
         // Enable only certain buttons (not all, like it was)
         if (mPlayerButtons >>> 30 == 0b1) { // check leftmost bit (old format)
-            mPlayerButtons = mPlayerButtons >>> (31 - 24); // remove auto enabled bits
+            mPlayerButtons = mPlayerButtons << (32 - 24) >>> (32 - 24); // remove auto enabled bits
         }
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -127,6 +127,7 @@ public int indexOfAlt(Video item) {
     public void clear() {
         int itemCount = mVideoItems.size();
         mVideoItems.clear();
+        mVideoGroups.clear();
         if (itemCount != 0) {
             notifyItemRangeRemoved(0, itemCount);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -115,8 +115,9 @@ private void appendChannelSortingCategory(AppDialogPresenter settingsPresenter)
         List<OptionItem> options = new ArrayList<>();
 
         for (int[] pair : new int[][] {
-                {R.string.sorting_by_new_content, MainUIData.CHANNEL_SORTING_UPDATE},
+                {R.string.default_lang, MainUIData.CHANNEL_SORTING_DEFAULT},
                 {R.string.sorting_alphabetically, MainUIData.CHANNEL_SORTING_NAME},
+                {R.string.sorting_by_new_content, MainUIData.CHANNEL_SORTING_UPDATE},
                 {R.string.sorting_last_viewed, MainUIData.CHANNEL_SORTING_LAST_VIEWED}}) {
             options.add(UiOptionItem.from(getContext().getString(pair[0]), optionItem -> {
                 mMainUIData.setChannelCategorySorting(pair[1]);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -14,7 +14,8 @@ public class MainUIData extends DataChangeBase {
     private static final String MAIN_UI_DATA = "main_ui_data2";
     public static final int CHANNEL_SORTING_UPDATE = 0;
     public static final int CHANNEL_SORTING_NAME = 1;
-    public static final int CHANNEL_SORTING_LAST_VIEWED = 2;
+    public static final int CHANNEL_SORTING_DEFAULT = 2;
+    public static final int CHANNEL_SORTING_LAST_VIEWED = 3;
     public static final int PLAYLISTS_STYLE_GRID = 0;
     public static final int PLAYLISTS_STYLE_ROWS = 1;
     public static final int MENU_ITEM_RECENT_PLAYLIST = 0b1;
@@ -300,7 +301,7 @@ private void restoreState() {
         mUIScale = Helpers.parseFloat(split, 2, 1.0f);
         mColorSchemeIndex = Helpers.parseInt(split, 3, 1);
         mIsCardMultilineTitleEnabled = Helpers.parseBoolean(split, 4, true);
-        mChannelCategorySorting = Helpers.parseInt(split, 5, CHANNEL_SORTING_LAST_VIEWED);
+        mChannelCategorySorting = Helpers.parseInt(split, 5, CHANNEL_SORTING_DEFAULT);
         mPlaylistsStyle = Helpers.parseInt(split, 6, PLAYLISTS_STYLE_GRID);
         mCardTitleLinesNum = Helpers.parseInt(split, 7, 1);
         mIsCardTextAutoScrollEnabled = Helpers.parseBoolean(split, 8, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/proxy/WebProxyDialog.java
Patch:
@@ -11,6 +11,7 @@
 import android.widget.TextView;
 import androidx.annotation.RequiresApi;
 import androidx.appcompat.app.AlertDialog;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.KeyHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.okhttp.OkHttpManager;
@@ -87,7 +88,7 @@ protected Proxy validateProxyConfigFields() {
             appendStatusMessage(R.string.proxy_host_invalid);
         }
         String proxyPortString = ((EditText) mProxyConfigDialog.findViewById(R.id.proxy_port)).getText().toString();
-        int proxyPort = proxyPortString.isEmpty() ? 0 : Integer.parseInt(proxyPortString);
+        int proxyPort = proxyPortString.isEmpty() ? 0 : Helpers.parseInt(proxyPortString);
         if (proxyPort <= 0) {
             isConfigValid = false;
             appendStatusMessage(R.string.proxy_port_invalid);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1472,7 +1472,7 @@ public void focusSuggestedItem(int index) {
 
     @Override
     public void focusSuggestedItem(Video video) {
-        if (video == null || video.getGroup() == null) {
+        if (video == null || video.getGroup() == null || mPendingFocus != null) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -920,7 +920,7 @@ public void setPositionMs(long positionMs) {
     public long getDurationMs() {
         long durationMs = mExoPlayerController.getDurationMs();
 
-        if (durationMs > Video.MAX_DURATION_MS) {
+        if (durationMs > Video.MAX_DURATION_MS && getVideo() != null) {
             durationMs = getVideo().getLiveDurationMs();
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -421,7 +421,7 @@ public boolean isPlaylistInChannel() {
     }
 
     public boolean isMix() {
-        return mediaItem != null && mediaItem.getDurationMs() <= 0 && (hasPlaylist() || hasChannel() || hasNestedItems());
+        return !isLive && mediaItem != null && mediaItem.getDurationMs() <= 0 && (hasPlaylist() || hasChannel() || hasNestedItems());
     }
 
     public boolean isEmpty() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -75,7 +75,7 @@ public final class Video implements Parcelable {
     public boolean finishOnEnded;
     public boolean incognito;
     private int startSegmentNum;
-    private WeakReference<VideoGroup> group; // Memory leak fix. Used to get next page when scrolling.
+    private VideoGroup group; // Memory leak fix. Used to get next page when scrolling.
 
     public Video() {
        // NOP
@@ -266,11 +266,11 @@ public String getAuthor() {
     }
 
     public VideoGroup getGroup() {
-        return group != null ? group.get() : null;
+        return group;
     }
 
     public void setGroup(VideoGroup group) {
-        this.group = new WeakReference<>(group);
+        this.group = group;
     }
 
     private static String extractAuthor(String secondTitle) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -19,7 +19,8 @@ private Playlist() {
             @Override
             public boolean add(Video video) {
                 // Memory leak fix. Creating lightweight copy of origin.
-                return super.add(video.group != null ? video.copy() : video);
+                //return super.add(video.group != null ? video.copy() : video);
+                return super.add(video);
             }
         };
         mCurrentIndex = -1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -454,8 +454,8 @@ public void focusAndContinueIfNeeded(VideoGroup group) {
             getController().focusSuggestedItem(group.getVideos().get(index));
             // Stop the continuation loop
             mContinuationCount = 0;
-        } else if (mContinuationCount > 5) {
-            // Stop the continuation loop
+        } else if (mContinuationCount > 5 || !video.hasPlaylist()) {
+            // Stop the continuation loop. Maybe the video isn't there.
             mContinuationCount = 0;
         } else {
             // load more and repeat

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/FormatItem.java
Patch:
@@ -11,7 +11,9 @@ public interface FormatItem {
     FormatItem VIDEO_FHD_VP9_60 = ExoFormatItem.fromVideoSpec("1920,1080,60,vp9", false);
     FormatItem VIDEO_4K_VP9_60 = ExoFormatItem.fromVideoSpec("3840,2160,60,vp9", false);
     FormatItem SUBTITLE_DEFAULT = ExoFormatItem.fromSubtitleParams(null);
-    FormatItem AUDIO_HQ_MP4A = ExoFormatItem.fromAudioData(ExoFormatItem.FORMAT_MP4A);
+    FormatItem AUDIO_HQ_MP4A = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "mp4a")); // Note, 5.1 mp4a won't work
+    FormatItem AUDIO_51_EC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ec-3")); // Note, 5.1 mp4a won't work
+    FormatItem AUDIO_51_AC3 = ExoFormatItem.fromAudioSpecs(String.format("%s,null", "ac-3")); // Note, 5.1 mp4a won't work
     int TYPE_VIDEO = 0;
     int TYPE_AUDIO = 1;
     int TYPE_SUBTITLE = 2;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -541,7 +541,7 @@ public void enableLiveChat(boolean enable) {
     }
 
     public FormatItem getDefaultAudioFormat() {
-        return ExoFormatItem.fromAudioSpecs(String.format("%s,null", "mp4a"));
+        return FormatItem.AUDIO_51_AC3; // Note, 5.1 mp4a won't work
     }
 
     public FormatItem getDefaultVideoFormat() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -713,6 +713,7 @@ public boolean isOldHomeLookEnabled() {
 
     private void initSections() {
         mDefaultSections.put(R.string.header_home, MediaGroup.TYPE_HOME);
+        mDefaultSections.put(R.string.header_kids_home, MediaGroup.TYPE_KIDS_HOME);
         mDefaultSections.put(R.string.header_gaming, MediaGroup.TYPE_GAMING);
         mDefaultSections.put(R.string.header_news, MediaGroup.TYPE_NEWS);
         mDefaultSections.put(R.string.header_music, MediaGroup.TYPE_MUSIC);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -506,7 +506,8 @@ private void appendPlayVideoButton() {
 
     private void appendPlayVideoIncognitoButton() {
         if (!mIsPlayVideoIncognitoButtonEnabled || mVideo == null || mVideo.videoId == null ||
-            ViewManager.instance(getContext()).getTopView() == PlaybackView.class) {
+            ViewManager.instance(getContext()).getTopView() == PlaybackView.class ||
+            BrowsePresenter.instance(getContext()).isHistorySection()) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -27,7 +27,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
     static {
         // fix youtube bandwidth throttling (best - false)???
         // false is better for streams (less buffering)
-        System.setProperty("http.keepAlive", "false");
+        //System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
         // Better to remove this fix at all. Users complain about infinite loading.
         //System.setProperty("java.net.preferIPv6Addresses", "true");

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -47,7 +47,7 @@ public void show() {
         appendPlaybackModeCategory(settingsPresenter);
         appendVideoPresetsCategory(settingsPresenter);
         appendVideoBufferCategory(settingsPresenter);
-        //appendVideoZoomCategory(settingsPresenter);
+        appendVideoZoomCategory(settingsPresenter);
         appendAudioLanguageCategory(settingsPresenter);
         appendAudioShiftCategory(settingsPresenter);
         appendMasterVolumeCategory(settingsPresenter);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -387,7 +387,7 @@ private void restoreData() {
         mIsQualityInfoBitrateEnabled = Helpers.parseBoolean(split, 22, false);
         mIsSpeedButtonOldBehaviorEnabled = Helpers.parseBoolean(split, 23, false);
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
-        mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, false);
+        mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, true);
         mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_CRONET);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -426,7 +426,8 @@ public static OptionCategory createVideoZoomCategory(Context context, PlayerData
                     playerData.getVideoZoomMode() == pair[1] && playerData.getVideoZoom() == -1));
         }
 
-        for (int zoomPercents : Helpers.range(100, 300, 25)) {
+        // Zoom above 100% has centering problems with 2K-4K videos
+        for (int zoomPercents : Helpers.range(50, 300, 5)) {
             options.add(UiOptionItem.from(String.format("%s%%", zoomPercents),
                     optionItem -> {
                         playerData.setVideoZoom(zoomPercents);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -321,8 +321,9 @@ public static OptionCategory createAudioLanguageCategory(Context context, Player
             addedCodes.add(languageCode);
         }
 
+        // NOTE: Comparator.comparing API >= 24
         // Alphabetical order
-        Collections.sort(options, Comparator.comparing(o -> ((String) o.getTitle())));
+        Collections.sort(options, (o1, o2) -> ((String) o1.getTitle()).compareTo((String) o2.getTitle()));
 
         return OptionCategory.from(AUDIO_LANGUAGE_ID, OptionCategory.TYPE_RADIO, title, options);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -641,13 +641,13 @@ protected void persistState() {
                 Helpers.toString(mVideoFormat), Helpers.toString(mAudioFormat), Helpers.toString(mSubtitleFormat),
                 mVideoBufferType, mSubtitleStyleIndex, mVideoZoomMode, mSpeed,
                 mIsAfrEnabled, mIsAfrFpsCorrectionEnabled, mIsAfrResSwitchEnabled, null, mAudioDelayMs,
-                mIsRememberSpeedEnabled, mRepeatMode, null, // didn't remember what was there
+                mIsRememberSpeedEnabled, null, null, // didn't remember what was there
                 mIsLegacyCodecsForced, mIsSonyTimerFixEnabled, null, null, // old player tweaks
                 mIsQualityInfoEnabled, mIsRememberSpeedEachEnabled, mVideoAspectRatio, mIsGlobalClockEnabled, mIsTimeCorrectionEnabled,
                 mIsGlobalEndingTimeEnabled, mIsEndingTimeEnabled, mIsDoubleRefreshRateEnabled, mIsSeekConfirmPlayEnabled,
                 mStartSeekIncrementMs, null, mSubtitleScale, mPlayerVolume, mIsTooltipsEnabled, mSubtitlePosition, mIsNumberKeySeekEnabled,
                 mIsSkip24RateEnabled, mAfrPauseMs, mIsLiveChatEnabled, Helpers.toString(mLastSubtitleFormat), mLastSpeed, mVideoRotation,
-                mVideoZoom));
+                mVideoZoom, mRepeatMode));
 
         super.persistState();
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -137,6 +137,8 @@ public void onDestroyView() {
     private void backupMessages() {
         MessagesList messagesList = getView().findViewById(R.id.messagesList);
 
-        mBackupMessages = ((MessagesListAdapter<ChatItemMessage>) messagesList.getAdapter()).getMessages();
+        MessagesListAdapter<ChatItemMessage> adapter = (MessagesListAdapter<ChatItemMessage>) messagesList.getAdapter();
+
+        mBackupMessages = adapter != null ? adapter.getMessages() : null;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppDialogView.java
Patch:
@@ -9,4 +9,5 @@ public interface AppDialogView {
     void finish();
     void goBack();
     boolean isShown();
+    boolean isTransparent();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -381,7 +381,7 @@ private void restoreData() {
         mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_CRONET);
         mUnlockAllFormats = Helpers.parseBoolean(split, 27, false);
         mIsDashUrlStreamsForced = Helpers.parseBoolean(split, 28, false);
-        mIsFrameDropSonyFixEnabled = Helpers.parseBoolean(split, 29, false);
+        mIsFrameDropSonyFixEnabled = Helpers.parseBoolean(split, 29, true);
     }
 
     private void persistData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -621,7 +621,7 @@ private void restoreState() {
         mIsNumberKeySeekEnabled = Helpers.parseBoolean(split, 43, true);
         mIsSkip24RateEnabled = Helpers.parseBoolean(split, 44, false);
         mAfrPauseMs = Helpers.parseInt(split, 45, 0);
-        mIsLiveChatEnabled = Helpers.parseBoolean(split, 46, Build.VERSION.SDK_INT > 19);
+        mIsLiveChatEnabled = Helpers.parseBoolean(split, 46, false);
         mLastSubtitleFormat = Helpers.firstNonNull(ExoFormatItem.from(Helpers.parseStr(split, 47)), FormatItem.SUBTITLE_DEFAULT);
         mLastSpeed = Helpers.parseFloat(split, 48, 1.0f);
         mVideoRotation = Helpers.parseInt(split, 49, 0);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackController.java
Patch:
@@ -9,7 +9,6 @@ public interface PlaybackController extends PlaybackEngine, PlaybackUI {
     Video getVideo();
     void finish();
     void finishReally();
-    void setAfrRunning(boolean isRunning);
     void showBackground(String url);
     void showBackgroundColor(int colorResId);
     void resetPlayerState();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -147,9 +147,10 @@ private DataSource.Factory buildDataSourceFactory(boolean useBandwidthMeter) {
      */
     private HttpDataSource.Factory buildHttpDataSourceFactory(boolean useBandwidthMeter) {
         PlayerTweaksData tweaksData = PlayerTweaksData.instance(mContext);
+        int source = tweaksData.getPlayerDataSource();
         DefaultBandwidthMeter bandwidthMeter = useBandwidthMeter ? BANDWIDTH_METER : null;
-        return tweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP ? buildOkHttpDataSourceFactory(bandwidthMeter) :
-                        tweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET ? buildCronetDataSourceFactory(bandwidthMeter) :
+        return source == PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP ? buildOkHttpDataSourceFactory(bandwidthMeter) :
+                        source == PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET && CronetManager.getEngine(mContext) != null ? buildCronetDataSourceFactory(bandwidthMeter) :
                                 buildDefaultHttpDataSourceFactory(bandwidthMeter);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -33,6 +33,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.ExoUtils;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
+import org.chromium.net.ApiVersion;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -349,6 +350,8 @@ private void appendVersion() {
                 PlayerTweaksData.instance(mContext).getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP ? "OkHttp" :
                         PlayerTweaksData.instance(mContext).getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET ? "Cronet" :
                         "Default");
+        appendRow("Cronet version", ApiVersion.getCronetVersion());
+        //appendRow("OkHttp version", Version.userAgent());
         appendRow(mAppVersion, AppInfoHelpers.getAppVersionName(mContext));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -49,14 +49,14 @@ public void onViewInitialized() {
     /**
      * Opens video item from splash view
      */
-    public void openVideo(String videoId, boolean finishOnEnded, Long timeMs) {
+    public void openVideo(String videoId, boolean finishOnEnded, long timeMs) {
         if (videoId == null) {
             return;
         }
 
         Video video = Video.from(videoId);
         video.finishOnEnded = finishOnEnded;
-        video.pendingPosMs = timeMs == null ? 0 : timeMs;
+        video.pendingPosMs = timeMs;
         openVideo(video);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -235,7 +235,7 @@ private void initIntentChain() {
                     viewManager.setSinglePlayerMode(true);
                 }
 
-                Long timeMs = IntentExtractor.extractVideoTimeMs(intent);
+                long timeMs = IntentExtractor.extractVideoTimeMs(intent);
                 PlaybackPresenter playbackPresenter = PlaybackPresenter.instance(getContext());
                 playbackPresenter.openVideo(videoId, IntentExtractor.hasFinishOnEndedFlag(intent), timeMs);
 
@@ -250,7 +250,7 @@ private void initIntentChain() {
 
             if (backupData != null) {
                 PlaybackPresenter playbackPresenter = PlaybackPresenter.instance(getContext());
-                playbackPresenter.openVideo(backupData, false, null);
+                playbackPresenter.openVideo(backupData, false, -1);
                 return true;
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -296,15 +296,15 @@ private void appendTweaksCategory(AppDialogPresenter settingsPresenter) {
                 option -> mPlayerTweaksData.enableFrameDropFix(option.isSelected()),
                 mPlayerTweaksData.isFrameDropFixEnabled()));
 
-        options.add(UiOptionItem.from("Enable OkHttp player engine",
+        options.add(UiOptionItem.from(getContext().getString(R.string.download_data_with, "OkHttp"),
                 option -> {
                     mPlayerTweaksData.setPlayerDataSource(option.isSelected() ? PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP :
                             PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);
                     ExoMediaSourceFactory.unhold();
                 },
                 mPlayerTweaksData.getPlayerDataSource() == PlayerTweaksData.PLAYER_DATA_SOURCE_OKHTTP));
 
-        options.add(UiOptionItem.from("Enable Cronet player engine",
+        options.add(UiOptionItem.from(getContext().getString(R.string.download_data_with, "Cronet (Chromium engine)"),
                 option -> {
                     mPlayerTweaksData.setPlayerDataSource(option.isSelected() ? PlayerTweaksData.PLAYER_DATA_SOURCE_CRONET :
                             PlayerTweaksData.PLAYER_DATA_SOURCE_DEFAULT);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -348,7 +348,7 @@ private void restoreData() {
         mIsSpeedButtonOldBehaviorEnabled = Helpers.parseBoolean(split, 23, false);
         mIsButtonLongClickEnabled = Helpers.parseBoolean(split, 24, true);
         mIsLongSpeedListEnabled = Helpers.parseBoolean(split, 25, false);
-        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_DEFAULT);
+        mPlayerDataSource = Helpers.parseInt(split, 26, PLAYER_DATA_SOURCE_CRONET);
     }
 
     private void persistData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -376,7 +376,7 @@ private void focusCurrentChapter() {
             String title = group.getVideos().get(index).title;
             getController().focusSuggestedItem(index);
             getController().setSeekPreviewTitle(title);
-            getController().setTitle(title);
+            //getController().setTitle(title);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -48,7 +48,7 @@ public class MainUIData extends DataChangeBase {
     public static final int TOP_BUTTON_SEARCH = 0b100;
     public static final int TOP_BUTTON_DEFAULT = Integer.MAX_VALUE & ~(TOP_BUTTON_CHANGE_LANGUAGE); // all except this items
     public static final int MENU_ITEM_DEFAULT = Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_ADD_TO_NEW_PLAYLIST | MENU_ITEM_SELECT_ACCOUNT |
-            MENU_ITEM_PLAY_VIDEO | MENU_ITEM_OPEN_DESCRIPTION | MENU_ITEM_PIN_TO_SIDEBAR | MENU_ITEM_SHARE_EMBED_LINK); // all except this items
+            MENU_ITEM_PLAY_VIDEO | MENU_ITEM_OPEN_DESCRIPTION | MENU_ITEM_SHARE_EMBED_LINK); // all except these items
     @SuppressLint("StaticFieldLeak")
     private static MainUIData sInstance;
     private final Context mContext;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/MaxControlsVideoPlayerGlue.java
Patch:
@@ -85,8 +85,9 @@ protected void onBindRowViewHolder(RowPresenter.ViewHolder vh, Object item) {
                 viewHolder.setTopEdgeFocusListener(MaxControlsVideoPlayerGlue.this);
                 viewHolder.setQualityInfo(mQualityInfo);
                 viewHolder.setDateVisibility(isControlsVisible());
+                // Don't uncomment
                 // Reset to defaults
-                viewHolder.setSeekPreviewTitle(null);
+                //viewHolder.setSeekPreviewTitle(null);
                 // Don't uncomment
                 //viewHolder.setSeekBarSegments(null);
             }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1558,6 +1558,7 @@ public void resetPlayerState() {
         showBackgroundColor(R.color.player_background);
         setChatReceiver(null);
         setSeekBarSegments(null);
+        setSeekPreviewTitle(null);
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -42,6 +42,7 @@ public abstract class BaseMenuPresenter extends BasePresenter<Void> {
     protected BaseMenuPresenter(Context context) {
         super(context);
         mServiceManager = MediaServiceManager.instance();
+        updateEnabledMenuItems();
     }
 
     protected abstract Video getVideo();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -65,8 +65,6 @@ public void showMenu(BrowseSection section) {
             return;
         }
 
-        updateEnabledMenuItems();
-
         disposeActions();
 
         mSection = section;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -113,8 +113,6 @@ public void showMenu(Video video) {
             return;
         }
 
-        updateEnabledMenuItems();
-
         RxHelper.disposeActions(mAddToPlaylistAction, mNotInterestedAction, mSubscribeAction);
 
         mVideo = video;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -312,7 +312,9 @@ public void update(VideoGroup group) {
     }
 
     private void loadSearchResult(String searchQuery) {
-        if (searchQuery != null && !searchQuery.equals(mSearchQuery)) {
+        // Don't show suggested videos (empty query).
+        // They are inaccurate and usually have problems with layout.
+        if (!TextUtils.isEmpty(searchQuery) && !searchQuery.equals(mSearchQuery)) {
             mSearchQuery = searchQuery;
             mSearchPresenter.onSearch(searchQuery);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -496,7 +496,7 @@ public void onRepeatModeClicked(int modeIndex) {
     public void onButtonClicked(int buttonId, int buttonState) {
         if (buttonId == R.id.action_rotate) {
             int oldRotation = mPlayerData.getVideoRotation();
-            int rotation = oldRotation == 0 ? 90 : oldRotation == 90 ? 270 : 0;
+            int rotation = oldRotation == 0 ? 90 : oldRotation == 90 ? 180 : oldRotation == 180 ? 270 : 0;
             getController().setVideoRotation(rotation);
             getController().setButtonState(buttonId, rotation == 0 ? PlaybackUI.BUTTON_OFF : PlaybackUI.BUTTON_ON);
             mPlayerData.setVideoRotation(rotation);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -488,7 +488,7 @@ private void appendSubscribeButton() {
             return;
         }
 
-        if (mVideo == null || mVideo.isPlaylistAsChannel() || (!mVideo.canSubscribe() && !mVideo.hasVideo())) {
+        if (mVideo == null || mVideo.isPlaylistAsChannel() || (!mVideo.isChannel() && !mVideo.hasVideo())) {
             return;
         }
 
@@ -655,7 +655,7 @@ private void toggleSubscribe() {
         // Until synced we won't really know weather we subscribed to a channel.
         // Exclusion: channel item (can't be synced)
         // Note, regular items (from subscribed section etc) aren't contain channel id
-        if (mVideo.isSynced || mVideo.canSubscribe()) {
+        if (mVideo.isSynced || mVideo.isChannel()) {
             toggleSubscribe(mVideo);
         } else {
             MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/ui/SeekBarSegment.java
Patch:
@@ -3,7 +3,7 @@
 import android.graphics.Color;
 
 public class SeekBarSegment {
-    public int startProgress;
-    public int endProgress;
+    public float startProgress;
+    public float endProgress;
     public int color = Color.GREEN;
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/PlayerKeyTranslator.java
Patch:
@@ -134,7 +134,7 @@ private void speedUp(boolean up) {
 
             for (int i = 0; i < speedSteps.length; i++) {
                 float step = speedSteps[i];
-                if (Helpers.floatEquals(currentSpeed, step) || Math.abs(currentSpeed - step) < 0.25f) {
+                if (Helpers.floatEquals(currentSpeed, step) || Math.abs(currentSpeed - step) < 0.13f) {
                     currentIndex = i;
                     break;
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -537,12 +537,12 @@ private void disposeTimeouts() {
     private void callMediaItemObservable(MediaItemObservable callable) {
         Video video = getController().getVideo();
 
-        if (video == null || video.mediaItem == null) {
+        if (video == null) {
             Log.e(TAG, "Seems that video isn't initialized yet. Cancelling...");
             return;
         }
 
-        Observable<Void> observable = callable.call(video.mediaItem);
+        Observable<Void> observable = callable.call(video.mediaItem != null ? video.mediaItem : video.toMediaItem());
 
         RxHelper.execute(observable);
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -15,6 +15,7 @@
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.widgets.chat.ChatItemMessage;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
+import com.stfalcon.chatkit.commons.models.IMessage;
 import com.stfalcon.chatkit.messages.MessagesList;
 import com.stfalcon.chatkit.messages.MessagesListAdapter;
 
@@ -91,7 +92,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
                 adapter.addToStart(message, false);
 
-                if (mFocusedMessage == null) {
+                if (mFocusedMessage == null && IMessage.checkMessage(message)) {
                     mFocusedMessage = message;
                     adapter.setFocusedMessage(message);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -261,7 +261,9 @@ private void continueGroup(VideoGroup group) {
                         continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup)),
                         error -> {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
-                            getView().showProgressBar(false);
+                            if (getView() != null) {
+                                getView().showProgressBar(false);
+                            }
                         },
                         () -> getView().showProgressBar(false)
                 );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -201,7 +201,9 @@ private void continueVideoGroup(VideoGroup group) {
                         continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup)),
                         error -> {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
-                            getView().showProgressBar(false);
+                            if (getView() != null) {
+                                getView().showProgressBar(false);
+                            }
                         },
                         () -> getView().showProgressBar(false)
                 );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -333,7 +333,7 @@ private void appendNotInterestedButton() {
             return;
         }
 
-        if (mVideo.belongsToHistory() || !mIsNotInterestedButtonEnabled) {
+        if (!mVideo.belongsToHome() || !mIsNotInterestedButtonEnabled) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -120,7 +120,7 @@ public void onTagLongClicked(Tag item) {
                 getContext().getString(R.string.clear_search_history),
                 () -> {
                     MediaServiceManager.instance().clearSearchHistory();
-                    startSearch(null);
+                    getView().clearSearchTags();
                 });
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/SearchView.java
Patch:
@@ -5,6 +5,7 @@
 public interface SearchView {
     void updateSearch(VideoGroup group);
     void clearSearch();
+    void clearSearchTags();
     void showProgressBar(boolean show);
     void startSearch(String searchText);
     String getSearchText();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SignInPresenter.java
Patch:
@@ -76,8 +76,8 @@ private void updateUserCode() {
                             mSplashPresenter.updateChannels();
 
                             // User history might be turned off (common issue).
-                            GeneralData.instance(getContext()).enableHistory(true);
-                            MediaServiceManager.instance().enableHistory(true);
+                            boolean enabled = GeneralData.instance(getContext()).isHistoryEnabled();
+                            MediaServiceManager.instance().enableHistory(enabled);
                         }
                  );
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -76,7 +76,7 @@ public class Utils {
      * Limit the maximum size of a Map by removing oldest entries when limit reached
      */
     public static <K, V> Map<K, V> createLRUMap(final int maxEntries) {
-        return new LinkedHashMap<K, V>(maxEntries*10/7, 0.7f, true) {
+        return new LinkedHashMap<K, V>(maxEntries + 1, 0.75f, true) {
             @Override
             protected boolean removeEldestEntry(Map.Entry<K, V> eldest) {
                 return size() > maxEntries;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/service/VideoStateService.java
Patch:
@@ -18,11 +18,9 @@ public class VideoStateService {
     // As one video might correspond to multiple Video objects.
     private final Map<String, State> mStates = Utils.createLRUMap(MAX_PERSISTENT_STATE_SIZE);
     private final AppPrefs mPrefs;
-    private final PlayerData mPlayerData;
 
     private VideoStateService(Context context) {
         mPrefs = AppPrefs.instance(context);
-        mPlayerData = PlayerData.instance(context);
 
         restoreState();
     }
@@ -40,7 +38,7 @@ public State getByVideoId(String videoId) {
     }
 
     public boolean isEmpty() {
-        return mStates.size() == 0;
+        return mStates.isEmpty();
     }
 
     public void save(State state) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/AppUpdatePresenter.java
Patch:
@@ -81,7 +81,7 @@ public void onUpdateError(Exception error) {
             }
         }
 
-        onDone();
+        onFinish();
     }
 
     private void showUpdateDialog(String versionName, List<String> changelog, String apkPath) {
@@ -95,6 +95,7 @@ private void showUpdateDialog(String versionName, List<String> changelog, String
             mUpdateChecker.enableUpdateCheck(optionItem.isSelected());
         }, mUpdateChecker.isUpdateCheckEnabled()));
 
+        mSettingsPresenter.setOnDone(getOnDone());
         mSettingsPresenter.showDialog(String.format("%s %s", getContext().getString(R.string.app_name), versionName), this::unhold);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/BridgePresenter.java
Patch:
@@ -41,10 +41,12 @@ public BridgePresenter(Context context) {
 
     public void start() {
         if (!checkLauncher()) {
+            onFinish();
             return;
         }
 
         if (!mGeneralData.isBridgeCheckEnabled()) {
+            onFinish();
             return;
         }
         
@@ -65,6 +67,7 @@ private void startDialog() {
         );
         settingsPresenter.appendSingleButton(updateCheckOption);
 
+        settingsPresenter.setOnDone(getOnDone());
         settingsPresenter.showDialog(getContext().getString(R.string.enable_voice_search));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -267,6 +267,7 @@ public void addOnPermissions(OnPermissions onPermissions) {
             mOnPermissions = new ArrayList<>();
         }
 
+        mOnPermissions.remove(onPermissions);
         mOnPermissions.add(onPermissions);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUIController.java
Patch:
@@ -14,6 +14,8 @@ public interface PlaybackUIController {
     int REPEAT_MODE_PAUSE = 3;
     int REPEAT_MODE_LIST = 4;
     int REPEAT_MODE_SHUFFLE = 5;
+    int BUTTON_OFF = 0;
+    int BUTTON_ON = 1;
     void updateSuggestions(VideoGroup group);
     void removeSuggestions(VideoGroup group);
     int getSuggestionsIndex(VideoGroup group);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -18,6 +18,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackEngineController;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackUIController;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.managers.SuggestionsLoaderManager.MetadataListener;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionCategory;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
@@ -293,6 +294,7 @@ public void onMetadata(MediaItemMetadata metadata) {
         }
         setPlaylistAddButtonStateCached();
         setSubtitleButtonState();
+        getController().setButtonState(R.id.action_rotate, mPlayerData.getVideoRotation() == 0 ? PlaybackUIController.BUTTON_OFF : PlaybackUIController.BUTTON_ON);
     }
 
     @Override
@@ -490,7 +492,7 @@ public void onButtonClicked(int buttonId, int buttonState) {
         if (buttonId == R.id.action_rotate) {
             int rotation = mPlayerData.getVideoRotation() == 0 ? 90 : 0;
             getController().setVideoRotation(rotation);
-            getController().setButtonState(buttonId, rotation == 0 ? 0 : 1);
+            getController().setButtonState(buttonId, rotation == 0 ? PlaybackUIController.BUTTON_OFF : PlaybackUIController.BUTTON_ON);
             mPlayerData.setVideoRotation(rotation);
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogFragment.java
Patch:
@@ -51,7 +51,9 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
     public void onDestroy() {
         super.onDestroy();
         Log.d(TAG, "onDestroy");
-        mPresenter.onViewDestroyed();
+        if (mPresenter.getView() == this) {
+            mPresenter.onViewDestroyed();
+        }
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1073,7 +1073,9 @@ public void onDestroy() {
         // E.g. after closing dialogs.
         releasePlayer();
 
-        mPlaybackPresenter.onViewDestroyed();
+        if (mPlaybackPresenter.getView() == this) {
+            mPlaybackPresenter.onViewDestroyed();
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -407,7 +407,7 @@ public boolean hasPlaylist() {
     //}
 
     public boolean hasNextPlaylist() {
-        return getPlaylistId() != null && hasNextItem() && getPlaylistId().equals(nextMediaItem.getPlaylistId());
+        return hasNextItem() && getPlaylistId() != null && getPlaylistId().equals(nextMediaItem.getPlaylistId());
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -407,7 +407,7 @@ public boolean hasPlaylist() {
     //}
 
     public boolean hasNextPlaylist() {
-        return hasPlaylist() && hasNextItem() && getPlaylistId().equals(nextMediaItem.getPlaylistId());
+        return getPlaylistId() != null && hasNextItem() && getPlaylistId().equals(nextMediaItem.getPlaylistId());
     }
 
     /**

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/mod/surface/SurfacePlaybackFragment.java
Patch:
@@ -120,8 +120,10 @@ private void scaleIfNeeded() {
         int width, height;
 
         if (Helpers.floatEquals(angle, 90) || Helpers.floatEquals(angle, 270)) {
+            float ratio = mVideoSurfaceRoot.getWidth() / ((float) mVideoSurfaceRoot.getHeight());
+
             width = mVideoSurfaceRoot.getHeight();
-            height = mVideoSurfaceRoot.getWidth() / 3;
+            height = (int) (mVideoSurfaceRoot.getHeight() / ratio);
         } else {
             width = mVideoSurfaceRoot.getWidth();
             height = mVideoSurfaceRoot.getHeight();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -61,5 +61,5 @@ public interface PlaybackEngineController {
     void setVideoZoomMode(int mode);
     int getVideoZoomMode();
     void setVideoAspectRatio(float mode);
-    void setVideoRotateAngle(int angle);
+    void setVideoRotation(int angle);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -82,7 +82,7 @@ public void onInitDone() {
         // Could be set once per activity creation (view layout stuff)
         getController().setVideoZoomMode(mPlayerData.getVideoZoomMode());
         getController().setVideoAspectRatio(mPlayerData.getVideoAspectRatio());
-        getController().setVideoRotateAngle(mPlayerData.getVideoRotateAngle());
+        getController().setVideoRotation(mPlayerData.getVideoRotation());
     }
 
     @Override
@@ -453,7 +453,7 @@ public void onVideoZoomClicked() {
                 getActivity(), mPlayerData, () -> getController().setVideoAspectRatio(mPlayerData.getVideoAspectRatio()));
 
         OptionCategory videoRotateCategory = AppDialogUtil.createVideoRotateCategory(
-                getActivity(), mPlayerData, () -> getController().setVideoRotateAngle(mPlayerData.getVideoRotateAngle()));
+                getActivity(), mPlayerData, () -> getController().setVideoRotation(mPlayerData.getVideoRotation()));
 
         AppDialogPresenter settingsPresenter = AppDialogPresenter.instance(getActivity());
         settingsPresenter.appendRadioCategory(videoAspectCategory.title, videoAspectCategory.options);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppDialogView.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.List;
 
 public interface AppDialogView {
-    void show(List<OptionCategory> categories, String title, boolean isExpandable);
+    void show(List<OptionCategory> categories, String title, boolean isExpandable, boolean isTransparent);
     void finish();
     void goBack();
     boolean isShown();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -421,9 +421,9 @@ public static OptionCategory createVideoRotateCategory(Context context, PlayerDa
         for (int angle : new int[] {0, 90, 180, 270}) {
             options.add(UiOptionItem.from(String.valueOf(angle),
                     optionItem -> {
-                        playerData.setVideoRotateAngle(angle);
+                        playerData.setVideoRotation(angle);
                         onRotate.run();
-                    }, playerData.getVideoRotateAngle() == angle));
+                    }, playerData.getVideoRotation() == angle));
         }
 
         String videoRotateTitle = context.getString(R.string.video_rotate);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1035,8 +1035,8 @@ public void setVideoAspectRatio(float ratio) {
     }
 
     @Override
-    public void setVideoRotateAngle(int angle) {
-        setRotateAngle(angle);
+    public void setVideoRotation(int angle) {
+        setRotation(angle);
     }
 
     // End Engine Events

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/mod/surface/SurfacePlaybackFragment.java
Patch:
@@ -31,7 +31,7 @@ public View onCreateView(
             LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         ViewGroup root = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);
         mVideoSurfaceWrapper = (PlayerTweaksData.instance(getContext()).isTextureViewEnabled() ||
-                PlayerData.instance(getContext()).getVideoRotateAngle() != 0) ?
+                PlayerData.instance(getContext()).getVideoRotation() != 0) ?
                 new TextureViewWrapper(getContext(), root) : new SurfaceViewWrapper(getContext(), root);
         mVideoSurfaceRoot = root.findViewById(com.liskovsoft.smartyoutubetv2.tv.R.id.surface_root);
         mVideoSurfaceRoot.addView(mVideoSurfaceWrapper.getSurfaceView(), 0);
@@ -86,7 +86,7 @@ public void setAspectRatio(float aspectRatio) {
         mVideoSurfaceRoot.setAspectRatio(calculateAspectRatio());
     }
 
-    public void setRotateAngle(int angle) {
+    public void setRotation(int angle) {
         if (Helpers.floatEquals(mVideoSurfaceRoot.getRotation(), angle)) {
             return;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/ViewUtil.java
Patch:
@@ -173,7 +173,7 @@ public static void enableTransparentDialog(Context context, View rootView) {
             return;
         }
 
-        View mainContainer = rootView.findViewById(R.id.settings_preference_fragment_container);
+        View mainContainer = rootView.findViewById(R.id.settings_preference_fragment_container); // null usually
         View mainFrame = rootView.findViewById(R.id.main_frame);
         View itemsContainer = rootView.findViewById(R.id.list);
         View title = rootView.findViewById(R.id.decor_title_container);
@@ -195,7 +195,7 @@ public static void enableTransparentDialog(Context context, View rootView) {
             );
         }
         if (title instanceof FrameLayout) {
-            title.setBackgroundColor(semiTransparent);
+            title.setBackgroundColor(transparent);
             title.setVisibility(View.GONE);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/ui/CommentsReceiver.java
Patch:
@@ -12,4 +12,5 @@ interface Callback {
     void onStart();
     void onCommentClicked(String nestedCommentsKey);
     String getLoadingMessage();
+    String getErrorMessage();
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -78,11 +78,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         messagesList.setAdapter(adapter);
         messagesList.requestFocus(); // hold focus even when there's no messages
         adapter.enableStackFromEnd(true);
-        adapter.setLoadingMessage(mCommentsReceiver.getLoadingMessage(), false);
+        adapter.setLoadingMessage(mCommentsReceiver.getLoadingMessage());
 
         mCommentsReceiver.setCallback(commentGroup -> {
             if (commentGroup == null || commentGroup.getComments() == null) {
-                adapter.removeLoadingMessageIfNeeded();
+                adapter.setLoadingMessage(mCommentsReceiver.getErrorMessage());
                 return;
             }
 

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListAdapter.java
Patch:
@@ -434,7 +434,7 @@ public void setLoadingMessage(String message, boolean alignBottom) {
         notifyItemInserted(0);
     }
 
-    private void removeLoadingMessageIfNeeded() {
+    public void removeLoadingMessageIfNeeded() {
         if (items.size() == 1 && items.get(0).item instanceof String) {
             // Reset to defaults (see MessagesList.setAdapter)
             //((LinearLayoutManager) layoutManager).setReverseLayout(true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/CommentsManager.java
Patch:
@@ -38,6 +38,8 @@ private void openCommentsDialog() {
             return;
         }
 
+        getController().showControls(false);
+
         String title = getController().getVideo().getTitle();
 
         CommentsReceiver commentsReceiver = new CommentsReceiverImpl(getActivity()) {
@@ -105,7 +107,7 @@ private void loadComments(CommentsReceiver receiver, String commentsKey) {
                         receiver::addCommentGroup,
                         error -> {
                             Log.e(TAG, error.getMessage());
-                            error.printStackTrace();
+                            receiver.addCommentGroup(null); // remove loading message
                         }
                 );
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUIController.java
Patch:
@@ -1,5 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller;
 
+import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.SeekBarSegment;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.ChatReceiver;
@@ -18,6 +19,7 @@ public interface PlaybackUIController {
     int getSuggestionsIndex(VideoGroup group);
     VideoGroup getSuggestionsByIndex(int index);
     void focusSuggestedItem(int index);
+    void focusSuggestedItem(Video video);
     void resetSuggestedPosition();
     boolean isSuggestionsEmpty();
     void clearSuggestions();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -445,7 +445,7 @@ private void applyRepeatMode(int repeatMode) {
             case PlaybackUIController.REPEAT_MODE_LIST:
                 // stop player (if not playing playlist)
                 Video video = getController().getVideo();
-                if ((video != null && video.hasPlaylist()) || mPlaylist.getNext() != null) {
+                if ((video != null && video.hasNextPlaylist()) || mPlaylist.getNext() != null) {
                     loadNext();
                     getController().showOverlay(true);
                 } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppDialogPresenter.java
Patch:
@@ -176,7 +176,7 @@ public boolean isDialogShown() {
         // Also check that current dialog almost closed (new view start is pending from a menu item)
         // Hmm. Maybe current dialog is pending. Check that view is null.
         // Also check that we aren't started the same view (nested dialog).
-        return ViewManager.isVisible(getView()) && (!ViewManager.instance(getContext()).isNewViewPending(AppDialogView.class) || getView() == null);
+        return ViewManager.isVisible(getView()) || ViewManager.instance(getContext()).isViewPending(AppDialogView.class);
     }
 
     public void appendRadioCategory(String categoryTitle, List<OptionItem> items) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -418,8 +418,8 @@ public boolean isNewViewPending() {
         return System.currentTimeMillis() - mPendingActivityMs < 1_000;
     }
 
-    public boolean isNewViewPending(Class<?> currentView) {
-        return isNewViewPending() && mViewMapping.get(currentView) != mPendingActivityClass;
+    public boolean isViewPending(Class<?> viewClass) {
+        return isNewViewPending() && mViewMapping.get(viewClass) == mPendingActivityClass;
     }
 
     public void refreshCurrentView() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogFragment.java
Patch:
@@ -20,14 +20,14 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter.OptionCategory;
 import com.liskovsoft.smartyoutubetv2.common.app.views.AppDialogView;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
-import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.base.LeanbackListPreferenceDialogFragmentBase;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.ChatPreference;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.ChatPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.CommentsPreference;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.CommentsPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.RadioListPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.StringListPreference;
 import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.other.StringListPreferenceDialogFragment;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackListPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
 import java.util.List;
@@ -151,7 +151,7 @@ public boolean onPreferenceDisplayDialog(@NonNull PreferenceFragment caller, @No
             return true;
         } else if (pref instanceof MultiSelectListPreference) {
             MultiSelectListPreference listPreference = (MultiSelectListPreference) pref;
-            LeanbackListPreferenceDialogFragmentBase f = LeanbackListPreferenceDialogFragmentBase.newInstanceMulti(listPreference.getKey());
+            LeanbackListPreferenceDialogFragment f = LeanbackListPreferenceDialogFragment.newInstanceMulti(listPreference.getKey());
             f.setTargetFragment(caller, 0);
             f.setPreference(pref);
             startPreferenceFragment(f);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/ChatPreferenceDialogFragment.java
Patch:
@@ -11,13 +11,13 @@
 import com.bumptech.glide.Glide;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.ChatReceiver;
 import com.liskovsoft.smartyoutubetv2.tv.R;
-import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.base.LeanbackPreferenceDialogFragmentBase;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.widgets.chat.ChatItemMessage;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 import com.stfalcon.chatkit.messages.MessagesList;
 import com.stfalcon.chatkit.messages.MessagesListAdapter;
 
-public class ChatPreferenceDialogFragment extends LeanbackPreferenceDialogFragmentBase {
+public class ChatPreferenceDialogFragment extends LeanbackPreferenceDialogFragment {
     private static final String SENDER_ID = ChatPreferenceDialogFragment.class.getSimpleName();
     private boolean mIsTransparent;
     private ChatReceiver mChatReceiver;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -12,15 +12,15 @@
 import com.liskovsoft.mediaserviceinterfaces.data.CommentItem;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.CommentsReceiver;
 import com.liskovsoft.smartyoutubetv2.tv.R;
-import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.base.LeanbackPreferenceDialogFragmentBase;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.widgets.chat.ChatItemMessage;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 import com.stfalcon.chatkit.messages.MessagesList;
 import com.stfalcon.chatkit.messages.MessagesListAdapter;
 
 import java.util.List;
 
-public class CommentsPreferenceDialogFragment extends LeanbackPreferenceDialogFragmentBase {
+public class CommentsPreferenceDialogFragment extends LeanbackPreferenceDialogFragment {
     private static final String SENDER_ID = CommentsPreferenceDialogFragment.class.getSimpleName();
     private boolean mIsTransparent;
     private CommentsReceiver mCommentsReceiver;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/RadioListPreferenceDialogFragment.java
Patch:
@@ -9,10 +9,10 @@
 import androidx.preference.ListPreference;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.RecyclerView.Adapter;
-import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.base.LeanbackListPreferenceDialogFragmentBase;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackListPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
-public class RadioListPreferenceDialogFragment extends LeanbackListPreferenceDialogFragmentBase {
+public class RadioListPreferenceDialogFragment extends LeanbackListPreferenceDialogFragment {
     private boolean mIsTransparent;
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/StringListPreferenceDialogFragment.java
Patch:
@@ -8,12 +8,12 @@
 import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView.Adapter;
 import com.liskovsoft.smartyoutubetv2.tv.R;
-import com.liskovsoft.smartyoutubetv2.tv.ui.dialogs.base.LeanbackListPreferenceDialogFragmentBase;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.preference.LeanbackListPreferenceDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
 import java.util.Set;
 
-public class StringListPreferenceDialogFragment extends LeanbackListPreferenceDialogFragmentBase {
+public class StringListPreferenceDialogFragment extends LeanbackListPreferenceDialogFragment {
     private boolean mIsTransparent;
 
     public static StringListPreferenceDialogFragment newInstanceStringList(String key) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/ContentBlockData.java
Patch:
@@ -60,7 +60,7 @@ private void initLocalizedMapping() {
         mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_INTERACTION, R.string.content_block_interaction);
         mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC, R.string.content_block_music_off_topic);
         mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, R.string.content_block_preview_recap);
-        mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, R.string.content_block_highlight);
+        mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_POI_HIGHLIGHT, R.string.content_block_highlight);
         mSegmentLocalizedMapping.put(SponsorSegment.CATEGORY_FILLER, R.string.content_block_filler);
     }
 
@@ -73,7 +73,7 @@ private void initColorMapping() {
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_INTERACTION, R.color.magenta);
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC, R.color.orange_peel);
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, R.color.light_blue);
-        mSegmentColorMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, R.color.white);
+        mSegmentColorMapping.put(SponsorSegment.CATEGORY_POI_HIGHLIGHT, R.color.white);
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_FILLER, R.color.electric_violet);
     }
 
@@ -86,7 +86,7 @@ private void initAllCategories() {
         mAllCategories.add(SponsorSegment.CATEGORY_SELF_PROMO);
         mAllCategories.add(SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC);
         mAllCategories.add(SponsorSegment.CATEGORY_PREVIEW_RECAP);
-        mAllCategories.add(SponsorSegment.CATEGORY_HIGHLIGHT);
+        mAllCategories.add(SponsorSegment.CATEGORY_POI_HIGHLIGHT);
         mAllCategories.add(SponsorSegment.CATEGORY_FILLER);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -18,7 +18,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackEngineController;
-import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackUIController;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.managers.SuggestionsLoaderManager.MetadataListener;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionCategory;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -85,7 +85,7 @@ private static String buildAudioPropertyString(Format format) {
     }
 
     private static String buildLanguageString(Format format) {
-        return TextUtils.isEmpty(format.language) || "und".equals(format.language) ? "" : SubtitleTrack.trimAuto(format.language);
+        return TextUtils.isEmpty(format.language) || "und".equals(format.language) ? "" : SubtitleTrack.trimMarker(format.language);
     }
 
     private static String buildBitrateString(Format format) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -48,6 +48,7 @@ public SimpleExoPlayer createPlayer(Context context, DefaultRenderersFactory ren
 
         enableAudioFocus(player);
 
+        // Lead to numbered errors
         //player.setRepeatMode(Player.REPEAT_MODE_ONE);
 
         return player;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUIController.java
Patch:
@@ -38,7 +38,7 @@ public interface PlaybackUIController {
     void setSubtitleButtonState(boolean selected);
     void setSpeedButtonState(boolean selected);
     void setContentBlockButtonState(boolean selected);
-    void setChatButtonState(int buttonState);
+    void setChatButtonState(boolean selected);
     void setChannelIcon(String iconUrl);
     void setSeekPreviewTitle(String title);
     void setNextTitle(String title);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/CommentsManager.java
Patch:
@@ -34,7 +34,7 @@ public void onMetadata(MediaItemMetadata metadata) {
         mCommentsKey = metadata != null && metadata.getCommentsKey() != null ? metadata.getCommentsKey() : null;
 
         if (mCommentsKey != null && mLiveChatKey == null) {
-            getController().setChatButtonState(PlaybackUIController.BUTTON_STATE_OFF);
+            getController().setChatButtonState(false);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/LiveChatManager.java
Patch:
@@ -48,7 +48,7 @@ public void onMetadata(MediaItemMetadata metadata) {
         mLiveChatKey = metadata != null && metadata.getLiveChatKey() != null ? metadata.getLiveChatKey() : null;
 
         if (mLiveChatKey != null) {
-            getController().setChatButtonState(mPlayerData.isLiveChatEnabled() ? PlaybackUIController.BUTTON_STATE_ON : PlaybackUIController.BUTTON_STATE_OFF);
+            getController().setChatButtonState(mPlayerData.isLiveChatEnabled());
         }
 
         if (mPlayerData.isLiveChatEnabled()) {
@@ -167,7 +167,7 @@ private void enableLiveChat(boolean enabled) {
         mPlayerData.enableLiveChat(enabled);
 
         if (mLiveChatKey != null) {
-            getController().setChatButtonState(enabled ? PlaybackUIController.BUTTON_STATE_ON : PlaybackUIController.BUTTON_STATE_OFF);
+            getController().setChatButtonState(enabled);
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -268,7 +268,7 @@ private void resetButtonStates() {
         getController().setPlaylistAddButtonState(false);
         getController().setSubtitleButtonState(false);
         getController().setSpeedButtonState(false);
-        getController().setChatButtonState(PlaybackUIController.BUTTON_STATE_DISABLED);
+        getController().setChatButtonState(false);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1306,9 +1306,9 @@ public void setContentBlockButtonState(boolean selected) {
     }
 
     @Override
-    public void setChatButtonState(int buttonState) {
+    public void setChatButtonState(boolean selected) {
         if (mPlayerGlue != null) {
-            mPlayerGlue.setChatButtonState(buttonState);
+            mPlayerGlue.setChatButtonState(selected);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/ui/CommentsReceiver.java
Patch:
@@ -9,6 +9,7 @@ interface Callback {
     void addCommentGroup(CommentGroup commentGroup);
     void setCallback(Callback callback);
     void onLoadMore(String nextCommentsKey);
+    void onStart();
     void onCommentClicked(String nestedCommentsKey);
     String getLoadingMessage();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/ui/CommentsReceiverImpl.java
Patch:
@@ -4,7 +4,7 @@
 import com.liskovsoft.mediaserviceinterfaces.data.CommentGroup;
 import com.liskovsoft.smartyoutubetv2.common.R;
 
-public class CommentsReceiverImpl implements CommentsReceiver {
+public abstract class CommentsReceiverImpl implements CommentsReceiver {
     private final Context mContext;
     private Callback mCallback;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -88,6 +88,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             mNextCommentsKey = commentGroup.getNextCommentsKey();
         });
 
+        mCommentsReceiver.onStart();
+
         if (mIsTransparent) {
             ViewUtil.enableTransparentDialog(getActivity(), view);
         }

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListAdapter.java
Patch:
@@ -46,7 +46,7 @@
  */
 @SuppressWarnings("WeakerAccess")
 public class MessagesListAdapter<MESSAGE extends IMessage>
-        extends RecyclerView.Adapter<ViewHolder>
+        extends RecyclerView.Adapter<ViewHolder<MESSAGE>>
         implements RecyclerScrollMoreListener.OnLoadMoreListener {
 
     protected static boolean isSelectionModeEnabled;

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessageHolders.java
Patch:
@@ -796,6 +796,7 @@ public void applyStyle(MessagesListStyle style) {
                     wrapper.setFocusableInTouchMode(true);
                     wrapper.setClickable(true);
                     wrapper.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
+                    wrapper.requestFocus();
                 }
             }
         }
@@ -866,6 +867,7 @@ public final void applyStyle(MessagesListStyle style) {
                     wrapper.setFocusableInTouchMode(true);
                     wrapper.setClickable(true);
                     wrapper.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
+                    wrapper.requestFocus();
                 }
             }
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/other/CommentsPreferenceDialogFragment.java
Patch:
@@ -67,7 +67,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
                     .circleCrop() // resize image
                     .into(imageView));
         adapter.setLoadMoreListener((page, totalItemsCount) -> mCommentsReceiver.onLoadMore(mNextCommentsKey));
-        adapter.setOnMessageLongClickListener(message -> mCommentsReceiver.onCommentClicked(message.getNestedCommentsKey()));
+        adapter.setOnMessageClickListener(message -> mCommentsReceiver.onCommentClicked(message.getNestedCommentsKey()));
         messagesList.setAdapter(adapter);
 
         if (mCommentsReceiver != null) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/chat/ChatItemMessage.java
Patch:
@@ -21,7 +21,7 @@ public static ChatItemMessage from(ChatItem chatItem) {
         ChatItemMessage message = new ChatItemMessage();
         message.mId = chatItem.getId();
         if (chatItem.getMessage() != null && !chatItem.getMessage().trim().isEmpty()) {
-            message.mText = String.format("%s: %s", chatItem.getAuthorName(), chatItem.getMessage());
+            message.mText = TextUtils.concat(Utils.bold(chatItem.getAuthorName()), ": ", chatItem.getMessage());
         }
         message.mAuthor = ChatItemAuthor.from(chatItem);
         message.mCreatedAt = new Date();

File: chatkit/src/main/java/com/stfalcon/chatkit/commons/models/IMessage.java
Patch:
@@ -35,7 +35,7 @@ public interface IMessage {
      *
      * @return the message text
      */
-    String getText();
+    CharSequence getText();
 
     /**
      * Returns message author. See the {@link IUser} for more details

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoActionPresenter.java
Patch:
@@ -30,7 +30,6 @@ public void apply(Video item) {
 
             ChannelUploadsPresenter.instance(getContext()).openChannel(item);
         } else if (item.hasVideo()) {
-            //BasePresenter.enableSync();
             PlaybackPresenter.instance(getContext()).openVideo(item);
         } else if (item.hasChannel()) {
             Utils.chooseChannelPresenter(getContext(), item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -448,6 +448,7 @@ private void applyRepeatMode(int repeatMode) {
                     getController().showOverlay(true);
                 } else {
                     getController().showSuggestions(true);
+                    getController().setPlayWhenReady(false);
                     getController().setPositionMs(getController().getDurationMs());
                 }
                 break;
@@ -459,6 +460,7 @@ private void applyRepeatMode(int repeatMode) {
                     getController().showOverlay(true);
                 } else {
                     getController().showSuggestions(true);
+                    getController().setPlayWhenReady(false);
                     getController().setPositionMs(getController().getDurationMs());
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -29,7 +29,6 @@ public class VideoStateManager extends PlayerEventListenerHelper implements Meta
     private static final String TAG = VideoStateManager.class.getSimpleName();
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long LIVE_THRESHOLD_MS = 90_000;
-    private static final long MAX_REMAINING_TIME_MS = 10_000;
     private boolean mIsPlayEnabled;
     private Video mVideo = new Video();
     private FormatItem mTempVideoFormat;
@@ -320,7 +319,7 @@ private void resetPositionIfNeeded(Video item) {
 
         // Reset position of music videos
         boolean isShort = state != null && state.durationMs < MUSIC_VIDEO_MAX_DURATION_MS && !mPlayerTweaksData.isRememberPositionOfShortVideosEnabled();
-        boolean isVideoEnded = state != null && state.durationMs - state.positionMs < MAX_REMAINING_TIME_MS;
+        boolean isVideoEnded = state != null && state.durationMs - state.positionMs < 3_000;
 
         if (isShort || isVideoEnded || item.isLive || !mGeneralData.isHistoryEnabled()) {
             resetPosition(item);
@@ -507,7 +506,7 @@ private void restorePosition() {
         }
 
         // Do I need to check that item isn't live? (state != null && !item.isLive)
-        if (state != null) {
+        if (state != null && state.positionMs != state.durationMs) {
             setPositionMs(state.positionMs);
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -26,9 +26,10 @@
 import io.reactivex.disposables.Disposable;
 
 public class VideoStateManager extends PlayerEventListenerHelper implements MetadataListener {
+    private static final String TAG = VideoStateManager.class.getSimpleName();
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
     private static final long LIVE_THRESHOLD_MS = 90_000;
-    private static final String TAG = VideoStateManager.class.getSimpleName();
+    private static final long MAX_REMAINING_TIME_MS = 10_000;
     private boolean mIsPlayEnabled;
     private Video mVideo = new Video();
     private FormatItem mTempVideoFormat;
@@ -319,7 +320,7 @@ private void resetPositionIfNeeded(Video item) {
 
         // Reset position of music videos
         boolean isShort = state != null && state.durationMs < MUSIC_VIDEO_MAX_DURATION_MS && !mPlayerTweaksData.isRememberPositionOfShortVideosEnabled();
-        boolean isVideoEnded = state != null && state.durationMs - state.positionMs < 3_000;
+        boolean isVideoEnded = state != null && state.durationMs - state.positionMs < MAX_REMAINING_TIME_MS;
 
         if (isShort || isVideoEnded || item.isLive || !mGeneralData.isHistoryEnabled()) {
             resetPosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -366,7 +366,7 @@ public static OptionCategory createAutoFrameRateModesCategory(Context context) {
         StringBuilder result = new StringBuilder();
 
         for (Mode mode : supportedModes) {
-            result.append(UiOptionItem.from(String.format("%sx%s@%s\n", mode.getPhysicalWidth(), mode.getPhysicalHeight(), mode.getRefreshRate())));
+            result.append(String.format("%sx%s@%s\n", mode.getPhysicalWidth(), mode.getPhysicalHeight(), mode.getRefreshRate()));
         }
 
         return OptionCategory.from(AUTO_FRAME_RATE_MODES_ID, OptionCategory.TYPE_LONG_TEXT, title, UiOptionItem.from(result.toString()));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/internal/DisplayHolder.java
Patch:
@@ -158,7 +158,7 @@ public Mode[] newArray(int size) {
         @Override
         public int compareTo(Mode o) {
             if (getPhysicalWidth() == o.getPhysicalWidth()) {
-                return (int) Math.ceil(o.getRefreshRate() - getRefreshRate() / 1_000);
+                return (int) ((o.getRefreshRate() * 1_000) - (getRefreshRate() * 1_000));
             }
 
             return o.getPhysicalWidth() - getPhysicalWidth();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/BridgePresenter.java
Patch:
@@ -73,7 +73,7 @@ private void runBridgeInstaller() {
         PackageInfo info = getPackageSignature(getPackageName());
 
         if (info != null) { // bridge or original tube installed
-            if (Helpers.isUserApp(info) && !Helpers.equalsAny(info.signatures[0].hashCode(), (Object[]) getPackageSignatureHash())) {
+            if (Helpers.isUserApp(info) && !Helpers.equalsAny(info.signatures[0].hashCode(), getPackageSignatureHash())) {
                 // Original tube installed
                 mRemoveOldApkFirst = true;
                 // Download apk first and start dialog when download complete

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -183,7 +183,7 @@ public void openChannel(String channelId) {
 
         if (getView() != null) {
             getView().clear();
-            updateRows(mChannelId);
+            updateRows(channelId);
             // Fix double results. Prevent from doing the same in onViewInitialized()
             mChannelId = null;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -40,6 +40,8 @@ public static PlaybackPresenter instance(Context context) {
 
     @Override
     public void onViewInitialized() {
+        super.onViewInitialized();
+
         mMainPlayerEventBridge.setController(getView().getController());
         getView().setEventListener(mMainPlayerEventBridge);
     }
@@ -68,7 +70,6 @@ public void openVideo(Video item) {
 
         mMainPlayerEventBridge.openVideo(item);
 
-        // NOTE: onPause/onResume called even if player is running
         mViewManager.startView(PlaybackView.class);
 
         if (getView() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoActionPresenter.java
Patch:
@@ -30,8 +30,7 @@ public void apply(Video item) {
 
             ChannelUploadsPresenter.instance(getContext()).openChannel(item);
         } else if (item.hasVideo()) {
-            BasePresenter.enableSync();
-            // NOTE: onPause/onResume called even if player is running
+            //BasePresenter.enableSync();
             PlaybackPresenter.instance(getContext()).openVideo(item);
         } else if (item.hasChannel()) {
             Utils.chooseChannelPresenter(getContext(), item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -68,6 +68,7 @@ public void openVideo(Video item) {
 
         mMainPlayerEventBridge.openVideo(item);
 
+        // NOTE: onPause/onResume called even if player is running
         mViewManager.startView(PlaybackView.class);
 
         if (getView() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -50,7 +50,7 @@ public class ExoPlayerController implements Player.EventListener, PlayerControll
     public ExoPlayerController(Context context) {
         mContext = context.getApplicationContext();
         mMediaSourceFactory = ExoMediaSourceFactory.instance(context);
-        mTrackSelectorManager = new TrackSelectorManager(LocaleUtility.getCurrentLocale(context).getLanguage());
+        mTrackSelectorManager = new TrackSelectorManager(LocaleUtility.getCurrentLanguage(context));
         mTrackFormatter = new TrackInfoFormatter2();
         mTrackFormatter.enableBitrate(PlayerTweaksData.instance(context).isQualityInfoBitrateEnabled());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -501,9 +501,7 @@ public void enableLiveChat(boolean enable) {
     }
 
     public FormatItem getDefaultAudioFormat() {
-        String language = LocaleUtility.getCurrentLanguage(mPrefs.getContext());
-
-        return ExoFormatItem.fromAudioSpecs(String.format("%s,%s", "mp4a", language));
+        return ExoFormatItem.fromAudioSpecs(String.format("%s,null", "mp4a"));
     }
 
     public FormatItem getDefaultVideoFormat() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -390,7 +390,7 @@ private List<SeekBarSegment> toSeekBarSegments(List<ChapterItem> chapters) {
         }
 
         List<SeekBarSegment> result = new ArrayList<>();
-        long markLengthMs = getController().getDurationMs() / 300;
+        long markLengthMs = getController().getDurationMs() / 10000;
 
         for (ChapterItem chapter : chapters) {
             if (chapter.getStartTimeMs() == 0) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -31,7 +31,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
     static {
         // fix youtube bandwidth throttling (best - false)???
         // false is better for streams (less buffering)
-        System.setProperty("http.keepAlive", "false");
+        //System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
         // Better to remove this fix at all. Users complain about infinite loading.
         //System.setProperty("java.net.preferIPv6Addresses", "true");

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/MaxControlsVideoPlayerGlue.java
Patch:
@@ -87,7 +87,8 @@ protected void onBindRowViewHolder(RowPresenter.ViewHolder vh, Object item) {
                 viewHolder.setDateVisibility(isControlsVisible());
                 // Reset to defaults
                 viewHolder.setSeekPreviewTitle(null);
-                viewHolder.setSeekBarSegments(null);
+                // Don't uncomment
+                //viewHolder.setSeekBarSegments(null);
             }
             @Override
             protected void onUnbindRowViewHolder(RowPresenter.ViewHolder vh) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1535,8 +1535,7 @@ public void resetPlayerState() {
         // Hide last frame of the previous video
         showBackgroundColor(R.color.player_background);
         setChatReceiver(null);
-        //setSeekBarSegments(null);
-        //setSeekPreviewTitle(null);
+        setSeekBarSegments(null);
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -146,7 +146,9 @@ private void updateSponsorSegmentsAndWatch(Video item) {
                             mSponsorSegments = segments;
                             startSponsorWatcher();
                         },
-                        error -> Log.d(TAG, "It's ok. Nothing to block in this video. Error msg: %s", error.getMessage())
+                        error -> {
+                            Log.d(TAG, "It's ok. Nothing to block in this video. Error msg: %s", error.getMessage());
+                        }
                 );
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/ErrorDefaultDashChunkSource.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.List;
 
 public class ErrorDefaultDashChunkSource extends DefaultDashChunkSource {
+    public static final int MAX_SEGMENTS_PER_LOAD = 10;
     private final TrackErrorFixer mTrackErrorFixer;
 
     public static final class Factory implements DashChunkSource.Factory {
@@ -24,7 +25,7 @@ public static final class Factory implements DashChunkSource.Factory {
         private final TrackErrorFixer trackErrorFixer;
 
         public Factory(DataSource.Factory dataSourceFactory, TrackErrorFixer trackErrorFixer) {
-            this(dataSourceFactory, trackErrorFixer, 1);
+            this(dataSourceFactory, trackErrorFixer, MAX_SEGMENTS_PER_LOAD);
         }
 
         public Factory(DataSource.Factory dataSourceFactory, TrackErrorFixer trackErrorFixer, int maxSegmentsPerLoad) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -454,7 +454,6 @@ private void enableChildMode(boolean enable) {
             mMainUIData.enableTopButton(topButtons);
             tweaksData.enablePlayerButton(playerButtons);
             mMainUIData.enableMenuItem(menuItems);
-            tweaksData.disableSuggestions(true);
             mPlayerData.setRepeatMode(PlaybackUIController.REPEAT_MODE_LIST);
             BrowsePresenter.instance(getContext()).enableSection(MediaGroup.TYPE_HISTORY, true);
             BrowsePresenter.instance(getContext()).enableSection(MediaGroup.TYPE_USER_PLAYLISTS, true);

File: exoplayer-amzn-2.10.6/library/core/src/main/java/com/google/android/exoplayer2/offline/SegmentDownloader.java
Patch:
@@ -133,7 +133,8 @@ public final void download(@Nullable ProgressListener progressListener)
 
       // Sort, merge and reassign segment cache key
       Collections.sort(segments);
-      mergeSegments(segments, cacheKeyFactory);
+      // TODO Merge segment can cause in playback with the current approach
+      //mergeSegments(segments, cacheKeyFactory);
       reassignCacheKey(segments);
 
       // Scan the segments, removing any that are fully downloaded.

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -150,6 +150,7 @@ private void setupListenersAndPermissions() {
 
         switch (SearchData.instance(getContext()).getSpeechRecognizerType()) {
             case SearchData.SPEECH_RECOGNIZER_SYSTEM:
+                // Don't uncomment. Sometimes system recognizer works on lower api
                 // Do nothing unless we have old api.
                 // Internal recognizer needs API >= 23. See: androidx.leanback.widget.SearchBar.startRecognition()
                 //if (Build.VERSION.SDK_INT < 23) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -178,7 +178,9 @@ private DisplayMetrics getDisplayMetrics() {
             DisplayMetrics displayMetrics = new DisplayMetrics();
             getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
             float uiScale = MainUIData.instance(this).getUIScale();
-            float widthRatio = DEFAULT_WIDTH / displayMetrics.widthPixels;
+            // Take into the account screen orientation (e.g. when running on phone)
+            int widthPixels = Math.max(displayMetrics.widthPixels, displayMetrics.heightPixels);
+            float widthRatio = DEFAULT_WIDTH / widthPixels;
             float density = DEFAULT_DENSITY / widthRatio * uiScale;
             displayMetrics.density = density;
             displayMetrics.scaledDensity = density;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -263,6 +263,7 @@ public void onVideoSpeedClicked(boolean enabled) {
             float lastSpeed = mPlayerData.getLastSpeed();
             if (state != null && mPlayerData.isRememberSpeedEachEnabled()) {
                 lastSpeed = !Helpers.floatEquals(1.0f, state.speed) ? state.speed : lastSpeed;
+                mPlayerData.setLastSpeed(lastSpeed);
                 mStateService.save(new State(state.videoId, state.positionMs, state.durationMs, enabled ? 1.0f : lastSpeed));
             }
             mPlayerData.setSpeed(enabled ? 1.0f : lastSpeed);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -443,7 +443,7 @@ public float getSpeed() {
         return mSpeed;
     }
 
-    private void setLastSpeed(float speed) {
+    public void setLastSpeed(float speed) {
         if (speed > 0 && !Helpers.floatEquals(speed, 1.0f)) {
             mLastSpeed = speed;
         } else if (mSpeed > 0 && !Helpers.floatEquals(mSpeed, 1.0f)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -262,8 +262,8 @@ public void onVideoSpeedClicked(boolean enabled) {
             State state = mStateService.getByVideoId(getVideo() != null ? getVideo().videoId : null);
             float lastSpeed = mPlayerData.getLastSpeed();
             if (state != null && mPlayerData.isRememberSpeedEachEnabled()) {
-                lastSpeed = state.lastSpeed;
-                mStateService.save(new State(state.videoId, state.positionMs, state.durationMs, enabled ? 1.0f : lastSpeed, lastSpeed));
+                lastSpeed = !Helpers.floatEquals(1.0f, state.speed) ? state.speed : lastSpeed;
+                mStateService.save(new State(state.videoId, state.positionMs, state.durationMs, enabled ? 1.0f : lastSpeed));
             }
             mPlayerData.setSpeed(enabled ? 1.0f : lastSpeed);
             getController().setSpeed(enabled ? 1.0f : lastSpeed);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -414,7 +414,7 @@ public static void appendSeekIntervalDialogItems(Context context, AppDialogPrese
         dialogPresenter.appendRadioCategory(context.getString(R.string.seek_interval), options);
     }
 
-    public static void appendSpeedDialogItems(Context context, AppDialogPresenter settingsPresenter, PlayerData playerData, PlaybackController playbackController) {
+    public static void appendSpeedDialogItems(Context context, AppDialogPresenter settingsPresenter, PlaybackController playbackController, PlayerData playerData) {
         List<OptionItem> items = new ArrayList<>();
         float[] speedValues = new float[]{0.25f, 0.5f, 0.75f, 0.80f, 0.85f, 0.90f, 0.95f, 1.0f, 1.05f, 1.1f, 1.15f, 1.2f, 1.25f, 1.3f, 1.4f, 1.5f, 1.75f, 2f, 2.25f, 2.5f, 2.75f, 3.0f};
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -260,7 +260,8 @@ public void onVideoSpeedClicked(boolean enabled) {
             onVideoSpeedLongClicked(enabled);
         } else {
             State state = mStateService.getByVideoId(getVideo() != null ? getVideo().videoId : null);
-            float lastSpeed = state != null && mPlayerData.isRememberSpeedEachEnabled() ? state.speed : mPlayerData.getLastSpeed();
+            float lastSpeed = mPlayerData.isRememberSpeedEachEnabled() && state != null && !Helpers.floatEquals(state.speed, 1.0f) ?
+                    state.speed : mPlayerData.getLastSpeed();
             mPlayerData.setSpeed(enabled ? 1.0f : lastSpeed);
             if (state != null && mPlayerData.isRememberSpeedEachEnabled()) {
                 mStateService.save(new State(state.videoId, state.positionMs, state.durationMs, enabled ? 1.0f : lastSpeed));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -262,6 +262,9 @@ public void onVideoSpeedClicked(boolean enabled) {
             State state = mStateService.getByVideoId(getVideo() != null ? getVideo().videoId : null);
             float lastSpeed = state != null && mPlayerData.isRememberSpeedEachEnabled() ? state.speed : mPlayerData.getLastSpeed();
             mPlayerData.setSpeed(enabled ? 1.0f : lastSpeed);
+            if (state != null && mPlayerData.isRememberSpeedEachEnabled()) {
+                mStateService.save(new State(state.videoId, state.positionMs, state.durationMs, enabled ? 1.0f : lastSpeed));
+            }
             getController().setSpeed(enabled ? 1.0f : lastSpeed);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackInfoFormatter2.java
Patch:
@@ -32,8 +32,8 @@ public void setVideoFormat(Format format) {
         String codec = TrackSelectorUtil.extractCodec(format);
         mCodecStr = codec != null ? codec.toUpperCase() : "";
 
-        String bitrate = TrackSelectorUtil.extractBitrate(format);
-        mBitrateStr = bitrate.toUpperCase();
+        String bitrate = TrackSelectorUtil.extractBitrate(format, 0);
+        mBitrateStr = bitrate.isEmpty() ? "" : bitrate.toUpperCase() + "Mb";
 
         mHdrStr = TrackSelectorUtil.buildHDRString(format);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -119,8 +119,8 @@ public static String extractCodec(Format format) {
         return codecNameShort(format.codecs);
     }
 
-    public static String extractBitrate(Format format) {
-        double bitrateMB = Helpers.round(format.bitrate / 1_000_000f, 2);
+    public static String extractBitrate(Format format, int places) {
+        double bitrateMB = Helpers.round(format.bitrate / 1_000_000f, places);
         return format.bitrate == Format.NO_VALUE || bitrateMB == 0 ? "" : Helpers.formatFloat(bitrateMB);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackInfoFormatter2.java
Patch:
@@ -51,7 +51,7 @@ public void setSpeed(float speed) {
     }
 
     public String getQualityLabel() {
-        return combine(mResolutionStr, mFpsStr, mCodecStr, mHdrStr, mChannelsStr, mSpeedStr);
+        return combine(mResolutionStr, mFpsStr, mCodecStr, mBitrateStr, mHdrStr, mChannelsStr, mSpeedStr);
     }
 
     private static String combine(String... items) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -152,9 +152,9 @@ private void setupListenersAndPermissions() {
             case SearchData.SPEECH_RECOGNIZER_SYSTEM:
                 // Do nothing unless we have old api.
                 // Internal recognizer needs API >= 23. See: androidx.leanback.widget.SearchBar.startRecognition()
-                if (Build.VERSION.SDK_INT < 23) {
-                    setSpeechRecognitionCallback(mDefaultCallback);
-                }
+                //if (Build.VERSION.SDK_INT < 23) {
+                //    setSpeechRecognitionCallback(mDefaultCallback);
+                //}
                 break;
             case SearchData.SPEECH_RECOGNIZER_EXTERNAL_1:
                 setSpeechRecognitionCallback(mDefaultCallback);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -133,7 +133,9 @@ public void onChannelClicked() {
     public void onSubtitleClicked(boolean enabled) {
         if (FormatItem.SUBTITLE_DEFAULT.equals(mPlayerData.getLastSubtitleFormat())) { // first run
             onSubtitleLongClicked(enabled);
-        } else if (getController().getSubtitleFormats().size() > 1 && getController().getSubtitleFormats().contains(mPlayerData.getLastSubtitleFormat())) {
+        } else if (getController().getSubtitleFormats() != null &&
+                   getController().getSubtitleFormats().size() > 1 &&
+                   getController().getSubtitleFormats().contains(mPlayerData.getLastSubtitleFormat())) {
             getController().setFormat(enabled ? FormatItem.SUBTITLE_DEFAULT : mPlayerData.getLastSubtitleFormat());
             getController().setSubtitleButtonState(!FormatItem.SUBTITLE_DEFAULT.equals(mPlayerData.getLastSubtitleFormat()) && !enabled);
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -906,7 +906,7 @@ private void setSearchQuery(String query) {
     private void stopSpeechService() {
         try {
             Speech.getInstance().stopListening();
-        } catch (IllegalArgumentException e) { // Speech service not registered
+        } catch (IllegalArgumentException | NoSuchMethodError e) { // Speech service not registered/Android 4 (no such method)
             e.printStackTrace();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -443,7 +443,7 @@ private void applyRepeatMode(int repeatMode) {
                 } else {
                     getController().showSuggestions(true);
                     getController().setPlayWhenReady(false);
-                    //getController().setPositionMs(0);
+                    getController().setPositionMs(getController().getDurationMs());
                     Utils.showRepeatInfo(getActivity(), repeatMode);
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -443,7 +443,7 @@ private void applyRepeatMode(int repeatMode) {
                 } else {
                     getController().showSuggestions(true);
                     getController().setPlayWhenReady(false);
-                    getController().setPositionMs(0);
+                    //getController().setPositionMs(0);
                     Utils.showRepeatInfo(getActivity(), repeatMode);
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -105,6 +105,9 @@ public void onSuggestionItemClicked(Video item) {
 
     @Override
     public void onEngineInitialized() {
+        // Reset auto-save history timer
+        mTickleLeft = 0;
+
         // Restore before video loaded.
         // This way we override auto track selection mechanism.
         //restoreFormats();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -55,6 +55,8 @@ public void openVideo(Video item) {
         // Ensure that we aren't running on presenter init stage
         if (getController() != null) {
             if (!item.equals(getVideo())) { // video might be opened twice (when remote connection enabled). Fix for that.
+                // Reset auto-save history timer
+                mTickleLeft = 0;
                 // Save state of the previous video.
                 // In case video opened from phone and other stuff.
                 saveState();
@@ -115,8 +117,6 @@ public void onEngineInitialized() {
 
     @Override
     public void onEngineReleased() {
-        mTickleLeft = 0;
-
         // Save previous state
         if (getController().containsMedia()) {
             setPlayEnabled(getController().getPlayWhenReady());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -406,7 +406,8 @@ private void updateHistory() {
             return;
         }
 
-        RxUtils.disposeActions(mHistoryAction);
+        // Is this really safe? Could I lost history because of this?
+        //RxUtils.disposeActions(mHistoryAction);
 
         MediaService service = YouTubeMediaService.instance();
         MediaItemService mediaItemManager = service.getMediaItemService();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -97,7 +97,7 @@ public void openVideo(Video item) {
             if (!item.equals(mLastVideo)) {
                 loadVideo(item); // force play immediately
             } else {
-                loadSuggestions(item);
+                loadSuggestions(item); // update suggestions only
             }
         } else {
             mLastVideo = item; // save for later

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -115,9 +115,8 @@ public void onViewResumed() {
 
     @Override
     public void onFinish() {
-        if (SearchData.instance(getContext()).isTempBackgroundModeStarted() &&
-            PlaybackPresenter.instance(getContext()).isRunningInBackground() &&
-            (this instanceof SearchPresenter || this instanceof ChannelPresenter)) {
+        if (SearchData.instance(getContext()).getTempBackgroundModeClass() == this.getClass() &&
+            PlaybackPresenter.instance(getContext()).isRunningInBackground()) {
             ViewManager.instance(getContext()).startView(SplashView.class);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -229,7 +229,7 @@ private void prepareAndShowDialogSigned() {
         appendOpenPlaylistButton();
         appendSubscribeButton();
         appendTogglePinVideoToSidebarButton();
-        appendSavePlaylistButton();
+        appendSaveRemovePlaylistButton();
         appendOpenDescriptionButton();
         appendShareLinkButton();
         appendShareEmbedLinkButton();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -418,7 +418,7 @@ public boolean isPlaylistAsChannel() {
     }
 
     public boolean isPlaylistInChannel() {
-        return belongsToChannel() && hasPlaylist() && mediaItem != null && mediaItem.getDurationMs() <= 0;
+        return belongsToChannel() && hasPlaylist() && !belongsToSamePlaylistGroup();
     }
 
     public boolean isEmpty() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -418,7 +418,7 @@ public boolean isPlaylistAsChannel() {
     }
 
     public boolean isPlaylistInChannel() {
-        return belongsToChannel() && hasPlaylist();
+        return belongsToChannel() && hasPlaylist() && mediaItem != null && mediaItem.getDurationMs() <= 0;
     }
 
     public boolean isEmpty() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -77,6 +77,7 @@ public void onInitDone() {
         mPlayerData = PlayerData.instance(getActivity());
         mPlayerData.setOnChange(this);
         mPlayerTweaksData = PlayerTweaksData.instance(getActivity());
+        mSleepTimerStartMs = System.currentTimeMillis();
         initErrorActions();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -210,7 +210,7 @@ public void onTickle() {
     }
 
     private void checkSleepTimer() {
-        if (mPlayerData.isSonyTimerFixEnabled() && System.currentTimeMillis() - mSleepTimerStartMs > 1 * 60 * 1_000) {
+        if (mPlayerData.isSonyTimerFixEnabled() && System.currentTimeMillis() - mSleepTimerStartMs > 60 * 60 * 1_000) {
             getController().setPlayWhenReady(false);
             getController().showError(getActivity().getString(R.string.sleep_timer));
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -345,8 +345,8 @@ public void onContentBlockClicked(boolean enabled) {
     }
 
     @Override
-    public void onChatClicked(boolean enabled) {
-        process(listener -> listener.onChatClicked(enabled));
+    public void onChatClicked() {
+        process(PlayerUiEventListener::onChatClicked);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -229,7 +229,7 @@ public void onContentBlockClicked(boolean enabled) {
     }
 
     @Override
-    public void onChatClicked(boolean enabled) {
+    public void onChatClicked() {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerUiEventListener.java
Patch:
@@ -26,7 +26,7 @@ public interface PlayerUiEventListener {
     void onVideoSpeedClicked();
     void onSeekIntervalClicked();
     void onContentBlockClicked(boolean enabled);
-    void onChatClicked(boolean enabled);
+    void onChatClicked();
     void onVideoInfoClicked();
     void onShareLinkClicked();
     void onSearchClicked();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -134,13 +134,12 @@ public void onSubtitleClicked() {
         List<FormatItem> subtitleFormats = getController().getSubtitleFormats();
 
         String subtitlesCategoryTitle = getActivity().getString(R.string.subtitle_category_title);
-        String subtitleFormatsTitle = getActivity().getString(R.string.subtitle_language);
 
         AppDialogPresenter settingsPresenter = AppDialogPresenter.instance(getActivity());
 
         settingsPresenter.clear();
 
-        settingsPresenter.appendRadioCategory(subtitleFormatsTitle,
+        settingsPresenter.appendRadioCategory(subtitlesCategoryTitle,
                 UiOptionItem.from(subtitleFormats,
                         option -> getController().setFormat(UiOptionItem.toFormat(option)),
                         getActivity().getString(R.string.subtitles_disabled)));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
-import android.os.Build;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 
 public class PlayerTweaksData {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -768,8 +768,8 @@ public void onContentBlock(boolean enabled) {
         }
 
         @Override
-        public void onChat(boolean enabled) {
-            mEventListener.onChatClicked(enabled);
+        public void onChat() {
+            mEventListener.onChatClicked();
         }
 
         @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/other/VideoPlayerGlue.java
Patch:
@@ -479,8 +479,7 @@ private boolean dispatchAction(Action action) {
             mActionListener.onContentBlock(getActionIndex(action) == TwoStateAction.INDEX_ON);
             handled = true;
         } else if (action == mChatAction) {
-            incrementActionIndex(action);
-            mActionListener.onChat(getActionIndex(action) == TwoStateAction.INDEX_ON);
+            mActionListener.onChat();
             handled = true;
         }
 
@@ -637,7 +636,7 @@ public interface OnActionClickedListener {
 
         void onContentBlock(boolean enabled);
 
-        void onChat(boolean enabled);
+        void onChat();
 
         void onVideoInfo();
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -33,7 +33,7 @@
 import com.liskovsoft.sharedutils.helpers.FileHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.ErrorDefaultDashChunkSource;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.MyDefaultLoadErrorHandlingPolicy;
+import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.DashDefaultLoadErrorHandlingPolicy;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.TrackErrorFixer;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 import com.liskovsoft.youtubeapi.app.AppConstants;
@@ -165,7 +165,7 @@ private MediaSource buildMediaSource(Uri uri, String overrideExtension) {
                                 buildDataSourceFactory(USE_BANDWIDTH_METER)
                         )
                                 .setManifestParser(new LiveDashManifestParser()) // Don't make static! Need state reset for each live source.
-                                .setLoadErrorHandlingPolicy(new MyDefaultLoadErrorHandlingPolicy())
+                                .setLoadErrorHandlingPolicy(new DashDefaultLoadErrorHandlingPolicy())
                                 .createMediaSource(uri);
                 if (mEventLogger != null) {
                     dashSource.addEventListener(mMainHandler, mEventLogger);
@@ -197,6 +197,7 @@ private MediaSource buildMPDMediaSource(Uri uri, InputStream mpdContent) {
                 new ErrorDefaultDashChunkSource.Factory(mMediaDataSourceFactory, mTrackErrorFixer),
                 null
         )
+                .setLoadErrorHandlingPolicy(new DashDefaultLoadErrorHandlingPolicy())
                 .createMediaSource(getManifest(uri, mpdContent));
         if (mEventLogger != null) {
             dashSource.addEventListener(mMainHandler, mEventLogger);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/DashDefaultLoadErrorHandlingPolicy.java
Patch:
@@ -9,7 +9,7 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-public class MyDefaultLoadErrorHandlingPolicy extends DefaultLoadErrorHandlingPolicy {
+public class DashDefaultLoadErrorHandlingPolicy extends DefaultLoadErrorHandlingPolicy {
     @Override
     public long getBlacklistDurationMsFor(int dataType, long loadDurationMs, IOException exception, int errorCount) {
         if (exception instanceof InvalidResponseCodeException) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -66,7 +66,6 @@ public void enable() {
         int delayMs = mGeneralData.getScreenDimmingTimeoutMin() == GeneralData.SCREEN_DIMMING_NEVER ?
                 10_000 :
                 mGeneralData.getScreenDimmingTimeoutMin() * 60 * 1_000;
-        Utils.removeCallbacks(mHandler, mUndimScreen);
         Utils.postDelayed(mHandler, mDimScreen, delayMs);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -558,6 +558,8 @@ public void sync(MediaItemFormatInfo formatInfo) {
         if (formatInfo == null) {
             return;
         }
+        
+        isLive = formatInfo.isLive();
 
         if (description == null) {
             description = formatInfo.getDescription();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -102,7 +102,7 @@ public static VideoGroup from(MediaGroup mediaGroup, BrowseSection section, int
                 State state = stateService.getByVideoId(video.videoId);
                 // Sync video.
                 if (state != null) {
-                    video.percentWatched = state.positionMs / (state.lengthMs / 100f);
+                    video.percentWatched = state.positionMs / (state.durationMs / 100f);
                 }
             }
             videoGroup.mVideos.add(video);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -282,11 +282,11 @@ private List<SeekBarSegment> toSeekBarSegments(List<SponsorSegment> segments) {
      * Sponsor block fix. Position may exceed real media length.
      */
     private void setPositionMs(long positionMs) {
-        long lengthMs = getController().getDurationMs();
+        long durationMs = getController().getDurationMs();
 
         // Sponsor block fix. Position may exceed real media length.
-        if (lengthMs > 0 && positionMs > lengthMs) {
-            positionMs = lengthMs;
+        if (durationMs > 0 && positionMs > durationMs) {
+            positionMs = durationMs;
         }
 
         getController().setPositionMs(positionMs);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -421,7 +421,8 @@ private void createPlayer() {
         // Try to fix decoder error on Nvidia Shield 2019.
         // Init resources as early as possible.
         //mPlayer.setForegroundMode(true);
-        mPlayer.setSeekParameters(SeekParameters.CLOSEST_SYNC); // live stream (dash) seeking fix
+        // NOTE: Avoid using this. SponsorBlock may hang because of constant rewinds.
+        //mPlayer.setSeekParameters(SeekParameters.CLOSEST_SYNC); // live stream (dash) seeking fix
         mExoPlayerController.setPlayer(mPlayer);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -25,7 +25,7 @@
 
 public class VideoStateManager extends PlayerEventListenerHelper implements TickleListener, MetadataListener {
     private static final long MUSIC_VIDEO_MAX_DURATION_MS = 6 * 60 * 1000;
-    private static final long LIVE_THRESHOLD_MS = 60_000;
+    private static final long LIVE_THRESHOLD_MS = 90_000;
     private static final String TAG = VideoStateManager.class.getSimpleName();
     private static final float RESTORE_POSITION_PERCENTS = 10; // min value for immediately closed videos
     private boolean mIsPlayEnabled;
@@ -213,7 +213,7 @@ public void onPlayEnd() {
     @Override
     public void onBuffering() {
         // Check LIVE threshold and set speed to normal
-        restoreSpeed();
+        //restoreSpeed();
         // Live stream starts to buffer after the end
         showHideScreensaver(true);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -30,7 +30,6 @@
 
 public class ContentBlockManager extends PlayerEventListenerHelper implements MetadataListener {
     private static final String TAG = ContentBlockManager.class.getSimpleName();
-    private static final long SEGMENT_CHECK_LENGTH_MS = 3_000;
     private MediaItemService mMediaItemManager;
     private ContentBlockData mContentBlockData;
     private Video mVideo;
@@ -316,7 +315,7 @@ private List<SponsorSegment> findMatchedSegments(long positionMs) {
                 }
             } else {
                 SponsorSegment lastSegment = foundSegment.get(foundSegment.size() - 1);
-                if (isSkipAction && isPositionInsideSegment(lastSegment.getEndMs(), segment)) {
+                if (isSkipAction && isPositionInsideSegment(lastSegment.getEndMs() + 3_000, segment)) {
                     foundSegment.add(segment);
                 }
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -6,7 +6,6 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItemFormatInfo;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItemMetadata;
-import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxUtils;
@@ -482,7 +481,7 @@ private void loadRandomNext() {
             Video video = new Video();
             video.playlistId = mLastVideo.playlistId;
             VideoGroup topRow = getController().getSuggestionsByIndex(0);
-            video.playlistIndex = mRandom.getRandomIndex(
+            video.playlistIndex = mRandom.getPlaylistIndex(mLastVideo.getPlaylistId(),
                     mLastVideo.playlistInfo.getSize() != -1 ? mLastVideo.playlistInfo.getSize() : topRow != null ? topRow.getVideos().size() : -1);
 
             MediaServiceManager.instance().loadMetadata(video, randomMetadata -> {

File: common/src/test/java/com/liskovsoft/smartyoutubetv2/common/utils/DateFormatterTest.java
Patch:
@@ -11,6 +11,6 @@ public class DateFormatterTest {
     @Test
     public void testToUnixTimeMs() {
         long timeMs = DateFormatter.toUnixTimeMs("2022-09-11T23:39:38+00:00");
-        assertTrue("time not null", timeMs > 0);
+        assertEquals("time equals", 1662939578000L, timeMs);
     }
 }
\ No newline at end of file

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerView.java
Patch:
@@ -2,5 +2,5 @@
 
 public interface PlayerView {
     void setQualityInfo(String info);
-    void setLiveTimestamp(String timestamp);
+    void setLiveTimestamp(long timestampMs);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerView.java
Patch:
@@ -2,4 +2,5 @@
 
 public interface PlayerView {
     void setQualityInfo(String info);
+    void setLiveTimestamp(String timestamp);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -617,7 +617,8 @@ private MediaItem findNextVideo(MediaItemMetadata metadata) {
             List<MediaGroup> suggestions = metadata.getSuggestions();
 
             if (suggestions != null && suggestions.size() > 1) {
-                nextVideo = suggestions.get(1).getMediaItems().get(0);
+                List<MediaItem> mediaItems = suggestions.get(1).getMediaItems();
+                nextVideo = Helpers.findFirst(mediaItems, item -> item.getVideoId() != null);
             }
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -122,6 +122,7 @@ public void onEngineReleased() {
     public void onFinish() {
         // User action detected. Stop remote session.
         mConnected = false;
+        mVideo = null;
     }
 
     private void postStartPlaying(@Nullable Video item, boolean isPlaying) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -39,7 +39,7 @@ public boolean fixError(Exception e) {
 
         InvalidResponseCodeException ex = (InvalidResponseCodeException) e;
 
-        if (ex.responseCode != 404) {
+        if (ex.responseCode != 404 && ex.responseCode != 503) {
             return false;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -36,7 +36,7 @@ public class LiveDashManifestParser extends DashManifestParser {
     private static final long MAX_LIVE_STREAM_LENGTH_MS = 30 * 1_000;
     // Usually gaming streams. 10 hrs max.
     private static final long MAX_PAST_STREAM_LENGTH_MS = 12 * 60 * 60 * 1_000;
-    private static final long MAX_NEW_STREAM_LENGTH_MS = 8 * 60 * 60 * 1_000;
+    private static final long MAX_NEW_STREAM_LENGTH_MS = 30 * 1_000;
     private DashManifest mOldManifest;
     private long mOldSegmentNum;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -35,7 +35,7 @@ public class LiveDashManifestParser extends DashManifestParser {
     // Higher values may produce 'url not working' error.
     private static final long MAX_LIVE_STREAM_LENGTH_MS = 30 * 1_000;
     // Usually gaming streams. 10 hrs max.
-    private static final long MAX_PAST_STREAM_LENGTH_MS = 10 * 60 * 60 * 1_000;
+    private static final long MAX_PAST_STREAM_LENGTH_MS = 12 * 60 * 60 * 1_000;
     private static final long MAX_NEW_STREAM_LENGTH_MS = 8 * 60 * 60 * 1_000;
     private DashManifest mOldManifest;
     private long mOldSegmentNum;
@@ -182,7 +182,7 @@ private static void recreateMissingSegments(DashManifest manifest) {
         long currentSegmentCount = getSegmentCount(manifest);
         if (minUpdatePeriodMs <= 0) { // past live stream
             // May has different length 5_000 (4hrs) or 2_000 (2hrs)
-            minUpdatePeriodMs = durationMs / currentSegmentCount / 10 * 10; // Round ending digits
+            minUpdatePeriodMs = durationMs / (currentSegmentCount - 1) / 10 * 10; // Round ending digits
         }
 
         boolean isNewStream = firstSegmentNum < 10_000 && currentSegmentCount > 3;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -201,7 +201,7 @@ private static void recreateMissingSegments(DashManifest manifest) {
         }
 
         // Skip past streams that are truncated (truncated streams have a problems)
-        if (isNewStream && firstSegmentNum > segmentCount) {
+        if ((isNewStream || isPastStream) && firstSegmentNum > segmentCount) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -33,9 +33,9 @@ public class LiveDashManifestParser extends DashManifestParser {
     private static final String TAG = LiveDashManifestParser.class.getSimpleName();
     // Usually gaming streams. 10 hours max.
     private static final long MAX_PAST_STREAM_LENGTH_MS = 10 * 60 * 60 * 1_000;
-    // Should be close to zero but not zero (buffer size fix on Radio Record).
+    // Should be close to zero but not zero to increase buffer size to 30 sec (Radio Record).
     // Higher values may produce 'url not working' error.
-    private static final long MAX_LIVE_STREAM_LENGTH_MS = 1 * 60 * 1_000;
+    private static final long MAX_LIVE_STREAM_LENGTH_MS = 30 * 1_000;
     private DashManifest mOldManifest;
     private long mOldSegmentNum;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -33,9 +33,9 @@ public class LiveDashManifestParser extends DashManifestParser {
     private static final String TAG = LiveDashManifestParser.class.getSimpleName();
     // Usually gaming streams. 10 hours max.
     private static final long MAX_PAST_STREAM_LENGTH_MS = 10 * 60 * 60 * 1_000;
-    // Should be close to zero but not zero (small buffer size fix on Radio Record).
+    // Should be close to zero but not zero (buffer size fix on Radio Record).
     // Higher values may produce 'url not working' error.
-    private static final long MAX_LIVE_STREAM_LENGTH_MS = 30 * 60 * 1_000;
+    private static final long MAX_LIVE_STREAM_LENGTH_MS = 5 * 60 * 1_000;
     private DashManifest mOldManifest;
     private long mOldSegmentNum;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -174,7 +174,7 @@ private static void recreateMissingSegments(DashManifest manifest) {
         }
 
         long minUpdatePeriodMs = (long) Helpers.getField(manifest, "minUpdatePeriodMs");
-        long timeShiftBufferDepthMs = (long) Helpers.getField(manifest, "timeShiftBufferDepthMs");
+        long timeShiftBufferDepthMs = (long) Helpers.getField(manifest, "timeShiftBufferDepthMs"); // active live stream
         long durationMs = (long) Helpers.getField(manifest, "durationMs"); // past live stream
         long firstSegmentNum = getFirstSegmentNum(manifest);
         long lastSegmentNum = getLastSegmentNum(manifest);
@@ -183,7 +183,7 @@ private static void recreateMissingSegments(DashManifest manifest) {
             minUpdatePeriodMs = durationMs / (lastSegmentNum - firstSegmentNum);
         }
 
-        long maxSegmentsCount = (firstSegmentNum > 10_000 ? // Long live stream (e.g. news stream)
+        long maxSegmentsCount = (timeShiftBufferDepthMs > 0 ? // active live stream
                 MAX_LIVE_STREAM_LENGTH_MS : MAX_PAST_STREAM_LENGTH_MS) / minUpdatePeriodMs;
         long segmentCount = Math.min(firstSegmentNum, maxSegmentsCount - (lastSegmentNum - firstSegmentNum - 1));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -554,7 +554,7 @@ private void restoreState() {
         mIsRememberSpeedEnabled = Helpers.parseBoolean(split, 21, false);
         mPlaybackMode = Helpers.parseInt(split, 22, PlaybackEngineController.PLAYBACK_MODE_PLAY_ALL);
         // didn't remember what was there
-        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, Build.VERSION.SDK_INT <= 19);
+        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, false);
         mIsSonyTimerFixEnabled = Helpers.parseBoolean(split, 25, false);
         // old player tweaks
         mIsQualityInfoEnabled = Helpers.parseBoolean(split, 28, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -288,7 +288,7 @@ private void restoreData() {
         mIsSetOutputSurfaceWorkaroundEnabled = Helpers.parseBoolean(split, 7, true);
         mIsAudioSyncFixEnabled = Helpers.parseBoolean(split, 8, false);
         mIsKeepFinishedActivityEnabled = Helpers.parseBoolean(split, 9, false);
-        mIsLiveStreamFixEnabled = Helpers.parseBoolean(split, 10, Build.VERSION.SDK_INT <= 19);
+        mIsLiveStreamFixEnabled = Helpers.parseBoolean(split, 10, false);
         mIsPlaybackNotificationsDisabled = Helpers.parseBoolean(split, 11, !Helpers.isAndroidTV(mPrefs.getContext()));
         mIsTunneledPlaybackEnabled = Helpers.parseBoolean(split, 12, false);
         mPlayerButtons = Helpers.parseInt(split, 13, Integer.MAX_VALUE & ~(PLAYER_BUTTON_SEEK_INTERVAL | PLAYER_BUTTON_CONTENT_BLOCK)); // all buttons, except these

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -135,6 +135,9 @@ private void initSections() {
         initSettingsSubCategories();
     }
 
+    /**
+     * NOTE: This only mapping. Enabled section list is here: GeneralData#initSections()
+     */
     private void initSectionMapping() {
         int uploadsType = mMainUIData.isUploadsOldLookEnabled() ? BrowseSection.TYPE_GRID : BrowseSection.TYPE_MULTI_GRID;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -781,7 +781,8 @@ protected void selectAllText() {
     protected void enableKeyboardAutoShow(boolean enable) {
         // Show/Hide kbd on activity first launch
         if (getActivity() != null) {
-            getActivity().getWindow().setSoftInputMode(enable ? WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE : WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
+            // NOTE: You should set 'unspecified' instead of 'visible' to fix 'keyboard popup in the player' bug.
+            getActivity().getWindow().setSoftInputMode(enable ? WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED : WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
         }
         mIsKeyboardAutoShowEnabled = enable;
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/browse/NavigateTitleView.java
Patch:
@@ -273,7 +273,7 @@ private void updateLanguageIcon() {
 
     private static void loadIcon(SearchOrbView view, String url) {
         // The view with GONE visibility has zero width and height
-        if (view == null || view.getWidth() == 0) {
+        if (view == null || view.getWidth() <= 0 || view.getHeight() <= 0) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -59,8 +59,10 @@ public class VideoLoaderManager extends PlayerEventListenerHelper {
         if (getController() != null &&
                 getController().getVideo() != null &&
                 getController().getVideo().isLive) {
-            getController().showSuggestions(true);
+            // Do rewind ten sec to stop buffering
+            getController().setPositionMs(getController().getPositionMs() - 10_000);
             getController().setPlayWhenReady(false);
+            getController().showControls(true);
         }
     };
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -378,6 +378,8 @@ private void appendPixelRatioCategory(AppDialogPresenter settingsPresenter) {
         ArrayList<Pair<String, Float>> pairs = new ArrayList<>();
         pairs.add(new Pair<>("1:1 (16:9 monitor)", 1.0f));
         pairs.add(new Pair<>("1.11111:1 (16:10 monitor)", 1.11111f));
+        pairs.add(new Pair<>("1.3333:1 (4:3 monitor)", 1.3333f));
+        pairs.add(new Pair<>("0.7619:1 (21:9 monitor)", 0.7619f));
 
         for (Pair<String, Float> pair : pairs) {
             options.add(UiOptionItem.from(pair.first,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/LiveDashManifestParser.java
Patch:
@@ -43,6 +43,8 @@ private void appendManifest(DashManifest newManifest) {
         // Optimize ram usage on short streams (< 2 hours)
         if (getFirstSegmentNum(newManifest) == 0) { // Short stream. No need to do something special.
             mOldManifest = newManifest;
+            // Below line will be needed later (> 2 hours), when the stream no longer starts from 0 segment
+            mOldSegmentNum = getLastSegmentNum(newManifest);
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -101,7 +101,7 @@ protected void onDestroy() {
     @Override
     public void finish() {
         // user pressed back key
-        if (!mViewManager.startParentView(this)) {
+        if (!mViewManager.hasParentView(this)) {
             switch (mGeneralData.getAppExitShortcut()) {
                 case GeneralData.EXIT_DOUBLE_BACK:
                     mDoubleBackManager.enableDoubleBackExit();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -552,7 +552,7 @@ private void restoreData() {
         mIsRememberSpeedEnabled = Helpers.parseBoolean(split, 21, false);
         mPlaybackMode = Helpers.parseInt(split, 22, PlaybackEngineController.PLAYBACK_MODE_PLAY_ALL);
         // didn't remember what was there
-        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, false);
+        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, Build.VERSION.SDK_INT <= 19);
         mIsSonyTimerFixEnabled = Helpers.parseBoolean(split, 25, false);
         // old player tweaks
         mIsQualityInfoEnabled = Helpers.parseBoolean(split, 28, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.os.Build;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 
 public class PlayerTweaksData {
@@ -277,7 +278,7 @@ private void restoreData() {
         mIsSetOutputSurfaceWorkaroundEnabled = Helpers.parseBoolean(split, 7, true);
         mIsAudioSyncFixEnabled = Helpers.parseBoolean(split, 8, false);
         mIsKeepFinishedActivityEnabled = Helpers.parseBoolean(split, 9, false);
-        mIsLiveStreamFixEnabled = Helpers.parseBoolean(split, 10, false);
+        mIsLiveStreamFixEnabled = Helpers.parseBoolean(split, 10, Build.VERSION.SDK_INT <= 19);
         mIsPlaybackNotificationsDisabled = Helpers.parseBoolean(split, 11, !Helpers.isAndroidTV(mPrefs.getContext()));
         mIsTunneledPlaybackEnabled = Helpers.parseBoolean(split, 12, false);
         mPlayerButtons = Helpers.parseInt(split, 13, Integer.MAX_VALUE & ~(PLAYER_BUTTON_SEEK_INTERVAL | PLAYER_BUTTON_CONTENT_BLOCK)); // all buttons, except these

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -153,7 +153,8 @@ private void initMediaTracks(int rendererIndex) {
         renderer.mediaTracks = new MediaTrack[renderer.trackGroups.length][];
         // Fix for java.util.ConcurrentModificationException inside of:
         // com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem.from (ExoFormatItem.java:44)
-        renderer.sortedTracks = Collections.synchronizedSortedSet(new TreeSet<>(new MediaTrackFormatComparator()));
+        // Won't help: renderer.sortedTracks = Collections.synchronizedSortedSet(new TreeSet<>(new MediaTrackFormatComparator()));
+        renderer.sortedTracks = new TreeSet<>(new MediaTrackFormatComparator());
 
         if (rendererIndex == RENDERER_INDEX_SUBTITLE) {
             // AUTO OPTION: add disable subs option

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -59,7 +59,8 @@ public class VideoLoaderManager extends PlayerEventListenerHelper {
         if (getController() != null &&
                 getController().getVideo() != null &&
                 getController().getVideo().isLive) {
-            applyPlaybackMode(PlaybackEngineController.PLAYBACK_MODE_PAUSE);
+            getController().showSuggestions(true);
+            getController().setPlayWhenReady(false);
         }
     };
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -338,7 +338,7 @@ private void maybeReleasePlayer() {
         //}
 
         // Ensure to continue playback in audio mode
-        if (ViewManager.instance(getContext()).getBlockedTop() == PlaybackActivity.class) {
+        if (ViewManager.instance(getContext()).getBlockedTop() == PlaybackActivity.class && !isInPIPMode()) {
             Log.d(TAG, "releasePlayer: Playback activity is blocked. Exiting...");
             return;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/chat/ChatItemMessage.java
Patch:
@@ -14,7 +14,9 @@ public class ChatItemMessage implements IMessage {
     public static ChatItemMessage from(ChatItem chatItem) {
         ChatItemMessage message = new ChatItemMessage();
         message.mId = chatItem.getId();
-        message.mText = String.format("%s: %s", chatItem.getAuthorName(), chatItem.getMessage());
+        if (chatItem.getMessage() != null && !chatItem.getMessage().trim().isEmpty()) {
+            message.mText = String.format("%s: %s", chatItem.getAuthorName(), chatItem.getMessage());
+        }
         message.mAuthor = ChatItemAuthor.from(chatItem);
         message.mCreatedAt = new Date();
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -107,7 +107,7 @@ public void forceFinish() {
 
     public void setPosition(String timeCode) {
         // Check that the user isn't open context menu on suggestion item
-        if (Utils.isPlayerInForeground(getContext()) && !getView().getController().isSuggestionsShown()) {
+        if (Utils.isPlayerInForeground(getContext()) && getView() != null && !getView().getController().isSuggestionsShown()) {
             getView().getController().setPositionMs(ServiceHelper.timeTextToMillis(timeCode));
         } else {
             Video video = VideoMenuPresenter.sVideoHolder.get();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -25,7 +25,7 @@ public class VideoStateManager extends PlayerEventListenerHelper implements Tick
     private static final long MUSIC_VIDEO_MAX_LENGTH_MS = 6 * 60 * 1000;
     private static final long LIVE_THRESHOLD_MS = 60_000;
     private static final String TAG = VideoStateManager.class.getSimpleName();
-    private static final float RESTORE_POSITION_PERCENTS = 12;
+    private static final float RESTORE_POSITION_PERCENTS = 10; // min value for immediately closed videos
     private boolean mIsPlayEnabled;
     private Video mVideo = new Video();
     private FormatItem mTempVideoFormat;
@@ -354,7 +354,7 @@ private void restorePosition() {
         State state = mStateService.getByVideoId(item.videoId);
 
         // Ignore up to 10% watched because the video might be opened on phone and closed immediately.
-        boolean containsWebPosition = item.percentWatched >= RESTORE_POSITION_PERCENTS;
+        boolean containsWebPosition = item.percentWatched > RESTORE_POSITION_PERCENTS;
         boolean stateIsOutdated = state == null || state.timestamp < item.timestamp;
         if (containsWebPosition && stateIsOutdated) {
             // Web state is buggy on short videos (e.g. video clips)

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -1201,6 +1201,9 @@ public void showSuggestions(boolean show) {
         }
     }
 
+    /**
+     * The same as {@link #showOverlay(boolean)} but scrolls from suggestions to controls if needed.
+     */
     @Override
     public void showControls(boolean show) {
         if (isInPIPMode()) {

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListAdapter.java
Patch:
@@ -704,7 +704,8 @@ private void trimEnd() {
     }
 
     private boolean checkMessage(MESSAGE message) {
-        return message != null && message.getId() != null && message.getUser() != null && message.getUser().getId() != null;
+        return message != null && message.getId() != null && message.getUser() != null && message.getUser().getId() != null
+                && message.getText() != null && !message.getText().isEmpty();
     }
 
     void setLayoutManager(RecyclerView.LayoutManager layoutManager) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseActivity.java
Patch:
@@ -12,6 +12,8 @@ public class BrowseActivity extends LeanbackActivity {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.fragment_main);
+        // State saving should be explicitly enabled for needed activities
+        enableSaveState(true);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -194,9 +194,7 @@ public void finishReally() {
     @Override
     public void onBackPressed() {
         mBackPressed = mGeneralData.getBackgroundPlaybackShortcut() != GeneralData.BACKGROUND_PLAYBACK_SHORTCUT_HOME_BACK;
-        if (Utils.checkActivity(this)) {
-            super.onBackPressed();
-        }
+        super.onBackPressed();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -1,6 +1,7 @@
 package com.liskovsoft.smartyoutubetv2.common.app.presenters;
 
 import android.annotation.SuppressLint;
+import android.app.Activity;
 import android.content.Context;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.MainPlayerEventBridge;
@@ -84,7 +85,8 @@ public boolean isRunningInBackground() {
         return getView() != null &&
                 getView().getController().getBackgroundMode() != PlaybackEngineController.BACKGROUND_MODE_DEFAULT &&
                 getView().getController().isEngineInitialized() &&
-                !Utils.isPlayerInForeground(getContext());
+                !Utils.isPlayerInForeground(getContext()) &&
+                getContext() instanceof Activity && Utils.checkActivity((Activity) getContext()); // Check that activity is not in Finishing state
     }
 
     public boolean isInPipMode() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/SearchSettingsPresenter.java
Patch:
@@ -36,6 +36,7 @@ private void appendMiscCategory(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
         options.add(UiOptionItem.from(getContext().getString(R.string.use_alt_speech_recognizer),
+                getContext().getString(R.string.use_alt_speech_recognizer_desc),
                 option -> mSearchData.enableAltSpeechRecognizer(option.isSelected()),
                 mSearchData.isAltSpeechRecognizerEnabled()));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/DateFormatter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import com.liskovsoft.sharedutils.locale.LocaleUtility;
+import com.liskovsoft.smartyoutubetv2.common.prefs.GeneralData;
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -24,7 +25,7 @@ private static String getDateTimeShort(Context context, boolean showDate, boolea
         String datePattern = "EEE d MMM";
 
         // details: https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html
-        String timePattern = is24HourLocale(context) ? "H:mm" : "h:mm a";
+        String timePattern = GeneralData.instance(context).getTimeMode() == GeneralData.TIME_MODE_24 ? "H:mm" : "h:mm a";
 
         SimpleDateFormat serverFormat = new SimpleDateFormat(
                 String.format("%s%s",
@@ -37,7 +38,7 @@ private static String getDateTimeShort(Context context, boolean showDate, boolea
         return String.format("%1$s", currentTime);
     }
 
-    private static boolean is24HourLocale(Context context) {
+    public static boolean is24HourLocale(Context context) {
         Locale currentLocale = LocaleUtility.getCurrentLocale(context);
 
         // Fix weird locale like en_RO

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -29,7 +29,8 @@
 public class MainApplication extends MultiDexApplication { // fix: Didn't find class "com.google.firebase.provider.FirebaseInitProvider"
     static {
         // fix youtube bandwidth throttling (best - false)???
-        System.setProperty("http.keepAlive", "true");
+        // false is better for streams (less buffering)
+        System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering (best - true)???
         System.setProperty("java.net.preferIPv6Addresses", "true");
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/marqueetextview/HeaderMarqueeTextView.java
Patch:
@@ -4,6 +4,9 @@
 import android.util.AttributeSet;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
+/**
+ * MarqueeTextView used in browse section headers
+ */
 public class HeaderMarqueeTextView extends MarqueeTextView {
     public HeaderMarqueeTextView(Context context) {
         super(context);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainApplication.java
Patch:
@@ -31,7 +31,7 @@ public class MainApplication extends MultiDexApplication { // fix: Didn't find c
         // fix youtube bandwidth throttling
         System.setProperty("http.keepAlive", "false");
         // fix ipv6 infinite video buffering???
-        System.setProperty("java.net.preferIPv6Addresses", "true");
+        System.setProperty("java.net.preferIPv6Addresses", "false");
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
 import android.content.Intent;
+import android.os.Build;
 import android.os.Bundle;
 import android.speech.SpeechRecognizer;
 import android.view.LayoutInflater;
@@ -141,7 +142,8 @@ private void setupListenersAndPermissions() {
         // NOTE: External recognizer makes voice search behave unexpectedly (broken by Google app updates).
         // You should avoid using it till there be a solution.
 
-        if (SearchData.instance(getContext()).isAltSpeechRecognizerEnabled()) {
+        // Internal recognizer needs API >= 23. See: androidx.leanback.widget.SearchBar.startRecognition()
+        if (Build.VERSION.SDK_INT < 23 || SearchData.instance(getContext()).isAltSpeechRecognizerEnabled()) {
             setSpeechRecognitionCallback(() -> {
                 if (isAdded()) {
                     try {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -242,6 +242,8 @@ public void onVisibleBehindCanceled() {
     public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
         super.onPictureInPictureModeChanged(isInPictureInPictureMode);
 
+        mPlaybackFragment.onPIPChanged(isInPictureInPictureMode);
+
         if (!isInPictureInPictureMode) {
             // Disable collapse app to Home launcher
             mViewManager.enableMoveToBack(false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -389,7 +389,7 @@ public boolean hasNextPageKey() {
         return getNextPageKey() != null;
     }
 
-    public boolean hasUploads() {
+    public boolean hasNestedItems() {
         return mediaItem != null && mediaItem.hasUploads();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -126,7 +126,7 @@ public boolean hasPendingActions() {
 
     public void openChannel(Video item) {
         // Working with uploads or playlists
-        if (item == null || (!item.hasUploads() && !item.hasPlaylist())) {
+        if (item == null || (!item.hasNestedItems() && !item.hasPlaylist())) {
             return;
         }
 
@@ -155,7 +155,7 @@ public Observable<MediaGroup> obtainPlaylistObservable(Video item) {
 
         disposeActions();
 
-        return item.hasUploads() ?
+        return item.hasNestedItems() ?
                mGroupManager.getGroupObserve(item.mediaItem) :
                item.hasReloadPageKey() ?
                mGroupManager.getGroupObserve(item.getReloadPageKey()) :

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoActionPresenter.java
Patch:
@@ -23,7 +23,7 @@ public void apply(Video item) {
             return;
         }
 
-        if (item.hasUploads()) {
+        if (item.hasNestedItems()) {
             // Below doesn't work right now. Api doesn't contains channel id.
             //ChannelPresenter.instance(getContext()).openChannel(item);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -79,7 +79,7 @@ private void appendTogglePinChannelButton() {
 
         getDialogPresenter().appendSingleButton(
                 UiOptionItem.from(
-                        getContext().getString(original.isChannelPlaylist() || BrowsePresenter.instance(getContext()).isPlaylistsSectionActive() ? R.string.pin_unpin_playlist : R.string.pin_unpin_channel),
+                        getContext().getString(original.isChannelPlaylist() || (original.hasNestedItems() && original.belongsToPlaylists()) ? R.string.pin_unpin_playlist : R.string.pin_unpin_channel),
                         optionItem -> {
                             if (original.hasVideo()) {
                                 MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -318,7 +318,7 @@ private void saveState() {
     private void savePosition() {
         Video video = getVideo();
 
-        if (video == null || !getController().containsMedia()) {
+        if (video == null || getController() == null || !getController().containsMedia()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/DateFormatter.java
Patch:
@@ -39,10 +39,12 @@ private static String getDateTimeShort(Context context, boolean showDate, boolea
 
     private static boolean is24HourLocale(Context context) {
         Locale locale = LocaleUtility.getCurrentLocale(context);
+        // Fix weird locale (e.g. ru_US)
+        Locale fixedLocale = new Locale(locale.getLanguage());
 
         java.text.DateFormat natural =
                 java.text.DateFormat.getTimeInstance(
-                        java.text.DateFormat.LONG, locale);
+                        java.text.DateFormat.LONG, fixedLocale);
 
         if (natural instanceof SimpleDateFormat) {
             SimpleDateFormat sdf = (SimpleDateFormat) natural;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -78,7 +78,7 @@ private void restoreData() {
 
         String[] split = Helpers.splitObjectLegacy(data);
 
-        mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, false);
+        mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, true);
         mSearchOptions = Helpers.parseInt(split, 1, 0);
         mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
         mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -1,6 +1,7 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.search.tags;
 
 import android.os.Bundle;
+import android.speech.SpeechRecognizer;
 import android.text.TextUtils;
 import androidx.annotation.Nullable;
 import androidx.leanback.widget.HeaderItem;
@@ -241,7 +242,7 @@ private void startSearch(String searchText, boolean enableRecognition) {
             selectAllText();
             loadSearchTags("");
 
-            if (enableRecognition) {
+            if (enableRecognition && SpeechRecognizer.isRecognitionAvailable(getContext())) {
                 startRecognition();
             } else {
                 focusOnSearchField();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -42,8 +42,8 @@ public interface PlaybackEngineController {
     long getPositionMs();
     void setPositionMs(long positionMs);
     long getLengthMs();
-    void setPlay(boolean play);
-    boolean getPlay();
+    void setPlayWhenReady(boolean play);
+    boolean getPlayWhenReady();
     boolean isPlaying();
     boolean isLoading();
     List<FormatItem> getVideoFormats();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -192,7 +192,7 @@ private void maybePausePlayback() {
         int delayMs = 5_000;
 
         if (mPlayerData.getAfrPauseMs() > 0) {
-            getController().setPlay(false);
+            getController().setPlayWhenReady(false);
             delayMs = mPlayerData.getAfrPauseMs();
         }
 
@@ -209,7 +209,7 @@ private void savePlayback() {
     private void restorePlayback() {
         if (mAutoFrameRateHelper.isSupported() && mPlayerData != null && mPlayerData.isAfrEnabled() && mPlayerData.getAfrPauseMs() > 0) {
             mStateUpdater.blockPlay(false);
-            getController().setPlay(mIsPlay);
+            getController().setPlayWhenReady(mIsPlay);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -526,7 +526,7 @@ private boolean handleConfirmKey(int keyCode) {
                     // NOP
                     break;
                 case PlayerData.ONLY_PAUSE:
-                    getController().setPlay(!getController().getPlay());
+                    getController().setPlayWhenReady(!getController().getPlayWhenReady());
                     return true; // don't show ui
             }
         }
@@ -556,7 +556,7 @@ private boolean handleNumKeys(int keyCode) {
 
     private boolean handlePlayPauseKey(int keyCode) {
         if (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) {
-            getController().setPlay(!getController().getPlay());
+            getController().setPlayWhenReady(!getController().getPlayWhenReady());
             enableUiAutoHideTimeout(); // TODO: move out somehow
             return true;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -77,7 +77,7 @@ public void onVideoLoaded(Video item) {
             mNewVideoPositionMs = 0;
         }
 
-        postStartPlaying(item, getController().getPlay());
+        postStartPlaying(item, getController().getPlayWhenReady());
         mVideo = item;
     }
 
@@ -273,7 +273,7 @@ private void processCommand(Command command) {
             case Command.TYPE_PLAY:
                 if (getController() != null) {
                     movePlayerToForeground();
-                    getController().setPlay(true);
+                    getController().setPlayWhenReady(true);
                     //postStartPlaying(getController().getVideo(), true);
                     postPlay(true);
                 } else {
@@ -283,7 +283,7 @@ private void processCommand(Command command) {
             case Command.TYPE_PAUSE:
                 if (getController() != null) {
                     movePlayerToForeground();
-                    getController().setPlay(false);
+                    getController().setPlayWhenReady(false);
                     //postStartPlaying(getController().getVideo(), false);
                     postPlay(false);
                 } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -186,7 +186,7 @@ public void onPlayEnd() {
                 break;
             case PlaybackEngineController.PLAYBACK_MODE_REPEAT_ONE:
                 getController().setPositionMs(0);
-                getController().setPlay(true);
+                getController().setPlayWhenReady(true);
                 Utils.showRepeatInfo(getActivity(), playbackMode);
                 break;
             case PlaybackEngineController.PLAYBACK_MODE_CLOSE:
@@ -204,7 +204,7 @@ public void onPlayEnd() {
                 // Except when playing from queue
                 if (mPlaylist.getNext() == null) {
                     getController().showSuggestions(true);
-                    getController().setPlay(false);
+                    getController().setPlayWhenReady(false);
                     getController().setPositionMs(0);
                     Utils.showRepeatInfo(getActivity(), playbackMode);
                 } else {
@@ -220,7 +220,7 @@ public void onPlayEnd() {
                     getController().showOverlay(true);
                 } else {
                     getController().showSuggestions(true);
-                    getController().setPlay(false);
+                    getController().setPlayWhenReady(false);
                     getController().setPositionMs(0);
                     Utils.showRepeatInfo(getActivity(), playbackMode);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -123,7 +123,7 @@ public void onEngineReleased() {
 
         // Save previous state
         if (getController().containsMedia()) {
-            setPlayEnabled(getController().getPlay());
+            setPlayEnabled(getController().getPlayWhenReady());
             saveState();
         }
     }
@@ -380,7 +380,7 @@ private void restorePosition() {
         }
 
         if (!mIsPlayBlocked) {
-            getController().setPlay(getPlayEnabled());
+            getController().setPlayWhenReady(getPlayEnabled());
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -138,14 +138,14 @@ public long getLengthMs() {
     }
 
     @Override
-    public void setPlay(boolean isPlaying) {
+    public void setPlayWhenReady(boolean play) {
         if (mPlayer != null) {
-            mPlayer.setPlayWhenReady(isPlaying);
+            mPlayer.setPlayWhenReady(play);
         }
     }
 
     @Override
-    public boolean getPlay() {
+    public boolean getPlayWhenReady() {
         if (mPlayer == null) {
             return false;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -21,8 +21,8 @@ public interface PlayerController {
     long getPositionMs();
     void setPositionMs(long positionMs);
     long getLengthMs();
-    void setPlay(boolean isPlaying);
-    boolean getPlay();
+    void setPlayWhenReady(boolean play);
+    boolean getPlayWhenReady();
     boolean isPlaying();
     boolean isLoading();
     void release();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -104,7 +104,8 @@ public void forceFinish() {
     }
 
     public void setPosition(String timeCode) {
-        if (getView() != null) {
+        // Check that the user isn't open context menu on suggestion item
+        if (Utils.isPlayerInForeground(getContext()) && !getView().getController().isSuggestionsShown()) {
             getView().getController().setPositionMs(ServiceHelper.timeTextToMillis(timeCode));
         } else {
             Video video = VideoMenuPresenter.sVideoHolder.get();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -620,6 +620,8 @@ private void setSubtitleButtonState() {
     }
 
     private void setSpeedButtonState(float speed) {
-        getController().setSpeedButtonState(speed != 1.0f);
+        if (getController() != null) {
+            getController().setSpeedButtonState(speed != 1.0f);
+        }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -473,7 +473,9 @@ public FormatItem getDefaultVideoFormat() {
         if (formatItem == null) {
             if (VERSION.SDK_INT <= 19) { // Android 4 playback crash fix (memory leak?)
                 formatItem = FormatItem.VIDEO_SD_AVC_30;
-            } else if (Helpers.isVP9Supported()) {
+            } else if (Helpers.isVP9ResolutionSupported(2160)) {
+                formatItem = FormatItem.VIDEO_4K_VP9_60;
+            } else if (Helpers.isVP9ResolutionSupported(1080)) {
                 formatItem = FormatItem.VIDEO_FHD_VP9_60;
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -467,8 +467,8 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                     } else if (compare > 0) {
                         // Select track with higher possible quality or by preferred codec
                         boolean higherQuality = mediaTrack.compare(result) >= 0;
-                        boolean preferByCodec = MediaTrack.preferByCodec(mediaTrack, result);
-                        if (higherQuality || preferByCodec) {
+                        //boolean preferByCodec = MediaTrack.preferByCodec(mediaTrack, result);
+                        if (higherQuality) { // || preferByCodec
                             // Get ready for group with multiple codecs: avc, av01
                             // Also handle situations where avc and av01 only (no vp9). E.g.: B4mIhE_15nc
                             if (MediaTrack.codecEquals(mediaTrack, originTrack)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -10,6 +10,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
+import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
 import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData;
 import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData.ColorScheme;
 
@@ -149,6 +150,7 @@ private void appendScaleUI(AppDialogPresenter settingsPresenter) {
             options.add(UiOptionItem.from(String.format("%sx", scale),
                     optionItem -> {
                         mMainUIData.setUIScale(scale);
+                        ViewManager.instance(getContext()).forceFinishTheApp();
                         mRestartApp = true;
                     },
                     Helpers.floatEquals(scale, mMainUIData.getUIScale())));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -280,7 +280,7 @@ public void disposeActions() {
     /**
      * Most tiny ui has 8 cards in a row or 24 in grid.
      */
-    public void continueGroupIfNeeded(Context context, VideoGroup group, Runnable onNeedContinue) {
+    public void shouldContinueTheGroup(Context context, VideoGroup group, Runnable onNeedContinue) {
         if (group == null) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -541,7 +541,7 @@ public void setPlaylistOrder(String playlistId, int playlistOrder) {
 
     public int getPlaylistOrder(String playlistId) {
         Integer order = mPlaylistOrder.get(playlistId);
-        return order != null ? order : MediaItemManager.PLAYLIST_ORDER_ADDED_DATE_NEWER_FIRST;
+        return order != null ? order : -1; // default order unpredictable (depends on site prefs)
     }
 
     public void addPendingStream(Video video) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/DateFormatter.java
Patch:
@@ -42,7 +42,7 @@ private static boolean is24HourLocale(Context context) {
 
         java.text.DateFormat natural =
                 java.text.DateFormat.getTimeInstance(
-                        java.text.DateFormat.LONG, new Locale(locale.getLanguage())); // Fix weird locale (e.g. ru_US)
+                        java.text.DateFormat.LONG, locale);
 
         if (natural instanceof SimpleDateFormat) {
             SimpleDateFormat sdf = (SimpleDateFormat) natural;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/DateFormatter.java
Patch:
@@ -42,7 +42,7 @@ private static boolean is24HourLocale(Context context) {
 
         java.text.DateFormat natural =
                 java.text.DateFormat.getTimeInstance(
-                        java.text.DateFormat.LONG, locale);
+                        java.text.DateFormat.LONG, new Locale(locale.getLanguage())); // Fix weird locale (e.g. ru_US)
 
         if (natural instanceof SimpleDateFormat) {
             SimpleDateFormat sdf = (SimpleDateFormat) natural;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -280,8 +280,8 @@ private void openVideoFromNext(Video current, boolean showLoadingMsg) {
             if (showLoadingMsg) {
                 MessageHelpers.showMessageThrottled(getActivity(), R.string.wait_data_loading);
             }
-            // Short videos ending fix (suggestions aren't loaded yet)
-            boolean isEnded = getController() != null && getController().getLengthMs() == getController().getPositionMs();
+            // Short videos next fix (suggestions aren't loaded yet)
+            boolean isEnded = getController() != null && Math.abs(getController().getLengthMs() - getController().getPositionMs()) < 100;
             if (isEnded) {
                 Utils.postDelayed(mHandler, mPendingNext, 1_000);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -230,7 +230,10 @@ private static Pair<String, String> getResolutionPrefixAndHeight(Format format)
             return null;
         }
 
+        // Make resolution calculation of the vertical videos more closer to the official app.
         int originHeight = getOriginHeight(Math.min(height, width));
+
+        // Ignore vertical videos completely. Only height matters.
         //int originHeight = getOriginHeight(height);
 
         String prefix = getResolutionPrefix(originHeight);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -230,8 +230,8 @@ private static Pair<String, String> getResolutionPrefixAndHeight(Format format)
             return null;
         }
 
-        //int originHeight = getOriginHeight(Math.min(height, width));
-        int originHeight = getOriginHeight(height);
+        int originHeight = getOriginHeight(Math.min(height, width));
+        //int originHeight = getOriginHeight(height);
 
         String prefix = getResolutionPrefix(originHeight);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -230,8 +230,8 @@ private static Pair<String, String> getResolutionPrefixAndHeight(Format format)
             return null;
         }
 
-        int originHeight = getOriginHeight(Math.min(height, width));
-        //int originHeight = getOriginHeight(height);
+        //int originHeight = getOriginHeight(Math.min(height, width));
+        int originHeight = getOriginHeight(height);
 
         String prefix = getResolutionPrefix(originHeight);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -12,7 +12,7 @@
 import android.view.ViewGroup;
 import android.widget.LinearLayout;
 import android.widget.TextView;
-import androidx.core.util.Pair;
+import android.util.Pair;
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
 import com.google.android.exoplayer2.Format;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MediaServiceManager.java
Patch:
@@ -1,7 +1,7 @@
 package com.liskovsoft.smartyoutubetv2.common.misc;
 
 import android.content.Context;
-import androidx.core.util.Pair;
+import android.util.Pair;
 import com.liskovsoft.appupdatechecker2.other.SettingsManager;
 import com.liskovsoft.mediaserviceinterfaces.MediaGroupManager;
 import com.liskovsoft.mediaserviceinterfaces.MediaItemManager;

File: openvpn/src/main/java/de/blinkt/openvpn/core/ConfigParser.java
Patch:
@@ -6,8 +6,7 @@
 
 import android.text.TextUtils;
 
-import androidx.core.util.Pair;
-
+import android.util.Pair;
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.Reader;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackInfoFormatter2.java
Patch:
@@ -15,7 +15,7 @@ public void setFormat(Format format) {
             return;
         }
 
-        mResolutionStr = TrackSelectorUtil.getResolutionLabel(format);
+        mResolutionStr = TrackSelectorUtil.getShortResolutionLabel(format);
 
         int fpsNum = extractFps(format);
         mFpsStr = fpsNum == 0 ? "" : String.valueOf(fpsNum);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -100,7 +100,7 @@ public int inBounds(MediaTrack track2) {
         if (isPreset) {
             // Overcome non-standard aspect ratio by getting resolution label
             boolean respectPresetsFps = !sIsNoFpsPresetsEnabled ||
-                    sizeEquals(format.height, TrackSelectorUtil.getResolutionLabelByHeight(track2.format.height));
+                    sizeEquals(format.height, TrackSelectorUtil.getOriginHeight(track2.format.height));
             //return compare(track2, COMPARE_TYPE_IN_BOUNDS_PRESET) : // EXPERIMENT: replaced multi fps with strict fps in presets
             return compare(track2, isMultiFpsFormat || respectPresetsFps ? COMPARE_TYPE_IN_BOUNDS_PRESET : COMPARE_TYPE_IN_BOUNDS_PRESET_NO_FPS);
         } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -263,12 +263,13 @@ public FormatItem getVideoFormat() {
     public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
         Log.d(TAG, "onTracksChanged: start: groups length: " + trackGroups.length);
 
-        notifyOnVideoLoad();
-
         if (trackGroups.length == 0) {
             Log.i(TAG, "onTracksChanged: Hmm. Strange. Received empty groups, no selections. Why is this happens only on next/prev videos?");
+            return;
         }
 
+        notifyOnVideoLoad();
+
         for (TrackSelection selection : trackSelections.getAll()) {
             if (selection != null) {
                 // EXO: 2.12.1

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -1,6 +1,8 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback.managers;
 
 import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
 import android.view.KeyEvent;
 import androidx.annotation.Nullable;
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
@@ -439,7 +441,7 @@ private void setVolume(int volume) {
     private void movePlayerToForeground() {
         Utils.movePlayerToForeground(getActivity());
         if (getController() == null || !Utils.checkActivity(getActivity())) { // player isn't started yet or closed
-            RxUtils.runAsync(() -> Utils.movePlayerToForeground(getActivity()), 5_000);
+            new Handler(Looper.myLooper()).postDelayed(() -> Utils.movePlayerToForeground(getActivity()), 5_000);
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -122,6 +122,8 @@ private void updateSponsorSegmentsAndWatch(Video item) {
 
         // Reset colors
         getController().setSeekBarSegments(null);
+        // Reset previously found segment (fix no dialog popup)
+        mIsSameSegment = false;
 
         mSegmentsAction = mMediaItemManager.getSponsorSegmentsObserve(item.videoId, mContentBlockData.getEnabledCategories())
                 .subscribeOn(Schedulers.io())

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -574,6 +574,7 @@ public Video copy() {
         video.bgImageUrl = bgImageUrl;
         video.isLive = isLive;
         video.isUpcoming = isUpcoming;
+        video.nextMediaItem = nextMediaItem;
 
         if (group != null) {
             video.group = group.copy(); // Needed for proper multi row fragments sync (row id == group id)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -49,8 +49,7 @@ public final class DebugInfoManager implements Runnable, Player.EventListener {
     private static final String TAG = DebugInfoManager.class.getSimpleName();
     private static final int REFRESH_INTERVAL_MS = 1000;
     private static final String NOT_AVAILABLE = "none";
-    private static final String DEFAULT = "default";
-    private float mTextSize = 15;
+    private final float mTextSize;
 
     private final SimpleExoPlayer mPlayer;
     private final ViewGroup mDebugViewGroup;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -681,7 +681,9 @@ private void continueGroup(VideoGroup group) {
                             }
                         },
                         () -> {
-                            getView().showProgressBar(false);
+                            if (getView() != null) {
+                                getView().showProgressBar(false);
+                            }
                         }
                 );
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -740,7 +740,7 @@ protected String getSearchBarText() {
      */
     protected void focusOnResults() {
         if (mRowsSupportFragment == null || mRowsSupportFragment.getVerticalGridView() == null
-                || mResultAdapter.size() == 0) {
+                || mResultAdapter == null || mResultAdapter.size() == 0) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -186,6 +186,7 @@ public void loadSuggestions(Video video) {
                         error -> {
                             Log.e(TAG, "loadSuggestions error: %s", error.getMessage());
                             error.printStackTrace();
+                            getController().clearSuggestions(); // clear previous videos
                         }
                 );
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -542,8 +542,10 @@ public static void showPlaybackQueueDialog(Context context, OnVideoClick onClick
         Playlist playlist = Playlist.instance();
 
         for (Video video : playlist.getAll()) {
+            String title = video.getTitle();
+            String author = video.extractAuthor();
             options.add(0, UiOptionItem.from( // Add to start (recent videos on top)
-                    String.format("%s - %s", video.getTitle(), video.extractAuthor()),
+                    String.format("%s - %s", title != null ? title : "...", author != null ? author : "..."),
                     optionItem -> {
                         video.fromQueue = true;
                         onClick.onClick(video);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -587,7 +587,7 @@ private int getCurrentVideoIndex() {
             //    mEventListener.onScrollEnd((Video) adapter.get(adapter.size() - 1));
             //}
 
-            // Select last possible item on fail
+            // Select last possible item on fail (queue doesn't contain current video)
             if (index == -1 && getVideo().hasNextPageKey()) {
                 index = adapter.size() - 1;
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -577,7 +577,7 @@ private void setPlaylistAddButtonStateCached() {
     }
 
     private void setPlaylistAddButtonState() {
-        if (mVideoPlaylistInfos == null) {
+        if (mVideoPlaylistInfos == null || getController() == null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -395,7 +395,9 @@ public void moveSectionUp(BrowseSection section) {
         updateSections();
 
         // Move current focus
-        getView().selectSection(mGeneralData.getSectionIndex(section.getId()), false);
+        if (getView() != null) {
+            getView().selectSection(mGeneralData.getSectionIndex(section.getId()), false);
+        }
     }
 
     public void moveSectionDown(BrowseSection section) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/ExoFormatItem.java
Patch:
@@ -35,7 +35,7 @@ public class ExoFormatItem implements FormatItem {
     private String mFormatId;
     private boolean mIsPreset;
 
-    synchronized public static List<FormatItem> from(Set<MediaTrack> mediaTracks) {
+    public static List<FormatItem> from(Set<MediaTrack> mediaTracks) {
         if (mediaTracks == null) {
             return null;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/fragments/GridFragment.java
Patch:
@@ -67,7 +67,7 @@ public VerticalGridPresenter getGridPresenter() {
      * Returns R.id.browse_grid
      */
     public VerticalGridView getBrowseGrid() {
-        return mGridViewHolder.getGridView();
+        return mGridViewHolder != null ? mGridViewHolder.getGridView() : null;
     }
 
     /**

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/fragments/MultiGridFragment.java
Patch:
@@ -99,11 +99,11 @@ public VerticalGridPresenter getGridPresenter2() {
     }
 
     public VerticalGridView getBrowseGrid1() {
-        return mGridViewHolder1.getGridView();
+        return mGridViewHolder1 != null ? mGridViewHolder1.getGridView() : null;
     }
 
     public VerticalGridView getBrowseGrid2() {
-        return mGridViewHolder2.getGridView();
+        return mGridViewHolder2 != null ? mGridViewHolder2.getGridView() : null;
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -240,7 +240,7 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
             if (group != null && !group.isEmpty()) {
                 VideoGroup videoGroup = VideoGroup.from(group);
 
-                // Merge remote queue with player's queue (when new queue added or user clicked on video)
+                // Merge remote queue with player's queue (when phone cast just started or user clicked on playlist item)
                 if (groupIndex == 0 && video.isRemote && (video.remotePlaylistId != null || !Playlist.instance().hasNext())) {
                     videoGroup.removeAllBefore(video);
 
@@ -274,7 +274,8 @@ private void disposeActions() {
     }
 
     private void appendUserQueueIfNeeded(Video video) {
-        if (video.isRemote || !Playlist.instance().hasNext()) {
+        // Exclude situations when phone cast just started or next item is null
+        if ((video.isRemote && video.remotePlaylistId != null) || !Playlist.instance().hasNext()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -539,7 +539,7 @@ public static void showPlaybackQueueDialog(Context context, OnVideoClick onClick
 
         for (Video video : playlist.getAll()) {
             options.add(0, UiOptionItem.from( // Add to start (recent videos on top)
-                    String.format("%s - %s", video.title, video.extractAuthor()),
+                    String.format("%s - %s", video.getTitle(), video.extractAuthor()),
                     optionItem -> {
                         video.fromQueue = true;
                         onClick.onClick(video);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -240,8 +240,8 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
             if (group != null && !group.isEmpty()) {
                 VideoGroup videoGroup = VideoGroup.from(group);
 
-                // Merge remote queue with player's queue
-                if (groupIndex == 0 && video.isRemote && video.remotePlaylistId != null) {
+                // Merge remote queue with player's queue (when new queue added or user clicked on video)
+                if (groupIndex == 0 && video.isRemote && (video.remotePlaylistId != null || !Playlist.instance().hasNext())) {
                     videoGroup.removeAllBefore(video);
 
                     videoGroup.setTitle(getActivity().getString(R.string.action_playback_queue));

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -788,6 +788,9 @@ public void setVideo(Video video) {
     @Override
     public void setArtwork(String url) {
         mBackgroundManager.setBackground(url);
+        if (url != null && containsMedia()) {
+            restartEngine();
+        }
     }
 
     private CharSequence appendLive(String title, boolean isLive) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.os.Build;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.smartyoutubetv2.common.R;
 
@@ -113,7 +114,8 @@ public void setVideoGridScale(float scale) {
     }
 
     public float getVideoGridScale() {
-        return mVideoGridScale;
+        // Fixing the bug with chaotic cards positioning on Android 4.4 devices.
+        return Build.VERSION.SDK_INT <= 19 ? 1.2f : mVideoGridScale;
     }
 
     public void setUIScale(float scale) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/VideoGridFragment.java
Patch:
@@ -157,7 +157,7 @@ private void restorePosition() {
     }
 
     /**
-     * Disable scrolling on partially updated grid. This prevent cards from misbehaving.
+     * Disable scrolling on partially updated grid. This shouldn't fix card position bug on Android 4.4.
      */
     private void freeze(boolean freeze) {
         if (getBrowseGrid() != null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/SubtitleTrack.java
Patch:
@@ -29,7 +29,7 @@ public int compare(MediaTrack track2) {
         //    result = 0;
         //}
 
-        if (Helpers.startsWith(track2.format.language, format.language)) { // exact match
+        if (Helpers.equals(track2.format.language, format.language)) { // exact match
             result = 0;
         } else if (Helpers.startsWith(track2.format.language, trim(format.language))) { // partial match
             // Use autogenerated subs only if ones was selected before

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -125,6 +125,7 @@ public void onEngineReleased() {
         }
 
         TickleManager.instance().removeListener(this);
+        mTickleLeft = 0;
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -206,8 +206,8 @@ private void prepareAndShowDialogSigned() {
         appendRemoveFromHistoryButton();
         appendAddToRecentPlaylistButton();
         appendAddToPlaylistButton();
-        appendNotInterestedButton();
         appendCreatePlaylistButton();
+        appendNotInterestedButton();
         appendRenamePlaylistButton();
         appendPlaylistOrderButton();
         appendOpenChannelButton();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -252,7 +252,7 @@ private void restoreState() {
         String[] split = Helpers.splitObjectLegacy(data);
 
         mIsCardAnimatedPreviewsEnabled = Helpers.parseBoolean(split, 0, true);
-        mVideoGridScale = Helpers.parseFloat(split, 1, 1.2f); // 3 cards in a row like in the original
+        mVideoGridScale = Helpers.parseFloat(split, 1, 1.0f); // 4 cards in a row
         mUIScale = Helpers.parseFloat(split, 2, 1.0f);
         mColorSchemeIndex = Helpers.parseInt(split, 3, 1);
         mIsCardMultilineTitleEnabled = Helpers.parseBoolean(split, 4, true);
@@ -264,7 +264,8 @@ private void restoreState() {
         mIsUploadsAutoLoadEnabled = Helpers.parseBoolean(split, 10, true);
         mCardTextScrollSpeed = Helpers.parseFloat(split, 11, 2);
         mMenuItems = Helpers.parseInt(split, 12,
-                Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_ADD_TO_QUEUE | MENU_ITEM_SELECT_ACCOUNT | MENU_ITEM_PLAY_VIDEO)); // all except this items
+                Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_SELECT_ACCOUNT | MENU_ITEM_PLAY_VIDEO |
+                        MENU_ITEM_SUBSCRIBE | MENU_ITEM_OPEN_DESCRIPTION | MENU_ITEM_PIN_TO_SIDEBAR)); // all except this items
         mButtons = Helpers.parseInt(split, 13, Integer.MAX_VALUE); // all
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -250,7 +250,7 @@ private void restoreData() {
         mIsPlaybackNotificationsDisabled = Helpers.parseBoolean(split, 11, !Helpers.isAndroidTV(mPrefs.getContext()));
         mIsTunneledPlaybackEnabled = Helpers.parseBoolean(split, 12, false);
         // Example usage: Integer.MAX_VALUE & ~(PlayerTweaksData.PLAYER_BUTTON_VIDEO_INFO | PlayerTweaksData.PLAYER_BUTTON_SEEK_INTERVAL) // all buttons, except info button
-        mPlayerButtons = Helpers.parseInt(split, 13, Integer.MAX_VALUE & ~(PlayerTweaksData.PLAYER_BUTTON_SEEK_INTERVAL | PlayerTweaksData.PLAYER_BUTTON_PLAYBACK_QUEUE)); // all buttons, except these ones
+        mPlayerButtons = Helpers.parseInt(split, 13, Integer.MAX_VALUE & ~(PlayerTweaksData.PLAYER_BUTTON_SEEK_INTERVAL)); // all buttons, except these ones
         mIsBufferingFixEnabled = Helpers.parseBoolean(split, 14, false);
         mIsNoFpsPresetsEnabled = Helpers.parseBoolean(split, 15, false);
         mIsRememberPositionOfShortVideosEnabled = Helpers.parseBoolean(split, 16, false);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -576,7 +576,7 @@ private void appendPlaylistOrderButton() {
             return;
         }
 
-        if (mVideo == null || !BrowsePresenter.instance(getContext()).isPlaylistsSection() || !BrowsePresenter.instance(getContext()).inForeground()) {
+        if (mVideo == null || !BrowsePresenter.instance(getContext()).isPlaylistsSectionActive()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -175,7 +175,7 @@ private void initPinnedSections() {
         for (Video item : pinnedItems) {
             if (item != null) {
                 if (item.extra == -1) {
-                    BrowseSection section = new BrowseSection(item.hashCode(), item.title, BrowseSection.TYPE_GRID, item.cardImageUrl, true, item);
+                    BrowseSection section = new BrowseSection(item.hashCode(), item.title, BrowseSection.TYPE_GRID, item.cardImageUrl, false, item);
                     mSections.add(section);
                 } else {
                     BrowseSection section = mSectionsMapping.get(item.extra);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -433,7 +433,7 @@ public void enableSection(int sectionId, boolean enable) {
     public void pinItem(Video item) {
         mGeneralData.addPinnedItem(item);
 
-        BrowseSection section = new BrowseSection(item.hashCode(), item.title, BrowseSection.TYPE_GRID, item.cardImageUrl, true, item);
+        BrowseSection section = new BrowseSection(item.hashCode(), item.title, BrowseSection.TYPE_GRID, item.cardImageUrl, false, item);
         mSections.add(section);
         mGridMapping.put(item.hashCode(), createPinnedAction(item));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -174,8 +174,8 @@ protected void appendSavePlaylistButton() {
             return;
         }
 
-        // To prevent accidental deletion, allow removing user playlist only from Playlists section
-        if (original.belongsToPlaylists() && (!BrowsePresenter.instance(getContext()).isPlaylistsSection() || !BrowsePresenter.instance(getContext()).inForeground())) {
+        // Allow removing user playlist only from Playlists section to prevent accidental deletion
+        if (BrowsePresenter.instance(getContext()).isPlaylistsSection() && !BrowsePresenter.instance(getContext()).inForeground()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -137,7 +137,7 @@ public boolean containsAfterCurrent(Video video) {
 
         List<Video> afterCurrent = getAllAfterCurrent();
 
-        return afterCurrent.contains(video);
+        return afterCurrent != null && afterCurrent.contains(video);
     }
 
     ///**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -215,6 +215,8 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
 
                 // Merge remote queue with player's queue
                 if (groupIndex == 0 && video.isRemote && video.remotePlaylistId != null) {
+                    videoGroup.removeAllBefore(video);
+
                     videoGroup.setTitle(getActivity().getString(R.string.action_playback_queue));
                     videoGroup.setId(videoGroup.getTitle().hashCode());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -218,7 +218,7 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
                     videoGroup.setTitle(getActivity().getString(R.string.action_playback_queue));
                     videoGroup.setId(videoGroup.getTitle().hashCode());
 
-                    Playlist.instance().removeAllAfterCurrent();
+                    //Playlist.instance().removeAllAfterCurrent();
                     Playlist.instance().addAll(videoGroup.getVideos());
                     Playlist.instance().setCurrent(video);
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -118,7 +118,7 @@ private void continueGroup(VideoGroup group) {
     private void syncCurrentVideo(MediaItemMetadata mediaItemMetadata, Video video) {
         // NOTE: Skip upcoming (no media) because default title more informative (e.g. has scheduled time).
         // NOTE: Upcoming videos metadata wrongly reported as live
-        if (getController().containsMedia()) {
+        if (getController().containsMedia() || video.getPlayerTitle() == null) {
             video.sync(mediaItemMetadata, PlayerData.instance(getActivity()).isAbsoluteDateEnabled());
             getController().setVideo(video);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -248,7 +248,7 @@ private void processCommand(Command command) {
                 openNewVideo(newVideo);
                 break;
             case Command.TYPE_UPDATE_PLAYLIST:
-                if (getController() != null) {
+                if (getController() != null && mConnected) {
                     Video video = getController().getVideo();
                     if (video != null) {
                         video.remotePlaylistId = command.getPlaylistId();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -214,7 +214,7 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
                 VideoGroup videoGroup = VideoGroup.from(group);
 
                 // Merge remote queue with player's queue
-                if (groupIndex == 0 && video.isRemote) {
+                if (groupIndex == 0 && video.isRemote && video.remotePlaylistId != null) {
                     videoGroup.setTitle(getActivity().getString(R.string.action_playback_queue));
                     videoGroup.setId(videoGroup.getTitle().hashCode());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoaderManager.java
Patch:
@@ -147,7 +147,7 @@ public void loadSuggestions(Video video) {
 
         // NOTE: Load suggestions from mediaItem isn't robust. Because playlistId may be initialized from RemoteControlManager.
         // Video might be loaded from Channels section (has playlistParams)
-        observable = mediaItemManager.getMetadataObserve(video.videoId, video.playlistId, video.playlistIndex, video.playlistParams);
+        observable = mediaItemManager.getMetadataObserve(video.videoId, video.getPlaylistId(), video.playlistIndex, video.playlistParams);
 
         clearSuggestionsIfNeeded(video);
 
@@ -165,7 +165,7 @@ private void clearSuggestionsIfNeeded(Video video) {
             return;
         }
 
-        // Free a lot of memory
+        // Frees a lot of memory
         if (video.isRemote || !getController().isSuggestionsShown()) {
             getController().clearSuggestions();
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -572,10 +572,11 @@ private int getCurrentVideoIndex() {
 
         // NOTE: skip first row. It's PlaybackControlsRow
         Object row = mRowsAdapter != null && mRowsAdapter.size() > 1 ? mRowsAdapter.get(1) : null;
+        int index = -1;
 
         if (row instanceof ListRow) {
             VideoGroupObjectAdapter adapter = (VideoGroupObjectAdapter) ((ListRow) row).getAdapter();
-            int index = adapter.indexOfAlt(getVideo());
+            index = adapter.indexOfAlt(getVideo());
 
             // Below doesn't work. onBindRowViewHolder won't called on update hidden list.
             //if (index == -1) {
@@ -585,7 +586,7 @@ private int getCurrentVideoIndex() {
             //return index == -1 ? adapter.size() - 1 : index; // select last possible item on fail
         }
 
-        return -1;
+        return index;
     }
 
     private void setupEventListeners() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -182,7 +182,8 @@ public static String getResolutionLabel(Format format) {
             return null;
         }
 
-        return getResolutionLabelByHeight(Math.min(height, width));
+        //return getResolutionLabelByHeight(Math.min(height, width));
+        return getResolutionLabelByHeight(height);
     }
 
     public static String getResolutionLabelByHeight(int height) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/browse/NavigateTitleView.java
Patch:
@@ -213,6 +213,9 @@ private void loadAccountIcon(String url) {
             return;
         }
 
+        // View with GONE state hase zero width and height
+        mAccountView.setVisibility(View.VISIBLE);
+
         Glide.with(getContext())
                 .load(url)
                 .apply(ViewUtil.glideOptions())

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -63,6 +63,7 @@ public void onViewResumed() {
         mAutoFrameRateHelper.setFpsCorrectionEnabled(mPlayerData.isAfrFpsCorrectionEnabled());
         mAutoFrameRateHelper.setResolutionSwitchEnabled(mPlayerData.isAfrResSwitchEnabled(), false);
         mAutoFrameRateHelper.setDoubleRefreshRateEnabled(mPlayerData.isDoubleRefreshRateEnabled());
+        mAutoFrameRateHelper.setSkip24RateEnabled(mPlayerData.isSkip24RateEnabled());
 
         addUiOptions();
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/browse/NavigateTitleView.java
Patch:
@@ -203,7 +203,7 @@ private void updateAccountIcon() {
             } else {
                 Colors orbColors = mAccountView.getOrbColors();
                 mAccountView.setOrbColors(new Colors(orbColors.color, orbColors.brightColor, ContextCompat.getColor(getContext(), R.color.orb_icon_color)));
-                mAccountView.setOrbIcon(getContext().getDrawable(R.drawable.browse_title_account));
+                mAccountView.setOrbIcon(ContextCompat.getDrawable(getContext(), R.drawable.browse_title_account));
             }
         });
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/browse/NavigateTitleView.java
Patch:
@@ -23,8 +23,8 @@
 import com.liskovsoft.smartyoutubetv2.common.app.views.PlaybackView;
 import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
+import com.liskovsoft.smartyoutubetv2.common.prefs.GeneralData;
 import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData;
-import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerData;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.tooltips.TooltipCompatHandler;
 import com.liskovsoft.smartyoutubetv2.tv.ui.widgets.time.DateTimeView;
@@ -138,7 +138,7 @@ protected void onAttachedToWindow() {
         //ViewUtil.setTextScrollSpeed(mPipTitle, MainUIData.instance(getContext()).getCardTextScrollSpeed());
         TooltipCompatHandler.setTooltipText(mExitPip, getContext().getString(R.string.return_to_background_video));
 
-        if (PlayerData.instance(getContext()).isGlobalClockEnabled()) {
+        if (GeneralData.instance(getContext()).isGlobalClockEnabled()) {
             mGlobalClock = (DateTimeView) findViewById(R.id.global_time);
             mGlobalClock.showDate(false);
             mGlobalClock.setVisibility(View.VISIBLE);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerTweaksData.java
Patch:
@@ -230,7 +230,7 @@ private void restoreData() {
         mIsSnapToVsyncDisabled = Helpers.parseBoolean(split, 2, false);
         mIsProfileLevelCheckSkipped = Helpers.parseBoolean(split, 3, false);
         mIsSWDecoderForced = Helpers.parseBoolean(split, 4, false);
-        mIsTextureViewEnabled = Helpers.parseBoolean(split, 5, false);
+        mIsTextureViewEnabled = Helpers.parseBoolean(split, 5, VERSION.SDK_INT <= 19); // Android 4 playback crash fix
         // Need to be enabled (?) on older version of ExoPlayer (e.g. 2.10.6).
         // It's because there's no tweaks for modern devices.
         mIsSetOutputSurfaceWorkaroundEnabled = Helpers.parseBoolean(split, 7, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -59,6 +59,7 @@ public final class Video implements Parcelable {
     public int extra = -1;
     public int pendingPosMs;
     public boolean fromQueue;
+    public boolean isPending;
 
     public Video() {
        // NOP

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -140,7 +140,7 @@ private void initVideoStateService() {
 
     private void initStreamReminderService() {
         if (getContext() != null) {
-            StreamReminderService.instance(getContext());
+            StreamReminderService.instance(getContext()).start();
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -181,7 +181,7 @@ public static void updateRemoteControlService(Context context) {
             return;
         }
 
-        if (RemoteControlData.instance(context).isRunInBackgroundEnabled()) {
+        if (RemoteControlData.instance(context).isDeviceLinkEnabled()) {
             // Service that prevents the app from destroying
             startService(context, RemoteControlService.class);
         } else {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/ViewUtil.java
Patch:
@@ -71,7 +71,9 @@ public static void disableMarquee(TextView... textViews) {
             textView.setEllipsize(TruncateAt.END);
 
             // Line below cause broken grid layout on Android 4 and older
-            //textView.setHorizontallyScrolling(false);
+            if (VERSION.SDK_INT > 19) {
+                textView.setHorizontallyScrolling(false);
+            }
 
             // Fix: text disappear on rtl languages
             if (VERSION.SDK_INT > 17 && BidiFormatter.getInstance().isRtlContext()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -251,7 +251,7 @@ private void restoreState() {
         String[] split = Helpers.splitObjectLegacy(data);
 
         mIsCardAnimatedPreviewsEnabled = Helpers.parseBoolean(split, 0, true);
-        mVideoGridScale = Helpers.parseFloat(split, 1, 1.0f);
+        mVideoGridScale = Helpers.parseFloat(split, 1, 1.2f); // 3 cards in a row like in the original
         mUIScale = Helpers.parseFloat(split, 2, 1.0f);
         mColorSchemeIndex = Helpers.parseInt(split, 3, 1);
         mIsCardMultilineTitleEnabled = Helpers.parseBoolean(split, 4, true);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/CustomListRowPresenter.java
Patch:
@@ -6,6 +6,6 @@
 public class CustomListRowPresenter extends ListRowPresenter {
     public CustomListRowPresenter() {
         super(ViewUtil.FOCUS_ZOOM_FACTOR, ViewUtil.USE_FOCUS_DIMMER);
-        setSelectEffectEnabled(ViewUtil.SELECT_EFFECT_ENABLED);
+        setSelectEffectEnabled(ViewUtil.ROW_SELECT_EFFECT_ENABLED);
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/CustomVerticalGridPresenter.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.tv.presenter;
 
-import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/settings/SettingsGridFragment.java
Patch:
@@ -21,13 +21,13 @@
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.LeanbackActivity;
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.UriBackgroundManager;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.fragments.GridFragment;
+import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
 import java.util.ArrayList;
 import java.util.List;
 
 public class SettingsGridFragment extends GridFragment implements SettingsCategoryFragment {
     private static final String TAG = SettingsGridFragment.class.getSimpleName();
-    private static final int ZOOM_FACTOR = FocusHighlight.ZOOM_FACTOR_SMALL;
     private ArrayObjectAdapter mSettingsAdapter;
     private BrowsePresenter mMainPresenter;
     private UriBackgroundManager mBackgroundManager;
@@ -67,7 +67,7 @@ private void setupEventListeners() {
     }
 
     private void setupAdapter() {
-        VerticalGridPresenter presenter = new VerticalGridPresenter(ZOOM_FACTOR, false);
+        VerticalGridPresenter presenter = new VerticalGridPresenter(ViewUtil.FOCUS_ZOOM_FACTOR, ViewUtil.USE_FOCUS_DIMMER);
         presenter.setNumberOfColumns(GridFragmentHelper.getMaxColsNum(getContext(), R.dimen.settings_card_width));
         setGridPresenter(presenter);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -117,7 +117,7 @@ public long getPositionMs() {
     @Override
     public void setPositionMs(long positionMs) {
         // Url list videos at load stage has undefined (-1) length. So, we need to remove length check.
-        if (mPlayer != null && positionMs >= 0) {
+        if (mPlayer != null && positionMs >= 0 && positionMs <= getLengthMs()) {
             mPlayer.seekTo(positionMs);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUIController.java
Patch:
@@ -29,4 +29,5 @@ public interface PlaybackUIController {
     void showError(String errorInfo);
     void showProgressBar(boolean show);
     void setSeekBarSegments(List<SeekBarSegment> segments);
+    void updateEndingTime();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -163,6 +163,8 @@ public void onVideoLoaded(Video item) {
         if (mPlayerData.getSeekPreviewMode() != PlayerData.SEEK_PREVIEW_NONE) {
             getController().loadStoryboard();
         }
+
+        getController().updateEndingTime();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/TickleManager.java
Patch:
@@ -15,7 +15,7 @@ public class TickleManager {
     // Usually listener is a view. So use weak refs to not hold it forever.
     private final List<WeakReference<TickleListener>> mListeners = new ArrayList<>();
     private boolean mIsEnabled = true;
-    private static final long DEFAULT_INTERVAL_MS = 10_000;
+    private static final long DEFAULT_INTERVAL_MS = 60_000;
     private long mIntervalMs = DEFAULT_INTERVAL_MS;
 
     public interface TickleListener {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -145,7 +145,7 @@ public boolean onNextClicked() {
 
     @Override
     public void onFinish() {
-        mPlaylist.clear();
+        mPlaylist.clearPosition();
     }
 
     public void loadPrevious() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -298,7 +298,7 @@ public void onVideoItemSelected(Video item) {
             return;
         }
 
-        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads()) {
+        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads() && !item.hasVideo()) {
             if (mMainUIData.isUploadsAutoLoadEnabled()) {
                 updateMultiGrid(item);
             } else {
@@ -316,7 +316,7 @@ public void onVideoItemClicked(Video item) {
         }
 
         // Check that channels new look enabled and we're on the first column
-        if (isMultiGridChannelUploadsSection() && !item.hasVideo()) {
+        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads() && !item.hasVideo()) {
             updateMultiGrid(item);
         } else {
             VideoActionPresenter.instance(getContext()).apply(item);
@@ -331,7 +331,7 @@ public void onVideoItemLongClicked(Video item) {
             return;
         }
 
-        if (item.belongsToChannelUploads()) { // We need to be sure we exactly on Channels section
+        if (item.belongsToChannelUploads() && !item.hasVideo()) { // We need to be sure we exactly on Channels section
             ChannelUploadsMenuPresenter.instance(getContext()).showMenu(item, (videoItem, action) -> {
                 if (action == VideoMenuCallback.ACTION_UNSUBSCRIBE) { // works with any uploads section look
                     removeItem(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -15,6 +15,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.AccountSelectionPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.menu.VideoMenuPresenter.VideoMenuCallback;
 import com.liskovsoft.smartyoutubetv2.common.misc.MediaServiceManager;
+import com.liskovsoft.smartyoutubetv2.common.prefs.GeneralData;
 import com.liskovsoft.smartyoutubetv2.common.utils.AppDialogUtil;
 import com.liskovsoft.smartyoutubetv2.common.utils.SimpleEditDialog;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaItemManager;
@@ -243,6 +244,7 @@ private void toggleSavePlaylist(Video video) {
     private void removePlaylist(Video video) {
         MediaItemManager manager = YouTubeMediaItemManager.instance();
         Observable<Void> action = manager.removePlaylistObserve(video.playlistId);
+        GeneralData.instance(getContext()).setPlaylistOrder(video.playlistId, -1);
         RxUtils.execute(action,
                 () -> MessageHelpers.showMessage(getContext(), video.title + ": " + getContext().getString(R.string.cant_delete_empty_playlist)),
                 () -> MessageHelpers.showMessage(getContext(), video.title + ": " + getContext().getString(R.string.removed_from_playlists))

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -316,7 +316,7 @@ public void onVideoItemClicked(Video item) {
         }
 
         // Check that channels new look enabled and we're on the first column
-        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads()) {
+        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads() && !item.hasVideo()) {
             updateMultiGrid(item);
         } else {
             VideoActionPresenter.instance(getContext()).apply(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -342,7 +342,7 @@ private void showRenamePlaylistDialog(Video video) {
                                 Observable<Void> action = manager.renamePlaylistObserve(firstItem.getPlaylistId(), newValue);
                                 RxUtils.execute(
                                         action,
-                                        () -> MessageHelpers.showMessage(getContext(), R.string.cant_rename_foreign_playlist),
+                                        () -> MessageHelpers.showMessage(getContext(), R.string.cant_do_this_for_foreign_playlist),
                                         () -> {
                                             video.title = newValue;
                                             BrowsePresenter.instance(getContext()).syncItem(video);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/AppDialogUtil.java
Patch:
@@ -17,7 +17,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
-import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.dialogs.menu.VideoMenuPresenter.VideoMenuCallback;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem.VideoPreset;
@@ -474,10 +473,10 @@ public static void showPlaylistOrderDialog(Context context, String playlistId) {
                 if (optionItem.isSelected()) {
                     RxUtils.execute(
                             YouTubeMediaItemManager.instance().setPlaylistOrderObserve(playlistId, pair[1]),
+                            () -> MessageHelpers.showMessage(context, R.string.cant_do_this_for_foreign_playlist),
                             () -> {
                                 generalData.setPlaylistOrder(playlistId, pair[1]);
                                 MessageHelpers.showMessage(context, R.string.msg_done);
-                                //BrowsePresenter.instance(context).refresh();
                             }
                     );
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -443,9 +443,7 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                         } else if (!MediaTrack.codecEquals(result, originTrack) && !MediaTrack.preferByCodec(result, mediaTrack)) {
                             result = mediaTrack;
                         }
-                    } else if (compare > 0 &&
-                            (mediaTrack.compare(result) >= 0 ||              // Select track with higher possible quality
-                            MediaTrack.preferByCodec(mediaTrack, result))) { // Or prefer codec
+                    } else if (compare > 0 && mediaTrack.compare(result) >= 0) { // Select track with higher possible quality
                         // Get ready for group with multiple codecs: avc, av01
                         // Also handle situations where avc and av01 only (no vp9). E.g.: B4mIhE_15nc
                         if (MediaTrack.codecEquals(mediaTrack, originTrack)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -278,6 +278,7 @@ private void loadVideo(Video item) {
             mPlaylist.setCurrent(item);
             mLastVideo = item;
             getController().setVideo(item);
+            getController().setArtwork(null);
             loadFormatInfo(item);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -460,8 +460,7 @@ private void appendSubscribeButton() {
 
         mDialogPresenter.appendSingleButton(
                 UiOptionItem.from(getContext().getString(
-                        // Note: Undefined section usually is subscribed channels content
-                        mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads() || mVideo.belongsToUndefined() ?
+                        mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads() ?
                                 R.string.unsubscribe_from_channel : R.string.subscribe_unsubscribe_from_channel),
                         optionItem -> toggleSubscribe()));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -266,7 +266,8 @@ protected void appendCreatePlaylistButton() {
 
         Video original = getVideo() != null ? getVideo() : new Video();
 
-        if (!original.belongsToPlaylists() && !original.hasVideo() && !BrowsePresenter.instance(getContext()).isPlaylistsSection()) {
+        if (!original.belongsToPlaylists() && !original.hasVideo() &&
+                !(BrowsePresenter.instance(getContext()).inForeground() && BrowsePresenter.instance(getContext()).isPlaylistsSection())) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -305,7 +305,7 @@ private void appendOpenPlaylistButton() {
             return;
         }
 
-        if (mVideo == null || !mVideo.hasPlaylist()) {
+        if (mVideo == null || !mVideo.hasPlaylist() || mVideo.belongsToSamePlaylistGroup()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/SimpleEditDialog.java
Patch:
@@ -23,9 +23,9 @@ public static void show(Context context, String defaultValue, OnChange onChange,
         LayoutInflater inflater = LayoutInflater.from(context);
         View contentView = inflater.inflate(R.layout.simple_edit_dialog, null);
 
-        EditText editField = (EditText) contentView.findViewById(R.id.simple_edit_value);
-        editField.setText(defaultValue);
-        KeyHelpers.fixEnterKey(editField);
+        KeyHelpers.fixEnterKey(contentView.findViewById(R.id.simple_edit_value));
+
+        ((EditText) contentView.findViewById(R.id.simple_edit_value)).setText(defaultValue);
 
         // keep empty, will override below.
         // https://stackoverflow.com/a/15619098/5379584

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -136,11 +136,11 @@ private void removeItem(List<Video> items, int action) {
         updateView(removedGroup, view);
     }
 
-    private void syncItem(Video item) {
+    public void syncItem(Video item) {
         syncItem(Collections.singletonList(item));
     }
 
-    private void syncItem(List<Video> items) {
+    public void syncItem(List<Video> items) {
         if (items.size() == 0) {
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -380,8 +380,9 @@ private void restoreSpeed() {
         Video item = getVideo();
         boolean isLiveThreshold = getController().getLengthMs() - getController().getPositionMs() < LIVE_THRESHOLD_MS;
         boolean isLive = item.isLive && isLiveThreshold;
+        boolean isMusic = getController().getLengthMs() < MUSIC_VIDEO_LENGTH_MS;
 
-        if (isLive || item.belongsToMusic()) {
+        if (isLive || isMusic) {
             getController().setSpeed(1.0f);
         } else {
             State state = mStateService.getByVideoId(item.videoId);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/SettingsCardPresenter.java
Patch:
@@ -10,6 +10,7 @@
 import androidx.leanback.widget.Presenter;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.SettingsItem;
+import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
@@ -48,6 +49,7 @@ public ViewHolder onCreateViewHolder(ViewGroup parent) {
 
             if (hasFocus) {
                 ViewUtil.enableMarquee(textView);
+                ViewUtil.setTextScrollSpeed(textView, MainUIData.instance(context).getCardTextScrollSpeed());
             } else {
                 ViewUtil.disableMarquee(textView);
             }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/browse/NavigateTitleView.java
Patch:
@@ -17,6 +17,7 @@
 import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.tooltips.TooltipCompatHandler;
+import com.liskovsoft.smartyoutubetv2.tv.util.ViewUtil;
 
 import static androidx.leanback.widget.TitleViewAdapter.SEARCH_VIEW_VISIBLE;
 
@@ -124,6 +125,8 @@ protected void onAttachedToWindow() {
                 ViewManager.instance(getContext()).startView(PlaybackView.class);
             }
         });
+        ViewUtil.enableMarquee(mPipTitle);
+        ViewUtil.setTextScrollSpeed(mPipTitle, MainUIData.instance(getContext()).getCardTextScrollSpeed());
         TooltipCompatHandler.setTooltipText(mExitPip, getContext().getString(R.string.return_to_background_video));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -379,8 +379,9 @@ private void restorePendingPosition() {
     private void restoreSpeed() {
         Video item = getVideo();
         boolean isLiveThreshold = getController().getLengthMs() - getController().getPositionMs() < LIVE_THRESHOLD_MS;
+        boolean isLive = item.isLive && isLiveThreshold;
 
-        if (item.isLive && isLiveThreshold) {
+        if (isLive || item.belongsToMusic()) {
             getController().setSpeed(1.0f);
         } else {
             State state = mStateService.getByVideoId(item.videoId);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -176,7 +176,7 @@ private void appendPlayerButtonsCategory(AppDialogPresenter settingsPresenter) {
                 {R.string.action_video_zoom, PlayerTweaksData.PLAYER_BUTTON_VIDEO_ZOOM},
                 {R.string.action_channel, PlayerTweaksData.PLAYER_BUTTON_OPEN_CHANNEL},
                 {R.string.action_search, PlayerTweaksData.PLAYER_BUTTON_SEARCH},
-                {R.string.action_pip, PlayerTweaksData.PLAYER_BUTTON_PIP},
+                {R.string.run_in_background, PlayerTweaksData.PLAYER_BUTTON_PIP},
                 {R.string.action_video_speed, PlayerTweaksData.PLAYER_BUTTON_VIDEO_SPEED},
                 {R.string.action_subtitles, PlayerTweaksData.PLAYER_BUTTON_SUBTITLES},
                 {R.string.action_subscribe, PlayerTweaksData.PLAYER_BUTTON_SUBSCRIBE},

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -248,7 +248,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
     @Override
     public void onUserLeaveHint() {
         // Check that user not open dialog instead of really leaving the activity
-        if (!AppDialogPresenter.instance(this).isDialogShown() && !mBackPressed) {
+        if (!AppDialogPresenter.instance(this).isDialogShown() && !mBackPressed && !mViewManager.isNewViewPending()) {
             switch (mPlaybackFragment.getBackgroundMode()) {
                 case PlaybackEngineController.BACKGROUND_MODE_PLAY_BEHIND:
                     enterBackgroundPlayMode();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -65,9 +65,7 @@ public void openVideo(Video item) {
 
         mMainPlayerEventBridge.openVideo(item);
 
-        if (!isRunningInBackground()) {
-            mViewManager.startView(PlaybackView.class);
-        }
+        mViewManager.startView(PlaybackView.class);
 
         if (getView() != null) {
             getView().getController().showControls(true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -175,12 +175,12 @@ public void onSubscribeClicked(boolean subscribed) {
     }
 
     @Override
-    public void onThumbsDownClicked(boolean thumbsDown) {
+    public void onDislikeClicked(boolean dislike) {
         // NOP
     }
 
     @Override
-    public void onThumbsUpClicked(boolean thumbsUp) {
+    public void onLikeClicked(boolean like) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/PlayerKeyTranslator.java
Patch:
@@ -63,15 +63,15 @@ private void addLikeAction(Map<Integer, Runnable> actionMapping) {
 
         Runnable likeAction = () -> {
             if (mPlaybackView.getEventListener() != null) {
-                mPlaybackView.getEventListener().onThumbsUpClicked(true);
+                mPlaybackView.getEventListener().onLikeClicked(true);
                 mPlaybackView.getController().setLikeButtonState(true);
                 mPlaybackView.getController().setDislikeButtonState(false);
                 MessageHelpers.showMessage(mContext, R.string.action_like);
             }
         };
         Runnable dislikeAction = () -> {
             if (mPlaybackView.getEventListener() != null) {
-                mPlaybackView.getEventListener().onThumbsDownClicked(true);
+                mPlaybackView.getEventListener().onDislikeClicked(true);
                 mPlaybackView.getController().setLikeButtonState(false);
                 mPlaybackView.getController().setDislikeButtonState(true);
                 MessageHelpers.showMessage(mContext, R.string.action_dislike);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -683,12 +683,12 @@ public void onSubscribe(boolean subscribed) {
 
         @Override
         public void onThumbsDown(boolean thumbsDown) {
-            mEventListener.onThumbsDownClicked(thumbsDown);
+            mEventListener.onDislikeClicked(thumbsDown);
         }
 
         @Override
         public void onThumbsUp(boolean thumbsUp) {
-            mEventListener.onThumbsUpClicked(thumbsUp);
+            mEventListener.onLikeClicked(thumbsUp);
         }
 
         @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -15,14 +15,12 @@
 import com.liskovsoft.sharedutils.rx.RxUtils;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
-import com.liskovsoft.smartyoutubetv2.common.app.presenters.SplashPresenter;
 import com.liskovsoft.smartyoutubetv2.common.misc.MotherActivity;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
 
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Stack;
-import java.util.logging.Handler;
 
 public class ViewManager {
     private static final String TAG = ViewManager.class.getSimpleName();
@@ -328,6 +326,7 @@ public void properlyFinishTheApp(Context activity) {
             // NOTE: Don't rely on MotherActivity.onDestroy() because activity can be killed silently.
             RxUtils.runAsync(() -> {
                 clearCaches();
+                BrowsePresenter.unhold();
                 mIsMoveToBackEnabled = false;
                 mIsFinishing = false;
             }, 1_000);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -209,15 +209,15 @@ private void appendMoveSectionButton() {
         if (BrowsePresenter.instance(getContext()).canMoveSectionUp(mSection)) {
             mDialogPresenter.appendSingleButton(
                     UiOptionItem.from(getContext().getString(R.string.move_section_up), optionItem -> {
-                        mDialogPresenter.closeDialog();
+                        //mDialogPresenter.closeDialog();
                         BrowsePresenter.instance(getContext()).moveSectionUp(mSection);
                     }));
         }
 
         if (BrowsePresenter.instance(getContext()).canMoveSectionDown(mSection)) {
             mDialogPresenter.appendSingleButton(
                     UiOptionItem.from(getContext().getString(R.string.move_section_down), optionItem -> {
-                        mDialogPresenter.closeDialog();
+                        //mDialogPresenter.closeDialog();
                         BrowsePresenter.instance(getContext()).moveSectionDown(mSection);
                     }));
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -8,7 +8,7 @@
 public interface BrowseView {
     void addSection(int index, BrowseSection category);
     void removeSection(BrowseSection category);
-    void selectSection(int index);
+    void selectSection(int index, boolean focusOnContent);
     void updateSection(VideoGroup group);
     void updateSection(SettingsGroup group);
     void clearSection(BrowseSection category);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -106,7 +106,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mBrowsePresenter.onViewInitialized();
 
         // Restore state after crash
-        selectSection(mRestoredHeaderIndex);
+        selectSection(mRestoredHeaderIndex, true);
         mRestoredHeaderIndex = -1;
 
         // Restore state after crash
@@ -306,10 +306,10 @@ public void updateSection(SettingsGroup group) {
     }
 
     @Override
-    public void selectSection(int index) {
+    public void selectSection(int index, boolean focusOnContent) {
         if (index >= 0 && index < mSectionRowAdapter.size()) {
             setSelectedPosition(index);
-            mFocusOnChildFragment = true;
+            mFocusOnChildFragment = focusOnContent;
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -286,7 +286,7 @@ public void onSeekIntervalClicked() {
         AppDialogPresenter settingsPresenter = AppDialogPresenter.instance(getActivity());
         settingsPresenter.clear();
 
-        AppDialogUtil.appendSeekIntervalDialogItems(getActivity(), settingsPresenter, mPlayerData);
+        AppDialogUtil.appendSeekIntervalDialogItems(getActivity(), settingsPresenter, mPlayerData, true);
 
         settingsPresenter.showDialog();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -44,7 +44,7 @@ public void show() {
         appendUIAutoHideCategory(settingsPresenter);
         appendSeekTypeCategory(settingsPresenter);
         appendSeekingPreviewCategory(settingsPresenter);
-        AppDialogUtil.appendSeekIntervalDialogItems(getContext(), settingsPresenter, mPlayerData);
+        AppDialogUtil.appendSeekIntervalDialogItems(getContext(), settingsPresenter, mPlayerData, false);
         appendRememberSpeedCategory(settingsPresenter);
         appendEndingTimeCategory(settingsPresenter);
         appendMiscCategory(settingsPresenter);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/time/EndingTimeView.java
Patch:
@@ -41,7 +41,7 @@ private void init() {
     private void setIcon() {
         Drawable drawable = ContextCompat.getDrawable(getContext(), R.drawable.icon_hourglass_bottom);
         if (drawable != null) {
-            drawable.setBounds(0, 3, getLineHeight(), getLineHeight()); // add top bound to align vertically
+            drawable.setBounds(3, 3, getLineHeight(), getLineHeight()); // add bounds to align vertically
             setCompoundDrawables(drawable, null, null, null);
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/actions/SeekIntervalAction.java
Patch:
@@ -12,7 +12,7 @@
 public class SeekIntervalAction extends Action {
     public SeekIntervalAction(Context context) {
         super(R.id.action_seek_interval);
-        Drawable uncoloredDrawable = ContextCompat.getDrawable(context, R.drawable.action_video_speed_alt);
+        Drawable uncoloredDrawable = ContextCompat.getDrawable(context, R.drawable.action_seek_interval);
 
         setIcon(uncoloredDrawable);
         setLabel1(context.getString(

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -316,6 +316,9 @@ public void selectSection(int index) {
     @Override
     public void focusOnContent() {
         startHeadersTransitionSafe(false);
+        if (getMainFragment() != null && getMainFragment().getView() != null) {
+            getMainFragment().getView().requestFocus();
+        }
     }
 
     private void focusOnChildFragment() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tooltips/TooltipCompatHandler.java
Patch:
@@ -161,9 +161,8 @@ public boolean onHover(View v, MotionEvent event) {
     @Override
     public void onFocusChange(View v, boolean hasFocus) {
         if (hasFocus) {
-            mAnchorX = v.getWidth() / 2;
-            mAnchorY = v.getHeight() / 2;
-            show(false);
+            // Wait till probable animation complete (position of button isn't constant)
+            setPendingHandler(this);
         } else {
             hide();
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -65,7 +65,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
             finishTheApp();
         }
 
-        return mGlobalKeyTranslator.translate(event) || super.dispatchKeyEvent(event);
+        return (mGlobalKeyTranslator != null && mGlobalKeyTranslator.translate(event)) || super.dispatchKeyEvent(event);
     }
 
     public UriBackgroundManager getBackgroundManager() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -140,7 +140,7 @@ public void openChannel(Video item) {
             if (item.channelId != null) {
                 openChannel(item.channelId);
             } else if (item.videoId != null) {
-                MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);
+                MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);
                 mServiceManager.loadMetadata(item, metadata -> {
                     openChannel(metadata.getChannelId());
                     item.channelId = metadata.getChannelId();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -68,7 +68,7 @@ private void appendTogglePinChannelButton() {
                         getContext().getString(original.isChannelPlaylist() || original.belongsToPlaylist() ? R.string.pin_unpin_playlist : R.string.pin_unpin_channel),
                         optionItem -> {
                             if (original.hasVideo()) {
-                                MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);
+                                MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);
 
                                 mServiceManager.loadMetadata(
                                         original,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -528,7 +528,7 @@ private void toggleSubscribe() {
         if (mVideo.isSynced || mVideo.canSubscribe()) {
             toggleSubscribe(mVideo);
         } else {
-            MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);
+            MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);
 
             mServiceManager.loadMetadata(mVideo, metadata -> {
                 Video video = Video.from(mVideo);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -19,7 +19,7 @@ private Playlist() {
             @Override
             public boolean add(Video video) {
                 // Creating lightweight copy of origin
-                return super.add(video.copy());
+                return super.add(video.group != null ? video.copy() : video);
             }
         };
         mCurrentIndex = -1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -44,9 +44,9 @@ public final class Video implements Parcelable {
     public String badge;
     public String previewUrl;
     public float percentWatched = -1;
-    public MediaItem mediaItem; // memory leak
-    public MediaItem nextMediaItem; // memory leak
-    public VideoGroup group; // used to get next page when scrolling
+    public MediaItem mediaItem;
+    public MediaItem nextMediaItem;
+    public VideoGroup group; // Memory leak. Used to get next page when scrolling.
     public boolean hasNewContent;
     public boolean isLive;
     public boolean isUpcoming;

File: smarttubetv/src/androidTest/java/com/liskovsoft/smartyoutubetv2/tv/VideoTest.java
Patch:
@@ -57,7 +57,7 @@ public void VideoParceableTest() {
 
             assert testVideo.id == testVideoClone.id;
             assert testVideo.title.equals(testVideoClone.title);
-            assert testVideo.info.equals(testVideoClone.info);
+            assert testVideo.secondTitle.equals(testVideoClone.secondTitle);
             assert testVideo.category.equals(testVideoClone.category);
             assert testVideo.author.equals(testVideoClone.author);
             assert testVideo.bgImageUrl.equals(testVideoClone.bgImageUrl);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/DetailsDescriptionPresenter.java
Patch:
@@ -29,7 +29,7 @@ protected void onBindDescription(ViewHolder viewHolder, Object item) {
         if (video != null) {
             viewHolder.getTitle().setText(video.title);
             viewHolder.getSubtitle().setText(video.author);
-            viewHolder.getBody().setText(video.info);
+            viewHolder.getBody().setText(video.secondTitle);
         }
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -116,7 +116,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
         Context context = cardView.getContext();
 
         cardView.setTitleText(video.title);
-        cardView.setContentText(video.info);
+        cardView.setContentText(video.secondTitle);
         // Count progress that very close to zero. E.g. when user closed video immediately.
         cardView.setProgress(video.percentWatched > 0 && video.percentWatched < 1 ? 1 : Math.round(video.percentWatched));
         cardView.setBadgeText(video.hasNewContent ?

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -465,7 +465,7 @@ private void createMediaSession() {
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_TITLE, getVideo().title);
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, getVideo().title);
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ARTIST, getVideo().extractAuthor());
-            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, getVideo().info);
+            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, getVideo().secondTitle);
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, getVideo().cardImageUrl);
             metadataBuilder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, getLengthMs());
 
@@ -785,8 +785,8 @@ public void setVideo(Video video) {
 
         if (mPlayerGlue != null && video != null) {
             // Preserve player formatting
-            mPlayerGlue.setTitle(video.title != null ? video.title : "...");
-            mPlayerGlue.setSubtitle(video.info != null ? appendLive(video.info, video.isLive) : "...");
+            mPlayerGlue.setTitle(video.getPlayerTitle() != null ? video.getPlayerTitle() : "...");
+            mPlayerGlue.setSubtitle(video.getPlayerSecondTitle() != null ? appendLive(video.getPlayerSecondTitle(), video.isLive) : "...");
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -179,6 +179,9 @@ public void onViewResumed() {
         getController().showDebugInfo(mDebugViewEnabled);
         getController().setDebugButtonState(mDebugViewEnabled);
         getController().showSubtitles(true);
+
+        // Maybe dialog just closed. Reset timeout just in case.
+        enableUiAutoHideTimeout();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -65,7 +65,7 @@ public void openVideo(Video item) {
         mViewManager.startView(PlaybackView.class);
 
         if (getView() != null) {
-            getView().getController().showOverlay(false);
+            getView().getController().showControls(true);
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -54,7 +54,6 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.DebugInfoManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.ExoPlayerInitializer;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.SubtitleManager;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.SubtitleManager.SubtitleStyle;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.renderer.CustomOverridesRenderersFactory;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.selector.RestoreTrackSelector;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerData;
@@ -1118,6 +1117,9 @@ public void hideControlsOverlay(boolean runAnimation) {
         mIsControlsShownPreviously = false;
     }
 
+    /**
+     * Show controls or suggestions: depending what has been shown last.
+     */
     @Override
     public void showControls(boolean show) {
         if (isInPIPMode()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/ExoFormatItem.java
Patch:
@@ -35,7 +35,7 @@ public class ExoFormatItem implements FormatItem {
     private String mFormatId;
     private boolean mIsPreset;
 
-    public static List<FormatItem> from(Set<MediaTrack> mediaTracks) {
+    synchronized public static List<FormatItem> from(Set<MediaTrack> mediaTracks) {
         if (mediaTracks == null) {
             return null;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/proxy/ProxyManager.java
Patch:
@@ -143,11 +143,10 @@ protected void loadProxyInfoFromPrefs() {
             }
 
             mEnabled = mPrefs.isWebProxyEnabled();
-        }
-        catch (URISyntaxException e) {
+        } catch (URISyntaxException | IllegalArgumentException e) {
             Log.e(TAG, e);
             mProxy = Proxy.NO_PROXY;
-            mEnabled = false; // disable invalid proxy settings.
+            mEnabled = false; // invalid settings found. disable proxy.
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -178,7 +178,7 @@ public void finish() {
             mViewManager.startParentView(this);
         } else {
             if (mPlayerTweaksData.isKeepFinishedActivityEnabled()) {
-                moveTaskToBack(true);
+                //moveTaskToBack(true); // Don't do this or you'll have problems when player overlaps other apps (e.g. casting)
                 mViewManager.startParentView(this);
             } else {
                 mPlaybackFragment.onFinish();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -242,7 +242,7 @@ private void restoreState() {
         mIsUploadsAutoLoadEnabled = Helpers.parseBoolean(split, 10, true);
         mCardTextScrollSpeed = Helpers.parseFloat(split, 11, 2);
         mMenuItems = Helpers.parseInt(split, 12,
-                Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_ADD_TO_QUEUE | MENU_ITEM_SHARE_LINK | MENU_ITEM_SELECT_ACCOUNT)); // all except these items
+                Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_ADD_TO_QUEUE | MENU_ITEM_SELECT_ACCOUNT)); // all except this items
     }
 
     private void persistState() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/SubtitleManager.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.graphics.Color;
 import android.graphics.Typeface;
+import android.os.Build.VERSION;
 import android.util.TypedValue;
 import android.view.View;
 import android.view.accessibility.CaptioningManager;
@@ -145,7 +146,7 @@ private void applySystemStyle() {
 
             CaptionStyleCompat style =
                     new CaptionStyleCompat(userStyle.foregroundColor,
-                            userStyle.backgroundColor, userStyle.windowColor,
+                            userStyle.backgroundColor, VERSION.SDK_INT >= 21 ? userStyle.windowColor : Color.TRANSPARENT,
                             userStyle.edgeType,
                             userStyle.edgeColor, userStyle.getTypeface());
             mSubtitleView.setStyle(style);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -54,7 +54,7 @@ public void setContext(Context context) {
         }
 
         // Localization fix: prefer Activity context
-        if (context instanceof Activity) {
+        if (context instanceof Activity && Utils.checkActivity((Activity) context)) {
             mActivity = new WeakReference<>((Activity) context);
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -113,7 +113,8 @@ public MediaSource fromUrlList(List<String> urlList) {
             mediaSources[i] = buildMediaSource(Uri.parse(urlList.get(i)), null);
         }
 
-        return mediaSources.length == 1 ? mediaSources[0] : new ConcatenatingMediaSource(mediaSources); // or playlist
+        //return mediaSources.length == 1 ? mediaSources[0] : new ConcatenatingMediaSource(mediaSources); // or playlist
+        return mediaSources[0]; // item with max resolution
     }
 
     /**

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUIController.java
Patch:
@@ -22,6 +22,7 @@ public interface PlaybackUIController {
     void setSubscribeButtonState(boolean subscribe);
     void setDebugButtonState(boolean show);
     void showDebugInfo(boolean show);
+    void showSubtitles(boolean show);
     List<SubtitleStyle> getSubtitleStyles();
     void setSubtitleStyle(SubtitleStyle subtitleStyle);
     SubtitleStyle getSubtitleStyle();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -174,6 +174,7 @@ public void onViewResumed() {
         // Activate debug infos when restoring after PIP.
         getController().showDebugInfo(mDebugViewEnabled);
         getController().setDebugButtonState(mDebugViewEnabled);
+        getController().showSubtitles(true);
     }
 
     @Override
@@ -183,6 +184,7 @@ public void onViewPaused() {
             getController().showControls(false);
             getController().showDebugInfo(false);
             getController().setDebugButtonState(false);
+            getController().showSubtitles(false);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -339,7 +339,8 @@ private void restorePosition(Video item) {
         // Do I need to check that item isn't live? (state != null && !item.isLive)
         if (state != null) {
             long remainsMs = getController().getLengthMs() - state.positionMs;
-            boolean isVideoEnded = remainsMs < 1_000;
+            // Url list videos at this stage has undefined (-1) length. So, we need to ensure that remains is positive.
+            boolean isVideoEnded = remainsMs >= 0 && remainsMs < 1_000;
             if (!isVideoEnded || !getPlayEnabled()) {
                 getController().setPositionMs(state.positionMs);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -116,7 +116,8 @@ public long getPositionMs() {
      */
     @Override
     public void setPositionMs(long positionMs) {
-        if (mPlayer != null && positionMs >= 0 && getLengthMs() != -1) {
+        // Url list videos at load stage has undefined (-1) length. So, we need to remove length check.
+        if (mPlayer != null && positionMs >= 0) {
             mPlayer.seekTo(positionMs);
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/clickable/PatternsCompat.java
Patch:
@@ -334,7 +334,7 @@ public final class PatternsCompat {
             WORD_BOUNDARY + ")"
     );
 
-    private static final String TIME_CODE_PART = "(?:\\d+:\\d+)";
+    private static final String TIME_CODE_PART = "(?:\\d+\\:\\d+)(?:\\:\\d+)?";
 
     public static final Pattern AUTOLINK_TIME_CODE = Pattern.compile("(" + WORD_BOUNDARY +
             "(?:" + TIME_CODE_PART + ")" +

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -9,6 +9,7 @@
 import android.content.Intent;
 import androidx.annotation.NonNull;
 import com.liskovsoft.sharedutils.helpers.FileHelpers;
+import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.locale.LocaleUpdater;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
@@ -389,8 +390,9 @@ private void safeMoveTaskToBack(Activity activity) {
     private void safeStartActivity(Context context, Intent intent) {
         try {
             context.startActivity(intent);
-        } catch (IllegalArgumentException e) {
+        } catch (IllegalArgumentException | ActivityNotFoundException e) {
             Log.e(TAG, "Error when starting activity: %s", e.getMessage());
+            MessageHelpers.showLongMessage(context, e.getLocalizedMessage());
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/clickable/LinkifyCompat.java
Patch:
@@ -405,7 +405,9 @@ public static boolean addLinks(@NonNull Spannable spannable, @NonNull Pattern pa
     }
 
     private static boolean shouldAddLinksFallbackToFramework() {
-        return Build.VERSION.SDK_INT >= 28;
+        // MODIFIED: use custom realization always
+        //return Build.VERSION.SDK_INT >= 28;
+        return false;
     }
 
     private static void addLinkMovementMethod(@NonNull TextView t) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/misc/LeanbackListPreferenceDialogFragment.java
Patch:
@@ -23,7 +23,6 @@
 import android.text.TextUtils;
 import android.text.style.ClickableSpan;
 import android.text.style.URLSpan;
-import android.text.util.Linkify;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -38,7 +37,6 @@
 import androidx.preference.ListPreference;
 import androidx.preference.MultiSelectListPreference;
 import androidx.recyclerview.widget.RecyclerView;
-import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -220,7 +220,7 @@ private void initIntentChain() {
             if (videoId != null) {
                 ViewManager viewManager = ViewManager.instance(getContext());
 
-                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && !Utils.isAppInForeground()) {
+                if (GeneralData.instance(getContext()).isReturnToLauncherEnabled() && ViewManager.instance(getContext()).getTopView() == null) {
                     viewManager.setSinglePlayerMode(true);
                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -457,7 +457,7 @@ private void restoreData() {
         mIsRememberSpeedEnabled = Helpers.parseBoolean(split, 21, false);
         mPlaybackMode = Helpers.parseInt(split, 22, PlaybackEngineController.PLAYBACK_MODE_PLAY_ALL);
         // didn't remember what was there
-        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, Helpers.equalsAny(Build.MODEL, "NV501")); // Eltex crash fix
+        mIsLegacyCodecsForced = Helpers.parseBoolean(split, 24, Build.VERSION.SDK_INT <= 19); // Android 4 playback crash fix
         mIsSonyTimerFixEnabled = Helpers.parseBoolean(split, 25, false);
         // old player tweaks
         mIsQualityInfoEnabled = Helpers.parseBoolean(split, 28, true);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/util/ViewUtil.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.graphics.ColorMatrix;
 import android.graphics.ColorMatrixColorFilter;
+import android.os.Build;
 import android.os.Build.VERSION;
 import android.text.BidiFormatter;
 import android.text.Layout;
@@ -162,7 +163,7 @@ public static RequestOptions glideOptions() {
     }
 
     public static void enableTransparentDialog(Context context, View rootView) {
-        if (context == null || rootView == null) {
+        if (context == null || rootView == null || VERSION.SDK_INT <= 19) {
             return;
         }
 
@@ -173,6 +174,7 @@ public static void enableTransparentDialog(Context context, View rootView) {
         int semiTransparent = ContextCompat.getColor(context, R.color.semi_grey);
 
         if (container instanceof FrameLayout) {
+            // ViewOutlineProvider: NoClassDefFoundError on API 19
             container.setOutlineProvider(ViewOutlineProvider.BACKGROUND);
         }
         if (mainFrame instanceof LinearLayout) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -144,7 +144,7 @@ private void applyAfrDelayed() {
     }
 
     private void applyAfr() {
-        if (mPlayerData.isAfrEnabled()) {
+        if (getController() != null && mPlayerData.isAfrEnabled()) {
             FormatItem videoFormat = getController().getVideoFormat();
             applyAfr(videoFormat, false);
             // Send data to AFR daemon via tvQuickActions app

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -1056,7 +1056,9 @@ protected void onUnbindRowViewHolder(RowPresenter.ViewHolder holder) {
         }
         mPlaybackControlsPresenter.onUnbindViewHolder(vh.mControlsVh);
         mSecondaryControlsPresenter.onUnbindViewHolder(vh.mSecondaryControlsVh);
-        row.setOnPlaybackProgressChangedListener(null);
+        if (row != null) {
+            row.setOnPlaybackProgressChangedListener(null);
+        }
 
         super.onUnbindRowViewHolder(holder);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -337,7 +337,6 @@ private void processCommand(Command command) {
                 if (getActivity() != null && mRemoteControlData.isFinishOnDisconnectEnabled()) {
                     // NOTE: It's not a good idea to remember connection state (mConnected) at this point.
                     MessageHelpers.showLongMessage(getActivity(), getActivity().getString(R.string.device_disconnected, command.getDeviceName()));
-                    getController().finishReally();
                     ViewManager.instance(getActivity()).properlyFinishTheApp(getActivity());
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -330,6 +330,8 @@ public void properlyFinishTheApp(Context activity) {
             mIsMoveToBackEnabled = true;
             mIsFinishing = true;
 
+            mActivityStack.clear();
+
             ((MotherActivity) activity).finishReally();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -337,6 +337,7 @@ private void processCommand(Command command) {
                 if (getActivity() != null && mRemoteControlData.isFinishOnDisconnectEnabled()) {
                     // NOTE: It's not a good idea to remember connection state (mConnected) at this point.
                     MessageHelpers.showLongMessage(getActivity(), getActivity().getString(R.string.device_disconnected, command.getDeviceName()));
+                    getController().finishReally();
                     ViewManager.instance(getActivity()).properlyFinishTheApp(getActivity());
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -457,7 +457,7 @@ private void restoreData() {
         mIsRememberSpeedEnabled = Helpers.parseBoolean(split, 21, false);
         mPlaybackMode = Helpers.parseInt(split, 22, PlaybackEngineController.PLAYBACK_MODE_PLAY_ALL);
         // didn't remember what was there
-        mIsLowQualityEnabled = Helpers.parseBoolean(split, 24, false);
+        mIsLowQualityEnabled = Helpers.parseBoolean(split, 24, Helpers.equalsAny(Build.MODEL, "NV501")); // Eltex crash fix
         mIsSonyTimerFixEnabled = Helpers.parseBoolean(split, 25, false);
         // old player tweaks
         mIsQualityInfoEnabled = Helpers.parseBoolean(split, 28, true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -322,7 +322,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
                     .subscribeOn(Schedulers.newThread())
                     .observeOn(AndroidSchedulers.mainThread())
                     .subscribe(
-                            getController()::openDash,
+                            dashManifest -> getController().openDash(dashManifest),
                             error -> Log.e(TAG, "createMpdStream error: %s", error.getMessage())
                     );
         } else if (formatInfo.containsUrlListInfo()) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -354,6 +354,7 @@ private void destroyPlayerObjects() {
         }
         mPlayer = null;
         mPlayerGlue = null;
+        setAdapter(null); // PlayerGlue->LeanbackPlayerAdapter->Context memory leak fix
         mRowsAdapter = null;
         mSubtitleManager = null;
         mDebugInfoManager = null;
@@ -397,10 +398,10 @@ private void createPlayer() {
     }
 
     private void createPlayerGlue() {
-        PlayerAdapter playerAdapter = new LeanbackPlayerAdapter(getContext(), mPlayer, UPDATE_DELAY_MS);
+        PlayerAdapter playerAdapter = new LeanbackPlayerAdapter(getContext(), mPlayer, UPDATE_DELAY_MS); // NOTE: possible context memory leak
 
         OnActionClickedListener playerActionListener = new PlayerActionListener();
-        mPlayerGlue = new VideoPlayerGlue(getContext(), playerAdapter, playerActionListener);
+        mPlayerGlue = new VideoPlayerGlue(getContext(), playerAdapter, playerActionListener); // NOTE: possible context memory leak
         mPlayerGlue.setHost(new SurfacePlaybackFragmentGlueHost(this));
         mPlayerGlue.setSeekEnabled(true);
         mPlayerGlue.setControlsOverlayAutoHideEnabled(false); // don't show controls on some player events like play/pause/end

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -308,7 +308,7 @@ public void onVideoItemSelected(Video item) {
 
     @Override
     public void onVideoItemClicked(Video item) {
-        if (getView() == null) {
+        if (getContext() == null) {
             return;
         }
 
@@ -324,7 +324,7 @@ public void onVideoItemClicked(Video item) {
 
     @Override
     public void onVideoItemLongClicked(Video item) {
-        if (getView() == null) {
+        if (getContext() == null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -89,6 +89,7 @@ public void onViewInitialized() {
     public void onViewDestroyed() {
         // View stays in RAM after has been destroyed. Is it a bug?
         mView = new WeakReference<>(null);
+        mActivity = new WeakReference<>(null);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -202,7 +202,7 @@ private void setSelection(int rendererIndex, int trackGroupIndex, int... trackIn
                     continue;
                 }
 
-                mediaTrack.isSelected = groupIndex == trackGroupIndex && Helpers.hasItem(trackIndexes, trackIndex);
+                mediaTrack.isSelected = groupIndex == trackGroupIndex && Helpers.equalsAny(trackIndex, trackIndexes);
 
                 if (mediaTrack.isSelected) {
                     renderer.selectedTrack = mediaTrack;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -250,7 +250,7 @@ private static String extractAuthor(String description) {
             } else {
                 // First part may be a special label (4K, Stream, New etc)
                 // Two cases to detect label: 1) Description is long (4 items); 2) First item of description is too short (2 letters)
-                result = split.length < 4 && split[0].length() > 2 ? split[0] : split[1];
+                result = split.length < 4 && split[0].trim().length() > 2 ? split[0] : split[1];
             }
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -143,7 +143,9 @@ public void remove(VideoGroup group) {
     public void removeAuthor(VideoGroup group) {
         String author = group.getVideos().get(0).extractAuthor(); // assume same author
         List<Video> result = Helpers.filter(mVideoItems, video -> Helpers.equals(author, video.extractAuthor()));
-        remove(VideoGroup.from(result));
+        if (result != null) {
+            remove(VideoGroup.from(result));
+        }
     }
 
     public void sync(VideoGroup group) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/BaseMenuPresenter.java
Patch:
@@ -67,7 +67,7 @@ private void appendTogglePinChannelButton() {
                 UiOptionItem.from(
                         getContext().getString(original.isPlaylist() || original.belongsToPlaylist() ? R.string.pin_unpin_playlist : R.string.pin_unpin_channel),
                         optionItem -> {
-                            if (original.hasVideo() && !original.hasChannel()) {
+                            if (original.hasVideo()) {
                                 MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);
 
                                 mServiceManager.loadMetadata(

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -766,7 +766,7 @@ private int moveToTopIfNeeded(MediaGroup mediaGroup) {
     }
 
     private Observable<MediaGroup> createPinnedAction(Video item) {
-        return item.hasPlaylist() ?
+        return (item.hasPlaylist() || item.hasReloadPageKey()) ?
                 ChannelUploadsPresenter.instance(getContext()).obtainPlaylistObservable(item) :
                 mGroupManager.getChannelObserve(item.channelId).map(list -> list.get(0));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/ChannelUploadsMenuPresenter.java
Patch:
@@ -84,7 +84,7 @@ private void prepareAndShowDialog() {
         appendOpenChannelButton();
         appendUnsubscribeButton();
         appendMarkAsWatched();
-        appendPinToSidebarButton();
+        appendTogglePinToSidebarButton();
 
         mDialogPresenter.showDialog(mVideo.title);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -179,7 +179,7 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
         //appendOpenChannelUploadsButton();
         appendSubscribeButton();
         appendOpenPlaylistButton();
-        appendPinToSidebarButton();
+        appendTogglePinToSidebarButton();
         appendAddToPlaybackQueueButton();
         appendShareButton();
         appendAccountSelectionButton();
@@ -200,7 +200,7 @@ private void prepareAndShowDialogUnsigned() {
         appendReturnToBackgroundVideoButton();
         appendOpenPlaylistButton();
         appendOpenChannelButton();
-        appendPinToSidebarButton();
+        appendTogglePinToSidebarButton();
         appendAddToPlaybackQueueButton();
         appendShareButton();
         appendAccountSelectionButton();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -507,7 +507,7 @@ private void cleanupPinnedItems() {
             }
 
             value.videoId = null;
-            return !value.hasPlaylist() && value.channelId == null && value.extra == -1;
+            return !value.hasPlaylist() && value.channelId == null && value.extra == -1 && !value.hasReloadPageKey();
         });
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -441,7 +441,7 @@ public void sync(MediaItemMetadata metadata, boolean useAltDesc) {
         // No checks. This data wasn't existed before sync.
         channelId = metadata.getChannelId();
         nextMediaItem = metadata.getNextVideo();
-        // TODO: Upcoming videos metadata wrongly reported as live
+        // NOTE: Upcoming videos metadata wrongly reported as live
         isLive = metadata.isLive();
         isUpcoming = metadata.isUpcoming();
         isSubscribed = metadata.isSubscribed();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -441,9 +441,10 @@ public void sync(MediaItemMetadata metadata, boolean useAltDesc) {
         // No checks. This data wasn't existed before sync.
         channelId = metadata.getChannelId();
         nextMediaItem = metadata.getNextVideo();
-        isLive = metadata.isLive();
+        // Upcoming videos wrongly reported as live
+        //isLive = metadata.isLive();
+        //isUpcoming = metadata.isUpcoming();
         isSubscribed = metadata.isSubscribed();
-        isUpcoming = metadata.isUpcoming();
         isSynced = true;
 
         if (mediaItem != null) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/VideoCardPresenter.java
Patch:
@@ -123,7 +123,7 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
         cardView.setProgress(video.percentWatched > 0 && video.percentWatched < 1 ? 1 : Math.round(video.percentWatched));
         cardView.setBadgeText(video.hasNewContent ?
                 context.getString(R.string.badge_new_content) : video.isLive ? context.getString(R.string.badge_live) : video.badge);
-        cardView.setBadgeColor(video.hasNewContent || video.isLive ?
+        cardView.setBadgeColor(video.hasNewContent || video.isLive || video.isUpcoming ?
                 ContextCompat.getColor(context, R.color.dark_red) : ContextCompat.getColor(context, R.color.black));
 
         if (mIsAnimatedPreviewsEnabled) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -339,8 +339,9 @@ private void processCommand(Command command) {
                 break;
         }
 
+        // Don't uncomment. Calls will brake casting logic.
         //postVolumeChange(Utils.getGlobalVolume(getActivity()));
-        postVolumeChange(getVolume());
+        //postVolumeChange(getVolume());
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -109,7 +109,7 @@ public long getPositionMs() {
 
     @Override
     public void setPositionMs(long positionMs) {
-        if (positionMs >= 0 && mPlayer != null) {
+        if (mPlayer != null && positionMs >= 0 && positionMs <= getLengthMs()) {
             mPlayer.seekTo(positionMs);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -247,6 +247,7 @@ private void processCommand(Command command) {
                     if (video != null) {
                         video.playlistId = command.getPlaylistId();
                         video.playlistParams = null;
+                        video.isRemote = true;
                         mSuggestionsLoader.loadSuggestions(video);
                     }
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -227,7 +227,7 @@ private void appendAddToPlaylistButton(List<VideoPlaylistInfo> videoPlaylistInfo
             options.add(UiOptionItem.from(
                     playlistInfo.getTitle(),
                     (item) -> {
-                        addToPlaylist(playlistInfo.getPlaylistId(), item.isSelected());
+                        addRemoveFromPlaylist(playlistInfo.getPlaylistId(), item.isSelected());
                         GeneralData.instance(getContext()).setLastPlaylistId(playlistInfo.getPlaylistId());
                     },
                     playlistInfo.isSelected()));
@@ -261,7 +261,7 @@ private void appendAddToRecentPlaylistButton(List<VideoPlaylistInfo> videoPlayli
                         UiOptionItem.from(getContext().getString(
                                 playlistInfo.isSelected() ? R.string.dialog_remove_from : R.string.dialog_add_to, playlistInfo.getTitle()),
                                 optionItem -> {
-                                    addToPlaylist(playlistInfo.getPlaylistId(), !playlistInfo.isSelected());
+                                    addRemoveFromPlaylist(playlistInfo.getPlaylistId(), !playlistInfo.isSelected());
                                     MessageHelpers.showMessage(getContext(), getContext().getString(
                                             playlistInfo.isSelected() ? R.string.removed_from : R.string.added_to, playlistInfo.getTitle()
                                     ));
@@ -439,7 +439,7 @@ private void appendAddToPlaybackQueueButton() {
                         }));
     }
 
-    private void addToPlaylist(String playlistId, boolean checked) {
+    private void addRemoveFromPlaylist(String playlistId, boolean checked) {
         RxUtils.disposeActions(mPlaylistInfoAction, mAddToPlaylistAction);
         Observable<Void> editObserve;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultiVideoGridFragment.java
Patch:
@@ -337,8 +337,9 @@ public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
             if (item instanceof Video) {
                 mMainPresenter.onVideoItemSelected((Video) item);
 
-                // Change unwatched state (remove red mark)
-                // Exception: Cannot call this method while RecyclerView is computing a layout
+                // Not working: Exception: Cannot call this method while RecyclerView is computing a layout
+                // Change unwatched state (remove red mark).
+                // Possible this isn't what you want. Red mark improve navigation inside the channel list.
                 //((Video) item).hasNewContent = false;
                 //mGridAdapter1.notifyItemRangeChanged(mGridAdapter1.indexOf((Video) item), 1);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -261,7 +261,7 @@ private DashManifest getManifest(Uri uri, String mpdContent) {
     private static HttpDataSource.Factory buildOkHttpDataSourceFactory(DefaultBandwidthMeter bandwidthMeter) {
         // OkHttpHelpers.getOkHttpClient()
         // RetrofitHelper.createOkHttpClient()
-        OkHttpDataSourceFactory dataSourceFactory = new OkHttpDataSourceFactory(RetrofitHelper.wrapDns(RetrofitHelper.createOkHttpClient()), AppConstants.APP_USER_AGENT,
+        OkHttpDataSourceFactory dataSourceFactory = new OkHttpDataSourceFactory(RetrofitHelper.createOkHttpClient(), AppConstants.APP_USER_AGENT,
                 bandwidthMeter);
         addCommonHeaders(dataSourceFactory);
         return dataSourceFactory;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -154,8 +154,8 @@ protected void onItemViewSelected(Object item) {
      */
     @Override
     protected void submitQuery(String query) {
-        super.submitQuery(query);
         mNewQuery = query;
+        super.submitQuery(query);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -81,7 +81,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
             case REQUEST_SPEECH:
                 switch (resultCode) {
                     case Activity.RESULT_OK:
-                        setSearchQuery(data, false);
+                        setSearchQuery(data, true);
                         break;
                     case Activity.RESULT_CANCELED:
                         Log.i(TAG, "Recognizer canceled");

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -154,8 +154,8 @@ protected void onItemViewSelected(Object item) {
      */
     @Override
     protected void submitQuery(String query) {
-        super.submitQuery(query);
         mNewQuery = query;
+        super.submitQuery(query);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppDialogPresenter.java
Patch:
@@ -154,7 +154,7 @@ public void closeDialog() {
     public boolean isDialogShown() {
         // Also check that current dialog almost closed (new view start is pending from a menu item)
         // Hmm. Maybe current dialog is pending. Check that view is null.
-        return !mCategories.isEmpty() && (!ViewManager.instance(getContext()).isNewViewPending() || getView() == null);
+        return !mCategories.isEmpty() && (!ViewManager.instance(getContext()).isNewViewPending(AppDialogView.class) || getView() == null);
     }
 
     public void appendRadioCategory(String categoryTitle, List<OptionItem> items) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -5,6 +5,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 public class VideoTrack extends MediaTrack {
+    private static final float LOW_FPS_THRESHOLD = 10;
     private static final int SIZE_EQUITY_THRESHOLD_PERCENT = 5; // was 15 before
     private static final int COMPARE_TYPE_IN_BOUNDS = 0;
     private static final int COMPARE_TYPE_IN_BOUNDS_NO_FPS = 4;
@@ -125,8 +126,8 @@ private int compare(MediaTrack track2, int type) {
         String id1 = format.id;
         String id2 = track2.format.id;
         // Low fps (e.g. 8fps) on original track could break whole comparison
-        float frameRate1 = format.frameRate < 10 ? 30 : format.frameRate;
-        float frameRate2 = track2.format.frameRate;
+        float frameRate1 = format.frameRate < LOW_FPS_THRESHOLD ? 30 : format.frameRate;
+        float frameRate2 = track2.format.frameRate < LOW_FPS_THRESHOLD ? 30 : track2.format.frameRate;
         String codecs1 = format.codecs;
         String codecs2 = track2.format.codecs;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/framedrops/PlaybackTransportControlGlue.java
Patch:
@@ -352,7 +352,7 @@ public void onSeekStarted() {
             // otherwise we will call seekTo() and may need to restore the original position.
             mPositionBeforeSeek = mSeekProvider == null ? mPlayerAdapter.getCurrentPosition() : -1;
             mLastUserPosition = -1;
-            if (mPlayerData.isSeekConfirmPauseEnabled()) {
+            if (!mPlayerData.isSeekConfirmPlayEnabled()) {
                 pause();
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -21,6 +21,7 @@ public final class Video implements Parcelable {
     private static final String TERTIARY_TEXT_DELIM = "•";
     private static final int MAX_AUTHOR_LENGTH_CHARS = 20;
     private static final String[] sNotPlaylistParams = new String[] {"EAIYAQ%3D%3D"};
+    private static final String SECTION_PREFIX = "FE";
     public long id;
     public String title;
     public String category;
@@ -462,7 +463,7 @@ public Video copy() {
     }
 
     public boolean canSubscribe() {
-        return (hasChannel() && !channelId.startsWith("FE")) || hasVideo();
+        return hasChannel() && !channelId.startsWith(SECTION_PREFIX);
     }
 
     private boolean checkMediaItems() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -338,8 +338,10 @@ public void onVideoItemLongClicked(Video item) {
                     removeItem(videoItem);
                 } else if (action == VideoMenuCallback.ACTION_UNSUBSCRIBE && isMultiGridChannelUploadsSection()) {
                     removeItem(mCurrentVideo);
+                    VideoMenuPresenter.instance(getContext()).closeDialog();
                 } else if (action == VideoMenuCallback.ACTION_UNSUBSCRIBE && isSubscriptionsSection()) {
                     removeItem(Video.findVideosByAuthor(videoItem.group, videoItem.extractAuthor()));
+                    VideoMenuPresenter.instance(getContext()).closeDialog();
                 }
             });
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -378,7 +378,7 @@ private void appendSubscribeButton() {
             return;
         }
 
-        if (mVideo == null || (!mVideo.hasChannel() && !mVideo.hasVideo())) {
+        if (mVideo == null || !mVideo.canSubscribe()) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -462,7 +462,7 @@ public boolean onKey(View view, int keyCode, KeyEvent keyEvent) {
                             } else {
                                 // MOD: resume immediately after seeking
 
-                                if (mPlayerData.isPauseOnSeekEnabled() && keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
+                                if ((mPlayerData.isSeekMemoryPauseEnabled() || mPlayerData.isSeekMemoryPlayEnabled()) && keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
                                     return true;
                                 }
 
@@ -478,7 +478,7 @@ public boolean onKey(View view, int keyCode, KeyEvent keyEvent) {
                             } else {
                                 // MOD: resume immediately after seeking
 
-                                if (mPlayerData.isPauseOnSeekEnabled() && keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
+                                if ((mPlayerData.isSeekMemoryPauseEnabled() || mPlayerData.isSeekMemoryPlayEnabled()) && keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
                                     return true;
                                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -692,7 +692,7 @@ private void authCheck(boolean check, Runnable callback) {
      */
     private void continueGroupIfNeeded(VideoGroup videoGroup) {
         boolean groupTooSmall = videoGroup.getVideos() != null && videoGroup.getVideos().size() < MIN_GROUP_SIZE;
-        if (groupTooSmall || mMainUIData.getUIScale() < 0.8f || mMainUIData.getVideoGridScale() < 0.8f) {
+        if (mMainUIData.getUIScale() < 0.8f || mMainUIData.getVideoGridScale() < 0.8f) {
             continueGroup(videoGroup);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -32,6 +32,7 @@
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.internal.UhdHelper;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.ExoUtils;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
+import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -345,6 +346,7 @@ private void appendPlayerWindowIndex() {
 
     private void appendVersion() {
         appendRow("ExoPlayer Version", ExoPlayerLibraryInfo.VERSION);
+        appendRow("ExoPlayer HttpDataSource", PlayerTweaksData.instance(mContext).isBufferingFixEnabled() ? "OkHttpDataSource" : "DefaultHttpDataSource");
         appendRow(mAppVersion, AppInfoHelpers.getAppVersionName(mContext));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -20,6 +20,7 @@
 public final class Video implements Parcelable {
     private static final String TERTIARY_TEXT_DELIM = "•";
     private static final int MAX_AUTHOR_LENGTH_CHARS = 20;
+    private static final String[] sNotPlaylistParams = new String[] {"EAIYAQ%3D%3D"};
     public long id;
     public String title;
     public String category;
@@ -323,7 +324,7 @@ public boolean hasChannel() {
      * NOTE: Channels section uses <em>playlistParams</em> instead of <em>playlistId</em>
      */
     public boolean hasPlaylist() {
-        return playlistId != null || playlistParams != null;
+        return playlistId != null || (playlistParams != null && !Helpers.containsAny(playlistParams, sNotPlaylistParams));
     }
 
     public boolean hasUploads() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -78,7 +78,7 @@ private void applyRunOnceTasks() {
             updateChannels();
             getBackupDataOnce();
             runRemoteControlTasks();
-            dontKeepConnection();
+            setupKeepAlive();
             configureProxy();
             initVideoStateService();
             sRunOnce = true;
@@ -115,8 +115,8 @@ private void runRemoteControlTasks() {
         }
     }
 
-    private void dontKeepConnection() {
-        System.setProperty("http.keepAlive", "false");
+    private void setupKeepAlive() {
+        System.setProperty("http.keepAlive", "true");
     }
 
     private void configureProxy() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -250,7 +250,7 @@ private DashManifest getManifest(Uri uri, String mpdContent) {
     private static HttpDataSource.Factory buildHttpDataSourceFactory2(DefaultBandwidthMeter bandwidthMeter) {
         // OkHttpHelpers.getOkHttpClient()
         // RetrofitHelper.createOkHttpClient()
-        OkHttpDataSourceFactory dataSourceFactory = new OkHttpDataSourceFactory(RetrofitHelper.createOkHttpClient(), AppConstants.APP_USER_AGENT,
+        OkHttpDataSourceFactory dataSourceFactory = new OkHttpDataSourceFactory(RetrofitHelper.wrapDns(RetrofitHelper.createOkHttpClient()), AppConstants.APP_USER_AGENT,
                 bandwidthMeter);
         addCommonHeaders(dataSourceFactory);
         return dataSourceFactory;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -81,7 +81,7 @@ private void restoreData() {
         mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, false);
         mSearchOptions = Helpers.parseInt(split, 1, 0);
         mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
-        mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, true);
+        mIsKeyboardAutoShowEnabled = Helpers.parseBoolean(split, 3, false);
         mIsBackgroundPlaybackEnabled = Helpers.parseBoolean(split, 4, false);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -20,6 +20,7 @@
 
 public class VideoStateManager extends PlayerEventListenerHelper {
     private static final String TAG = VideoStateManager.class.getSimpleName();
+    private static final float RESTORE_POSITION_PERCENTS = 12;
     private boolean mIsPlayEnabled;
     private Video mVideo;
     private FormatItem mTempVideoFormat;
@@ -324,7 +325,7 @@ private void restorePosition(Video item) {
         State state = mStateService.getByVideoId(item.videoId);
 
         // Ignore up to 10% watched because the video might be opened on phone and closed immediately.
-        boolean containsWebPosition = item.percentWatched >= 10;
+        boolean containsWebPosition = item.percentWatched >= RESTORE_POSITION_PERCENTS;
         boolean stateIsOutdated = state == null || state.timestamp < item.timestamp;
         if (containsWebPosition && stateIsOutdated) {
             // Web state is buggy on short videos (e.g. video clips)

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -770,7 +770,7 @@ void retrieveResults(String searchQuery) {
         }
     }
 
-    void submitQuery(String query) {
+    protected void submitQuery(String query) {
         if (query == null) {
             return;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -558,7 +558,7 @@ protected void onRowViewSelected(RowPresenter.ViewHolder holder, boolean selecte
     }
 
     private int getSuggestedItemIndex() {
-        if (getVideo() == null || !getVideo().hasPlaylist()) {
+        if (getVideo() == null || !getVideo().hasPlaylist() || !getVideo().hasVideo()) {
             return -1;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -460,9 +460,11 @@ public static void chooseChannelPresenter(Context context, Video item) {
                 //if (group.get(0).getMediaItems() != null) {
                 //    PlaybackPresenter.instance(context).openVideo(Video.from(group.get(0).getMediaItems().get(0)));
                 //}
+
+                // TODO: clear only once, on start
+                ChannelUploadsPresenter.instance(context).clear();
                 ChannelUploadsPresenter.instance(context).updateGrid(group.get(0));
             } else {
-                // Just in case we're opening channel inside a channel
                 // TODO: clear only once, on start
                 ChannelPresenter.instance(context).clear();
                 ChannelPresenter.instance(context).updateRows(group);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/settings/SettingsGridFragment.java
Patch:
@@ -13,6 +13,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.SettingsGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.SettingsItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.presenter.SettingsCardPresenter;
 import com.liskovsoft.smartyoutubetv2.tv.ui.browse.interfaces.SettingsCategoryFragment;
@@ -117,6 +118,8 @@ public void onItemClicked(Presenter.ViewHolder itemViewHolder, Object item,
 
             if (item instanceof SettingsItem) {
                 ((SettingsItem) item).onClick.run();
+                // Close PIP inside Settings section
+                PlaybackPresenter.instance(getContext()).forceFinish();
             } else {
                 Toast.makeText(getActivity(), item.toString(), Toast.LENGTH_SHORT).show();
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -79,9 +79,7 @@ private void appendEnabledSections(AppDialogPresenter settingsPresenter) {
             }
 
             options.add(UiOptionItem.from(getContext().getString(sectionResId), optionItem -> {
-                mGeneralData.enableSection(sectionId, optionItem.isSelected());
-                BrowsePresenter.instance(getContext()).updateSections();
-                mRestartApp = true;
+                BrowsePresenter.instance(getContext()).enableSection(sectionId, optionItem.isSelected());
             }, mGeneralData.isSectionEnabled(sectionId)));
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoaderManager.java
Patch:
@@ -199,7 +199,7 @@ public void onPlayEnd() {
             case PlaybackEngineController.PLAYBACK_MODE_LIST:
                 // stop player (if not playing playlist)
                 Video video = getController().getVideo();
-                if ((video != null && video.playlistId != null) || mPlaylist.getNext() != null) {
+                if ((video != null && video.hasPlaylist()) || mPlaylist.getNext() != null) {
                     onNextClicked();
                     getController().showControls(true);
                 } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -170,7 +170,7 @@ private void cleanupPinnedItems() {
             }
 
             value.videoId = null;
-            return value.playlistId == null && value.channelId == null;
+            return !value.hasPlaylist() && value.channelId == null;
         });
     }
 
@@ -732,7 +732,7 @@ private int moveToTopIfNeeded(MediaGroup mediaGroup) {
     }
 
     private Observable<MediaGroup> createPinnedAction(Video item) {
-        return item.playlistId != null ?
+        return item.hasPlaylist() ?
                 ChannelUploadsPresenter.instance(getContext()).obtainPlaylistObservable(item) :
                 mGroupManager.getChannelObserve(item.channelId).map(list -> list.get(0));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -255,6 +255,7 @@ private Video createPinnedSection(Video video) {
 
         Video section = new Video();
         section.playlistId = video.playlistId;
+        section.playlistParams = video.playlistParams;
         section.channelId = video.channelId;
         section.title = String.format("%s - %s",
                 video.group != null && video.group.getTitle() != null ? video.group.getTitle() : video.title,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -441,8 +441,8 @@ private Video createPinnedSection(Video video) {
         section.playlistParams = video.playlistParams;
         section.channelId = video.channelId;
         // Trying to properly format channel playlists, mixes etc
-        boolean isChannelItem = video.getGroupTitle() != null && video.belongsToChannelGroup();
-        boolean isUserPlaylistItem = video.getGroupTitle() != null && video.belongsToUserPlaylistGroup();
+        boolean isChannelItem = video.getGroupTitle() != null && video.belongsToSameAuthorGroup() && video.belongsToSamePlaylistGroup();
+        boolean isUserPlaylistItem = video.getGroupTitle() != null && video.belongsToSamePlaylistGroup();
         String title = isChannelItem ? video.extractAuthor() : isUserPlaylistItem ? null : video.title;
         String subtitle = isChannelItem || isUserPlaylistItem ? video.getGroupTitle() : video.description;
         section.title = title != null ? String.format("%s - %s", title, subtitle) : String.format("%s", subtitle);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -66,8 +66,8 @@ public boolean dispatchKeyEvent(KeyEvent event) {
         }
 
         KeyEvent newEvent = mGlobalKeyTranslator.translate(event);
-        // Don't push key down if handled (key code unknown). Otherwise you'll observe old behavior.
-        return newEvent.getKeyCode() == KeyEvent.KEYCODE_UNKNOWN || super.dispatchKeyEvent(newEvent);
+        // Set unknown key as handled to disable original key behavior.
+        return super.dispatchKeyEvent(newEvent) || newEvent.getKeyCode() == KeyEvent.KEYCODE_UNKNOWN;
     }
 
     public UriBackgroundManager getBackgroundManager() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -245,6 +245,7 @@ private void processCommand(Command command) {
                     Video video = getController().getVideo();
                     if (video != null) {
                         video.playlistId = command.getPlaylistId();
+                        video.playlistParams = null;
                         mSuggestionsLoader.loadSuggestions(video);
                     }
                 }
@@ -345,6 +346,7 @@ private void openNewVideo(Video newVideo) {
         if (Video.equals(mVideo, newVideo) && Utils.isPlayerInForeground(getActivity())) { // same video already playing
             mVideo.playlistId = newVideo.playlistId;
             mVideo.playlistIndex = newVideo.playlistIndex;
+            mVideo.playlistParams = newVideo.playlistParams;
             if (mNewVideoPositionMs > 0) {
                 getController().setPositionMs(mNewVideoPositionMs);
                 mNewVideoPositionMs = 0;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -441,6 +441,7 @@ private Video createPinnedSection(Video video) {
 
         Video section = new Video();
         section.playlistId = video.playlistId;
+        section.playlistParams = video.playlistParams;
         section.channelId = video.channelId;
         // Trying to properly format channel playlists, mixes etc
         section.title = String.format("%s - %s",

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/PlayerKeyTranslator.java
Patch:
@@ -23,9 +23,9 @@ private void initKeyMapping() {
             globalKeyMapping.put(KeyEvent.KEYCODE_MEDIA_REWIND, KeyEvent.KEYCODE_MEDIA_PREVIOUS);
         }
 
-        if (mGeneralData.isRemapPageDownToNextEnabled()) {
-            globalKeyMapping.put(KeyEvent.KEYCODE_PAGE_UP, KeyEvent.KEYCODE_MEDIA_PREVIOUS);
-            globalKeyMapping.put(KeyEvent.KEYCODE_PAGE_DOWN, KeyEvent.KEYCODE_MEDIA_NEXT);
+        if (mGeneralData.isRemapPageUpToNextEnabled()) {
+            globalKeyMapping.put(KeyEvent.KEYCODE_PAGE_UP, KeyEvent.KEYCODE_MEDIA_NEXT);
+            globalKeyMapping.put(KeyEvent.KEYCODE_PAGE_DOWN, KeyEvent.KEYCODE_MEDIA_PREVIOUS);
         }
 
         // Reset global mapping to default

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -62,8 +62,6 @@ public static SearchPresenter instance(Context context) {
     @Override
     public void onViewInitialized() {
         startSearchInt(mSearchText);
-        mSearchText = null;
-        mSearchOptions = 0;
     }
 
     @Override
@@ -76,6 +74,9 @@ public void onViewDestroyed() {
     public void onFinish() {
         super.onFinish();
 
+        mSearchText = null;
+        mSearchOptions = 0;
+
         if (mSearchData.isBackgroundPlaybackEnabled() && PlaybackPresenter.instance(getContext()).isRunningInBackground()) {
             ViewManager.instance(getContext()).startView(SplashView.class);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -397,6 +397,9 @@ public void sync(MediaItemMetadata metadata, boolean useAltDesc) {
         isSynced = true;
     }
 
+    /**
+     * Creating lightweight copy of origin.
+     */
     public Video copy() {
         return from(videoId, playlistId, playlistIndex, channelId, title, description, percentWatched);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoStateManager.java
Patch:
@@ -4,6 +4,7 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.rx.RxUtils;
+import com.liskovsoft.smartyoutubetv2.common.app.models.data.Playlist;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.service.VideoStateService;
@@ -304,6 +305,8 @@ private void savePosition(Video video) {
             // Reset position when video almost ended
             //resetPosition(video);
         }
+
+        Playlist.instance().sync(video);
     }
 
     private void restorePosition(Video item) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -140,7 +140,8 @@ public void sync(VideoGroup group) {
         for (Video video : group.getVideos()) {
             int index = mVideoItems.indexOf(video);
             if (index != -1) {
-                // Item already changed. Just need to redraw.
+                Video origin = mVideoItems.get(index);
+                origin.sync(video);
                 notifyItemRangeChanged(index, 1);
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/ContentBlockData.java
Patch:
@@ -188,7 +188,7 @@ private void restoreState() {
 
         mIsSponsorBlockEnabled = Helpers.parseBoolean(split, 0, VERSION.SDK_INT > 19); // Android 4 may have memory problems
         // categories: index 2
-        mIsSkipEachSegmentOnceEnabled = Helpers.parseBoolean(split, 3, true);
+        mIsSkipEachSegmentOnceEnabled = Helpers.parseBoolean(split, 3, false);
         // colorMarkers: index 4
         String actions = Helpers.parseStr(split, 6);
         String colorCategories = Helpers.parseStr(split, 7);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GlobalKeyTranslator.java
Patch:
@@ -23,8 +23,8 @@ private void initKeyMapping() {
         }
 
         // Fix rare situations with some remotes. E.g. remote doesn't work on search page.
-        //mKeyMapping.put(KeyEvent.KEYCODE_NUMPAD_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
-        //mKeyMapping.put(KeyEvent.KEYCODE_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
+        mKeyMapping.put(KeyEvent.KEYCODE_NUMPAD_ENTER, KeyEvent.KEYCODE_DPAD_CENTER); // G20s fix?
+        mKeyMapping.put(KeyEvent.KEYCODE_ENTER, KeyEvent.KEYCODE_DPAD_CENTER); // G20s fix?
         mKeyMapping.put(KeyEvent.KEYCODE_BUTTON_B, KeyEvent.KEYCODE_BACK);
         // Fix for the unknown usb remote controller: https://smartyoutubetv.github.io/#comment-3742343397
         mKeyMapping.put(KeyEvent.KEYCODE_ESCAPE, KeyEvent.KEYCODE_BACK);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/HQDialogManager.java
Patch:
@@ -125,7 +125,9 @@ private void onDialogHide() {
     private void updateBackgroundPlayback() {
         ViewManager.instance(getActivity()).blockTop(null);
 
-        getController().setPlaybackMode(mPlayerData.getBackgroundMode());
+        if (getController() != null) {
+            getController().setPlaybackMode(mPlayerData.getBackgroundMode());
+        }
     }
 
     private void addBackgroundPlaybackCategory() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/SearchData.java
Patch:
@@ -60,9 +60,9 @@ private void restoreData() {
 
         String[] split = Helpers.splitObjectLegacy(data);
 
-        mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, false);
+        mIsInstantVoiceSearchEnabled = Helpers.parseBoolean(split, 0, true);
         mSearchOptions = Helpers.parseInt(split, 1, 0);
-        mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, false);
+        mIsFocusOnResultsEnabled = Helpers.parseBoolean(split, 2, true);
     }
 
     private void persistData() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -455,8 +455,8 @@ private void createMediaSession() {
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, getVideo().title);
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ARTIST, getVideo().extractAuthor());
             metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, getVideo().description);
-            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, getVideo().cardImageUrl);
-            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_DURATION, Helpers.toString(getLengthMs()));
+            metadataBuilder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, getVideo().cardImageUrl);
+            metadataBuilder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, getLengthMs());
 
             return metadataBuilder.build();
         });

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -53,7 +53,8 @@ public ExoPlayerController(Context context) {
 
         mMediaSourceFactory.setTrackErrorFixer(new TrackErrorFixer(mTrackSelectorManager));
 
-        //initFormats();
+        // Shield 720p fix???
+        initFormats();
     }
 
     private void initFormats() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -330,7 +330,7 @@ public boolean isPlaylist() {
     }
 
     public boolean belongsToChannelUploads() {
-        return group != null && group.getMediaGroup() != null && group.getMediaGroup().getType() == MediaGroup.TYPE_CHANNEL_UPLOADS;
+        return group != null && group.getMediaGroup() != null && (group.getMediaGroup().getType() == MediaGroup.TYPE_CHANNEL_UPLOADS || group.getSection().getId() == MediaGroup.TYPE_CHANNEL_UPLOADS);
     }
 
     public boolean belongsToPlaylists() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -382,7 +382,7 @@ private void appendSubscribeButton() {
         }
 
         mSettingsPresenter.appendSingleButton(
-                UiOptionItem.from(getContext().getString(mVideo.belongsToSubscriptions() ? R.string.unsubscribe_from_channel : R.string.subscribe_unsubscribe_from_channel),
+                UiOptionItem.from(getContext().getString(mVideo.isSubscribed || mVideo.belongsToSubscriptions() || mVideo.belongsToChannelUploads() ? R.string.unsubscribe_from_channel : R.string.subscribe_unsubscribe_from_channel),
                         optionItem -> toggleSubscribe()));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -337,7 +337,7 @@ public boolean belongsToPlaylists() {
         return group != null && group.getMediaGroup() != null && group.getMediaGroup().getType() == MediaGroup.TYPE_USER_PLAYLISTS;
     }
 
-    public boolean belongsToSubscribed() {
+    public boolean belongsToSubscriptions() {
         return group != null && group.getMediaGroup() != null && group.getMediaGroup().getType() == MediaGroup.TYPE_SUBSCRIPTIONS;
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -382,7 +382,7 @@ private void appendSubscribeButton() {
         }
 
         mSettingsPresenter.appendSingleButton(
-                UiOptionItem.from(getContext().getString(R.string.subscribe_unsubscribe_from_channel),
+                UiOptionItem.from(getContext().getString(mVideo.belongsToSubscriptions() ? R.string.unsubscribe_from_channel : R.string.subscribe_unsubscribe_from_channel),
                         optionItem -> toggleSubscribe()));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -329,7 +329,7 @@ public void onVideoItemLongClicked(Video item) {
         } else {
             VideoMenuPresenter.instance(getContext()).showMenu(item, (videoItem, action) -> {
                 if (action == VideoMenuCallback.ACTION_REMOVE ||
-                        (action == VideoMenuCallback.ACTION_PLAYLIST_REMOVE && isPlaylistsSection())) {
+                    action == VideoMenuCallback.ACTION_PLAYLIST_REMOVE) {
                     VideoGroup removedGroup = VideoGroup.from(videoItem);
                     removedGroup.setAction(VideoGroup.ACTION_REMOVE);
                     getView().updateSection(removedGroup);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -5,6 +5,7 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItem;
 import com.liskovsoft.mediaserviceinterfaces.data.VideoPlaylistInfo;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.R;
@@ -496,7 +497,8 @@ private void addToPlaylist(String playlistId, boolean checked) {
         if (checked) {
             editObserve = mItemManager.addToPlaylistObserve(playlistId, mVideo.videoId);
         } else {
-            if (mCallback != null) {
+            // Check that the current video belongs to the right section
+            if (mCallback != null && Helpers.equals(mVideo.playlistId, playlistId)) {
                 mCallback.onItemAction(mVideo, VideoMenuCallback.ACTION_PLAYLIST_REMOVE);
             }
             editObserve = mItemManager.removeFromPlaylistObserve(playlistId, mVideo.videoId);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -352,6 +352,9 @@ private void destroyPlayerObjects() {
     }
 
     private void createPlayerObjects() {
+        //System.gc(); // OutOfMemoryError fix (simple wrapper for below)?
+        Runtime.getRuntime().gc(); // OutOfMemoryError fix?
+
         // NOTE: position matters!
 
         createPlayer();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -171,7 +171,7 @@ private boolean canShiftSection(int sectionId, int shift) {
         index = findPinnedItemIndex(sectionId);
 
         if (index != -1) {
-            return  index + shift >= 0 && index + shift < mEnabledSections.size();
+            return  index + shift >= 0 && index + shift < mPinnedItems.size();
         }
 
         return false;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -302,7 +302,8 @@ public void onVideoItemClicked(Video item) {
             return;
         }
 
-        if (isMultiGridChannelUploadsSection()) { // Is Channels new look enabled?
+        // Check that channels new look enabled and we're on the first column
+        if (isMultiGridChannelUploadsSection() && item.belongsToChannelUploads()) {
             updateMultiGrid(item);
         } else {
             VideoActionPresenter.instance(getContext()).apply(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -433,9 +433,10 @@ private Video createPinnedSection(Video video) {
         Video section = new Video();
         section.playlistId = video.playlistId;
         section.channelId = video.channelId;
+        // Trying to properly format channel playlists, mixes etc
         section.title = String.format("%s - %s",
-                video.title != null && isSectionItem ? video.title : groupTitle != null ? groupTitle : video.title,
-                video.author != null ? video.author : video.description
+                video.title != null && isSectionItem ? video.title : groupTitle != null ? Video.extractAuthor(video) : video.title,
+                groupTitle != null ? groupTitle : Video.extractAuthor(video)
         );
         section.cardImageUrl = video.cardImageUrl;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -138,8 +138,10 @@ private void setupListeners() {
                 if (isAdded()) {
                     try {
                         startActivityForResult(getRecognizerIntent(), REQUEST_SPEECH);
-                    } catch (ActivityNotFoundException | NullPointerException e) {
+                    } catch (ActivityNotFoundException e) {
                         Log.e(TAG, "Cannot find activity for speech recognizer", e);
+                    } catch (NullPointerException e) {
+                        Log.e(TAG, "Speech recognizer can't obtain applicationInfo", e);
                     }
                 } else {
                     Log.e(TAG, "Can't perform search. Fragment is detached.");

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -138,7 +138,7 @@ private void setupListeners() {
                 if (isAdded()) {
                     try {
                         startActivityForResult(getRecognizerIntent(), REQUEST_SPEECH);
-                    } catch (ActivityNotFoundException e) {
+                    } catch (ActivityNotFoundException | NullPointerException e) {
                         Log.e(TAG, "Cannot find activity for speech recognizer", e);
                     }
                 } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -170,7 +170,7 @@ public static boolean checkActivity(Activity activity) {
     }
 
     public static void updateRemoteControlService(Context context) {
-        if (context == null || Helpers.equalsAny(Build.MODEL, "NV501", "NV501WAC")) { // Eltex NPE fix
+        if (context == null || VERSION.SDK_INT <= 19) { // Eltex NPE fix
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -93,6 +93,9 @@ private void openMediaSource(MediaSource mediaSource) {
         mTrackSelectorManager.invalidate();
         mPlayer.prepare(mediaSource);
         mEventListener.onSourceChanged(mVideo);
+
+        // OOM fix on Eltex and others???
+        System.gc();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -150,11 +150,11 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
         appendNotInterestedButton();
         appendAddToRecentPlaylistButton(videoPlaylistInfos);
         appendAddToPlaylistButton(videoPlaylistInfos);
-        appendOpenPlaylistButton();
-        appendPinToSidebarButton();
         appendOpenChannelButton();
         //appendOpenChannelUploadsButton();
         appendSubscribeButton();
+        appendOpenPlaylistButton();
+        appendPinToSidebarButton();
         appendAddToPlaybackQueueButton();
         appendShareButton();
         appendAccountSelectionButton();
@@ -174,8 +174,8 @@ private void prepareAndShowDialogUnsigned() {
 
         appendReturnToBackgroundVideoButton();
         appendOpenPlaylistButton();
-        appendPinToSidebarButton();
         appendOpenChannelButton();
+        appendPinToSidebarButton();
         appendAddToPlaybackQueueButton();
         appendShareButton();
         appendAccountSelectionButton();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -237,7 +237,8 @@ private void restoreState() {
         mIsUploadsOldLookEnabled = Helpers.parseBoolean(split, 9, false);
         mIsUploadsAutoLoadEnabled = Helpers.parseBoolean(split, 10, true);
         mCardTextScrollSpeed = Helpers.parseFloat(split, 11, 2);
-        mMenuItems = Helpers.parseInt(split, 12, Integer.MAX_VALUE); // all by default
+        mMenuItems = Helpers.parseInt(split, 12,
+                Integer.MAX_VALUE & ~(MENU_ITEM_RECENT_PLAYLIST | MENU_ITEM_ADD_TO_QUEUE | MENU_ITEM_SHARE_LINK | MENU_ITEM_SELECT_ACCOUNT));
     }
 
     private void persistState() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -13,7 +13,7 @@
 
 public class TrackErrorFixer {
     private static final int BLACKLIST_CHECK_MS = 1_000;
-    private static final int BLACKLIST_CLEAR_MS = 5_000;
+    private static final int BLACKLIST_CLEAR_MS = 10_000;
     private static final int SELECT_FIRST_TRACK_MS = 30_000;
     private final TrackSelectorManager mTrackSelectorManager;
     private final Handler mHandler;
@@ -79,7 +79,7 @@ private boolean selectNextTrack() {
         if (tmpTrack != null) {
             mTrackSelectorManager.selectTrack(tmpTrack);
             mSelectionTimeMs = System.currentTimeMillis();
-            Utils.postDelayed(mHandler, mSelectFirstTrack, SELECT_FIRST_TRACK_MS);
+            //Utils.postDelayed(mHandler, mSelectFirstTrack, SELECT_FIRST_TRACK_MS);
             return true;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.Set;
 
 public class TrackErrorFixer {
-    private static final long BLACKLIST_INTERVAL_MS = 1_000;
+    private static final long BLACKLIST_INTERVAL_MS = 3_000;
     private final TrackSelectorManager mTrackSelectorManager;
     private long mSelectionTimeMs;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -17,6 +17,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listener.PlayerEventListener;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.ExoMediaSourceFactory;
+import com.liskovsoft.smartyoutubetv2.common.exoplayer.errors.TrackErrorFixer;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackInfoFormatter2;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorManager;
@@ -46,6 +47,8 @@ public ExoPlayerController(Context context) {
         mTrackSelectorManager = new TrackSelectorManager();
         mTrackFormatter = new TrackInfoFormatter2();
 
+        mMediaSourceFactory.setTrackErrorFixer(new TrackErrorFixer(mTrackSelectorManager));
+
         initFormats();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/errors/TrackErrorFixer.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.Set;
 
 public class TrackErrorFixer {
-    private static final long BLACKLIST_INTERVAL_MS = 10_000;
+    private static final long BLACKLIST_INTERVAL_MS = 3_000;
     private final TrackSelectorManager mTrackSelectorManager;
     private long mSelectionTimeMs;
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -153,7 +153,7 @@ public boolean contains(Video video) {
      * @return The next video in the playlist.
      */
     public Video getNext() {
-        if ((mCurrentIndex + 1) < mPlaylist.size()) {
+        if (mCurrentIndex >= 0 && (mCurrentIndex + 1) < mPlaylist.size()) {
             return mPlaylist.get(mCurrentIndex + 1);
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -170,7 +170,7 @@ public static boolean checkActivity(Activity activity) {
     }
 
     public static void updateRemoteControlService(Context context) {
-        if (context == null || Build.MODEL.equals("NV501WAC")) { // Eltex NPE fix
+        if (context == null || Helpers.equalsAny(Build.MODEL, "NV501", "NV501WAC")) { // Eltex NPE fix
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -57,7 +57,9 @@ public void onViewInitialized() {
 
         showAccountSelection();
 
-        applyNewIntent(getView().getNewIntent());
+        if (getView() != null) {
+            applyNewIntent(getView().getNewIntent());
+        }
     }
 
     private void applyRunOnceTasks() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -444,9 +444,6 @@ public static void chooseChannelPresenter(Context context, Video item) {
 
         LoadingManager.showLoading(context, true);
 
-        // Just in case we're opening channel inside a channel
-        ChannelPresenter.instance(context).clear();
-
         MediaServiceManager.instance().loadChannelRows(item, group -> {
             LoadingManager.showLoading(context, false);
 
@@ -461,6 +458,9 @@ public static void chooseChannelPresenter(Context context, Video item) {
                 //}
                 ChannelUploadsPresenter.instance(context).updateGrid(group.get(0));
             } else {
+                // Just in case we're opening channel inside a channel
+                // TODO: clear only once, on start
+                ChannelPresenter.instance(context).clear();
                 ChannelPresenter.instance(context).updateRows(group);
             }
         });

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -444,6 +444,9 @@ public static void chooseChannelPresenter(Context context, Video item) {
 
         LoadingManager.showLoading(context, true);
 
+        // Just in case we're opening channel inside a channel
+        ChannelPresenter.instance(context).clear();
+
         MediaServiceManager.instance().loadChannelRows(item, group -> {
             LoadingManager.showLoading(context, false);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -170,7 +170,7 @@ public static boolean checkActivity(Activity activity) {
     }
 
     public static void updateRemoteControlService(Context context) {
-        if (context == null) {
+        if (context == null || Build.MODEL.equals("NV501WAC")) { // Eltex NPE fix
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -224,7 +224,7 @@ private void initIntentChain() {
             viewManager.startDefaultView();
 
             // For debug purpose when using ATV bridge.
-            if (IntentExtractor.hasData(intent) && !IntentExtractor.isChannelUrl(intent)) {
+            if (IntentExtractor.hasData(intent) && !IntentExtractor.isChannelUrl(intent) && !IntentExtractor.isRootUrl(intent)) {
                 MessageHelpers.showLongMessage(getContext(), String.format("Can't process intent: %s", Helpers.toString(intent)));
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -469,7 +469,9 @@ private void toggleSubscribe() {
             return;
         }
 
-        if (mVideo.isSynced) {
+        // Until synced we won't really know weather we subscribed to a channel.
+        // Exclusion: channel item (can't be synced)
+        if (mVideo.isSynced || mVideo.isChannel()) {
             toggleSubscribeInt();
         } else {
             MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -440,6 +440,8 @@ public void onStart() {
         // VerticalGridView should not be focusable (see b/26894680 for details).
         list.setFocusable(false);
         list.setFocusableInTouchMode(false);
+        // MOD: disable scroll
+        //list.setFocusScrollStrategy(VerticalGridView.FOCUS_SCROLL_ITEM);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -70,6 +70,8 @@ public void updateSearch(VideoGroup group) {
     public void clearSearch() {
         mSearchQuery = null;
         mItemResultsAdapter.clear();
+        // Notify about changes (could help with search autofocus)
+        detachAdapter(1);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/search/SearchSupportFragment.java
Patch:
@@ -30,6 +30,7 @@
 import androidx.leanback.widget.SpeechOrbView;
 import androidx.leanback.widget.SpeechRecognitionCallback;
 import androidx.leanback.widget.VerticalGridView;
+import com.liskovsoft.sharedutils.BuildConfig;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 
 import java.util.ArrayList;
@@ -58,7 +59,7 @@
  */
 public class SearchSupportFragment extends Fragment {
     static final String TAG = SearchSupportFragment.class.getSimpleName();
-    static final boolean DEBUG = false;
+    static final boolean DEBUG = BuildConfig.DEBUG;
 
     private static final String EXTRA_LEANBACK_BADGE_PRESENT = "LEANBACK_BADGE_PRESENT";
     private static final String ARG_PREFIX = SearchSupportFragment.class.getCanonicalName();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -204,7 +204,7 @@ public void updateSections() {
         int index = 0;
 
         for (BrowseSection section : mSections) {
-            section.setEnabled(section.getId() == MediaGroup.TYPE_SETTINGS || mGeneralData.isBrowseSectionEnabled(section.getId()));
+            section.setEnabled(section.getId() == MediaGroup.TYPE_SETTINGS || mGeneralData.isSectionEnabled(section.getId()));
 
             if (section.isEnabled()) {
                 if (section.getId() == mGeneralData.getBootSectionId()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -127,6 +127,7 @@ private void appendUnpinFromSidebarButton() {
                         optionItem -> {
                             if (mVideo.hasPlaylist()) {
                                 togglePinToSidebar(createPinnedSection(mVideo));
+                                mSettingsPresenter.closeDialog();
                             } else {
                                 mServiceManager.loadChannelUploads(mVideo, group -> {
                                     if (group.getMediaItems() != null) {
@@ -135,6 +136,7 @@ private void appendUnpinFromSidebarButton() {
                                         Video section = createPinnedSection(Video.from(firstItem));
                                         section.title = mVideo.title;
                                         togglePinToSidebar(section);
+                                        mSettingsPresenter.closeDialog();
                                     }
                                 });
                             }
@@ -155,6 +157,7 @@ private void appendUnpinSectionFromSidebarButton() {
                         optionItem -> {
                             GeneralData.instance(getContext()).enableSection(mSection.getId(), false);
                             BrowsePresenter.instance(getContext()).updateSections();
+                            mSettingsPresenter.closeDialog();
                         }));
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoActionPresenter.java
Patch:
@@ -42,7 +42,7 @@ public void apply(Video item) {
     }
 
     private void chooseChannelPresenter(Video item) {
-        if (item.hasVideo()) {
+        if (item.hasVideo() || item.description == null) { // games section stream lists (no description)
             ChannelPresenter.instance(getContext()).openChannel(item);
             return;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -56,6 +56,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.renderer.CustomOverridesRenderersFactory;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.selector.RestoreTrackSelector;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerData;
+import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.adapter.VideoGroupObjectAdapter;
 import com.liskovsoft.smartyoutubetv2.tv.presenter.CustomListRowPresenter;
@@ -434,7 +435,7 @@ private void createMediaSession() {
         }
 
         mMediaSessionConnector.setMediaMetadataProvider(player -> {
-            if (getVideo() == null) {
+            if (getVideo() == null || PlayerTweaksData.instance(getContext()).isNotificationFixEnabled()) {
                 return null;
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -18,6 +18,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.ChannelPresenter;
 import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerData;
+import com.liskovsoft.smartyoutubetv2.common.prefs.PlayerTweaksData;
 import com.liskovsoft.smartyoutubetv2.common.utils.RxUtils;
 import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
@@ -316,7 +317,7 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
 
         if (formatInfo.isUnplayable()) {
             getController().showError(formatInfo.getPlayabilityStatus());
-        } else if (formatInfo.containsDashUrl() && isLive) {
+        } else if (formatInfo.containsDashUrl() && isLive && !PlayerTweaksData.instance(getActivity()).isLiveStreamFixEnabled()) {
             Log.d(TAG, "Found live video (current or past live stream) in dash format. Loading...");
             getController().openDashUrl(formatInfo.getDashManifestUrl());
         } else if (formatInfo.containsHlsUrl() && isLive) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -104,7 +104,7 @@ public void onCancel() {
     }
 
     @Override
-    public void onEngineReleased() {
+    public void onFinish() {
         if (mPlayerData.isAfrEnabled()) {
             TvQuickActions.sendStopAFR(getActivity());
         }
@@ -132,7 +132,7 @@ private void applyAfr() {
         if (mPlayerData.isAfrEnabled()) {
             FormatItem videoFormat = getController().getVideoFormat();
             applyAfr(videoFormat, false);
-            // Send data to AFR daemon
+            // Send data to AFR daemon via tvQuickActions app
             TvQuickActions.sendStartAFR(getActivity(), videoFormat);
         } else {
             restoreAfr();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -77,8 +77,8 @@ private void initSegmentColorMapping() {
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_SELF_PROMO, ContextCompat.getColor(getActivity(), R.color.yellow));
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_INTERACTION, ContextCompat.getColor(getActivity(), R.color.magenta));
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC, ContextCompat.getColor(getActivity(), R.color.brown));
-        mSegmentColorMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, ContextCompat.getColor(getActivity(), R.color.white));
-        mSegmentColorMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, ContextCompat.getColor(getActivity(), R.color.red));
+        mSegmentColorMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, ContextCompat.getColor(getActivity(), R.color.light_blue));
+        mSegmentColorMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, ContextCompat.getColor(getActivity(), R.color.white));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/ContentBlockSettingsPresenter.java
Patch:
@@ -83,8 +83,8 @@ private void appendCategoriesSection(AppDialogPresenter settingsPresenter) {
                 {getColoredString(R.string.content_block_self_promo, R.color.yellow), SponsorSegment.CATEGORY_SELF_PROMO},
                 {getColoredString(R.string.content_block_interaction, R.color.magenta), SponsorSegment.CATEGORY_INTERACTION},
                 {getColoredString(R.string.content_block_music_off_topic, R.color.brown), SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC},
-                {getColoredString(R.string.content_block_preview_recap, R.color.white), SponsorSegment.CATEGORY_PREVIEW_RECAP},
-                {getColoredString(R.string.content_block_highlight, R.color.red), SponsorSegment.CATEGORY_HIGHLIGHT}
+                {getColoredString(R.string.content_block_preview_recap, R.color.light_blue), SponsorSegment.CATEGORY_PREVIEW_RECAP},
+                {getColoredString(R.string.content_block_highlight, R.color.white), SponsorSegment.CATEGORY_HIGHLIGHT}
         }) {
             options.add(UiOptionItem.from(pair[0],
                     optionItem -> {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -77,8 +77,8 @@ private void initSegmentColorMapping() {
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_SELF_PROMO, ContextCompat.getColor(getActivity(), R.color.yellow));
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_INTERACTION, ContextCompat.getColor(getActivity(), R.color.magenta));
         mSegmentColorMapping.put(SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC, ContextCompat.getColor(getActivity(), R.color.brown));
-        mSegmentColorMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, ContextCompat.getColor(getActivity(), R.color.grey));
-        mSegmentColorMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, ContextCompat.getColor(getActivity(), R.color.white));
+        mSegmentColorMapping.put(SponsorSegment.CATEGORY_PREVIEW_RECAP, ContextCompat.getColor(getActivity(), R.color.white));
+        mSegmentColorMapping.put(SponsorSegment.CATEGORY_HIGHLIGHT, ContextCompat.getColor(getActivity(), R.color.red));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/ContentBlockSettingsPresenter.java
Patch:
@@ -83,8 +83,8 @@ private void appendCategoriesSection(AppDialogPresenter settingsPresenter) {
                 {getColoredString(R.string.content_block_self_promo, R.color.yellow), SponsorSegment.CATEGORY_SELF_PROMO},
                 {getColoredString(R.string.content_block_interaction, R.color.magenta), SponsorSegment.CATEGORY_INTERACTION},
                 {getColoredString(R.string.content_block_music_off_topic, R.color.brown), SponsorSegment.CATEGORY_MUSIC_OFF_TOPIC},
-                {getColoredString(R.string.content_block_music_off_topic, R.color.grey), SponsorSegment.CATEGORY_PREVIEW_RECAP},
-                {getColoredString(R.string.content_block_music_off_topic, R.color.white), SponsorSegment.CATEGORY_HIGHLIGHT}
+                {getColoredString(R.string.content_block_preview_recap, R.color.white), SponsorSegment.CATEGORY_PREVIEW_RECAP},
+                {getColoredString(R.string.content_block_highlight, R.color.red), SponsorSegment.CATEGORY_HIGHLIGHT}
         }) {
             options.add(UiOptionItem.from(pair[0],
                     optionItem -> {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/ExoFormatItem.java
Patch:
@@ -174,7 +174,7 @@ public static ExoFormatItem from(int type, int rendererIndex, String id, String
             case TYPE_AUDIO:
                 // Fake format. It's used in app internal comparison routine.
                 mediaTrack.format = Format.createAudioSampleFormat(
-                        id, null, codecs, -1, -1,0, 0, null, null, 0, null);
+                        id, null, codecs, -1, -1,0, 0, null, null, 0, language);
                 break;
             case TYPE_SUBTITLE:
                 // Fake format. It's used in app internal comparison routine.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -24,7 +24,7 @@ public int compare(MediaTrack track2) {
 
         int result = -1;
 
-        if (Helpers.equals(format.id, track2.format.id)) {
+        if (Helpers.equals(format.id, track2.format.id) && Helpers.equals(format.language, track2.format.language)) {
             result = 0;
         } else if (codecEquals(this, track2) && format.bitrate >= track2.format.bitrate) {
             result = 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -159,7 +159,7 @@ public void release() {
 
         if (mPlayer != null) {
             mPlayer.removeListener(this);
-            mPlayer.stop();
+            //mPlayer.stop();
             mPlayer.release();
             mPlayer = null;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -11,7 +11,6 @@
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.TrackSelection;
 import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.BuildConfig;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/IntentExtractor.java
Patch:
@@ -139,7 +139,7 @@ private static String extractVoiceQuery(Uri data) {
     }
 
     private static boolean isEmptyIntent(Intent intent) {
-        return intent == null || extractUri(intent) == null || !Intent.ACTION_VIEW.equals(intent.getAction());
+        return intent == null || (!Intent.ACTION_VIEW.equals(intent.getAction()) && !Intent.ACTION_SEND.equals(intent.getAction())) || extractUri(intent) == null;
     }
 
     private static Uri extractUri(Intent intent) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -364,7 +364,7 @@ public static Notification createNotification(Context context, int iconResId, in
             String channelId = context.getPackageName();
             NotificationChannel channel = new NotificationChannel(
                     channelId,
-                    context.getString(R.string.search_label),
+                    context.getString(titleResId),
                     NotificationManager.IMPORTANCE_HIGH);
             notificationManager.createNotificationChannel(channel);
             builder.setChannelId(channelId);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/RemoteControlService.java
Patch:
@@ -49,7 +49,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     private Notification createNotification() {
         return Utils.createNotification(
                 getApplicationContext(),
-                R.drawable.generic_channels,
+                getApplicationInfo().icon,
                 R.string.background_service_started,
                 ViewManager.instance(getApplicationContext()).getRootActivity());
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -372,7 +372,7 @@ private void createPlayer() {
         mPlayer = mPlayerInitializer.createPlayer(getContext(), renderersFactory, trackSelector);
         // Try to fix decoder error on Nvidia Shield 2019.
         // Init resources as early as possible.
-        //mPlayer.setForegroundMode(true);
+        mPlayer.setForegroundMode(true);
         mExoPlayerController.setPlayer(mPlayer);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -400,7 +400,7 @@ public void selectTrack(MediaTrack track) {
         MediaTrack matchedTrack = findBestMatch(track);
 
         setOverride(matchedTrack.rendererIndex, matchedTrack.groupIndex, matchedTrack.trackIndex);
-        //updateSelection(matchedTrack.rendererIndex, matchedTrack.groupIndex, matchedTrack.trackIndex);
+        updateSelection(matchedTrack.rendererIndex, matchedTrack.groupIndex, matchedTrack.trackIndex);
 
         // save immediately
         applyOverride(rendererIndex);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -312,7 +312,7 @@ private Pair<Definition, MediaTrack> createSelection(TrackGroupArray groups, Med
     }
 
     private Pair<Definition, MediaTrack> createRendererSelection(int rendererIndex, TrackGroupArray groups, Parameters params) {
-        if (mSelectedTracks[rendererIndex] == null) {
+        if (mSelectedTracks[rendererIndex] == null || params.hasSelectionOverride(rendererIndex, groups)) {
             return null;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -108,7 +108,7 @@ public void onSuggestionItemClicked(Video item) {
     public void onEngineInitialized() {
         // Restore before video loaded.
         // This way we override auto track selection mechanism.
-        //restoreFormats();
+        restoreFormats();
 
         // Show user info instead of black screen.
         if (!getPlayEnabled()) {
@@ -139,7 +139,7 @@ public void onVideoLoaded(Video item) {
         // Maybe this could help with Shield format problem.
         // NOTE: produce multi thread exception:
         // Attempt to read from field 'java.util.TreeMap$TreeMapEntry java.util.TreeMap$TreeMapEntry.left' on a null object reference (TrackSelectorManager.java:181)
-        restoreFormats();
+        //restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -69,7 +69,7 @@ public void openVideo(Video item) {
             }
 
             // Restore format according to profile on every new video
-            restoreVideoFormat();
+            //restoreVideoFormat();
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -108,7 +108,7 @@ public void onSuggestionItemClicked(Video item) {
     public void onEngineInitialized() {
         // Restore before video loaded.
         // This way we override auto track selection mechanism.
-        restoreFormats();
+        //restoreFormats();
 
         // Show user info instead of black screen.
         if (!getPlayEnabled()) {
@@ -139,7 +139,7 @@ public void onVideoLoaded(Video item) {
         // Maybe this could help with Shield format problem.
         // NOTE: produce multi thread exception:
         // Attempt to read from field 'java.util.TreeMap$TreeMapEntry java.util.TreeMap$TreeMapEntry.left' on a null object reference (TrackSelectorManager.java:181)
-        //restoreFormats();
+        restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -47,7 +47,7 @@ public ExoPlayerController(Context context) {
         mTrackSelectorManager = new TrackSelectorManager();
         mTrackFormatter = new TrackInfoFormatter2();
 
-        mTrackSelectorManager.selectTrack(ExoFormatItem.toMediaTrack(PlayerData.instance(context).getFormat(FormatItem.TYPE_VIDEO)));
+        //mTrackSelectorManager.selectTrack(ExoFormatItem.toMediaTrack(PlayerData.instance(context).getFormat(FormatItem.TYPE_VIDEO)));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -139,7 +139,7 @@ public void onVideoLoaded(Video item) {
         // Maybe this could help with Shield format problem.
         // NOTE: produce multi thread exception:
         // Attempt to read from field 'java.util.TreeMap$TreeMapEntry java.util.TreeMap$TreeMapEntry.left' on a null object reference (TrackSelectorManager.java:181)
-        restoreFormats();
+        //restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/old/SignInActivityOld.java
Patch:
@@ -17,6 +17,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
         ft.add(android.R.id.content, new SignInFragmentOld());
-        ft.commit();
+        ft.commitAllowingStateLoss();
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/old/SignInFragmentOld.java
Patch:
@@ -84,7 +84,7 @@ private void setupUi() {
         setButtonText("DONE");
         setButtonClickListener(arg0 -> {
             getActivity().finish();
-            //getFragmentManager().beginTransaction().remove(SignInFragment.this).commit();
+            //getFragmentManager().beginTransaction().remove(SignInFragment.this).commitAllowingStateLoss();
             //getFragmentManager().popBackStack();
         });
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/ExoMediaSourceFactory.java
Patch:
@@ -33,6 +33,7 @@
 import com.google.android.exoplayer2.util.Util;
 import com.liskovsoft.sharedutils.helpers.FileHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.smartyoutubetv2.common.utils.UserAgentManager;
 import com.liskovsoft.youtubeapi.app.AppConstants;
 import com.liskovsoft.youtubeapi.common.helpers.RetrofitHelper;
 
@@ -257,7 +258,7 @@ private static HttpDataSource.Factory buildHttpDataSourceFactory(DefaultBandwidt
         //        AppConstants.APP_USER_AGENT, bandwidthMeter);
 
         DefaultHttpDataSourceFactory dataSourceFactory = new DefaultHttpDataSourceFactory(
-                AppConstants.APP_USER_AGENT, bandwidthMeter, DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,
+                UserAgentManager.randomUserAgent(), bandwidthMeter, DefaultHttpDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS,
                 DefaultHttpDataSource.DEFAULT_READ_TIMEOUT_MILLIS, true);
 
         addCommonHeaders(dataSourceFactory); // cause troubles for some users

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -139,7 +139,7 @@ public void onVideoLoaded(Video item) {
         // Maybe this could help with Shield format problem.
         // NOTE: produce multi thread exception:
         // Attempt to read from field 'java.util.TreeMap$TreeMapEntry java.util.TreeMap$TreeMapEntry.left' on a null object reference (TrackSelectorManager.java:181)
-        //restoreFormats();
+        restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -398,7 +398,9 @@ private void showBootDialogs() {
     }
 
     public void refresh() {
-        updateSection(mCurrentSection.getId());
+        if (mCurrentSection != null) {
+            updateSection(mCurrentSection.getId());
+        }
     }
 
     private void updateRefreshTime() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -324,7 +324,7 @@ private void appendSubscribeButton() {
             return;
         }
 
-        if (mVideo == null || (!mVideo.hasChannel() && !mVideo.hasVideo()) || mVideo.hasPlaylist()) {
+        if (mVideo == null || (!mVideo.hasChannel() && !mVideo.hasVideo())) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/VideoMenuPresenter.java
Patch:
@@ -324,7 +324,7 @@ private void appendSubscribeButton() {
             return;
         }
 
-        if (mVideo == null || (!mVideo.hasChannel() && !mVideo.hasVideo())) {
+        if (mVideo == null || (!mVideo.hasChannel() && !mVideo.hasVideo()) || mVideo.hasPlaylist()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -164,9 +164,9 @@ public void loadNext() {
     @Override
     public void onPlayEnd() {
         // Fix simultaneous videos loading (e.g. when playback ends and user opens new video)
-        //if (isActionsRunning()) {
-        //    return;
-        //}
+        if (isActionsRunning()) {
+            return;
+        }
 
         int playbackMode = checkSleepTimer(mPlayerData.getPlaybackMode());
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -164,9 +164,9 @@ public void loadNext() {
     @Override
     public void onPlayEnd() {
         // Fix simultaneous videos loading (e.g. when playback ends and user opens new video)
-        if (isActionsRunning()) {
-            return;
-        }
+        //if (isActionsRunning()) {
+        //    return;
+        //}
 
         int playbackMode = checkSleepTimer(mPlayerData.getPlaybackMode());
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/misc/SearchSupportFragment.java
Patch:
@@ -381,7 +381,7 @@ public void onKeyboardDismiss(String query) {
         if (getChildFragmentManager().findFragmentById(R.id.lb_results_frame) == null) {
             mRowsSupportFragment = new RowsSupportFragment();
             getChildFragmentManager().beginTransaction()
-                    .replace(R.id.lb_results_frame, mRowsSupportFragment).commit();
+                    .replace(R.id.lb_results_frame, mRowsSupportFragment).commitAllowingStateLoss();
         } else {
             mRowsSupportFragment = (RowsSupportFragment) getChildFragmentManager()
                     .findFragmentById(R.id.lb_results_frame);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -196,6 +196,7 @@ public void onPlayEnd() {
                 if (mPlaylist.getNext() == null) {
                     getController().showSuggestions(true);
                     getController().setPlay(false);
+                    getController().setPositionMs(0);
                 } else {
                     onNextClicked();
                     getController().showControls(true);
@@ -210,6 +211,7 @@ public void onPlayEnd() {
                 } else {
                     getController().showSuggestions(true);
                     getController().setPlay(false);
+                    getController().setPositionMs(0);
                 }
                 break;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SignInPresenter.java
Patch:
@@ -57,7 +57,9 @@ public void onViewInitialized() {
     }
 
     public void onActionClicked() {
-        getView().close();
+        if (getView() != null) {
+            getView().close();
+        }
     }
 
     private void updateUserCode() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -137,7 +137,9 @@ public void onEngineError(int type) {
     public void onVideoLoaded(Video item) {
         // Restore formats again.
         // Maybe this could help with Shield format problem.
-        restoreFormats();
+        // NOTE: produce multi thread exception:
+        // Attempt to read from field 'java.util.TreeMap$TreeMapEntry java.util.TreeMap$TreeMapEntry.left' on a null object reference (TrackSelectorManager.java:181)
+        //restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -84,7 +84,7 @@ private void initRenderer(int rendererIndex) {
      * @param parameters supplied externally from {@link RestoreTrackSelector}
      */
     private void initRenderer(int rendererIndex, MappedTrackInfo trackInfo, Parameters parameters) {
-        if (mRenderers[rendererIndex] != null) {
+        if (mRenderers[rendererIndex] != null && mRenderers[rendererIndex].mediaTracks != null) {
             return;
         }
 
@@ -100,7 +100,7 @@ private void initRenderer(int rendererIndex, MappedTrackInfo trackInfo, Paramete
      * @param parameters supplied externally from {@link RestoreTrackSelector}
      */
     private void initRenderer(int rendererIndex, TrackGroupArray groups, Parameters parameters) {
-        if (mRenderers[rendererIndex] != null) {
+        if (mRenderers[rendererIndex] != null && mRenderers[rendererIndex].mediaTracks != null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/AppDataSourceManager.java
Patch:
@@ -40,7 +40,7 @@ public List<SettingsItem> getSettingItems(Context context) {
         settingItems.add(new SettingsItem(
                 context.getString(R.string.settings_accounts), () -> AccountSettingsPresenter.instance(context).show(), R.drawable.settings_account));
         settingItems.add(new SettingsItem(
-                context.getString(R.string.settings_linked_devices), () -> RemoteControlSettingsPresenter.instance(context).show(), R.drawable.settings_cast));
+                context.getString(R.string.settings_remote_control), () -> RemoteControlSettingsPresenter.instance(context).show(), R.drawable.settings_cast));
         settingItems.add(new SettingsItem(
                 context.getString(R.string.settings_language_country), () -> LanguageSettingsPresenter.instance(context).show(), R.drawable.settings_language));
         settingItems.add(new SettingsItem(

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.signin;
 
-import android.graphics.Color;
 import android.os.Bundle;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -9,7 +8,6 @@
 import androidx.leanback.widget.GuidedAction;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SignInPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.views.SignInView;
-import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 
 import java.util.List;
@@ -58,7 +56,7 @@ public void close() {
     @NonNull
     public GuidanceStylist.Guidance onCreateGuidance(@NonNull Bundle savedInstanceState) {
         String title = getString(R.string.signin_view_title);
-        String description = getString(R.string.signin_view_description, Utils.color(SIGN_IN_URL, Color.RED));
+        String description = getString(R.string.signin_view_description, SIGN_IN_URL);
         return new GuidanceStylist.Guidance(title, description, "", null);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -137,7 +137,7 @@ public void onEngineError(int type) {
     public void onVideoLoaded(Video item) {
         // Restore formats again.
         // Maybe this could help with Shield format problem.
-        //restoreFormats();
+        restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -73,6 +73,7 @@ public void onCreate(Bundle savedInstanceState) {
         setupUi();
 
         enableMainFragmentScaling(false);
+        mIsStateSaved = false;
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogFragment.java
Patch:
@@ -37,6 +37,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
 
         mSettingsPresenter = AppDialogPresenter.instance(getActivity());
         mSettingsPresenter.setView(this);
+        mIsStateSaved = false;
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/VideoGroup.java
Patch:
@@ -57,8 +57,7 @@ public static VideoGroup from(MediaGroup mediaGroup, BrowseSection category, int
 
         videoGroup.mMediaGroup = mediaGroup;
         videoGroup.mTitle = mediaGroup.getTitle();
-        // TODO: replace with real id
-        videoGroup.mId = mediaGroup.hashCode();
+        videoGroup.mId = mediaGroup.getId();
         videoGroup.mVideos = new ArrayList<>();
 
         if (mediaGroup.getMediaItems() == null) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -148,7 +148,7 @@ public static void movePlayerToForeground(Context context) {
     }
 
     /**
-     * Could help with "Can not perform this action after onSaveInstanceState"?
+     * NOTE: Below won't help with "Can not perform this action after onSaveInstanceState"
      */
     public static boolean checkActivity(Activity activity) {
         return activity != null && !activity.isDestroyed() && !activity.isFinishing();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -400,7 +400,9 @@ private void initSubtitleStyles() {
      */
     private void initDefaultFormats() {
         mDefaultVideoFormats.put("SHIELD Android TV", FormatItem.VIDEO_4K_VP9_60);
-        //mDefaultVideoFormats.put("AFTMM", FormatItem.VIDEO_4K_VP9_60);
+        mDefaultVideoFormats.put("AFTMM", FormatItem.VIDEO_4K_VP9_60); // Stick 4K 2018
+        mDefaultVideoFormats.put("AFTKA", FormatItem.VIDEO_4K_VP9_60); // Stick 4K Max 2021
+        mDefaultVideoFormats.put("P1", FormatItem.VIDEO_FHD_AVC_60); // Chinese projector (see annoying emails)
     }
 
     private void restoreData() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/RemoteControlReceiver.java
Patch:
@@ -15,7 +15,7 @@ public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Initializing remote control listener...");
 
         // Autostart fix on some devices?
-        //Utils.startRemoteControlService(context);
+        Utils.startRemoteControlService(context);
 
         Utils.startRemoteControlWorkRequest(context);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -178,7 +178,7 @@ public void onServiceDisconnected(ComponentName name) {
     public static void startRemoteControlWorkRequest(Context context) {
         PeriodicWorkRequest workRequest =
                 new PeriodicWorkRequest.Builder(
-                        RemoteControlWorker.class, 10, TimeUnit.MINUTES
+                        RemoteControlWorker.class, 30, TimeUnit.MINUTES
                 ).build();
 
         WorkManager

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -178,7 +178,7 @@ public void onServiceDisconnected(ComponentName name) {
     public static void startRemoteControlWorkRequest(Context context) {
         PeriodicWorkRequest workRequest =
                 new PeriodicWorkRequest.Builder(
-                        RemoteControlWorker.class, 30, TimeUnit.MINUTES
+                        RemoteControlWorker.class, 10, TimeUnit.MINUTES
                 ).build();
 
         WorkManager

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -147,6 +147,9 @@ public static void movePlayerToForeground(Context context) {
         }
     }
 
+    /**
+     * Could help with "Can not perform this action after onSaveInstanceState"?
+     */
     public static boolean checkActivity(Activity activity) {
         return activity != null && !activity.isDestroyed() && !activity.isFinishing();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoader.java
Patch:
@@ -156,7 +156,7 @@ private void updateSuggestions(MediaItemMetadata mediaItemMetadata, Video video)
         if (suggestions == null) {
             String msg = "loadSuggestions: Can't obtain suggestions for video: " + video.title;
             Log.e(TAG, msg);
-            MessageHelpers.showMessage(getActivity(), msg);
+            //MessageHelpers.showMessage(getActivity(), msg);
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -303,7 +303,7 @@ private void openVideoFromNext(Video current, boolean showLoadingMsg) {
         // Significantly improves next video loading time!
         if (current.nextMediaItem != null) {
             openVideoInt(Video.from(current.nextMediaItem));
-        } else {
+        } else if (!current.isSynced) { // Maybe there's nothing left. E.g. when casting from phone
             // Wait in a loop while suggestions have been loaded...
             if (showLoadingMsg) {
                 MessageHelpers.showMessageThrottled(getActivity(), R.string.wait_data_loading);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -11,6 +11,7 @@
 import com.liskovsoft.sharedutils.helpers.FileHelpers;
 import com.liskovsoft.sharedutils.locale.LocaleUpdater;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SplashPresenter;
 import com.liskovsoft.smartyoutubetv2.common.misc.MotherActivity;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
@@ -327,6 +328,7 @@ public void properlyFinishTheApp(Context activity) {
 
     public void forceFinishTheApp() {
         SplashPresenter.unhold();
+        BrowsePresenter.unhold();
         clearCaches();
 
         // We need to destroy the app only if settings are changed

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/RemoteControlReceiver.java
Patch:
@@ -14,6 +14,7 @@ public class RemoteControlReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Initializing remote control listener...");
 
+        // Autostart fix on some devices?
         //Utils.startRemoteControlService(context);
 
         Utils.startRemoteControlWorkRequest(context);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -48,7 +48,7 @@ public ExoPlayerController(Context context) {
         mTrackFormatter = new TrackInfoFormatter2();
 
         // Trying to fix format downgrade to 144p
-        mTrackSelectorManager.selectTrack(ExoFormatItem.toMediaTrack(PlayerData.instance(context).getDefaultVideoFormat()));
+        mTrackSelectorManager.selectTrack(ExoFormatItem.toMediaTrack(PlayerData.instance(context).getFormat(FormatItem.TYPE_VIDEO)));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -390,9 +390,6 @@ private boolean handleMenuKey(int keyCode) {
             if (controlsShown) {
                 enableSuggestionsResetTimeout();
             }
-
-            // Disable chain key processing. Could help with G20s controller bug.
-            return true;
         }
 
         return false;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -74,7 +74,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
         boolean result = super.onKeyDown(keyCode, event);
 
         // Fix buggy G20s menu key (focus lost on key press)
-        return (event.getAction() == KeyEvent.ACTION_UP && KeyHelpers.isMenuKey(keyCode)) || result;
+        return (event.getAction() == KeyEvent.ACTION_DOWN && KeyHelpers.isMenuKey(keyCode)) || result;
     }
 
     public void finishReally() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/headers/ExtendedHeadersSupportFragment.java
Patch:
@@ -70,8 +70,6 @@ public void onCreate(final ItemBridgeAdapter.ViewHolder viewHolder) {
                                             (RowHeaderPresenter.ViewHolder) viewHolder.getViewHolder(),
                                             (Row) viewHolder.getItem());
                                 }
-
-                                //return true; // buggy G20s menu key fix?
                             }
                         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -103,6 +103,7 @@ private void prepareAndShowDialogUnsigned() {
         appendRefreshButton();
         appendUnpinFromSidebarButton();
         appendUnpinSectionFromSidebarButton();
+        appendAccountSelectionButton();
 
         if (mSettingsPresenter.isEmpty()) {
             MessageHelpers.showMessage(getContext(), R.string.msg_signed_users_only);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/menu/SectionMenuPresenter.java
Patch:
@@ -107,7 +107,8 @@ private void prepareAndShowDialogUnsigned() {
         if (mSettingsPresenter.isEmpty()) {
             MessageHelpers.showMessage(getContext(), R.string.msg_signed_users_only);
         } else {
-            mSettingsPresenter.showDialog(mVideo.title, this::disposeActions);
+            String title = mSection != null ? mSection.getTitle() : null;
+            mSettingsPresenter.showDialog(title, this::disposeActions);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -105,11 +105,12 @@ private boolean checkVideo(Video video) {
     }
 
     private void updateSponsorSegmentsAndWatch(Video item) {
-        if (item == null || item.videoId == null) {
+        if (item == null || item.videoId == null || mContentBlockData.getCategories().isEmpty()) {
             mSponsorSegments = null;
             return;
         }
 
+        // Reset colors
         getController().setSeekBarSegments(null);
 
         mSegmentsAction = mMediaItemManager.getSponsorSegmentsObserve(item.videoId, mContentBlockData.getCategories())

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -137,7 +137,7 @@ public void onEngineError(int type) {
     public void onVideoLoaded(Video item) {
         // Restore formats again.
         // Maybe this could help with Shield format problem.
-        //restoreFormats();
+        restoreFormats();
 
         // In this state video length is not undefined.
         restorePosition(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/FormatItem.java
Patch:
@@ -9,6 +9,7 @@ public interface FormatItem {
     FormatItem VIDEO_FHD_AVC_30 = ExoFormatItem.fromVideoSpec("1920,1080,30,avc", false);
     FormatItem VIDEO_HD_AVC_30 = ExoFormatItem.fromVideoSpec("1280,720,30,avc", false);
     FormatItem VIDEO_4K_VP9_60 = ExoFormatItem.fromVideoSpec("3840,2160,60,vp9", false);
+    FormatItem VIDEO_FHD_VP9_60 = ExoFormatItem.fromVideoSpec("1920,1080,60,vp9", false);
     FormatItem AUDIO_HQ_MP4A = ExoFormatItem.fromAudioData(ExoFormatItem.FORMAT_MP4A);
     int TYPE_VIDEO = 0;
     int TYPE_AUDIO = 1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -365,7 +365,7 @@ public FormatItem getDefaultAudioFormat() {
     public FormatItem getDefaultVideoFormat() {
         FormatItem formatItem = mDefaultVideoFormats.get(Build.MODEL);
 
-        return formatItem != null ? formatItem : Helpers.isVP9Supported() ? FormatItem.VIDEO_4K_VP9_60 : FormatItem.VIDEO_HD_AVC_30;
+        return formatItem != null ? formatItem : Helpers.isVP9Supported() ? FormatItem.VIDEO_FHD_VP9_60 : FormatItem.VIDEO_HD_AVC_30;
     }
 
     private void initSubtitleStyles() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -322,7 +322,7 @@ private void intSpeedItems(AppDialogPresenter settingsPresenter, List<OptionItem
                     optionItem -> {
                         mPlayerData.setSpeed(speed);
                         getController().setSpeed(speed);
-                        settingsPresenter.closeDialog();
+                        //settingsPresenter.closeDialog();
                     },
                     getController().getSpeed() == speed));
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -517,6 +517,7 @@ private void setupEventListeners() {
         setOnItemViewClickedListener(new ItemViewClickedListener());
         setOnItemViewSelectedListener(new ItemViewSelectedListener());
         mCardPresenter.setOnItemViewLongPressedListener(new ItemViewLongClickedListener());
+        mCardPresenter.setOnItemViewMenuPressedListener(new ItemViewLongClickedListener());
     }
 
     private final class ItemViewLongClickedListener implements OnItemViewPressedListener {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppDialogPresenter.java
Patch:
@@ -140,6 +140,7 @@ public void showDialog(String dialogTitle, Runnable onFinish) {
     public void closeDialog() {
         if (getView() != null) {
             getView().finish();
+            setView(null); // Stacked dialogs isDialogShown fix
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUIManager.java
Patch:
@@ -426,6 +426,9 @@ private boolean handleMenuKey(int keyCode) {
             if (controlsShown) {
                 enableSuggestionsResetTimeout();
             }
+
+            // Disable chain key processing. Could help with G20s controller bug.
+            return true;
         }
 
         return false;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -309,7 +309,7 @@ public static CharSequence color(CharSequence string, int color) {
 
     public static boolean deviceHasBuggyLongPress() {
         switch (Helpers.getDeviceName()) {
-            case "DuneHD":
+            case "tv175h (thor32tv)":
                 return true;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/versions/selector/RestoreTrackSelector.java
Patch:
@@ -29,6 +29,8 @@ public interface TrackSelectorCallback {
 
     public RestoreTrackSelector(Factory trackSelectionFactory) {
         super(trackSelectionFactory);
+        // Could help with Shield resolution bug?
+        setParameters(buildUponParameters().setForceHighestSupportedBitrate(true));
     }
 
     public void setOnTrackSelectCallback(TrackSelectorCallback callback) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -26,7 +26,7 @@ public int compare(MediaTrack track2) {
 
         if (Helpers.equals(format.id, track2.format.id)) {
             result = 0;
-        } else if (codecEquals(this, track2)) {
+        } else if (codecEquals(this, track2) && format.bitrate >= track2.format.bitrate) {
             result = 1;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -65,7 +65,7 @@ private void applyRunOnceTasks() {
             //checkTouchSupport(); // Not working?
             // Need to be the first line and executed on earliest stage once.
             // Inits service language and context.
-            Utils.initGlobalData(getContext());
+            //Utils.initGlobalData(getContext()); // Init already done in BasePresenter
             initIntentChain();
             updateChannels();
             getBackupDataOnce();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/internal/DisplaySyncHelper.java
Patch:
@@ -39,7 +39,9 @@ public interface AutoFrameRateListener {
     }
 
     public DisplaySyncHelper(Context context) {
-        mContext = context;
+        if (context != null) {
+            mContext = context.getApplicationContext();
+        }
     }
 
     public Mode getOriginalMode() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -343,7 +343,6 @@ private void openNewVideo(Video newVideo) {
             mVideo.playlistIndex = newVideo.playlistIndex;
             postStartPlaying(mVideo, getController().isPlaying());
         } else if (newVideo != null) {
-            mVideo = newVideo; // Sometimes video might be opened twice. Fix for that.
             newVideo.isRemote = true;
             PlaybackPresenter.instance(getActivity()).openVideo(newVideo);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -64,7 +64,9 @@ public void openVideo(Video item) {
         if (getController() != null) {
             // Save state of the previous video.
             // In case video opened from phone and other stuff.
-            saveState();
+            if (!item.equals(mVideo)) { // video might be opened twice (when remote connection enabled). Fix for that.
+                saveState();
+            }
 
             // Restore format according to profile on every new video
             restoreVideoFormat();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -343,6 +343,7 @@ private void openNewVideo(Video newVideo) {
             mVideo.playlistIndex = newVideo.playlistIndex;
             postStartPlaying(mVideo, getController().isPlaying());
         } else if (newVideo != null) {
+            mVideo = newVideo; // Sometimes video might be opened twice. Fix for that.
             newVideo.isRemote = true;
             PlaybackPresenter.instance(getActivity()).openVideo(newVideo);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -466,7 +466,8 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                         // Get ready for group with multiple codecs: avc, av01
                         if (MediaTrack.codecEquals(mediaTrack, originTrack)) {
                             result = mediaTrack;
-                            break;
+                            // Don't do break. Cause we don't know there 30/60 fps.
+                            //break;
                         } else if (!MediaTrack.codecEquals(result, originTrack) && !MediaTrack.preferByCodec(result, mediaTrack)) {
                             result = mediaTrack;
                         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -180,7 +180,7 @@ public void onPlayEnd() {
         saveState();
 
         // Don't enable screensaver here or you'll broke 'screen off' logic.
-        //showHideScreensaver(true);
+        showHideScreensaver(true);
     }
 
     @Override
@@ -412,9 +412,9 @@ private void showHideScreensaver(boolean show) {
             ScreensaverManager screensaverManager = ((MotherActivity) getActivity()).getScreensaverManager();
 
             if (show) {
-                screensaverManager.enable();
+                screensaverManager.enableChecked();
             } else {
-                screensaverManager.disable();
+                screensaverManager.disableChecked();
             }
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -218,8 +218,9 @@ public void updateErrorIfEmpty(ErrorFragmentData data) {
 
     @Override
     public void showError(ErrorFragmentData data) {
-        //replaceMainFragment(new ErrorDialogFragment(data));
-        showErrorIfEmpty(data);
+        replaceMainFragment(new ErrorDialogFragment(data));
+        // Why show only if empty?
+        //showErrorIfEmpty(data);
     }
 
     private void showErrorIfEmpty(ErrorFragmentData data) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -70,8 +70,8 @@ public void onViewResumed() {
     @Override
     public void onVideoLoaded(Video item) {
         // Sometimes AFR is not working on activity startup. Trying to fix with delay.
-        //applyAfrDelayed();
-        applyAfr();
+        applyAfrDelayed();
+        //applyAfr();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/GlobalKeyTranslator.java
Patch:
@@ -23,8 +23,8 @@ private void initKeyMapping() {
         }
 
         // Fix rare situations with some remotes. E.g. remote doesn't work on search page.
-        mKeyMapping.put(KeyEvent.KEYCODE_NUMPAD_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
-        mKeyMapping.put(KeyEvent.KEYCODE_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
+        //mKeyMapping.put(KeyEvent.KEYCODE_NUMPAD_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
+        //mKeyMapping.put(KeyEvent.KEYCODE_ENTER, KeyEvent.KEYCODE_DPAD_CENTER);
         mKeyMapping.put(KeyEvent.KEYCODE_BUTTON_B, KeyEvent.KEYCODE_BACK);
         // Fix for the unknown usb remote controller: https://smartyoutubetv.github.io/#comment-3742343397
         mKeyMapping.put(KeyEvent.KEYCODE_ESCAPE, KeyEvent.KEYCODE_BACK);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -369,6 +369,8 @@ private void createPlayer() {
         // Try to fix decoder error on Nvidia Shield 2019.
         // Init resources as early as possible.
         mPlayer.setForegroundMode(false);
+        // Fix afr pause bug
+        mPlayer.setPlayWhenReady(true);
         mExoPlayerController.setPlayer(mPlayer);
     }
 
@@ -446,6 +448,7 @@ public void onSkipToNext(Player player, ControlDispatcher controlDispatcher) {
             }
         });
 
+        // Fix exoplayer pause when switching AFR. The code seems buggy.
         mMediaSessionConnector.setControlDispatcher(new DefaultControlDispatcher() {
             @Override
             public boolean dispatchSetPlayWhenReady(Player player, boolean playWhenReady) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/CategoryEmptyError.java
Patch:
@@ -14,7 +14,7 @@ public CategoryEmptyError(Context context) {
 
     @Override
     public void onAction() {
-        // NOP
+        ViewManager.instance(mContext).startView(SignInView.class);
     }
 
     @Override
@@ -24,6 +24,6 @@ public String getMessage() {
 
     @Override
     public String getActionText() {
-        return null;
+        return mContext.getString(R.string.action_signin);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -70,8 +70,8 @@ public void onViewResumed() {
     @Override
     public void onVideoLoaded(Video item) {
         // Sometimes AFR is not working on activity startup. Trying to fix with delay.
-        applyAfrDelayed();
-        //applyAfr();
+        //applyAfrDelayed();
+        applyAfr();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -840,10 +840,10 @@ public PlaybackTransportRowPresenter() {
 
         mPlaybackControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar);
         mPlaybackControlsPresenter.setDefaultFocusToMiddle(false);
-        mPlaybackControlsPresenter.setFocusRecovery(false);
+        mPlaybackControlsPresenter.setFocusRecovery(true);
         mSecondaryControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar);
         mSecondaryControlsPresenter.setDefaultFocusToMiddle(false);
-        mSecondaryControlsPresenter.setFocusRecovery(false);
+        mSecondaryControlsPresenter.setFocusRecovery(true);
 
         mPlaybackControlsPresenter.setOnControlSelectedListener(mOnControlSelectedListener);
         mSecondaryControlsPresenter.setOnControlSelectedListener(mOnControlSelectedListener);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/AppUpdatePresenter.java
Patch:
@@ -9,9 +9,9 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
-import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SplashPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
+import com.liskovsoft.smartyoutubetv2.common.utils.Utils;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -58,7 +58,7 @@ public void start(boolean forceCheck) {
     @Override
     public void onUpdateFound(String versionName, List<String> changelog, String apkPath) {
         // Don't show update dialog if player opened
-        if (getContext() != null && PlaybackPresenter.instance(getContext()).getView() == null) {
+        if (getContext() != null && !Utils.isPlayerInForeground(getContext()) && Utils.isAppInForeground()) {
             showUpdateDialog(versionName, changelog, apkPath);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/AppUpdatePresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppDialogPresenter;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SplashPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
 
@@ -56,7 +57,8 @@ public void start(boolean forceCheck) {
 
     @Override
     public void onUpdateFound(String versionName, List<String> changelog, String apkPath) {
-        if (getContext() != null) {
+        // Don't show update dialog if player opened
+        if (getContext() != null && PlaybackPresenter.instance(getContext()).getView() == null) {
             showUpdateDialog(versionName, changelog, apkPath);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/GeneralSettingsPresenter.java
Patch:
@@ -170,7 +170,7 @@ private void appendScreenDimmingCategory(AppDialogPresenter settingsPresenter) {
                     mGeneralData.getScreenDimmingTimoutMin() == i));
         }
 
-        settingsPresenter.appendRadioCategory(getContext().getString(R.string.screen_diming), options);
+        settingsPresenter.appendRadioCategory(getContext().getString(R.string.screen_dimming), options);
     }
 
     private void appendAppBackupCategory(AppDialogPresenter settingsPresenter) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -31,7 +31,7 @@
 import com.google.android.exoplayer2.SimpleExoPlayer;
 import com.google.android.exoplayer2.ext.leanback.LeanbackPlayerAdapter;
 import com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector;
-import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.Factory;
+import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.util.Util;
 import com.liskovsoft.sharedutils.mylogger.Log;
@@ -361,7 +361,7 @@ private void createPlayer() {
         DefaultRenderersFactory renderersFactory = new CustomOverridesRenderersFactory(getContext());
 
         // Use default or pass your bandwidthMeter here: bandwidthMeter = new DefaultBandwidthMeter.Builder(getContext()).build()
-        DefaultTrackSelector trackSelector = new RestoreTrackSelector(new Factory());
+        DefaultTrackSelector trackSelector = new RestoreTrackSelector(new AdaptiveTrackSelection.Factory());
         mPlayer = mPlayerInitializer.createPlayer(getContext(), renderersFactory, trackSelector);
         // Try to fix decoder error on Nvidia Shield 2019.
         // Init resources as early as possible.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -330,10 +330,10 @@ private void loadFormatInfo(Video video) {
     private void processFormatInfo(MediaItemFormatInfo formatInfo) {
         if (formatInfo.isUnplayable()) {
             getController().showError(formatInfo.getPlayabilityStatus());
-        } else if (formatInfo.containsDashUrl()) {
+        } else if (formatInfo.containsDashUrl() && formatInfo.isLive()) {
             Log.d(TAG, "Found live video in dash format. Loading...");
             getController().openDashUrl(formatInfo.getDashManifestUrl());
-        } else if (formatInfo.containsHlsUrl()) {
+        } else if (formatInfo.containsHlsUrl() && formatInfo.isLive()) {
             Log.d(TAG, "Found live video (current and past) in hls format. Loading...");
             getController().openHlsUrl(formatInfo.getHlsManifestUrl());
         } else if (formatInfo.containsDashVideoInfo() && !mPlayerData.isLowQualityEnabled()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -151,12 +151,12 @@ public void loadPrevious() {
 
     public void loadNext() {
         Video next = mPlaylist.getNext();
+        mLastVideo = null; // in case next video is the same as previous
 
         if (next == null) {
             openVideoFromNext(getController().getVideo(), true);
         } else {
             mSkipAdd = true;
-            mLastVideo = null; // in case next video is the same
             openVideoInt(next);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -156,6 +156,7 @@ public void loadNext() {
             openVideoFromNext(getController().getVideo(), true);
         } else {
             mSkipAdd = true;
+            mLastVideo = null; // in case next video is the same
             openVideoInt(next);
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -152,7 +152,7 @@ private void appendScaleUI(AppDialogPresenter settingsPresenter) {
     private void appendCardTextScrollSpeed(AppDialogPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
-        for (float factor : new float[] {1, 1.5f, 2, 2.5f, 3, 3.5f, 4}) {
+        for (float factor : new float[] {1, 1.5f, 2, 2.5f, 3, 3.5f, 4, 4.5f, 5, 5.5f, 6, 6.5f, 7, 7.5f, 8}) {
             options.add(UiOptionItem.from(String.format("%sx", Helpers.formatFloat(factor)),
                     optionItem -> mMainUIData.setCardTextScrollSpeed(factor),
                     Helpers.floatEquals(factor, mMainUIData.getCardTextScrollSpeed())));

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/HQDialogManager.java
Patch:
@@ -248,7 +248,8 @@ private static List<OptionItem> fromPresets(Context context, VideoPreset[] prese
 
         result.add(0, UiOptionItem.from(
                 context.getString(R.string.video_preset_disabled),
-                optionItem -> setFormat(FormatItem.VIDEO_AUTO, playerData, onFormatSelected),
+                //optionItem -> setFormat(FormatItem.VIDEO_AUTO, playerData, onFormatSelected),
+                optionItem -> setFormat(playerData.getDefaultVideoFormat(), playerData, onFormatSelected),
                 !isPresetSelection));
 
         return result;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -348,11 +348,11 @@ public boolean isSonyTimerFixEnabled() {
         return mIsSonyTimerFixEnabled;
     }
 
-    private FormatItem getDefaultAudioFormat() {
+    public FormatItem getDefaultAudioFormat() {
         return FormatItem.AUDIO_HQ_MP4A;
     }
 
-    private FormatItem getDefaultVideoFormat() {
+    public FormatItem getDefaultVideoFormat() {
         FormatItem formatItem = mDefaultVideoFormats.get(Build.MODEL);
 
         return formatItem != null ? formatItem : Helpers.isVP9Supported() ? FormatItem.VIDEO_4K_VP9_60 : FormatItem.VIDEO_HD_AVC_30;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/surfacefragment/TextureViewWrapper.java
Patch:
@@ -11,7 +11,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import com.liskovsoft.smartyoutubetv2.tv.R;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.tmp.surface.textureview.TextureViewSurfaceHolder;
 
 public class TextureViewWrapper implements SurfaceWrapper {
     private int mState = SURFACE_NOT_CREATED;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/GeneralData.java
Patch:
@@ -235,6 +235,6 @@ private void persistState() {
                 mBootCategoryId, mIsSettingsCategoryEnabled, mAppExitShortcut,
                 mIsReturnToLauncherEnabled,mBackgroundShortcut, pinnedItems,
                 mIsHideShortsEnabled, mIsRemapFastForwardToNextEnabled, mScreenDimmingTimeoutMin,
-                mIsProxyEnabled));
+                mIsProxyEnabled, mIsBridgeCheckEnabled));
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackController.java
Patch:
@@ -8,4 +8,5 @@ public interface PlaybackController extends PlaybackEngineController, PlaybackUI
     void setVideo(Video item);
     Video getVideo();
     void finish();
+    void setAfrRunning(boolean isRunning);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -68,8 +68,8 @@ public void onViewResumed() {
     @Override
     public void onVideoLoaded(Video item) {
         // Sometimes AFR is not working on activity startup. Trying to fix with delay.
-        //applyAfrDelayed();
-        applyAfr();
+        applyAfrDelayed();
+        //applyAfr();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoMenuPresenter.java
Patch:
@@ -398,14 +398,13 @@ private void toggleSubscribe() {
             return;
         }
 
-        if (mVideo.channelId != null) {
+        if (mVideo.isSynced) {
             toggleSubscribeInt();
         } else {
             MessageHelpers.showLongMessage(getContext(), R.string.wait_data_loading);
 
             mServiceManager.loadMetadata(mVideo, metadata -> {
-                mVideo.channelId = metadata.getChannelId();
-                mVideo.isSubscribed = metadata.isSubscribed();
+                mVideo.sync(metadata);
                 toggleSubscribeInt();
             });
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoMenuPresenter.java
Patch:
@@ -398,6 +398,8 @@ private void toggleSubscribe() {
             return;
         }
 
+        MessageHelpers.showMessage(getContext(), R.string.wait_data_loading);
+
         mServiceManager.loadMetadata(mVideo, metadata -> {
             mVideo.channelId = metadata.getChannelId();
             mVideo.isSubscribed = metadata.isSubscribed();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -90,9 +90,8 @@ protected void onResume() {
     @Override
     protected void onPause() {
         super.onPause();
-
-        // Probably exiting to HOME. Enable screensaver.
-        mScreensaverManager.enable();
+        
+        mScreensaverManager.disable();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoMenuPresenter.java
Patch:
@@ -403,8 +403,6 @@ private void toggleSubscribe() {
             mVideo.isSubscribed = metadata.isSubscribed();
             toggleSubscribeInt();
         });
-        
-        MessageHelpers.showMessage(getContext(), mVideo.isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel);
     }
 
     private void toggleSubscribeInt() {
@@ -416,5 +414,7 @@ private void toggleSubscribeInt() {
                 mItemManager.unsubscribeObserve(mVideo.channelId) : mItemManager.subscribeObserve(mVideo.channelId);
 
         mSubscribeAction = RxUtils.execute(observable);
+
+        MessageHelpers.showMessage(getContext(), mVideo.isSubscribed ? R.string.unsubscribed_from_channel : R.string.subscribed_to_channel);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -168,7 +168,7 @@ private void initPinnedCallbacks() {
 
         for (Video item : pinnedItems) {
             if (item != null) {
-                mGridMapping.put(item.hashCode(), ChannelUploadsPresenter.instance(getContext()).obtainVideoGroupObservable(item));
+                mGridMapping.put(item.hashCode(), ChannelUploadsPresenter.instance(getContext()).obtainPlaylistObservable(item));
             }
         }
     }
@@ -345,7 +345,7 @@ public void pinItem(Video item) {
 
         Category category = new Category(item.hashCode(), item.title, Category.TYPE_GRID, item.cardImageUrl, true, item);
         mCategories.add(category);
-        mGridMapping.put(item.hashCode(), ChannelUploadsPresenter.instance(getContext()).obtainVideoGroupObservable(item));
+        mGridMapping.put(item.hashCode(), ChannelUploadsPresenter.instance(getContext()).obtainPlaylistObservable(item));
 
         if (getView() != null) {
             getView().addCategory(-1, category); // add last
@@ -638,7 +638,7 @@ private void updateMultiGrid(Video item) {
             return;
         }
 
-        updateVideoGrid(category, ChannelUploadsPresenter.instance(getContext()).obtainVideoGroupObservable(item), 1, true);
+        updateVideoGrid(category, ChannelUploadsPresenter.instance(getContext()).obtainPlaylistObservable(item), 1, true);
     }
 
     private Category getCategory(int categoryId) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/dialogs/VideoMenuPresenter.java
Patch:
@@ -148,14 +148,14 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
         mSettingsPresenter.clear();
 
         appendReturnToBackgroundVideoButton();
+        appendNotInterestedButton();
         appendAddToPlaylistButton(videoPlaylistInfos);
         appendAddToPlaybackQueueButton();
         appendPinToSidebarButton();
         appendOpenPlaylistButton();
         appendOpenChannelButton();
         //appendOpenChannelUploadsButton();
         appendSubscribeButton();
-        appendNotInterestedButton();
         appendShareButton();
         appendAccountSelectionButton();
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -364,6 +364,8 @@ private void createPlayer() {
         // Try to fix decoder error on Nvidia Shield 2019.
         // Init resources as early as possible.
         //mPlayer.setForegroundMode(true);
+        //mPlayer.setRepeatMode(Player.REPEAT_MODE_OFF);
+        //mPlayer.setShuffleModeEnabled(false);
 
         mExoPlayerController.setPlayer(mPlayer);
         mExoPlayerController.setTrackSelector(trackSelector);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -7,6 +7,7 @@
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItemFormatInfo;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.smartyoutubetv2.common.BuildConfig;
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Playlist;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
@@ -397,12 +398,12 @@ private void disposeActions() {
     private void initErrorMap() {
         mErrorMap.put(PlayerEventListener.ERROR_TYPE_SOURCE, R.string.msg_player_error_source);
         mErrorMap.put(PlayerEventListener.ERROR_TYPE_RENDERER, R.string.msg_player_error_renderer);
-        mErrorMap.put(PlayerEventListener.ERROR_TYPE_UNEXPECTED, R.string.msg_player_error_unexpected);
+        mErrorMap.put(PlayerEventListener.ERROR_TYPE_UNEXPECTED, BuildConfig.FLAVOR.equals("ststable") ? -1 : R.string.msg_player_error_unexpected);
     }
 
     private String getErrorMessage(int type) {
         Integer resId = mErrorMap.get(type);
         
-        return resId != null ? getActivity().getString(resId) : getActivity().getString(R.string.msg_player_error, type);
+        return resId == null ? getActivity().getString(R.string.msg_player_error, type) : resId > 0 ? getActivity().getString(resId) : null;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/AutoFrameRateManager.java
Patch:
@@ -87,8 +87,9 @@ public void onModeStart(Mode newMode) {
     public void onModeError(Mode newMode) {
         String msg = getActivity().getString(R.string.msg_mode_switch_error, UhdHelper.toResolution(newMode));
         Log.e(TAG, msg);
-        MessageHelpers.showMessage(getActivity(), msg);
-        //applyAfr();
+
+        // This error could appear even on success.
+        // MessageHelpers.showMessage(getActivity(), msg);
     }
 
     private void onFpsCorrectionClick() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -42,4 +42,5 @@ public interface PlayerController {
     float getSpeed();
     void setVolume(float volume);
     float getVolume();
+    void onViewPaused(boolean isPaused);
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -182,6 +182,7 @@ public void onResume() {
             initializePlayer();
         }
 
+        mExoPlayerController.onViewPaused(false);
         mEventListener.onViewResumed();
     }
 
@@ -193,6 +194,7 @@ public void onPause() {
             releasePlayer();
         }
 
+        mExoPlayerController.onViewPaused(true);
         mEventListener.onViewPaused();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -158,7 +158,7 @@ public void release() {
 
         if (mPlayer != null) {
             mPlayer.removeListener(this);
-            //mPlayer.stop();
+            mPlayer.stop();
             mPlayer.release();
             mPlayer = null;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -106,10 +106,10 @@ public void onEngineError(int type) {
             // Some ciphered data might be stalled.
             // Might happen when the app wasn't used quite a long time.
             MessageHelpers.showMessage(getActivity(), getErrorMessage(type));
-        }
 
-        // Delay to fix frequent requests
-        Utils.postDelayed(mHandler, mPendingRestartEngine, 3_000);
+            // Delay to fix frequent requests
+            Utils.postDelayed(mHandler, mPendingRestartEngine, 3_000);
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -106,10 +106,10 @@ public void onEngineError(int type) {
             // Some ciphered data might be stalled.
             // Might happen when the app wasn't used quite a long time.
             MessageHelpers.showMessage(getActivity(), getErrorMessage(type));
-
-            // Delay to fix frequent requests
-            Utils.postDelayed(mHandler, mPendingRestartEngine, 3_000);
         }
+
+        // Delay to fix frequent requests
+        Utils.postDelayed(mHandler, mPendingRestartEngine, 3_000);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -45,6 +45,7 @@ public interface PlaybackEngineController {
     void setPlay(boolean play);
     boolean getPlay();
     boolean isPlaying();
+    boolean isLoading();
     List<FormatItem> getVideoFormats();
     List<FormatItem> getAudioFormats();
     List<FormatItem> getSubtitleFormats();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -24,6 +24,7 @@ public interface PlayerController {
     void setPlay(boolean isPlaying);
     boolean getPlay();
     boolean isPlaying();
+    boolean isLoading();
     void release();
     void setPlayer(SimpleExoPlayer player);
     void setEventListener(PlayerEventListener eventListener);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -125,6 +125,6 @@ private boolean isPlaying() {
         }
 
         PlaybackView playbackView = PlaybackPresenter.instance(activity).getView();
-        return playbackView != null && playbackView.getController().isPlaying();
+        return playbackView != null && (playbackView.getController().isPlaying() || playbackView.getController().isLoading());
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -6,7 +6,6 @@
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
-import com.liskovsoft.smartyoutubetv2.common.BuildConfig;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.views.SplashView;
@@ -64,6 +63,9 @@ public void onViewInitialized() {
     private void applyRunOnceTasks() {
         if (!mRunOnce) {
             //checkTouchSupport(); // Not working?
+            // Need to be the first line and executed on earliest stage once.
+            // Inits service language and context.
+            Utils.initGlobalData(getContext());
             initIntentChain();
             updateChannels();
             getBackupDataOnce();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -382,7 +382,7 @@ private void openVideoInt(Video item) {
 
         if (item.isVideo()) {
             getController().showControls(true);
-            PlaybackPresenter.instance(getActivity()).openVideo(item);
+            getBridge().openVideo(item);
         } else if (item.isChannel()) {
             ChannelPresenter.instance(getActivity()).openChannel(item);
         } else {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/VideoMenuPresenter.java
Patch:
@@ -316,7 +316,7 @@ private void appendPinToSidebarButton() {
             video.playlistId = mVideo.playlistId;
             video.title = String.format("%s - %s",
                     mVideo.author != null ? mVideo.author : mVideo.title,
-                    mVideo.group != null ? mVideo.group.getTitle() : mVideo.description
+                    mVideo.group != null && mVideo.group.getTitle() != null ? mVideo.group.getTitle() : mVideo.description
             );
             video.cardImageUrl = mVideo.cardImageUrl;
             mCategory = video;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -63,7 +63,7 @@ public void onViewInitialized() {
 
     private void applyRunOnceTasks() {
         if (!mRunOnce) {
-            checkTouchSupport();
+            //checkTouchSupport(); // Not working?
             initIntentChain();
             updateChannels();
             getBackupDataOnce();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ScreensaverManager.java
Patch:
@@ -65,7 +65,9 @@ private void undimScreen() {
     }
 
     private void showHide(boolean show) {
-        showHideDimming(show);
+        if (mGeneralData.getScreenDimmingTimoutMin() != GeneralData.SCREEN_DIMMING_NEVER) {
+            showHideDimming(show);
+        }
         showHideScreensaver(true);
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -316,7 +316,7 @@ private void createHeader(int index, Category header) {
         HeaderItem headerItem = new CategoryHeaderItem(header);
 
         PageRow pageRow = new PageRow(headerItem);
-        if (index == -1) {
+        if (index == -1 || mCategoryRowAdapter.size() < index) {
             mCategoryRowAdapter.add(pageRow); // add to the end
         } else {
             mCategoryRowAdapter.add(index, pageRow);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -174,6 +174,7 @@ public void setCurrent(Video video) {
             mCurrentIndex = currentPosition;
         } else {
             add(video);
+            mCurrentIndex = mPlaylist.size() - 1;
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/ProxyManager.java
Patch:
@@ -221,6 +221,7 @@ protected void loadProxyInfoFromStorage() {
             Log.e(TAG, e);
             mProxy = Proxy.NO_PROXY;
             mEnabled = false; // Disable. Invalid proxy settings.
+            MessageHelpers.showLongMessage(mContext, "Invalid proxy address.");
         }
     }
 
@@ -370,6 +371,7 @@ private boolean configureProxy() {
         } catch (Exception e) {
             Log.e(TAG, e);
             mEnabled = false;
+            MessageHelpers.showLongMessage(mContext, e.getLocalizedMessage());
             return false;
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -646,7 +646,7 @@ private void filterIfNeeded(VideoGroup videoGroup) {
                 }
 
                 int lengthMs = ServiceHelper.timeTextToMillis(value.badge);
-                return lengthMs < SHORTS_LEN_MS;
+                return lengthMs > 0 && lengthMs < SHORTS_LEN_MS;
                 //return value.title.toLowerCase().contains("#short")  ||
                 //       value.title.toLowerCase().contains("#shorts") ||
                 //       value.title.toLowerCase().contains("#tiktok");

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Playlist.java
Patch:
@@ -67,6 +67,7 @@ public void add(Video video) {
 
         remove(video);
         mPlaylist.add(video);
+        mCurrentIndex = mPlaylist.size() - 1;
 
         // Video opened from the browser or suggestions.
         // In this case remove all next items.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/MotherActivity.java
Patch:
@@ -43,7 +43,9 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     @SuppressLint("RestrictedApi")
     @Override
     public boolean dispatchKeyEvent(KeyEvent event) {
-        mScreensaverManager.enable();
+        if (event.getAction() == KeyEvent.ACTION_DOWN) {
+            mScreensaverManager.enable();
+        }
 
         return super.dispatchKeyEvent(event);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AddDevicePresenter.java
Patch:
@@ -42,6 +42,7 @@ public void unhold() {
 
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         unhold();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppSettingsPresenter.java
Patch:
@@ -84,6 +84,7 @@ public static AppSettingsPresenter instance(Context context) {
      */
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         clear();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -240,6 +240,7 @@ private void updateCategoryType(int categoryId, int categoryType) {
 
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         disposeActions();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -99,6 +99,7 @@ public void onScrollEnd(Video item) {
 
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         disposeActions();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -51,6 +51,7 @@ public static SearchPresenter instance(Context context) {
 
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         disposeActions();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SignInPresenter.java
Patch:
@@ -46,6 +46,7 @@ public void unhold() {
 
     @Override
     public void onViewDestroyed() {
+        super.onViewDestroyed();
         unhold();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/VideoMenuPresenter.java
Patch:
@@ -141,8 +141,8 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
 
         appendReturnToBackgroundVideoButton();
         appendAddToPlaylist(videoPlaylistInfos);
-        appendOpenChannelButton();
         appendOpenPlaylistButton();
+        appendOpenChannelButton();
         //appendOpenChannelUploadsButton();
         appendSubscribeButton();
         appendNotInterestedButton();
@@ -164,8 +164,8 @@ private void prepareAndShowDialogUnsigned() {
         mSettingsPresenter.clear();
 
         appendReturnToBackgroundVideoButton();
-        appendOpenChannelButton();
         appendOpenPlaylistButton();
+        appendOpenChannelButton();
         appendShareButton();
         appendAccountSelectionButton();
 
@@ -211,7 +211,7 @@ private void appendOpenPlaylistButton() {
             return;
         }
 
-        if (mVideo == null || mVideo.playlistId == null) {
+        if (mVideo == null || !mVideo.isPlaylist()) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/base/BasePresenter.java
Patch:
@@ -71,7 +71,7 @@ public void onViewInitialized() {
 
     @Override
     public void onViewDestroyed() {
-        // NOP
+        mView = new WeakReference<>(null);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -479,7 +479,9 @@ private MediaTrack findBestMatch(MediaTrack originTrack) {
                         } else if (!MediaTrack.codecEquals(result, originTrack) && !MediaTrack.preferByCodec(result, mediaTrack)) {
                             result = mediaTrack;
                         }
-                    } else if (compare > 0 && mediaTrack.compare(result) >= 0) { // select track with higher possible quality
+                    } else if (compare > 0 &&
+                            (mediaTrack.compare(result) >= 0 ||              // Select track with higher possible quality
+                            MediaTrack.preferByCodec(mediaTrack, result))) { // Or prefer codec
                         // Get ready for group with multiple codecs: avc, av01
                         // Also handle situations where avc and av01 only (no vp9). E.g.: B4mIhE_15nc
                         if (MediaTrack.codecEquals(mediaTrack, originTrack)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -92,7 +92,8 @@ private int compare(MediaTrack track2, int type) {
 
         String id1 = format.id;
         String id2 = track2.format.id;
-        float frameRate1 = format.frameRate;
+        // Low fps (e.g. 8fps) on original track could break whole comparison
+        float frameRate1 = format.frameRate < 10 ? 30 : format.frameRate;
         float frameRate2 = track2.format.frameRate;
         String codecs1 = format.codecs;
         String codecs2 = track2.format.codecs;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackInfoFormatter2.java
Patch:
@@ -64,8 +64,7 @@ private static String extractResolutionLabel(Format format) {
         int height = format.height;
 
         // Try to avoid square video proportions
-        //return width > height && !VideoTrack.sizeEquals(width, height, 15) ? getResolutionLabelByWidth(width) : getResolutionLabelByHeight(height);
-        return getResolutionLabelByHeight(height);
+        return width > height && !VideoTrack.sizeEquals(width, height, 15) ? getResolutionLabelByWidth(width) : getResolutionLabelByHeight(height);
     }
 
     private static String getResolutionLabelByWidth(int width) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -26,7 +26,7 @@ public int compare(MediaTrack track2) {
 
         if (Helpers.equals(format.id, track2.format.id)) {
             result = 0;
-        } else if (codecEquals(format.codecs, track2.format.codecs)) {
+        } else if (codecEquals(this, track2)) {
             result = 1;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorUtil.java
Patch:
@@ -27,6 +27,7 @@ public class TrackSelectorUtil {
         mResolutionMap.put(854, 480);
         mResolutionMap.put(1280, 720);
         mResolutionMap.put(1920, 1080);
+        mResolutionMap.put(2048, 1440); // Tom Zanetti - Didn't Know
         mResolutionMap.put(2560, 1440);
         mResolutionMap.put(3840, 2160);
         mResolutionMap.put(7680, 4320);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppSettingsPresenter.java
Patch:
@@ -144,7 +144,8 @@ public void closeDialog() {
 
     public boolean isDialogShown() {
         // Also check that current dialog almost closed (new view start is pending from a menu item)
-        return !mCategories.isEmpty() && !ViewManager.instance(getContext()).isNewViewPending();
+        // Hmm. Maybe current dialog is pending. Check that view is null.
+        return !mCategories.isEmpty() && (!ViewManager.instance(getContext()).isNewViewPending() || getView() == null);
     }
 
     public void appendRadioCategory(String categoryTitle, List<OptionItem> items) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -107,7 +107,7 @@ private void startPlaybackWatcher() {
                         .map((val) -> getController().getPositionMs());
 
         mProgressAction = playbackProgressObservable
-                .subscribeOn(Schedulers.newThread())
+                .subscribeOn(AndroidSchedulers.mainThread()) // We should access player's position on the main thread
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         this::skipSegment,

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEngineEventListener.java
Patch:
@@ -26,12 +26,13 @@ public interface PlayerEngineEventListener {
     int ERROR_TYPE_OUT_OF_MEMORY = 4;
     void onPlay();
     void onPause();
+    void onPlayEnd();
+    void onBuffering();
     void onSeek();
     void onSourceChanged(Video item);
     void onVideoLoaded(Video item);
     void onEngineInitialized();
     void onEngineReleased();
     void onEngineError(int type);
-    void onPlayEnd();
     void onTrackChanged(FormatItem track);
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -255,7 +255,8 @@ private void setPlayerRowIndex(int index) {
 
     @Override
     public void restartEngine() {
-        if (isDetached()) {
+        if (isDetached() || getContext() == null) {
+            Log.e(TAG, "Can't restart engine. Seems that player activity is being destroyed.");
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -261,7 +261,7 @@ public void onVideoItemClicked(Video item) {
             // Below doesn't work right now. Api doesn't contains channel id.
             //ChannelPresenter.instance(getContext()).openChannel(item);
 
-            if (mUploadsType == Category.TYPE_MULTI_GRID) {
+            if (mUploadsType == Category.TYPE_MULTI_GRID) { // Is Channels new look enabled?
                 updateMultiGrid(item);
             } else {
                 ChannelUploadsPresenter.instance(getContext()).openChannel(item);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/VideoMenuPresenter.java
Patch:
@@ -137,6 +137,7 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
 
         mSettingsPresenter.clear();
 
+        appendPinToSidebarButton();
         appendReturnToBackgroundVideoButton();
         appendAddToPlaylist(videoPlaylistInfos);
         appendOpenChannelButton();
@@ -145,7 +146,6 @@ private void prepareAndShowDialogSigned(List<VideoPlaylistInfo> videoPlaylistInf
         appendNotInterestedButton();
         appendShareButton();
         appendAccountSelectionButton();
-        appendPinToSidebarButton();
 
         if (!mSettingsPresenter.isEmpty()) {
             String title = mVideo != null ? mVideo.title : mCategory.title;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/IntentExtractor.java
Patch:
@@ -112,6 +112,6 @@ public static boolean isStartVoiceCommand(Intent intent) {
      * Example: https://www.youtube.com/tv?voice={"youtubeAssistantRequest":{"query":"Russian YouTube","queryIntent":"CgxTZWFyY2hJbnRlbnQSFAoFcXVlcnkSCxoJCgdSdXNzaWFuEiYKCGRvY190eXBlEhoaGAoWWU9VVFVCRV9ET0NfVFlQRV9WSURFTw==","youtubeAssistantParams":{"personalDataParams":{"showPersonalData":false}},"enablePrefetchLogging":true},"updateYoutubeSettings":{"enableSafetyMode":false,"enablePersonalResults":false},"hasEntityBar":false}&command_id=CWGIYL6nN8Gi3AP_5Y6wAQ&launch=voice&vq=Russian%20YouTube
      */
     private static String extractVoiceQuery(Uri data) {
-        return Helpers.runMultiMatcher(data.toString(), ":{\"query\":\"([^\"]*)\"");
+        return Helpers.runMultiMatcher(data.toString(), ":\\{\"query\":\"([^\"]*)\"");
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/settings/SettingsGridFragment.java
Patch:
@@ -82,7 +82,7 @@ public void clear() {
     @Override
     public boolean isEmpty() {
         if (mSettingsAdapter == null) {
-            return false;
+            return mPendingUpdates.isEmpty();
         }
 
         return mSettingsAdapter.size() == 0;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultipleRowsFragment.java
Patch:
@@ -102,7 +102,7 @@ public void clear() {
     @Override
     public boolean isEmpty() {
         if (mRowsAdapter == null) {
-            return false;
+            return mPendingUpdates.isEmpty();
         }
 
         return mRowsAdapter.size() == 0;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/VideoGridFragment.java
Patch:
@@ -152,7 +152,7 @@ public void clear() {
     @Override
     public boolean isEmpty() {
         if (mGridAdapter == null) {
-            return false;
+            return mPendingUpdates.isEmpty();
         }
 
         return mGridAdapter.size() == 0;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -971,7 +971,9 @@ public void setSubscribeButtonState(boolean subscribe) {
 
     @Override
     public void setDebugButtonState(boolean show) {
-        mPlayerGlue.setVideoStatsActionState(show);
+        if (mPlayerGlue != null) {
+            mPlayerGlue.setVideoStatsActionState(show);
+        }
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -743,9 +743,7 @@ void updateTotalTime() {
             // Update total time with respect of speed
             long newTotalTimeMs = applySpeedCorrection(mTotalTimeInMs);
 
-            if (newTotalTimeMs != mTotalTimeInMs) {
-                onSetDurationLabel(newTotalTimeMs);
-            }
+            onSetDurationLabel(newTotalTimeMs);
         }
 
         long applySpeedCorrection(long timeMs) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/seekpreview/ThumbsBar.java
Patch:
@@ -21,7 +21,6 @@
 import android.util.SparseArray;
 import android.view.View;
 import android.view.ViewGroup;
-import android.view.ViewGroup.LayoutParams;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import androidx.annotation.RestrictTo;
@@ -59,11 +58,11 @@ public ThumbsBar(Context context, AttributeSet attrs, int defStyle) {
         // the width of non-hero thumb should be 80% of HeroThumb's Width, i.e. 0.8 * 192dp = 154dp
         mThumbWidthInPixel = context.getResources().getDimensionPixelSize(
                 R.dimen.lb_playback_transport_thumbs_width);
-        mThumbHeightInPixel = LayoutParams.WRAP_CONTENT;
+        mThumbHeightInPixel = (int) (mThumbWidthInPixel / 1.77); // limit height by 16:9 ratio (vertical videos fix)
         // According to the spec, the width of HeroThumb should be 192dp
         mHeroThumbWidthInPixel = context.getResources().getDimensionPixelSize(
                 R.dimen.lb_playback_transport_hero_thumbs_width);
-        mHeroThumbHeightInPixel = LayoutParams.WRAP_CONTENT;
+        mHeroThumbHeightInPixel = (int) (mHeroThumbWidthInPixel / 1.77); // limit height by 16:9 ratio (vertical videos fix)
         // According to the spec, the margin between thumbs to be 4dp
         mMeasuredMarginInPixel = context.getResources().getDimensionPixelSize(
                 R.dimen.lb_playback_transport_thumbs_margin);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -966,7 +966,9 @@ public void setDebugButtonState(boolean show) {
 
     @Override
     public void showDebugView(boolean show) {
-        mDebugInfoManager.show(show);
+        if (mDebugInfoManager != null) {
+            mDebugInfoManager.show(show);
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -3,6 +3,7 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.ActivityManager;
+import android.content.ActivityNotFoundException;
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
@@ -216,7 +217,7 @@ public static String toQrCodeLink(String data) {
     public static void openLink(Context context, String url) {
         try {
             openLinkInTabs(context, url);
-        } catch (SecurityException e) { // Permission Denial on Android 9
+        } catch (SecurityException | ActivityNotFoundException e) { // Permission Denial on Android 9/Chrome Tabs not found
             Helpers.openLink(context, url); // revert to simple in-browser page
         }
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -258,6 +258,8 @@ public void updateCategory(VideoGroup group) {
         restoreMainFragment();
 
         mCategoryFragmentFactory.updateCurrentFragment(group);
+
+        fixInvisibleSearchOrb();
     }
 
     @Override
@@ -343,12 +345,11 @@ public void onResume() {
         }
 
         mIsFragmentCreated = false;
-
-        fixInvisibleSearchOrb();
     }
 
     /**
      * Fix suddenly invisible search orb bug<br/>
+     * Could happen when search orb is hidden (e.g. page is scrolled)<br/>
      * More info: {@link TitleHelper}
      */
     private void fixInvisibleSearchOrb() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUiManager.java
Patch:
@@ -165,8 +165,8 @@ public void onEngineInitialized() {
         mEngineReady = true;
 
         // Activate debug infos after engine restarting.
-        //getController().showDebugView(mDebugViewEnabled);
-        //getController().setDebugButtonState(mDebugViewEnabled);
+        getController().showDebugView(mDebugViewEnabled);
+        getController().setDebugButtonState(mDebugViewEnabled);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/misc/SearchSupportFragment.java
Patch:
@@ -740,9 +740,9 @@ void updateFocus() {
         if (mResultAdapter != null && mResultAdapter.size() > 0
                 && mRowsSupportFragment != null && mRowsSupportFragment.getAdapter() == mResultAdapter) {
             focusOnResults();
-        } else {
-            mSearchBar.requestFocus();
         }
+
+        // Fixed moving focus to voice button
     }
 
     protected void focusOnResults() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -106,7 +106,7 @@ private void startSearch(String searchText, boolean enableRecognition) {
     public boolean onQueryTextChange(String newQuery) {
         loadSearchTags(newQuery);
 
-        // Don't auto commit to prevent focus loss.
+        // Avoid auto commit to prevent search field focus loss.
         if (isVoiceQuery(newQuery)) {
             loadSearchResult(newQuery);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -27,8 +27,8 @@ public final class Video implements Parcelable {
     public String badge;
     public String previewUrl;
     public int percentWatched = -1;
-    public MediaItem mediaItem;
-    public MediaItem nextMediaItem;
+    public MediaItem mediaItem; // memory leak
+    public MediaItem nextMediaItem; // memory leak
     public boolean hasNewContent;
     public boolean isLive;
     public boolean isUpcoming;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -28,7 +28,6 @@
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.internal.DisplayHolder.Mode;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.internal.UhdHelper;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.V2.videorenderer.AmlogicFix2MediaCodecVideoRenderer;
 import com.liskovsoft.smartyoutubetv2.common.prefs.AppPrefs;
 
 import java.util.ArrayList;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/versions/V2/framedrop/AmlogicFix2MediaCodecVideoRenderer.java
Patch:
@@ -1,4 +1,4 @@
-package com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.V2.videorenderer;
+package com.liskovsoft.smartyoutubetv2.common.exoplayer.versions.V2.framedrop;
 
 import android.content.Context;
 import android.os.Handler;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/V2/videorenderer/AmlogicFixMediaCodecVideoRenderer.java
Patch:
@@ -1,4 +1,4 @@
-package com.liskovsoft.smartyoutubetv2.common.exoplayer.other.V2;
+package com.liskovsoft.smartyoutubetv2.common.exoplayer.other.V2.videorenderer;
 
 import android.content.Context;
 import android.media.MediaCodec;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/V2/videorenderer/FrameDropFixMediaCodecVideoRenderer.java
Patch:
@@ -1,4 +1,4 @@
-package com.liskovsoft.smartyoutubetv2.common.exoplayer.other.V2;
+package com.liskovsoft.smartyoutubetv2.common.exoplayer.other.V2.videorenderer;
 
 import android.annotation.TargetApi;
 import android.content.Context;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -117,7 +117,9 @@ public void onEngineInitialized() {
     @Override
     public void onEngineReleased() {
         // Save previous state
-        setPlayEnabled(getController().getPlay());
+        if (getController().getLengthMs() > 0) {
+            setPlayEnabled(getController().getPlay());
+        }
 
         saveState();
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -10,6 +10,7 @@
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackEngineController;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppSettingsPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
 import com.liskovsoft.smartyoutubetv2.common.prefs.MainUIData;
 import com.liskovsoft.smartyoutubetv2.tv.R;
@@ -193,7 +194,7 @@ public void onVisibleBehindCanceled() {
     @Override
     public void onUserLeaveHint () {
         // Check that user not open dialog instead of really leaving the activity
-        if (!mPlaybackFragment.isControlsShown()) {
+        if (!AppSettingsPresenter.instance(this).isDialogShown()) {
             switch (mPlaybackFragment.getPlaybackMode()) {
                 case PlaybackEngineController.BACKGROUND_MODE_PLAY_BEHIND:
                     enterBackgroundPlayMode();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -143,6 +143,7 @@ public void onPlayEnd() {
                 if (!getController().isInPIPMode()) {
                     getController().showSuggestions(true);
                 }
+                getController().setPlay(false);
                 break;
             case PlaybackEngineController.PLAYBACK_MODE_LIST:
                 // stop player (if not playing playlist)
@@ -156,6 +157,7 @@ public void onPlayEnd() {
                     if (!getController().isInPIPMode()) {
                         getController().showSuggestions(true);
                     }
+                    getController().setPlay(false);
                 }
                 break;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -252,6 +252,7 @@ private void saveState() {
             } else {
                 // Add null state to prevent restore position from history
                 mStates.remove(video.videoId);
+                video.percentWatched = 0;
             }
 
             persistState();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/fragments/GridFragment.java
Patch:
@@ -90,6 +90,9 @@ public ObjectAdapter getAdapter() {
                 @Override
                 public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
                                            RowPresenter.ViewHolder rowViewHolder, Row row) {
+                    if (mGridViewHolder == null) {
+                        return;
+                    }
                     int position = mGridViewHolder.getGridView().getSelectedPosition();
                     if (DEBUG) Log.v(TAG, "grid selected position " + position);
                     gridOnItemSelected(position);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -202,8 +202,10 @@ public void onFinish() {
                 releasePlayer();
             }
 
+            // Bug: history not updated on Android 6.0.1
+            // Remote control fix
             // Assuming that user wants to close the player
-            setVideo(null);
+            // setVideo(null);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -372,7 +372,9 @@ private void continueGroup(VideoGroup group) {
                         continueMediaGroup -> getView().updateCategory(VideoGroup.from(continueMediaGroup, group.getCategory())),
                         error -> {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
-                            getView().showProgressBar(false);
+                            if (getView() != null) {
+                                getView().showProgressBar(false);
+                            }
                         },
                         () -> getView().showProgressBar(false)
                 );

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -131,7 +131,8 @@ public void onPlayEnd() {
                 break;
             case PlaybackEngineController.PLAYBACK_MODE_LIST:
                 // stop player (if not playing playlist)
-                if (getController().getVideo().playlistId != null) {
+                Video video = getController().getVideo();
+                if (video != null && video.playlistId != null) {
                     onNextClicked();
                     if (!getController().isInPIPMode()) {
                         getController().showControls(true);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -22,6 +22,7 @@ public class SplashPresenter extends BasePresenter<SplashView> {
     private SplashPresenter(Context context) {
         super(context);
         GlobalPreferences.instance(context); // auth token storage init
+        ViewManager.instance(context).clearCaches(); // remove downloaded apks, re-init service lang
     }
 
     public static SplashPresenter instance(Context context) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -558,7 +558,7 @@ public boolean isSuggestionsEmpty() {
     public void setVideo(Video video) {
         mExoPlayerController.setVideo(video);
 
-        if (mPlayerGlue != null) {
+        if (mPlayerGlue != null && video != null) {
             mPlayerGlue.setTitle(video.title);
             mPlayerGlue.setSubtitle(video.description);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -4,8 +4,7 @@
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 public class VideoTrack extends MediaTrack {
-    private static final int SIZE_EQUITY_THRESHOLD_PX = 80;
-    private static final int SIZE_EQUITY_THRESHOLD_PERCENT = 15;
+    private static final int SIZE_EQUITY_THRESHOLD_PERCENT = 5;
     private static final int COMPARE_TYPE_IN_BOUNDS = 0;
     private static final int COMPARE_TYPE_IN_BOUNDS_PROFILE = 1;
     private static final int COMPARE_TYPE_NORMAL = 2;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -108,7 +108,7 @@ private int inBounds(String id1, String id2, int size1, int size2, float frameRa
 
         if (Helpers.equals(id1, id2)) {
             result = 0;
-        } if (sizeLessOrEquals(size2, size1)) {
+        } else if (sizeLessOrEquals(size2, size1)) {
             if (TrackSelectorUtil.isHdrCodec(codecs1) == TrackSelectorUtil.isHdrCodec(codecs2)) {
                 result = 1;
             } else if (TrackSelectorUtil.isHdrCodec(codecs1)) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AccountSelectionPresenter.java
Patch:
@@ -57,7 +57,7 @@ public void show(boolean force) {
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
-                        this::createAndShowDialog,
+                        accounts -> createAndShowDialog(accounts, force),
                         error -> Log.e(TAG, "Get accounts error: %s", error.getMessage())
                 );
     }
@@ -67,8 +67,8 @@ public void unhold() {
         sInstance = null;
     }
 
-    private void createAndShowDialog(List<Account> accounts) {
-        if (accounts == null || accounts.size() <= 1) {
+    private void createAndShowDialog(List<Account> accounts, boolean force) {
+        if (accounts.size() <= 1 && !force) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -69,7 +69,9 @@ public void onPause() {
     @Override
     public void onPlayEnd() {
         switch (PlayerData.instance(getActivity()).getPlaybackMode()) {
+            case PlaybackEngineController.PLAYBACK_MODE_CLOSE:
             case PlaybackEngineController.PLAYBACK_MODE_PAUSE:
+            case PlaybackEngineController.PLAYBACK_MODE_REPEAT_ALL:
                 postPlay(false);
                 break;
             case PlaybackEngineController.PLAYBACK_MODE_REPEAT_ONE:

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -188,7 +188,6 @@ private void loadVideoFromMetadata(Video current) {
             loadVideoFromNext(current.nextMediaItem);
         } else {
             MessageHelpers.showMessageThrottled(getActivity(), R.string.next_video_info_is_not_loaded_yet);
-            getController().exit();
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -132,7 +132,7 @@ private void enterPIPMode() {
     }
 
     private boolean wannaEnterToPIP() {
-        return mPlaybackFragment.getPlaybackMode() == PlaybackEngineController.BACKGROUND_MODE_PIP && !isInPictureInPictureMode();
+        return mPlaybackFragment != null && mPlaybackFragment.getPlaybackMode() == PlaybackEngineController.BACKGROUND_MODE_PIP && !isInPictureInPictureMode();
     }
 
     //@Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -784,7 +784,9 @@ public void showControls(boolean show) {
 
     @Override
     public void setRepeatButtonState(int modeIndex) {
-        mPlayerGlue.setRepeatActionState(modeIndex);
+        if (mPlayerGlue != null) {
+            mPlayerGlue.setRepeatActionState(modeIndex);
+        }
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -107,7 +107,7 @@ public boolean startParentView(Activity activity) {
                 mMoveViewsToBack = true;
 
                 if (mIsSinglePlayerMode) {
-                    activity.moveTaskToBack(true);
+                    safeMoveTaskToBack(activity);
                     return true;
                 }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -108,6 +108,6 @@ public static void movePlayerToForeground(Context context) {
     }
 
     public static boolean checkActivity(Activity activity) {
-        return activity != null && !activity.isDestroyed() && !activity.isFinishing() && activity.getTaskId() > 0;
+        return activity != null && !activity.isDestroyed() && !activity.isFinishing();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -14,8 +14,8 @@ public int inBounds(MediaTrack track2) {
 
     @Override
     public int compare(MediaTrack track2) {
-        if (track2.format == null) {
-            return 1;
+        if (track2 == null || track2.format == null) {
+            return -1;
         }
 
         int result = -1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -64,8 +64,8 @@ public int compare(MediaTrack track2) {
     }
 
     private int compare(MediaTrack track2, int type) {
-        if (track2.format == null) {
-            return 1;
+        if (track2 == null || track2.format == null) {
+            return -1;
         }
 
         int size1;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -374,7 +374,8 @@ private void continueGroup(VideoGroup group) {
                             Log.e(TAG, "continueGroup error: %s", error.getMessage());
                             getView().showProgressBar(false);
                         },
-                        () -> getView().showProgressBar(false));
+                        () -> getView().showProgressBar(false)
+                );
     }
 
     private void authCheck(boolean check, Runnable callback) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -61,7 +61,7 @@ private Set<MediaTrack> getAvailableTracks(int rendererIndex) {
      *                      One of the {@link #RENDERER_INDEX_VIDEO}, {@link #RENDERER_INDEX_AUDIO}, {@link #RENDERER_INDEX_SUBTITLE}
      */
     private void initRenderer(int rendererIndex) {
-        if (mRenderers[rendererIndex] != null) {
+        if (mRenderers[rendererIndex] != null && mRenderers[rendererIndex].mediaTracks != null) {
             return;
         }
 
@@ -351,9 +351,8 @@ public void selectTrack(MediaTrack track) {
 
         mSelectedTracks[rendererIndex] = track;
 
-        if (mRenderers[rendererIndex] == null) {
+        if (mRenderers[rendererIndex] == null || mRenderers[rendererIndex].mediaTracks == null) {
             Log.e(TAG, "Renderer isn't initialized. Waiting for later selection...");
-            //mPendingSelection = track;
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/utils/Utils.java
Patch:
@@ -108,6 +108,6 @@ public static void movePlayerToForeground(Context context) {
     }
 
     public static boolean checkActivity(Activity activity) {
-        return activity != null && !activity.isDestroyed() && !activity.isFinishing();
+        return activity != null && !activity.isDestroyed() && !activity.isFinishing() && activity.getWindowManager() != null;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -237,6 +237,7 @@ private void notifyOnVideoLoad() {
         if (mOnSourceChanged) {
             mOnSourceChanged = false;
             mEventListener.onVideoLoaded(mVideo);
+            mTrackSelectorManager.fixTracksSelection();
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -232,7 +232,9 @@ public void removeTop(Activity activity) {
 
     private boolean checkMoveViewsToBack(Activity activity) {
         if (mMoveViewsToBack) {
-            activity.moveTaskToBack(true);
+            if (activity != null && !activity.isDestroyed()) {
+                activity.moveTaskToBack(true);
+            }
             return true;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/dialogs/AppDialogFragment.java
Patch:
@@ -111,7 +111,7 @@ public void clear() {
     @Override
     public boolean onPreferenceDisplayDialog(@NonNull PreferenceFragment caller, Preference pref) {
         // Fix IllegalStateException: Activity has been destroyed
-        if (isDetached()) {
+        if (getActivity() == null || getActivity().isDestroyed()) {
             return false;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/vineyard/SearchTagsFragmentBase.java
Patch:
@@ -174,7 +174,8 @@ private void performSearch(PaginationAdapter adapter) {
         String query = adapter.getAdapterOptions().get(PaginationAdapter.KEY_TAG);
         mSearchTagsProvider.search(query, results -> {
             adapter.addAllItems(results);
-            displayCompletions(toCompletions(results));
+            // Same suggestions in the keyboard
+            //displayCompletions(toCompletions(results));
         });
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/ContentBlockManager.java
Patch:
@@ -61,7 +61,7 @@ private void updateSponsorSegmentsAndWatch(Video item) {
                             mSponsorSegments = segments;
                             startPlaybackWatcher();
                         },
-                        error -> Log.e(TAG, "updateSponsorSegments error: %s", error)
+                        error -> Log.e(TAG, "updateSponsorSegments error: %s", error.getMessage())
                 );
     }
 
@@ -80,7 +80,7 @@ private void startPlaybackWatcher() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         this::skipSegment,
-                        error -> Log.e(TAG, "startPlaybackWatcher error: %s", error)
+                        error -> Log.e(TAG, "startPlaybackWatcher error: %s", error.getMessage())
                 );
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -153,7 +153,7 @@ private void startListening() {
                 .subscribe(
                         this::processCommand,
                         error -> {
-                            String msg = "startListening error: " + error;
+                            String msg = "startListening error: " + error.getMessage();
                             Log.e(TAG, msg);
                             MessageHelpers.showMessage(getActivity(), msg);
                         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -339,9 +339,7 @@ private void updateHistory() {
             historyObservable = mediaItemManager.updateHistoryPositionObserve(item.videoId, positionSec);
         }
 
-        mHistoryAction = historyObservable
-                .subscribeOn(Schedulers.newThread())
-                .subscribe((Void v) -> {}, error -> Log.e(TAG, "History update error: " + error));
+        mHistoryAction = RxUtils.execute(historyObservable);
     }
 
     private void initFormats() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/search/MediaServiceSearchTagProvider.java
Patch:
@@ -29,7 +29,7 @@ public void search(String query, ResultsCallback callback) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         tags -> callback.onResults(Tag.from(tags)),
-                        error -> Log.e(TAG, "Result is empty. Just ignore it. %s", error.getMessage())
+                        error -> Log.e(TAG, "Result is empty. Just ignore it. Error msg: %s", error.getMessage())
                 );
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AddDevicePresenter.java
Patch:
@@ -61,7 +61,8 @@ private void updateDeviceCode() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         deviceCode -> getView().showCode(deviceCode),
-                        error -> Log.e(TAG, error));
+                        error -> Log.e(TAG, "Get pairing code error: %s", error.getMessage())
+                );
     }
 
     public void start() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelPresenter.java
Patch:
@@ -153,7 +153,7 @@ private void updateRows(String channelId) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         this::updateRowsHeader,
-                        error -> Log.e(TAG, "updateRows error: " + error)
+                        error -> Log.e(TAG, "updateRows error: %s", error.getMessage())
                  );
     }
 
@@ -185,7 +185,7 @@ private void continueGroup(VideoGroup group) {
                 .subscribe(
                         continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup)),
                         error -> {
-                            Log.e(TAG, "continueGroup error: " + error);
+                            Log.e(TAG, "continueGroup error: %s", error.getMessage());
                             getView().showProgressBar(false);
                         },
                         () -> getView().showProgressBar(false)

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsMenuPresenter.java
Patch:
@@ -88,9 +88,7 @@ private void appendMarkAsWatched() {
     }
 
     private void unsubscribe(String channelId) {
-        mUnsubscribeAction = mItemManager.unsubscribeObserve(channelId)
-                .subscribeOn(Schedulers.newThread())
-                .subscribe();
+        mUnsubscribeAction = RxUtils.execute(mItemManager.unsubscribeObserve(channelId));
 
         MessageHelpers.showMessage(getContext(), R.string.unsubscribed_from_channel);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/ChannelUploadsPresenter.java
Patch:
@@ -137,7 +137,7 @@ private void continueVideoGroup(VideoGroup group) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         continueMediaGroup -> getView().update(VideoGroup.from(continueMediaGroup)),
-                        error -> Log.e(TAG, "continueGroup error: " + error),
+                        error -> Log.e(TAG, "continueGroup error: %s", error.getMessage()),
                         () -> getView().showProgressBar(false)
                 );
     }
@@ -159,7 +159,7 @@ private void updateVideoGrid(Observable<MediaGroup> group) {
                                 getView().showProgressBar(false);
                             }
                         },
-                        error -> Log.e(TAG, "updateGridHeader error: " + error),
+                        error -> Log.e(TAG, "updateGridHeader error: %s", error.getMessage()),
                         () -> getView().showProgressBar(false)
                 );
     }
@@ -174,7 +174,7 @@ private void updateVideoGrid(MediaItem mediaItem, VideoGroupCallback callback) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         callback::onGroup,
-                        error -> Log.e(TAG, "updateVideoGrid error: " + error)
+                        error -> Log.e(TAG, "updateVideoGrid error: %s", error.getMessage())
                 );
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SignInPresenter.java
Patch:
@@ -65,15 +65,16 @@ private void updateUserCode() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         userCode -> getView().showCode(userCode),
-                        error -> Log.e(TAG, error),
+                        error -> Log.e(TAG, "Sign in error: %s", error.getMessage()),
                         () -> {
                             // Success
                             mBrowsePresenter.refresh();
                             if (getView() != null) {
                                 getView().close();
                             }
                             mSplashPresenter.updateChannels();
-                        });
+                        }
+                 );
     }
 
     public void start() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import com.liskovsoft.sharedutils.prefs.GlobalPreferences;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.MainPlayerEventBridge;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
@@ -17,6 +18,7 @@ public class PlaybackPresenter extends BasePresenter<PlaybackView> {
 
     private PlaybackPresenter(Context context) {
         super(context);
+        GlobalPreferences.instance(context); // init MediaService context
         mViewManager = ViewManager.instance(context);
         mMainPlayerEventBridge = MainPlayerEventBridge.instance(context);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/RemoteControlReceiver.java
Patch:
@@ -13,7 +13,6 @@ public class RemoteControlReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Initializing remote control listener...");
-        GlobalPreferences.instance(context); // init MediaService context
         PlaybackPresenter.instance(context); // init RemoteControlListener
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -87,7 +87,7 @@ private void appendCardTitleLines(AppSettingsPresenter settingsPresenter) {
     private void appendVideoGridScale(AppSettingsPresenter settingsPresenter) {
         List<OptionItem> options = new ArrayList<>();
 
-        for (float scale : new float[] {0.5f, 0.75f, 1.0f, 1.35f, 1.5f}) {
+        for (float scale : new float[] {0.5f, 0.6f, 0.7f, 0.8f, 0.9f, 1.0f, 1.1f, 1.2f, 1.35f, 1.4f, 1.5f}) {
             options.add(UiOptionItem.from(String.format("%sx", scale),
                     optionItem -> mMainUIData.setVideoGridScale(scale),
                     Helpers.floatEquals(scale, mMainUIData.getVideoGridScale())));

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/SettingsItemPresenter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.text.TextUtils.TruncateAt;
+import android.util.Pair;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -13,6 +14,7 @@
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.SettingsItem;
 import com.liskovsoft.smartyoutubetv2.tv.R;
+import com.liskovsoft.smartyoutubetv2.tv.ui.browse.video.AutoSizeGridFragment;
 
 public class SettingsItemPresenter extends Presenter {
     private final Fragment mainFragment;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/data/Video.java
Patch:
@@ -33,6 +33,7 @@ public final class Video implements Parcelable {
     public boolean isLive;
     public boolean isUpcoming;
     public boolean subscribed;
+    public boolean isRemote;
 
     public Video() {
         

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -168,13 +168,14 @@ private void stopListening() {
     private void processCommand(Command command) {
         switch (command.getType()) {
             case Command.TYPE_OPEN_VIDEO:
-                PlaybackPresenter.instance(getActivity()).openVideo(Video.from(command.getVideoId(), command.getPlaylistId(), command.getPlaylistIndex()));
+                Video newVideo = Video.from(command.getVideoId(), command.getPlaylistId(), command.getPlaylistIndex());
+                newVideo.isRemote = true;
+                PlaybackPresenter.instance(getActivity()).openVideo(newVideo);
                 break;
             case Command.TYPE_UPDATE_PLAYLIST:
                 if (getController() != null) {
                     Video video = getController().getVideo();
                     video.playlistId = command.getPlaylistId();
-                    video.mediaItem = null; // video comes from another source
                     mSuggestionsLoader.loadSuggestions(video);
                 }
                 break;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -43,11 +43,11 @@ public MainPlayerEventBridge(Context context) {
             mActivity = new WeakReference<>((Activity) context);
         }
 
-        RemoteControlManager commandManager = new RemoteControlManager(context);
         PlayerUiManager uiManager = new PlayerUiManager();
         VideoLoader videoLoader = new VideoLoader();
         StateUpdater stateUpdater = new StateUpdater();
         SuggestionsLoader suggestionsLoader = new SuggestionsLoader();
+        RemoteControlManager commandManager = new RemoteControlManager(context, suggestionsLoader);
         HqDialogManager hqDialogManager = new HqDialogManager(stateUpdater);
         suggestionsLoader.addMetadataListener(uiManager);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/SuggestionsLoader.java
Patch:
@@ -77,7 +77,7 @@ private void syncCurrentVideo(MediaItemMetadata mediaItemMetadata) {
         getController().setVideo(video);
     }
 
-    private void loadSuggestions(Video video) {
+    public void loadSuggestions(Video video) {
         if (video == null) {
             Log.e(TAG, "loadSuggestions: video is null");
             return;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -189,6 +189,7 @@ private void loadVideoFromMetadata(Video current) {
             loadVideoFromNext(current.nextMediaItem);
         } else {
             MessageHelpers.showMessageThrottled(getActivity(), R.string.next_video_info_is_not_loaded_yet);
+            getController().exit();
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/misc/RemoteControlReceiver.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.content.Intent;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.sharedutils.prefs.GlobalPreferences;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.PlaybackPresenter;
 
 public class RemoteControlReceiver extends BroadcastReceiver {
@@ -12,6 +13,7 @@ public class RemoteControlReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Initializing remote control listener...");
-        PlaybackPresenter.instance(context);
+        GlobalPreferences.instance(context); // init MediaService context
+        PlaybackPresenter.instance(context); // init RemoteControlListener
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/RemoteControlManager.java
Patch:
@@ -64,7 +64,7 @@ public void onPause() {
 
     @Override
     public void onEngineReleased() {
-        postPlay(false);
+        postStartPlaying(null);
     }
 
     private void postStartPlaying(@Nullable Video item) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -110,6 +110,7 @@ public void finish() {
     }
 
     private void properlyFinishTheApp() {
+        Log.d(TAG, "Finishing the app...");
         SplashPresenter.instance(this).unhold();
         mViewManager.clearCaches();
         destroyActivity();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -144,6 +144,8 @@ private boolean wannaEnterToPIP() {
 
     @Override
     public void finish() {
+        Log.d(TAG, "Finishing activity...");
+
         // NOTE: When exiting PIP mode onPause is called immediately after onResume
 
         // Also, avoid enter pip on stop!

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -51,8 +51,8 @@ private boolean isLive(MediaTrack track) {
 
     @Override
     public int inBounds(MediaTrack track2) {
-        // Detect profile based on bitrate presence
-        return format.bitrate == -1 ? compare(track2, COMPARE_TYPE_IN_BOUNDS_PROFILE) : compare(track2, COMPARE_TYPE_IN_BOUNDS);
+        // Detect profile based on format id presence
+        return format.id == null ? compare(track2, COMPARE_TYPE_IN_BOUNDS_PROFILE) : compare(track2, COMPARE_TYPE_IN_BOUNDS);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/tweaks/PlaybackTransportRowPresenter.java
Patch:
@@ -695,6 +695,9 @@ void setEndingTime(long currentTimeMs) {
                 if (mPlayerData.isRemainingTimeEnabled()) {
                     long endingTimeMs = mTotalTimeInMs - currentTimeMs;
 
+                    // Apply speed correction
+                    endingTimeMs = (long) (endingTimeMs / mPlayerData.getSpeed());
+
                     if (endingTimeMs >= 0) {
                         formatTime(endingTimeMs, mTempBuilder);
                         mEndingTime.setText(String.format(mEndingTimeFormat, mTempBuilder.toString()));

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultipleRowsFragment.java
Patch:
@@ -168,7 +168,7 @@ public void setPosition(int index) {
     private void freeze(boolean freeze) {
         // Disable scrolling on partially updated rows. This prevent controls from misbehaving.
         if (mRowPresenter != null) {
-            ViewHolder vh = getRowViewHolder(getPosition());
+            ViewHolder vh = getRowViewHolder(getSelectedPosition());
             if (vh != null) {
                 mRowPresenter.freeze(vh, freeze);
             }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/tags/SearchTagsFragment.java
Patch:
@@ -47,7 +47,9 @@ public void onDestroy() {
 
     @Override
     public void updateSearch(VideoGroup group) {
+        freeze(true);
         mItemResultsAdapter.append(group);
+        freeze(false);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultipleRowsFragment.java
Patch:
@@ -128,6 +128,7 @@ public void update(VideoGroup group) {
             ListRow row = new ListRow(rowHeader, mediaGroupAdapter);
             mRowsAdapter.add(row);
         } else {
+            Log.d(TAG, "Continue row %s", group.getTitle());
             existingAdapter.append(group); // continue row
         }
         

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/ExoPlayerInitializer.java
Patch:
@@ -29,17 +29,17 @@ public ExoPlayerInitializer(Context activity) {
         mDeviceRam = deviceRam < 0 ? 196000000 : deviceRam;
     }
 
-    public SimpleExoPlayer createPlayer(Context activity, DefaultRenderersFactory renderersFactory, DefaultTrackSelector trackSelector) {
+    public SimpleExoPlayer createPlayer(Context context, DefaultRenderersFactory renderersFactory, DefaultTrackSelector trackSelector) {
         DefaultLoadControl loadControl = createLoadControl();
 
         // HDR fix?
-        //trackSelector.setParameters(trackSelector.buildUponParameters().setTunnelingAudioSessionId(C.generateAudioSessionIdV21(activity)));
+        //trackSelector.setParameters(trackSelector.buildUponParameters().setTunnelingAudioSessionId(C.generateAudioSessionIdV21(context)));
 
         if (renderersFactory instanceof CustomOverridesRenderersFactory) {
             ((CustomOverridesRenderersFactory) renderersFactory).setAudioDelayMs(mPlayerData.getAudioDelayMs());
         }
 
-        SimpleExoPlayer player = ExoPlayerFactory.newSimpleInstance(activity, renderersFactory, trackSelector, loadControl);
+        SimpleExoPlayer player = ExoPlayerFactory.newSimpleInstance(context, renderersFactory, trackSelector, loadControl);
         enableAudioFocus(player);
 
         return player;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/internal/DisplaySyncHelper.java
Patch:
@@ -20,6 +20,8 @@
 public class DisplaySyncHelper implements UhdHelperListener {
     private static final String TAG = DisplaySyncHelper.class.getSimpleName();
     private static final int STATE_ORIGINAL = 1;
+    private static final int HD = 1200;
+    private static final int FHD = 1900;
     protected Context mContext;
     private boolean mDisplaySyncInProgress = false;
     private UhdHelper mUhdHelper;
@@ -296,7 +298,7 @@ public boolean syncDisplayMode(Window window, int videoWidth, float videoFramera
             List<Mode> resultModes = new ArrayList<>();
 
             if (mIsResolutionSwitchEnabled) {
-                resultModes = filterModesByWidth(modes, Math.max(videoWidth, 1200));
+                resultModes = filterModesByWidth(modes, Math.max(videoWidth, FHD));
             }
 
             //int minHeight = -1;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/AppSettingsActivity.java
Patch:
@@ -14,7 +14,7 @@ public class AppSettingsActivity extends MotherActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        setupActivity();
+        //setupActivity();
         super.onCreate(savedInstanceState);
         setContentView(R.layout.fragment_app_settings);
         mFragment = (AppSettingsFragment) getFragmentManager().findFragmentById(R.id.app_settings_fragment);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/dialogs/RadioListPreferenceDialogFragment.java
Patch:
@@ -36,7 +36,7 @@ public void onItemClick(ViewHolder viewHolder) {
             }
             final CharSequence entry = mEntryValues[index];
             final ListPreference preference = (ListPreference) getPreference();
-            if (index >= 0) {
+            if (index >= 0 && preference != null) {
                 String value = mEntryValues[index].toString();
                 if (preference.callChangeListener(value)) {
                     preference.setValue(value);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/PlayerSettingsPresenter.java
Patch:
@@ -37,7 +37,7 @@ public void show() {
 
         appendVideoBufferCategory(settingsPresenter);
         appendVideoPresetsCategory(settingsPresenter);
-        appendAudioDelayCategory(settingsPresenter);
+        appendAudioShiftCategory(settingsPresenter);
         appendBackgroundPlaybackCategory(settingsPresenter);
         appendAutoFrameRateCategory(settingsPresenter);
         appendAutoFrameRatePauseCategory(settingsPresenter);
@@ -122,8 +122,8 @@ private void appendVideoZoomCategory(AppSettingsPresenter settingsPresenter) {
         settingsPresenter.appendRadioCategory(category.title, category.options);
     }
 
-    private void appendAudioDelayCategory(AppSettingsPresenter settingsPresenter) {
-        OptionCategory category = HqDialogManager.createAudioDelayCategory(getContext(), mPlayerData);
+    private void appendAudioShiftCategory(AppSettingsPresenter settingsPresenter) {
+        OptionCategory category = HqDialogManager.createAudioShiftCategory(getContext(), mPlayerData);
         settingsPresenter.appendRadioCategory(category.title, category.options);
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -153,6 +153,8 @@ public void finish() {
         enterPIPMode();
 
         super.finish();
+
+        mPlaybackFragment.onFinish();
     }
 
     public boolean isInPIPMode() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -735,6 +735,7 @@ public boolean isControlsShown() {
     @Override
     public void showControlsOverlay(boolean runAnimation) {
         if (mPlayerGlue != null) {
+            mPlayerGlue.syncControlsStateIfNeeded(); // fix seeking when ui not visible yet
             mPlayerGlue.setControlsVisibility(true);
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -169,6 +169,7 @@ public int getAppExitShortcut() {
 
     public void setAppExitShortcut(int type) {
         mAppExitShortcut = type;
+        persistState();
     }
 
     private void initLeftPanelCategories() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -6,6 +6,7 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItem;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItemFormatInfo;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.helpers.MessageHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.R;
@@ -208,8 +209,8 @@ private void processFormatInfo(MediaItemFormatInfo formatInfo) {
         if (formatInfo.isUnplayable()) {
             getController().showError(formatInfo.getPlayabilityStatus());
         }
-
-        if (formatInfo.containsDashUrl() && getController().getVideo().isLive) {
+        
+        if (formatInfo.containsDashUrl() && formatInfo.isLive()) {
             Log.d(TAG, "Found live video in dash format. Loading...");
             getController().openDashUrl(formatInfo.getDashManifestUrl());
         } else if (formatInfo.containsHlsUrl()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -192,6 +192,8 @@ public int compare(MediaTrack track2) {
             if (fpsLessOrEquals(track2.format.frameRate, format.frameRate)) {
                 if (TrackSelectorUtil.isHdrCodec(format.codecs) == TrackSelectorUtil.isHdrCodec(track2.format.codecs)) {
                     result = 0;
+                } else if (TrackSelectorUtil.isHdrCodec(track2.format.codecs)) {
+                    result = -1;
                 } else {
                     result = 1;
                 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUiController.java
Patch:
@@ -28,4 +28,5 @@ public interface PlaybackUiController {
     void setSubtitleStyle(SubtitleStyle subtitleStyle);
     SubtitleStyle getSubtitleStyle();
     void loadStoryboard();
+    void showError(String errorInfo);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -206,7 +206,7 @@ private void loadFormatInfo(Video video) {
 
     private void processFormatInfo(MediaItemFormatInfo formatInfo) {
         if (formatInfo.isUnplayable()) {
-            MessageHelpers.showLongMessage(getActivity(), formatInfo.getPlayabilityStatus());
+            getController().showError(formatInfo.getPlayabilityStatus());
         }
 
         if (formatInfo.containsDashUrl() && getController().getVideo().isLive) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/V3/CustomOverridesRenderersFactory.java
Patch:
@@ -21,9 +21,9 @@
 public class CustomOverridesRenderersFactory extends DefaultRenderersFactory {
     private static final String TAG = CustomOverridesRenderersFactory.class.getSimpleName();
     private static final String[] FRAME_DROP_FIX_LIST = {
-            "T95ZPLUS (q201_3GB)",
-            "UGOOS (UGOOS)",
-            "55UC30G (ctl_iptv_mrvl)" // Kivi 55uc30g
+            //"T95ZPLUS (q201_3GB)",
+            //"UGOOS (UGOOS)",
+            //"55UC30G (ctl_iptv_mrvl)" // Kivi 55uc30g
     };
 
     public CustomOverridesRenderersFactory(FragmentActivity activity) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -160,12 +160,14 @@ public int inBounds(MediaTrack track2) {
         if (Helpers.equals(format.id, track2.format.id)) {
             result = 0;
         } if (widthEquals(format.width, track2.format.width)) {
-            if (fpsLessOrEquals(track2.format.frameRate, format.frameRate)) {
+            if (fpsEquals(track2.format.frameRate, format.frameRate)) {
                 if (TrackSelectorUtil.isHdrCodec(format.codecs) == TrackSelectorUtil.isHdrCodec(track2.format.codecs)) {
                     result = 0;
                 } else {
                     result = 1;
                 }
+            } else if (fpsLessOrEquals(track2.format.frameRate, format.frameRate)) {
+                result = 1;
             } else {
                 result = 1;
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -306,7 +306,7 @@ private void restorePosition(Video item) {
             }
         }
 
-        if (state != null) {
+        if (state != null && !item.isLive) {
             boolean isVideoEnded = Math.abs(getController().getLengthMs() - state.positionMs) < 1_000;
             if (!isVideoEnded) {
                 getController().setPositionMs(state.positionMs);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -205,7 +205,7 @@ private void loadFormatInfo(Video video) {
     }
 
     private void processFormatInfo(MediaItemFormatInfo formatInfo) {
-        if (formatInfo.containsDashUrl()) {
+        if (formatInfo.containsDashUrl() && getController().getVideo().isLive) {
             Log.d(TAG, "Found live video in dash format. Loading...");
             getController().openDashUrl(formatInfo.getDashManifestUrl());
         } else if (formatInfo.containsHlsUrl()) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppUpdatePresenter.java
Patch:
@@ -56,7 +56,9 @@ public void start(boolean forceCheck) {
 
     @Override
     public void onUpdateFound(String versionName, List<String> changelog, String apkPath) {
-        showUpdateDialog(versionName, changelog, apkPath);
+        if (getContext() != null) {
+            showUpdateDialog(versionName, changelog, apkPath);
+        }
     }
 
     private void showUpdateDialog(String versionName, List<String> changelog, String apkPath) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -292,7 +292,7 @@ private void maybeRefreshHeader() {
 
     private void checkForUpdates() {
         AppUpdatePresenter updatePresenter = AppUpdatePresenter.instance(getContext());
-        updatePresenter.start(true);
+        updatePresenter.start(false);
         updatePresenter.unhold();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/AboutPresenter.java
Patch:
@@ -58,7 +58,7 @@ private void appendAutoUpdateSwitch(AppSettingsPresenter settingsPresenter) {
     private void appendUpdateCheckButton(AppSettingsPresenter settingsPresenter) {
         OptionItem updateCheckOption = UiOptionItem.from(
                 getContext().getString(R.string.check_for_updates),
-                option -> AppUpdatePresenter.instance(getContext()).start(true, true));
+                option -> AppUpdatePresenter.instance(getContext()).start(true));
 
         settingsPresenter.appendSingleButton(updateCheckOption);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -270,10 +270,12 @@ public void onScrollEnd(VideoGroup group) {
         continueGroup(group);
     }
 
+    /**
+     * Called even when closing dialog window
+     */
     @Override
     public void onViewResumed() {
         maybeRefreshHeader();
-        checkForUpdates();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -26,7 +26,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.views.BrowseView;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.presenter.IconHeaderItemPresenter;
-import com.liskovsoft.smartyoutubetv2.tv.ui.browse.dialog.LoginDialogFragment;
+import com.liskovsoft.smartyoutubetv2.tv.ui.browse.dialog.ErrorDialogFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.misc.ProgressBarManager;
 
 import java.util.LinkedHashMap;
@@ -201,12 +201,12 @@ public void updateErrorIfEmpty(ErrorFragmentData data) {
 
     @Override
     public void showError(ErrorFragmentData data) {
-        replaceMainFragment(new LoginDialogFragment(data));
+        replaceMainFragment(new ErrorDialogFragment(data));
     }
 
     private void showErrorIfEmpty(ErrorFragmentData data) {
         if (mCategoryFragmentFactory.isEmpty()) {
-            replaceMainFragment(new LoginDialogFragment(data));
+            replaceMainFragment(new ErrorDialogFragment(data));
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -13,6 +13,7 @@ public interface BrowseView {
     void updateCategory(SettingsGroup group);
     void removeCategory(Category category);
     void clearCategory(Category category);
-    void updateErrorIfEmpty(ErrorFragmentData data);
+    void showError(ErrorFragmentData data);
     void showProgressBar(boolean show);
+    boolean isProgressBarShowing();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -165,6 +165,9 @@ public void onPlayEnd() {
             mStates.put(video.videoId, new State(video.videoId, 0));
             saveState();
         }
+
+        // Take in account different playback states
+        Helpers.enableScreensaver(getActivity());
     }
 
     private void clearStateOfNextVideo() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppSettingsPresenter.java
Patch:
@@ -167,7 +167,7 @@ public void showDialogMessage(String dialogTitle, Runnable onClose, int timeoutM
     }
 
     private void enableOldAndroidFix(boolean enable) {
-        if (mUiManager != null) {
+        if (mUiManager != null && mUiManager.getController() != null) {
             // Old Android fix: don't destroy player while dialog is open
             if (VERSION.SDK_INT < 25) {
                 if (enable) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -17,7 +17,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.models.errors.CategoryEmptyError;
 import com.liskovsoft.smartyoutubetv2.common.app.models.errors.SignInError;
-import com.liskovsoft.smartyoutubetv2.common.app.models.update.AppUpdateManager;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.interfaces.CategoryPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.interfaces.VideoGroupPresenter;
@@ -290,7 +289,7 @@ private void maybeRefreshHeader() {
     }
 
     private void checkForUpdates() {
-        AppUpdateManager updatePresenter = AppUpdateManager.instance(getContext());
+        AppUpdatePresenter updatePresenter = AppUpdatePresenter.instance(getContext());
         updatePresenter.start(false);
         updatePresenter.unhold();
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/interfaces/CategoryPresenter.java
Patch:
@@ -2,5 +2,4 @@
 
 public interface CategoryPresenter {
     void onCategoryFocused(int categoryIndex);
-    void onViewResumed();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/interfaces/Presenter.java
Patch:
@@ -9,4 +9,5 @@ public interface Presenter<T> {
     Context getContext();
     void onViewInitialized();
     void onViewDestroyed();
+    void onViewResumed();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/AboutPresenter.java
Patch:
@@ -7,7 +7,7 @@
 import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.OptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.ui.UiOptionItem;
-import com.liskovsoft.smartyoutubetv2.common.app.models.update.AppUpdateManager;
+import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppUpdatePresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.AppSettingsPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.base.BasePresenter;
 
@@ -58,7 +58,7 @@ private void appendAutoUpdateSwitch(AppSettingsPresenter settingsPresenter) {
     private void appendUpdateCheckButton(AppSettingsPresenter settingsPresenter) {
         OptionItem updateCheckOption = UiOptionItem.from(
                 getContext().getString(R.string.check_for_updates),
-                option -> AppUpdateManager.instance(getContext()).start(true));
+                option -> AppUpdatePresenter.instance(getContext()).start(true));
 
         settingsPresenter.appendSingleButton(updateCheckOption);
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -197,7 +197,7 @@ private int getSelectedHeaderId() {
 
     @Override
     public void updateErrorIfEmpty(ErrorFragmentData data) {
-        mHandler.postDelayed(() -> showErrorIfEmpty(data), 500); // need delay because header may be not updated
+        mHandler.postDelayed(() -> showErrorIfEmpty(data), 1_000); // need delay because header may be not updated
     }
 
     private void showErrorIfEmpty(ErrorFragmentData data) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -48,7 +48,9 @@ protected void initTheme() {
 
     @Override
     public boolean dispatchKeyEvent(KeyEvent event) {
-        mPlaybackFragment.onDispatchKeyEvent(event);
+        if (mPlaybackFragment != null) {
+            mPlaybackFragment.onDispatchKeyEvent(event);
+        }
 
         return super.dispatchKeyEvent(event);
     }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -153,6 +153,8 @@ public boolean isInPIPMode() {
     @SuppressWarnings("deprecation")
     private void enterBackgroundPlayMode() {
         if (Build.VERSION.SDK_INT >= 21 && Build.VERSION.SDK_INT < 26) {
+            mPlaybackFragment.showControls(true);
+
             if (mPlaybackFragment.isPlaying()) {
                 // Argument equals true to notify the system that the activity
                 // wishes to be visible behind other translucent activities

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -161,7 +161,8 @@ public void onPlayEnd() {
 
         // In case we start to watch the video again
         if (video != null) {
-            mStates.remove(video.videoId);
+            // Add null state to prevent restore position from history
+            mStates.put(video.videoId, new State(video.videoId, 0));
             saveState();
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/ModeSyncManager.java
Patch:
@@ -35,7 +35,7 @@ public void restore(Activity activity) {
 
     private void applyAfr(Activity activity) {
         if (mFormatItem != null) {
-            mFrameRateHelper.apply(mFormatItem, activity);
+            mFrameRateHelper.apply(activity, mFormatItem);
         } else {
             //mFrameRateHelper.restoreOriginalState(activity);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -407,7 +407,7 @@ private MediaTrack findBestMatch(MediaTrack track) {
                 for (int trackIndex = 0; trackIndex < renderer.mediaTracks[groupIndex].length; trackIndex++) {
                     MediaTrack mediaTrack = renderer.mediaTracks[groupIndex][trackIndex];
 
-                    int compare = track.compare(mediaTrack);
+                    int compare = track.inBounds(mediaTrack);
 
                     if (compare == 0) {
                         Log.d(TAG, "findBestMatch: Found exact match in this track list: " + mediaTrack.format);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/MediaTrack.java
Patch:
@@ -33,6 +33,7 @@ public static MediaTrack from(int rendererIndex, TrackGroupArray groups, Definit
     }
 
     public abstract int compare(MediaTrack track2);
+    public abstract int inBounds(MediaTrack track2);
 
     public static MediaTrack forRendererIndex(int rendererIndex) {
         switch (rendererIndex) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppSettingsView.java
Patch:
@@ -8,4 +8,5 @@ public interface AppSettingsView {
     void addCategories(List<SettingsCategory> categories);
     void setTitle(String title);
     void clear();
+    void finish();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/previewtimebar/StoryboardManager.java
Patch:
@@ -84,7 +84,7 @@ public void setVideo(Video video, long lengthMs) {
     }
 
     private void initSeekPositions() {
-        if (mLengthMs <= 0) {
+        if (mLengthMs <= 0 || mStoryboard == null) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -60,7 +60,7 @@ public void onCreate(Bundle savedInstanceState) {
         mCategories = new LinkedHashMap<>();
         mHandler = new Handler();
         mBrowsePresenter = BrowsePresenter.instance(getContext());
-        mBrowsePresenter.register(this);
+        mBrowsePresenter.setView(this);
         mProgressBarManager = new ProgressBarManager();
 
         setupAdapter();
@@ -97,7 +97,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         prepareEntranceTransition();
 
-        mBrowsePresenter.onInitDone();
+        mBrowsePresenter.onViewInitialized();
 
         // Restore state after crash
         selectCategory(mRestoredHeaderIndex);
@@ -314,7 +314,7 @@ public void clearCategory(Category category) {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mBrowsePresenter.unregister(this);
+        mBrowsePresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/channel/ChannelFragment.java
Patch:
@@ -19,7 +19,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mChannelPresenter = ChannelPresenter.instance(getContext());
-        mChannelPresenter.register(this);
+        mChannelPresenter.setView(this);
 
         mProgressBarManager = new ProgressBarManager();
     }
@@ -31,7 +31,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         // Don't move to onCreateView
         mProgressBarManager.setRootView((ViewGroup) getActivity().findViewById(android.R.id.content).getRootView());
 
-        mChannelPresenter.onInitDone();
+        mChannelPresenter.onViewInitialized();
     }
 
     @Override
@@ -42,7 +42,7 @@ protected VideoGroupPresenter getMainPresenter() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mChannelPresenter.unregister(this);
+        mChannelPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/channelsub/ChannelSubFragment.java
Patch:
@@ -18,7 +18,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mPresenter = ChannelSubPresenter.instance(getContext());
-        mPresenter.register(this);
+        mPresenter.setView(this);
 
         mProgressBarManager = new ProgressBarManager();
     }
@@ -35,13 +35,13 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         // Don't move to onCreateView
         mProgressBarManager.setRootView((ViewGroup) getActivity().findViewById(android.R.id.content).getRootView());
 
-        mPresenter.onInitDone();
+        mPresenter.onViewInitialized();
     }
 
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mPresenter.unregister(this);
+        mPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/details/VideoDetailsFragment.java
Patch:
@@ -82,7 +82,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mDetailsPresenter = DetailsPresenter.instance(getContext());
-        mDetailsPresenter.register(this);
+        mDetailsPresenter.setView(this);
 
         prepareBackgroundManager();
     }
@@ -91,7 +91,7 @@ public void onCreate(Bundle savedInstanceState) {
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        mDetailsPresenter.onInitDone();
+        mDetailsPresenter.onViewInitialized();
     }
 
     private void init() {
@@ -125,7 +125,7 @@ public void onStop() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mDetailsPresenter.unregister(this);
+        mDetailsPresenter.onViewDestroyed();
     }
 
     /**

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/onboarding/OnboardingFragment.java
Patch:
@@ -66,7 +66,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         // Set the logo to display a splash animation
         setLogoResourceId(R.mipmap.app_logo);
         mPresenter = OnboardingPresenter.instance(getContext());
-        mPresenter.register(this);
+        mPresenter.setView(this);
         return super.onCreateView(inflater, container, savedInstanceState);
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -96,7 +96,7 @@ public void onCreate(Bundle savedInstanceState) {
         mExoPlayerController = new ExoPlayerController(getActivity());
 
         mPlaybackPresenter = PlaybackPresenter.instance(getContext());
-        mPlaybackPresenter.register(this);
+        mPlaybackPresenter.setView(this);
     }
 
     @Override
@@ -105,7 +105,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         setupPlayerBackground();
 
-        mPlaybackPresenter.onInitDone();
+        mPlaybackPresenter.onViewInitialized();
     }
 
     @Override
@@ -678,7 +678,7 @@ public void onDestroy() {
         blockEngine(false);
         releasePlayer();
 
-        mPlaybackPresenter.unregister(this);
+        mPlaybackPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -58,7 +58,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         mBackgroundManager = ((LeanbackActivity) getActivity()).getBackgroundManager();
         mSearchPresenter = SearchPresenter.instance(getContext());
-        mSearchPresenter.register(this);
+        mSearchPresenter.setView(this);
 
         mRowsAdapter = new ArrayObjectAdapter(new ListRowPresenter());
         mProgressBarManager = new ProgressBarManager();
@@ -98,7 +98,7 @@ public void recognizeSpeech() {
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        mSearchPresenter.onInitDone();
+        mSearchPresenter.onViewInitialized();
     }
 
     @Override
@@ -126,7 +126,7 @@ public void onPause() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mSearchPresenter.unregister(this);
+        mSearchPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -22,20 +22,20 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mSignInPresenter = SignInPresenter.instance(getContext());
-        mSignInPresenter.register(this);
+        mSignInPresenter.setView(this);
     }
 
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        mSignInPresenter.onInitDone();
+        mSignInPresenter.onViewInitialized();
     }
 
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mSignInPresenter.unregister(this);
+        mSignInPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/old/SignInFragmentOld.java
Patch:
@@ -31,7 +31,7 @@ public void onAttach(Context context) {
         super.onAttach(context);
 
         mSignInPresenter = SignInPresenter.instance(context);
-        mSignInPresenter.register(this);
+        mSignInPresenter.setView(this);
     }
 
     @Override
@@ -42,7 +42,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
         setupUi();
 
-        mSignInPresenter.onInitDone();
+        mSignInPresenter.onViewInitialized();
     }
 
     @Override
@@ -61,7 +61,7 @@ public void onPause() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mSignInPresenter.unregister(this);
+        mSignInPresenter.onViewDestroyed();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/SplashActivity.java
Patch:
@@ -20,8 +20,6 @@ public class SplashActivity extends MotherActivity implements SplashView {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        Log.d(TAG, "Starting SplashView...");
-
         mNewIntent = getIntent();
 
         mPresenter = SplashPresenter.instance(this);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/SplashActivity.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.main;
 
-import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
@@ -10,8 +9,9 @@
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.SplashPresenter;
 import com.liskovsoft.smartyoutubetv2.common.app.views.SplashView;
 import com.liskovsoft.smartyoutubetv2.common.misc.LangUpdater;
+import com.liskovsoft.smartyoutubetv2.common.misc.MotherActivity;
 
-public class SplashActivity extends Activity implements SplashView {
+public class SplashActivity extends MotherActivity implements SplashView {
     private static final String TAG = SplashActivity.class.getSimpleName();
     private Intent mNewIntent;
     private SplashPresenter mPresenter;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/presenter/CardPresenter.java
Patch:
@@ -103,7 +103,8 @@ public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {
         cardView.setTitleText(video.title);
         cardView.setContentText(video.description);
         cardView.setProgress(video.percentWatched);
-        cardView.setBadgeText(video.hasNewContent ? context.getString(R.string.badge_new_content) : video.badge);
+        cardView.setBadgeText(video.hasNewContent ?
+                context.getString(R.string.badge_new_content) : video.isLive ? context.getString(R.string.badge_live) : video.badge);
         cardView.setBadgeColor(video.hasNewContent || video.isLive || video.isUpcoming ?
                 ContextCompat.getColor(context, R.color.dark_red) : ContextCompat.getColor(context, R.color.black));
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/PlaybackTransportRowPresenter.java
Patch:
@@ -43,7 +43,8 @@
 import com.liskovsoft.smartyoutubetv2.common.utils.DateFormatter;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.ControlBarPresenter.OnControlClickedListener;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.ControlBarPresenter.OnControlSelectedListener;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.MaxIconNumVideoPlayerGlue.QualityInfoListener;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.MaxControlsVideoPlayerGlue.QualityInfoListener;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.seekpreview.ThumbsBar;
 
 import java.util.Arrays;
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/seekpreview/ThumbsBar.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue;
+package com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.seekpreview;
 
 import android.content.Context;
 import android.graphics.Bitmap;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/other/StoryBoardSeekDataProvider.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import androidx.leanback.media.PlaybackGlue;
-import androidx.leanback.media.PlaybackTransportControlGlue;
 import androidx.leanback.widget.PlaybackSeekDataProvider;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.previewtimebar.StoryboardManager;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.framedrops.PlaybackTransportControlGlue;
 
 public class StoryboardSeekDataProvider extends PlaybackSeekDataProvider {
     private final StoryboardManager mStoryboardManager;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/other/VideoEventsOverrideFragment.java
Patch:
@@ -5,9 +5,9 @@
 import android.view.KeyEvent;
 import android.view.View;
 import androidx.leanback.app.PlaybackSupportFragment;
+import androidx.leanback.app.VideoSupportFragment;
 import androidx.leanback.widget.VerticalGridView;
 import com.liskovsoft.sharedutils.helpers.Helpers;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.surfaceview.VideoSupportFragment;
 
 /**
  *  Every successfully handled event invokes {@link PlaybackSupportFragment#tickle} that makes ui to appear.

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/other/VideoPlayerGlue.java
Patch:
@@ -12,7 +12,7 @@
 import androidx.leanback.widget.PlaybackControlsRow;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.controller.PlayerView;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.MaxIconNumVideoPlayerGlue;
+import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.playerglue.MaxControlsVideoPlayerGlue;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.actions.SearchAction;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.actions.ThumbsAction;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.actions.ThumbsDownAction;
@@ -45,7 +45,7 @@
  * Note that the superclass, {@link PlaybackTransportControlGlue}, manages the playback controls
  * row.
  */
-public class VideoPlayerGlue extends MaxIconNumVideoPlayerGlue<PlayerAdapter>
+public class VideoPlayerGlue extends MaxControlsVideoPlayerGlue<PlayerAdapter>
                              implements PlayerView {
     private static final long TEN_SECONDS = TimeUnit.SECONDS.toMillis(10);
     private static final String TAG = VideoPlayerGlue.class.getSimpleName();

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/textureview/TextureViewVideoSupportFragment.java
Patch:
@@ -106,7 +106,7 @@ public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int hei
     @Override
     public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {
         if (mMediaPlaybackCallback != null) {
-            mMediaPlaybackCallback.surfaceChanged(new TextureViewSurfaceHolder(new Surface(surface)), 1, width, height);
+            mMediaPlaybackCallback.surfaceChanged(new TextureViewSurfaceHolder(new Surface(surface)), 4, width, height);
         }
     }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -50,7 +50,6 @@
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.UriBackgroundManager;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.misc.ProgressBarManager;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.surfaceview.VideoSupportFragmentGlueHost;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.textureview.TextureViewVideoSupportFragmentGlueHost;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.other.StoryboardSeekDataProvider;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.other.VideoEventsOverrideFragment;
 import com.liskovsoft.smartyoutubetv2.tv.ui.playback.other.VideoPlayerGlue;
@@ -266,7 +265,7 @@ private void createPlayerObjects() {
 
         OnActionClickedListener playerActionListener = new PlayerActionListener();
         mPlayerGlue = new VideoPlayerGlue(getActivity(), playerAdapter, playerActionListener);
-        mPlayerGlue.setHost(new TextureViewVideoSupportFragmentGlueHost(this));
+        mPlayerGlue.setHost(new VideoSupportFragmentGlueHost(this));
         mPlayerGlue.setSeekEnabled(true);
         mPlayerGlue.setControlsOverlayAutoHideEnabled(false); // don't show controls on some player events like play/pause/end
         StoryboardSeekDataProvider.setSeekProvider(mPlayerGlue);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/other/VideoEventsOverrideFragment.java
Patch:
@@ -8,13 +8,12 @@
 import androidx.leanback.widget.VerticalGridView;
 import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.surfaceview.VideoSupportFragment;
-import com.liskovsoft.smartyoutubetv2.tv.ui.mod.leanback.textureview.TextureViewVideoSupportFragment;
 
 /**
  *  Every successfully handled event invokes {@link PlaybackSupportFragment#tickle} that makes ui to appear.
  *  Fixing that for keys.
  */
-public class VideoEventsOverrideFragment extends TextureViewVideoSupportFragment {
+public class VideoEventsOverrideFragment extends VideoSupportFragment {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -204,7 +204,7 @@ private void restoreState() {
         mColorSchemeIndex = Helpers.parseInt(split, 5, 0);
         mIsMultilineTitlesEnabled = Helpers.parseBoolean(split, 6, false);
         mIsSettingsCategoryEnabled = Helpers.parseBoolean(split, 7, true);
-        mChannelCategorySorting = Helpers.parseInt(split, 8, CHANNEL_SORTING_LAST_VIEWED);
+        mChannelCategorySorting = Helpers.parseInt(split, 8, CHANNEL_SORTING_UPDATE);
 
         if (selectedCategories != null) {
             String[] selectedCategoriesArr = Helpers.splitArray(selectedCategories);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -80,6 +80,6 @@ private void restoreData() {
     }
 
     private void persistData() {
-        mPrefs.setPlayerData(Helpers.mergeObject(mOKButtonBehavior, mUIHideTimeoutSec, mIsShowFullDateEnabled));
+        mPrefs.setPlayerData(Helpers.mergeObject(mOKButtonBehavior, mUIHideTimeoutSec, mIsShowFullDateEnabled, mIsSeekPreviewEnabled));
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -243,7 +243,7 @@ public void clearCaches() {
     public void restartApp() {
         startView(SplashView.class);
 
-        mMoveViewsToBack = true;
+        mMoveViewsToBack = false;
 
         persistState();
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/AppPrefs.java
Patch:
@@ -3,6 +3,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import com.liskovsoft.sharedutils.prefs.SharedPreferencesBase;
+import com.liskovsoft.smartyoutubetv2.common.R;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
 
@@ -30,7 +31,7 @@ public class AppPrefs extends SharedPreferencesBase {
     private String mCurrentDisplayMode;
 
     private AppPrefs(Context context) {
-        super(context);
+        super(context, R.xml.app_prefs);
     }
 
     public static AppPrefs instance(Context context) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/PlaybackTransportRowPresenter.java
Patch:
@@ -482,7 +482,8 @@ void stopSeek(boolean cancelled) {
                 mSeekDataProvider.reset();
             }
             mThumbHeroIndex = -1;
-            mThumbsBar.clearThumbBitmaps();
+            // MOD: always show storyboard
+            //mThumbsBar.clearThumbBitmaps();
             mSeekDataProvider = null;
             mPositions = null;
             mPositionsLength = 0;
@@ -503,6 +504,7 @@ void enableCompactMode(boolean enable) {
                 mDescriptionViewHolder.view.setVisibility(View.VISIBLE);
                 mAdditionalInfo.setVisibility(View.VISIBLE);
                 mThumbsBar.setVisibility(View.INVISIBLE);
+                mThumbsBar.clearThumbBitmaps(); // MOD: always show storyboard
             }
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -188,7 +188,7 @@ private void loadVideoFromMetadata(Video current) {
         if (current.nextMediaItem != null) {
             loadVideoFromNext(current.nextMediaItem);
         } else {
-            MessageHelpers.showMessage(mActivity, R.string.next_video_info_is_not_loaded_yet);
+            MessageHelpers.showMessageThrottled(mActivity, R.string.next_video_info_is_not_loaded_yet);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -73,6 +73,7 @@ private BrowsePresenter(Context context) {
         mRowMapping = new HashMap<>();
         mTextGridMapping = new HashMap<>();
         mMainUIData = MainUIData.instance(mContext);
+        GlobalPreferences.instance(context); // auth token storage init (in case activity restored after crash)
         initCategories();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SplashPresenter.java
Patch:
@@ -23,7 +23,7 @@ public class SplashPresenter implements Presenter<SplashView> {
 
     private SplashPresenter(Context context) {
         mContext = context;
-        GlobalPreferences.instance(context); // auth token storage
+        GlobalPreferences.instance(context); // auth token storage init
     }
 
     public static SplashPresenter instance(Context context) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/TrackSelectorManager.java
Patch:
@@ -415,7 +415,7 @@ private void clearOverride(int rendererIndex) {
     }
 
     private void setOverride(int rendererIndex, int groupIndex, int... trackIndexes) {
-        if (groupIndex == -1) {
+        if (groupIndex == -1 || mRenderers[rendererIndex] == null) {
             mRenderers[rendererIndex].override = null; // auto option selected
             return;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -220,7 +220,9 @@ public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
         }
 
         if (playbackState == Player.STATE_BUFFERING) {
-            mTrackSelectorManager.fixSelection();
+            if (mTrackSelectorManager.fixVideoTrackSelection()) {
+                mEventListener.onTrackChanged(ExoFormatItem.from(mTrackSelectorManager.getVideoTrack()));
+            }
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -31,6 +31,7 @@ public interface PlaybackEngineController {
      */
     void blockEngine(boolean block);
     boolean isEngineBlocked();
+    boolean isEngineInitialized();
     void restartEngine();
     void reloadPlayback();
     void enablePIP(boolean enable);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -38,8 +38,9 @@ public class ExoPlayerController implements Player.EventListener, PlayerControll
     private boolean mOnSourceChanged;
     private PlayerView mPlayerView;
 
-    public ExoPlayerController(ExoPlayer player, DefaultTrackSelector trackSelector, Context context) {
+    public ExoPlayerController(ExoPlayer player, DefaultTrackSelector trackSelector, PlayerEventListener eventListener, Context context) {
         mPlayer = player;
+        mEventListener = eventListener;
         mContext = context;
         player.addListener(this);
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AccountSelectionPresenter.java
Patch:
@@ -52,7 +52,7 @@ public void unhold() {
     }
 
     private void createAndShowDialog(List<Account> accounts) {
-        if (accounts == null || accounts.size() <= 1 || AccountsData.instance(mContext).isSelectAccountOnBootEnabled()) {
+        if (accounts == null || accounts.size() <= 1 || !AccountsData.instance(mContext).isSelectAccountOnBootEnabled()) {
             return;
         }
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/widgets/textbadgeview/TextBadgeImageView.java
Patch:
@@ -38,9 +38,7 @@ public TextBadgeImageView(Context context, AttributeSet attrs, int defStyleAttr)
     }
 
     private void init() {
-        int layoutResId = MainUIData.instance(getContext()).getColorScheme().cardLayoutResId;
-
-        inflate(getContext(), layoutResId > 0 ? layoutResId : R.layout.text_badge_image_view, this);
+        inflate(getContext(), R.layout.text_badge_image_view, this);
         mMainImage = findViewById(R.id.main_image);
         mPreviewImage = findViewById(R.id.preview_image);
         mBadgeText = findViewById(R.id.extra_text_badge);

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -85,7 +85,7 @@ public class PlaybackFragment extends VideoEventsOverrideFragment implements Pla
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
+        super.onCreate(null); // trying to fix bug with presets
 
         mMediaGroupAdapters = new HashMap<>();
         mBackgroundManager = getLeanbackActivity().getBackgroundManager();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -29,6 +29,7 @@ public interface PlayerController {
     List<FormatItem> getAudioFormats();
     List<FormatItem> getSubtitleFormats();
     void selectFormat(FormatItem option);
+    void selectFormatSilent(FormatItem option);
     FormatItem getVideoFormat();
     boolean hasNoMedia();
     void setSpeed(float speed);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -64,9 +64,9 @@ public void openVideo(Video item) {
     }
 
     private void focusView() {
-        if (mView != null && mView.getController().isInPIPMode()) {
-            return;
-        }
+        //if (mView != null && (mView.getController().isInPIPMode() || mView.getController().isEngineBlocked())) {
+        //    return;
+        //}
 
         mViewManager.startView(PlaybackView.class);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -28,6 +28,7 @@ public interface PlaybackEngineController {
     void blockEngine(boolean block);
     boolean isEngineBlocked();
     void restartEngine();
+    void reloadPlayback();
     void enablePIP(boolean enable);
     boolean isPIPEnabled();
     boolean isInPIPMode();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -74,7 +74,7 @@ public void onEngineReleased() {
     public void onTrackSelected(FormatItem track) {
         if (mController.hasNoMedia()) {
             Log.e(TAG, "Engine lost his track. Is user selected unsupported format? Restarting...");
-            mController.restartEngine();
+            mController.reloadPlayback();
         }
     }
 
@@ -85,7 +85,7 @@ public void onEngineError(int type) {
             Log.e(TAG, "Player error occurred. Restarting engine once...");
             mErrorVideo = mLastVideo;
             YouTubeMediaService.instance().invalidateCache(); // some data might be stalled
-            mController.restartEngine(); // re-download video data
+            mController.reloadPlayback(); // re-download video data
         } else {
             mController.showControls(true);
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -1,7 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.playback;
 
 import android.app.PictureInPictureParams;
-import android.content.pm.PackageManager;
 import android.os.Build;
 import android.os.Bundle;
 import androidx.fragment.app.Fragment;
@@ -111,7 +110,7 @@ private boolean wannaEnterToPIP() {
     public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
         super.onPictureInPictureModeChanged(isInPictureInPictureMode);
 
-        mPlaybackFragment.restartEngine();
+        mPlaybackFragment.reloadPlayback();
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/MultipleRowsFragment.java
Patch:
@@ -149,6 +149,7 @@ public void setItemIndex(int index) {
 
         if (mRowsAdapter != null && index < mRowsAdapter.size()) {
             setSelectedPosition(index);
+            mSelectedItemIndex = -1;
         } else {
             mSelectedItemIndex = index;
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/video/VideoGridFragment.java
Patch:
@@ -96,6 +96,7 @@ public void setItemIndex(int index) {
 
         if (mGridAdapter != null && index < mGridAdapter.size()) {
             setSelectedPosition(index);
+            mSelectedItemIndex = -1;
         } else {
             mSelectedItemIndex = index;
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -168,7 +168,7 @@ private void saveState() {
         Video video = mController.getVideo();
 
         if (video != null) {
-            if (mController.getLengthMs() - mController.getPositionMs() > 500) { // don't save position of ended track
+            if (mController.getLengthMs() - mController.getPositionMs() > 500) { // don't save position if track is ended
                 mStates.put(video.videoId, new State(video.videoId, mController.getPositionMs(), mController.getLengthMs(), mController.getSpeed()));
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -168,7 +168,7 @@ private void saveState() {
         Video video = mController.getVideo();
 
         if (video != null) {
-            if (mController.getLengthMs() > MUSIC_VIDEO_LENGTH_MS) {
+            if (mController.getLengthMs() - mController.getPositionMs() > 500) { // don't save position of ended track
                 mStates.put(video.videoId, new State(video.videoId, mController.getPositionMs(), mController.getLengthMs(), mController.getSpeed()));
             }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/AudioTrack.java
Patch:
@@ -18,7 +18,7 @@ public int compare(MediaTrack track2) {
         if (Helpers.equals(format.id, track2.format.id)) {
             result = 0;
         } else if (codecEquals(format.codecs, track2.format.codecs)) {
-            return 0;
+            result = 1;
         }
 
         return result;

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/SearchSupportFragment.java
Patch:
@@ -685,9 +685,8 @@ void updateSearchBarNextFocusId() {
         final int viewId = (mResultAdapter.size() == 0 || mRowsSupportFragment == null
                 || mRowsSupportFragment.getVerticalGridView() == null)
                         ? 0 : mRowsSupportFragment.getVerticalGridView().getId();
-
-        // MOD: hide kbd on back properly
-        //mSearchBar.setNextFocusDownId(viewId);
+        
+        mSearchBar.setNextFocusDownId(viewId);
     }
 
     void updateFocus() {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/AppSettingsFragment.java
Patch:
@@ -157,14 +157,14 @@ private void addCategories(PreferenceScreen screen) {
                 }
             }
         }
-
+        
         private void setSingleCategoryAsRoot(PreferenceScreen screen) {
             // auto expand single list preference
             if (mCategories != null && mCategories.size() == 1 && screen.getPreferenceCount() > 0) {
                 onDisplayPreferenceDialog(screen.getPreference(0));
 
                 getFragmentManager().addOnBackStackChangedListener(() -> {
-                    if (getFragmentManager().getBackStackEntryCount() == 0) {
+                    if (getFragmentManager() != null && getFragmentManager().getBackStackEntryCount() == 0) {
                         getActivity().onBackPressed();
                     }
                 });

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -38,7 +38,7 @@
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.controller.ExoPlayerController;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.controller.PlayerController;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.AudioDelayRenderersFactoryV2;
+import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.V2.CustomOverridesRenderersFactory;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.DebugInfoManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.ExoPlayerInitializer;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.SubtitleManager;
@@ -247,7 +247,7 @@ private void createPlayerObjects() {
         TrackSelection.Factory videoTrackSelectionFactory =
                 new AdaptiveTrackSelection.Factory();
         mTrackSelector = new RestoreTrackSelector(videoTrackSelectionFactory);
-        mRenderersFactory = new AudioDelayRenderersFactoryV2(getActivity());
+        mRenderersFactory = new CustomOverridesRenderersFactory(getActivity());
 
         // Use default or pass your bandwidthMeter here: bandwidthMeter = new DefaultBandwidthMeter.Builder(getContext()).build()
         mPlayer = mPlayerInitializer.createPlayer(getActivity(), mRenderersFactory, mTrackSelector);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/settings/MainUISettingsPresenter.java
Patch:
@@ -55,6 +55,6 @@ private void appendLeftPanelCategories(AppSettingsPresenter settingsPresenter) {
              }, mMainUIData.isCategoryEnabled(category.getValue())));
         }
 
-        settingsPresenter.appendCheckedCategory(mContext.getString(R.string.content_categories), options);
+        settingsPresenter.appendCheckedCategory(mContext.getString(R.string.side_panel_categories), options);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/MainUIData.java
Patch:
@@ -37,12 +37,12 @@ public boolean isAnimatedPreviewsEnabled() {
     private void restoreData() {
         String data = mPrefs.getMainUIData();
 
-        String[] split = Helpers.split(data);
+        String[] split = Helpers.splitObject(data);
 
         mIsAnimatedPreviewsEnabled = Helpers.parseBoolean(split, 0, true);
     }
 
     private void persistData() {
-        mPrefs.setMainUIData(Helpers.merge(mIsAnimatedPreviewsEnabled));
+        mPrefs.setMainUIData(Helpers.mergeObject(mIsAnimatedPreviewsEnabled));
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/PlayerData.java
Patch:
@@ -51,13 +51,13 @@ public int getUIHideTimoutSec() {
     private void restoreData() {
         String data = mPrefs.getPlayerData();
 
-        String[] split = Helpers.split(data);
+        String[] split = Helpers.splitObject(data);
 
         mOKButtonBehavior = Helpers.parseInt(split, 0, ONLY_UI);
         mUIHideTimeoutSec = Helpers.parseInt(split, 1, 3);
     }
 
     private void persistData() {
-        mPrefs.setPlayerData(Helpers.merge(mOKButtonBehavior, mUIHideTimeoutSec));
+        mPrefs.setPlayerData(Helpers.mergeObject(mOKButtonBehavior, mUIHideTimeoutSec));
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/AppSettingsFragment.java
Patch:
@@ -91,7 +91,7 @@ public void addCategories(List<SettingsCategory> categories) {
 
     @Override
     public void clear() {
-        onPreferenceStartInitialScreen();
+        getActivity().runOnUiThread(this::onPreferenceStartInitialScreen);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppSettingsPresenter.java
Patch:
@@ -133,6 +133,7 @@ public void showDialog(String dialogTitle, Runnable onClose) {
         enableOldAndroidFix(true);
 
         if (mView != null) {
+            mView.clear();
             onInitDone();
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppSettingsView.java
Patch:
@@ -7,4 +7,5 @@
 public interface AppSettingsView {
     void addCategories(List<SettingsCategory> categories);
     void setTitle(String title);
+    void clear();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/SubtitleManager.java
Patch:
@@ -106,8 +106,8 @@ private void configureSubtitleView() {
     }
 
     private void initDefaultStyles() {
-        mSubtitleStyles.add(new SubtitleStyle(R.string.sub_default, R.color.transparent, CaptionStyleCompat.EDGE_TYPE_DROP_SHADOW));
-        mSubtitleStyles.add(new SubtitleStyle(R.string.sub_semi_grey, R.color.semi_grey, CaptionStyleCompat.EDGE_TYPE_OUTLINE));
+        mSubtitleStyles.add(new SubtitleStyle(R.string.subtitle_default, R.color.transparent, CaptionStyleCompat.EDGE_TYPE_DROP_SHADOW));
+        mSubtitleStyles.add(new SubtitleStyle(R.string.subtitle_semi_transparent_bg, R.color.semi_grey, CaptionStyleCompat.EDGE_TYPE_OUTLINE));
 
         restoreData();
 

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -123,8 +123,8 @@ public void destroyActivity() {
     }
 
     private void properlyFinishTheApp() {
-        destroyActivity();
         mViewManager.clearCaches();
-        mViewManager.killApp();
+        destroyActivity();
+        //mViewManager.killApp();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/HqDialogManager.java
Patch:
@@ -67,11 +67,11 @@ private void addQualityCategories() {
         addRadioCategory(videoFormatsTitle,
                 UiOptionItem.from(videoFormats,
                         option -> mController.selectFormat(UiOptionItem.toFormat(option)),
-                        mActivity.getString(R.string.default_video_option)));
+                        mActivity.getString(R.string.video_max_quality)));
         addRadioCategory(audioFormatsTitle,
                 UiOptionItem.from(audioFormats,
                         option -> mController.selectFormat(UiOptionItem.toFormat(option)),
-                        mActivity.getString(R.string.default_audio_option)));
+                        mActivity.getString(R.string.audio_max_quality)));
     }
 
     private void addVideoBufferCategory() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUiManager.java
Patch:
@@ -92,7 +92,7 @@ public void onSubtitlesClicked() {
         settingsPresenter.appendRadioCategory(subtitleFormatsTitle,
                 UiOptionItem.from(subtitleFormats,
                         option -> mController.selectFormat(UiOptionItem.toFormat(option)),
-                        mActivity.getString(R.string.default_subtitle_option)));
+                        mActivity.getString(R.string.subtitles_disabled)));
 
         settingsPresenter.appendRadioCategory(subtitleStyleTitle, fromSubtitleStyles(subtitleStyles));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -155,6 +155,7 @@ public void register(BrowseView view) {
     @Override
     public void unregister(BrowseView view) {
         mView = null;
+        RxUtils.disposeActions(mUpdateAction, mScrollAction, mSignCheckAction);
     }
 
     @Override

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -63,7 +63,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         mRowsAdapter = new ArrayObjectAdapter(new ListRowPresenter());
         mProgressBarManager = new ProgressBarManager();
-        //mProgressBarManager.setPosition(Gravity.BOTTOM | Gravity.CENTER);
 
         setSearchResultProvider(this);
         setupEventListeners();
@@ -96,8 +95,6 @@ public void recognizeSpeech() {
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        //mProgressBarManager.setRootView((ViewGroup) getActivity().findViewById(android.R.id.content).getRootView());
-
         mSearchPresenter.onInitDone();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/interfaces/CategoryPresenter.java
Patch:
@@ -1,6 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.common.app.presenters.interfaces;
 
 public interface CategoryPresenter {
-    void onCategoryFocused(long categoryId);
+    void onCategoryFocused(int categoryIndex);
     void onViewResumed();
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/ProgressBarManager.java
Patch:
@@ -151,9 +151,7 @@ public void setPosition(int position) {
         mPosition = position;
     }
 
-    public static void setup(androidx.leanback.app.ProgressBarManager manager) {
-        ViewGroup rootView = (ViewGroup) Helpers.getField(manager, "rootView");
-
+    public static void setup(androidx.leanback.app.ProgressBarManager manager, ViewGroup rootView) {
         if (rootView != null) {
             manager.setProgressBarView(createProgressBar(rootView, Gravity.CENTER));
         }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -111,7 +111,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         View view = super.onCreateView(inflater, container, savedInstanceState);
 
         // ProgressBar.setRootView is called in this moment
-        ProgressBarManager.setup(getProgressBarManager());
+        ProgressBarManager.setup(getProgressBarManager(), (ViewGroup) view);
 
         return view;
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/AppSettingsPresenter.java
Patch:
@@ -99,9 +99,6 @@ public void onClose() {
     }
 
     public void clear() {
-        if (mView != null) {
-            mView.clear();
-        }
         mCategories.clear();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/AppSettingsView.java
Patch:
@@ -7,5 +7,4 @@
 public interface AppSettingsView {
     void addCategories(List<SettingsCategory> categories);
     void setTitle(String title);
-    void clear();
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/AppSettingsActivity.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.settings;
 
-import android.content.Intent;
 import android.content.pm.ActivityInfo;
 import android.os.Build.VERSION;
 import android.os.Bundle;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -8,6 +8,7 @@
 import androidx.annotation.NonNull;
 import com.liskovsoft.sharedutils.helpers.FileHelpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
+import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -225,6 +226,7 @@ public void setSinglePlayerMode(boolean enable) {
     }
 
     private void clearCache() {
+        YouTubeMediaService.instance().invalidateCache();
         FileHelpers.deleteCache(mContext);
     }
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/UriBackgroundManager.java
Patch:
@@ -56,9 +56,7 @@ public void startBackgroundTimer(String bgImageUrl) {
     }
 
     public void setBackgroundFrom(Video item) {
-        // ignore
-        // startBackgroundTimer(item.bgImageUrl);
-        setDefaultBackground();
+        // Selectively change background picture
     }
 
     public void onStart() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/ModeSyncManager.java
Patch:
@@ -37,7 +37,7 @@ private void applyAfr(Activity activity) {
         if (mFormatItem != null) {
             mFrameRateHelper.apply(mFormatItem, activity);
         } else {
-            mFrameRateHelper.restoreOriginalState(activity);
+            //mFrameRateHelper.restoreOriginalState(activity);
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -26,7 +26,7 @@ public class MainPlayerEventBridge implements PlayerEventListener {
     private final ArrayList<PlayerHandlerEventListener> mEventListeners;
     @SuppressLint("StaticFieldLeak")
     private static MainPlayerEventBridge sInstance;
-    private boolean mInitDone;
+    private PlaybackController mController;
 
     public MainPlayerEventBridge() {
         mEventListeners = new ArrayList<>();
@@ -65,8 +65,8 @@ public void setController(PlaybackController controller) {
             process(listener -> listener.onActivity(mainActivity));
             process(listener -> listener.onController(controller));
 
-            if (!mInitDone) {
-                mInitDone = true;
+            if (mController != controller) { // Be ready to re-init after app exit
+                mController = controller;
                 process(PlayerHandlerEventListener::onInitDone);
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/other/DebugInfoManager.java
Patch:
@@ -59,6 +59,7 @@ public final class DebugInfoManager implements Runnable, Player.EventListener {
     private final List<Pair<String, String>> mVideoInfo = new ArrayList<>();
     private final List<Pair<String, String>> mDisplayModeId = new ArrayList<>();
     private final List<Pair<String, String>> mDisplayInfo = new ArrayList<>();
+    private final String mAppVersion;
 
     /**
      * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
@@ -70,6 +71,7 @@ public DebugInfoManager(SimpleExoPlayer player, int resLayoutId, Activity ctx) {
         mDebugViewGroup = ctx.findViewById(resLayoutId);
         mContext = ctx;
         mTextSize = ctx.getResources().getDimension(R.dimen.debug_text_size);
+        mAppVersion = String.format("%s Version", mContext.getString(R.string.app_name));
         inflate();
     }
 
@@ -347,7 +349,7 @@ private void appendPlayerWindowIndex() {
 
     private void appendVersion() {
         appendRow("ExoPlayer Version", ExoPlayerLibraryInfo.VERSION);
-        appendRow("App Version", AppInfoHelpers.getAppVersionName(mContext));
+        appendRow(mAppVersion, AppInfoHelpers.getAppVersionName(mContext));
     }
 
     private void appendDeviceName() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/errors/SignInError.java
Patch:
@@ -19,7 +19,7 @@ public void onAction() {
 
     @Override
     public String getMessage() {
-        return mContext.getString(R.string.msg_signin_to_show_more);
+        return mContext.getString(R.string.library_signin_to_show_more);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackUiController.java
Patch:
@@ -8,6 +8,7 @@ public interface PlaybackUiController {
     int REPEAT_ALL = 2;
     void updateSuggestions(VideoGroup group);
     void resetSuggestedPosition();
+    boolean isSuggestionsEmpty();
     void clearSuggestions();
     void showControls(boolean show);
     boolean isSuggestionsShown();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -130,7 +130,6 @@ public void onPlayEnd() {
     @Override
     public void onSuggestionItemClicked(Video item) {
         if (item.isVideo()) {
-            mController.clearSuggestions();
             mPlaylist.add(item);
             loadVideo(item);
         } else if (item.isChannel()) {

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/grid/HeaderGridFragment.java
Patch:
@@ -27,7 +27,7 @@ public class HeaderGridFragment extends GridFragment implements VideoGroupFragme
     private static final String TAG = HeaderGridFragment.class.getSimpleName();
     private static final int COLUMNS_NUM = 4;
     private static final int ZOOM_FACTOR = FocusHighlight.ZOOM_FACTOR_SMALL;
-    private static final int CHECK_SCROLL_ITEMS_NUM = 10;
+    private static final int CHECK_SCROLL_ITEMS_NUM = 15;
     private VideoGroupObjectAdapter mGridAdapter;
     private final List<VideoGroup> mPendingUpdates = new ArrayList<>();
     private UriBackgroundManager mBackgroundManager;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -1,12 +1,12 @@
 package com.liskovsoft.smartyoutubetv2.common.app.views;
 
-import com.liskovsoft.smartyoutubetv2.common.app.models.signin.ErrorFragmentData;
+import com.liskovsoft.smartyoutubetv2.common.app.models.errors.ErrorFragmentData;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Header;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 
 public interface BrowseView {
     void updateHeader(VideoGroup row);
-    void updateHeaderIfEmpty(ErrorFragmentData data);
+    void updateErrorIfEmpty(ErrorFragmentData data);
     void clearHeader(Header header);
     void showProgressBar(boolean show);
 }

File: smarttubetv/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -17,8 +17,7 @@
 import androidx.leanback.widget.Row;
 import androidx.leanback.widget.RowHeaderPresenter.ViewHolder;
 import com.liskovsoft.sharedutils.helpers.Helpers;
-import com.liskovsoft.sharedutils.mylogger.Log;
-import com.liskovsoft.smartyoutubetv2.common.app.models.signin.ErrorFragmentData;
+import com.liskovsoft.smartyoutubetv2.common.app.models.errors.ErrorFragmentData;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Header;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.BrowsePresenter;
@@ -119,7 +118,7 @@ private void setupEventListeners() {
     }
 
     @Override
-    public void updateHeaderIfEmpty(ErrorFragmentData data) {
+    public void updateErrorIfEmpty(ErrorFragmentData data) {
         mHandler.postDelayed(() -> showErrorIfEmpty(data), 500); // need delay because header may be not updated
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.List;
 
 public interface PlayerController {
+    PlayerController NULL_CONTROLLER = new NullPlayerController();
     int BUFFER_LOW = 0;
     int BUFFER_MED = 1;
     int BUFFER_HIGH = 2;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -132,7 +132,7 @@ private void replaceMainFragment(Fragment fragment) {
 
             FragmentTransaction ft = getChildFragmentManager().beginTransaction();
             ft.replace(R.id.scale_frame, fragment);
-            ft.commit();
+            ft.commitAllowingStateLoss(); // FIX: "Can not perform this action after onSaveInstanceState"
         }
     }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -211,10 +211,10 @@ private void destroyPlayerObjects() {
         mPlayerGlue = null;
         mPlayerAdapter = null;
         mPlaylistActionListener = null;
-        mExoPlayerController = null;
         mRenderersFactory = null;
         mSubtitleManager = null;
         mDebugInfoManager = null;
+        mExoPlayerController = PlayerController.NULL_CONTROLLER;
     }
 
     private void createPlayerObjects() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/internal/DisplaySyncHelper.java
Patch:
@@ -314,9 +314,6 @@ public boolean syncDisplayMode(Window window, int videoWidth, float videoFramera
 
             if (!force && closerMode.equals(currentMode)) {
                 Log.i(TAG, "Do not need to change mode.");
-
-                // NOTE: changed
-                //CommonApplication.getPreferences().setCurrentDisplayMode(UhdHelper.formatMode(currentMode));
                 return false;
             }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchActivity.java
Patch:
@@ -3,11 +3,13 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.KeyEvent;
+import com.liskovsoft.sharedutils.helpers.KeyHelpers;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.LeanbackActivity;
 
 public class SearchActivity extends LeanbackActivity {
     private SearchFragment mFragment;
+    private boolean mDownPressed;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/SearchView.java
Patch:
@@ -6,4 +6,5 @@ public interface SearchView {
     void updateSearch(VideoGroup group);
     void clearSearch();
     void showProgressBar(boolean show);
+    void startSearch(String searchText);
 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/settings/AppSettingsFragmentHelper.java
Patch:
@@ -169,7 +169,7 @@ private void initMultiSelectListPreference(SettingsCategory category, MultiSelec
                                 for (OptionItem requiredItem : requiredItems) {
                                     if (!requiredItem.isSelected()) {
                                         MessageHelpers.showMessageThrottled(mStyledContext, mStyledContext.getString(R.string.require_checked, requiredItem.getTitle()));
-                                        return false;
+                                        //return false;
                                     }
                                 }
                             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -34,7 +34,10 @@ public MainPlayerEventBridge() {
 
         PlayerUiManager uiManager = new PlayerUiManager();
         HqDialogManager hqDialogManager = new HqDialogManager();
+
         VideoLoader videoLoader = new VideoLoader();
+        videoLoader.addErrorListener(uiManager);
+
         SuggestionsLoader suggestionsLoader = new SuggestionsLoader();
         suggestionsLoader.addMetadataListener(uiManager);
         suggestionsLoader.addMetadataListener(videoLoader);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -211,10 +211,9 @@ private void restorePosition(Video item) {
 
         if (state != null && !nearEnd) {
             mController.setPositionMs(state.positionMs);
-            mController.setPlay(mIsPlaying);
-        } else {
-            mController.setPlay(true); // start play immediately when state not found
         }
+
+        mController.setPlay(mIsPlaying);
     }
 
     private void restoreSpeed(Video item) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -146,7 +146,9 @@ public void onTrackSelected(FormatItem track) {
             mSubtitleFormat = track;
         }
 
-        AppPrefs.instance(mActivity).setFormat(track);
+        if (!mController.isInPIPMode()) {
+            AppPrefs.instance(mActivity).setFormat(track);
+        }
     }
 
     private void ensureVideoSize(Video item) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -64,7 +64,7 @@ public void openVideo(Video item) {
     }
 
     private void focusView() {
-        if (mView != null && mView.getController().isEngineBlocked()) {
+        if (mView != null && (mView.getController().isInPIPMode() || mView.getController().isEngineBlocked())) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/HqDialogManager.java
Patch:
@@ -40,7 +40,7 @@ public void onActivity(Activity activity) {
     public void onController(PlaybackController controller) {
         super.onController(controller);
 
-        controller.setBuffer(AppPrefs.instance(mActivity).getVideoBufferType(PlaybackEngineController.BUFFER_MED));
+        controller.setBuffer(AppPrefs.instance(mActivity).getVideoBufferType(PlaybackEngineController.BUFFER_LOW));
     }
 
     private void addQualityCategories() {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.common.exoplayer.controller;
 
-import android.app.Activity;
 import android.content.Context;
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.ExoPlayer;
@@ -17,7 +16,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listener.PlayerEventListener;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.ExoMediaSourceFactory;
-import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.DebugInfoManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -279,8 +279,8 @@ public void onPlaylistAddClicked() {
     }
 
     @Override
-    public void onVideoStatsClicked() {
-        process(PlayerUiEventListener::onVideoStatsClicked);
+    public void onVideoStatsClicked(boolean enabled) {
+        process(listener -> listener.onVideoStatsClicked(enabled));
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -183,7 +183,7 @@ public void onPlaylistAddClicked() {
     }
 
     @Override
-    public void onVideoStatsClicked() {
+    public void onVideoStatsClicked(boolean enabled) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerUiEventListener.java
Patch:
@@ -20,6 +20,6 @@ public interface PlayerUiEventListener {
     void onTrackSelected(FormatItem track);
     void onClosedCaptionsClicked();
     void onPlaylistAddClicked();
-    void onVideoStatsClicked();
+    void onVideoStatsClicked(boolean enabled);
     void onVideoSpeedClicked();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -1,11 +1,11 @@
 package com.liskovsoft.smartyoutubetv2.common.exoplayer.controller;
 
+import android.app.Activity;
 import android.content.Context;
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.ExoPlayer;
 import com.google.android.exoplayer2.PlaybackParameters;
 import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Player.EventListener;
 import com.google.android.exoplayer2.source.MediaSource;
 import com.google.android.exoplayer2.source.TrackGroupArray;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
@@ -17,14 +17,15 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listener.PlayerEventListener;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.ExoMediaSourceFactory;
+import com.liskovsoft.smartyoutubetv2.common.exoplayer.other.DebugInfoManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorManager;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.TrackSelectorUtil;
 
 import java.io.InputStream;
 import java.util.List;
 
-public class ExoPlayerController implements EventListener, PlayerController {
+public class ExoPlayerController implements Player.EventListener, PlayerController {
     private static final String TAG = ExoPlayerController.class.getSimpleName();
     private final ExoPlayer mPlayer;
     private final Context mContext;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/PlaybackTransportRowPresenter.java
Patch:
@@ -595,9 +595,9 @@ public PlaybackTransportRowPresenter() {
         setHeaderPresenter(null);
         setSelectEffectEnabled(false);
 
-        mPlaybackControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_control_bar);
+        mPlaybackControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar);
         mPlaybackControlsPresenter.setDefaultFocusToMiddle(false);
-        mSecondaryControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_control_bar);
+        mSecondaryControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar);
         mSecondaryControlsPresenter.setDefaultFocusToMiddle(false);
 
         mPlaybackControlsPresenter.setOnControlSelectedListener(mOnControlSelectedListener);
@@ -694,7 +694,7 @@ private static int getDefaultSecondaryProgressColor(Context context) {
     @Override
     protected RowPresenter.ViewHolder createRowViewHolder(ViewGroup parent) {
         View v = LayoutInflater.from(parent.getContext()).inflate(
-                com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_playback_transport_controls_row, parent, false);
+                com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_playback_transport_controls_row, parent, false);
         ViewHolder vh = new ViewHolder(v, mDescriptionPresenter);
         initRow(vh);
         return vh;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -206,6 +206,8 @@ private void restorePosition(Video item) {
     private void restoreSpeed() {
         if (mController.getLengthMs() - mController.getPositionMs() > 30_000) {
             mController.setSpeed(mSpeed);
+        } else {
+            mController.setSpeed(1.0f); // speed may be changed before, so do reset to default
         }
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/selector/track/VideoTrack.java
Patch:
@@ -70,6 +70,8 @@ public int compare(MediaTrack track2) {
                     result = 1;
                 }
             }
+        } else if (heightLessOrEquals(track2.format.height, format.height)) {
+            result = 1;
         }
 
         return result;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/prefs/AppPrefs.java
Patch:
@@ -5,7 +5,6 @@
 import com.liskovsoft.sharedutils.prefs.SharedPreferencesBase;
 import com.liskovsoft.smartyoutubetv2.common.autoframerate.FormatItem;
 import com.liskovsoft.smartyoutubetv2.common.exoplayer.selector.ExoFormatItem;
-import com.liskovsoft.youtubeapi.videoinfo.models.formats.VideoFormat;
 
 public class AppPrefs extends SharedPreferencesBase {
     private static final String TAG = AppPrefs.class.getSimpleName();
@@ -38,7 +37,8 @@ public void setFormat(FormatItem track) {
         putString(VIDEO_FORMAT + track.getType(), track.toString());
     }
 
-    public FormatItem getFormat(int type) {
-        return ExoFormatItem.from(getString(VIDEO_FORMAT + type, null));
+    public FormatItem getFormat(int type, FormatItem defaultFormat) {
+        FormatItem formatItem = ExoFormatItem.from(getString(VIDEO_FORMAT + type, null));
+        return formatItem != null ? formatItem : defaultFormat;
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -35,9 +35,6 @@ public VideoLoader() {
     public void openVideo(Video item) {
         mPlaylist.add(item);
 
-        // reset next video prediction when new video opens
-        mPlaylist.clearNext();
-
         if (mEngineInitialized) { // player is initialized
             if (!item.equals(mLastVideo)) {
                 loadVideo(item); // play immediately

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUiManager.java
Patch:
@@ -62,7 +62,7 @@ public void onKeyDown(int keyCode) {
 
     @Override
     public void onChannelClicked() {
-        ChannelPresenter.instance(mActivity).openChannel(mController.getVideo().channelId);
+        ChannelPresenter.instance(mActivity).openChannel(mController.getVideo());
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/VideoLoader.java
Patch:
@@ -119,11 +119,11 @@ public void onPlayEnd() {
 
     @Override
     public void onSuggestionItemClicked(Video item) {
-        if (item.videoId != null) {
+        if (item.isVideo()) {
             mPlaylist.add(item);
             loadVideo(item);
-        } else if (item.channelId != null) {
-            ChannelPresenter.instance(mActivity).openChannel(item.channelId);
+        } else if (item.isChannel()) {
+            ChannelPresenter.instance(mActivity).openChannel(item);
         } else {
             Log.e(TAG, "Video item doesn't contain needed data!");
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -28,4 +28,5 @@ public interface PlaybackEngineController {
     void enablePIP(boolean enable);
     boolean isPIPEnabled();
     boolean isInPIPMode();
+    boolean hasNoMedia();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/PlayerController.java
Patch:
@@ -25,4 +25,5 @@ public interface PlayerController {
     List<FormatItem> getSubtitleFormats();
     void selectFormat(FormatItem option);
     FormatItem getVideoFormat();
+    boolean hasNoMedia();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/PlayerUiManager.java
Patch:
@@ -161,8 +161,9 @@ public void onVideoStatsClicked() {
     }
 
     private void updateBackgroundPlayback() {
-        if (mBlockEngine && !mEnablePIP) {
-            ViewManager.instance(mActivity).blockTop(mActivity); // open player regarding its position in stack when playing audio
+        if (mBlockEngine) {
+            // return to the player regardless the last activity user watched in moment exiting to HOME
+            ViewManager.instance(mActivity).blockTop(mActivity);
         } else {
             ViewManager.instance(mActivity).blockTop(null);
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/controller/PlaybackEngineController.java
Patch:
@@ -23,6 +23,7 @@ public interface PlaybackEngineController {
      */
     void blockEngine(boolean block);
     boolean isEngineBlocked();
+    void restartEngine();
     void enablePIP(boolean enable);
     boolean isPIPEnabled();
     boolean isInPIPMode();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/controller/ExoPlayerController.java
Patch:
@@ -171,6 +171,7 @@ public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray tra
     @Override
     public void onPlayerError(ExoPlaybackException error) {
         Log.e(TAG, "onPlayerError: " + error);
+        mEventListener.onEngineError(error.type);
     }
 
     @Override

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackActivity.java
Patch:
@@ -10,7 +10,6 @@
 import android.view.MotionEvent;
 
 import com.liskovsoft.sharedutils.mylogger.Log;
-import com.liskovsoft.smartyoutubetv2.common.app.views.ViewManager;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.LeanbackActivity;
 
@@ -106,7 +105,7 @@ public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode) {
 
         mIsInPIPMode = isInPictureInPictureMode;
 
-        mPlaybackFragment.restartPlayer();
+        mPlaybackFragment.restartEngine();
     }
 
     @Override

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -156,7 +156,8 @@ private int getSuggestedRowIndex() {
         return selectedPosition;
     }
 
-    public void restartPlayer() {
+    @Override
+    public void restartEngine() {
         if (mPlayer != null) {
             mEventListener.onEngineReleased();
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -90,7 +90,8 @@ public void startParentView(Activity activity) {
 
             if (parentActivity == null) {
                 Log.d(TAG, "Parent activity name doesn't stored in registry. Exiting to Home...");
-                activity.moveTaskToBack(true);
+                //activity.moveTaskToBack(true);
+
                 return;
             }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.annotation.SuppressLint;
 import android.content.Intent;
+import android.content.pm.ActivityInfo;
+import android.os.Build;
 import android.os.Bundle;
 import android.view.KeyEvent;
 import androidx.fragment.app.FragmentActivity;
@@ -82,8 +84,6 @@ protected void onDestroy() {
 
     @Override
     public void finish() {
-        //super.finish();
-        
         mViewManager.startParentView(this);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -63,7 +63,7 @@ public void openVideo(String videoId) {
     }
 
     private void focusView() {
-        if (mView != null && mView.getController().isPIPEnabled()) {
+        if (mView != null && mView.getController().isEngineBlocked()) {
             return;
         }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/mod/leanback/playerglue/PlaybackTransportRowPresenter.java
Patch:
@@ -595,9 +595,9 @@ public PlaybackTransportRowPresenter() {
         setHeaderPresenter(null);
         setSelectEffectEnabled(false);
 
-        mPlaybackControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar_mod);
+        mPlaybackControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_control_bar);
         mPlaybackControlsPresenter.setDefaultFocusToMiddle(false);
-        mSecondaryControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_control_bar_mod);
+        mSecondaryControlsPresenter = new ControlBarPresenter(com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_control_bar);
         mSecondaryControlsPresenter.setDefaultFocusToMiddle(false);
 
         mPlaybackControlsPresenter.setOnControlSelectedListener(mOnControlSelectedListener);
@@ -694,7 +694,7 @@ private static int getDefaultSecondaryProgressColor(Context context) {
     @Override
     protected RowPresenter.ViewHolder createRowViewHolder(ViewGroup parent) {
         View v = LayoutInflater.from(parent.getContext()).inflate(
-                com.liskovsoft.smartyoutubetv2.tv.R.layout.lb_playback_transport_controls_row_mod, parent, false);
+                com.liskovsoft.smartyoutubetv2.tv.R.layout.mod_lb_playback_transport_controls_row, parent, false);
         ViewHolder vh = new ViewHolder(v, mDescriptionPresenter);
         initRow(vh);
         return vh;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/VideoPlayerGlue.java
Patch:
@@ -127,6 +127,7 @@ protected void onCreatePrimaryActions(ArrayObjectAdapter adapter) {
         adapter.add(mRewindAction);
         adapter.add(mFastForwardAction);
         adapter.add(mSkipNextAction);
+        adapter.add(mRepeatAction);
     }
 
     @Override
@@ -144,7 +145,6 @@ protected void onCreateSecondaryActions(ArrayObjectAdapter adapter) {
         adapter.add(mThumbsUpAction);
         adapter.add(mSubscribeAction);
         adapter.add(mClosedCaptioningAction);
-        adapter.add(mRepeatAction);
         adapter.add(mVideoStatsAction);
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.app.Activity;
 import androidx.fragment.app.Fragment;
-import androidx.fragment.app.FragmentActivity;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.PlaybackController;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listener.PlayerHandlerEventListener;
@@ -63,7 +62,7 @@ public void setController(PlaybackController controller) {
             if (mMainActivity != mainActivity) {
                 mMainActivity = mainActivity;
 
-                process(listener -> listener.onMainActivity(mainActivity));
+                process(listener -> listener.onActivity(mainActivity));
             }
         }
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerHandlerEventListener.java
Patch:
@@ -9,6 +9,6 @@
 public interface PlayerHandlerEventListener extends PlayerUiEventListener, PlayerEngineEventListener, ViewEventListener {
     void openVideo(Video item);
     void onController(PlaybackController controller);
-    void onMainActivity(Activity activity);
+    void onActivity(Activity activity);
     void onParentActivity(Activity activity);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -70,13 +70,13 @@ public void onVideoLoaded(Video item) {
     @Override
     public void onPlay() {
         mIsPlaying = true;
-        Helpers.disableScreensaver(mMainActivity);
+        Helpers.disableScreensaver(mActivity);
     }
 
     @Override
     public void onPause() {
         mIsPlaying = false;
-        Helpers.enableScreensaver(mMainActivity);
+        Helpers.enableScreensaver(mActivity);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/ViewManager.java
Patch:
@@ -154,7 +154,7 @@ private Class<?> getDefaultParent(Activity activity) {
         return parentActivity;
     }
 
-    public void blockTop(boolean block) {
-        mDefaultTop = block ? getTopActivity() : null;
+    public void blockTop(Activity activity) {
+        mDefaultTop = activity == null ? null : activity.getClass();
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/autoframerate/AutoFrameRateHelper.java
Patch:
@@ -94,7 +94,9 @@ public void restoreOriginalState() {
 
         Log.d(TAG, "Restoring original mode...");
 
-        mSyncHelper.restoreOriginalState(mActivity.getWindow());
+        boolean result = mSyncHelper.restoreOriginalState(mActivity.getWindow());
+
+        Log.d(TAG, "Restore mode result: " + result);
     }
 
     public void setListener(AutoFrameRateListener listener) {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -12,7 +12,7 @@ public class StateUpdater extends PlayerEventListenerHelper {
     private final Map<Long, State> mPositionMap = new HashMap<>();
     private boolean mIsPlaying;
     private int mRepeatMode = 0;
-    private FormatItem mVideoFormat;
+    private FormatItem mVideoFormat = FormatItem.HD_AVC;
 
     private static class State {
         final long positionMs;

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/managers/StateUpdater.java
Patch:
@@ -85,7 +85,9 @@ public void onRepeatModeChange(int modeIndex) {
 
     @Override
     public void onTrackClicked(FormatItem track) {
-        mVideoFormat = track;
+        if (track.getType() == FormatItem.TYPE_VIDEO) {
+            mVideoFormat = track;
+        }
     }
 
     private void saveState() {

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/settings/VideoSettingsFragment.java
Patch:
@@ -190,7 +190,7 @@ private Preference createCheckedPreference(SettingsCategory category) {
             pref.setOnPreferenceChangeListener((preference, newValue) -> {
                 for (OptionItem optionItem : category.items) {
                     if (newValue.equals(optionItem.toString())) {
-                        optionItem.onSelect((boolean) newValue);
+                        optionItem.onSelect(true);
                         break;
                     }
                 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -153,10 +153,12 @@ private int getSuggestedRowIndex() {
 
     private void releasePlayer() {
         if (mBlockEngine) {
+            Log.d(TAG, "releasePlayer: Engine release is blocked. Exiting...");
             return;
         }
 
         if (mPlayer != null) {
+            Log.d(TAG, "releasePlayer: Start releasing player engine...");
             mEventListener.onEngineReleased();
             mPlayer.release();
             mPlayer = null;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -170,7 +170,7 @@ private void releasePlayer() {
     }
 
     private void initializePlayer() {
-        if (mBlockEngine) {
+        if (mPlayer != null) {
             return;
         }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listener/PlayerEngineEventListener.java
Patch:
@@ -1,6 +1,7 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback.listener;
 
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.OptionItem;
 
 public interface PlayerEngineEventListener {
     void onPlay();
@@ -11,4 +12,5 @@ public interface PlayerEngineEventListener {
     void onEngineReleased();
     void onPlayEnd();
     void onRepeatModeChange(int modeIndex);
+    void onTrackChange(OptionItem track);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/managers/ExoPlayerController.java
Patch:
@@ -59,6 +59,7 @@ public void openDash(InputStream dashManifest) {
         mPlayer.prepare(mediaSource);
 
         if (mEventListener != null) {
+            mTrackSelectorManager.invalidate();
             mEventListener.onVideoLoaded(mVideo);
         }
     }
@@ -70,6 +71,7 @@ public void openHls(String hlsPlaylistUrl) {
         mPlayer.prepare(mediaSource);
 
         if (mEventListener != null) {
+            mTrackSelectorManager.invalidate();
             mEventListener.onVideoLoaded(mVideo);
         }
     }
@@ -140,6 +142,7 @@ public List<OptionItem> getSubtitleFormats() {
     @Override
     public void selectFormat(OptionItem option) {
         mTrackSelectorManager.selectTrack(FormatOptionItem.toMediaTrack(option));
+        mEventListener.onTrackChange(option);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/handlers/PlayerUiManager.java
Patch:
@@ -61,6 +61,7 @@ public void onHighQualityClicked() {
         String audioFormatsTitle = mActivity.getString(R.string.dialog_audio_formats);
 
         VideoSettingsPresenter settingsPresenter = VideoSettingsPresenter.instance(mActivity);
+        settingsPresenter.clear();
         settingsPresenter.append(videoFormatsTitle, videoFormats, option -> mController.selectFormat(option));
         settingsPresenter.append(audioFormatsTitle, audioFormats, option -> mController.selectFormat(option));
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/VideoSettingsView.java
Patch:
@@ -1,6 +1,5 @@
 package com.liskovsoft.smartyoutubetv2.common.app.views;
 
-import com.liskovsoft.smartyoutubetv2.common.app.models.playback.controller.OptionItem;
 import com.liskovsoft.smartyoutubetv2.common.app.presenters.VideoSettingsPresenter.SettingsCategory;
 
 import java.util.List;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/settings/VideoSettingsFragment.java
Patch:
@@ -21,6 +21,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.views.VideoSettingsView;
 
 import java.util.List;
+import java.util.Set;
 
 public class VideoSettingsFragment extends LeanbackSettingsFragment
         implements DialogPreference.TargetFragment, VideoSettingsView {

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/signin/SignInFragment.java
Patch:
@@ -72,7 +72,7 @@ public void onCreateActions(@NonNull List<GuidedAction> actions, Bundle savedIns
     @Override
     public void onGuidedActionClicked(GuidedAction action) {
         if (action.getId() == CONTINUE) {
-            getActivity().finishAfterTransition();
+            mSignInPresenter.onActionClicked();
         }
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -30,6 +30,7 @@
 
 public class BrowsePresenter implements HeaderPresenter<BrowseView> {
     private static final String TAG = BrowsePresenter.class.getSimpleName();
+    private static final long RELOAD_PERIOD_MS = 10*60*1_000;
     @SuppressLint("StaticFieldLeak")
     private static BrowsePresenter sInstance;
     private final Handler mHandler = new Handler();
@@ -135,7 +136,7 @@ public void onScrollEnd(VideoGroup group) {
     @Override
     public void onViewResumed() {
         long timeAfterPauseMs = System.currentTimeMillis() - mLastUpdateTimeMs;
-        if (timeAfterPauseMs > 5*60*1_000) { // update header every n minutes
+        if (timeAfterPauseMs > RELOAD_PERIOD_MS) { // update header every n minutes
             if (mCurrentHeaderId != -1) {
                 updateHeader(mCurrentHeaderId);
             }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -250,7 +250,7 @@ private final class ItemViewSelectedListener implements OnItemViewSelectedListen
         public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
                                    RowPresenter.ViewHolder rowViewHolder, Row row) {
             if (item instanceof Video) {
-                mBackgroundManager.updateBackground((Video) item);
+                mBackgroundManager.setBackgroundFrom((Video) item);
             } else {
                 mBackgroundManager.removeBackground();
             }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/HeaderFragmentFactory.java
Patch:
@@ -147,6 +147,6 @@ private void clearFragment(Fragment fragment) {
     }
 
     public void updateFragmentIfEmpty(ErrorFragmentData data) {
-        
+        // replace current fragment
     }
 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/grid/HeaderGridFragment.java
Patch:
@@ -128,7 +128,7 @@ private final class ItemViewSelectedListener implements OnItemViewSelectedListen
         public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
                                    RowPresenter.ViewHolder rowViewHolder, Row row) {
             if (item instanceof Video) {
-                mBackgroundManager.updateBackground((Video) item);
+                mBackgroundManager.setBackgroundFrom((Video) item);
 
                 checkScrollEnd((Video) item);
             }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/row/HeaderRowFragment.java
Patch:
@@ -147,7 +147,7 @@ private final class ItemViewSelectedListener implements OnItemViewSelectedListen
         public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
                                    RowPresenter.ViewHolder rowViewHolder, Row row) {
             if (item instanceof Video) {
-                mBackgroundManager.updateBackground((Video) item);
+                mBackgroundManager.setBackgroundFrom((Video) item);
 
                 checkScrollEnd((Video)item);
             }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/playback/PlaybackFragment.java
Patch:
@@ -6,6 +6,7 @@
 import android.os.Bundle;
 import android.view.KeyEvent;
 import androidx.annotation.Nullable;
+import androidx.core.content.ContextCompat;
 import androidx.leanback.app.RowsSupportFragment;
 import androidx.leanback.app.VideoSupportFragment;
 import androidx.leanback.app.VideoSupportFragmentGlueHost;
@@ -81,6 +82,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         mBackgroundManager = ((LeanbackActivity) getActivity()).getBackgroundManager();
+        mBackgroundManager.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.player_background));
     }
 
     @Override

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.PackageManager;
-import android.graphics.Color;
 import android.os.Bundle;
 import android.os.Handler;
 import android.text.TextUtils;
@@ -233,7 +232,7 @@ private final class ItemViewSelectedListener implements OnItemViewSelectedListen
         public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,
                                    RowPresenter.ViewHolder rowViewHolder, Row row) {
             if (item instanceof Video) {
-                mBackgroundManager.updateBackground((Video) item);
+                mBackgroundManager.setBackgroundFrom((Video) item);
 
                 checkScrollEnd((Video) item);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -299,7 +299,7 @@ private void loadGridHeaderAuth(Header header, Observable<MediaGroup> group) {
     @Override
     public void onViewResumed() {
         long timeAfterPauseMs = System.currentTimeMillis() - mLastUpdateTimeMs;
-        if (timeAfterPauseMs > 10*1_000) { // update header every n minutes
+        if (timeAfterPauseMs > 5*60*1_000) { // update header every n minutes
             if (mCurrentHeaderId != -1) {
                 updateHeader(mCurrentHeaderId);
             }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventBridge.java
Patch:
@@ -3,6 +3,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 
 public interface PlayerEventBridge extends PlayerEventListener {
-    void setVideo(Video item);
+    void openVideo(Video item);
     void setController(PlayerController controller);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListenerHelper.java
Patch:
@@ -15,7 +15,7 @@ public void setController(PlayerController controller) {
     }
 
     @Override
-    public void setVideo(Video item) {
+    public void openVideo(Video item) {
         // NOP
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -45,12 +45,12 @@ public void unregister(PlaybackView view) {
     }
 
     public void openVideo(Video item) {
-        mMainPlayerEventBridge.setVideo(item);
+        mMainPlayerEventBridge.openVideo(item);
         mViewManager.startView(PlaybackView.class);
     }
 
     public void openVideo(Object parentView, Video item) {
-        mMainPlayerEventBridge.setVideo(item);
+        mMainPlayerEventBridge.openVideo(item);
         mViewManager.startView(parentView, PlaybackView.class);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -24,7 +24,7 @@ public MainPlayerEventBridge() {
         mEventListeners.add(new PlayerUiManager());
         mEventListeners.add(stateUpdater);
         mEventListeners.add(new HistoryUpdater());
-        mEventListeners.add(new SuggestionsLoader(stateUpdater));
+        mEventListeners.add(new SuggestionsLoader());
         mEventListeners.add(new VideoLoader());
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/HistoryUpdater.java
Patch:
@@ -1,24 +1,24 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners;
 
-import android.annotation.SuppressLint;
 import com.liskovsoft.mediaserviceinterfaces.MediaItemManager;
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
+import io.reactivex.disposables.Disposable;
 import io.reactivex.schedulers.Schedulers;
 
 public class HistoryUpdater extends PlayerEventListenerHelper {
     private static final String TAG = HistoryUpdater.class.getSimpleName();
+    private Disposable mHistoryAction;
 
     @Override
-    @SuppressLint("CheckResult")
     public void onVideoLoaded(Video item) {
         MediaService service = YouTubeMediaService.instance();
         MediaItemManager mediaItemManager = service.getMediaItemManager();
 
-        mediaItemManager.updateHistoryPositionObserve(item.mediaItem, mController.getPositionMs() / 1_000)
+        mHistoryAction = mediaItemManager.updateHistoryPositionObserve(item.mediaItem, mController.getPositionMs() / 1_000)
                 .subscribeOn(Schedulers.newThread())
                 .subscribe((Void v) -> {}, error -> Log.e(TAG, "History update error: " + error));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/SearchView.java
Patch:
@@ -5,4 +5,5 @@
 public interface SearchView {
     void updateSearch(VideoGroup group);
     void clearSearch();
+    void showProgressBar(boolean show);
 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -128,6 +128,7 @@ private void setupEventListeners() {
         setOnItemViewClickedListener(new ItemViewClickedListener());
         setOnItemViewSelectedListener(new ItemViewSelectedListener());
 
+        // Listener moved to PageRowFragmentFactory
         //getHeadersSupportFragment().setOnHeaderViewSelectedListener(new HeaderViewSelectedListener());
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/BrowsePresenter.java
Patch:
@@ -161,7 +161,7 @@ private void loadHeader(Header header) {
     private void initHeaders() {
         MediaGroupManager mediaGroupManager = mMediaService.getMediaGroupManager();
 
-        mHeaders.add(new Header(MediaGroup.TYPE_HOME, mContext.getString(R.string.header_home)));
+        mHeaders.add(new Header(MediaGroup.TYPE_HOME, mContext.getString(R.string.header_home), Header.TYPE_ROW, R.drawable.header_home));
         mHeaders.add(new Header(MediaGroup.TYPE_GAMING, mContext.getString(R.string.header_gaming)));
         mHeaders.add(new Header(MediaGroup.TYPE_NEWS, mContext.getString(R.string.header_news)));
         mHeaders.add(new Header(MediaGroup.TYPE_MUSIC, mContext.getString(R.string.header_music)));

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 
+import android.view.KeyEvent;
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.ui.common.LeanbackActivity;
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/grid/HeaderGridFragment.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class GridHeaderFragment extends GridFragment {
-    private static final String TAG = GridHeaderFragment.class.getSimpleName();
+public class HeaderGridFragment extends GridFragment {
+    private static final String TAG = HeaderGridFragment.class.getSimpleName();
     private static final int COLUMNS = 5;
     private final int ZOOM_FACTOR = FocusHighlight.ZOOM_FACTOR_SMALL;
     private VideoGroupObjectAdapter mGridAdapter;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/row/RowHeaderFragment.java
Patch:
@@ -44,7 +44,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         setupEventListeners();
         setupAdapter();
         applyPendingUpdates();
-        getMainFragmentAdapter().getFragmentHost().notifyDataReady(getMainFragmentAdapter());
+        //getMainFragmentAdapter().getFragmentHost().notifyDataReady(getMainFragmentAdapter());
     }
 
     @Override

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/BrowseFragment.java
Patch:
@@ -94,7 +94,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     }
 
     private void setupUi() {
-        setBadgeDrawable(ContextCompat.getDrawable(getActivity(), R.drawable.app_banner));
+        setBadgeDrawable(ContextCompat.getDrawable(getActivity(), R.mipmap.app_logo));
         setTitle(getString(R.string.browse_title)); // Badge, when set, takes precedent over title
         setHeadersState(HEADERS_ENABLED);
         setHeadersTransitionOnBackEnabled(true);

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/onboarding/OnboardingFragment.java
Patch:
@@ -64,7 +64,7 @@ public class OnboardingFragment extends OnboardingSupportFragment implements Onb
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         // Set the logo to display a splash animation
-        setLogoResourceId(R.drawable.videos_by_google_banner);
+        setLogoResourceId(R.mipmap.app_logo);
         mPresenter = OnboardingPresenter.instance(getContext());
         mPresenter.register(this);
         return super.onCreateView(inflater, container, savedInstanceState);

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/adapter/VideoGroupObjectAdapter.java
Patch:
@@ -43,11 +43,12 @@ public void append(VideoGroup group) {
         if (group != null) {
             mMediaItems.addAll(group.getVideos());
             mLastGroup = group;
+            
             notifyChanged();
         }
     }
 
-    public VideoGroup getLastGroup() {
+    public VideoGroup getGroup() {
         return mLastGroup;
     }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/row/RowHeaderFragment.java
Patch:
@@ -1,7 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.tv.ui.browse.row;
 
 import android.content.Context;
-import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
 import android.widget.Toast;
@@ -146,7 +145,7 @@ private void checkScrollEnd(Video item) {
                 if (index != -1) {
                     int size = adapter.size();
                     if (index > (size - 4)) {
-                        mMainPresenter.onScrollEnd(adapter.getLastGroup());
+                        mMainPresenter.onScrollEnd(adapter.getGroup());
                     }
                     break;
                 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -235,7 +235,7 @@ private void checkScrollEnd(Video item) {
             int index = mAdapter.indexOf(item);
 
             if (index > (size - 4)) {
-                mSearchPresenter.onScrollEnd(mAdapter.getLastGroup());
+                mSearchPresenter.onScrollEnd(mAdapter.getGroup());
             }
         }
     }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.PackageManager;
+import android.graphics.Color;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
@@ -98,6 +99,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
         mBackgroundManager = ((LeanbackActivity) getActivity()).getBackgroundManager();
+        mBackgroundManager.setBackground(Color.BLACK);
 
         mSearchPresenter.onInitDone();
     }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/common/LeanbackActivity.java
Patch:
@@ -24,8 +24,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mLongClickManager = new LongClickManager();
         mBackgroundManager = new UriBackgroundManager(this);
-        MainApplication.setLastActivity(this.getClass());
         mViewManager = ViewManager.instance(this);
+        mViewManager.setDefault(this.getClass());
     }
 
     @Override
@@ -55,7 +55,7 @@ public UriBackgroundManager getBackgroundManager() {
     @Override
     public void finish() {
         super.finish();
-
+        
         mViewManager.startParentView(this);
     }
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerController.java
Patch:
@@ -17,7 +17,7 @@ public interface PlayerController {
     long getPositionMs();
     void setPositionMs(long positionMs);
     long getLengthMs();
-    void setPlay(boolean isPlaying);
+    void setPlay(boolean play);
     boolean isPlaying();
-    void showControls(boolean isShowing);
+    void showControls(boolean show);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/BrowseView.java
Patch:
@@ -6,4 +6,5 @@
 public interface BrowseView {
     void updateHeader(VideoGroup row);
     void clearHeader(Header header);
+    void showProgressBar(boolean show);
 }

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/browse/grid/GridHeaderFragment.java
Patch:
@@ -125,7 +125,7 @@ private void checkScrollEnd(Video item) {
             int size = mAdapter.size();
             int index = mAdapter.indexOf(item);
 
-            if (index > (size - 10)) {
+            if (index > (size - 15)) {
                 mMainPresenter.onScrollEnd(mAdapter.getLastGroup());
             }
         }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/StateUpdater.java
Patch:
@@ -64,7 +64,7 @@ private void saveState() {
     private void restoreState(Video item) {
         State state = mPositionMap.get(item.id);
 
-        boolean nearEnd = (mController.getLengthMs() - mController.getPositionMs()) < 10_000;
+        boolean nearEnd = Math.abs(mController.getLengthMs() - mController.getPositionMs()) < 10_000;
 
         if (state != null && !nearEnd) {
             mController.setPositionMs(state.positionMs);

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListener.java
Patch:
@@ -21,4 +21,5 @@ public interface PlayerEventListener extends ViewEventListener {
     void onVideoLoaded(Video item);
     void onEngineInitialized();
     void onEngineReleased();
+    void onPlayEnd();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/SearchPresenter.java
Patch:
@@ -78,17 +78,18 @@ public void onVideoItemLongClicked(Video item) {
     }
 
     public void onSearchText(String searchText) {
-         loadSearchData(searchText);
+         loadSearchResult(searchText);
     }
 
     @SuppressLint("CheckResult")
-    private void loadSearchData(String searchText) {
+    private void loadSearchResult(String searchText) {
         MediaGroupManager mediaGroupManager = mMediaService.getMediaGroupManager();
 
         mView.clearSearch();
 
         mediaGroupManager.getSearchObserve(searchText)
                 .subscribeOn(Schedulers.newThread())
+                .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(mediaGroup -> {
                     if (mediaGroup == null) {
                         Log.e(TAG, "Search result is empty");

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/VideoLoader.java
Patch:
@@ -5,7 +5,7 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaItem;
 import com.liskovsoft.sharedutils.mylogger.Log;
-import com.liskovsoft.smartyoutubetv2.common.app.models.data.PlaylistManager;
+import com.liskovsoft.smartyoutubetv2.common.app.models.data.Playlist;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
@@ -16,11 +16,11 @@
 
 public class VideoLoader extends PlayerEventListenerHelper {
     private static final String TAG = VideoLoader.class.getSimpleName();
-    private final PlaylistManager mPlaylistManager;
+    private final Playlist mPlaylistManager;
     private Video mLastVideo;
 
     public VideoLoader() {
-        mPlaylistManager = PlaylistManager.instance();
+        mPlaylistManager = Playlist.instance();
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/exoplayer/managers/ExoPlayerController.java
Patch:
@@ -23,6 +23,7 @@ public class ExoPlayerController implements EventListener {
     public ExoPlayerController(ExoPlayer player, TrackSelector trackSelector, Context context) {
         mPlayer = player;
         player.addListener(this);
+
         mTrackSelector = trackSelector;
         mMediaSourceFactory = ExoMediaSourceFactory.instance(context);
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/MainPlayerEventBridge.java
Patch:
@@ -4,7 +4,7 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.HistoryUpdater;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.PlaylistUpdater;
-import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.PositionRestorer;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.StateRestorer;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.SuggestionsLoader;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners.VideoLoader;
 
@@ -19,7 +19,7 @@ public MainPlayerEventBridge() {
         mEventListeners = new ArrayList<>();
 
         // NOTE: position matters!!!
-        mEventListeners.add(new PositionRestorer());
+        mEventListeners.add(new StateRestorer());
         mEventListeners.add(new HistoryUpdater());
         mEventListeners.add(new SuggestionsLoader());
         mEventListeners.add(new VideoLoader());

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerController.java
Patch:
@@ -16,4 +16,6 @@ public interface PlayerController {
     long getPositionMs();
     void setPositionMs(long positionMs);
     Video getVideo();
+    void setPlay(boolean isPlaying);
+    boolean isPlaying();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/VideoLoader.java
Patch:
@@ -71,10 +71,10 @@ private void loadFormatInfo(Video video) {
                     InputStream dashStream = formatInfo.getMpdStream();
                     String hlsManifestUrl = formatInfo.getHlsManifestUrl();
 
-                    if (dashStream != null) {
-                        mController.openDash(dashStream);
-                    } else {
+                    if (hlsManifestUrl != null) {
                         mController.openHls(hlsManifestUrl);
+                    } else {
+                        mController.openDash(dashStream);
                     }
                 }, error -> Log.e(TAG, "loadFormatInfo: " + error));
     }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/presenters/PlaybackPresenter.java
Patch:
@@ -31,7 +31,7 @@ public static PlaybackPresenter instance(Context context) {
     @Override
     public void onInitDone() {
         mMainPlayerEventBridge.setController(mView.getController());
-        mView.setListener(mMainPlayerEventBridge);
+        mView.setEventListener(mMainPlayerEventBridge);
     }
 
     @Override

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/views/PlaybackView.java
Patch:
@@ -4,6 +4,6 @@
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListener;
 
 public interface PlaybackView {
-    void setListener(PlayerEventListener stateBridge);
+    void setEventListener(PlayerEventListener stateBridge);
     PlayerController getController();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/ViewEventListener.java
Patch:
@@ -1,4 +1,4 @@
-package com.liskovsoft.smartyoutubetv2.common.app.models.playback;
+package com.liskovsoft.smartyoutubetv2.common.app.models;
 
 public interface ViewEventListener {
     void onViewCreated();

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerController.java
Patch:
@@ -9,10 +9,10 @@
 // title, subtitle (description), subscribed/liked nums, published date, toggle buttons, simple buttons
 public interface PlayerController {
     void updateRelated(VideoGroup group);
-    void clearRelated();
+    void resetSuggestions();
+    void initTitle(Video item);
     void openDash(InputStream dashManifest);
     void openHls(String hlsPlaylistUrl);
-    void initTitle(Video item);
     long getPositionMs();
-    void setPosition(long positionMs);
+    void setPositionMs(long positionMs);
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/PlayerEventListener.java
Patch:
@@ -1,5 +1,6 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback;
 
+import com.liskovsoft.smartyoutubetv2.common.app.models.ViewEventListener;
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
 
 // is paused, position, tracks (audio, video, subs), codecs, aspect, speed
@@ -10,4 +11,5 @@ public interface PlayerEventListener extends ViewEventListener {
     void onSuggestionItemLongClicked(Video item);
     void onPrevious();
     void onNext();
+    void onVideoLoaded();
 }

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/HistoryUpdater.java
Patch:
@@ -1,6 +1,7 @@
 package com.liskovsoft.smartyoutubetv2.common.app.models.playback.listeners;
 
 import com.liskovsoft.smartyoutubetv2.common.app.models.data.Video;
+import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerController;
 import com.liskovsoft.smartyoutubetv2.common.app.models.playback.PlayerEventListenerHelper;
 
 public class HistoryUpdater extends PlayerEventListenerHelper {

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/app/models/playback/listeners/VideoLoader.java
Patch:
@@ -17,10 +17,8 @@
 public class VideoLoader extends PlayerEventListenerHelper {
     private static final String TAG = VideoLoader.class.getSimpleName();
     private final Playlist mPlaylist;
-    private final PlayerController mController;
 
-    public VideoLoader(PlayerController controller) {
-        mController = controller;
+    public VideoLoader() {
         mPlaylist = Playlist.instance();
     }
 

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/mvp/presenters/MainPresenter.java
Patch:
@@ -7,6 +7,7 @@
 import com.liskovsoft.mediaserviceinterfaces.MediaService;
 import com.liskovsoft.mediaserviceinterfaces.SignInManager;
 import com.liskovsoft.mediaserviceinterfaces.data.MediaGroup;
+import com.liskovsoft.sharedutils.helpers.Helpers;
 import com.liskovsoft.sharedutils.mylogger.Log;
 import com.liskovsoft.sharedutils.prefs.GlobalPreferences;
 import com.liskovsoft.smartyoutubetv2.common.R;
@@ -15,6 +16,7 @@
 import com.liskovsoft.smartyoutubetv2.common.mvp.models.data.Video;
 import com.liskovsoft.smartyoutubetv2.common.mvp.models.data.VideoGroup;
 import com.liskovsoft.smartyoutubetv2.common.mvp.views.MainView;
+import com.liskovsoft.smartyoutubetv2.common.mvp.views.PlaybackView;
 import com.liskovsoft.youtubeapi.service.YouTubeMediaService;
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.schedulers.Schedulers;

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -12,7 +12,6 @@
 import android.text.TextUtils;
 import android.widget.Toast;
 import androidx.annotation.Nullable;
-import androidx.leanback.app.SearchSupportFragment;
 import androidx.leanback.widget.ArrayObjectAdapter;
 import androidx.leanback.widget.HeaderItem;
 import androidx.leanback.widget.ListRow;
@@ -104,6 +103,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
     @Override
     public void onPause() {
         mHandler.removeCallbacksAndMessages(null);
+
+        // fix Service not registered: android.speech.SpeechRecognizer$Connection
         super.onPause();
     }
 

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/main/MainFragment.java
Patch:
@@ -28,6 +28,7 @@
 import com.liskovsoft.smartyoutubetv2.tv.R;
 import com.liskovsoft.smartyoutubetv2.tv.presenter.GridItemPresenter;
 import com.liskovsoft.smartyoutubetv2.tv.presenter.IconHeaderItemPresenter;
+import com.liskovsoft.smartyoutubetv2.tv.ui.base.LeanbackActivity;
 import com.liskovsoft.smartyoutubetv2.tv.ui.base.UriBackgroundManager;
 import com.liskovsoft.smartyoutubetv2.tv.ui.main.grid.GridHeaderItem;
 import com.liskovsoft.smartyoutubetv2.tv.ui.main.row.RowHeaderItem;
@@ -68,7 +69,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         // Final initialization, modifying UI elements.
         super.onActivityCreated(savedInstanceState);
 
-        mBackgroundManager = UriBackgroundManager.instance(getActivity());
+        mBackgroundManager = ((LeanbackActivity) getActivity()).getBackgroundManager();
 
         // Map category results from the database to ListRow objects.
         // This Adapter is used to render the MainFragment sidebar labels.

File: common/src/main/java/com/liskovsoft/smartyoutubetv2/common/mvp/ViewManager.java
Patch:
@@ -4,18 +4,19 @@
 import android.content.Context;
 import android.content.Intent;
 import com.liskovsoft.sharedutils.mylogger.Log;
-import com.liskovsoft.smartyoutubetv2.common.mvp.views.PlaybackView;
 
+import java.util.HashMap;
 import java.util.Map;
 
 public class ViewManager {
     private static final String TAG = ViewManager.class.getSimpleName();
     private static ViewManager sInstance;
     private final Context mContext;
-    private Map<Class<?>, Class<? extends Activity>> mViewMapping;
+    private final Map<Class<?>, Class<? extends Activity>> mViewMapping;
 
     private ViewManager(Context context) {
         mContext = context;
+        mViewMapping = new HashMap<>();
     }
 
     public static ViewManager instance(Context context) {

File: smartyoutubetv2/src/main/java/com/liskovsoft/smartyoutubetv2/tv/ui/search/SearchFragment.java
Patch:
@@ -119,7 +119,7 @@ public ObjectAdapter getResultsAdapter() {
     @Override
     public boolean onQueryTextChange(String newQuery) {
         Log.i(TAG, String.format("Search text changed: %s", newQuery));
-        loadQuery(newQuery);
+        //loadQuery(newQuery);
         return true;
     }
 
@@ -144,7 +144,6 @@ private void loadQuery(String query) {
         if (!TextUtils.isEmpty(query) && !query.equals("nil")) {
             mQuery = query;
             mSearchPresenter.onSearchText(query);
-            //getLoaderManager().initLoader(mSearchLoaderId++, null, this);
         }
     }
 

