File: nohttp/src/main/java/com/yanzhenjie/nohttp/cache/CacheEntity.java
Patch:
@@ -182,7 +182,7 @@ public void setLocalExpire(long localExpire) {
      * @return the localExpire.
      */
     public String getLocalExpireString() {
-        return Long.toOctalString(localExpire);
+        return Long.toString(localExpire);
     }
 
     /**

File: nohttp/src/main/java/com/yanzhenjie/nohttp/InitializationConfig.java
Patch:
@@ -212,15 +212,15 @@ public Builder hostnameVerifier(HostnameVerifier hostnameVerifier) {
         }
 
         /**
-         * Add the global request header.
+         * Add the global handle header.
          */
         public Builder addHeader(String key, String value) {
             mHeaders.add(key, value);
             return this;
         }
 
         /**
-         * Add the global request param.
+         * Add the global handle param.
          */
         public Builder addParam(String key, String value) {
             mParams.add(key, value);

File: nohttp/src/main/java/com/yanzhenjie/nohttp/RedirectHandler.java
Patch:
@@ -25,7 +25,7 @@ public interface RedirectHandler {
     /**
      * When the server's response code is 302 or 303 corresponding need to redirect is invoked.
      *
-     * @param oldRequest      the old request.
+     * @param oldRequest      the old handle.
      * @param responseHeaders the service side head accordingly.
      */
     BasicRequest<?> onRedirect(BasicRequest<?> oldRequest, Headers responseHeaders);

File: nohttp/src/main/java/com/yanzhenjie/nohttp/RequestMethod.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * <p>
- * HTTP request method.
+ * HTTP handle method.
  * </p>
  * Created in Oct 10, 2015 8:00:48 PM.
  *

File: nohttp/src/main/java/com/yanzhenjie/nohttp/URLConnectionNetworkExecutor.java
Patch:
@@ -70,7 +70,7 @@ public Network execute(BasicRequest request) throws Exception {
         boolean isAllowBody = isAllowBody(request.getRequestMethod());
         connection.setDoOutput(isAllowBody);
 
-        // Adds all request header to connection.
+        // Adds all handle header to connection.
         Headers headers = request.getHeaders();
 
         // To fix bug: accidental EOFException before API 19.

File: nohttp/src/main/java/com/yanzhenjie/nohttp/download/DownloadListener.java
Patch:
@@ -85,7 +85,7 @@ public interface DownloadListener {
     void onFinish(int what, String filePath);
 
     /**
-     * Download request is canceled.
+     * Download handle is canceled.
      *
      * @param what which is used to mark the download tasks.
      */

File: nohttp/src/main/java/com/yanzhenjie/nohttp/rest/ByteArrayRequest.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Created by Yan Zhenjie on 2016/8/20.
  */
-public class ByteArrayRequest extends RestRequest<byte[]> {
+public class ByteArrayRequest extends Request<byte[]> {
 
     public ByteArrayRequest(String url) {
         this(url, RequestMethod.GET);
@@ -35,4 +35,4 @@ public ByteArrayRequest(String url, RequestMethod requestMethod) {
     public byte[] parseResponse(Headers responseHeaders, byte[] responseBody) throws Exception {
         return responseBody == null ? new byte[0] : responseBody;
     }
-}
+}
\ No newline at end of file

File: nohttp/src/main/java/com/yanzhenjie/nohttp/rest/ImageRequest.java
Patch:
@@ -26,12 +26,12 @@
 import java.util.Locale;
 
 /**
- * <p>Image request parameter.</p>
+ * <p>Image handle parameter.</p>
  * Created in Oct 17, 2015 12:17:57 PM.
  *
  * @author Yan Zhenjie.
  */
-public class ImageRequest extends RestRequest<Bitmap> {
+public class ImageRequest extends Request<Bitmap> {
 
     private final int mMaxWidth;
     private final int mMaxHeight;

File: nohttp/src/main/java/com/yanzhenjie/nohttp/rest/JsonArrayRequest.java
Patch:
@@ -21,12 +21,12 @@
 import org.json.JSONArray;
 
 /**
- * <p>JsonArray is returned by the server data, using the request object.</p>
+ * <p>JsonArray is returned by the server data, using the handle object.</p>
  * Created in Jan 19, 2016 3:32:28 PM.
  *
  * @author Yan Zhenjie.
  */
-public class JsonArrayRequest extends RestRequest<JSONArray> {
+public class JsonArrayRequest extends Request<JSONArray> {
 
     public JsonArrayRequest(String url) {
         this(url, RequestMethod.GET);

File: nohttp/src/main/java/com/yanzhenjie/nohttp/rest/JsonObjectRequest.java
Patch:
@@ -21,12 +21,12 @@
 import org.json.JSONObject;
 
 /**
- * <p>JsonObject is returned by the server data, using the request object.</p>
+ * <p>JsonObject is returned by the server data, using the handle object.</p>
  * Created in Jan 19, 2016 3:27:35 PM.
  *
  * @author Yan Zhenjie.
  */
-public class JsonObjectRequest extends RestRequest<JSONObject> {
+public class JsonObjectRequest extends Request<JSONObject> {
 
     public JsonObjectRequest(String url) {
         this(url, RequestMethod.GET);

File: nohttp/src/main/java/com/yanzhenjie/nohttp/rest/StringRequest.java
Patch:
@@ -16,16 +16,16 @@
 package com.yanzhenjie.nohttp.rest;
 
 import com.yanzhenjie.nohttp.Headers;
+import com.yanzhenjie.nohttp.RequestMethod;
 import com.yanzhenjie.nohttp.tools.HeaderUtils;
 import com.yanzhenjie.nohttp.tools.IOUtils;
-import com.yanzhenjie.nohttp.RequestMethod;
 
 /**
  * Created in Jul 28, 2015 7:33:52 PM.
  *
  * @author Yan Zhenjie.
  */
-public class StringRequest extends RestRequest<String> {
+public class StringRequest extends Request<String> {
 
     public StringRequest(String url) {
         this(url, RequestMethod.GET);

File: nohttp/src/main/java/com/yanzhenjie/nohttp/tools/LruCache.java
Patch:
@@ -242,7 +242,7 @@ protected void entryRemoved(boolean evicted, K key, V oldValue, V newValue) {
      * access the cache while this method is executing.</p>
      * <p>If a value for {@code key} exists in the cache when this method
      * returns, the created value will be released with {@link #entryRemoved}
-     * and discarded. This can occur when multiple threads request the same key
+     * and discarded. This can occur when multiple threads handle the same key
      * at the same time (causing multiple values to be created), or when one
      * thread calls {@link #put} while another is creating a value for the same
      * key.</p>

File: nohttp/src/main/java/com/yanzhenjie/nohttp/download/Downloader.java
Patch:
@@ -20,20 +20,20 @@
 
 import com.yanzhenjie.nohttp.Connection;
 import com.yanzhenjie.nohttp.Headers;
+import com.yanzhenjie.nohttp.HttpConnection;
 import com.yanzhenjie.nohttp.Logger;
 import com.yanzhenjie.nohttp.NetworkExecutor;
 import com.yanzhenjie.nohttp.NoHttp;
 import com.yanzhenjie.nohttp.error.NetworkError;
 import com.yanzhenjie.nohttp.error.ServerError;
 import com.yanzhenjie.nohttp.error.StorageReadWriteError;
 import com.yanzhenjie.nohttp.error.StorageSpaceNotEnoughError;
+import com.yanzhenjie.nohttp.error.TimeoutError;
 import com.yanzhenjie.nohttp.error.URLError;
 import com.yanzhenjie.nohttp.error.UnKnownHostError;
 import com.yanzhenjie.nohttp.tools.HeaderUtil;
 import com.yanzhenjie.nohttp.tools.IOUtils;
 import com.yanzhenjie.nohttp.tools.NetUtil;
-import com.yanzhenjie.nohttp.HttpConnection;
-import com.yanzhenjie.nohttp.error.TimeoutError;
 
 import java.io.File;
 import java.io.IOException;
@@ -246,6 +246,7 @@ public void download(int what, DownloadRequest downloadRequest, DownloadListener
                         speedCount += len;
 
                         long time = System.currentTimeMillis() - startTime;
+                        time = Math.max(time, 1);
 
                         long speed = speedCount * 1000 / time;
 

File: sample/src/main/java/com/yanzhenjie/nohttp/sample/activity/MainActivity.java
Patch:
@@ -86,7 +86,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_main);
         ButterKnife.bind(this);
 
-        mIvHeadBackground.getLayoutParams().height = DisplayUtils.screenWidth * 10 / 9;
+        mIvHeadBackground.getLayoutParams().height = DisplayUtils.screenWidth * 12 / 13;
         mIvHeadBackground.requestLayout();
 
         // 让toolbar下来。

File: nohttp/src/main/java/com/yolanda/nohttp/NoHttp.java
Patch:
@@ -127,7 +127,7 @@ public static void init(Application application) {
      * @return {@link String}.
      */
     public static String versionName() {
-        return "1.0.1";
+        return "1.0.2";
     }
 
     /**
@@ -136,7 +136,7 @@ public static String versionName() {
      * @return {@link Integer}.
      */
     public static int versionCode() {
-        return 101;
+        return 102;
     }
 
     /**

File: sample/src/main/java/com/yanzhenjie/nohttp/sample/activity/download/DownloadSignleFileActivity.java
Patch:
@@ -214,7 +214,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
     protected boolean onOptionsItemSelectedCompat(MenuItem item) {
         if (item.getItemId() == R.id.menu_download_file_delete) {
             File file = new File(AppConfig.getInstance().APP_PATH_ROOT, "nohttp.apk");
-            file.deleteOnExit();
+            if(file.exists())
+                file.delete();
             Toast.show(this, R.string.delete_succeed);
         }
         return true;

File: sample/src/main/java/com/yanzhenjie/nohttp/sample/activity/upload/UploadAlbumActivity.java
Patch:
@@ -195,7 +195,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     }
 
     public void getRealPathFromURI(Uri contentUri) {
-        String[] filePathColumns = {MediaStore.MediaColumns.DATA, MediaStore.Images.ImageColumns.ORIENTATION};
+        String[] filePathColumns = {MediaStore.MediaColumns.DATA};
         ContentResolver contentResolver = getContentResolver();
         Cursor c = contentResolver.query(contentUri, filePathColumns, null, null, null);
         if (c != null) {

File: HttpServer/src/com/perfoct/nohttp/server/JsonArrayServlet.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © YOLANDA. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.zhimore.mama.server;
+package com.perfoct.nohttp.server;
 
 import java.io.IOException;
 import java.io.PrintWriter;

File: nohttp/src/main/java/com/yolanda/nohttp/Logger.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © YOLANDA. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -20,7 +20,7 @@
 /**
  * Created in Jul 28, 2015 7:32:05 PM.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class Logger {
 

File: nohttp/src/main/java/com/yolanda/nohttp/db/Field.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © YOLANDA. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -19,7 +19,7 @@
  * <p>General field class.</p>
  * Created in Jan 11, 2016 12:46:38 PM.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public interface Field {
 

File: nohttp/src/main/java/com/yolanda/nohttp/download/Downloader.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © YOLANDA. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -19,7 +19,7 @@
  * <p>Download Network Interface.</p>
  * Created in Oct 20, 2015 4:13:04 PM.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public interface Downloader {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/ArgumentError.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,7 +18,7 @@
 /**
  * Created in 2016/2/26 19:03.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class ArgumentError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/NetworkError.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -19,7 +19,7 @@
  * <p>Network error when requested.</p>
  * Created in 2016/2/25 9:48.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class NetworkError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/NotFoundCacheError.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,7 +18,7 @@
 /**
  * Created in 2016/3/3 13:34.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class NotFoundCacheError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/StorageReadWriteError.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -18,7 +18,7 @@
 /**
  * Created in 2016/2/26 19:14.
  *
- * @author YOLANDA.;
+ * @author Yan Zhenjie..;
  */
 public class StorageReadWriteError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/StorageSpaceNotEnoughError.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -19,7 +19,7 @@
  * <p>Specify the location of the file space is not enough.</p>
  * Created in 2016/2/25 11:50.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class StorageSpaceNotEnoughError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/TimeoutError.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -19,7 +19,7 @@
  * <p>Request connection timeout.</p>
  * Created in 2016/2/25 10:17.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class TimeoutError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/URLError.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,7 +19,7 @@
  * <p>The URL specified is incorrect.</p>
  * Created in 2016/2/25 9:49.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class URLError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/error/UnKnownHostError.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © ${user}. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,7 +19,7 @@
  * <p>The target host not found.</p>
  * Created in 2016/2/25 10:49.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public class UnKnownHostError extends Exception {
 

File: nohttp/src/main/java/com/yolanda/nohttp/tools/HttpDateTime.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright © YOLANDA. All Rights Reserved
+ * Copyright 2015 Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- * http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -25,7 +25,7 @@
  * <p>Helper for parsing an HTTP date.</p>
  * Created in Jan 5, 2016 2:09:49 PM.
  *
- * @author YOLANDA;
+ * @author Yan Zhenjie.
  */
 public final class HttpDateTime {
 

