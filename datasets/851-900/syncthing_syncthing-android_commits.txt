File: app/src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -21,7 +21,6 @@
 import androidx.viewpager.widget.PagerAdapter;
 import androidx.viewpager.widget.ViewPager;
 
-import android.preference.PreferenceManager;
 import android.provider.Settings;
 import android.text.Html;
 import android.util.Log;
@@ -240,7 +239,7 @@ private boolean shouldSkipSlide(Slide slide) {
             case API_LEVEL_30:
                 // Skip if running as root, as that circumvents any Android FS restrictions.
                 return upgradedToApiLevel30()
-                        || PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_USE_ROOT, false);
+                        || mPreferences.getBoolean(Constants.PREF_USE_ROOT, false);
             case NOTIFICATION:
                 return isNotificationPermissionGranted();
 

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -12,7 +12,6 @@
 import android.preference.Preference;
 import android.preference.PreferenceGroup;
 import android.preference.PreferenceFragment;
-import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -268,7 +267,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
             mHttpProxyAddress.setOnPreferenceChangeListener(this);
 
             /* Initialize summaries */
-            mPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
             screen.findPreference(Constants.PREF_POWER_SOURCE).setSummary(mPowerSource.getEntry());
             String wifiSsidSummary = TextUtils.join(", ", mPreferences.getStringSet(Constants.PREF_WIFI_SSID_WHITELIST, new HashSet<>()));
             screen.findPreference(Constants.PREF_WIFI_SSID_WHITELIST).setSummary(TextUtils.isEmpty(wifiSsidSummary) ?

File: app/src/main/java/com/nutomic/syncthingandroid/service/NotificationHandler.java
Patch:
@@ -73,9 +73,9 @@ public NotificationHandler(Context context) {
             mInfoChannel = new NotificationChannel(
                     CHANNEL_INFO, mContext.getString(R.string.notifications_other_channel),
                     NotificationManager.IMPORTANCE_LOW);
-            mPersistentChannel.enableVibration(false);
-            mPersistentChannel.setSound(null, null);
-            mPersistentChannel.setShowBadge(true);
+            mInfoChannel.enableVibration(false);
+            mInfoChannel.setSound(null, null);
+            mInfoChannel.setShowBadge(true);
             mNotificationManager.createNotificationChannel(mInfoChannel);
         } else {
             mPersistentChannel = null;

File: app/src/main/java/com/nutomic/syncthingandroid/util/Util.java
Patch:
@@ -218,7 +218,7 @@ public static void dismissDialogSafe(Dialog dialog, Activity activity) {
         if (activity.isFinishing())
             return;
 
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN && activity.isDestroyed())
+        if (activity.isDestroyed())
             return;
 
         dialog.dismiss();

File: app/src/main/java/com/nutomic/syncthingandroid/model/Options.java
Patch:
@@ -22,7 +22,6 @@ public class Options {
     public String urURL;
     public boolean urPostInsecurely;
     public int urInitialDelayS;
-    public boolean restartOnWakeup;
     public int autoUpgradeIntervalH;
     public int keepTemporariesH;
     public boolean cacheIgnoredFiles;

File: app/src/main/java/com/nutomic/syncthingandroid/model/Event.java
Patch:
@@ -8,6 +8,6 @@ public class Event {
     public int globalID;
     public String type;
     public String time;
-    public Map<String, Object> data;
+    public Object data;
 
 }

File: app/src/main/java/com/nutomic/syncthingandroid/SyncthingApp.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Application;
 import android.os.StrictMode;
 
+import com.google.android.material.color.DynamicColors;
 import com.nutomic.syncthingandroid.util.Languages;
 
 import javax.inject.Inject;
@@ -13,6 +14,8 @@ public class SyncthingApp extends Application {
 
     @Override
     public void onCreate() {
+        DynamicColors.applyToActivitiesIfAvailable(this);
+
         super.onCreate();
 
         DaggerDaggerComponent.builder()

File: app/src/main/java/com/nutomic/syncthingandroid/activities/QRScannerActivity.java
Patch:
@@ -60,8 +60,9 @@ protected void onStop() {
     // region === Permissions Callback ===
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == RC_HANDLE_CAMERA_PERM) {
-            if (grantResults.length !=0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            if (grantResults.length != 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                 startScanner();
             } else {
                 finish();

File: app/src/main/java/com/nutomic/syncthingandroid/util/Util.java
Patch:
@@ -13,6 +13,7 @@
 import android.util.Log;
 import android.widget.Toast;
 
+import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.service.Constants;
 
@@ -238,6 +239,6 @@ public static String formatPath(String path) {
      */
     public static AlertDialog.Builder getAlertDialogBuilder(Context context)
     {
-        return new AlertDialog.Builder(context, R.style.Theme_Syncthing_Dialog);
+        return new MaterialAlertDialogBuilder(context);
     }
 }

File: app/src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -254,7 +254,7 @@ private String getDisplayNameFromContentResolver(Uri uri) {
             );
             if (cursor != null) {
                 cursor.moveToFirst();
-                displayName = cursor.getString(cursor.getColumnIndex(displayNameColumn));
+                displayName = cursor.getString(cursor.getColumnIndexOrThrow(displayNameColumn));
             }
             if (cursor != null) {
                 cursor.close();

File: app/src/main/java/com/nutomic/syncthingandroid/service/RunConditionMonitor.java
Patch:
@@ -169,7 +169,7 @@ public void updateShouldRunDecision() {
      */
     private RunConditionCheckResult decideShouldRun() {
         // Get run conditions preferences.
-        boolean prefRunConditions= mPreferences.getBoolean(Constants.PREF_RUN_CONDITIONS, false);
+        boolean prefRunConditions= mPreferences.getBoolean(Constants.PREF_RUN_CONDITIONS, true);
         boolean prefRunOnMobileData= mPreferences.getBoolean(Constants.PREF_RUN_ON_MOBILE_DATA, false);
         boolean prefRunOnWifi= mPreferences.getBoolean(Constants.PREF_RUN_ON_WIFI, true);
         boolean prefRunOnMeteredWifi= mPreferences.getBoolean(Constants.PREF_RUN_ON_METERED_WIFI, false);

File: app/src/main/java/com/nutomic/syncthingandroid/service/RunConditionMonitor.java
Patch:
@@ -169,7 +169,7 @@ public void updateShouldRunDecision() {
      */
     private RunConditionCheckResult decideShouldRun() {
         // Get run conditions preferences.
-        boolean prefRunConditions= mPreferences.getBoolean(Constants.PREF_RUN_CONDITIONS, false);
+        boolean prefRunConditions= mPreferences.getBoolean(Constants.PREF_RUN_CONDITIONS, true);
         boolean prefRunOnMobileData= mPreferences.getBoolean(Constants.PREF_RUN_ON_MOBILE_DATA, false);
         boolean prefRunOnWifi= mPreferences.getBoolean(Constants.PREF_RUN_ON_WIFI, true);
         boolean prefRunOnMeteredWifi= mPreferences.getBoolean(Constants.PREF_RUN_ON_METERED_WIFI, false);

File: app/src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -119,11 +119,11 @@ protected void onCreate(Bundle savedInstanceState) {
 
         // TODO: add support for EXTRA_TEXT (notes, memos sharing)
         ArrayList<Uri> extrasToCopy = new ArrayList<>();
-        if (getIntent().getAction().equals(Intent.ACTION_SEND)) {
+        if (Intent.ACTION_SEND.equals(getIntent().getAction())) {
             Uri uri = getIntent().getParcelableExtra(Intent.EXTRA_STREAM);
             if (uri != null)
                 extrasToCopy.add(uri);
-        } else if (getIntent().getAction().equals(Intent.ACTION_SEND_MULTIPLE)) {
+        } else if (Intent.ACTION_SEND_MULTIPLE.equals(getIntent().getAction())) {
             ArrayList<Uri> extras = getIntent().getParcelableArrayListExtra(Intent.EXTRA_STREAM);
             if (extras != null)
                 extrasToCopy = extras;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -217,7 +217,7 @@ private void upgradeToApiLevel30() {
                 FileUtils.deleteQuietly(dbDir);
             } catch (Throwable e) {
                 Log.w(TAG, "Deleting database with FileUtils failed", e);
-                Util.runShellCommand("rm -r" + dbDir.getAbsolutePath(), false);
+                Util.runShellCommand("rm -r " + dbDir.getAbsolutePath(), false);
                 if (dbDir.exists()) {
                     throw new RuntimeException("Failed to delete existing database");
                 }

File: app/src/main/java/com/nutomic/syncthingandroid/activities/DeviceActivity.java
Patch:
@@ -395,6 +395,8 @@ private Dialog createDeleteDialog(){
      */
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent intent) {
+        super.onActivityResult(requestCode, resultCode, intent);
+
         if (requestCode == QR_SCAN_REQUEST_CODE) {
             if (resultCode == Activity.RESULT_OK) {
                 String scanResult = intent.getStringExtra(QRScannerActivity.QR_RESULT_ARG);

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -514,6 +514,8 @@ private Dialog createDeleteDialog(){
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
         if (resultCode == Activity.RESULT_OK && requestCode == CHOOSE_FOLDER_REQUEST) {
             // This result case only occurs on API level >= Build.VERSION_CODES.LOLLIPOP (21)
             mFolderUri = data.getData();

File: app/src/main/java/com/nutomic/syncthingandroid/activities/QRScannerActivity.java
Patch:
@@ -34,7 +34,6 @@ static Intent intent(Context context) {
     private final int RC_HANDLE_CAMERA_PERM = 888;
 
     private DecoratedBarcodeView barcodeView;
-    private TextView cancleButton;
 
     // region === Activity Lifecycle ===
     @Override

File: app/src/main/java/com/nutomic/syncthingandroid/activities/ThemedAppCompatActivity.java
Patch:
@@ -13,13 +13,14 @@
  */
 public class ThemedAppCompatActivity extends AppCompatActivity {
 
-    private static final String LIGHT_THEME = "1";
+    private static final String FOLLOW_SYSTEM = "-1";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         // Load theme.
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        Integer prefAppTheme = Integer.parseInt(prefs.getString(Constants.PREF_APP_THEME, LIGHT_THEME));
+        //For api level below 28, Follow system fall backs to light mode
+        Integer prefAppTheme = Integer.parseInt(prefs.getString(Constants.PREF_APP_THEME, FOLLOW_SYSTEM));
         AppCompatDelegate.setDefaultNightMode(prefAppTheme);
         super.onCreate(savedInstanceState);
     }

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -412,7 +412,7 @@ private HashMap<String, String> buildEnvironment() {
         File externalFilesDir = mContext.getExternalFilesDir(null);
         if (externalFilesDir != null)
             targetEnv.put("STGUIASSETS", externalFilesDir.getAbsolutePath() + "/gui");
-        targetEnv.put("STNORESTART", "1");
+        targetEnv.put("STMONITORED", "1");
         targetEnv.put("STNOUPGRADE", "1");
         // Disable hash benchmark for faster startup.
         // https://github.com/syncthing/syncthing/issues/4348

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -412,7 +412,7 @@ private HashMap<String, String> buildEnvironment() {
         File externalFilesDir = mContext.getExternalFilesDir(null);
         if (externalFilesDir != null)
             targetEnv.put("STGUIASSETS", externalFilesDir.getAbsolutePath() + "/gui");
-        targetEnv.put("STNORESTART", "1");
+        targetEnv.put("STMONITORED", "1");
         targetEnv.put("STNOUPGRADE", "1");
         // Disable hash benchmark for faster startup.
         // https://github.com/syncthing/syncthing/issues/4348

File: app/src/main/java/com/nutomic/syncthingandroid/activities/DeviceActivity.java
Patch:
@@ -6,9 +6,9 @@
 import android.content.Intent;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
-import android.support.v4.content.ContextCompat;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.widget.SwitchCompat;
+import androidx.core.content.ContextCompat;
+import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.widget.SwitchCompat;
 import android.text.Editable;
 import android.text.TextUtils;
 import android.text.TextWatcher;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -3,8 +3,8 @@
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.Bundle;
-import android.support.v4.view.MenuItemCompat;
-import android.support.v7.widget.ShareActionProvider;
+import androidx.core.view.MenuItemCompat;
+import androidx.appcompat.widget.ShareActionProvider;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -14,9 +14,9 @@
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.v4.app.TaskStackBuilder;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.core.app.TaskStackBuilder;
 import android.text.TextUtils;
 import android.util.Log;
 import android.widget.ListAdapter;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.content.ServiceConnection;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.support.v7.widget.Toolbar;
+import androidx.appcompat.widget.Toolbar;
 
 import com.annimon.stream.Stream;
 import com.nutomic.syncthingandroid.R;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/ThemedAppCompatActivity.java
Patch:
@@ -3,8 +3,8 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.app.AppCompatDelegate;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatDelegate;
 
 import com.nutomic.syncthingandroid.service.Constants;
 

File: app/src/main/java/com/nutomic/syncthingandroid/activities/VersioningDialogActivity.java
Patch:
@@ -3,8 +3,8 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentTransaction;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentTransaction;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.Button;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v4.app.ListFragment;
+import androidx.fragment.app.ListFragment;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -4,9 +4,9 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.Fragment;
-import android.support.v4.content.ContextCompat;
-import android.support.v7.app.AlertDialog;
+import androidx.fragment.app.Fragment;
+import androidx.core.content.ContextCompat;
+import androidx.appcompat.app.AlertDialog;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v4.app.ListFragment;
+import androidx.fragment.app.ListFragment;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/NumberPickerFragment.java
Patch:
@@ -1,8 +1,8 @@
 package com.nutomic.syncthingandroid.fragments;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/dialog/ExternalVersioningFragment.java
Patch:
@@ -1,8 +1,8 @@
 package com.nutomic.syncthingandroid.fragments.dialog;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.view.LayoutInflater;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/dialog/NoVersioningFragment.java
Patch:
@@ -1,8 +1,8 @@
 package com.nutomic.syncthingandroid.fragments.dialog;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/dialog/SimpleVersioningFragment.java
Patch:
@@ -1,8 +1,8 @@
 package com.nutomic.syncthingandroid.fragments.dialog;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/dialog/StaggeredVersioningFragment.java
Patch:
@@ -3,8 +3,8 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/dialog/TrashCanVersioningFragment.java
Patch:
@@ -1,8 +1,8 @@
 package com.nutomic.syncthingandroid.fragments.dialog;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/http/ApiRequest.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.net.Uri;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import android.util.Log;
 import android.widget.ImageView;
 

File: app/src/main/java/com/nutomic/syncthingandroid/http/GetRequest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 
 import com.android.volley.Request;
 import com.google.common.base.Optional;

File: app/src/main/java/com/nutomic/syncthingandroid/http/ImageGetRequest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 
 import com.google.common.base.Optional;
 

File: app/src/main/java/com/nutomic/syncthingandroid/http/PostRequest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.net.Uri;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 
 import com.android.volley.Request;
 import com.google.common.base.Optional;

File: app/src/main/java/com/nutomic/syncthingandroid/service/NotificationHandler.java
Patch:
@@ -8,8 +8,8 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
-import android.support.annotation.StringRes;
-import android.support.v4.app.NotificationCompat;
+import androidx.annotation.StringRes;
+import androidx.core.app.NotificationCompat;
 import android.util.Log;
 
 import com.nutomic.syncthingandroid.R;

File: app/src/main/java/com/nutomic/syncthingandroid/service/RunConditionMonitor.java
Patch:
@@ -15,7 +15,7 @@
 import android.os.BatteryManager;
 import android.os.Build;
 import android.os.PowerManager;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import android.util.Log;
 
 import com.nutomic.syncthingandroid.SyncthingApp;

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -7,8 +7,8 @@
 import android.content.pm.PackageManager;
 import android.os.AsyncTask;
 import android.os.Handler;
-import android.support.annotation.Nullable;
-import android.support.v4.content.ContextCompat;
+import androidx.annotation.Nullable;
+import androidx.core.content.ContextCompat;
 import android.util.Log;
 
 import com.android.PRNGFixes;

File: app/src/main/java/com/nutomic/syncthingandroid/util/FileUtils.java
Patch:
@@ -8,7 +8,7 @@
 import android.os.Environment;
 import android.os.storage.StorageManager;
 import android.provider.DocumentsContract;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import android.util.Log;
 
 import java.io.File;

File: app/src/main/java/com/nutomic/syncthingandroid/util/Util.java
Patch:
@@ -9,7 +9,7 @@
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.os.Build;
 import android.preference.PreferenceManager;
-import android.support.v7.app.AlertDialog;
+import androidx.appcompat.app.AlertDialog;
 import android.util.Log;
 import android.widget.Toast;
 

File: app/src/main/java/com/nutomic/syncthingandroid/views/DevicesAdapter.java
Patch:
@@ -2,8 +2,8 @@
 
 import android.content.Context;
 import android.content.res.Resources;
-import android.support.annotation.NonNull;
-import android.support.v4.content.ContextCompat;
+import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/nutomic/syncthingandroid/views/EnhancedEditText.java
Patch:
@@ -1,7 +1,7 @@
 package com.nutomic.syncthingandroid.views;
 
 import android.content.Context;
-import android.support.v7.widget.AppCompatEditText;
+import androidx.appcompat.widget.AppCompatEditText;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.inputmethod.EditorInfo;

File: app/src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.databinding.DataBindingUtil;
+import androidx.databinding.DataBindingUtil;
 import android.net.Uri;
-import android.support.annotation.NonNull;
-import android.support.v4.content.ContextCompat;
+import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.LayoutInflater;

File: app/src/main/java/com/nutomic/syncthingandroid/views/SttracePreference.java
Patch:
@@ -5,8 +5,8 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.preference.MultiSelectListPreference;
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.content.ContextCompat;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
 import android.util.AttributeSet;
 import android.util.Log;
 

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -125,7 +125,7 @@ public String run(boolean returnStdOut) {
         // Potential fix for #498, keep the CPU running while native binary is running
         PowerManager pm = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
         PowerManager.WakeLock wakeLock = useWakeLock()
-                ? pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, TAG)
+                ? pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,  mContext.getString(R.string.app_name) + ":" + TAG)
                 : null;
         try {
             if (wakeLock != null)

File: app/src/main/java/com/nutomic/syncthingandroid/service/NotificationHandler.java
Patch:
@@ -57,6 +57,7 @@ public NotificationHandler(Context context) {
             mPersistentChannel.enableLights(false);
             mPersistentChannel.enableVibration(false);
             mPersistentChannel.setSound(null, null);
+            mPersistentChannel.setShowBadge(false); // Disables the dot next to the app icon
             mNotificationManager.createNotificationChannel(mPersistentChannel);
 
             mPersistentChannelWaiting = new NotificationChannel(

File: app/src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -107,7 +107,7 @@ private void readConfig() {
 
     public URL getWebGuiUrl() {
         try {
-            return new URL("http://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent());
+            return new URL("https://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent());
         } catch (MalformedURLException e) {
             throw new RuntimeException("Failed to parse web interface URL", e);
         }
@@ -154,9 +154,9 @@ public void updateIfNeeded() {
         }
 
         /* Section - GUI */
-        // Disable TLS.
+        // Enforce TLS.
         Element gui = getGuiElement();
-        changed = setConfigElement(gui, "tls", "false") || changed;
+        changed = setConfigElement(gui, "tls", "true") || changed;
 
         // Set user to "syncthing"
         changed = setConfigElement(gui, "user", "syncthing") || changed;

File: app/src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -107,7 +107,7 @@ private void readConfig() {
 
     public URL getWebGuiUrl() {
         try {
-            return new URL("https://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent());
+            return new URL("http://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent());
         } catch (MalformedURLException e) {
             throw new RuntimeException("Failed to parse web interface URL", e);
         }
@@ -154,9 +154,9 @@ public void updateIfNeeded() {
         }
 
         /* Section - GUI */
-        // Enforce TLS.
+        // Disable TLS.
         Element gui = getGuiElement();
-        changed = setConfigElement(gui, "tls", "true") || changed;
+        changed = setConfigElement(gui, "tls", "false") || changed;
 
         // Set user to "syncthing"
         changed = setConfigElement(gui, "user", "syncthing") || changed;

File: app/src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -37,7 +37,7 @@ public class Folder {
     public boolean disableSparseFiles;
     public boolean disableTempIndexes;
     public boolean paused;
-    public boolean useLargeBlocks;
+    public boolean useLargeBlocks = true;
     public int weakHashThresholdPct = 25;
     public String markerName = ".stfolder";
     public String invalid;

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -11,7 +11,7 @@ public class Constants {
     public static final String FILENAME_SYNCTHING_BINARY        = "libsyncthing.so";
 
     // Preferences - Run conditions
-    public static final String PREF_ALWAYS_RUN_IN_BACKGROUND    = "always_run_in_background";
+    public static final String PREF_START_SERVICE_ON_BOOT       = "always_run_in_background";
     public static final String PREF_RUN_ON_MOBILE_DATA          = "run_on_mobile_data";
     public static final String PREF_RUN_ON_WIFI                 = "run_on_wifi";
     public static final String PREF_RUN_ON_METERED_WIFI         = "run_on_metered_wifi";
@@ -25,7 +25,6 @@ public class Constants {
     public static final String PREF_FIRST_START                 = "first_start";
     public static final String PREF_START_INTO_WEB_GUI          = "start_into_web_gui";
     public static final String PREF_USE_ROOT                    = "use_root";
-    public static final String PREF_NOTIFICATION_TYPE           = "notification_type";
     public static final String PREF_ENVIRONMENT_VARIABLES       = "environment_variables";
     public static final String PREF_DEBUG_FACILITIES_ENABLED    = "debug_facilities_enabled";
     public static final String PREF_USE_WAKE_LOCK               = "wakelock_while_binary_running";

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -577,13 +577,15 @@ private void checkWriteAndUpdateUI() {
                  * or enabled root mode thus having write access.
                  */
                 mFolder.type = Constants.FOLDER_TYPE_SEND_RECEIVE;
+                updateFolderTypeDescription();
             }
         } else {
             // Force "sendonly" folder.
             mAccessExplanationView.setText(R.string.folder_path_readonly);
             mFolderTypeView.setEnabled(false);
             mEditIgnores.setEnabled(false);
             mFolder.type = Constants.FOLDER_TYPE_SEND_ONLY;
+            updateFolderTypeDescription();
         }
     }
 

File: app/src/main/java/com/nutomic/syncthingandroid/model/Config.java
Patch:
@@ -8,8 +8,8 @@ public class Config {
     public List<Folder> folders;
     public Gui gui;
     public Options options;
-    public List<String> ignoredFolders;
-    public List<String> ignoredDevices;
+    public List<PendingDevice> pendingDevices;
+    public List<RemoteIgnoredDevice> remoteIgnoredDevices;
 
     public class Gui {
         public boolean enabled;

File: app/src/main/java/com/nutomic/syncthingandroid/model/Device.java
Patch:
@@ -12,6 +12,8 @@ public class Device {
     public String certName;
     public boolean introducer;
     public boolean paused;
+    public List<PendingFolder> pendingFolders;
+    public List<IgnoredFolder> ignoredFolders;
 
     /**
      * Returns the device name, or the first characters of the ID if the name is empty.

File: app/src/main/java/com/nutomic/syncthingandroid/service/EventProcessor.java
Patch:
@@ -275,6 +275,7 @@ private void onFolderRejected(String deviceId, String folderId,
         // Prepare "ignore" action.
         Intent intentIgnore = new Intent(mContext, SyncthingService.class)
                 .putExtra(SyncthingService.EXTRA_NOTIFICATION_ID, notificationId)
+                .putExtra(SyncthingService.EXTRA_DEVICE_ID, deviceId)
                 .putExtra(SyncthingService.EXTRA_FOLDER_ID, folderId);
         intentIgnore.setAction(SyncthingService.ACTION_IGNORE_FOLDER);
         PendingIntent piIgnore = PendingIntent.getService(mContext, 0,

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -244,7 +244,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             mNotificationHandler.cancelConsentNotification(intent.getIntExtra(EXTRA_NOTIFICATION_ID, 0));
         } else if (ACTION_IGNORE_FOLDER.equals(intent.getAction()) && mCurrentState == State.ACTIVE) {
             // mApi is not null due to State.ACTIVE
-            mApi.ignoreFolder(intent.getStringExtra(EXTRA_FOLDER_ID));
+            mApi.ignoreFolder(intent.getStringExtra(EXTRA_DEVICE_ID), intent.getStringExtra(EXTRA_FOLDER_ID));
             mNotificationHandler.cancelConsentNotification(intent.getIntExtra(EXTRA_NOTIFICATION_ID, 0));
         } else if (ACTION_OVERRIDE_CHANGES.equals(intent.getAction()) && mCurrentState == State.ACTIVE) {
             mApi.overrideChanges(intent.getStringExtra(EXTRA_FOLDER_ID));

File: app/src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -99,7 +99,7 @@ private void updateFolderStatusView(ItemFolderListBinding binding, Folder folder
 
         long neededItems = folderStatus.needFiles + folderStatus.needDirectories + folderStatus.needSymlinks + folderStatus.needDeletes;
         boolean outOfSync = folderStatus.state.equals("idle") && neededItems > 0;
-        boolean overrideButtonVisible = (folder.type == Constants.FOLDER_TYPE_SEND_ONLY) && outOfSync;
+        boolean overrideButtonVisible = folder.type.equals(Constants.FOLDER_TYPE_SEND_ONLY) && outOfSync;
         binding.override.setVisibility(overrideButtonVisible ? VISIBLE : GONE);
         if (outOfSync) {
             binding.state.setText(mContext.getString(R.string.status_outofsync));

File: app/src/main/java/com/nutomic/syncthingandroid/model/Device.java
Patch:
@@ -6,7 +6,7 @@
 
 public class Device {
     public String deviceID;
-    public String name;
+    public String name = "";
     public List<String> addresses;
     public String compression;
     public String certName;

File: app/src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.text.TextUtils;
 
+import com.nutomic.syncthingandroid.service.Constants;
+
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -15,7 +17,7 @@ public class Folder {
     public String label;
     public String filesystemType = "basic";
     public String path;
-    public String type;
+    public String type = Constants.FOLDER_TYPE_SEND_RECEIVE;
     public boolean fsWatcherEnabled = true;
     public int fsWatcherDelayS = 10;
     private List<Device> devices = new ArrayList<>();

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -44,8 +44,7 @@ public class Constants {
      */
     public static final String FOLDER_TYPE_SEND_ONLY            = "sendonly";
     public static final String FOLDER_TYPE_SEND_RECEIVE         = "sendreceive";
-    // public static final String FOLDER_TYPE_RECEIVE_ONLY      = "receiveonly"
-
+    public static final String FOLDER_TYPE_RECEIVE_ONLY         = "receiveonly";
 
     /**
      * On Android 8.1, ACCESS_COARSE_LOCATION is required to access WiFi SSID.

File: app/src/main/java/com/nutomic/syncthingandroid/activities/StateDialogActivity.java
Patch:
@@ -98,7 +98,9 @@ private void showDisabledDialog() {
                 .setMessage(R.string.syncthing_disabled_message)
                 .setPositiveButton(R.string.syncthing_disabled_change_settings,
                         (dialogInterface, i) -> {
-                            startActivity(new Intent(this, SettingsActivity.class));
+                            Intent intent = new Intent(this, SettingsActivity.class);
+                            intent.putExtra(SettingsActivity.EXTRA_OPEN_SUB_PREF_SCREEN, "category_run_conditions");
+                            startActivity(intent);
                         }
                 )
                 .setNegativeButton(R.string.exit,

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -10,11 +10,13 @@ public class Constants {
 
     public static final String FILENAME_SYNCTHING_BINARY        = "libsyncthing.so";
 
+    public static final String PREF_FIRST_START                 = "first_start";
     public static final String PREF_ALWAYS_RUN_IN_BACKGROUND    = "always_run_in_background";
     public static final String PREF_SYNC_ONLY_WIFI              = "sync_only_wifi";
     public static final String PREF_SYNC_ONLY_WIFI_SSIDS        = "sync_only_wifi_ssids_set";
     public static final String PREF_SYNC_ONLY_CHARGING          = "sync_only_charging";
     public static final String PREF_RESPECT_BATTERY_SAVING      = "respect_battery_saving";
+    public static final String PREF_START_INTO_WEB_GUI          = "start_into_web_gui";
     public static final String PREF_USE_ROOT                    = "use_root";
     public static final String PREF_NOTIFICATION_TYPE           = "notification_type";
     public static final String PREF_ENVIRONMENT_VARIABLES       = "environment_variables";

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -572,6 +572,7 @@ private String generateRandomFolderId() {
         }
         return sb.toString();
     }
+
     private void initFolder() {
         mFolder = new Folder();
         mFolder.id = (getIntent().hasExtra(EXTRA_FOLDER_ID))
@@ -586,6 +587,7 @@ private void initFolder() {
          */
         mFolder.rescanIntervalS = 3600;
         mFolder.paused = false;
+        mFolder.type = Constants.FOLDER_TYPE_SEND_RECEIVE;
         mFolder.versioning = new Folder.Versioning();
     }
 

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -572,6 +572,7 @@ private String generateRandomFolderId() {
         }
         return sb.toString();
     }
+
     private void initFolder() {
         mFolder = new Folder();
         mFolder.id = (getIntent().hasExtra(EXTRA_FOLDER_ID))

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -437,6 +437,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 }
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP &&
                     mFolderUri != null &&
+                    mFolder != null &&
+                    mFolder.type != null &&
                     mFolder.type.equals(Constants.FOLDER_TYPE_SEND_ONLY)) {
                     /**
                      * Normally, syncthing takes care of creating the ".stfolder" marker.

File: app/src/main/java/com/nutomic/syncthingandroid/model/FolderStatus.java
Patch:
@@ -25,5 +25,6 @@ public class FolderStatus {
     public String state;
     public String stateChanged;
     public long version;
+    public String error;
     public String watchError;
 }

File: app/src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -311,7 +311,7 @@ private boolean changeDefaultFolder() {
         folder.setAttribute("id", mContext.getString(R.string.default_folder_id, defaultFolderId));
         folder.setAttribute("path", Environment
                 .getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM).getAbsolutePath());
-        folder.setAttribute("type", "readonly");
+        folder.setAttribute("type", Constants.FOLDER_TYPE_SEND_ONLY);
         folder.setAttribute("fsWatcherEnabled", "true");
         folder.setAttribute("fsWatcherDelayS", "10");
         return true;

File: app/src/main/java/com/nutomic/syncthingandroid/model/Config.java
Patch:
@@ -4,11 +4,12 @@
 
 public class Config {
     public int version;
-    public String[] ignoredDevices;
     public List<Device> devices;
     public List<Folder> folders;
     public Gui gui;
     public Options options;
+    public List<String> ignoredFolders;
+    public List<String> ignoredDevices;
 
     public class Gui {
         public boolean enabled;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -31,6 +31,7 @@
 import com.google.common.collect.Sets;
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.SyncthingApp;
+import com.nutomic.syncthingandroid.service.Constants;
 import com.nutomic.syncthingandroid.service.SyncthingService;
 import com.nutomic.syncthingandroid.service.SyncthingServiceBinder;
 import com.nutomic.syncthingandroid.util.Util;
@@ -102,7 +103,8 @@ protected void onCreate(Bundle savedInstanceState) {
             displayRoot();
         }
 
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+        Boolean prefUseRoot = PreferenceManager.getDefaultSharedPreferences(this).getBoolean(Constants.PREF_USE_ROOT, false);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && !prefUseRoot) {
             Toast.makeText(this, R.string.kitkat_external_storage_warning, Toast.LENGTH_LONG)
                     .show();
         }

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -480,6 +480,7 @@ private void addEmptyDeviceListView() {
     private void addDeviceViewAndSetListener(Device device, LayoutInflater inflater) {
         inflater.inflate(R.layout.item_device_form, mDevicesContainer);
         SwitchCompat deviceView = (SwitchCompat) mDevicesContainer.getChildAt(mDevicesContainer.getChildCount()-1);
+        deviceView.setOnCheckedChangeListener(null);
         deviceView.setChecked(mFolder.getDevice(device.deviceID) != null);
         deviceView.setText(device.getDisplayName());
         deviceView.setTag(device);

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -32,6 +32,7 @@
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.SyncthingApp;
 import com.nutomic.syncthingandroid.service.SyncthingService;
+import com.nutomic.syncthingandroid.service.SyncthingServiceBinder;
 import com.nutomic.syncthingandroid.util.Util;
 
 import java.io.File;
@@ -156,7 +157,8 @@ private void populateRoots() {
     @Override
     public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
         super.onServiceConnected(componentName, iBinder);
-        getService().registerOnServiceStateChangeListener(this);
+        SyncthingServiceBinder syncthingServiceBinder = (SyncthingServiceBinder) iBinder;
+        syncthingServiceBinder.getService().registerOnServiceStateChangeListener(this);
     }
 
     @Override

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -69,8 +69,8 @@ protected void onResume() {
 
     @Override
     public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
-        SyncthingServiceBinder binder = (SyncthingServiceBinder) iBinder;
-        mSyncthingService = binder.getService();
+        SyncthingServiceBinder syncthingServiceBinder = (SyncthingServiceBinder) iBinder;
+        mSyncthingService = syncthingServiceBinder.getService();
         Stream.of(mServiceConnectedListeners).forEach(OnServiceConnectedListener::onServiceConnected);
         mServiceConnectedListeners.clear();
     }

File: app/src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -23,6 +23,7 @@
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.service.Constants;
 import com.nutomic.syncthingandroid.service.SyncthingService;
+import com.nutomic.syncthingandroid.service.SyncthingServiceBinder;
 import com.nutomic.syncthingandroid.util.ConfigXml;
 
 import java.io.File;
@@ -149,7 +150,8 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
         super.onServiceConnected(componentName, iBinder);
-        getService().registerOnServiceStateChangeListener(this);
+        SyncthingServiceBinder syncthingServiceBinder = (SyncthingServiceBinder) iBinder;
+        syncthingServiceBinder.getService().registerOnServiceStateChangeListener(this);
     }
 
     @Override

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -7,7 +7,6 @@
 import android.Manifest;
 import android.os.AsyncTask;
 import android.os.Handler;
-import android.os.IBinder;
 import android.support.annotation.Nullable;
 import android.support.v4.content.ContextCompat;
 import android.util.Log;
@@ -388,7 +387,7 @@ private void onApiAvailable() {
     }
 
     @Override
-    public IBinder onBind(Intent intent) {
+    public SyncthingServiceBinder onBind(Intent intent) {
         return mBinder;
     }
 

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -18,16 +18,17 @@ public class Constants {
     public static final String PREF_USE_ROOT                    = "use_root";
     public static final String PREF_NOTIFICATION_TYPE           = "notification_type";
     public static final String PREF_ENVIRONMENT_VARIABLES       = "environment_variables";
+    public static final String PREF_DEBUG_FACILITIES_ENABLED    = "debug_facilities_enabled";
     public static final String PREF_USE_WAKE_LOCK               = "wakelock_while_binary_running";
     public static final String PREF_USE_TOR                     = "use_tor";
     public static final String PREF_SOCKS_PROXY_ADDRESS         = "socks_proxy_address";
     public static final String PREF_HTTP_PROXY_ADDRESS          = "http_proxy_address";
 
     /**
-     * Available options cache for preference {@link app_settings#sttrace}
+     * Available options cache for preference {@link app_settings#debug_facilities_enabled}
      * Read via REST API call in {@link RestApi#updateDebugFacilitiesCache} after first successful binary startup.
      */
-    public static final String PREF_STTRACE_AVAILABLE_OPTIONS   = "sttrace_available_options";
+    public static final String PREF_DEBUG_FACILITIES_AVAILABLE  = "sttrace_available_options";
 
     /**
      * On Android 8.1, ACCESS_COARSE_LOCATION is required to access WiFi SSID.

File: app/src/main/java/com/nutomic/syncthingandroid/service/RestApi.java
Patch:
@@ -221,7 +221,7 @@ private void updateDebugFacilitiesCache() {
                         facilitiesToStore.add(facilityName);
                     }
                     PreferenceManager.getDefaultSharedPreferences(mContext).edit()
-                        .putStringSet(Constants.PREF_STTRACE_AVAILABLE_OPTIONS, facilitiesToStore)
+                        .putStringSet(Constants.PREF_DEBUG_FACILITIES_AVAILABLE, facilitiesToStore)
                         .apply();
 
                     // Store current binary version so we will only store this information again

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -432,7 +432,8 @@ private HashMap<String, String> buildEnvironment() {
         HashMap<String, String> targetEnv = new HashMap<>();
         // Set home directory to data folder for web GUI folder picker.
         targetEnv.put("HOME", Environment.getExternalStorageDirectory().getAbsolutePath());
-        targetEnv.put("STTRACE", TextUtils.join(" ", mPreferences.getStringSet("sttrace", new HashSet<>())));
+        targetEnv.put("STTRACE", TextUtils.join(" ",
+                        mPreferences.getStringSet(Constants.PREF_DEBUG_FACILITIES_ENABLED, new HashSet<>())));
         File externalFilesDir = mContext.getExternalFilesDir(null);
         if (externalFilesDir != null)
             targetEnv.put("STGUIASSETS", externalFilesDir.getAbsolutePath() + "/gui");

File: app/src/main/java/com/nutomic/syncthingandroid/views/SttracePreference.java
Patch:
@@ -75,7 +75,7 @@ private void filterRemovedDebugFacilities(Set<String> selected, CharSequence[] a
      */
     private CharSequence[] getDebugFacilities() {
         List<String> retDebugFacilities = new ArrayList<String>();
-        Set<String> availableDebugFacilities = getSharedPreferences().getStringSet(Constants.PREF_STTRACE_AVAILABLE_OPTIONS, new HashSet<>());
+        Set<String> availableDebugFacilities = getSharedPreferences().getStringSet(Constants.PREF_DEBUG_FACILITIES_AVAILABLE, new HashSet<>());
         // from JavaDoc: Note that you must not modify the set instance returned by this call.
         // therefore required to make a defensive copy of the elements
         availableDebugFacilities = new HashSet<>(availableDebugFacilities);

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -16,7 +16,6 @@
 
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.SyncthingApp;
-import com.nutomic.syncthingandroid.service.SyncthingService;
 
 import javax.inject.Inject;
 
@@ -66,8 +65,6 @@ private void startApp() {
             mPreferences.edit().putBoolean("first_start", false).apply();
         }
 
-        startService(new Intent(this, SyncthingService.class));
-
         // In case start_into_web_gui option is enabled, start both activities so that back
         // navigation works as expected.
         Intent mainIntent = new Intent(this, MainActivity.class);

File: app/src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -45,7 +45,7 @@
  * ownCloud Android {@see https://github.com/owncloud/android/blob/79664304fdb762b2e04f1ac505f50d0923ddd212/src/com/owncloud/android/utils/UriUtils.java#L193}
  */
 public class ShareActivity extends StateDialogActivity
-        implements SyncthingActivity.OnServiceConnectedListener, SyncthingService.OnApiChangeListener {
+        implements SyncthingActivity.OnServiceConnectedListener, SyncthingService.OnServiceStateChangeListener {
 
     private static final String TAG = "ShareActivity";
     private static final String PREF_PREVIOUSLY_SELECTED_SYNCTHING_FOLDER = "previously_selected_syncthing_folder";
@@ -57,7 +57,7 @@ public class ShareActivity extends StateDialogActivity
     private Spinner mFoldersSpinner;
 
     @Override
-    public void onApiChange(SyncthingService.State currentState) {
+    public void onServiceStateChange(SyncthingService.State currentState) {
         if (currentState != SyncthingService.State.ACTIVE || getApi() == null)
             return;
 
@@ -85,7 +85,7 @@ public void onApiChange(SyncthingService.State currentState) {
 
     @Override
     public void onServiceConnected() {
-        getService().registerOnApiChangeListener(this);
+        getService().registerOnServiceStateChangeListener(this);
     }
 
     @Override

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -27,7 +27,7 @@
 /**
  * Displays a list of all existing devices.
  */
-public class DeviceListFragment extends ListFragment implements SyncthingService.OnApiChangeListener,
+public class DeviceListFragment extends ListFragment implements SyncthingService.OnServiceStateChangeListener,
         ListView.OnItemClickListener {
 
     private final static Comparator<Device> DEVICES_COMPARATOR = (lhs, rhs) -> lhs.name.compareTo(rhs.name);
@@ -45,7 +45,7 @@ public void onPause() {
     }
 
     @Override
-    public void onApiChange(SyncthingService.State currentState) {
+    public void onServiceStateChange(SyncthingService.State currentState) {
         if (currentState != SyncthingService.State.ACTIVE)
             return;
 

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -24,7 +24,7 @@
 /**
  * Displays a list of all existing folders.
  */
-public class FolderListFragment extends ListFragment implements SyncthingService.OnApiChangeListener,
+public class FolderListFragment extends ListFragment implements SyncthingService.OnServiceStateChangeListener,
         AdapterView.OnItemClickListener {
 
     private FoldersAdapter mAdapter;
@@ -40,7 +40,7 @@ public void onPause() {
     }
 
     @Override
-    public void onApiChange(SyncthingService.State currentState) {
+    public void onServiceStateChange(SyncthingService.State currentState) {
         if (currentState != SyncthingService.State.ACTIVE)
             return;
 

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -107,6 +107,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                         grantResults[0] != PackageManager.PERMISSION_GRANTED) {
                     Toast.makeText(this, R.string.toast_write_storage_permission_required,
                             Toast.LENGTH_LONG).show();
+                    this.finish();
                 } else {
                     startApp();
                 }

File: app/src/main/java/com/nutomic/syncthingandroid/http/GetRequest.java
Patch:
@@ -17,6 +17,7 @@
 public class GetRequest extends ApiRequest {
 
     public static final String URI_CONFIG      = "/rest/system/config";
+    public static final String URI_DEBUG       = "/rest/system/debug";
     public static final String URI_VERSION     = "/rest/system/version";
     public static final String URI_SYSTEM      = "/rest/system/status";
     public static final String URI_CONNECTIONS = "/rest/system/connections";

File: app/src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -217,6 +217,7 @@ private void loadCaCert() {
      * Returns boolean if successful.
      * Source: https://stackoverflow.com/a/26781539
      */
+    @SuppressLint("PrivateApi")
     public static boolean setWebViewProxy(Context appContext, String host, int port, String exclusionList) {
         if (android.os.Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
             // Not supported on android version lower than KitKat.

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -1,5 +1,6 @@
 package com.nutomic.syncthingandroid.service;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -105,6 +106,7 @@ public void run() {
         run(false);
     }
 
+    @SuppressLint("WakelockTimeout")
     public String run(boolean returnStdOut) {
         trimLogFile();
         int ret;

File: app/src/main/java/com/nutomic/syncthingandroid/service/RestApi.java
Patch:
@@ -163,11 +163,11 @@ public void reloadConfig() {
     }
 
     private void onReloadConfigComplete(String result) {
-        Log.v(TAG, "onReloadConfigComplete: " + result);
         mConfig = new Gson().fromJson(result, Config.class);
         if (mConfig == null) {
             throw new RuntimeException("config is null: " + result);
         }
+        Log.v(TAG, "onReloadConfigComplete: Successfully parsed configuration.");
 
         // Update cached device and folder information stored in the mCompletion model.
         mCompletion.updateFromConfig(getDevices(true), getFolders());

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -184,7 +184,6 @@ public void onCreate() {
         mHandler = new Handler();
         
         mDeviceStateHolder = new DeviceStateHolder(SyncthingService.this, this::updateState);
-        updateState();
         mNotificationHandler.updatePersistentNotification(this);
     }
 

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -8,6 +8,8 @@
 
 public class Constants {
 
+    public static final String FILENAME_SYNCTHING_BINARY        = "libsyncthing.so";
+
     public static final String PREF_ALWAYS_RUN_IN_BACKGROUND    = "always_run_in_background";
     public static final String PREF_SYNC_ONLY_WIFI              = "sync_only_wifi";
     public static final String PREF_SYNC_ONLY_WIFI_SSIDS        = "sync_only_wifi_ssids_set";
@@ -81,7 +83,7 @@ public static File getHttpsCertFile(Context context) {
     }
 
     static File getSyncthingBinary(Context context) {
-        return new File(context.getApplicationInfo().nativeLibraryDir, "libsyncthing.so");
+        return new File(context.getApplicationInfo().nativeLibraryDir, FILENAME_SYNCTHING_BINARY);
     }
 
     static File getLogFile(Context context) {

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -8,6 +8,8 @@
 
 public class Constants {
 
+    public static final String FILENAME_SYNCTHING_BINARY        = "libsyncthing.so";
+
     public static final String PREF_ALWAYS_RUN_IN_BACKGROUND    = "always_run_in_background";
     public static final String PREF_SYNC_ONLY_WIFI              = "sync_only_wifi";
     public static final String PREF_SYNC_ONLY_WIFI_SSIDS        = "sync_only_wifi_ssids_set";
@@ -81,7 +83,7 @@ public static File getHttpsCertFile(Context context) {
     }
 
     static File getSyncthingBinary(Context context) {
-        return new File(context.getApplicationInfo().nativeLibraryDir, "libsyncthing.so");
+        return new File(context.getApplicationInfo().nativeLibraryDir, FILENAME_SYNCTHING_BINARY);
     }
 
     static File getLogFile(Context context) {

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -184,7 +184,6 @@ public void onCreate() {
         mHandler = new Handler();
         
         mDeviceStateHolder = new DeviceStateHolder(SyncthingService.this, this::updateState);
-        updateState();
         mNotificationHandler.updatePersistentNotification(this);
     }
 

File: app/src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -62,7 +62,7 @@ private void startApp() {
         // In case start_into_web_gui option is enabled, start both activities so that back
         // navigation works as expected.
         Intent mainIntent = new Intent(this, MainActivity.class);
-        mainIntent.putExtra(MainActivity.EXTRA_FIRST_START, isFirstStart);
+        mainIntent.putExtra(MainActivity.EXTRA_KEY_GENERATION_IN_PROGRESS, isFirstStart);
         Intent webIntent = new Intent(this, WebGuiActivity.class);
         if (mPreferences.getBoolean("start_into_web_gui", false)) {
             startActivities(new Intent[] {mainIntent, webIntent});

File: app/src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -105,6 +105,7 @@ public void onApiChange(SyncthingService.State currentState) {
             case STARTING:
                 break;
             case ACTIVE:
+                getIntent().putExtra(this.EXTRA_KEY_GENERATION_IN_PROGRESS, false);
                 showBatteryOptimizationDialogIfNecessary();
                 mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED);
                 mDrawerFragment.requestGuiUpdate();

File: app/src/main/java/com/nutomic/syncthingandroid/activities/StateDialogActivity.java
Patch:
@@ -111,8 +111,8 @@ private void showLoadingDialog() {
 
         DialogLoadingBinding binding = DataBindingUtil.inflate(
                 getLayoutInflater(), R.layout.dialog_loading, null, false);
-        boolean isFirstStart = getIntent().getBooleanExtra(EXTRA_FIRST_START, false);
-        binding.loadingText.setText((isFirstStart)
+        boolean isGeneratingKeys = getIntent().getBooleanExtra(EXTRA_KEY_GENERATION_IN_PROGRESS, false);
+        binding.loadingText.setText((isGeneratingKeys)
                 ? R.string.web_gui_creating_key
                 : R.string.api_loading);
 
@@ -121,7 +121,7 @@ private void showLoadingDialog() {
                 .setView(binding.getRoot())
                 .show();
 
-        if (!isFirstStart) {
+        if (!isGeneratingKeys) {
             new Handler().postDelayed(() -> {
                 if (isFinishing() || mLoadingDialog == null)
                     return;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -22,7 +22,7 @@
  */
 public abstract class SyncthingActivity extends AppCompatActivity implements ServiceConnection {
 
-    public static final String EXTRA_FIRST_START = "com.nutomic.syncthing-android.SyncthingActivity.FIRST_START";
+    public static final String EXTRA_KEY_GENERATION_IN_PROGRESS = "com.nutomic.syncthing-android.SyncthingActivity.KEY_GENERATION_IN_PROGRESS";
 
     private SyncthingService mSyncthingService;
 

File: app/src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -87,7 +87,7 @@ private void updateList() {
         mAdapter.clear();
         List<Folder> folders = activity.getApi().getFolders();
         mAdapter.addAll(folders);
-        mAdapter.updateModel(activity.getApi());
+        mAdapter.updateFolderStatus(activity.getApi());
         mAdapter.notifyDataSetChanged();
         setListShown(true);
     }

File: app/src/main/java/com/nutomic/syncthingandroid/http/GetRequest.java
Patch:
@@ -20,7 +20,7 @@ public class GetRequest extends ApiRequest {
     public static final String URI_VERSION     = "/rest/system/version";
     public static final String URI_SYSTEM      = "/rest/system/status";
     public static final String URI_CONNECTIONS = "/rest/system/connections";
-    public static final String URI_MODEL       = "/rest/db/status";
+    public static final String URI_STATUS      = "/rest/db/status";
     public static final String URI_DEVICEID    = "/rest/svc/deviceid";
     public static final String URI_REPORT      = "/rest/svc/report";
     public static final String URI_EVENTS      = "/rest/events";

File: app/src/main/java/com/nutomic/syncthingandroid/model/FolderStatus.java
Patch:
@@ -1,6 +1,6 @@
 package com.nutomic.syncthingandroid.model;
 
-public class Model {
+public class FolderStatus {
     public long globalBytes;
     public long globalDeleted;
     public long globalDirectories;

File: app/src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -271,7 +271,7 @@ private Element getGuiElement() {
     }
 
     /**
-     * Set model name as device name for Syncthing.
+     * Set device model name as device name for Syncthing.
      *
      * We need to iterate through XML nodes manually, as mConfig.getDocumentElement() will also
      * return nested elements inside folder element. We have to check that we only rename the
@@ -300,12 +300,12 @@ private boolean changeLocalDeviceName(String localDeviceID) {
     private boolean changeDefaultFolder() {
         Element folder = (Element) mConfig.getDocumentElement()
                 .getElementsByTagName("folder").item(0);
-        String model = Build.MODEL
+        String deviceModel = Build.MODEL
                 .replace(" ", "_")
                 .toLowerCase(Locale.US)
                 .replaceAll("[^a-z0-9_-]", "");
         folder.setAttribute("label", mContext.getString(R.string.default_folder_label));
-        folder.setAttribute("id", mContext.getString(R.string.default_folder_id, model));
+        folder.setAttribute("id", mContext.getString(R.string.default_folder_id, deviceModel));
         folder.setAttribute("path", Environment
                 .getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM).getAbsolutePath());
         folder.setAttribute("type", "readonly");

File: app/src/main/java/com/nutomic/syncthingandroid/views/DevicesAdapter.java
Patch:
@@ -47,7 +47,7 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
         Resources r = getContext().getResources();
 
         Connections.Connection conn = null;
-        if (mConnections != null || mConnections.connections.containsKey(deviceId)) {
+        if (mConnections != null && mConnections.connections.containsKey(deviceId)) {
             conn = mConnections.connections.get(deviceId);
         }
 

File: app/src/main/java/com/nutomic/syncthingandroid/model/Device.java
Patch:
@@ -11,6 +11,7 @@ public class Device {
     public String compression;
     public String certName;
     public boolean introducer;
+    public boolean paused;
 
     /**
      * Returns the device name, or the first characters of the ID if the name is empty.

File: app/src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -17,6 +17,8 @@ public class Constants {
     public static final String PREF_NOTIFICATION_TYPE           = "notification_type";
     public static final String PREF_USE_WAKE_LOCK               = "wakelock_while_binary_running";
     public static final String PREF_USE_TOR                     = "use_tor";
+    public static final String PREF_SOCKS_PROXY_ADDRESS         = "socks_proxy_address";
+    public static final String PREF_HTTP_PROXY_ADDRESS          = "http_proxy_address";
 
     /**
      * On Android 8.1, ACCESS_COARSE_LOCATION is required to access WiFi SSID.

File: app/src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -15,6 +15,8 @@ public class Folder {
     public String label;
     public String path;
     public String type;
+    public boolean fsWatcherEnabled = true;
+    public int fsWatcherDelayS = 10;
     private List<Device> devices = new ArrayList<>();
     public int rescanIntervalS;
     public final boolean ignorePerms = true;

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -71,6 +71,8 @@ public SyncthingRunnable(Context context, Command command) {
         mContext = context;
         mSyncthingBinary = Constants.getSyncthingBinary(mContext);
         mLogFile = Constants.getLogFile(mContext);
+
+        // Get preferences relevant to starting syncthing core.
         mUseRoot = mPreferences.getBoolean(Constants.PREF_USE_ROOT, false) && Shell.SU.available();
         switch (command) {
             case generate:
@@ -371,7 +373,7 @@ private HashMap<String, String> buildEnvironment() {
         // Disable hash benchmark for faster startup.
         // https://github.com/syncthing/syncthing/issues/4348
         targetEnv.put("STHASHING", "minio");
-        if (mPreferences.getBoolean("use_tor", false)) {
+        if (mPreferences.getBoolean(Constants.PREF_USE_TOR, false)) {
             targetEnv.put("all_proxy", "socks5://localhost:9050");
             targetEnv.put("ALL_PROXY_NO_FALLBACK", "1");
         }

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -394,6 +394,8 @@ private Process setupAndLaunch(HashMap<String, String> env) throws IOException {
             // If we did not use exec, we would wait infinitely for the process to terminate (ret = process.waitFor(); in run()).
             // With exec the whole process terminates when Syncthing exits.
             suOut.writeBytes("exec " + TextUtils.join(" ", mCommand) + "\n");
+            // suOut.flush has to be called to fix issue - #1005 Endless loader after enabling "Superuser mode"
+            suOut.flush();
             return process;
         } else {
             ProcessBuilder pb = new ProcessBuilder(mCommand);

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -394,6 +394,8 @@ private Process setupAndLaunch(HashMap<String, String> env) throws IOException {
             // If we did not use exec, we would wait infinitely for the process to terminate (ret = process.waitFor(); in run()).
             // With exec the whole process terminates when Syncthing exits.
             suOut.writeBytes("exec " + TextUtils.join(" ", mCommand) + "\n");
+            // suOut.flush has to be called to fix issue - #1005 Endless loader after enabling "Superuser mode"
+            suOut.flush();
             return process;
         } else {
             ProcessBuilder pb = new ProcessBuilder(mCommand);

File: app/src/main/java/com/nutomic/syncthingandroid/model/Options.java
Patch:
@@ -18,7 +18,6 @@ public class Options {
     public int natRenewalMinutes;
     public int natTimeoutSeconds;
     public int urAccepted;
-    public int urVersionMax;
     public String urUniqueId;
     public String urURL;
     public boolean urPostInsecurely;
@@ -39,7 +38,7 @@ public class Options {
     public static final int USAGE_REPORTING_UNDECIDED = 0;
     public static final int USAGE_REPORTING_DENIED    = -1;
 
-    public boolean isUsageReportingAccepted() {
+    public boolean isUsageReportingAccepted(int urVersionMax) {
         return urAccepted == urVersionMax;
     }
 }

File: app/src/main/java/com/nutomic/syncthingandroid/model/SystemInfo.java
Patch:
@@ -11,4 +11,5 @@ public class SystemInfo {
     public boolean discoveryEnabled;
     public int discoveryMethods;
     public Map<String, String> discoveryErrors;
+    public int urVersionMax;
 }

File: app/src/main/java/com/nutomic/syncthingandroid/http/ApiRequest.java
Patch:
@@ -92,6 +92,7 @@ Uri buildUri(Map<String, String> params) {
      */
     void connect(int requestMethod, Uri uri, @Nullable String requestBody,
                  @Nullable OnSuccessListener listener, @Nullable OnErrorListener errorListener) {
+        Log.v(TAG, "Performing request to " + uri.toString());
         StringRequest request = new StringRequest(requestMethod, uri.toString(), reply -> {
             if (listener != null)
                 listener.onSuccess(reply);

File: app/src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
+import android.os.Handler;
 import android.os.IBinder;
 import android.support.annotation.Nullable;
 import android.util.Log;
@@ -215,10 +216,11 @@ protected void onPostExecute(Void aVoid) {
 
     private void onSyncthingStarted() {
         onApiChange(State.ACTIVE);
+        Handler handler = new Handler();
         new Thread(() -> {
             for (Folder r : mApi.getFolders()) {
                 try {
-                    mObservers.add(new FolderObserver(mApi, r));
+                    mObservers.add(new FolderObserver(mApi, r, handler));
                 } catch (FolderObserver.FolderNotExistingException e) {
                     Log.w(TAG, "Failed to add observer for folder", e);
                 } catch (StackOverflowError e) {

File: app/src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -141,7 +141,9 @@ public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
 
     @Override
     public void onWebGuiAvailable() {
-        mWebView.loadUrl(getService().getWebGuiUrl().toString());
+        if (mWebView.getUrl() == null) {
+            mWebView.loadUrl(getService().getWebGuiUrl().toString());
+        }
     }
 
     @Override

File: app/src/main/java/com/nutomic/syncthingandroid/service/EventProcessor.java
Patch:
@@ -150,7 +150,6 @@ public void onEvent(Event event) {
                 File updatedFile = new File(folderPath, (String) event.data.get("item"));
                 if (!"delete".equals(event.data.get("action"))) {
                     Log.i(TAG, "Rescanned file via MediaScanner: " + updatedFile.toString());
-                    Log.d("xxx", "update intent sent for " + updatedFile.getName());
                     MediaScannerConnection.scanFile(mContext, new String[]{updatedFile.getPath()},
                             null, null);
                 } else {

File: app/src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -109,7 +109,7 @@ public void onApiChange(SyncthingService.State currentState) {
                 mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED);
                 mDrawerFragment.requestGuiUpdate();
                 if (new Date().getTime() > getFirstStartTime() + USAGE_REPORTING_DIALOG_DELAY &&
-                        getApi().getOptions().getUsageReportValue() == Options.USAGE_REPORTING_UNDECIDED) {
+                        getApi().getOptions().isUsageReportingAccepted()) {
                     showUsageReportingDialog();
                 }
                 break;
@@ -452,7 +452,7 @@ private void showUsageReportingDialog() {
             Options options = getApi().getOptions();
             switch (which) {
                 case DialogInterface.BUTTON_POSITIVE:
-                    options.urAccepted = Options.USAGE_REPORTING_ACCEPTED;
+                    options.urAccepted = options.urVersionMax;
                     break;
                 case DialogInterface.BUTTON_NEGATIVE:
                     options.urAccepted = Options.USAGE_REPORTING_DENIED;

File: app/src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -234,7 +234,7 @@ public void onApiChange(SyncthingService.State currentState) {
             mRelaysEnabled.setChecked(mOptions.relaysEnabled);
             mGlobalAnnounceServers.setText(joiner.join(mOptions.globalAnnounceServers));
             mAddress.setText(mGui.address);
-            mUrAccepted.setChecked(mOptions.getUsageReportValue() == Options.USAGE_REPORTING_ACCEPTED);
+            mUrAccepted.setChecked(mOptions.isUsageReportingAccepted());
         }
 
         @Override
@@ -277,7 +277,7 @@ public boolean onSyncthingPreferenceChange(Preference preference, Object o) {
                 case "address":               mGui.address = (String) o;  break;
                 case "urAccepted":
                     mOptions.urAccepted = ((boolean) o)
-                            ? Options.USAGE_REPORTING_ACCEPTED
+                            ? mOptions.urVersionMax
                             : Options.USAGE_REPORTING_DENIED;
                     break;
                 default: throw new InvalidParameterException();

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -130,7 +130,7 @@ private String getLog(final boolean syncthingLog) {
         try {
             ProcessBuilder pb;
             if (syncthingLog) {
-                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-v", "raw", "-s", "SyncthingNativeCode");
+                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-v", "time", "-s", "SyncthingNativeCode");
             } else {
                 pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-v", "time", "*:i ps:s art:s");
             }

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -73,13 +73,13 @@ public SyncthingRunnable(Context context, Command command) {
         mUseRoot = mPreferences.getBoolean(Constants.PREF_USE_ROOT, false) && Shell.SU.available();
         switch (command) {
             case generate:
-                mCommand = new String[]{ mSyncthingBinary.getPath(), "-generate", mContext.getFilesDir().toString() };
+                mCommand = new String[]{ mSyncthingBinary.getPath(), "-generate", mContext.getFilesDir().toString(), "-logflags=0" };
                 break;
             case main:
-                mCommand = new String[]{ mSyncthingBinary.getPath(), "-home", mContext.getFilesDir().toString(), "-no-browser" };
+                mCommand = new String[]{ mSyncthingBinary.getPath(), "-home", mContext.getFilesDir().toString(), "-no-browser", "-logflags=0" };
                 break;
             case reset:
-                mCommand = new String[]{ mSyncthingBinary.getPath(), "-home", mContext.getFilesDir().toString(), "-reset" };
+                mCommand = new String[]{ mSyncthingBinary.getPath(), "-home", mContext.getFilesDir().toString(), "-reset", "-logflags=0" };
                 break;
             default:
                 throw new InvalidParameterException("Unknown command option");

File: src/main/java/com/nutomic/syncthingandroid/service/RestApi.java
Patch:
@@ -146,6 +146,9 @@ public void onWebGuiAvailable() {
         });
         new GetRequest(mContext, mUrl, GetRequest.URI_CONFIG, mApiKey, null, result -> {
             mConfig = new Gson().fromJson(result, Config.class);
+            if (mConfig == null) {
+                throw new RuntimeException("config is null: " + result);
+            }
             tryIsAvailable();
         });
         getSystemInfo(info -> {

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -141,7 +141,7 @@ public void onCreate(Bundle savedInstanceState) {
         mEditIgnores = findViewById(R.id.edit_ignores);
 
         mPathView.setOnClickListener(view ->
-                startActivityForResult(FolderPickerActivity.createIntent(this, mFolder.path), FolderPickerActivity.DIRECTORY_REQUEST_CODE));
+                startActivityForResult(FolderPickerActivity.createIntent(this, mFolder.path, null), FolderPickerActivity.DIRECTORY_REQUEST_CODE));
 
         findViewById(R.id.versioningContainer).setOnClickListener(v -> showVersioningDialog());
         mEditIgnores.setOnClickListener(v -> editIgnores());

File: src/main/java/com/nutomic/syncthingandroid/fragments/dialog/StaggeredVersioningFragment.java
Patch:
@@ -65,7 +65,7 @@ private void initiateVersionsPathTextView() {
 
         mPathView.setText(currentPath);
         mPathView.setOnClickListener(view ->
-            startActivityForResult(FolderPickerActivity.createIntent(getContext(), currentPath), FolderPickerActivity.DIRECTORY_REQUEST_CODE));
+            startActivityForResult(FolderPickerActivity.createIntent(getContext(), currentPath, null), FolderPickerActivity.DIRECTORY_REQUEST_CODE));
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -162,7 +162,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
             mUseRoot                     = (CheckBoxPreference) findPreference(Constants.PREF_USE_ROOT);
             Preference useWakelock       = findPreference(Constants.PREF_USE_WAKE_LOCK);
-            Preference foregroundService = findPreference("run_as_foreground_service");
             Preference useTor            = findPreference("use_tor");
 
             mSyncthingVersion       = findPreference("syncthing_version");
@@ -183,7 +182,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
             mUseRoot.setOnPreferenceClickListener(this);
             useWakelock.setOnPreferenceChangeListener((p, o) -> requireRestart());
-            foregroundService.setOnPreferenceChangeListener((p, o) -> requireRestart());
             useTor.setOnPreferenceChangeListener((p, o) -> requireRestart());
 
             try {
@@ -412,7 +410,7 @@ public boolean onPreferenceClick(Preference preference) {
 
         @Override
         public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
-            if (key.equals(Constants.PREF_NOTIFICATION_TYPE) || key.equals(Constants.PREF_FOREGROUND_SERVICE)) {
+            if (key.equals(Constants.PREF_NOTIFICATION_TYPE)) {
                 mNotificationHandler.updatePersistentNotification(mSyncthingService);
             }
         }

File: src/main/java/com/nutomic/syncthingandroid/service/Constants.java
Patch:
@@ -16,7 +16,6 @@ public class Constants {
     public static final String PREF_USE_ROOT                 = "use_root";
     public static final String PREF_NOTIFICATION_TYPE        = "notification_type";
     public static final String PREF_USE_WAKE_LOCK            = "wakelock_while_binary_running";
-    public static final String PREF_FOREGROUND_SERVICE       = "run_as_foreground_service";
 
     /**
      * Interval in ms at which the GUI is updated (eg {@link com.nutomic.syncthingandroid.fragments.DrawerFragment}).

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -21,6 +21,7 @@
 import com.nutomic.syncthingandroid.model.SystemInfo;
 import com.nutomic.syncthingandroid.model.SystemVersion;
 import com.nutomic.syncthingandroid.service.Constants;
+import com.nutomic.syncthingandroid.service.DeviceStateHolder;
 import com.nutomic.syncthingandroid.service.RestApi;
 import com.nutomic.syncthingandroid.service.SyncthingService;
 import com.nutomic.syncthingandroid.util.Util;
@@ -111,7 +112,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     }
 
     private void updateExitButtonVisibility() {
-        boolean alwaysInBackground = SyncthingService.alwaysRunInBackground(getActivity());
+        boolean alwaysInBackground = DeviceStateHolder.alwaysRunInBackground(getActivity());
         mExitButton.setVisibility(alwaysInBackground ? View.GONE : View.VISIBLE);
     }
 

File: src/main/java/com/nutomic/syncthingandroid/receiver/AppConfigReceiver.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Intent;
 
 import com.nutomic.syncthingandroid.SyncthingApp;
+import com.nutomic.syncthingandroid.service.DeviceStateHolder;
 import com.nutomic.syncthingandroid.service.NotificationHandler;
 import com.nutomic.syncthingandroid.service.SyncthingService;
 
@@ -40,7 +41,7 @@ public void onReceive(Context context, Intent intent) {
                 break;
 
             case ACTION_STOP:
-                if (SyncthingService.alwaysRunInBackground(context)) {
+                if (DeviceStateHolder.alwaysRunInBackground(context)) {
                     mNotificationHandler.showStopSyncthingWarningNotification();
                 } else {
                     context.stopService(new Intent(context, SyncthingService.class));

File: src/main/java/com/nutomic/syncthingandroid/receiver/BatteryReceiver.java
Patch:
@@ -21,7 +21,7 @@ public void onReceive(Context context, Intent intent) {
                 && !Intent.ACTION_POWER_DISCONNECTED.equals(intent.getAction()))
             return;
 
-        if (!SyncthingService.alwaysRunInBackground(context))
+        if (!DeviceStateHolder.alwaysRunInBackground(context))
             return;
 
         boolean isCharging = Intent.ACTION_POWER_CONNECTED.equals(intent.getAction());

File: src/main/java/com/nutomic/syncthingandroid/receiver/NetworkReceiver.java
Patch:
@@ -22,7 +22,7 @@ public void onReceive(Context context, Intent intent) {
         if (!ConnectivityManager.CONNECTIVITY_ACTION.equals(intent.getAction()))
             return;
 
-        if (!SyncthingService.alwaysRunInBackground(context))
+        if (!DeviceStateHolder.alwaysRunInBackground(context))
             return;
 
         updateNetworkStatus(context);

File: src/main/java/com/nutomic/syncthingandroid/service/NotificationHandler.java
Patch:
@@ -46,7 +46,7 @@ public void updatePersistentNotification(SyncthingService service, SyncthingServ
         // Android 8 does not allow starting service from background unless it's a foreground
         // service, so if "always run in background" is enabled, we have to use a foreground service.
         // https://stackoverflow.com/a/44505719/1837158
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && SyncthingService.alwaysRunInBackground(mContext)) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && DeviceStateHolder.alwaysRunInBackground(mContext)) {
             foreground = true;
         }
 
@@ -87,7 +87,7 @@ public void updatePersistentNotification(SyncthingService service, SyncthingServ
     }
 
     public void cancelPersistentNotification(SyncthingService service) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && SyncthingService.alwaysRunInBackground(mContext))
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && DeviceStateHolder.alwaysRunInBackground(mContext))
             return;
 
         service.stopForeground(false);

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -202,6 +202,7 @@ public void onCreate() {
         }
         updateState();
         mPreferences.registerOnSharedPreferenceChangeListener(this);
+        mNotificationHandler.updatePersistentNotification(this, mCurrentState);
     }
 
     /**
@@ -211,7 +212,7 @@ public void onCreate() {
     private class StartupTask extends AsyncTask<Void, Void, Void> {
 
         public StartupTask() {
-            mCurrentState = State.STARTING;
+            onApiChange(State.STARTING);
         }
 
         @Override

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -220,8 +220,7 @@ protected Void doInBackground(Void... voids) {
                 mConfig = new ConfigXml(SyncthingService.this);
                 mConfig.updateIfNeeded();
             } catch (ConfigXml.OpenConfigException e) {
-                Toast.makeText(SyncthingService.this, R.string.config_create_failed,
-                        Toast.LENGTH_LONG).show();
+                mNotificationHandler.showCrashedNotification(R.string.config_create_failed, true);
                 onApiChange(State.ERROR);
                 cancel(true);
             }

File: src/main/java/com/nutomic/syncthingandroid/receiver/BatteryReceiver.java
Patch:
@@ -31,7 +31,7 @@ public void onReceive(Context context, Intent intent) {
         lbm.sendBroadcast(i);
 
         // Make sure service is running.
-        context.startService(new Intent(context, SyncthingService.class));
+        BootReceiver.startServiceCompat(context);
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/receiver/NetworkReceiver.java
Patch:
@@ -8,7 +8,6 @@
 import android.net.NetworkInfo;
 import android.os.Build;
 import android.support.v4.content.LocalBroadcastManager;
-import android.util.Log;
 
 import com.nutomic.syncthingandroid.service.DeviceStateHolder;
 import com.nutomic.syncthingandroid.service.SyncthingService;
@@ -45,7 +44,7 @@ public static void updateNetworkStatus(Context context) {
         lbm.sendBroadcast(intent);
 
         // Make sure service is running.
-        context.startService(new Intent(context, SyncthingService.class));
+        BootReceiver.startServiceCompat(context);
     }
 
 }

File: src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -53,6 +53,7 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
         binding.openFolder.setOnClickListener(v -> {
             Intent intent = new Intent(Intent.ACTION_VIEW);
             intent.setDataAndType(Uri.fromFile(new File(folder.path)), "resource/folder");
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             if (intent.resolveActivity(getContext().getPackageManager()) != null) {
                 getContext().startActivity(intent);
             } else {

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -15,6 +15,7 @@
 import android.os.IBinder;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
+import android.support.annotation.Nullable;
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 import android.util.Pair;
@@ -457,7 +458,7 @@ public boolean isFirstStart() {
         return !new File(getFilesDir(), PUBLIC_KEY_FILE).exists();
     }
 
-    public RestApi getApi() {
+    public @Nullable RestApi getApi() {
         return mApi;
     }
 

File: src/main/java/com/nutomic/syncthingandroid/receiver/BootReceiver.java
Patch:
@@ -10,13 +10,13 @@ public class BootReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        if (!intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED))
+        if (!intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED) &&
+                !intent.getAction().equals(Intent.ACTION_MY_PACKAGE_REPLACED))
             return;
 
         if (!SyncthingService.alwaysRunInBackground(context))
             return;
 
         context.startService(new Intent(context, SyncthingService.class));
     }
-
 }

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/NetworkReceiverTest.java
Patch:
@@ -55,7 +55,7 @@ public void testOnReceive() {
         Intent receivedIntent = mContext.getReceivedIntents().get(0);
         Assert.assertEquals(SyncthingService.class.getName(), receivedIntent.getComponent().getClassName());
         Assert.assertNull(receivedIntent.getAction());
-        Assert.assertTrue(receivedIntent.hasExtra(DeviceStateHolder.EXTRA_HAS_WIFI));
+        Assert.assertTrue(receivedIntent.hasExtra(DeviceStateHolder.EXTRA_IS_ALLOWED_NETWORK_CONNECTION));
         mContext.clearReceivedIntents();
     }
 

File: src/main/java/com/nutomic/syncthingandroid/activities/StateDialogActivity.java
Patch:
@@ -73,9 +73,8 @@ private void showDisabledDialog() {
                 .setNegativeButton(R.string.exit,
                         (dialogInterface, i) -> ActivityCompat.finishAffinity(this)
                 )
-                .setOnCancelListener(dialogInterface -> ActivityCompat.finishAffinity(this))
+                .setCancelable(false)
                 .show();
-        mDisabledDialog.setCanceledOnTouchOutside(false);
     }
 
     private void dismissDisabledDialog() {

File: src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.ServiceConnection;
 import android.os.IBinder;
 
+import com.annimon.stream.Stream;
 import com.nutomic.syncthingandroid.service.RestApi;
 import com.nutomic.syncthingandroid.service.SyncthingService;
 import com.nutomic.syncthingandroid.service.SyncthingServiceBinder;
@@ -46,7 +47,7 @@ protected void onResume() {
     public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
         SyncthingServiceBinder binder = (SyncthingServiceBinder) iBinder;
         mSyncthingService = binder.getService();
-        mServiceConnectedListeners.forEach(OnServiceConnectedListener::onServiceConnected);
+        Stream.of(mServiceConnectedListeners).forEach(OnServiceConnectedListener::onServiceConnected);
         mServiceConnectedListeners.clear();
     }
 

File: src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -40,7 +40,7 @@
  * {@link #getDisplayNameForUri} and {@link #getDisplayNameFromContentResolver} are taken from
  * ownCloud Android {@see https://github.com/owncloud/android/blob/79664304fdb762b2e04f1ac505f50d0923ddd212/src/com/owncloud/android/utils/UriUtils.java#L193}
  */
-public class ShareActivity extends SyncthingActivity
+public class ShareActivity extends StateDialogActivity
         implements SyncthingActivity.OnServiceConnectedListener, SyncthingService.OnApiChangeListener {
 
     private static final String TAG = "ShareActivity";

File: src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -36,7 +36,7 @@
 /**
  * Holds a WebView that shows the web ui of the local syncthing instance.
  */
-public class WebGuiActivity extends SyncthingActivity
+public class WebGuiActivity extends StateDialogActivity
         implements SyncthingService.OnWebGuiAvailableListener {
 
     private static final String TAG = "WebGuiActivity";

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -11,7 +11,6 @@
 
 import java.net.URL;
 import java.util.List;
-import java.util.Map;
 
 public class MockRestApi extends RestApi {
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/FolderObserverTest.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.test.rule.ServiceTestRule;
 
 import com.nutomic.syncthingandroid.model.Folder;
-import com.nutomic.syncthingandroid.service.RestApi;
 import com.nutomic.syncthingandroid.test.MockContext;
 import com.nutomic.syncthingandroid.test.Util;
 import com.nutomic.syncthingandroid.util.FolderObserver;

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderActivity.java
Patch:
@@ -15,7 +15,6 @@
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.view.View;
 import android.view.ViewGroup;
 import android.widget.CompoundButton;
 import android.widget.EditText;
@@ -31,8 +30,6 @@
 import com.nutomic.syncthingandroid.service.SyncthingService;
 import com.nutomic.syncthingandroid.util.TextWatcherAdapter;
 
-import org.w3c.dom.Text;
-
 import java.util.List;
 import java.util.Random;
 import java.util.Map;

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -43,9 +43,7 @@
 public class FolderPickerActivity extends SyncthingActivity
         implements AdapterView.OnItemClickListener, SyncthingService.OnApiChangeListener {
 
-    private static final String TAG = "FolderPickerActivity";
-
-    public static final String EXTRA_INITIAL_DIRECTORY =
+    private static final String EXTRA_INITIAL_DIRECTORY =
             "com.nutomic.syncthingandroid.activities.FolderPickerActivity.INITIAL_DIRECTORY";
 
     public static final String EXTRA_RESULT_DIRECTORY =

File: src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -210,8 +210,8 @@ private String getDisplayNameFromContentResolver(Uri uri) {
 
     private class CopyFilesTask extends AsyncTask<Void, Void, Boolean> {
         private ProgressDialog mProgress;
-        private Map<Uri, String> mFiles;
-        private Folder mFolder;
+        private final Map<Uri, String> mFiles;
+        private final Folder mFolder;
         private int mCopied = 0, mIgnored = 0;
 
         CopyFilesTask(Map<Uri, String> files, Folder folder) {

File: src/main/java/com/nutomic/syncthingandroid/activities/VersioningDialogActivity.java
Patch:
@@ -24,7 +24,7 @@ public class VersioningDialogActivity extends AppCompatActivity {
 
     private Fragment mCurrentFragment;
 
-    private List<String> mTypes = Arrays.asList("none", "trashcan", "simple", "staggered", "external");
+    private static final List<String> mTypes = Arrays.asList("none", "trashcan", "simple", "staggered", "external");
 
     private Bundle mArguments;
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/dialog/StaggeredVersioningFragment.java
Patch:
@@ -5,8 +5,6 @@
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.text.Editable;
-import android.text.TextWatcher;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: src/main/java/com/nutomic/syncthingandroid/http/PollWebGuiAvailableTask.java
Patch:
@@ -16,8 +16,6 @@
  */
 public class PollWebGuiAvailableTask extends ApiRequest {
 
-    private static final String TAG = "PollWebGuiAvailableTask";
-
     /**
      * Interval in ms, at which connections to the web gui are performed on first start
      * to find out if it's online.

File: src/main/java/com/nutomic/syncthingandroid/model/Device.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.text.TextUtils;
 
-import java.io.Serializable;
 import java.util.List;
 
 public class Device {

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -15,7 +15,7 @@ public class Folder {
     public String label;
     public String path;
     public String type;
-    public List<Device> devices = new ArrayList<>();
+    private List<Device> devices = new ArrayList<>();
     public int rescanIntervalS;
     public final boolean ignorePerms = true;
     public boolean autoNormalize = true;

File: src/main/java/com/nutomic/syncthingandroid/service/DeviceStateHolder.java
Patch:
@@ -91,7 +91,7 @@ public void update(Intent intent) {
         }
     }
 
-    public void updateWifiSsid() {
+    private void updateWifiSsid() {
         mWifiSsid = null;
         WifiManager wifiManager =
                 (WifiManager) mContext.getApplicationContext().getSystemService(Context.WIFI_SERVICE);

File: src/main/java/com/nutomic/syncthingandroid/service/EventProcessor.java
Patch:
@@ -39,7 +39,7 @@ public class EventProcessor implements SyncthingService.OnWebGuiAvailableListene
      * Minimum interval in seconds at which the events are polled from syncthing and processed.
      * This intervall will not wake up the device to save battery power.
      */
-    public static final long EVENT_UPDATE_INTERVAL = TimeUnit.SECONDS.toMillis(15);
+    private static final long EVENT_UPDATE_INTERVAL = TimeUnit.SECONDS.toMillis(15);
 
     /**
      * Use the MainThread for all callbacks and message handling

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.os.Build;
 import android.os.Environment;
-import android.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -21,7 +20,6 @@
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URL;
-import java.security.SecureRandom;
 import java.util.Locale;
 
 import javax.xml.parsers.DocumentBuilder;

File: src/main/java/com/nutomic/syncthingandroid/views/DevicesAdapter.java
Patch:
@@ -79,7 +79,7 @@ public void updateConnections(RestApi api) {
         }
     }
 
-    public void onReceiveConnections(Connections connections) {
+    private void onReceiveConnections(Connections connections) {
         mConnections = connections;
         notifyDataSetChanged();
     }

File: src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -104,7 +104,7 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
     /**
      * Returns the folder's state as a localized string.
      */
-    public static String getLocalizedState(Context c, String state, int percentage) {
+    private static String getLocalizedState(Context c, String state, int percentage) {
         switch (state) {
             case "idle":     return c.getString(R.string.state_idle);
             case "scanning": return c.getString(R.string.state_scanning);
@@ -129,7 +129,7 @@ public void updateModel(RestApi api) {
         }
     }
 
-    public void onReceiveModel(String folderId, Model model) {
+    private void onReceiveModel(String folderId, Model model) {
         mModels.put(folderId, model);
         notifyDataSetChanged();
     }

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -77,7 +77,8 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
      */
     private void updateList() {
         SyncthingActivity activity = (SyncthingActivity) getActivity();
-        if (activity.getApi() == null || !activity.getApi().isConfigLoaded() || getView() == null || activity.isFinishing())
+        if (activity == null || activity.getApi() == null || !activity.getApi().isConfigLoaded() ||
+                getView() == null || activity.isFinishing())
             return;
 
         if (mAdapter == null) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -72,7 +72,8 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
      */
     private void updateList() {
         SyncthingActivity activity = (SyncthingActivity) getActivity();
-        if (activity.getApi() == null || !activity.getApi().isConfigLoaded() || getView() == null || activity.isFinishing())
+        if (activity == null || activity.getApi() == null || !activity.getApi().isConfigLoaded() ||
+                getView() == null || activity.isFinishing())
             return;
 
         if (mAdapter == null) {

File: src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -87,9 +87,7 @@ public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError e
         }
 
         public void onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, String host, String realm) {
-            String password = PreferenceManager.getDefaultSharedPreferences(WebGuiActivity.this)
-                    .getString("web_gui_password", "");
-            handler.proceed(mConfig.getUserName(), password);
+            handler.proceed(mConfig.getUserName(), mConfig.getApiKey());
         }
 
         @Override

File: src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -85,8 +85,8 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
                 }
             }
             binding.items.setVisibility(VISIBLE);
-            binding.items.setText(getContext()
-                    .getString(R.string.files, model.inSyncFiles, model.globalFiles));
+            binding.items.setText(getContext().getResources()
+                    .getQuantityString(R.plurals.files, (int) model.inSyncFiles, model.inSyncFiles, model.globalFiles));
             binding.size.setVisibility(VISIBLE);
             binding.size.setText(getContext().getString(R.string.folder_size_format,
                     Util.readableFileSize(getContext(), model.inSyncBytes),

File: src/main/java/com/nutomic/syncthingandroid/model/Model.java
Patch:
@@ -12,6 +12,8 @@ public class Model {
     public long needBytes;
     public long needFiles;
     public long needDeletes;
+    public long needDirectories;
+    public long needSymlinks;
     public String state;
     public String invalid;
 }

File: src/main/java/com/nutomic/syncthingandroid/views/FoldersAdapter.java
Patch:
@@ -63,8 +63,8 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
         });
 
         if (model != null) {
-            int percentage = (model.localBytes != 0)
-                    ? Math.round(100 * model.inSyncBytes / model.localBytes)
+            int percentage = (model.globalBytes != 0)
+                    ? Math.round(100 * model.inSyncBytes / model.globalBytes)
                     : 100;
             binding.state.setText(getLocalizedState(getContext(), model.state, percentage));
             binding.items.setVisibility(VISIBLE);

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -77,7 +77,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
      */
     private void updateList() {
         SyncthingActivity activity = (SyncthingActivity) getActivity();
-        if (activity.getApi() == null || getView() == null || activity.isFinishing())
+        if (activity.getApi() == null || !activity.getApi().isConfigLoaded() || getView() == null || activity.isFinishing())
             return;
 
         if (mAdapter == null) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -72,7 +72,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
      */
     private void updateList() {
         SyncthingActivity activity = (SyncthingActivity) getActivity();
-        if (activity.getApi() == null || getView() == null || activity.isFinishing())
+        if (activity.getApi() == null || !activity.getApi().isConfigLoaded() || getView() == null || activity.isFinishing())
             return;
 
         if (mAdapter == null) {

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -319,7 +319,7 @@ public void onCreate() {
         // Android 7 ignores network receiver that was set in manifest
         // https://github.com/syncthing/syncthing-android/issues/783
         // https://developer.android.com/about/versions/nougat/android-7.0-changes.html#bg-opt
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.N) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             registerReceiver(mNetworkReceiver,
                     new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));
         }
@@ -414,7 +414,7 @@ public void onDestroy() {
         sp.unregisterOnSharedPreferenceChangeListener(this);
         if (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB)
             unregisterReceiver(mPowerSaveModeChangedReceiver);
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.N)
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
             unregisterReceiver(mNetworkReceiver);
     }
 

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -29,10 +29,11 @@ public class Folder {
     public int scanProgressIntervalS;
     public int pullerSleepS;
     public int pullerPauseS;
-    public int maxConflicts;
+    public int maxConflicts = 10;
     public boolean disableSparseFiles;
     public boolean disableTempIndexes;
     public String invalid;
+    public boolean fsync = true;
 
     public static class Versioning implements Serializable {
         public String type;

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -18,7 +18,7 @@ public class Folder {
     public List<Device> devices = new ArrayList<>();
     public int rescanIntervalS;
     public final boolean ignorePerms = true;
-    public boolean autoNormalize;
+    public boolean autoNormalize = true;
     public MinDiskFree minDiskFree;
     public Versioning versioning;
     public int copiers;

File: src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -233,7 +233,7 @@ public boolean onSyncthingPreferenceChange(Preference preference, Object o) {
                     mOptions.listenAddresses = Iterables.toArray(splitter.split((String) o), String.class);
                     break;
                 case "maxRecvKbps":           mOptions.maxRecvKbps = Integer.parseInt((String) o); break;
-                case "maxSendKbps":           mOptions.maxRecvKbps = Integer.parseInt((String) o); break;
+                case "maxSendKbps":           mOptions.maxSendKbps = Integer.parseInt((String) o); break;
                 case "natEnabled":            mOptions.natEnabled = (boolean) o;                   break;
                 case "localAnnounceEnabled":  mOptions.localAnnounceEnabled = (boolean) o;         break;
                 case "globalAnnounceEnabled": mOptions.globalAnnounceEnabled = (boolean) o;        break;

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -40,7 +40,7 @@ public static class Versioning implements Serializable {
     }
 
     public static class MinDiskFree {
-        public int value;
+        public float value;
         public String unit;
     }
 

File: src/main/java/com/nutomic/syncthingandroid/activities/ShareActivity.java
Patch:
@@ -228,9 +228,8 @@ protected Boolean doInBackground(Void... params) {
             boolean isError = false;
             for (Map.Entry<Uri, String> entry : mFiles.entrySet()) {
                 InputStream inputStream = null;
-                String outPath = mFolder.path + entry.getValue();
                 try {
-                    File outFile = new File(outPath);
+                    File outFile = new File(mFolder.path, entry.getValue());
                     if (outFile.isFile()) {
                         mIgnored++;
                         continue;

File: src/main/java/com/nutomic/syncthingandroid/views/EnhancedEditText.java
Patch:
@@ -1,11 +1,11 @@
 package com.nutomic.syncthingandroid.views;
 
 import android.content.Context;
+import android.support.v7.widget.AppCompatEditText;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.inputmethod.EditorInfo;
 import android.view.inputmethod.InputConnection;
-import android.widget.EditText;
 
 import static android.view.inputmethod.EditorInfo.IME_FLAG_NO_ENTER_ACTION;
 
@@ -18,7 +18,7 @@
  * of the IME action button with the new line character. This allows rendering soft wraps on single
  * line input.
  */
-public class EnhancedEditText extends EditText {
+public class EnhancedEditText extends AppCompatEditText {
 
     public EnhancedEditText(Context context) {
         super(context);

File: src/main/java/com/nutomic/syncthingandroid/views/WifiSsidPreference.java
Patch:
@@ -109,7 +109,8 @@ private CharSequence[] extractSsid(WifiConfiguration[] configs, boolean stripQuo
      * @return a sorted array of WifiConfiguration, or null, if data cannot be retrieved
      */
     private WifiConfiguration[] loadConfiguredNetworksSorted() {
-        WifiManager wifiManager = (WifiManager) getContext().getSystemService(Context.WIFI_SERVICE);
+        WifiManager wifiManager = (WifiManager)
+                getContext().getApplicationContext().getSystemService(Context.WIFI_SERVICE);
         if (wifiManager != null) {
             List<WifiConfiguration> configuredNetworks = wifiManager.getConfiguredNetworks();
             // if WiFi is turned off, getConfiguredNetworks returns null on many devices

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -17,7 +17,7 @@ public class Folder {
     public int rescanIntervalS;
     public final boolean ignorePerms = true;
     public boolean autoNormalize;
-    public int minDiskFreePct;
+    public float minDiskFreePct;
     public Versioning versioning;
     public int copiers;
     public int pullers;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/RestApiTest.java
Patch:
@@ -39,10 +39,10 @@ public void setUp() throws Exception {
         String httpsCertPath = context.getFilesDir() + "/" + SyncthingService.HTTPS_CERT_FILE;
 
         final CountDownLatch latch = new CountDownLatch(2);
-        new PollWebGuiAvailableTask(config.getWebGuiUrl(), httpsCertPath, config.getApiKey(), result -> {
+        new PollWebGuiAvailableTask(context, config.getWebGuiUrl(), httpsCertPath, config.getApiKey(), result -> {
             mApi.onWebGuiAvailable();
             latch.countDown();
-        }).execute();
+        });
         mApi = new RestApi(context, config.getWebGuiUrl(), config.getApiKey(),
                 new RestApi.OnApiAvailableListener() {
                     @Override

File: src/main/java/com/nutomic/syncthingandroid/views/DevicesAdapter.java
Patch:
@@ -45,7 +45,9 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
 
         name.setText(getItem(position).getDisplayName());
         Resources r = getContext().getResources();
-        if (mConnections != null && mConnections.connections.get(deviceId).connected) {
+        boolean haveInfo = mConnections != null && mConnections.connections.containsKey(deviceId) &&
+                mConnections.connections.get(deviceId).connected;
+        if (haveInfo) {
             Connections.Connection conn = mConnections.connections.get(deviceId);
             if (conn.completion == 100) {
                 status.setText(r.getString(R.string.device_up_to_date));

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -491,7 +491,7 @@ public void unregisterOnApiChangeListener(OnApiChangeListener listener) {
      * for SyncthingService.onDestroy for details.
      */
     private void pollWebGui() {
-        new PollWebGuiAvailableTask(getWebGuiUrl(), getFilesDir() + "/" + HTTPS_CERT_FILE,
+        new PollWebGuiAvailableTask(this, getWebGuiUrl(), getFilesDir() + "/" + HTTPS_CERT_FILE,
                                     mConfig.getApiKey(), result -> {
             synchronized (stateLock) {
                 if (mStopScheduled) {
@@ -510,7 +510,7 @@ private void pollWebGui() {
                 listener.onWebGuiAvailable();
             }
             mOnWebGuiAvailableListeners.clear();
-        }).execute();
+        });
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -62,7 +62,7 @@ public class SyncthingService extends Service implements
     /**
      * Interval in ms at which the GUI is updated (eg {@link com.nutomic.syncthingandroid.fragments.DrawerFragment}).
      */
-    public static final long GUI_UPDATE_INTERVAL = TimeUnit.SECONDS.toMillis(10);
+    public static final long GUI_UPDATE_INTERVAL = TimeUnit.SECONDS.toMillis(1);
 
     /**
      * name of the public key file in the data directory.

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -15,7 +15,7 @@ public class Folder {
     public String type;
     public List<Device> devices = new ArrayList<>();
     public int rescanIntervalS;
-    public boolean ignorePerms;
+    public final boolean ignorePerms = true;
     public boolean autoNormalize;
     public int minDiskFreePct;
     public Versioning versioning;

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingRunnable.java
Patch:
@@ -151,7 +151,6 @@ public void run() {
 
             switch (ret) {
                 case 0:
-                case 2:
                 case 4:
                     // Valid exit codes, ignored.
                     break;

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -123,9 +123,9 @@ private String getLog(final boolean syncthingLog) {
         try {
             ProcessBuilder pb;
             if (syncthingLog) {
-                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-s", "SyncthingNativeCode");
+                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-v", "raw", "-s", "SyncthingNativeCode");
             } else {
-                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "'*'");
+                pb = new ProcessBuilder("/system/bin/logcat", "-t", "300", "-v", "time", "'*'");
             }
             pb.redirectErrorStream(true);
             process = pb.start();

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.Serializable;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -33,7 +34,7 @@ public class Folder {
 
     public static class Versioning implements Serializable {
         public String type;
-        public Map<String, String> params;
+        public Map<String, String> params = new HashMap<>();
     }
 
     public void addDevice(String deviceId) {

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -51,7 +51,7 @@ public List<Folder> getFolders() {
     }
 
     @Override
-    public void getConnections(OnResultListener1<Map<String, Connections>> listener) {
+    public void getConnections(OnResultListener1<Connections> listener) {
         throw new UnsupportedOperationException();
     }
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -38,7 +38,9 @@ public class DeviceListFragment extends ListFragment implements SyncthingService
     @Override
     public void onPause() {
         super.onPause();
-        mTimer.cancel();
+        if (mTimer != null) {
+            mTimer.cancel();
+        }
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -138,7 +138,7 @@ public void onValueChange(int intValue) {
         @Override
         public void onClick(View v) {
             Intent intent = new Intent(getActivity(), FolderPickerActivity.class);
-            if (mFolder.path.length() > 0) {
+            if (!TextUtils.isEmpty(mFolder.path)) {
                 intent.putExtra(FolderPickerActivity.EXTRA_INITIAL_DIRECTORY, mFolder.path);
             }
             startActivityForResult(intent, DIRECTORY_REQUEST_CODE);

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -46,7 +46,9 @@ public class FolderListFragment extends ListFragment implements SyncthingService
     @Override
     public void onPause() {
         super.onPause();
-        mTimer.cancel();
+        if (mTimer != null) {
+            mTimer.cancel();
+        }
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -38,7 +38,9 @@ public class DeviceListFragment extends ListFragment implements SyncthingService
     @Override
     public void onPause() {
         super.onPause();
-        mTimer.cancel();
+        if (mTimer != null) {
+            mTimer.cancel();
+        }
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -138,7 +138,7 @@ public void onValueChange(int intValue) {
         @Override
         public void onClick(View v) {
             Intent intent = new Intent(getActivity(), FolderPickerActivity.class);
-            if (mFolder.path.length() > 0) {
+            if (!TextUtils.isEmpty(mFolder.path)) {
                 intent.putExtra(FolderPickerActivity.EXTRA_INITIAL_DIRECTORY, mFolder.path);
             }
             startActivityForResult(intent, DIRECTORY_REQUEST_CODE);

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -46,7 +46,9 @@ public class FolderListFragment extends ListFragment implements SyncthingService
     @Override
     public void onPause() {
         super.onPause();
-        mTimer.cancel();
+        if (mTimer != null) {
+            mTimer.cancel();
+        }
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -568,7 +568,8 @@ public boolean importConfig() {
             Log.w(TAG, "Failed to import config", e);
         }
         mCurrentState = State.INIT;
-        updateState();
+        onApiChange();
+        new StartupTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
         return true;
     }
 }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -128,6 +128,7 @@ public void onValueChange(int intValue) {
                 mFolder.versioning = new Folder.Versioning();
                 mVersioningKeepView.setText(R.string.off);
             } else {
+                mFolder.versioning.type = "simple";
                 mFolder.versioning.params.put("keep", valueOf(intValue));
                 mVersioningKeepView.setText(valueOf(intValue));
             }

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -165,7 +165,7 @@ public void onApiChange(SyncthingService.State currentState) {
         mGui = mApi.getGui();
 
         Joiner joiner = Joiner.on(", ");
-        //mDeviceName.setTitle(mApi.getLocalDevice().name);
+        mDeviceName.setText(mApi.getLocalDevice().name);
         mListenAddresses.setText(joiner.join(mOptions.listenAddresses));
         mMaxRecvKbps.setText(Integer.toString(mOptions.maxRecvKbps));
         mMaxSendKbps.setText(Integer.toString(mOptions.maxSendKbps));

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -282,7 +282,8 @@ public void addFolder(Folder folder) {
 
     public void editDevice(Device newDevice) {
         removeDeviceInternal(newDevice.deviceID);
-        addDevice(newDevice, null);
+        mConfig.devices.add(newDevice);
+        sendConfig();
     }
 
     public void editFolder(Folder newFolder) {

File: src/main/java/com/nutomic/syncthingandroid/model/Folder.java
Patch:
@@ -12,7 +12,7 @@ public class Folder {
     public String label;
     public String path;
     public String type;
-    private transient List<Map<String, String>> devices;
+    private transient List<Map<String, String>> devices = new ArrayList<>();
     public int rescanIntervalS;
     public boolean ignorePerms;
     public boolean autoNormalize;
@@ -47,9 +47,9 @@ public List<String> getDevices() {
         return devicesList;
     }
 
-    public void setDevices(List<String> newDvices) {
+    public void setDevices(List<String> newDevices) {
         devices.clear();
-        for (String d : newDvices) {
+        for (String d : newDevices) {
             Map<String, String> map = new HashMap<>();
             map.put("deviceID", d);
             devices.add(map);

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -104,7 +104,9 @@ private void populateRoots() {
         roots.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES));
         roots.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS));
         roots.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM));
-        roots.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            roots.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));
+        }
 
         // Add paths that might not be accessible to Syncthing.
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -118,7 +118,7 @@ public void run() {
             // Set home directory to data folder for web GUI folder picker.
             env.put("HOME", Environment.getExternalStorageDirectory().getAbsolutePath());
             env.put("STTRACE", sp.getString("sttrace", ""));
-            env.put("STGUIASSETS", getExternalFilesDir(null).getAbsolutePath() + "/gui");
+            env.put("STGUIASSETS", mContext.getExternalFilesDir(null).getAbsolutePath() + "/gui");
             env.put("STNORESTART", "1");
             env.put("STNOUPGRADE", "1");
             if (sp.getBoolean("use_tor", false)) {

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -2,8 +2,8 @@
 
 import android.app.Activity;
 import android.content.Context;
-
 import android.support.annotation.NonNull;
+
 import com.nutomic.syncthingandroid.syncthing.RestApi;
 
 import java.net.URL;

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -128,7 +128,7 @@ private long getFirstStartTime() {
      * Shows the loading dialog with the correct text ("creating keys" or "loading").
      */
     private void showLoadingDialog() {
-        if (mLoadingDialog != null)
+        if (isFinishing() || mLoadingDialog != null)
             return;
 
         LayoutInflater inflater = getLayoutInflater();

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -264,7 +264,7 @@ public boolean onPreferenceChange(Preference preference, Object o) {
 
         // Avoid any code injection.
         if (preference.getKey().equals(STTRACE)) {
-            if (((String) o).matches("[a-z, ]*"))
+            if (((String) o).matches("[0-9a-z, ]*"))
                 requireRestart = true;
             else {
                 Toast.makeText(getActivity(), R.string.toast_invalid_sttrace, Toast.LENGTH_SHORT).show();

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -264,7 +264,7 @@ public boolean onPreferenceChange(Preference preference, Object o) {
 
         // Avoid any code injection.
         if (preference.getKey().equals(STTRACE)) {
-            if (((String) o).matches("[a-z, ]*"))
+            if (((String) o).matches("[0-9a-z, ]*"))
                 requireRestart = true;
             else {
                 Toast.makeText(getActivity(), R.string.toast_invalid_sttrace, Toast.LENGTH_SHORT).show();

File: src/main/java/com/android/PRNGFixes.java
Patch:
@@ -1,4 +1,4 @@
-package com.nutomic.syncthingandroid.util;
+package com.android;
 
 /*
  * This software is provided 'as-is', without any express or implied

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -25,7 +25,7 @@
 import com.nutomic.syncthingandroid.http.PollWebGuiAvailableTask;
 import com.nutomic.syncthingandroid.util.ConfigXml;
 import com.nutomic.syncthingandroid.util.FolderObserver;
-import com.nutomic.syncthingandroid.util.PRNGFixes;
+import com.android.PRNGFixes;
 
 import java.io.File;
 import java.io.FileInputStream;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockContext.java
Patch:
@@ -15,8 +15,8 @@
  */
 public class MockContext extends ContextWrapper {
 
-    private ArrayList<Intent> mReceivedIntents = new ArrayList<>();
-    private ArrayList<Intent> mStopServiceIntents = new ArrayList<>();
+    private final ArrayList<Intent> mReceivedIntents = new ArrayList<>();
+    private final ArrayList<Intent> mStopServiceIntents = new ArrayList<>();
 
     /**
      * Use the actual context for calls that aren't easily mocked. May be null if those

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Activity;
 import android.content.Context;
 
+import android.support.annotation.NonNull;
 import com.nutomic.syncthingandroid.syncthing.RestApi;
 
 import java.util.ArrayList;
@@ -65,7 +66,7 @@ public void getModel(final String folderId, final OnReceiveModelListener listene
     }
 
     @Override
-    public void editDevice(Device device, Activity activity, OnDeviceIdNormalizedListener listener) {
+    public void editDevice(@NonNull Device device, Activity activity, OnDeviceIdNormalizedListener listener) {
         throw new UnsupportedOperationException();
     }
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockSyncthingService.java
Patch:
@@ -10,7 +10,7 @@
 
 public class MockSyncthingService extends SyncthingService {
 
-    private LinkedList<OnApiChangeListener> mOnApiChangedListeners = new LinkedList<>();
+    private final LinkedList<OnApiChangeListener> mOnApiChangedListeners = new LinkedList<>();
 
     @Override
     public int onStartCommand(Intent intent, int flags, int startId) {

File: src/androidTest/java/com/nutomic/syncthingandroid/test/activities/MainActivityTest.java
Patch:
@@ -10,7 +10,7 @@
 
 public class MainActivityTest extends ActivityInstrumentationTestCase2<MainActivity> {
 
-    private MockSyncthingService mService = new MockSyncthingService();
+    private final MockSyncthingService mService = new MockSyncthingService();
 
     public MainActivityTest() {
         super(MainActivity.class);

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/BatteryReceiverTest.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Intent;
 import android.preference.PreferenceManager;
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.BatteryReceiver;
 import com.nutomic.syncthingandroid.syncthing.DeviceStateHolder;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/BootReceiverTest.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Intent;
 import android.preference.PreferenceManager;
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.BootReceiver;
 import com.nutomic.syncthingandroid.syncthing.SyncthingService;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/DeviceStateHolderTest.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Intent;
 import android.os.BatteryManager;
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.DeviceStateHolder;
 import com.nutomic.syncthingandroid.test.MockContext;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/GetTaskTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.net.Uri;
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.GetTask;
 import com.nutomic.syncthingandroid.syncthing.RestApi;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/NetworkReceiverTest.java
Patch:
@@ -4,7 +4,6 @@
 import android.net.ConnectivityManager;
 import android.preference.PreferenceManager;
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.DeviceStateHolder;
 import com.nutomic.syncthingandroid.syncthing.NetworkReceiver;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/SyncthingRunnableTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.nutomic.syncthingandroid.test.syncthing;
 
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.SmallTest;
 
 import com.nutomic.syncthingandroid.syncthing.SyncthingRunnable;
 import com.nutomic.syncthingandroid.test.MockContext;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/SyncthingServiceBinderTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.nutomic.syncthingandroid.test.syncthing;
 
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.SmallTest;
 
 import com.nutomic.syncthingandroid.syncthing.SyncthingService;
 import com.nutomic.syncthingandroid.syncthing.SyncthingServiceBinder;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/FolderObserverTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.nutomic.syncthingandroid.test.util;
 
 import android.test.AndroidTestCase;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.nutomic.syncthingandroid.syncthing.RestApi;
 import com.nutomic.syncthingandroid.test.MockContext;

File: src/main/java/com/nutomic/syncthingandroid/activities/FirstStartActivity.java
Patch:
@@ -17,8 +17,6 @@
 
 public class FirstStartActivity extends Activity implements Button.OnClickListener {
 
-    private static final String TAG = "FirstStartActivity";
-
     private static final int REQUEST_WRITE_STORAGE = 142;
 
     private SharedPreferences mPreferences;

File: src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -20,7 +20,7 @@ public abstract class SyncthingActivity extends ToolbarBindingActivity implement
 
     private SyncthingService mSyncthingService;
 
-    private LinkedList<OnServiceConnectedListener> mServiceConnectedListeners = new LinkedList<>();
+    private final LinkedList<OnServiceConnectedListener> mServiceConnectedListeners = new LinkedList<>();
 
     /**
      * To be used for Fragments.

File: src/main/java/com/nutomic/syncthingandroid/syncthing/DeviceStateHolder.java
Patch:
@@ -40,7 +40,7 @@ public class DeviceStateHolder extends BroadcastReceiver {
     public static final String EXTRA_IS_CHARGING =
             "com.nutomic.syncthingandroid.syncthing.DeviceStateHolder.IS_CHARGING";
 
-    private Context mContext;
+    private final Context mContext;
 
     private boolean mIsWifiConnected = false;
 
@@ -132,7 +132,7 @@ private boolean isAllowedWifiConnected() {
         boolean wifiConnected = isWifiConnected();
         if (wifiConnected) {
             SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext);
-            Set<String> ssids = sp.getStringSet(SyncthingService.PREF_SYNC_ONLY_WIFI_SSIDS, new HashSet<String>());
+            Set<String> ssids = sp.getStringSet(SyncthingService.PREF_SYNC_ONLY_WIFI_SSIDS, new HashSet<>());
             if (ssids.isEmpty()) {
                 Log.d(TAG, "All SSIDs allowed for syncing");
                 return true;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/EventProcessor.java
Patch:
@@ -70,7 +70,7 @@ public void run() {
         // If that's the case we've to start at zero because syncthing was restarted.
         mApi.getEvents(0, 1, new RestApi.OnReceiveEventListener() {
             @Override
-            public void onEvent(long id, String eventType, JSONObject data) throws JSONException {
+            public void onEvent(String eventType, JSONObject data) throws JSONException {
 
             }
 
@@ -89,7 +89,7 @@ public void onDone(long lastId) {
      * Performs the actual event handling.
      */
     @Override
-    public void onEvent(long id, String type, JSONObject data) throws JSONException {
+    public void onEvent(String type, JSONObject data) throws JSONException {
         switch (type) {
             case "DeviceRejected":
                 String deviceId = data.getString("device");
@@ -159,7 +159,7 @@ public void onDone(long id) {
             final SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext);
 
             //noinspection CommitPrefEdits
-            sp.edit().putLong(PREF_LAST_SYNC_ID, mLastEventId).commit();
+            sp.edit().putLong(PREF_LAST_SYNC_ID, mLastEventId).apply();
         }
 
         synchronized (mMainThreadHandler) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -38,7 +38,7 @@ public class GetTask extends AsyncTask<String, Void, String> {
     public static final String URI_REPORT      = "/rest/svc/report";
     public static final String URI_EVENTS      = "/rest/events";
 
-    private String mHttpsCertPath;
+    private final String mHttpsCertPath;
 
     public GetTask(String httpsCertPath) {
         mHttpsCertPath = httpsCertPath;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PollWebGuiAvailableTask.java
Patch:
@@ -28,14 +28,14 @@ public abstract class PollWebGuiAvailableTask extends AsyncTask<String, Void, Vo
      */
     private static final long WEB_GUI_POLL_INTERVAL = 100;
 
-    private String mHttpsCertPath;
+    private final String mHttpsCertPath;
 
     public PollWebGuiAvailableTask(String httpsCertPath) {
         mHttpsCertPath = httpsCertPath;
     }
 
     /**
-     * @param @url The URL of the web GUI (eg 127.0.0.1:8384).
+     * @param url The URL of the web GUI (eg 127.0.0.1:8384).
      */
     @Override
     protected Void doInBackground(String... url) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostConfigTask.java
Patch:
@@ -22,7 +22,7 @@ public class PostConfigTask extends AsyncTask<String, Void, Boolean> {
 
     public static final String URI_CONFIG = "/rest/system/config";
 
-    private String mHttpsCertPath;
+    private final String mHttpsCertPath;
 
     public PostConfigTask(String httpsCertPath) {
         mHttpsCertPath = httpsCertPath;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostScanTask.java
Patch:
@@ -26,7 +26,7 @@ public class PostScanTask extends AsyncTask<String, Void, Void> {
 
     public static final String URI_SCAN = "/rest/db/scan";
 
-    private String mHttpsCertPath;
+    private final String mHttpsCertPath;
 
     public PostScanTask(String httpsCertPath) {
         mHttpsCertPath = httpsCertPath;

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -63,7 +63,7 @@ public class OpenConfigException extends RuntimeException {
 
     private final Context mContext;
 
-    private File mConfigFile;
+    private final File mConfigFile;
 
     private Document mConfig;
 

File: src/main/java/com/nutomic/syncthingandroid/util/CustomX509TrustManager.java
Patch:
@@ -1,5 +1,6 @@
 package com.nutomic.syncthingandroid.util;
 
+import android.annotation.SuppressLint;
 import android.util.Log;
 
 import org.apache.http.conn.ssl.SSLSocketFactory;
@@ -61,13 +62,14 @@ public Socket createSocket() throws IOException {
         }
     }
 
-    private String mHttpsCertPath;
+    private final String mHttpsCertPath;
 
     public CustomX509TrustManager(String httpsCertPath) {
         mHttpsCertPath = httpsCertPath;
     }
 
     @Override
+    @SuppressLint("TrustAllX509TrustManager")
     public void checkClientTrusted(X509Certificate[] chain, String authType)
             throws CertificateException {
     }

File: src/main/java/com/nutomic/syncthingandroid/util/FoldersAdapter.java
Patch:
@@ -24,8 +24,8 @@
 public class FoldersAdapter extends ArrayAdapter<RestApi.Folder>
         implements RestApi.OnReceiveModelListener {
 
-    private HashMap<String, RestApi.Model> mModels = new HashMap<>();
-    private LayoutInflater mInflater;
+    private final HashMap<String, RestApi.Model> mModels = new HashMap<>();
+    private final LayoutInflater mInflater;
 
     public FoldersAdapter(Context context) {
         super(context, R.layout.item_folder_list);

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -11,9 +11,8 @@
 public class MockRestApi extends RestApi {
 
     public MockRestApi(Context context, String url, String apiKey,
-                       String guiUser, String guiPassword,
                        OnApiAvailableListener listener) {
-        super(context, url, apiKey, guiUser, guiPassword, listener, null);
+        super(context, url, apiKey, listener, null);
     }
 
     @Override

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockSyncthingService.java
Patch:
@@ -49,7 +49,7 @@ public boolean isFirstStart() {
 
     @Override
     public RestApi getApi() {
-        return new MockRestApi(this, null, null, null, null, null);
+        return new MockRestApi(this, null, null, null);
     }
 
     @Override

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/RestApiTest.java
Patch:
@@ -26,7 +26,6 @@ protected void setUp() throws Exception {
         new SyncthingRunnable(new MockContext(getContext()), SyncthingRunnable.Command.main);
 
         ConfigXml config = new ConfigXml(new MockContext(getContext()));
-        config.changeDefaultFolder();
 
         String httpsCertPath = getContext().getFilesDir() + "/" + SyncthingService.HTTPS_CERT_FILE;
 
@@ -39,7 +38,6 @@ protected void onPostExecute(Void aVoid) {
             }
         }.execute(config.getWebGuiUrl());
         mApi = new RestApi(getContext(), config.getWebGuiUrl(), config.getApiKey(),
-                null, null,
                 new RestApi.OnApiAvailableListener() {
             @Override
             public void onApiAvailable() {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -120,8 +120,6 @@ public void run() {
             env.put("STTRACE", sp.getString("sttrace", ""));
             env.put("STNORESTART", "1");
             env.put("STNOUPGRADE", "1");
-            env.put("STGUIAUTH", sp.getString("gui_user", "") + ":" +
-                    sp.getString("gui_password", ""));
             if (sp.getBoolean("use_tor", false)) {
                 env.put("all_proxy", "socks5://localhost:9050");
                 env.put("ALL_PROXY_NO_FALLBACK", "1");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -120,8 +120,6 @@ public void run() {
             env.put("STTRACE", sp.getString("sttrace", ""));
             env.put("STNORESTART", "1");
             env.put("STNOUPGRADE", "1");
-            env.put("STGUIAUTH", sp.getString("gui_user", "") + ":" +
-                    sp.getString("gui_password", ""));
             if (sp.getBoolean("use_tor", false)) {
                 env.put("all_proxy", "socks5://localhost:9050");
                 env.put("ALL_PROXY_NO_FALLBACK", "1");

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -397,7 +397,7 @@ private void prepareEditMode() {
      * Sends the updated device info if in edit mode.
      */
     private void updateDevice() {
-        if (!mIsCreateMode && mDeviceNeedsToUpdate) {
+        if (!mIsCreateMode && mDeviceNeedsToUpdate && mDevice != null) {
             mSyncthingService.getApi().editDevice(mDevice, getActivity(), this);
         }
     }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.AsyncTask;
+import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 import android.widget.Toast;
@@ -834,8 +835,8 @@ protected void onPostExecute(String s) {
      * @param device Settings of the device to edit. To create a device, pass a non-existant device ID.
      * @param listener for the normalized device ID (may be null).
      */
-    public void editDevice(final Device device, final Activity activity,
-            final OnDeviceIdNormalizedListener listener) {
+    public void editDevice(@NonNull final Device device, final Activity activity,
+                           final OnDeviceIdNormalizedListener listener) {
         normalizeDeviceId(device.deviceID,
                 new RestApi.OnDeviceIdNormalizedListener() {
                     @Override

File: src/main/java/com/nutomic/syncthingandroid/syncthing/DeviceStateHolder.java
Patch:
@@ -112,7 +112,7 @@ private String getWifiSsid() {
     @TargetApi(21)
     public boolean shouldRun() {
         PowerManager pm = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB && pm.isPowerSaveMode()) {
+        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.LOLLIPOP && pm.isPowerSaveMode()) {
             return false;
         }
         else if (!ContentResolver.getMasterSyncAutomatically()) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -269,10 +269,10 @@ private boolean isAllowedWifiConnected() {
                 String ssid = mDeviceStateHolder.getWifiSsid();
                 if (ssid != null) {
                     if (ssids.contains(ssid)) {
-                        Log.d(TAG, "SSID " + ssid + " found in whitelist");
+                        Log.d(TAG, "SSID [" + ssid + "] found in whitelist: " + ssids);
                         return true;
                     }
-                    Log.i(TAG, "SSID " + ssid + " not whitelisted");
+                    Log.i(TAG, "SSID [" + ssid + "] not whitelisted: " + ssids);
                     return false;
                 } else {
                     // Don't know the SSID (yet) (should not happen?!), so not allowing

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -304,7 +304,6 @@ public void onBackPressed() {
     public void onApiChange(SyncthingService.State currentState) {
         if (!isFinishing() && currentState != SyncthingService.State.ACTIVE) {
             setResult(Activity.RESULT_CANCELED);
-            SyncthingService.showDisabledDialog(this);
             finish();
         }
     }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -99,7 +99,7 @@ public void onCheckedChanged(CompoundButton view, boolean isChecked) {
                     mFolder.readOnly = isChecked;
                     mFolderNeedsToUpdate = true;
                     break;
-                case R.id.share_device_id:
+                case R.id.device_toggle:
                     RestApi.Device device = (RestApi.Device) view.getTag();
                     if (isChecked) {
                         mFolder.deviceIds.add(device.deviceID);

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -125,7 +125,7 @@ public void onSaveInstanceState(Bundle outState) {
      * Invokes status callbacks.
      */
     private void updateGui() {
-        if (mActivity.getApi() == null || getActivity().isFinishing())
+        if (mActivity.getApi() == null || getActivity() == null || getActivity().isFinishing())
             return;
         mActivity.getApi().getSystemInfo(this);
         mActivity.getApi().getConnections(this);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/AppConfigReceiver.java
Patch:
@@ -1,5 +1,6 @@
 package com.nutomic.syncthingandroid.syncthing;
 
+import android.annotation.TargetApi;
 import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
@@ -33,6 +34,7 @@ public class AppConfigReceiver extends BroadcastReceiver {
     public static final String ACTION_STOP  = "com.nutomic.syncthingandroid.action.STOP";
 
     @Override
+    @TargetApi(21)
     public void onReceive(Context context, Intent intent) {
         switch (intent.getAction()) {
             case ACTION_START:

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/NetworkReceiverTest.java
Patch:
@@ -1,6 +1,7 @@
 package com.nutomic.syncthingandroid.test.syncthing;
 
 import android.content.Intent;
+import android.net.ConnectivityManager;
 import android.preference.PreferenceManager;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
@@ -40,7 +41,7 @@ public void testOnReceive() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, true)
                 .commit();
-        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_POWER_CONNECTED));
+        mReceiver.onReceive(mContext, new Intent(ConnectivityManager.CONNECTIVITY_ACTION));
         assertEquals(1, mContext.getReceivedIntents().size());
 
         Intent receivedIntent = mContext.getReceivedIntents().get(0);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -16,8 +16,7 @@ public class NetworkReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        if (!intent.getAction().equals(Intent.ACTION_POWER_CONNECTED) &&
-                !intent.getAction().equals(Intent.ACTION_POWER_DISCONNECTED))
+        if (!ConnectivityManager.CONNECTIVITY_ACTION.equals(intent.getAction()))
             return;
 
         if (!SyncthingService.alwaysRunInBackground(context))

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/NetworkReceiverTest.java
Patch:
@@ -1,6 +1,7 @@
 package com.nutomic.syncthingandroid.test.syncthing;
 
 import android.content.Intent;
+import android.net.ConnectivityManager;
 import android.preference.PreferenceManager;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
@@ -40,7 +41,7 @@ public void testOnReceive() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, true)
                 .commit();
-        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_POWER_CONNECTED));
+        mReceiver.onReceive(mContext, new Intent(ConnectivityManager.CONNECTIVITY_ACTION));
         assertEquals(1, mContext.getReceivedIntents().size());
 
         Intent receivedIntent = mContext.getReceivedIntents().get(0);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -16,8 +16,7 @@ public class NetworkReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        if (!intent.getAction().equals(Intent.ACTION_POWER_CONNECTED) &&
-                !intent.getAction().equals(Intent.ACTION_POWER_DISCONNECTED))
+        if (!ConnectivityManager.CONNECTIVITY_ACTION.equals(intent.getAction()))
             return;
 
         if (!SyncthingService.alwaysRunInBackground(context))

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/BootReceiverTest.java
Patch:
@@ -36,7 +36,7 @@ public void testOnReceiveCharging() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, true)
                 .commit();
-        mReceiver.onReceive(mContext, null);
+        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_BOOT_COMPLETED));
         assertEquals(1, mContext.getReceivedIntents().size());
 
         Intent receivedIntent = mContext.getReceivedIntents().get(0);
@@ -49,7 +49,7 @@ public void testOnlyRunInForeground() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, false)
                 .commit();
-        mReceiver.onReceive(mContext, null);
+        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_BOOT_COMPLETED));
         assertEquals(0, mContext.getReceivedIntents().size());
     }
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/NetworkReceiverTest.java
Patch:
@@ -40,7 +40,7 @@ public void testOnReceive() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, true)
                 .commit();
-        mReceiver.onReceive(mContext, null);
+        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_POWER_CONNECTED));
         assertEquals(1, mContext.getReceivedIntents().size());
 
         Intent receivedIntent = mContext.getReceivedIntents().get(0);
@@ -55,7 +55,7 @@ public void testOnlyRunInForeground() {
                 .edit()
                 .putBoolean(SyncthingService.PREF_ALWAYS_RUN_IN_BACKGROUND, false)
                 .commit();
-        mReceiver.onReceive(mContext, null);
+        mReceiver.onReceive(mContext, new Intent(Intent.ACTION_POWER_CONNECTED));
         assertEquals(0, mContext.getReceivedIntents().size());
     }
 

File: src/main/java/com/nutomic/syncthingandroid/activities/ToolbarBindingActivity.java
Patch:
@@ -13,7 +13,7 @@
  * The Toolbar must exist in the content view and have an id of R.id.toolbar.<br/>
  * Trying to call getSupportActionBar before this Activity's onPostCreate will cause a crash.
  */
-public class ToolbarBindingActivity extends AppCompatActivity {
+public abstract class ToolbarBindingActivity extends AppCompatActivity {
 
     private static final String TAG = "ToolbarBindingActivity";
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/BootReceiver.java
Patch:
@@ -8,6 +8,9 @@ public class BootReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
+        if (!intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED))
+            return;
+
         if (!SyncthingService.alwaysRunInBackground(context))
             return;
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -227,8 +227,10 @@ public void updateState() {
             if (mConfig != null) {
                 mCurrentState = State.STARTING;
 
-                if (mApi != null)
+                if (mApi != null) {
                     registerOnWebGuiAvailableListener(mApi);
+                    mApi.setWebGuiUrl(mConfig.getWebGuiUrl());
+                }
                 if (mEventProcessor != null)
                     registerOnWebGuiAvailableListener(mEventProcessor);
                 new PollWebGuiAvailableTaskImpl(getFilesDir() + "/" + HTTPS_CERT_FILE)

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -1055,7 +1055,7 @@ public UsageReportSetting getUsageReportAccepted() {
     public void setUsageReportAccepted(UsageReportSetting value, Activity activity) {
         int v = 0;
         switch (value) {
-            case ACCEPTED:  v =  1; break;
+            case ACCEPTED:  v =  2; break;
             case DENIED:    v = -1; break;
         }
         try {

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/DevicesAdapterTest.java
Patch:
@@ -40,7 +40,7 @@ protected void setUp() throws Exception {
 
     @MediumTest
     public void testGetViewNoConnections() {
-        mAdapter.add(Arrays.asList(mDevice));
+        mAdapter.addAll(Arrays.asList(mDevice));
         View v = mAdapter.getView(0, null, null);
 
         assertEquals(mDevice.name, ((TextView) v.findViewById(R.id.name)).getText());
@@ -53,7 +53,7 @@ public void testGetViewNoConnections() {
 
     @MediumTest
     public void testGetViewConnections() {
-        mAdapter.add(Arrays.asList(mDevice));
+        mAdapter.addAll(Arrays.asList(mDevice));
         mAdapter.onReceiveConnections(
                 new HashMap<String, RestApi.Connection>() {{ put(mDevice.deviceID, mConnection); }});
         View v = mAdapter.getView(0, null, null);

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/FoldersAdapterTest.java
Patch:
@@ -40,15 +40,15 @@ protected void setUp() throws Exception {
     }
 
     public void testGetViewNoModel() {
-        mAdapter.add(Arrays.asList(mFolder));
+        mAdapter.addAll(Arrays.asList(mFolder));
         View v = mAdapter.getView(0, null, null);
         assertEquals(mFolder.id, ((TextView) v.findViewById(R.id.id)).getText());
         assertEquals(mFolder.path, ((TextView) v.findViewById(R.id.directory)).getText());
         assertEquals(mFolder.invalid, ((TextView) v.findViewById(R.id.invalid)).getText());
     }
 
     public void testGetViewModel() {
-        mAdapter.add(Arrays.asList(mFolder));
+        mAdapter.addAll(Arrays.asList(mFolder));
         mAdapter.onReceiveModel(mFolder.id, mModel);
         View v = mAdapter.getView(0, null, null);
         assertFalse(((TextView) v.findViewById(R.id.state)).getText().toString().equals(""));

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceListFragment.java
Patch:
@@ -104,11 +104,14 @@ private void updateList() {
             setListAdapter(mAdapter);
         }
 
+        // Prevent scroll position reset due to list update from clear().
+        mAdapter.setNotifyOnChange(false);
         mAdapter.clear();
         List<RestApi.Device> devices = activity.getApi().getDevices(false);
         Collections.sort(devices, DEVICES_COMPARATOR);
         mAdapter.addAll(devices);
         mAdapter.updateConnections(activity.getApi());
+        mAdapter.notifyDataSetChanged();
         setListShown(true);
     }
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderListFragment.java
Patch:
@@ -105,11 +105,14 @@ private void updateList() {
             setListAdapter(mAdapter);
         }
 
+        // Prevent scroll position reset due to list update from clear().
+        mAdapter.setNotifyOnChange(false);
         mAdapter.clear();
         List<RestApi.Folder> folders = activity.getApi().getFolders();
         Collections.sort(folders, FOLDERS_COMPARATOR);
         mAdapter.addAll(folders);
         mAdapter.updateModel(activity.getApi());
+        mAdapter.notifyDataSetChanged();
         setListShown(true);
     }
 

File: src/main/java/com/nutomic/syncthingandroid/util/DevicesAdapter.java
Patch:
@@ -79,6 +79,6 @@ public void updateConnections(RestApi api) {
     @Override
     public void onReceiveConnections(Map<String, RestApi.Connection> connections) {
         mConnections = connections;
-        notifyDataSetInvalidated();
+        notifyDataSetChanged();
     }
 }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -264,8 +264,8 @@ private void updateViewsAndSetListeners() {
         if (devicesList.isEmpty()) {
             addEmptyDeviceListView();
         } else {
+            mDevicesContainer.removeAllViews();
             for (RestApi.Device n : devicesList) {
-                mDevicesContainer.removeAllViews();
                 addDeviceViewAndSetListener(n, LayoutInflater.from(getActivity()));
             }
         }

File: src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -24,9 +24,6 @@ public class SettingsActivity extends SyncthingActivity {
      * Must be set for {@link #ACTION_NODE_SETTINGS_FRAGMENT} and
      * {@link #ACTION_REPO_SETTINGS_FRAGMENT} to determine if an existing folder/device should be
      * edited or a new one created.
-     * <p/>
-     * If this is false, {@link FolderFragment#EXTRA_REPO_ID} or
-     * {@link DeviceFragment#EXTRA_NODE_ID} must be set (according to the selected fragment).
      */
     public static final String EXTRA_IS_CREATE = "create";
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -375,7 +375,7 @@ public void onDeviceIdNormalized(String normalizedId, String error) {
     private void initDevice() {
         mDevice = new RestApi.Device();
         mDevice.name = "";
-        mDevice.deviceID = "";
+        mDevice.deviceID = getActivity().getIntent().getStringExtra(EXTRA_NODE_ID);
         mDevice.addresses = DYNAMIC_ADDRESS;
         mDevice.compression = METADATA.getValue(getActivity());
         mDevice.introducer = false;

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -267,7 +267,7 @@ private void updateViewsAndSetListeners() {
             addEmptyDeviceListView();
         } else {
             for (RestApi.Device n : devicesList) {
-
+                mDevicesContainer.removeAllViews();
                 addDeviceViewAndSetListener(n, LayoutInflater.from(getActivity()));
             }
         }

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -135,7 +135,7 @@ private String getLog(final boolean syncthingLog) {
             pb.redirectErrorStream(true);
             process = pb.start();
             BufferedReader bufferedReader = new BufferedReader(
-                    new InputStreamReader(process.getInputStream()), 8192);
+                    new InputStreamReader(process.getInputStream(), "UTF-8"), 8192);
             StringBuilder log = new StringBuilder();
             String line = "";
             String sep = System.getProperty("line.separator");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -80,7 +80,7 @@ protected String doInBackground(String... params) {
                 if (entity != null) {
                     InputStream is = entity.getContent();
 
-                    BufferedReader br = new BufferedReader(new InputStreamReader(is));
+                    BufferedReader br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
                     String line;
                     String result = "";
                     while ((line = br.readLine()) != null) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -242,7 +242,7 @@ public void killSyncthing() {
                 psOut.writeBytes("exit\n");
                 psOut.flush();
                 ps.waitFor();
-                InputStreamReader isr = new InputStreamReader(ps.getInputStream());
+                InputStreamReader isr = new InputStreamReader(ps.getInputStream(), "UTF-8");
                 BufferedReader br = new BufferedReader(isr);
                 String id;
                 while ((id = br.readLine()) != null) {
@@ -312,7 +312,7 @@ private Thread log(final InputStream is, final int priority, final boolean saveL
             @Override
             public void run() {
                 try {
-                    InputStreamReader isr = new InputStreamReader(is);
+                    InputStreamReader isr = new InputStreamReader(is, "UTF-8");
                     BufferedReader br = new BufferedReader(isr);
                     String line;
                     while ((line = br.readLine()) != null) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -289,7 +289,7 @@ public void onApiChange(SyncthingService.State currentState) {
     private void updateViewsAndSetListeners() {
         // Update views
         mIdView.setText(mDevice.deviceID);
-        mNameView.setText((mDevice.name));
+        mNameView.setText(mDevice.name);
         mAddressesView.setText(displayableAddresses());
         mCompressionValueView.setText(Compression.fromValue(getActivity(), mDevice.compression).getTitle(getActivity()));
         mIntroducerView.setChecked(mDevice.introducer);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -22,7 +22,7 @@ public void onReceive(Context context, Intent intent) {
         ConnectivityManager cm =
                 (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo wifiInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
-        boolean isWifiConnected = (wifiInfo != null && wifiInfo.isConnected());
+        boolean isWifiConnected = wifiInfo != null && wifiInfo.isConnected();
         Log.v(TAG, "Received wifi " + (isWifiConnected ? "connected" : "disconnected") + " event");
         Intent i = new Intent(context, SyncthingService.class);
         i.putExtra(DeviceStateHolder.EXTRA_HAS_WIFI, isWifiConnected);

File: src/main/java/com/nutomic/syncthingandroid/util/FoldersAdapter.java
Patch:
@@ -59,7 +59,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         RestApi.Model model = mModels.get(folder.id);
         id.setText(folder.id);
         state.setTextColor(getContext().getResources().getColor(R.color.text_green));
-        directory.setText((folder.path));
+        directory.setText(folder.path);
         if (model != null) {
             int percentage = (model.globalBytes != 0)
                     ? Math.round(100 * model.inSyncBytes / model.globalBytes)

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -289,7 +289,7 @@ public void onApiChange(SyncthingService.State currentState) {
     private void updateViewsAndSetListeners() {
         // Update views
         mIdView.setText(mDevice.deviceID);
-        mNameView.setText((mDevice.name));
+        mNameView.setText(mDevice.name);
         mAddressesView.setText(displayableAddresses());
         mCompressionValueView.setText(Compression.fromValue(getActivity(), mDevice.compression).getTitle(getActivity()));
         mIntroducerView.setChecked(mDevice.introducer);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -22,7 +22,7 @@ public void onReceive(Context context, Intent intent) {
         ConnectivityManager cm =
                 (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo wifiInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
-        boolean isWifiConnected = (wifiInfo != null && wifiInfo.isConnected());
+        boolean isWifiConnected = wifiInfo != null && wifiInfo.isConnected();
         Log.v(TAG, "Received wifi " + (isWifiConnected ? "connected" : "disconnected") + " event");
         Intent i = new Intent(context, SyncthingService.class);
         i.putExtra(DeviceStateHolder.EXTRA_HAS_WIFI, isWifiConnected);

File: src/main/java/com/nutomic/syncthingandroid/util/FoldersAdapter.java
Patch:
@@ -59,7 +59,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         RestApi.Model model = mModels.get(folder.id);
         id.setText(folder.id);
         state.setTextColor(getContext().getResources().getColor(R.color.text_green));
-        directory.setText((folder.path));
+        directory.setText(folder.path);
         if (model != null) {
             int percentage = (model.globalBytes != 0)
                     ? Math.round(100 * model.inSyncBytes / model.globalBytes)

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -135,7 +135,7 @@ private String getLog(final boolean syncthingLog) {
             pb.redirectErrorStream(true);
             process = pb.start();
             BufferedReader bufferedReader = new BufferedReader(
-                    new InputStreamReader(process.getInputStream()), 8192);
+                    new InputStreamReader(process.getInputStream(), "UTF-8"), 8192);
             StringBuilder log = new StringBuilder();
             String line = "";
             String sep = System.getProperty("line.separator");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -80,7 +80,7 @@ protected String doInBackground(String... params) {
                 if (entity != null) {
                     InputStream is = entity.getContent();
 
-                    BufferedReader br = new BufferedReader(new InputStreamReader(is));
+                    BufferedReader br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
                     String line;
                     String result = "";
                     while ((line = br.readLine()) != null) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -242,7 +242,7 @@ public void killSyncthing() {
                 psOut.writeBytes("exit\n");
                 psOut.flush();
                 ps.waitFor();
-                InputStreamReader isr = new InputStreamReader(ps.getInputStream());
+                InputStreamReader isr = new InputStreamReader(ps.getInputStream(), "UTF-8");
                 BufferedReader br = new BufferedReader(isr);
                 String id;
                 while ((id = br.readLine()) != null) {
@@ -312,7 +312,7 @@ private Thread log(final InputStream is, final int priority, final boolean saveL
             @Override
             public void run() {
                 try {
-                    InputStreamReader isr = new InputStreamReader(is);
+                    InputStreamReader isr = new InputStreamReader(is, "UTF-8");
                     BufferedReader br = new BufferedReader(isr);
                     String line;
                     while ((line = br.readLine()) != null) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -381,7 +381,8 @@ public void onClick(DialogInterface dialog, int which) {
                                     Toast.makeText(getActivity(),
                                             getString(R.string.config_imported_successful),
                                             Toast.LENGTH_SHORT).show();
-                                    mSyncthingService.getApi().requireRestart(getActivity());
+                                    // No need to restart, as we shutdown to import the config, and
+                                    // then have to start Syncthing again.
                                 } else {
                                     Toast.makeText(getActivity(),
                                             getString(R.string.config_import_failed,

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -136,7 +136,7 @@ public void run() {
                 lInfo.join();
                 lWarn.join();
 
-                // Restart if that was requested.
+                // Restart if that was requested via Rest API call.
                 if (ret == 3) {
                     Log.i(TAG, "Restarting syncthing");
                     mContext.startService(new Intent(mContext, SyncthingService.class)

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -266,6 +266,7 @@ public void onApiChange(SyncthingService.State currentState) {
 
         if (!mIsCreateMode) {
             List<RestApi.Device> devices = mSyncthingService.getApi().getDevices(false);
+            mDevice = null;
             for (int i = 0; i < devices.size(); i++) {
                 if (devices.get(i).deviceID.equals(
                         getActivity().getIntent().getStringExtra(EXTRA_NODE_ID))) {
@@ -274,7 +275,7 @@ public void onApiChange(SyncthingService.State currentState) {
                 }
             }
             if (mDevice == null) {
-                Log.w(TAG, "Device not found in API update");
+                Log.w(TAG, "Device not found in API update, maybe it was deleted?");
                 getActivity().finish();
                 return;
             }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -234,14 +234,15 @@ public void onApiChange(SyncthingService.State currentState) {
         if (!mIsCreateMode) {
             List<RestApi.Folder> folders = mSyncthingService.getApi().getFolders();
             String passedId = getActivity().getIntent().getStringExtra(EXTRA_REPO_ID);
+            mFolder = null;
             for (RestApi.Folder currentFolder : folders) {
                 if (currentFolder.id.equals(passedId)) {
                     mFolder = currentFolder;
                     break;
                 }
             }
             if (mFolder == null) {
-                Log.w(TAG, "Folder not found in API update");
+                Log.w(TAG, "Folder not found in API update, maybe it was deleted?");
                 getActivity().finish();
                 return;
             }

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -38,6 +38,7 @@
 import android.widget.Toast;
 
 import com.nutomic.syncthingandroid.R;
+import com.nutomic.syncthingandroid.fragments.DeviceFragment;
 import com.nutomic.syncthingandroid.fragments.DeviceListFragment;
 import com.nutomic.syncthingandroid.fragments.DrawerFragment;
 import com.nutomic.syncthingandroid.fragments.FolderListFragment;
@@ -298,7 +299,7 @@ protected void onNewIntent(Intent intent) {
                             public void onClick(DialogInterface dialog, int which) {
                                 RestApi.Device device = new RestApi.Device();
                                 device.deviceID = deviceId;
-                                device.addresses = "";
+                                device.addresses = DeviceFragment.DYNAMIC_ADDRESS;
                                 getApi().editDevice(device, MainActivity.this, null);
                             }
                         })

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/FolderObserverTest.java
Patch:
@@ -92,7 +92,7 @@ public void testMoveDirectoryOut() throws IOException, InterruptedException,
         mLatch = new CountDownLatch(1);
         testFile.createNewFile();
         mLatch.await(1, TimeUnit.SECONDS);
-        assertEquals(0, mLatch.getCount());
+        assertEquals(1, mLatch.getCount());
 
         fo.stopWatching();
     }

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/DevicesAdapterTest.java
Patch:
@@ -29,6 +29,7 @@ protected void setUp() throws Exception {
         mDevice.name = "the device";
         mDevice.deviceID = "123-456-789";
 
+        mConnection.connected = true;
         mConnection.completion = 100;
         mConnection.inBits = 8388608L;
         mConnection.outBits = 8589934592L;

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -154,7 +154,6 @@ public void onReceiveSystemInfo(RestApi.SystemInfo info) {
             return;
 
         mDeviceId.setText(info.myID);
-        mDeviceId.setVisibility(View.VISIBLE);
         mDeviceId.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: src/main/java/com/nutomic/syncthingandroid/activities/RestartActivity.java
Patch:
@@ -27,15 +27,13 @@ public class RestartActivity extends SyncthingActivity {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        final Intent intent = new Intent(this, SyncthingService.class)
-                .setAction(SyncthingService.ACTION_RESTART);
 
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
         builder.setMessage(R.string.restart_title)
                 .setPositiveButton(R.string.restart_now, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
-                        startService(intent);
+                        getService().getApi().updateConfig();
                         finish();
                     }
                 })

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -385,7 +385,7 @@ public void onClick(DialogInterface dialog, int which) {
                                     Toast.makeText(getActivity(),
                                             getString(R.string.config_imported_successful),
                                             Toast.LENGTH_SHORT).show();
-                                    mSyncthingService.getApi().requireRestart(getActivity(), false);
+                                    mSyncthingService.getApi().requireRestart(getActivity());
                                 } else {
                                     Toast.makeText(getActivity(),
                                             getString(R.string.config_import_failed,

File: src/main/java/com/nutomic/syncthingandroid/util/DevicesAdapter.java
Patch:
@@ -69,8 +69,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
             upload.setText(RestApi.readableTransferRate(getContext(), conn.outBits));
         }
         else {
-            download.setText("0 " + r.getStringArray(R.array.transfer_rate_units)[0]);
-            upload.setText("0 " + r.getStringArray(R.array.transfer_rate_units)[0]);
+            download.setText(RestApi.readableTransferRate(getContext(), 0));
+            upload.setText(RestApi.readableTransferRate(getContext(), 0));
             status.setText(r.getString(R.string.device_disconnected));
             status.setTextColor(r.getColor(R.color.text_red));
         }

File: src/main/java/com/nutomic/syncthingandroid/util/FoldersAdapter.java
Patch:
@@ -68,8 +68,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             items.setText(getContext()
                     .getString(R.string.files, model.inSyncFiles, model.globalFiles));
             size.setVisibility(VISIBLE);
-            size.setText(readableFileSize(getContext(), model.inSyncBytes) + " / " +
-                    readableFileSize(getContext(), model.globalBytes));
+            size.setText(getContext().getString(R.string.folder_size_format,
+                    readableFileSize(getContext(), model.inSyncBytes),
+                    readableFileSize(getContext(), model.globalBytes)));
             if (TextUtils.isEmpty(folder.invalid)) {
                 setTextOrHide(invalid, model.invalid);
             }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -620,7 +620,7 @@ private int getDeviceCompletion(String deviceId) {
             }
         }
         return (folderCount != 0)
-                ? (int) percentageSum / folderCount
+                ? Math.round(percentageSum / folderCount)
                 : 100;
     }
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -305,7 +305,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.create).setVisible(mIsCreateMode);
         menu.findItem(R.id.share_device_id).setVisible(!mIsCreateMode);
-        menu.findItem(R.id.delete).setVisible(!mIsCreateMode);
+        menu.findItem(R.id.remove).setVisible(!mIsCreateMode);
     }
 
     @Override
@@ -328,9 +328,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case R.id.share_device_id:
                 RestApi.shareDeviceId(getActivity(), mDevice.deviceID);
                 return true;
-            case R.id.delete:
+            case R.id.remove:
                 new AlertDialog.Builder(getActivity())
-                        .setMessage(R.string.delete_device_confirm)
+                        .setMessage(R.string.remove_device_confirm)
                         .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -292,7 +292,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.create).setVisible(mIsCreateMode);
-        menu.findItem(R.id.delete).setVisible(!mIsCreateMode);
+        menu.findItem(R.id.remove).setVisible(!mIsCreateMode);
     }
 
     @Override
@@ -312,9 +312,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 mSyncthingService.getApi().editFolder(mFolder, true, getActivity());
                 getActivity().finish();
                 return true;
-            case R.id.delete:
+            case R.id.remove:
                 new AlertDialog.Builder(getActivity())
-                        .setMessage(R.string.delete_folder_confirm)
+                        .setMessage(R.string.remove_folder_confirm)
                         .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -443,7 +443,7 @@ public void onDestroy() {
         shutdown();
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);
         sp.unregisterOnSharedPreferenceChangeListener(this);
-        LocalBroadcastManager.getInstance(this).unregisterReceiver(this.mItemFinishedBroadcastReceiver);
+        LocalBroadcastManager.getInstance(this).unregisterReceiver(mItemFinishedBroadcastReceiver);
     }
 
     private void shutdown() {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -29,6 +29,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
 
@@ -727,7 +728,7 @@ protected void onPostExecute(String s) {
                     for (int i = 0; i < jsonEvents.length(); i++) {
 
                         final JSONObject json = jsonEvents.getJSONObject(i);
-                        final String eventType = json.getString("type").toLowerCase();
+                        final String eventType = json.getString("type").toLowerCase(Locale.US);
                         final long id = json.getLong("id");
 
                         Bundle dataBundle = null;

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -353,7 +353,7 @@ public void closeDrawer() {
     public boolean onKeyDown(int keyCode, KeyEvent e) {
         if (keyCode == KeyEvent.KEYCODE_MENU) {
             if (!mDrawerLayout.isDrawerOpen(GravityCompat.START))
-                mDrawerLayout.openDrawer(GravityCompat.END);
+                mDrawerLayout.openDrawer(GravityCompat.START);
             else
                 closeDrawer();
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -227,9 +227,7 @@ public boolean onPreferenceChange(Preference preference, Object o) {
 
         boolean requireRestart = false;
 
-        if (preference.equals(mSyncOnlyCharging) || preference.equals(mSyncOnlyWifi)) {
-            mSyncthingService.updateState();
-        } else if (preference.equals(mAlwaysRunInBackground)) {
+        if (preference.equals(mAlwaysRunInBackground)) {
             boolean value = (Boolean) o;
             preference.setSummary((value)
                     ? R.string.always_run_in_background_enabled

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -268,6 +268,8 @@ private void updateNotification() {
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
         if (key.equals(PREF_NOTIFICATION_TYPE))
             updateNotification();
+        else if (key.equals(PREF_SYNC_ONLY_CHARGING) || key.equals(PREF_SYNC_ONLY_WIFI))
+            updateState();
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -227,9 +227,7 @@ public boolean onPreferenceChange(Preference preference, Object o) {
 
         boolean requireRestart = false;
 
-        if (preference.equals(mSyncOnlyCharging) || preference.equals(mSyncOnlyWifi)) {
-            mSyncthingService.updateState();
-        } else if (preference.equals(mAlwaysRunInBackground)) {
+        if (preference.equals(mAlwaysRunInBackground)) {
             boolean value = (Boolean) o;
             preference.setSummary((value)
                     ? R.string.always_run_in_background_enabled

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -268,6 +268,8 @@ private void updateNotification() {
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
         if (key.equals(PREF_NOTIFICATION_TYPE))
             updateNotification();
+        else if (key.equals(PREF_SYNC_ONLY_CHARGING) || key.equals(PREF_SYNC_ONLY_WIFI))
+            updateState();
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/activities/RestartActivity.java
Patch:
@@ -1,6 +1,5 @@
 package com.nutomic.syncthingandroid.activities;
 
-import android.annotation.TargetApi;
 import android.app.AlertDialog;
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -25,7 +24,6 @@ public class RestartActivity extends SyncthingActivity {
     public static final int NOTIFICATION_RESTART = 2;
 
     @Override
-    @TargetApi(11)
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceFragment.java
Patch:
@@ -1,10 +1,10 @@
 package com.nutomic.syncthingandroid.fragments;
 
+import android.app.Fragment;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
 import android.support.v7.app.AlertDialog;
 import android.support.v7.widget.SwitchCompat;
 import android.text.Editable;

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -2,11 +2,11 @@
 
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.app.Fragment;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
 import android.support.v7.widget.SwitchCompat;
 import android.text.Editable;
 import android.text.TextWatcher;
@@ -260,7 +260,8 @@ private void updateViewsAndSetListeners() {
             addEmptyDeviceListView();
         } else {
             for (RestApi.Device n : devicesList) {
-                addDeviceViewAndSetListener(n, getLayoutInflater(null));
+
+                addDeviceViewAndSetListener(n, LayoutInflater.from(getActivity()));
             }
         }
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -9,10 +9,10 @@
 import android.preference.CheckBoxPreference;
 import android.preference.EditTextPreference;
 import android.preference.Preference;
+import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
 import android.support.v4.app.NavUtils;
-import android.support.v4.preference.PreferenceFragment;
 import android.text.InputType;
 import android.util.Log;
 import android.view.MenuItem;

File: src/main/java/com/nutomic/syncthingandroid/fragments/dialog/KeepVersionsDialogFragment.java
Patch:
@@ -1,10 +1,10 @@
 package com.nutomic.syncthingandroid.fragments.dialog;
 
 import android.app.Dialog;
+import android.app.DialogFragment;
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
 import android.support.v7.app.AlertDialog;
 import android.widget.FrameLayout.LayoutParams;
 import android.widget.NumberPicker;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.app.Activity;
 import android.app.AlertDialog;
-import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.app.Service;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -119,6 +119,7 @@ public static class Connection {
         public String address;
         public String clientVersion;
         public int completion;
+        public boolean connected;
     }
 
     public static class Model {
@@ -583,6 +584,7 @@ protected void onPostExecute(String s) {
                         c.address = conn.getString("address");
                         c.clientVersion = conn.getString("clientVersion");
                         c.completion = getDeviceCompletion(deviceId);
+                        c.connected = conn.getBoolean("connected");
 
                         Connection prev = (mPreviousConnections.containsKey(deviceId))
                                 ? mPreviousConnections.get(deviceId)

File: src/main/java/com/nutomic/syncthingandroid/util/DevicesAdapter.java
Patch:
@@ -55,7 +55,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
         name.setText(getItem(position).name);
         Resources r = getContext().getResources();
-        if (conn != null) {
+        if (conn != null && conn.connected) {
             if (conn.completion == 100) {
                 status.setText(r.getString(R.string.device_up_to_date));
                 status.setTextColor(r.getColor(R.color.text_green));

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -974,7 +974,8 @@ public UsageReportSetting getUsageReportAccepted() {
         try {
             switch (mConfig.getJSONObject(TYPE_OPTIONS).getInt("urAccepted")) {
                 case  0: return UsageReportSetting.UNDECIDED;
-                case  1: return UsageReportSetting.ACCEPTED;
+                case  1: return UsageReportSetting.UNDECIDED;
+                case  2: return UsageReportSetting.ACCEPTED;
                 case -1: return UsageReportSetting.DENIED;
                 default: throw new RuntimeException("Invalid usage report value");
             }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -974,7 +974,8 @@ public UsageReportSetting getUsageReportAccepted() {
         try {
             switch (mConfig.getJSONObject(TYPE_OPTIONS).getInt("urAccepted")) {
                 case  0: return UsageReportSetting.UNDECIDED;
-                case  1: return UsageReportSetting.ACCEPTED;
+                case  1: return UsageReportSetting.UNDECIDED;
+                case  2: return UsageReportSetting.ACCEPTED;
                 case -1: return UsageReportSetting.DENIED;
                 default: throw new RuntimeException("Invalid usage report value");
             }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostConfigTask.java
Patch:
@@ -43,8 +43,8 @@ protected Boolean doInBackground(String... params) {
         post.addHeader(new BasicHeader(RestApi.HEADER_API_KEY, params[1]));
 
         try {
-            post.setEntity(new StringEntity(params[3], HTTP.UTF_8));
-            Log.v(TAG, "API call parameters: " + params[3]);
+            post.setEntity(new StringEntity(params[2], HTTP.UTF_8));
+            Log.v(TAG, "API call parameters: " + params[2]);
             httpclient.execute(post);
         } catch (IOException|IllegalArgumentException e) {
             Log.w(TAG, "Failed to call Rest API at " + fullUri, e);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostConfigTask.java
Patch:
@@ -43,8 +43,8 @@ protected Boolean doInBackground(String... params) {
         post.addHeader(new BasicHeader(RestApi.HEADER_API_KEY, params[1]));
 
         try {
-            post.setEntity(new StringEntity(params[3], HTTP.UTF_8));
-            Log.v(TAG, "API call parameters: " + params[3]);
+            post.setEntity(new StringEntity(params[2], HTTP.UTF_8));
+            Log.v(TAG, "API call parameters: " + params[2]);
             httpclient.execute(post);
         } catch (IOException|IllegalArgumentException e) {
             Log.w(TAG, "Failed to call Rest API at " + fullUri, e);

File: src/main/java/com/nutomic/syncthingandroid/util/FolderObserver.java
Patch:
@@ -95,6 +95,8 @@ public void onEvent(int event, String path) {
                 ? new File(mPath, path)
                 : new File(mPath);
 
+        Log.v(TAG, "Received inotify event " + Integer.toHexString(event) + " at " +
+                fullPath.getAbsolutePath());
         switch (event) {
             case MOVED_FROM:
                 // fall through

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -148,7 +148,7 @@ private void showFirstStartDialog(final SharedPreferences sp) {
                 .setNeutralButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
-                        sp.edit().putBoolean("first_start", false).commit();
+                        sp.edit().putBoolean("first_start", false).apply();
                     }
                 })
                 .show();

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -282,7 +282,7 @@ public void onCreate() {
         // Make sure this is also done for existing installs. We can replace this check with
         // {@link #isFirstStart()} after a while.
         if (!sp.getBoolean("default_user_pw_set", false)) {
-            sp.edit().putBoolean("default_user_pw_set", true).commit();
+            sp.edit().putBoolean("default_user_pw_set", true).apply();
             char[] chars =
                     "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".toCharArray();
             StringBuilder sb = new StringBuilder();
@@ -293,7 +293,7 @@ public void onCreate() {
             String user = Build.MODEL.replaceAll("[^a-zA-Z0-9 ]", "");
             Log.i(TAG, "Generated GUI username and password (username is " + user + ")");
             sp.edit().putString("gui_user", user)
-                     .putString("gui_password", sb.toString()).commit();
+                     .putString("gui_password", sb.toString()).apply();
         }
 
         mDeviceStateHolder = new DeviceStateHolder(SyncthingService.this);

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.Locale;
 
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
@@ -219,7 +220,7 @@ public void changeDefaultFolder() {
                 .getElementsByTagName("folder").item(0);
         String model = Build.MODEL
                 .replace(" ", "_")
-                .toLowerCase()
+                .toLowerCase(Locale.US)
                 .replaceAll("[^a-z0-9_-]", "");
         folder.setAttribute("id", mContext.getString(R.string.default_folder_id, model));
         folder.setAttribute("path", Environment

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -225,7 +225,9 @@ public int compare(File f1, File f2) {
 
     @Override
     public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-        File f = mFilesAdapter.getItem(i);
+        @SuppressWarnings("unchecked")
+        ArrayAdapter<File> adapter = (ArrayAdapter<File>) mListView.getAdapter();
+        File f = adapter.getItem(i);
         if (f.isDirectory()) {
             displayFolder(f);
             invalidateOptions();

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -225,8 +225,7 @@ public int compare(File f1, File f2) {
 
     @Override
     public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-        ArrayAdapter<File> adapter = (ArrayAdapter<File>) mListView.getAdapter();
-        File f = adapter.getItem(i);
+        File f = mFilesAdapter.getItem(i);
         if (f.isDirectory()) {
             displayFolder(f);
             invalidateOptions();

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderFragment.java
Patch:
@@ -180,7 +180,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_folder, null);
+        return inflater.inflate(R.layout.fragment_folder, container, false);
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/activities/SyncthingActivity.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * Connects to {@link SyncthingService} and provides access to it.
  */
-public class SyncthingActivity extends AppCompatActivity implements ServiceConnection {
+public abstract class SyncthingActivity extends AppCompatActivity implements ServiceConnection {
 
     private SyncthingService mSyncthingService;
 
@@ -28,7 +28,7 @@ public class SyncthingActivity extends AppCompatActivity implements ServiceConne
      * To be used for Fragments.
      */
     public interface OnServiceConnectedListener {
-        public void onServiceConnected();
+        void onServiceConnected();
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/activities/SettingsActivity.java
Patch:
@@ -7,7 +7,7 @@
 
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.fragments.DeviceSettingsFragment;
-import com.nutomic.syncthingandroid.fragments.FolderSettingsFragment;
+import com.nutomic.syncthingandroid.fragments.FolderFragment;
 import com.nutomic.syncthingandroid.fragments.SettingsFragment;
 
 /**
@@ -26,7 +26,7 @@ public class SettingsActivity extends SyncthingActivity {
      * {@link #ACTION_REPO_SETTINGS_FRAGMENT} to determine if an existing folder/device should be
      * edited or a new one created.
      * <p/>
-     * If this is false, {@link com.nutomic.syncthingandroid.fragments.FolderSettingsFragment#EXTRA_REPO_ID} or
+     * If this is false, {@link FolderFragment#EXTRA_REPO_ID} or
      * {@link com.nutomic.syncthingandroid.fragments.DeviceSettingsFragment#EXTRA_NODE_ID} must be set (according to the selected fragment).
      */
     public static final String EXTRA_IS_CREATE = "create";
@@ -56,7 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     }
                     break;
                 case ACTION_REPO_SETTINGS_FRAGMENT:
-                    mFragment = new FolderSettingsFragment();
+                    mFragment = new FolderFragment();
                     if (!getIntent().hasExtra(EXTRA_IS_CREATE)) {
                         throw new IllegalArgumentException("EXTRA_IS_CREATE must be set");
                     }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FoldersFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
         Intent intent = new Intent(getActivity(), SettingsActivity.class)
                 .setAction(SettingsActivity.ACTION_REPO_SETTINGS_FRAGMENT)
                 .putExtra(SettingsActivity.EXTRA_IS_CREATE, false)
-                .putExtra(FolderSettingsFragment.EXTRA_REPO_ID, mAdapter.getItem(i).id);
+                .putExtra(FolderFragment.EXTRA_REPO_ID, mAdapter.getItem(i).id);
         startActivity(intent);
     }
 

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
-        setContentView(R.layout.folder_picker_activity);
+        setContentView(R.layout.activity_folder_picker);
         mListView = (ListView) findViewById(android.R.id.list);
         mListView.setOnItemClickListener(this);
         mListView.setEmptyView(findViewById(android.R.id.empty));

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -9,7 +9,6 @@
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
-import android.widget.EditText;
 
 import android.support.v4.view.MenuItemCompat;
 import android.widget.ScrollView;
@@ -18,7 +17,6 @@
 import com.nutomic.syncthingandroid.R;
 
 import java.io.BufferedReader;
-import java.io.DataOutputStream;
 import java.io.IOException;
 import java.io.InputStreamReader;
 
@@ -42,7 +40,7 @@ public class LogActivity extends SyncthingActivity {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.log_activity);
+        setContentView(R.layout.activity_log);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         if (savedInstanceState != null) {

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -82,7 +82,7 @@ public void onApiChange(SyncthingService.State currentState) {
                 mDisabledDialog = SyncthingService.showDisabledDialog(MainActivity.this);
             } else if (mLoadingDialog == null) {
                 LayoutInflater inflater = getLayoutInflater();
-                View dialogLayout = inflater.inflate(R.layout.loading_dialog, null);
+                View dialogLayout = inflater.inflate(R.layout.dialog_loading, null);
                 TextView loadingText = (TextView) dialogLayout.findViewById(R.id.loading_text);
                 loadingText.setText((getService().isFirstStart())
                         ? R.string.web_gui_creating_key
@@ -194,7 +194,7 @@ public void onCreate(Bundle savedInstanceState) {
         final ActionBar actionBar = getSupportActionBar();
 
         actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
-        setContentView(R.layout.main_activity);
+        setContentView(R.layout.activity_main);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
 
         mViewPager = (ViewPager) findViewById(R.id.pager);
@@ -375,7 +375,7 @@ public void onClick(DialogInterface dialog, int which) {
             @Override
             public void onReceiveUsageReport(String report) {
                 View v = LayoutInflater.from(MainActivity.this)
-                        .inflate(R.layout.usage_reporting_dialog, null);
+                        .inflate(R.layout.dialog_usage_reporting, null);
                 TextView tv = (TextView) v.findViewById(R.id.example);
                 tv.setText(report);
                 new AlertDialog.Builder(MainActivity.this)

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -68,7 +68,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             if (convertView == null) {
                 LayoutInflater inflater = (LayoutInflater) getContext()
                         .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                convertView = inflater.inflate(R.layout.menu_item, parent, false);
+                convertView = inflater.inflate(R.layout.item_menu, parent, false);
             }
 
             ImageView icon = (ImageView) convertView.findViewById(R.id.icon);
@@ -114,7 +114,7 @@ public void onDestroy() {
      */
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View view       = inflater.inflate(R.layout.drawer_fragment, container, false);
+        View view       = inflater.inflate(R.layout.fragment_drawer, container, false);
         mDeviceId       = (TextView) view.findViewById(R.id.device_id);
         mCpuUsage       = (TextView) view.findViewById(R.id.cpu_usage);
         mRamUsage       = (TextView) view.findViewById(R.id.ram_usage);

File: src/main/java/com/nutomic/syncthingandroid/util/DevicesAdapter.java
Patch:
@@ -34,15 +34,15 @@ public int compare(RestApi.Device lhs, RestApi.Device rhs) {
     };
 
     public DevicesAdapter(Context context) {
-        super(context, R.layout.device_list_item);
+        super(context, R.layout.item_device_list);
     }
 
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         if (convertView == null) {
             LayoutInflater inflater = (LayoutInflater) getContext()
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-            convertView = inflater.inflate(R.layout.device_list_item, parent, false);
+            convertView = inflater.inflate(R.layout.item_device_list, parent, false);
         }
 
         TextView name = (TextView) convertView.findViewById(R.id.name);

File: src/main/java/com/nutomic/syncthingandroid/util/FolderObserver.java
Patch:
@@ -55,7 +55,7 @@ public String getMessage() {
      */
     private FolderObserver(OnFolderFileChangeListener listener, RestApi.Folder folder, String path) {
         super(folder.path + "/" + path,
-                ATTRIB | CLOSE_WRITE | CREATE | DELETE | DELETE_SELF | MODIFY | MOVED_FROM |
+                ATTRIB | CLOSE_WRITE | CREATE | DELETE | DELETE_SELF | MOVED_FROM |
                 MOVED_TO | MOVE_SELF);
         mListener = listener;
         mFolder = folder;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -87,7 +87,7 @@ public void run() {
         int ret = 1;
         // Make sure Syncthing is executable
         try {
-            ProcessBuilder pb = new ProcessBuilder("chmod", "+x", mSyncthingBinary);
+            ProcessBuilder pb = new ProcessBuilder("chmod", "500", mSyncthingBinary);
             Process p = pb.start();
             p.waitFor();
         } catch (IOException|InterruptedException e) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -87,7 +87,7 @@ public void run() {
         int ret = 1;
         // Make sure Syncthing is executable
         try {
-            ProcessBuilder pb = new ProcessBuilder("chmod", "+x", mSyncthingBinary);
+            ProcessBuilder pb = new ProcessBuilder("chmod", "500", mSyncthingBinary);
             Process p = pb.start();
             p.waitFor();
         } catch (IOException|InterruptedException e) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -105,7 +105,7 @@ public void onCreate(Bundle savedInstanceState) {
                 mDevice.name = "";
                 mDevice.deviceID = "";
                 mDevice.addresses = "dynamic";
-                mDevice.compression = "always";
+                mDevice.compression = "metadata";
                 mDevice.introducer = false;
                 ((EditTextPreference) mDeviceId).setText(mDevice.deviceID);
             }

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -202,6 +202,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     return true;
                 }
                 mSyncthingService.getApi().editDevice(mDevice, getActivity(), this);
+                getActivity().finish();
                 return true;
             case R.id.share_device_id:
                 RestApi.shareDeviceId(getActivity(), mDevice.deviceID);

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderSettingsFragment.java
Patch:
@@ -215,6 +215,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     return true;
                 }
                 mSyncthingService.getApi().editFolder(mFolder, true, getActivity());
+                getActivity().finish();
                 return true;
             case R.id.delete:
                 new AlertDialog.Builder(getActivity())

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -742,6 +742,7 @@ public static String getLocalizedState(Context c, String state) {
             case "scanning": return c.getString(R.string.state_scanning);
             case "cleaning": return c.getString(R.string.state_cleaning);
             case "syncing":  return c.getString(R.string.state_syncing);
+            case "error":    return c.getString(R.string.state_error);
             case "unknown":  // Fallthrough
             case "":         return c.getString(R.string.state_unknown);
         }

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -71,6 +71,8 @@ public void onApiChange(SyncthingService.State currentState) {
                 new Date().getTime() > getFirstStartTime() + USAGE_REPORTING_DIALOG_DELAY &&
                 getApi().getUsageReportAccepted() == RestApi.UsageReportSetting.UNDECIDED) {
             showUsageReportingDialog();
+        } else if (currentState == SyncthingService.State.ERROR) {
+            finish();
         } else if (currentState != SyncthingService.State.ACTIVE && !isFinishing()) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -368,7 +368,7 @@ public void requireRestart(Activity activity, boolean updateConfig) {
                 ? new AlertDialog.Builder(activity, AlertDialog.THEME_HOLO_LIGHT)
                 : new AlertDialog.Builder(activity);
         builder.setMessage(R.string.restart_title)
-                .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
+                .setPositiveButton(R.string.restart_now, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
                         mContext.startService(intent);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostTask.java
Patch:
@@ -21,8 +21,7 @@ public class PostTask extends AsyncTask<String, Void, Boolean> {
     private static final String TAG = "PostTask";
 
     public static final String URI_CONFIG = "/rest/system/config";
-
-    public static final String URI_SCAN = "/rest/db/scan";
+    public static final String URI_SCAN   = "/rest/db/scan";
 
     private String mHttpsCertPath;
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -315,6 +315,7 @@ protected void onPostExecute(Pair<String, String> urlAndKey) {
                     new RestApi.OnApiAvailableListener() {
                 @Override
                 public void onApiAvailable() {
+                    mCurrentState = State.ACTIVE;
                     onApiChange();
                     new Thread(new Runnable() {
                         @Override
@@ -436,7 +437,7 @@ protected void onPostExecute(Void aVoid) {
                 return;
             }
             Log.i(TAG, "Web GUI has come online at " + mConfig.getWebGuiUrl());
-            mCurrentState = State.ACTIVE;
+            mCurrentState = State.STARTING;
             onApiChange();
             for (OnWebGuiAvailableListener listener : mOnWebGuiAvailableListeners) {
                 listener.onWebGuiAvailable();

File: src/main/java/com/nutomic/syncthingandroid/fragments/SettingsFragment.java
Patch:
@@ -244,7 +244,7 @@ public boolean onPreferenceChange(Preference preference, Object o) {
                     ((Boolean) o) ? 1 : 0, false, getActivity());
         } else if (mOptionsScreen.findPreference(preference.getKey()) != null) {
             boolean isArray = preference.getKey().equals("listenAddress") ||
-                    preference.getKey().equals("globalAnnServers");
+                    preference.getKey().equals("globalAnnounceServers");
             mSyncthingService.getApi().setValue(RestApi.TYPE_OPTIONS, preference.getKey(), o,
                     isArray, getActivity());
         } else if (preference.getKey().equals(ADDRESS)) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -87,6 +87,7 @@ protected String doInBackground(String... params) {
                         result += line;
                     }
                     br.close();
+                    Log.v(TAG, "API call result: " + result);
                     return result;
                 }
             } catch (IOException|IllegalArgumentException e) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostTask.java
Patch:
@@ -48,6 +48,7 @@ protected Boolean doInBackground(String... params) {
         try {
             if (params.length > 3) {
                 post.setEntity(new StringEntity(params[3], HTTP.UTF_8));
+                Log.v(TAG, "API call parameters: " + params[3]);
             }
             httpclient.execute(post);
         } catch (IOException|IllegalArgumentException e) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -267,7 +267,7 @@ public String getVersion() {
     }
 
     /**
-     * Stops syncthing. You should probably use SyncthingService.stopService() instead.
+     * Stops syncthing and cancels notification. For use by {@link SyncthingService}.
      */
     public void shutdown() {
         // Happens in unit tests.
@@ -277,7 +277,6 @@ public void shutdown() {
         NotificationManager nm = (NotificationManager)
                 mContext.getSystemService(Context.NOTIFICATION_SERVICE);
         nm.cancel(NOTIFICATION_RESTART);
-        SyncthingRunnable.killSyncthing();
         mRestartPostponed = false;
     }
 
@@ -740,7 +739,7 @@ public static String getLocalizedState(Context c, String state) {
             case "":         return c.getString(R.string.state_unknown);
         }
         if (BuildConfig.DEBUG) {
-            throw new AssertionError("Unexpected folder state");
+            throw new AssertionError("Unexpected folder state " + state);
         }
         return "";
     }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -267,7 +267,7 @@ public String getVersion() {
     }
 
     /**
-     * Stops syncthing. You should probably use SyncthingService.stopService() instead.
+     * Stops syncthing and cancels notification. For use by {@link SyncthingService}.
      */
     public void shutdown() {
         // Happens in unit tests.
@@ -277,7 +277,6 @@ public void shutdown() {
         NotificationManager nm = (NotificationManager)
                 mContext.getSystemService(Context.NOTIFICATION_SERVICE);
         nm.cancel(NOTIFICATION_RESTART);
-        SyncthingRunnable.killSyncthing();
         mRestartPostponed = false;
     }
 
@@ -740,7 +739,7 @@ public static String getLocalizedState(Context c, String state) {
             case "":         return c.getString(R.string.state_unknown);
         }
         if (BuildConfig.DEBUG) {
-            throw new AssertionError("Unexpected folder state");
+            throw new AssertionError("Unexpected folder state " + state);
         }
         return "";
     }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -339,14 +339,14 @@ private JSONArray listToJson(String[] list) {
         }
         return json;
     }
-
     /**
      * Sends the updated mConfig via Rest API to syncthing and displays a "restart"
      * dialog or notification.
      */
     @TargetApi(11)
     public void requireRestart(Activity activity) {
         new PostTask(mHttpsCertPath).execute(mUrl, PostTask.URI_CONFIG, mApiKey, mConfig.toString());
+        // TODO Should wait for completion...
 
         if (mRestartPostponed)
             return;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -12,8 +12,9 @@
 public class MockRestApi extends RestApi {
 
     public MockRestApi(Context context, String url, String apiKey,
-            OnApiAvailableListener listener) {
-        super(context, url, apiKey, listener);
+                       String guiUser, String guiPassword,
+                       OnApiAvailableListener listener) {
+        super(context, url, apiKey, guiUser, guiPassword, listener);
     }
 
     @Override

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockSyncthingService.java
Patch:
@@ -49,7 +49,7 @@ public boolean isFirstStart() {
 
     @Override
     public RestApi getApi() {
-        return new MockRestApi(this, null, null, null);
+        return new MockRestApi(this, null, null, null, null, null);
     }
 
     @Override

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/PollWebGuiAvailableTaskTest.java
Patch:
@@ -30,7 +30,7 @@ protected void tearDown() throws Exception {
     }
 
     public void testPolling() throws InterruptedException {
-        mSyncthing = new SyncthingRunnable(new MockContext(null), SyncthingRunnable.Command.main);
+        new SyncthingRunnable(new MockContext(null), SyncthingRunnable.Command.main);
 
         String httpsCertPath = getContext().getFilesDir() + "/" + SyncthingService.HTTPS_CERT_FILE;
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/RestApiTest.java
Patch:
@@ -23,7 +23,7 @@ public class RestApiTest extends AndroidTestCase {
     protected void setUp() throws Exception {
         super.setUp();
 
-        mSyncthing = new SyncthingRunnable(new MockContext(null), SyncthingRunnable.Command.main);
+        new SyncthingRunnable(new MockContext(null), SyncthingRunnable.Command.main);
 
         ConfigXml config = new ConfigXml(new MockContext(getContext()));
         config.changeDefaultFolder();
@@ -39,6 +39,7 @@ protected void onPostExecute(Void aVoid) {
             }
         }.execute(config.getWebGuiUrl());
         mApi = new RestApi(getContext(), config.getWebGuiUrl(), config.getApiKey(),
+                null, null, // TODO
                 new RestApi.OnApiAvailableListener() {
             @Override
             public void onApiAvailable() {

File: src/main/java/com/nutomic/syncthingandroid/activities/LogActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
 import android.support.v7.widget.ShareActionProvider;
 import android.util.Log;
 import android.view.Menu;
@@ -46,7 +47,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (savedInstanceState != null) {
             mSyncthingLog = savedInstanceState.getBoolean("syncthingLog");
-            invalidateOptionsMenu();
+            ActivityCompat.invalidateOptionsMenu(this);
         }
 
         mLog = (TextView) findViewById(R.id.log);

File: src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -120,6 +120,7 @@ public void onCreate(Bundle savedInstanceState) {
         mWebView = (WebView) findViewById(R.id.webview);
         mWebView.getSettings().setJavaScriptEnabled(true);
         mWebView.setWebViewClient(mWebViewClient);
+        mWebView.clearCache(true);
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -69,6 +69,8 @@ protected String doInBackground(String... params) {
             get.addHeader(new BasicHeader(RestApi.HEADER_API_KEY, params[2]));
 
             try {
+                Log.w(TAG, "Calling Rest API at " + fullUri);
+
                 HttpResponse response = httpclient.execute(get);
                 HttpEntity entity = response.getEntity();
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -52,7 +52,7 @@ public class SyncthingService extends Service {
     /**
      * Interval in ms at which the GUI is updated (eg {@link com.nutomic.syncthingandroid.fragments.DrawerFragment}).
      */
-    public static final int GUI_UPDATE_INTERVAL = 1000;
+    public static final int GUI_UPDATE_INTERVAL = 10000;
 
     /**
      * name of the public key file in the data directory.

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -222,10 +222,10 @@ private void log(final InputStream is, final int priority) {
         new Thread(new Runnable() {
             @Override
             public void run() {
-                InputStreamReader isr = new InputStreamReader(is);
-                BufferedReader br = new BufferedReader(isr);
-                String line;
                 try {
+                    InputStreamReader isr = new InputStreamReader(is);
+                    BufferedReader br = new BufferedReader(isr);
+                    String line;
                     while ((line = br.readLine()) != null) {
                         Log.println(priority, TAG_NATIVE, line);
                     }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -222,10 +222,10 @@ private void log(final InputStream is, final int priority) {
         new Thread(new Runnable() {
             @Override
             public void run() {
-                InputStreamReader isr = new InputStreamReader(is);
-                BufferedReader br = new BufferedReader(isr);
-                String line;
                 try {
+                    InputStreamReader isr = new InputStreamReader(is);
+                    BufferedReader br = new BufferedReader(isr);
+                    String line;
                     while ((line = br.readLine()) != null) {
                         Log.println(priority, TAG_NATIVE, line);
                     }

File: src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -53,6 +53,7 @@ public void onCreate(Bundle savedInstanceState) {
         mWebView = (WebView) findViewById(R.id.webview);
         mWebView.getSettings().setJavaScriptEnabled(true);
         mWebView.setWebViewClient(mWebViewClient);
+        mWebView.clearCache(true);
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -62,6 +62,8 @@ protected String doInBackground(String... params) {
             get.addHeader(new BasicHeader(RestApi.HEADER_API_KEY, params[2]));
 
             try {
+                Log.w(TAG, "Calling Rest API at " + fullUri);
+
                 HttpResponse response = httpclient.execute(get);
                 HttpEntity entity = response.getEntity();
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -52,7 +52,7 @@ public class SyncthingService extends Service {
     /**
      * Interval in ms at which the GUI is updated (eg {@link com.nutomic.syncthingandroid.fragments.DrawerFragment}).
      */
-    public static final int GUI_UPDATE_INTERVAL = 1000;
+    public static final int GUI_UPDATE_INTERVAL = 10000;
 
     /**
      * Name of the public key file in the data directory.

File: src/main/java/com/nutomic/syncthingandroid/activities/WebGuiActivity.java
Patch:
@@ -137,7 +137,7 @@ private void loadCaCert() {
             mCaCert = (X509Certificate)
                     cf.generateCertificate(inStream);
         } catch (FileNotFoundException|CertificateException e) {
-            throw new IllegalArgumentException("Untrusted Certificate");
+            throw new IllegalArgumentException("Untrusted Certificate", e);
         } finally {
             try {
                 if (inStream != null)

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -90,7 +90,9 @@ protected String doInBackground(String... params) {
             try {
                 // Don't push the API too hard
                 Thread.sleep(500 * i);
-            } catch (InterruptedException e) { }
+            } catch (InterruptedException e) {
+                Log.w(TAG, e);
+            }
             Log.w(TAG, "Retrying GetTask Rest API call ("+i+")");
         }
         return null;

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/GetTaskTest.java
Patch:
@@ -43,7 +43,7 @@ protected void tearDown() throws Exception {
 
     @MediumTest
     public void testGetNoParams() throws IOException, InterruptedException {
-        new GetTask() {
+        new GetTask("") {
             @Override
             protected void onPostExecute(String s) {
                 assertEquals(RESPONSE, s);
@@ -57,7 +57,7 @@ protected void onPostExecute(String s) {
 
     @MediumTest
     public void testGetParams() throws IOException, InterruptedException {
-        new GetTask() {
+        new GetTask("") {
             @Override
             protected void onPostExecute(String s) {
                 assertEquals(RESPONSE, s);

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/PollWebGuiAvailableTaskTest.java
Patch:
@@ -33,8 +33,10 @@ public void testPolling() throws InterruptedException {
         new SyncthingRunnable(new MockContext(null),
                 getContext().getApplicationInfo().dataDir + "/" + SyncthingService.BINARY_NAME);
 
+        String httpsCertPath = getContext().getFilesDir() + "/" + SyncthingService.HTTPS_CERT_FILE;
+
         final CountDownLatch latch = new CountDownLatch(1);
-        new PollWebGuiAvailableTask() {
+        new PollWebGuiAvailableTask(httpsCertPath) {
             @Override
             protected void onPostExecute(Void aVoid) {
                 latch.countDown();

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/ConfigXmlTest.java
Patch:
@@ -36,7 +36,7 @@ protected void tearDown() throws Exception {
 
     @SmallTest
     public void testGetWebGuiUrl() {
-        assertTrue(mConfig.getWebGuiUrl().startsWith("http://127.0.0.1:"));
+        assertTrue(mConfig.getWebGuiUrl().startsWith("https://127.0.0.1:"));
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -88,7 +88,7 @@ public static File getConfigFile(Context context) {
     }
 
     public String getWebGuiUrl() {
-        return "http://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent();
+        return "https://" + getGuiElement().getElementsByTagName("address").item(0).getTextContent();
     }
 
     public String getApiKey() {

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -180,6 +180,7 @@ public void onReceiveSystemInfo(RestApi.SystemInfo info) {
             return;
 
         mDeviceId.setText(info.myID);
+        mDeviceId.setVisibility(View.VISIBLE);
         mDeviceId.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View view, MotionEvent motionEvent) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -68,7 +68,8 @@ public class SyncthingService extends Service {
     /**
      * Directory where config is exported to and imported from.
      */
-    public static final File EXPORT_PATH = Environment.getExternalStorageDirectory();
+    public static final File EXPORT_PATH =
+            new File(Environment.getExternalStorageDirectory(), "backups/syncthing");
 
     /**
      * Path to the native, integrated syncthing binary, relative to the data folder
@@ -440,6 +441,7 @@ public static boolean alwaysRunInBackground(Context context) {
      * Exports the local config and keys to {@link #EXPORT_PATH}.
      */
     public void exportConfig() {
+        EXPORT_PATH.mkdirs();
         copyFile(new File(getFilesDir(), ConfigXml.CONFIG_FILE),
                 new File(EXPORT_PATH, ConfigXml.CONFIG_FILE));
         copyFile(new File(getFilesDir(), PRIVATE_KEY_FILE),

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -270,6 +270,8 @@ public boolean onPreferenceClick(Preference preference) {
      */
     @Override
     public void onReceiveConnections(Map<String, RestApi.Connection> connections) {
+        if (mVersion == null || mCurrentAddress == null)
+            return;
         if (connections.containsKey(mDevice.DeviceID)) {
             mVersion.setSummary(connections.get(mDevice.DeviceID).ClientVersion);
             mCurrentAddress.setSummary(connections.get(mDevice.DeviceID).Address);

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -270,6 +270,8 @@ public boolean onPreferenceClick(Preference preference) {
      */
     @Override
     public void onReceiveConnections(Map<String, RestApi.Connection> connections) {
+        if (mVersion == null || mCurrentAddress == null)
+            return;
         if (connections.containsKey(mDevice.DeviceID)) {
             mVersion.setSummary(connections.get(mDevice.DeviceID).ClientVersion);
             mCurrentAddress.setSummary(connections.get(mDevice.DeviceID).Address);

File: src/main/java/com/nutomic/syncthingandroid/util/FolderObserver.java
Patch:
@@ -107,6 +107,7 @@ public void onEvent(int event, String path) {
                         break;
                     }
                 }
+                mListener.onFolderFileChange(mFolder.ID, fullPath.getPath());
                 break;
             case MOVED_TO:
                 // fall through

File: src/main/java/com/nutomic/syncthingandroid/fragments/DrawerFragment.java
Patch:
@@ -233,7 +233,6 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                 mActivity.closeDrawer();
                 break;
             case 4:
-                mActivity.getService().getApi().shutdown();
                 mActivity.stopService(new Intent(mActivity, SyncthingService.class));
                 mActivity.finish();
                 mActivity.closeDrawer();

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostTask.java
Patch:
@@ -21,8 +21,6 @@ public class PostTask extends AsyncTask<String, Void, Boolean> {
 
     public static final String URI_CONFIG = "/rest/config";
 
-    public static final String URI_SHUTDOWN = "/rest/shutdown";
-
     public static final String URI_SCAN = "/rest/scan";
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PollWebGuiAvailableTask.java
Patch:
@@ -28,7 +28,7 @@ public abstract class PollWebGuiAvailableTask extends AsyncTask<String, Void, Vo
     private static final long WEB_GUI_POLL_INTERVAL = 100;
 
     /**
-     * @param url The URL of the web GUI (eg 127.0.0.1:8080).
+     * @param url The URL of the web GUI (eg 127.0.0.1:8384).
      */
     @Override
     protected Void doInBackground(String... url) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PollWebGuiAvailableTask.java
Patch:
@@ -28,7 +28,7 @@ public abstract class PollWebGuiAvailableTask extends AsyncTask<String, Void, Vo
     private static final long WEB_GUI_POLL_INTERVAL = 100;
 
     /**
-     * @param url The URL of the web GUI (eg 127.0.0.1:8080).
+     * @param url The URL of the web GUI (eg 127.0.0.1:8384).
      */
     @Override
     protected Void doInBackground(String... url) {

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -55,6 +55,7 @@ public void onApiChange(SyncthingService.State currentState) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {
                     mLoadingDialog.dismiss();
+                    mLoadingDialog = null;
                 }
                 mDisabledDialog = SyncthingService.showDisabledDialog(this);
             } else if (mLoadingDialog == null) {

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -55,6 +55,7 @@ public void onApiChange(SyncthingService.State currentState) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {
                     mLoadingDialog.dismiss();
+                    mLoadingDialog = null;
                 }
                 mDisabledDialog = SyncthingService.showDisabledDialog(this);
             } else if (mLoadingDialog == null) {

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -51,7 +51,7 @@ public class MainActivity extends SyncthingActivity
     @Override
     @SuppressLint("InflateParams")
     public void onApiChange(SyncthingService.State currentState) {
-        if (currentState != SyncthingService.State.ACTIVE && !isFinishing() && mIsDestroyed) {
+        if (currentState != SyncthingService.State.ACTIVE && !isFinishing() && !mIsDestroyed) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {
                     mLoadingDialog.dismiss();

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/DevicesAdapterTest.java
Patch:
@@ -57,8 +57,8 @@ public void testGetViewConnections() {
 
         assertEquals(getContext().getString(R.string.device_up_to_date),
                 ((TextView) v.findViewById(R.id.status)).getText().toString());
-        assertEquals("1 Mb/s", ((TextView) v.findViewById(R.id.download)).getText().toString());
-        assertEquals("1 Gb/s", ((TextView) v.findViewById(R.id.upload)).getText().toString());
+        assertEquals("1 Mib/s", ((TextView) v.findViewById(R.id.download)).getText().toString());
+        assertEquals("1 Gib/s", ((TextView) v.findViewById(R.id.upload)).getText().toString());
     }
 
 }

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -49,7 +49,7 @@ public class MainActivity extends SyncthingActivity
     @Override
     @SuppressLint("InflateParams")
     public void onApiChange(SyncthingService.State currentState) {
-        if (currentState != SyncthingService.State.ACTIVE && !isFinishing()) {
+        if (currentState != SyncthingService.State.ACTIVE && !isFinishing() && !isDestroyed()) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {
                     mLoadingDialog.dismiss();

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/DevicesAdapterTest.java
Patch:
@@ -57,8 +57,8 @@ public void testGetViewConnections() {
 
         assertEquals(getContext().getString(R.string.device_up_to_date),
                 ((TextView) v.findViewById(R.id.status)).getText().toString());
-        assertEquals("1 Mb/s", ((TextView) v.findViewById(R.id.download)).getText().toString());
-        assertEquals("1 Gb/s", ((TextView) v.findViewById(R.id.upload)).getText().toString());
+        assertEquals("1 Mib/s", ((TextView) v.findViewById(R.id.download)).getText().toString());
+        assertEquals("1 Gib/s", ((TextView) v.findViewById(R.id.upload)).getText().toString());
     }
 
 }

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -151,7 +151,7 @@ else if (currentState != SyncthingService.State.ACTIVE) {
                 return;
             }
             mDevice = device;
-            mDeviceId.setOnPreferenceClickListener(this); // TODO is this needed?
+            mDeviceId.setOnPreferenceClickListener(this);
         }
 
         mSyncthingService.getApi().getConnections(DeviceSettingsFragment.this);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -51,6 +51,7 @@ public void run() {
                 dos.writeBytes("HOME=" + Environment.getExternalStorageDirectory() + " ");
                 dos.writeBytes("STTRACE=" + pm.getString("sttrace", "") + " ");
                 dos.writeBytes("STNORESTART=1 ");
+                dos.writeBytes("STNOUPGRADE=1 ");
                 // Call syncthing with -home (as it would otherwise use "~/.config/syncthing/".
                 dos.writeBytes(mCommand + " -home " + mContext.getFilesDir() + "\n");
                 dos.writeBytes("exit\n");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -66,7 +66,7 @@ public static class Device implements Serializable {
         public String Addresses;
         public String Name;
         public String DeviceID;
-        public boolean Compression;
+        public String Compression;
         public boolean Introducer;
     }
 
@@ -407,7 +407,7 @@ public List<Device> getDevices(boolean includeLocal) {
                 n.Addresses = json.optJSONArray("Addresses").join(" ").replace("\"", "");
                 n.Name = json.getString("Name");
                 n.DeviceID = json.getString("DeviceID");
-                n.Compression = json.getBoolean("Compression");
+                n.Compression = json.getString("Compression");
                 n.Introducer = json.getBoolean("Introducer");
                 if (includeLocal || !mLocalDeviceId.equals(n.DeviceID)) {
                     ret.add(n);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -282,7 +282,7 @@ public void shutdown() {
     public String getValue(String name, String key) {
         // Happens if this functions is called before class is fully initialized.
         if (mConfig == null)
-            return null;
+            return "";
 
         try {
             Object value = mConfig.getJSONObject(name).get(key);
@@ -291,7 +291,7 @@ public String getValue(String name, String key) {
                     : value.toString();
         } catch (JSONException e) {
             Log.w(TAG, "Failed to get value for " + key, e);
-            return null;
+            return "";
         }
     }
 
@@ -416,7 +416,7 @@ public List<Device> getDevices(boolean includeLocal) {
             return ret;
         } catch (JSONException e) {
             Log.w(TAG, "Failed to read devices", e);
-            return null;
+            return new ArrayList<>();
         }
     }
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -22,9 +22,7 @@ public void onReceive(Context context, Intent intent) {
         ConnectivityManager cm =
                 (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo wifiInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
-        NetworkInfo activeNetworkInfo = cm.getActiveNetworkInfo();
-        boolean isWifiConnected = (wifiInfo != null && wifiInfo.isConnected()) ||
-                activeNetworkInfo == null;
+        boolean isWifiConnected = (wifiInfo != null && wifiInfo.isConnected());
         Log.v(TAG, "Received wifi " + (isWifiConnected ? "connected" : "disconnected") + " event");
         Intent i = new Intent(context, SyncthingService.class);
         i.putExtra(DeviceStateHolder.EXTRA_HAS_WIFI, isWifiConnected);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -12,6 +12,7 @@
 import org.apache.http.impl.client.DefaultHttpClient;
 import org.apache.http.message.BasicHeader;
 import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.protocol.HTTP;
 
 import java.io.BufferedReader;
 import java.io.IOException;
@@ -53,7 +54,7 @@ protected String doInBackground(String... params) {
         if (params.length == 5) {
             LinkedList<NameValuePair> urlParams = new LinkedList<>();
             urlParams.add(new BasicNameValuePair(params[3], params[4]));
-            fullUri += "?" + URLEncodedUtils.format(urlParams, "utf-8");
+            fullUri += "?" + URLEncodedUtils.format(urlParams, HTTP.UTF_8);
         }
         HttpGet get = new HttpGet(fullUri);
         get.addHeader(new BasicHeader(RestApi.HEADER_API_KEY, params[2]));

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -42,7 +42,7 @@ public <T> void setValue(String name, String key, T value, boolean isArray, Acti
     }
 
     @Override
-    public List<Device> getDevices() {
+    public List<Device> getDevices(boolean includeLocal) {
         return new ArrayList<>();
     }
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/RestApiTest.java
Patch:
@@ -70,7 +70,7 @@ protected void onPostExecute(Boolean aBoolean) {
 
     @SmallTest
     public void testGetDevices() {
-        assertNotNull(mApi.getDevices());
+        assertNotNull(mApi.getDevices(false));
     }
 
     @MediumTest

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -44,7 +44,7 @@ public class SyncthingService extends Service {
     public static final String ACTION_RESTART = "restart";
 
     /**
-     * Interval in ms at which the GUI is updated (eg {@link }LocalDeviceInfoFragment}).
+     * Interval in ms at which the GUI is updated (eg {@link com.nutomic.syncthingandroid.fragments.DrawerFragment}).
      */
     public static final int GUI_UPDATE_INTERVAL = 1000;
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/DeviceSettingsFragment.java
Patch:
@@ -131,7 +131,7 @@ else if (currentState != SyncthingService.State.ACTIVE) {
             getActivity().setTitle(R.string.add_device);
         } else {
             getActivity().setTitle(R.string.edit_device);
-            List<RestApi.Device> devices = mSyncthingService.getApi().getDevices();
+            List<RestApi.Device> devices = mSyncthingService.getApi().getDevices(false);
             for (int i = 0; i < devices.size(); i++) {
                 if (devices.get(i).DeviceID.equals(
                         getActivity().getIntent().getStringExtra(EXTRA_NODE_ID))) {

File: src/main/java/com/nutomic/syncthingandroid/fragments/DevicesFragment.java
Patch:
@@ -54,7 +54,7 @@ private void initAdapter() {
             return;
 
         mAdapter = new DevicesAdapter(activity);
-        mAdapter.add(activity.getApi().getDevices());
+        mAdapter.add(activity.getApi().getDevices(false));
         setListAdapter(mAdapter);
         setEmptyText(getString(R.string.devices_list_empty));
         getListView().setOnItemClickListener(this);

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderSettingsFragment.java
Patch:
@@ -148,7 +148,7 @@ else if (currentState != SyncthingService.State.ACTIVE) {
         mRescanInterval.setText(Integer.toString(mFolder.RescanIntervalS));
         mRescanInterval.setSummary(Integer.toString(mFolder.RescanIntervalS));
         mFolderMaster.setChecked(mFolder.ReadOnly);
-        List<RestApi.Device> devicesList = mSyncthingService.getApi().getDevices();
+        List<RestApi.Device> devicesList = mSyncthingService.getApi().getDevices(false);
         for (RestApi.Device n : devicesList) {
             ExtendedCheckBoxPreference cbp = new ExtendedCheckBoxPreference(getActivity(), n);
             // Calling addPreference later causes it to change the checked state.
@@ -297,7 +297,8 @@ public boolean onPreferenceClick(Preference preference) {
                 intent.putExtra(FolderPickerActivity.EXTRA_INITIAL_DIRECTORY, mFolder.Path);
             }
             startActivityForResult(intent, DIRECTORY_REQUEST_CODE);
-        } else if (preference.equals(mDevices) && mSyncthingService.getApi().getDevices().isEmpty()) {
+        } else if (preference.equals(mDevices) &&
+                mSyncthingService.getApi().getDevices(false).isEmpty()) {
             Toast.makeText(getActivity(), R.string.no_devices, Toast.LENGTH_SHORT)
                     .show();
         }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.os.Environment;
 import android.preference.PreferenceManager;
 import android.util.Log;
 
@@ -47,7 +48,7 @@ public void run() {
                 process = Runtime.getRuntime().exec("sh");
                 dos = new DataOutputStream(process.getOutputStream());
                 // Set home directory to data folder for syncthing to use.
-                dos.writeBytes("HOME=" + mContext.getFilesDir() + " ");
+                dos.writeBytes("HOME=" + Environment.getExternalStorageDirectory() + " ");
                 dos.writeBytes("STTRACE=" + pm.getString("sttrace", "") + " ");
                 dos.writeBytes("STNORESTART=1 ");
                 // Call syncthing with -home (as it would otherwise use "~/.config/syncthing/".

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -114,10 +114,9 @@ private void updateIfNeeded() {
         // Hardcode default globalAnnounceServer ip.
         Element globalAnnounceServer = (Element)
                 options.getElementsByTagName("globalAnnounceServer").item(0);
-        if (globalAnnounceServer.getTextContent().startsWith("announce.syncthing.net:") ||
-                globalAnnounceServer.getTextContent().startsWith("194.126.249.5:")) {
+        if (globalAnnounceServer.getTextContent().equals("udp4://announce.syncthing.net:22026")) {
             Log.i(TAG, "Replacing globalAnnounceServer host with ip");
-            globalAnnounceServer.setTextContent("194.126.249.5:22026");
+            globalAnnounceServer.setTextContent("udp4://194.126.249.5:22026");
             changed = true;
         }
 

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockRestApi.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.nutomic.syncthingandroid.syncthing.RestApi;
 
+import java.util.ArrayList;
 import java.util.List;
 
 public class MockRestApi extends RestApi {
@@ -42,7 +43,7 @@ public <T> void setValue(String name, String key, T value, boolean isArray, Acti
 
     @Override
     public List<Device> getDevices() {
-        throw new UnsupportedOperationException();
+        return new ArrayList<>();
     }
 
     @Override
@@ -52,7 +53,7 @@ public void getSystemInfo(final OnReceiveSystemInfoListener listener) {
 
     @Override
     public List<Folder> getFolders() {
-        throw new UnsupportedOperationException();
+        return new ArrayList<>();
     }
 
     @Override

File: src/androidTest/java/com/nutomic/syncthingandroid/test/syncthing/SyncthingRunnableTest.java
Patch:
@@ -20,7 +20,7 @@ public void testRunning() throws InterruptedException {
         File testFile = new File(context.getFilesDir(), "was_running");
         assertFalse(testFile.exists());
         // Inject a differenct command instead of the syncthing binary for testing.
-        new SyncthingRunnable(context, "touch " + testFile.getAbsolutePath() + "\n").run();
+        new SyncthingRunnable(context, "touch " + testFile.getAbsolutePath() + "; exit\n").run();
         assertTrue(testFile.exists());
         testFile.delete();
     }

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/ConfigXmlTest.java
Patch:
@@ -36,7 +36,7 @@ protected void tearDown() throws Exception {
 
     @SmallTest
     public void testGetWebGuiUrl() {
-        assertEquals("http://127.0.0.1:8080", mConfig.getWebGuiUrl());
+        assertTrue(mConfig.getWebGuiUrl().startsWith("http://127.0.0.1:"));
     }
 
     /**

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -70,6 +70,8 @@ public void run() {
 
                 if (ret == 3) {
                     Log.i(TAG, "Restarting syncthing");
+                    mContext.startService(new Intent(mContext, SyncthingService.class)
+                            .setAction(SyncthingService.ACTION_RESTART));
                 }
             } while (ret == 3);
         } catch (IOException | InterruptedException e) {

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -81,6 +81,9 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         for (File f : mRootDirectories) {
+            if (f == null)
+                continue;
+
             mRootsAdapter.add(f);
         }
 

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderSettingsFragment.java
Patch:
@@ -151,6 +151,8 @@ else if (currentState != SyncthingService.State.ACTIVE) {
         List<RestApi.Device> devicesList = mSyncthingService.getApi().getDevices();
         for (RestApi.Device n : devicesList) {
             ExtendedCheckBoxPreference cbp = new ExtendedCheckBoxPreference(getActivity(), n);
+            // Calling addPreference later causes it to change the checked state.
+            mDevices.addPreference(cbp);
             cbp.setTitle(n.Name);
             cbp.setKey(KEY_NODE_SHARED);
             cbp.setOnPreferenceChangeListener(FolderSettingsFragment.this);
@@ -160,7 +162,6 @@ else if (currentState != SyncthingService.State.ACTIVE) {
                     cbp.setChecked(true);
                 }
             }
-            mDevices.addPreference(cbp);
         }
         mVersioning.setChecked(mFolder.Versioning instanceof RestApi.SimpleVersioning);
         if (mVersioning.isChecked()) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -482,7 +482,6 @@ public List<Folder> getFolders() {
                     JSONObject n = devices.getJSONObject(j);
                     r.DeviceIds.add(n.getString("DeviceID"));
                 }
-                r.DeviceIds.add(mLocalDeviceId);
 
                 r.ReadOnly = json.getBoolean("ReadOnly");
                 r.RescanIntervalS = json.getInt("RescanIntervalS");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -612,7 +612,7 @@ private int getDeviceCompletion(String deviceId) {
             }
             if (isShared) {
                 long global = mCachedModelInfo.get(id).globalBytes;
-                long local = mCachedModelInfo.get(id).localBytes;
+                long local = mCachedModelInfo.get(id).inSyncBytes;
                 percentageSum += (global != 0)
                         ? (local * 100f) / global
                         : 100f;

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -123,7 +123,7 @@ public void updateIfNeeded() {
             }
 
             // Replace /sdcard/ in folder path with proper path.
-            String dir = r.getAttribute("directory");
+            String dir = r.getAttribute("path");
             if (dir.startsWith("/sdcard")) {
                 String newDir = dir.replace("/sdcard",
                         Environment.getExternalStorageDirectory().getAbsolutePath());

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderSettingsFragment.java
Patch:
@@ -195,8 +195,8 @@ public void onPrepareOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.create:
-                if (mFolder.ID.equals("")) {
-                    Toast.makeText(getActivity(), R.string.folder_id_required, Toast.LENGTH_LONG)
+                if (mFolder.ID.length() > 64 || !mFolder.ID.matches("[a-zA-Z0-9-_\\.]+")) {
+                    Toast.makeText(getActivity(), R.string.folder_id_invalid, Toast.LENGTH_LONG)
                             .show();
                     return true;
                 }

File: src/main/java/com/nutomic/syncthingandroid/fragments/FolderSettingsFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onCreate(Bundle savedInstanceState) {
                 mFolder = new RestApi.Folder();
                 mFolder.ID = "";
                 mFolder.Path = "";
-                mFolder.RescanIntervalS = 86400;
+                mFolder.RescanIntervalS = 0;
                 mFolder.DeviceIds = new ArrayList<>();
                 mFolder.Versioning = new RestApi.Versioning();
             }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -181,6 +181,8 @@ public void updateState() {
             mApi.shutdown();
 
             Log.i(TAG, "Starting syncthing according to current state and preferences");
+            mConfig = new ConfigXml(SyncthingService.this);
+            mConfig.updateIfNeeded();
             mCurrentState = State.STARTING;
             registerOnWebGuiAvailableListener(mApi);
             new PollWebGuiAvailableTaskImpl().execute(mConfig.getWebGuiUrl());

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -353,6 +353,7 @@ protected void onPostExecute(Void aVoid) {
             }
             Log.i(TAG, "Web GUI has come online at " + mConfig.getWebGuiUrl());
             mCurrentState = State.ACTIVE;
+            onApiChange();
             for (OnWebGuiAvailableListener listener : mOnWebGuiAvailableListeners) {
                 listener.onWebGuiAvailable();
             }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -749,7 +749,7 @@ public boolean deleteDevice(Device device, Activity activity) {
      */
     public boolean editFolder(Folder folder, boolean create, Activity activity) {
         try {
-            JSONArray folders = mConfig.getJSONArray("Folder");
+            JSONArray folders = mConfig.getJSONArray("Folders");
             JSONObject r = null;
             if (create) {
                 r = new JSONObject();

File: src/androidTest/java/com/nutomic/syncthingandroid/test/util/FolderObserverTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
+import android.test.suitebuilder.annotation.SmallTest;
 
 import com.nutomic.syncthingandroid.syncthing.RestApi;
 import com.nutomic.syncthingandroid.test.MockContext;

File: src/main/java/com/nutomic/syncthingandroid/util/FolderObserver.java
Patch:
@@ -88,7 +88,9 @@ public void onEvent(int event, String path) {
             case MOVED_TO:
                 // fall through
             case CREATE:
-                mChilds.add(new FolderObserver(mListener, mFolder, path));
+                if (new File(mPath, path).isDirectory()) {
+                    mChilds.add(new FolderObserver(mListener, mFolder, path));
+                }
                 // fall through
             default:
                 mListener.onFolderFileChange(mFolder.ID, new File(mPath, path).getPath());

File: src/main/java/com/nutomic/syncthingandroid/syncthing/NetworkReceiver.java
Patch:
@@ -16,6 +16,9 @@ public class NetworkReceiver extends BroadcastReceiver {
 
     @Override
     public void onReceive(Context context, Intent intent) {
+        if (!SyncthingService.alwaysRunInBackground(context))
+            return;
+
         ConnectivityManager cm =
                 (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo wifiInfo = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -849,7 +849,7 @@ protected void onPostExecute(String s) {
                     normalized = json.optString("id", null);
                     error = json.optString("error", null);
                 } catch (JSONException e) {
-                    Log.d(TAG, "Failed to parse normalized node ID JSON", e);
+                    Log.w(TAG, "Failed to parse normalized node ID JSON", e);
                 }
                 listener.onNodeIdNormalized(normalized, error);
             }

File: src/main/java/com/nutomic/syncthingandroid/util/RepoObserver.java
Patch:
@@ -56,7 +56,7 @@ public boolean accept(File current, String name) {
             }
         });
 
-        mChilds = new ArrayList<>(directories.length);
+        mChilds = new ArrayList<>();
         for (File f : directories) {
             mChilds.add(new RepoObserver(mListener, mRepo, path + "/" + f.getName()));
         }

File: src/androidTest/java/com/nutomic/syncthingandroid/test/MockSyncthingService.java
Patch:
@@ -49,7 +49,7 @@ public boolean isFirstStart() {
 
     @Override
     public RestApi getApi() {
-        return new MockRestApi(this, null, null);
+        return new MockRestApi(this, null, null, null);
     }
 
     @Override

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingRunnable.java
Patch:
@@ -82,9 +82,9 @@ public void run() {
                         .setOnlyAlertOnce(true);
                 Notification n = new NotificationCompat.BigTextStyle(b)
                         .bigText(mContext.getString(R.string.binary_crashed_message, ret)).build();
-                NotificationManager mNotificationManager = (NotificationManager)
+                NotificationManager nm = (NotificationManager)
                         mContext.getSystemService(Context.NOTIFICATION_SERVICE);
-                mNotificationManager.notify(NOTIFICATION_CRASHED, n);
+                nm.notify(NOTIFICATION_CRASHED, n);
             }
         }
     }

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -141,8 +141,8 @@ else if (mCurrentState != State.INIT) {
      */
     public void updateState() {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-        boolean prefStopMobileData = prefs.getBoolean(PREF_SYNC_ONLY_WIFI, true);
-        boolean prefStopNotCharging = prefs.getBoolean(PREF_SYNC_ONLY_CHARGING, true);
+        boolean prefStopMobileData = prefs.getBoolean(PREF_SYNC_ONLY_WIFI, false);
+        boolean prefStopNotCharging = prefs.getBoolean(PREF_SYNC_ONLY_CHARGING, false);
 
         // Start syncthing.
         if ((mDeviceStateHolder.isCharging() || !prefStopNotCharging) &&

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -82,6 +82,7 @@ public static class Repo {
         public String Invalid;
         public List<String> NodeIds;
         public boolean ReadOnly;
+        public int RescanIntervalS;
         public Versioning Versioning;
     }
 
@@ -478,6 +479,7 @@ public List<Repo> getRepos() {
                 r.NodeIds.add(mLocalNodeId);
 
                 r.ReadOnly = json.getBoolean("ReadOnly");
+                r.RescanIntervalS = json.getInt("RescanIntervalS");
                 JSONObject versioning = json.getJSONObject("Versioning");
                 if (versioning.getString("Type").equals("simple")) {
                     SimpleVersioning sv = new SimpleVersioning();
@@ -776,6 +778,7 @@ public boolean editRepo(Repo repo, boolean create, Activity activity) {
             for (String key : repo.Versioning.getParams().keySet()) {
                 params.put(key, repo.Versioning.getParams().get(key));
             }
+            r.put("RescanIntervalS", repo.RescanIntervalS);
             r.put("Versioning", versioning);
             requireRestart(activity);
         } catch (JSONException e) {

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  * Provides direct access to the config.xml file in the file system.
- * <p/>
+ *
  * This class should only be used if the syncthing API is not available (usually during startup).
  */
 public class ConfigXml {

File: src/main/java/com/nutomic/syncthingandroid/activities/FolderPickerActivity.java
Patch:
@@ -183,7 +183,7 @@ public void onBackPressed() {
 
     @Override
     public void onApiChange(SyncthingService.State currentState) {
-        if (currentState != SyncthingService.State.ACTIVE) {
+        if (!isFinishing() && currentState != SyncthingService.State.ACTIVE) {
             setResult(Activity.RESULT_CANCELED);
             SyncthingService.showDisabledDialog(this);
             finish();

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -48,7 +48,6 @@ public class MainActivity extends SyncthingActivity
     @Override
     @SuppressLint("InflateParams")
     public void onApiChange(SyncthingService.State currentState) {
-        Log.d("MainActivity", currentState.toString());
         if (currentState != SyncthingService.State.ACTIVE && !isFinishing()) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -384,7 +384,7 @@ private void createRestartNotification() {
      */
     public List<Node> getNodes() {
         if (mConfig == null)
-            return null;
+            return new ArrayList<>();
 
         try {
             return getNodes(mConfig.getJSONArray("Nodes"));

File: src/main/java/com/nutomic/syncthingandroid/activities/MainActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBar.Tab;
 import android.support.v7.app.ActionBar.TabListener;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -47,6 +48,7 @@ public class MainActivity extends SyncthingActivity
     @Override
     @SuppressLint("InflateParams")
     public void onApiChange(SyncthingService.State currentState) {
+        Log.d("MainActivity", currentState.toString());
         if (currentState != SyncthingService.State.ACTIVE && !isFinishing()) {
             if (currentState == SyncthingService.State.DISABLED) {
                 if (mLoadingDialog != null) {
@@ -205,6 +207,7 @@ public void onDestroy() {
     @Override
     public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
         super.onServiceConnected(componentName, iBinder);
+        getService().registerOnApiChangeListener(this);
         getService().registerOnApiChangeListener(mRepositoriesFragment);
         getService().registerOnApiChangeListener(mNodesFragment);
     }

File: src/main/java/com/nutomic/syncthingandroid/fragments/NodeSettingsFragment.java
Patch:
@@ -39,7 +39,6 @@ public class NodeSettingsFragment extends PreferenceFragment implements
 
 	private SyncthingService mSyncthingService;
 
-	// FIXME: is null
 	private RestApi.Node mNode;
 
 	private Preference mNodeId;
@@ -93,11 +92,13 @@ public void onServiceConnected() {
 	@Override
 	public void onApiChange(SyncthingService.State currentState) {
 		if (currentState != SyncthingService.State.ACTIVE) {
-			SyncthingService.showDisabledDialog(getActivity());
 			getActivity().finish();
 			return;
 		}
 
+		if (getActivity() == null || getActivity().isFinishing())
+			return;
+
 		if (mIsCreate) {
 			getActivity().setTitle(R.string.add_node);
 			mNode = new RestApi.Node();

File: src/main/java/com/nutomic/syncthingandroid/fragments/RepoSettingsFragment.java
Patch:
@@ -52,7 +52,6 @@ public class RepoSettingsFragment extends PreferenceFragment
 
 	private SyncthingService mSyncthingService;
 
-	// FIXME: is null
 	private RestApi.Repo mRepo;
 
 	private EditTextPreference mRepoId;
@@ -102,11 +101,13 @@ public void onCreate(Bundle savedInstanceState) {
 	@Override
 	public void onApiChange(SyncthingService.State currentState) {
 		if (currentState != SyncthingService.State.ACTIVE) {
-			SyncthingService.showDisabledDialog(getActivity());
 			getActivity().finish();
 			return;
 		}
 
+		if (getActivity() == null || getActivity().isFinishing())
+			return;
+
 		if (mIsCreate) {
 			getActivity().setTitle(R.string.create_repo);
 			mRepo = new RestApi.Repo();

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -739,7 +739,7 @@ public void deleteNode(Node node, Activity activity) {
 	/**
 	 * Updates or creates the given node.
 	 */
-	public void editRepo(Repo repo, boolean create, Activity activity) {
+	public void editRepo(Repo repo, boolean create, Context context) {
 		try {
 			JSONArray repos = mConfig.getJSONArray("Repositories");
 			JSONObject r = null;
@@ -777,7 +777,7 @@ public void editRepo(Repo repo, boolean create, Activity activity) {
 				params.put(key, repo.Versioning.getParams().get(key));
 			}
 			r.put("Versioning", versioning);
-			configUpdated(activity);
+			configUpdated(context);
 		}
 		catch (JSONException e) {
 			Log.w(TAG, "Failed to edit repo " + repo.ID + " at " + repo.Directory, e);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -131,6 +131,7 @@ protected void onPostExecute(Void aVoid) {
 					ConfigXml config = new ConfigXml(SyncthingService.this);
 					mApi = new RestApi(SyncthingService.this,
 							config.getWebGuiUrl(), config.getApiKey());
+					mCurrentState = State.STARTING;
 					registerOnWebGuiAvailableListener(mApi);
 					new PollWebGuiAvailableTask().execute();
 				}

File: src/main/java/com/nutomic/syncthingandroid/gui/FolderPickerActivity.java
Patch:
@@ -203,9 +203,10 @@ public void onBackPressed() {
 	}
 
 	@Override
-	public void onApiChange(boolean isAvailable) {
-		if (!isAvailable) {
+	public void onApiChange(SyncthingService.State currentState) {
+		if (currentState != SyncthingService.State.ACTIVE) {
 			setResult(Activity.RESULT_CANCELED);
+			SyncthingService.showDisabledDialog(this);
 			finish();
 		}
 	}

File: src/main/java/com/nutomic/syncthingandroid/gui/LocalNodeInfoFragment.java
Patch:
@@ -111,8 +111,8 @@ public void run() {
 	}
 
 	@Override
-	public void onApiChange(boolean isAvailable) {
-		if (!isAvailable)
+	public void onApiChange(SyncthingService.State currentState) {
+		if (currentState != SyncthingService.State.ACTIVE)
 			return;
 
 		updateGui();

File: src/main/java/com/nutomic/syncthingandroid/gui/NodesFragment.java
Patch:
@@ -31,8 +31,8 @@ public void onResume() {
 	}
 
 	@Override
-	public void onApiChange(boolean isAvailable) {
-		if (!isAvailable)
+	public void onApiChange(SyncthingService.State currentState) {
+		if (currentState != SyncthingService.State.ACTIVE)
 			return;
 
 		initAdapter();

File: src/main/java/com/nutomic/syncthingandroid/gui/RepoSettingsActivity.java
Patch:
@@ -118,8 +118,9 @@ else if (getIntent().getAction().equals(ACTION_EDIT)) {
 	}
 
 	@Override
-	public void onApiChange(boolean isAvailable) {
-		if (!isAvailable) {
+	public void onApiChange(SyncthingService.State currentState) {
+		if (currentState != SyncthingService.State.ACTIVE) {
+			SyncthingService.showDisabledDialog(this);
 			finish();
 			return;
 		}

File: src/main/java/com/nutomic/syncthingandroid/gui/ReposFragment.java
Patch:
@@ -30,8 +30,8 @@ public void onResume() {
 	}
 
 	@Override
-	public void onApiChange(boolean isAvailable) {
-		if (!isAvailable)
+	public void onApiChange(SyncthingService.State currentState) {
+		if (currentState != SyncthingService.State.ACTIVE)
 			return;
 
 		initAdapter();

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -148,7 +148,7 @@ public void run() {
 				dos.writeBytes("exit\n");
 				dos.flush();
 
-				log(process.getErrorStream());
+				log(process.getInputStream());
 
 				ret = process.waitFor();
 			}

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -456,8 +456,8 @@ public List<Repo> getRepos() {
 				r.Invalid = json.getString("Invalid");
 				r.Nodes = new ArrayList<Node>();
 				JSONArray nodes = json.getJSONArray("Nodes");
-				for (int j = 0; i < nodes.length(); i++) {
-					JSONObject n = nodes.getJSONObject(i);
+				for (int j = 0; j < nodes.length(); j++) {
+					JSONObject n = nodes.getJSONObject(j);
 					String id = n.getString("NodeID");
 					for (Node n2 : getNodes()) {
 						if (n2.NodeID.equals(id)) {

File: src/main/java/com/nutomic/syncthingandroid/gui/NodesFragment.java
Patch:
@@ -3,9 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.AdapterView;
 import android.widget.ListView;
 

File: src/main/java/com/nutomic/syncthingandroid/gui/ReposFragment.java
Patch:
@@ -3,9 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.AdapterView;
 
 import com.nutomic.syncthingandroid.R;

File: src/main/java/com/nutomic/syncthingandroid/gui/WebGuiActivity.java
Patch:
@@ -12,7 +12,6 @@
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 import android.widget.ProgressBar;
-import android.widget.TextView;
 
 import com.nutomic.syncthingandroid.R;
 import com.nutomic.syncthingandroid.syncthing.SyncthingService;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -37,6 +37,8 @@ public class GetTask extends AsyncTask<String, Void, String> {
 
 	public static final String URI_MODEL = "/rest/model";
 
+	public static final String URI_NODEID = "/rest/nodeid";
+
 	/**
 	 * params[0] Syncthing hostname
 	 * params[1] URI to call

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -36,7 +36,6 @@
 import java.lang.ref.WeakReference;
 import java.util.HashSet;
 import java.util.Iterator;
-import java.util.concurrent.locks.ReentrantLock;
 
 /**
  * Holds the native syncthing instance and provides an API to access it.

File: src/main/java/com/nutomic/syncthingandroid/util/ReposAdapter.java
Patch:
@@ -56,10 +56,10 @@ public View getView(int position, View convertView, ViewGroup parent) {
 			size.setText(RestApi.readableFileSize(getContext(), model.localBytes) + " / " +
 					RestApi.readableFileSize(getContext(), model.globalBytes));
 			invalid.setText(model.invalid);
-			invalid.setVisibility((model.invalid.equals("")) ? View.INVISIBLE : View.VISIBLE);
+			invalid.setVisibility((model.invalid.equals("")) ? View.GONE : View.VISIBLE);
 		}
 		else {
-			invalid.setVisibility(View.INVISIBLE);
+			invalid.setVisibility(View.GONE);
 		}
 
 		return convertView;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -171,6 +171,8 @@ public void run() {
 				if (ret != 0) {
 					mMainThreadHandler.post(new Runnable() {
 						public void run() {
+							Log.w(TAG_NATIVE, "Syncthing binary crashed with error code " +
+									Integer.toString(retVal));
 							AlertDialog dialog = new AlertDialog.Builder(SyncthingService.this)
 									.setTitle(R.string.binary_crashed_title)
 									.setMessage(getString(R.string.binary_crashed_message, retVal))

File: src/main/java/com/nutomic/syncthingandroid/gui/NodeSettingsActivity.java
Patch:
@@ -141,7 +141,7 @@ else if (getIntent().getAction().equals(ACTION_EDIT)) {
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
 		getMenuInflater().inflate(R.menu.node_settings, menu);
-		return super.onCreateOptionsMenu(menu);
+		return true;
 	}
 
 	@Override

File: src/main/java/com/nutomic/syncthingandroid/gui/RepoSettingsActivity.java
Patch:
@@ -176,7 +176,7 @@ else if (getIntent().getAction().equals(ACTION_EDIT)) {
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
 		getMenuInflater().inflate(R.menu.repo_settings, menu);
-		return super.onCreateOptionsMenu(menu);
+		return true;
 	}
 
 	@Override

File: src/main/java/com/nutomic/syncthingandroid/gui/NodeSettingsActivity.java
Patch:
@@ -169,6 +169,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
 			case R.id.share_node_id:
 				RestApi.shareNodeId(this, mNode.NodeID);
 				return true;
+			case android.R.id.home:
+				finish();
+				return true;
 			default:
 				return super.onOptionsItemSelected(item);
 		}

File: src/main/java/com/nutomic/syncthingandroid/gui/RepoSettingsActivity.java
Patch:
@@ -200,6 +200,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
 				mSyncthingService.getApi().editRepo(mRepo, true);
 				finish();
 				return true;
+			case android.R.id.home:
+				finish();
+				return true;
 		}
 		return super.onOptionsItemSelected(item);
 	}

File: src/main/java/com/nutomic/syncthingandroid/util/ConfigXml.java
Patch:
@@ -64,6 +64,7 @@ public String getApiKey() {
 	 *
 	 * Coming from 0.3.0 and earlier, the ignorePerms flag is set to true on every repository.
 	 */
+	@SuppressWarnings("SdCardPath")
 	public void update() {
 		Log.i(TAG, "Checking for needed config updates");
 		boolean changed = false;

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -50,7 +50,7 @@ protected String doInBackground(String... params) {
 		HttpClient httpclient = new DefaultHttpClient();
 		if (params.length == 5) {
 			LinkedList<NameValuePair> urlParams = new LinkedList<NameValuePair>();
-			urlParams.add(new BasicNameValuePair(params[2], params[3]));
+			urlParams.add(new BasicNameValuePair(params[3], params[4]));
 			fullUri += "?" + URLEncodedUtils.format(urlParams, "utf-8");
 		}
 		HttpGet get = new HttpGet(fullUri);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -632,7 +632,7 @@ public void editRepo(Repo repo, boolean create) {
 			JSONArray nodes = new JSONArray();
 			for (Node n : repo.Nodes) {
 				JSONObject element = new JSONObject();
-				element.put("Addresses", n.Addresses);
+				element.put("Addresses", listToJson(n.Addresses.split(" ")));
 				element.put("Name", n.Name);
 				element.put("NodeID", n.NodeID);
 				nodes.put(element);

File: src/main/java/com/nutomic/syncthingandroid/gui/MainActivity.java
Patch:
@@ -214,7 +214,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 
 	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
-		if (mLocalNodeInfoFragment.onOptionsItemSelected(item)) {
+		if (mLocalNodeInfoFragment.onOptionsItemSelected(item) ||
+				mDrawerToggle.onOptionsItemSelected(item)) {
 			return true;
 		}
 
@@ -238,7 +239,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
 	@Override
 	protected void onPostCreate(Bundle savedInstanceState) {
 		super.onPostCreate(savedInstanceState);
-		// Sync the toggle state after onRestoreInstanceState has occurred.
 		mDrawerToggle.syncState();
 	}
 

File: src/main/java/com/nutomic/syncthingandroid/syncthing/RestApi.java
Patch:
@@ -157,7 +157,7 @@ public void shutdown() {
 	 * Restarts the syncthing binary.
 	 */
 	public void restart() {
-		new PostTask().execute(mUrl, PostTask.URI_RESTART, "");
+		new PostTask().execute(mUrl, PostTask.URI_RESTART);
 	}
 
 	/**

File: src/main/java/com/nutomic/syncthingandroid/syncthing/GetTask.java
Patch:
@@ -37,7 +37,6 @@ protected String doInBackground(String... params) {
 		HttpClient httpclient = new DefaultHttpClient();
 		HttpGet get = new HttpGet(fullUri);
 		get.addHeader(new BasicHeader("X-API-Key", params[2]));
-		String responseString = null;
 		try {
 			HttpResponse response = httpclient.execute(get);
 			HttpEntity entity = response.getEntity();

File: src/main/java/com/nutomic/syncthingandroid/syncthing/PostTask.java
Patch:
@@ -32,9 +32,8 @@ protected Void doInBackground(String... params) {
 		HttpClient httpclient = new DefaultHttpClient();
 		HttpPost post = new HttpPost(fullUri);
 		post.addHeader(new BasicHeader("X-API-Key", params[2]));
-		String responseString = null;
 		try {
-			HttpResponse response = httpclient.execute(post);
+			httpclient.execute(post);
 		}
 		catch (IOException e) {
 			Log.w(TAG, "Failed to call Rest API at " + fullUri, e);

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.IBinder;
+import android.os.Looper;
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 
@@ -136,7 +137,7 @@ private void runNative() {
 			process = Runtime.getRuntime().exec("sh");
 			dos = new DataOutputStream(process.getOutputStream());
 			// Set home directory to data folder for syncthing to use.
-			dos.writeBytes("HOME=" + getFilesDir() + "\n");
+			dos.writeBytes("HOME=" + getFilesDir() + " ");
 			// Call syncthing with -home (as it would otherwise use "~/.config/syncthing/".
 			dos.writeBytes(getApplicationInfo().dataDir + "/" + BINARY_NAME + " " +
 					"-home " + getFilesDir() + "\n");
@@ -294,6 +295,7 @@ public void onCreate() {
 		new Thread(new Runnable() {
 			@Override
 			public void run() {
+				Looper.prepare();
 				if (isFirstStart(SyncthingService.this)) {
 					Log.i(TAG, "App started for the first time. " +
 							"Copying default config, keys will be generated automatically");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -135,7 +135,7 @@ private void runNative() {
 			process = Runtime.getRuntime().exec("sh");
 			dos = new DataOutputStream(process.getOutputStream());
 			// Set home directory to data folder for syncthing to use.
-			dos.writeBytes("HOME=" + getFilesDir() + "\n");
+			dos.writeBytes("HOME=" + getFilesDir() + " ");
 			// Call syncthing with -home (as it would otherwise use "~/.config/syncthing/".
 			dos.writeBytes(getApplicationInfo().dataDir + "/" + BINARY_NAME + " " +
 					"-home " + getFilesDir() + "\n");

File: src/main/java/com/nutomic/syncthingandroid/syncthing/SyncthingService.java
Patch:
@@ -7,6 +7,7 @@
 import android.content.Intent;
 import android.os.AsyncTask;
 import android.os.IBinder;
+import android.os.Looper;
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 
@@ -292,6 +293,7 @@ public void onCreate() {
 		new Thread(new Runnable() {
 			@Override
 			public void run() {
+				Looper.prepare();
 				if (isFirstStart(SyncthingService.this)) {
 					Log.i(TAG, "App started for the first time. " +
 							"Copying default config, keys will be generated automatically");

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -138,7 +138,7 @@ public void run() throws NativeExecutionException {
 				Log.e(TAG, "Failed to execute syncthing binary or read output", e);
 			}
 			finally {
-				if (ret != 1) {
+				if (ret != 0) {
 					stopSelf();
 					// Include the log for Play Store crash reports.
 					throw new NativeExecutionException("Syncthing binary returned error code " +

File: src/main/java/com/nutomic/syncthingandroid/service/GetTask.java
Patch:
@@ -28,8 +28,8 @@ public class GetTask extends AsyncTask<String, Void, String> {
 	 */
 	public static final String URI_VERSION = SyncthingService.SYNCTHING_URL + "/rest/version";
 
-    @Override
-	 protected String doInBackground(String... uri) {
+	@Override
+	protected String doInBackground(String... uri) {
 		HttpClient httpclient = new DefaultHttpClient();
 		HttpGet get = new HttpGet(uri[0]);
 		String responseString = null;
@@ -57,4 +57,5 @@ protected String doInBackground(String... uri) {
 		}
 		return null;
 	}
+
 }

File: src/main/java/com/nutomic/syncthingandroid/service/GetTask.java
Patch:
@@ -1,6 +1,5 @@
 package com.nutomic.syncthingandroid.service;
 
-
 import android.os.AsyncTask;
 import android.util.Log;
 

File: src/main/java/com/nutomic/syncthingandroid/service/PostTask.java
Patch:
@@ -1,5 +1,4 @@
-package com.nutomic.syncthingandroid;
-
+package com.nutomic.syncthingandroid.service;
 
 import android.os.AsyncTask;
 import android.util.Log;

File: src/main/java/com/nutomic/syncthingandroid/service/SyncthingService.java
Patch:
@@ -16,8 +16,6 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 
-import com.nutomic.syncthingandroid.PostTask;
-
 /**
  * Holds the native syncthing instance and provides an API to access it.
  */

File: src/main/java/com/nutomic/syncthingandroid/WebGuiActivity.java
Patch:
@@ -94,6 +94,8 @@ public void onPageFinished(WebView view, String url) {
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
+		getApplicationContext().startService(
+				new Intent(this, SyncthingService.class));
 		getApplicationContext().bindService(
 				new Intent(this, SyncthingService.class),
 				mSyncthingServiceConnection, Context.BIND_AUTO_CREATE);

File: src/com/nutomic/syncthingandroid/WebGuiActivity.java
Patch:
@@ -4,7 +4,6 @@
 import android.app.AlertDialog;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
 import android.preference.PreferenceManager;
@@ -99,8 +98,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	@Override
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
-			case R.id.report_issue:
-				startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(getString(R.string.issue_tracker_url))));
+			case R.id.settings:
+				startActivity(new Intent(this, SettingsActivity.class));
 				return true;
 			case R.id.exit:
 				stopService(new Intent(this, SyncthingService.class));

