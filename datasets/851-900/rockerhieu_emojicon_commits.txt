File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconEditText.java
Patch:
@@ -22,7 +22,7 @@
 import android.text.style.DynamicDrawableSpan;
 import android.util.AttributeSet;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 /**
  * @author Hieu Rocker (rockerhieu@gmail.com).

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconGridFragment.java
Patch:
@@ -26,7 +26,7 @@
 import android.widget.AdapterView;
 import android.widget.GridView;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 import io.github.rockerhieu.emojicon.emoji.Emojicon;
 import io.github.rockerhieu.emojicon.emoji.People;

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconHandler.java
Patch:
@@ -19,7 +19,7 @@
 import android.text.Spannable;
 import android.util.SparseIntArray;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 import java.util.HashMap;
 import java.util.Map;

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconMultiAutoCompleteTextView.java
Patch:
@@ -22,7 +22,7 @@
 import android.util.AttributeSet;
 import android.widget.MultiAutoCompleteTextView;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 public class EmojiconMultiAutoCompleteTextView extends MultiAutoCompleteTextView {
     private int mEmojiconSize;

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconRecentsGridFragment.java
Patch:
@@ -21,7 +21,7 @@
 import android.view.View;
 import android.widget.GridView;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 import io.github.rockerhieu.emojicon.emoji.Emojicon;
 

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconTextView.java
Patch:
@@ -23,8 +23,7 @@
 import android.text.style.DynamicDrawableSpan;
 import android.util.AttributeSet;
 import android.widget.TextView;
-
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 /**
  * @author Hieu Rocker (rockerhieu@gmail.com).

File: library/src/main/java/io/github/rockerhieu/emojicon/EmojiconsFragment.java
Patch:
@@ -33,7 +33,7 @@
 import android.view.ViewGroup;
 import android.widget.EditText;
 
-import com.rockerhieu.emojicon.R;
+import io.github.rockerhieu.emojicon.R;
 
 import io.github.rockerhieu.emojicon.emoji.Emojicon;
 import io.github.rockerhieu.emojicon.emoji.Nature;

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconHandler.java
Patch:
@@ -1418,7 +1418,9 @@ public static void addEmojis(Context context, Spannable text, int emojiSize, boo
      * @param useSystemDefault
      */
     public static void addEmojis(Context context, Spannable text, int emojiSize, int index, int length, boolean useSystemDefault) {
-        if (useSystemDefault) return;
+        if (useSystemDefault) {
+            return;
+        }
 
         int textLength = text.length();
         int textLengthToProcessMax = textLength - index;

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconRecentsGridFragment.java
Patch:
@@ -49,9 +49,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (getArguments() != null) {
             mUseSystemDefault = getArguments().getBoolean(USE_SYSTEM_DEFAULT_KEY);
-        }
-        else
-        {
+        } else {
             mUseSystemDefault = false;
         }
     }

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconsFragment.java
Patch:
@@ -284,9 +284,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (getArguments() != null) {
             mUseSystemDefault = getArguments().getBoolean(USE_SYSTEM_DEFAULT_KEY);
-        }
-        else
-        {
+        } else {
             mUseSystemDefault = false;
         }
     }

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconsFragment.java
Patch:
@@ -62,7 +62,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         // we handle recents
         EmojiconRecents recents = this;
         mEmojisAdapter = new EmojisPagerAdapter(getFragmentManager(), Arrays.asList(
-                EmojiconRecentsGridFragment.newInstance(),
+                EmojiconRecentsGridFragment.newInstance(mUseSystemDefault),
                 EmojiconGridFragment.newInstance(People.DATA, recents, mUseSystemDefault),
                 EmojiconGridFragment.newInstance(Nature.DATA, recents, mUseSystemDefault),
                 EmojiconGridFragment.newInstance(Objects.DATA, recents, mUseSystemDefault),

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconTextView.java
Patch:
@@ -51,8 +51,8 @@ private void init(AttributeSet attrs) {
         } else {
             TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.Emojicon);
             mEmojiconSize = (int) a.getDimension(R.styleable.Emojicon_emojiconSize, getTextSize());
-            mTextStart = a.getInteger(R.styleable.Emojicon_textStart, 0);
-            mTextLength = a.getInteger(R.styleable.Emojicon_textLength, -1);
+            mTextStart = a.getInteger(R.styleable.Emojicon_emojiconTextStart, 0);
+            mTextLength = a.getInteger(R.styleable.Emojicon_emojiconTextLength, -1);
             a.recycle();
         }
         setText(getText());

File: library/src/main/java/com/rockerhieu/emojicon/EmojiconHandler.java
Patch:
@@ -1420,7 +1420,7 @@ public static void addEmojis(Context context, Spannable text, int emojiSize, int
                     icon = getEmojiResource(context, unicode);
                 }
 
-                if (icon == 0 && i + skip < length) {
+                if (icon == 0 && i + skip < textLengthToProcess) {
                     int followUnicode = Character.codePointAt(text, i + skip);
                     if (followUnicode == 0x20e3) {
                         int followSkip = Character.charCount(followUnicode);

