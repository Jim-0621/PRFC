File: src/main/java/com/plexpt/chatgpt/ConsoleChatGPT.java
Patch:
@@ -109,7 +109,7 @@ public void onError(Throwable throwable, String response) {
                 }
             };
 
-            listener.setOnComplate(msg -> {
+            listener.setOnComplete(msg -> {
                 countDownLatch.countDown();
             });
             chatGPT.streamChatCompletion(Arrays.asList(message), listener);

File: src/test/java/com/plexpt/chatgpt/StreamTest.java
Patch:
@@ -67,7 +67,7 @@ public SseEmitter sseEmitter(String prompt) {
         SseStreamListener listener = new SseStreamListener(sseEmitter);
         Message message = Message.of(prompt);
 
-        listener.setOnComplate(msg -> {
+        listener.setOnComplete(msg -> {
             //回答完成，可以做一些事情
         });
         chatGPTStream.streamChatCompletion(Arrays.asList(message), listener);

File: src/main/java/com/plexpt/chatgpt/listener/AbstractStreamListener.java
Patch:
@@ -36,7 +36,7 @@ public abstract class AbstractStreamListener extends EventSourceListener {
      */
     @Setter
     @Getter
-    protected Consumer<String> onComplate = s -> {
+    protected Consumer<String> onComplete = s -> {
 
     };
 
@@ -70,7 +70,7 @@ public void onClosed(EventSource eventSource) {
     @Override
     public void onEvent(EventSource eventSource, String id, String type, String data) {
         if (data.equals("[DONE]")) {
-            onComplate.accept(lastMessage);
+            onComplete.accept(lastMessage);
             return;
         }
 

File: src/main/java/com/plexpt/chatgpt/listener/AbstractStreamListener.java
Patch:
@@ -36,7 +36,7 @@ public abstract class AbstractStreamListener extends EventSourceListener {
      */
     @Setter
     @Getter
-    protected Consumer<String> onComplate = s -> {
+    protected Consumer<String> onComplete = s -> {
 
     };
 
@@ -70,7 +70,7 @@ public void onClosed(EventSource eventSource) {
     @Override
     public void onEvent(EventSource eventSource, String id, String type, String data) {
         if (data.equals("[DONE]")) {
-            onComplate.accept(lastMessage);
+            onComplete.accept(lastMessage);
             return;
         }
 

File: src/main/java/com/plexpt/chatgpt/entity/chat/Message.java
Patch:
@@ -15,7 +15,7 @@
 @Builder
 public class Message {
     /**
-     * 目前支持三中角色参考官网，进行情景输入：https://platform.openai.com/docs/guides/chat/introduction
+     * 目前支持三种角色参考官网，进行情景输入：https://platform.openai.com/docs/guides/chat/introduction
      */
     private String role;
     private String content;

File: src/main/java/com/plexpt/chatgpt/ChatGPT.java
Patch:
@@ -9,8 +9,6 @@
 import com.plexpt.chatgpt.entity.chat.Message;
 import com.plexpt.chatgpt.exception.ChatException;
 
-import org.jetbrains.annotations.NotNull;
-
 import java.math.BigDecimal;
 import java.net.Proxy;
 import java.util.Arrays;
@@ -52,7 +50,6 @@ public class ChatGPT {
     /**
      * keys
      */
-    @NotNull
     private String apiKey;
 
     private List<String> apiKeyList;

File: src/main/java/com/plexpt/chatgpt/ChatGPTStream.java
Patch:
@@ -40,9 +40,7 @@
 @AllArgsConstructor
 public class ChatGPTStream {
 
-    @NonNull
     private String apiKey;
-
     private List<String> apiKeyList;
 
     private OkHttpClient okHttpClient;

