File: app/src/main/java/io/github/ryanhoo/music/player/Player.java
Patch:
@@ -213,6 +213,7 @@ public void releasePlayer() {
         mPlayer.reset();
         mPlayer.release();
         mPlayer = null;
+        sInstance = null;
     }
 
     // Callbacks

File: app/src/main/java/io/github/ryanhoo/music/data/source/AppLocalDataSource.java
Patch:
@@ -229,8 +229,8 @@ public void call(Subscriber<? super List<Song>> subscriber) {
                     boolean exists = file.exists();
                     if (!exists) {
                         iterator.remove();
+                        mLiteOrm.delete(song);
                     }
-                    mLiteOrm.delete(song);
                 }
                 subscriber.onNext(allSongs);
                 subscriber.onCompleted();

File: app/src/main/java/io/github/ryanhoo/music/ui/common/AbstractSummaryAdapter.java
Patch:
@@ -56,7 +56,7 @@ protected View getEndSummaryView() {
         return textViewEndSummary;
     }
 
-    private void updateSummaryText() {
+    public void updateSummaryText() {
         if (textViewEndSummary != null) {
             textViewEndSummary.setText(getEndSummaryText(super.getItemCount()));
         }

File: app/src/main/java/io/github/ryanhoo/music/ui/details/PlayListDetailsActivity.java
Patch:
@@ -165,7 +165,7 @@ public void handleError(Throwable e) {
     @Override
     public void onSongDeleted(Song song) {
         mAdapter.notifyItemRemoved(mDeleteIndex);
-        mAdapter.notifyItemRemoved(mDeleteIndex);
+        mAdapter.updateSummaryText();
     }
 
     @Override

File: app/src/main/java/io/github/ryanhoo/music/utils/DBUtils.java
Patch:
@@ -31,9 +31,9 @@ public static List<Folder> generateDefaultFolders() {
         // File sdcardDir = Environment.getExternalStorageDirectory();
         File downloadDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
         File musicDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
-        // defaultFolders.add(new Folder(sdcardDir.getName(), sdcardDir.getAbsolutePath()));
-        defaultFolders.add(new Folder(downloadDir.getName(), downloadDir.getAbsolutePath()));
-        defaultFolders.add(new Folder(musicDir.getName(), musicDir.getAbsolutePath()));
+        // defaultFolders.add(FileUtils.folderFromDir(sdcardDir));
+        defaultFolders.add(FileUtils.folderFromDir(downloadDir));
+        defaultFolders.add(FileUtils.folderFromDir(musicDir));
         return defaultFolders;
     }
 }

File: app/src/main/java/io/github/ryanhoo/music/ui/local/folder/AddedFolderAdapter.java
Patch:
@@ -59,7 +59,6 @@ protected View createFooterView() {
                 public void onClick(View v) {
                     if (mAddFolderCallback != null) {
                         mAddFolderCallback.onAddFolder();
-                        ;
                     }
                 }
             });

File: app/src/main/java/io/github/ryanhoo/music/data/model/PlayList.java
Patch:
@@ -20,7 +20,7 @@ public class PlayList {
     private static Random DICE = new Random();
     public static final int NO_POSITION = -1;
 
-    private List<Song> songs;
+    private List<Song> songs = new ArrayList<>();
 
     private int playingIndex = -1;
 

File: app/src/main/java/io/github/ryanhoo/music/ui/music/MusicPlayerFragment.java
Patch:
@@ -18,7 +18,7 @@
 import io.github.ryanhoo.music.event.PlaySongEvent;
 import io.github.ryanhoo.music.player.Player;
 import io.github.ryanhoo.music.ui.base.BaseFragment;
-import io.github.ryanhoo.music.ui.widget.AlbumImageView;
+import io.github.ryanhoo.music.ui.widget.ShadowImageView;
 import io.github.ryanhoo.music.utils.TimeUtils;
 import rx.Subscription;
 import rx.android.schedulers.AndroidSchedulers;
@@ -36,7 +36,7 @@ public class MusicPlayerFragment extends BaseFragment implements Player.Callback
     private static final String TAG = "MusicPlayerFragment";
 
     @BindView(R.id.image_view_album)
-    AlbumImageView imageViewAlbum;
+    ShadowImageView imageViewAlbum;
     @BindView(R.id.text_view_name)
     TextView textViewName;
     @BindView(R.id.text_view_artist)

File: app/src/main/java/io/github/ryanhoo/music/ui/local/all/AllLocalMusicFragment.java
Patch:
@@ -23,6 +23,7 @@
 import io.github.ryanhoo.music.ui.widget.RecyclerViewFastScroller;
 import rx.Observable;
 import rx.Subscriber;
+import rx.Subscription;
 import rx.android.schedulers.AndroidSchedulers;
 import rx.functions.Func1;
 import rx.schedulers.Schedulers;
@@ -110,7 +111,7 @@ public Loader<Cursor> onCreateLoader(int id, Bundle args) {
 
     @Override
     public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {
-        Observable.just(cursor)
+        Subscription subscription = Observable.just(cursor)
                 .flatMap(new Func1<Cursor, Observable<List<Music>>>() {
                     @Override
                     public Observable<List<Music>> call(Cursor cursor) {
@@ -144,7 +145,7 @@ public void onNext(List<Music> musicList) {
                         onMusicLoaded(musicList);
                     }
                 });
-
+        addSubscription(subscription);
     }
 
     @Override

