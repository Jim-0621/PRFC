File: chatkit/src/main/java/com/stfalcon/chatkit/dialogs/DialogsListAdapter.java
Patch:
@@ -200,7 +200,7 @@ public void addItems(List<DIALOG> newItems) {
      */
     public void addItem(DIALOG dialog) {
         items.add(dialog);
-        notifyItemInserted(0);
+        notifyItemInserted(items.size() - 1);
     }
 
     /**
@@ -421,7 +421,7 @@ public void setDatesFormatter(DateFormatter.Formatter datesFormatter) {
     void setStyle(DialogListStyle dialogStyle) {
         this.dialogStyle = dialogStyle;
     }
-    
+
     /**
     * @return the position of a dialog in the dialogs list.
     */

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/RecyclerScrollMoreListener.java
Patch:
@@ -79,13 +79,15 @@ public void onScrolled(RecyclerView view, int dx, int dy) {
             int visibleThreshold = 5;
             if (!loading && (lastVisibleItemPosition + visibleThreshold) > totalItemCount) {
                 currentPage++;
-                loadMoreListener.onLoadMore(currentPage, totalItemCount);
+                loadMoreListener.onLoadMore(loadMoreListener.getMessagesCount(), totalItemCount);
                 loading = true;
             }
         }
     }
 
     interface OnLoadMoreListener {
         void onLoadMore(int page, int total);
+
+        int getMessagesCount();
     }
 }

File: sample/src/main/java/com/stfalcon/chatkit/sample/features/demo/DemoMessagesActivity.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.Handler;
 import android.support.annotation.Nullable;
 import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.widget.ImageView;
@@ -89,6 +90,7 @@ public void onBackPressed() {
 
     @Override
     public void onLoadMore(int page, int totalItemsCount) {
+        Log.i("TAG", "onLoadMore: " + page + " " + totalItemsCount);
         if (totalItemsCount < TOTAL_MESSAGES_COUNT) {
             loadMessages();
         }

File: chatkit/src/main/java/com/stfalcon/chatkit/dialogs/DialogsList.java
Patch:
@@ -75,7 +75,7 @@ public void setAdapter(Adapter adapter) {
      */
     public <DIALOG extends IDialog>
     void setAdapter(DialogsListAdapter<DIALOG> adapter) {
-        setAdapter(adapter, true);
+        setAdapter(adapter, false);
     }
 
     /**

File: sample/src/main/java/com/stfalcon/chatkit/sample/features/demo/def/DefaultMessagesActivity.java
Patch:
@@ -3,8 +3,8 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
-import android.widget.Toast;
 
 import com.stfalcon.chatkit.messages.MessageInput;
 import com.stfalcon.chatkit.messages.MessagesList;
@@ -71,11 +71,11 @@ public void onMessageViewClick(View view, Message message) {
 
     @Override
     public void onStartTyping() {
-        Toast.makeText(this, R.string.start_typing_status, Toast.LENGTH_SHORT).show();
+        Log.v("Typing listener", getString(R.string.start_typing_status));
     }
 
     @Override
     public void onStopTyping() {
-        Toast.makeText(this, R.string.stop_typing_status, Toast.LENGTH_SHORT).show();
+        Log.v("Typing listener", getString(R.string.stop_typing_status));
     }
 }

File: sample/src/main/java/com/stfalcon/chatkit/sample/features/demo/def/DefaultMessagesActivity.java
Patch:
@@ -34,6 +34,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         MessageInput input = (MessageInput) findViewById(R.id.input);
         input.setInputListener(this);
+        input.setAttachmentsListener(this);
     }
 
     @Override

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListAdapter.java
Patch:
@@ -157,7 +157,7 @@ public void addToStart(MESSAGE message, boolean scroll) {
      * @param reverse  {@code true} if need to reverse messages before adding.
      */
     public void addToEnd(List<MESSAGE> messages, boolean reverse) {
-        if (messages.isEmpty()) return
+        if (messages.isEmpty()) return;
     
         if (reverse) Collections.reverse(messages);
 

File: sample/src/main/java/com/stfalcon/chatkit/sample/common/data/fixtures/FixturesData.java
Patch:
@@ -71,7 +71,7 @@ abstract class FixturesData {
     static final ArrayList<String> images = new ArrayList<String>() {
         {
             add("https://habrastorage.org/getpro/habr/post_images/e4b/067/b17/e4b067b17a3e414083f7420351db272b.jpg");
-            add("http://www.designboom.com/wp-content/uploads/2015/11/stefano-boeri-architetti-vertical-forest-residential-tower-lausanne-switzerland-designboom-01.jpg");
+            add("https://cdn.pixabay.com/photo/2017/12/25/17/48/waters-3038803_1280.jpg");
         }
     };
 

File: sample/src/main/java/com/stfalcon/chatkit/sample/common/data/fixtures/FixturesData.java
Patch:
@@ -55,6 +55,9 @@ abstract class FixturesData {
     static final ArrayList<String> messages = new ArrayList<String>() {
         {
             add("Hello!");
+            add("This is my phone number - +1 (234) 567-89-01");
+            add("Here is my e-mail - myemail@example.com");
+            add("Hey! Check out this awesome link! www.github.com");
             add("Hello! No problem. I can today at 2 pm. And after we can go to the office.");
             add("At first, for some time, I was not able to answer him one word");
             add("At length one of them called out in a clear, polite, smooth dialect, not unlike in sound to the Italian");

File: sample/src/main/java/com/stfalcon/chatkit/sample/common/data/model/Message.java
Patch:
@@ -9,8 +9,8 @@
  * Created by troy379 on 04.04.17.
  */
 public class Message implements IMessage,
-        MessageContentType.Image,
-        MessageContentType {
+        MessageContentType.Image, /*this is for default image messages implementation*/
+        MessageContentType /*and this one is for custom content type (in this case - voice message)*/ {
 
     private String id;
     private String text;

File: chatkit/src/main/java/com/stfalcon/chatkit/messages/MessagesListStyle.java
Patch:
@@ -169,7 +169,7 @@ static MessagesListStyle parse(Context context, AttributeSet attrs) {
                 style.getDimension(R.dimen.message_text_size));
         style.outcomingTextStyle = typedArray.getInt(R.styleable.MessagesList_outcomingTextStyle, Typeface.NORMAL);
         style.outcomingTimeTextColor = typedArray.getColor(R.styleable.MessagesList_outcomingTimeTextColor,
-                style.getColor(R.color.white60));
+                style.getColor(R.color.warm_grey_four));
         style.outcomingTimeTextSize = typedArray.getDimensionPixelSize(R.styleable.MessagesList_outcomingTimeTextSize,
                 style.getDimension(R.dimen.message_time_text_size));
         style.outcomingTimeTextStyle = typedArray.getInt(R.styleable.MessagesList_outcomingTimeTextStyle, Typeface.NORMAL);

File: sample/src/main/java/com/stfalcon/chatkit/sample/fixtures/MessagesListFixtures.java
Patch:
@@ -20,8 +20,8 @@ private MessagesListFixtures() {
     public static ArrayList<Message> getMessages(Date startDate) {
         ArrayList<MessagesListFixtures.Message> messages = new ArrayList<>();
         for (int i = 0; i < 10; i++) {
-            int count = rnd.nextInt(5) + 1;
-            for (int j = 0; j < count; j++) {
+            int countPerDay = rnd.nextInt(5) + 1;
+            for (int j = 0; j < countPerDay; j++) {
                 Message message = new MessagesListFixtures.Message();
 
                 Calendar calendar = Calendar.getInstance();

File: chatkit/src/main/java/com/stfalcon/chatkit/dialogs/DialogsListAdapter.java
Patch:
@@ -291,6 +291,8 @@ public OnDialogLongClickListener getOnLongItemClickListener() {
 
     /**
      * Register a callback to be invoked when item is long clicked.
+     *
+     * @param onLongItemClickListener on long click item callback
      */
     public void setOnDialogLongClickListener(OnDialogLongClickListener<DIALOG> onLongItemClickListener) {
         this.onLongItemClickListener = onLongItemClickListener;

File: sample/src/main/java/com/stfalcon/chatkit/sample/dialogs/CustomDialogViewHolder.java
Patch:
@@ -4,7 +4,6 @@
 
 import com.stfalcon.chatkit.dialogs.DialogsListAdapter;
 import com.stfalcon.chatkit.sample.R;
-import com.stfalcon.chatkit.sample.fixtures.Fixtures;
 import com.stfalcon.chatkit.sample.models.DefaultDialog;
 import com.stfalcon.chatkit.sample.models.DefaultUser;
 

File: sample/src/main/java/com/stfalcon/chatkit/sample/fixtures/DialogsListFixtures.java
Patch:
@@ -15,7 +15,7 @@
 /**
  * Created by Anton Bevza on 07.09.16.
  */
-public final class DialogsListFixtures extends Fixtures {
+public final class DialogsListFixtures extends FixturesData {
     private DialogsListFixtures() {
         throw new AssertionError();
     }

File: sample/src/main/java/com/stfalcon/chatkit/sample/fixtures/FixturesData.java
Patch:
@@ -7,7 +7,7 @@
  * Created by Anton Bevza on 1/13/17.
  */
 
-public class Fixtures {
+public class FixturesData {
 
     protected static ArrayList<String> avatars = new ArrayList<String>() {
         {

File: sample/src/main/java/com/stfalcon/chatkit/sample/fixtures/MessagesListFixtures.java
Patch:
@@ -11,7 +11,7 @@
 /*
  * Created by troy379 on 12.12.16.
  */
-public final class MessagesListFixtures extends Fixtures {
+public final class MessagesListFixtures extends FixturesData {
     private MessagesListFixtures() {
         throw new AssertionError();
     }

File: chatkit/src/main/java/com/stfalcon/chatkit/commons/Style.java
Patch:
@@ -73,7 +73,7 @@ protected final Drawable getDrawable(@DrawableRes int drawable) {
     }
 
     protected final Drawable getVectorDrawable(@DrawableRes int drawable) {
-        return VectorDrawableCompat.create(resources, drawable, null);
+        return resources.getDrawable(drawable);
     }
 
 }

File: sample/src/main/java/com/stfalcon/chatkit/sample/CustomIncomingMessageViewHolder.java
Patch:
@@ -4,12 +4,13 @@
 import android.widget.TextView;
 
 import com.stfalcon.chatkit.messages.MessagesListAdapter;
+import com.stfalcon.chatkit.sample.fixtures.MessagesListFixtures;
 
 /*
  * Created by troy379 on 12.12.16.
  */
 public class CustomIncomingMessageViewHolder
-        extends MessagesListAdapter.MessageViewHolder<Demo.Message> {
+        extends MessagesListAdapter.MessageViewHolder<MessagesListFixtures.Message> {
 
     private TextView text;
 
@@ -19,7 +20,7 @@ public CustomIncomingMessageViewHolder(View itemView) {
     }
 
     @Override
-    public void onBind(Demo.Message message) {
+    public void onBind(MessagesListFixtures.Message message) {
         text.setText(message.getText().concat(" (from custom holder)"));
     }
 }

File: sample/src/main/java/com/stfalcon/chatkit/sample/dialogs/DialogsListActivity.java
Patch:
@@ -12,7 +12,7 @@
 import com.stfalcon.chatkit.dialogs.DialogsListAdapter;
 import com.stfalcon.chatkit.dialogs.DialogsList;
 import com.stfalcon.chatkit.sample.R;
-import com.stfalcon.chatkit.sample.dialogs.fixtures.ChatListFixtures;
+import com.stfalcon.chatkit.sample.fixtures.ChatListFixtures;
 import com.stfalcon.chatkit.sample.models.DefaultDialog;
 
 import java.util.List;

File: chatkit/src/main/java/com/stfalcon/chatkit/features/messages/adapters/MessagesAdapter.java
Patch:
@@ -335,7 +335,7 @@ private View.OnLongClickListener getMessageLongClickListener(final Wrapper<MESSA
             public boolean onLongClick(View view) {
                 if (selectionListener == null) {
                     notifyMessageLongClicked(wrapper.item);
-                    return false;
+                    return true;
                 } else {
                     isSelectMode = true;
                     view.callOnClick();

File: chatkit/src/main/java/com/stfalcon/chatkit/features/messages/adapters/holders/DefaultIncomingMessageViewHolder.java
Patch:
@@ -24,7 +24,7 @@ public DefaultIncomingMessageViewHolder(View itemView) {
 
     @Override
     public void onBind(IMessage message) {
-        text.setText(isSelected() ? "selected" : message.getText());
+        text.setText(isSelected() ? "selected" : message.getText()); // FIXME: 13.12.16 for test only
 
         boolean isAvatarExists = message.getUser().getAvatar() != null && !message.getUser().getAvatar().isEmpty();
         userAvatar.setVisibility(isAvatarExists ? View.VISIBLE : View.GONE);

File: chatkit/src/main/java/com/stfalcon/chatkit/features/messages/adapters/holders/DefaultOutcomingMessageViewHolder.java
Patch:
@@ -24,7 +24,7 @@ public DefaultOutcomingMessageViewHolder(View itemView) {
 
     @Override
     public void onBind(IMessage message) {
-        text.setText(isSelected() ? "selected" : message.getText());
+        text.setText(isSelected() ? "selected" : message.getText()); // FIXME: 13.12.16 for test only
 
         boolean isAvatarExists = message.getUser().getAvatar() != null && !message.getUser().getAvatar().isEmpty();
         userAvatar.setVisibility(isAvatarExists ? View.VISIBLE : View.GONE);

File: chatkit/src/main/java/com/stfalcon/chatkit/features/messages/models/IMessage.java
Patch:
@@ -13,6 +13,8 @@ public interface IMessage {
 
     String getAuthorId();
 
+    String getText();
+
     // TODO: 09.12.16 most needed methods
 
 }

