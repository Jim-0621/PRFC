File: android/src/main/java/cl/json/RNSharePathUtil.java
Patch:
@@ -161,6 +161,9 @@ public static String getDataColumn(Context context, Uri uri, String selection, S
                 final int index = cursor.getColumnIndexOrThrow(column);
                 return cursor.getString(index);
             }
+        } catch (Exception ex) {
+            ex.printStackTrace();
+            return null;
         } finally {
             if (cursor != null) cursor.close();
         }

File: android/src/newarch/cl/json/RNShare.java
Patch:
@@ -29,7 +29,7 @@ public String getName() {
     }
     
     @Override
-    public Map<String, Object> getConstants() {
+    public Map<String, Object> getTypedExportedConstants() {
         return delegate.getConstants();
     }
     

File: android/src/main/java/cl/json/social/FacebookStoriesShare.java
Patch:
@@ -61,7 +61,7 @@ private void shareStory(ReadableMap options) {
         Activity activity = this.reactContext.getCurrentActivity();
 
         if (activity == null) {
-            TargetChosenReceiver.sendCallback(false, "Something went wrong");
+            TargetChosenReceiver.callbackReject("Something went wrong");
             return;
         }
 

File: android/src/main/java/cl/json/social/InstagramStoriesShare.java
Patch:
@@ -57,7 +57,7 @@ private void shareStory(ReadableMap options) {
         Activity activity = this.reactContext.getCurrentActivity();
 
         if (activity == null) {
-            TargetChosenReceiver.sendCallback(false, "Something went wrong");
+            TargetChosenReceiver.callbackReject("Something went wrong");
             return;
         }
 

File: android/src/main/java/cl/json/social/SnapChatShare.java
Patch:
@@ -15,7 +15,7 @@
 public class SnapChatShare extends SingleShareIntent {
 
     private static final String PACKAGE = "com.snapchat.android";
-    private static final String CLASS = "com.snapchat.android.LandingPageActivity";
+    private static final String CLASS = "com.snap.mushroom.MainActivity";
     private static final String PLAY_STORE_LINK = "market://details?id=com.snapchat.android";
     
     public SnapChatShare(ReactApplicationContext reactContext) {

File: android/src/main/java/cl/json/social/InstagramStoriesShare.java
Patch:
@@ -61,6 +61,8 @@ private void shareStory(ReadableMap options) {
             return;
         }
 
+        this.intent.putExtra("source_application", options.getString("appId"));
+
         this.intent.putExtra("bottom_background_color", "#906df4");
         this.intent.putExtra("top_background_color", "#837DF4");
 

File: android/src/main/java/cl/json/social/InstagramStoriesShare.java
Patch:
@@ -86,14 +86,16 @@ private void shareStory(ReadableMap options) {
 
         if (hasBackgroundAsset) {
             String backgroundFileName = "";
+            String backgroundType = "image/jpeg";
 
             if (this.hasValidKey("backgroundImage", options)) {
                 backgroundFileName = options.getString("backgroundImage");
             } else if (this.hasValidKey("backgroundVideo", options)) {
                 backgroundFileName = options.getString("backgroundVideo");
+                backgroundType = "video/*";
             }
 
-            ShareFile backgroundAsset = new ShareFile(backgroundFileName, "image/jpeg", "background", useInternalStorage, this.reactContext);
+            ShareFile backgroundAsset = new ShareFile(backgroundFileName, backgroundType, "background", useInternalStorage, this.reactContext);
 
             this.intent.setDataAndType(backgroundAsset.getURI(), backgroundAsset.getType());
             this.intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

File: android/src/main/java/cl/json/social/FacebookStoriesShare.java
Patch:
@@ -98,14 +98,14 @@ private void shareStory(ReadableMap options) {
                 backgroundFileName = options.getString("backgroundVideo");
             }
 
-            ShareFile backgroundAsset = new ShareFile(backgroundFileName, "background", useInternalStorage, this.reactContext);
+            ShareFile backgroundAsset = new ShareFile(backgroundFileName, "image/jpeg", "background", useInternalStorage, this.reactContext);
 
             this.intent.setDataAndType(backgroundAsset.getURI(), backgroundAsset.getType());
             this.intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         }
 
         if (this.hasValidKey("stickerImage", options)) {
-            ShareFile stickerAsset = new ShareFile(options.getString("stickerImage"), "sticker", useInternalStorage, this.reactContext);
+            ShareFile stickerAsset = new ShareFile(options.getString("stickerImage"), "image/png", "sticker", useInternalStorage, this.reactContext);
 
             if (!hasBackgroundAsset) {
                 this.intent.setType("image/*");

File: android/src/main/java/cl/json/social/InstagramStoriesShare.java
Patch:
@@ -100,7 +100,7 @@ private void shareStory(ReadableMap options) {
         }
 
         if (this.hasValidKey("stickerImage", options)) {
-            ShareFile stickerAsset = new ShareFile(options.getString("stickerImage"), "sticker", useInternalStorage, this.reactContext);
+            ShareFile stickerAsset = new ShareFile(options.getString("stickerImage"), "image/png", "sticker", useInternalStorage, this.reactContext);
 
             if (!hasBackgroundAsset) {
                 this.intent.setType("image/*");

File: android/src/main/java/cl/json/RNShareModule.java
Patch:
@@ -14,6 +14,7 @@
 import com.facebook.react.bridge.Callback;
 
 import java.util.HashMap;
+import java.util.Locale;
 import java.util.Map;
 
 import cl.json.social.EmailShare;
@@ -141,7 +142,7 @@ public String getName() {
     public Map<String, Object> getConstants() {
         Map<String, Object> constants = new HashMap<>();
         for (SHARES val : SHARES.values()) {
-            constants.put(val.toString().toUpperCase(), val.toString());
+            constants.put(val.toString().toUpperCase(Locale.ROOT), val.toString());
         }
         return constants;
     }

File: android/src/main/java/cl/json/social/InstagramStoriesShare.java
Patch:
@@ -93,7 +93,7 @@ private void shareStory(ReadableMap options) {
                 backgroundFileName = options.getString("backgroundVideo");
             }
 
-            ShareFile backgroundAsset = new ShareFile(backgroundFileName, "background", useInternalStorage, this.reactContext);
+            ShareFile backgroundAsset = new ShareFile(backgroundFileName, "image/jpeg", "background", useInternalStorage, this.reactContext);
 
             this.intent.setDataAndType(backgroundAsset.getURI(), backgroundAsset.getType());
             this.intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

File: android/src/main/java/cl/json/RNSharePathUtil.java
Patch:
@@ -63,7 +63,7 @@ public static Uri compatUriFromFile(@NonNull final ReactContext context, @NonNul
         return result;
     }
 
-    public static String getRealPathFromURI(final Context context, final Uri uri) {
+    public static String getRealPathFromURI(final Context context, final Uri uri, Boolean useInternalStorage) {
 
         String filePrefix = "";
         // DocumentProvider
@@ -76,7 +76,8 @@ public static String getRealPathFromURI(final Context context, final Uri uri) {
                 final String type = split[0];
 
                 if ("primary".equalsIgnoreCase(type) || "0".equalsIgnoreCase(type)) {
-                    return filePrefix + context.getExternalCacheDir() + "/" + split[1];
+                    File cacheDir = useInternalStorage ? context.getCacheDir() : context.getExternalCacheDir();
+                    return filePrefix + cacheDir + "/" + split[1];
                 } else if ("raw".equalsIgnoreCase(type)) {
                     return filePrefix + split[1];
                 } else if (!TextUtils.isEmpty(type)) {

File: android/src/main/java/cl/json/social/TargetChosenReceiver.java
Patch:
@@ -54,6 +54,8 @@ public static IntentSender getSharingSenderIntent(ReactContext reactContext) {
         intent.setClass(reactContext.getApplicationContext(), TargetChosenReceiver.class);
         intent.putExtra(EXTRA_RECEIVER_TOKEN, sLastRegisteredReceiver.hashCode());
         final PendingIntent callback = PendingIntent.getBroadcast(reactContext, 0, intent,
+            Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ?
+                PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_IMMUTABLE :
                 PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT);
 
         return callback.getIntentSender();

File: android/src/main/java/cl/json/social/TargetChosenReceiver.java
Patch:
@@ -51,6 +51,7 @@ public static IntentSender getSharingSenderIntent(ReactContext reactContext) {
 
         Intent intent = new Intent(sTargetChosenReceiveAction);
         intent.setPackage(reactContext.getPackageName());
+        intent.setClass(reactContext.getApplicationContext(), TargetChosenReceiver.class);
         intent.putExtra(EXTRA_RECEIVER_TOKEN, sLastRegisteredReceiver.hashCode());
         final PendingIntent callback = PendingIntent.getBroadcast(reactContext, 0, intent,
                 PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT);
@@ -88,4 +89,4 @@ public static void sendCallback(boolean isSuccess, Object... reply) {
         successCallback = null;
         failureCallback = null;
     }
-}
\ No newline at end of file
+}

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -252,7 +252,7 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
             this.fileShare = getFileShare(options);
             if (this.fileShare.isFile()) {
                 Uri uriFile = this.fileShare.getURI();
-                this.getIntent().setDataAndType(uriFile, this.fileShare.getType());
+                this.getIntent().setType(this.fileShare.getType());
                 this.getIntent().putExtra(Intent.EXTRA_STREAM, uriFile);
                 this.getIntent().addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                 if (!TextUtils.isEmpty(message)) {

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -252,7 +252,7 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
             this.fileShare = getFileShare(options);
             if (this.fileShare.isFile()) {
                 Uri uriFile = this.fileShare.getURI();
-                this.getIntent().setType(this.fileShare.getType());
+                this.getIntent().setDataAndType(uriFile, this.fileShare.getType());
                 this.getIntent().putExtra(Intent.EXTRA_STREAM, uriFile);
                 this.getIntent().addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                 if (!TextUtils.isEmpty(message)) {
@@ -340,7 +340,7 @@ protected void openIntentChooser() throws ActivityNotFoundException {
         } else {
             chooser = Intent.createChooser(this.getIntent(), this.chooserTitle);
         }
-        chooser.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
+        chooser.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
 
         if (ShareIntent.hasValidKey("showAppsToView", options) && ShareIntent.hasValidKey("url", options)) {
             Intent viewIntent = new Intent(Intent.ACTION_VIEW);

File: android/src/main/java/cl/json/social/SingleShareIntent.java
Patch:
@@ -78,11 +78,11 @@ protected void openIntentChooser(ReadableMap options) throws ActivityNotFoundExc
             if (TargetChosenReceiver.isSupported()) {
                 IntentSender sender = TargetChosenReceiver.getSharingSenderIntent(this.reactContext);
                 Intent chooser = Intent.createChooser(this.getIntent(), this.chooserTitle, sender);
-                chooser.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
+                chooser.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
                 activity.startActivityForResult(chooser, RNShareModule.SHARE_REQUEST_CODE);
             } else {
                 Intent chooser = Intent.createChooser(this.getIntent(), this.chooserTitle);
-                chooser.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
+                chooser.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
                 activity.startActivityForResult(chooser, RNShareModule.SHARE_REQUEST_CODE);
                 TargetChosenReceiver.sendCallback(true, true, "OK");
             }

File: android/src/main/java/cl/json/RNSharePathUtil.java
Patch:
@@ -76,7 +76,7 @@ public static String getRealPathFromURI(final Context context, final Uri uri) {
                 final String type = split[0];
 
                 if ("primary".equalsIgnoreCase(type) || "0".equalsIgnoreCase(type)) {
-                    return filePrefix + Environment.getExternalStorageDirectory() + "/" + split[1];
+                    return filePrefix + context.getExternalCacheDir() + "/" + split[1];
                 } else if ("raw".equalsIgnoreCase(type)) {
                     return filePrefix + split[1];
                 } else if (!TextUtils.isEmpty(type)) {

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -122,7 +122,7 @@ public Uri getURI() {
             String encodedImg = this.uri.toString().substring(BASE_64_DATA_LENGTH + this.type.length() + BASE_64_DATA_OFFSET);
             String filename = this.filename != null ? this.filename : System.nanoTime() + "";
             try {
-                File dir = new File(Environment.getExternalStorageDirectory(), Environment.DIRECTORY_DOWNLOADS );
+                File dir = new File(this.reactContext.getExternalCacheDir(), Environment.DIRECTORY_DOWNLOADS );
                 if (!dir.exists() && !dir.mkdirs()) {
                     throw new IOException("mkdirs failed on " + dir.getAbsolutePath());
                 }

File: android/src/main/java/cl/json/ShareFiles.java
Patch:
@@ -141,7 +141,7 @@ public ArrayList<Uri> getURI() {
                 String encodedImg = uri.getSchemeSpecificPart().substring(uri.getSchemeSpecificPart().indexOf(";base64,") + 8);
                 String fileName = filenames.size() >= uriIndex + 1 ? filenames.get(uriIndex) : (System.currentTimeMillis() + "." + extension);
                 try {
-                    File dir = new File(Environment.getExternalStorageDirectory(), Environment.DIRECTORY_DOWNLOADS );
+                    File dir = new File(this.reactContext.getExternalCacheDir(), Environment.DIRECTORY_DOWNLOADS );
                     if (!dir.exists() && !dir.mkdirs()) {
                         throw new IOException("mkdirs failed on " + dir.getAbsolutePath());
                     }

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -17,7 +17,7 @@
 public class ShareFile {
 
     public static final int BASE_64_DATA_LENGTH = 5; // `data:`
-    public static final int BASE_64_DATA_OFFSET = 16; // `;base64,` + 8
+    public static final int BASE_64_DATA_OFFSET = 8; // `;base64,`
     private final ReactApplicationContext reactContext;
     private String url;
     private Uri uri;

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -129,8 +129,8 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
         }
 
         if (socialType.equals("whatsapp")) {
-            String whatsAppNumber = options.getString("whatsAppNumber");
-            if (!whatsAppNumber.isEmpty()) {
+            if (options.hasKey("whatsAppNumber")) {
+                String whatsAppNumber = options.getString("whatsAppNumber");
                 String chatAddress = whatsAppNumber + "@s.whatsapp.net";
                 this.getIntent().putExtra("jid", chatAddress);
             }

File: android/src/main/java/cl/json/social/InstagramShare.java
Patch:
@@ -15,7 +15,7 @@
 public class InstagramShare extends SingleShareIntent {
 
     private static final String PACKAGE = "com.instagram.android";
-    private static final String PLAY_STORE_LINK = "market://details?id=com.instagram.android";
+    private static final String PLAY_STORE_LINK = "https://play.google.com/store/apps/details?id=com.instagram.android";
 
     public InstagramShare(ReactApplicationContext reactContext) {
         super(reactContext);

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -139,9 +139,9 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
                 }
             } else {
                 if (!TextUtils.isEmpty(message)) {
-                    this.getIntent().putExtra(Intent.EXTRA_TEXT, message + " " + options.getArray("urls").toString());
+                    this.getIntent().putExtra(Intent.EXTRA_TEXT, message + " " + options.getArray("urls").getString(0));
                 } else {
-                    this.getIntent().putExtra(Intent.EXTRA_TEXT, options.getArray("urls").toString());
+                    this.getIntent().putExtra(Intent.EXTRA_TEXT, options.getArray("urls").getString(0));
                 }
             }
         } else if (ShareIntent.hasValidKey("url", options)) {

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -139,9 +139,9 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
                 }
             } else {
                 if (!TextUtils.isEmpty(message)) {
-                    this.getIntent().putExtra(Intent.EXTRA_TEXT, message + " " + options.getArray("urls").toString());
+                    this.getIntent().putExtra(Intent.EXTRA_TEXT, message + " " + options.getArray("urls").getString(0));
                 } else {
-                    this.getIntent().putExtra(Intent.EXTRA_TEXT, options.getArray("urls").toString());
+                    this.getIntent().putExtra(Intent.EXTRA_TEXT, options.getArray("urls").getString(0));
                 }
             }
         } else if (ShareIntent.hasValidKey("url", options)) {

File: example/android/app/src/main/java/com/example/MainApplication.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Context;
 import com.facebook.react.PackageList;
 import com.facebook.react.ReactApplication;
+import com.RNFetchBlob.RNFetchBlobPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.soloader.SoLoader;

File: example/android/app/src/main/java/com/example/MainActivity.java
Patch:
@@ -5,8 +5,8 @@
 public class MainActivity extends ReactActivity {
 
     /**
-     * Returns the name of the main component registered from JavaScript.
-     * This is used to schedule rendering of the component.
+     * Returns the name of the main component registered from JavaScript. This is used to schedule
+     * rendering of the component.
      */
     @Override
     protected String getMainComponentName() {

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -60,7 +60,7 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
 
         if(socialType.equals("whatsapp")) {
             String whatsAppNumber = options.getString("whatsAppNumber");
-            if(whatsAppNumber) {
+            if(!whatsAppNumber.isEmpty()) {
             String chatAddress = whatsAppNumber + "@s.whatsapp.net";
             this.getIntent().putExtra("jid",chatAddress);
             }

File: android/src/main/java/cl/json/social/SingleShareIntent.java
Patch:
@@ -34,6 +34,7 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
             if(this.isPackageInstalled(getPackage(), reactContext)) {
                 System.out.println("INSTALLED");
                 this.getIntent().setPackage(getPackage());
+                super.open(options);
             } else {
                 System.out.println("NOT INSTALLED");
                 String url = "";

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -127,7 +127,7 @@ public Uri getURI() {
                 if (!dir.exists()) {
                     dir.mkdirs();
                 }
-                File file = new File(dir, System.currentTimeMillis() + "." + this.extension);
+                File file = new File(dir, System.nanoTime() + "." + this.extension);
                 final FileOutputStream fos = new FileOutputStream(file);
                 fos.write(Base64.decode(encodedImg, Base64.DEFAULT));
                 fos.flush();

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -127,7 +127,7 @@ public Uri getURI() {
                 if (!dir.exists()) {
                     dir.mkdirs();
                 }
-                File file = new File(dir, System.currentTimeMillis() + "." + this.extension);
+                File file = new File(dir, System.nanoTime() + "." + this.extension);
                 final FileOutputStream fos = new FileOutputStream(file);
                 fos.write(Base64.decode(encodedImg, Base64.DEFAULT));
                 fos.flush();

File: android/src/main/java/cl/json/social/SingleShareIntent.java
Patch:
@@ -46,13 +46,13 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
                             .replace("{message}",   this.urlEncode( options.getString("message") ));
                 } else if(getPlayStoreLink() != null) {
                     url = getPlayStoreLink();
-                } else{
+                } else {
                     //  TODO
                 }
                 //  open web intent
                 this.setIntent(new Intent(new Intent("android.intent.action.VIEW", Uri.parse(url))));
             }
-        } else{
+        } else {
             //  configure default
             super.open(options);   
         }      

File: android/src/main/java/cl/json/ShareFiles.java
Patch:
@@ -144,8 +144,9 @@ public ArrayList<Uri> getURI() {
         final String authority = ((ShareApplication) reactContext.getApplicationContext()).getFileProviderAuthority();
 
         for (Uri uri : this.uris) {
-            String extension = mime.getExtensionFromMimeType(getMimeType(uri.toString()));
             if(this.isBase64File(uri)) {
+                String type = uri.getSchemeSpecificPart().substring(0, uri.getSchemeSpecificPart().indexOf(";"));
+                String extension = mime.getExtensionFromMimeType(type);
                 String encodedImg = uri.getSchemeSpecificPart().substring(uri.getSchemeSpecificPart().indexOf(";base64,") + 8);
                 try {
                     File dir = new File(Environment.getExternalStorageDirectory(), Environment.DIRECTORY_DOWNLOADS );

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -37,7 +37,6 @@ public ShareIntent(ReactApplicationContext reactContext) {
     }
     public void open(ReadableMap options) throws ActivityNotFoundException {
         this.options = options;
-        this.fileShare = getFileShare(options);
 
         if (ShareIntent.hasValidKey("subject", options) ) {
             this.getIntent().putExtra(Intent.EXTRA_SUBJECT, options.getString("subject"));
@@ -71,6 +70,7 @@ public void open(ReadableMap options) throws ActivityNotFoundException {
                 }
             }
         } else if (ShareIntent.hasValidKey("url", options)) {
+            this.fileShare = getFileShare(options);
             if(this.fileShare.isFile()) {
                 Uri uriFile = this.fileShare.getURI();
                 this.getIntent().setType(this.fileShare.getType());
@@ -134,7 +134,7 @@ protected void openIntentChooser() throws ActivityNotFoundException {
         Intent chooser = Intent.createChooser(this.getIntent(), this.chooserTitle);
         chooser.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 
-        if (ShareIntent.hasValidKey("showAppsToView", options) && !ShareIntent.hasValidKey("urls", options)) {
+        if (ShareIntent.hasValidKey("showAppsToView", options) && ShareIntent.hasValidKey("url", options)) {
             Intent viewIntent = new Intent(Intent.ACTION_VIEW);
             viewIntent.setType(this.fileShare.getType());
 

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -131,7 +131,7 @@ protected void setIntent(Intent intent) {
         this.intent = intent;
     }
     public static boolean hasValidKey(String key, ReadableMap options) {
-        return options.hasKey(key) && !options.isNull(key);
+        return options != null && options.hasKey(key) && !options.isNull(key);
     }
     protected abstract String getPackage();
     protected abstract String getDefaultWebLink();

File: android/src/main/java/cl/json/social/ShareIntent.java
Patch:
@@ -131,7 +131,7 @@ protected void setIntent(Intent intent) {
         this.intent = intent;
     }
     public static boolean hasValidKey(String key, ReadableMap options) {
-        return options.hasKey(key) && !options.isNull(key);
+        return options != null && options.hasKey(key) && !options.isNull(key);
     }
     protected abstract String getPackage();
     protected abstract String getDefaultWebLink();

File: android/src/main/java/cl/json/social/GooglePlusShare.java
Patch:
@@ -29,7 +29,7 @@ protected String getPackage() {
 
     @Override
     protected String getDefaultWebLink() {
-        return null;
+        return PLAY_STORE_LINK;
     }
 
     @Override

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -61,15 +61,15 @@ public boolean isFile() {
     }
     public boolean isBase64File() {
         String scheme = uri.getScheme();
-        if(scheme && uri.getScheme().equals("data")) {
+        if((scheme != null) && uri.getScheme().equals("data")) {
             this.type = this.uri.getSchemeSpecificPart().substring(0, this.uri.getSchemeSpecificPart().indexOf(";"));
             return true;
         }
         return false;
     }
     public boolean isLocalFile() {
         String scheme = uri.getScheme();
-        if(scheme && (uri.getScheme().equals("content") || uri.getScheme().equals("file"))) {
+        if((scheme != null) && (uri.getScheme().equals("content") || uri.getScheme().equals("file"))) {
             // type is already set
             if (this.type != null) {
                 return true;

File: android/src/main/java/cl/json/ShareFile.java
Patch:
@@ -61,15 +61,15 @@ public boolean isFile() {
     }
     public boolean isBase64File() {
         String scheme = uri.getScheme();
-        if(scheme && uri.getScheme().equals("data")) {
+        if((scheme != null) && uri.getScheme().equals("data")) {
             this.type = this.uri.getSchemeSpecificPart().substring(0, this.uri.getSchemeSpecificPart().indexOf(";"));
             return true;
         }
         return false;
     }
     public boolean isLocalFile() {
         String scheme = uri.getScheme();
-        if(scheme && (uri.getScheme().equals("content") || uri.getScheme().equals("file"))) {
+        if((scheme != null) && (uri.getScheme().equals("content") || uri.getScheme().equals("file"))) {
             // type is already set
             if (this.type != null) {
                 return true;

File: android/src/main/java/cl/json/RNShareModule.java
Patch:
@@ -68,7 +68,7 @@ public void shareSingle(ReadableMap options, @Nullable Callback failureCallback,
                 failureCallback.invoke(ex.getMessage());
             }
         } else {
-            failureCallback.invoke("no exists social key");
+            failureCallback.invoke("key 'social' missing in options");
         }
     }
 }

File: android/src/main/java/cl/json/RNShareModule.java
Patch:
@@ -68,7 +68,7 @@ public void shareSingle(ReadableMap options, @Nullable Callback failureCallback,
                 failureCallback.invoke(ex.getMessage());
             }
         } else {
-            failureCallback.invoke("no exists social key");
+            failureCallback.invoke("key 'social' missing in options");
         }
     }
 }

