File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/FullFontNames.java
Patch:
@@ -36,8 +36,8 @@ public static void main(String[] args) {
             String[][] names = bf.getFullFontName();
             out.write("\n\nListing the full font name:\n\n");
             for (String[] name : names) {
-                if (name[0].equals("3") && name[1].equals("1")) // Microsoft encoding
-                {
+                // Microsoft encoding
+                if (name[0].equals("3") && name[1].equals("1")) {
                     out.write(name[3] + "\r\n");
                 }
             }

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Signing.java
Patch:
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 
     private static void addUnverifiedSignature(boolean visible) {
         try {
-            String visibility = visible == true ? "visible" : "invisible";
+            String visibility = visible ? "visible" : "invisible";
             String description = "Document with " + visibility + " signature";
             System.out.println(description);
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamperImp.java
Patch:
@@ -1474,7 +1474,6 @@ private void addAnnotationToDocument(PdfAnnotation annot) {
             if (annot.isForm()) {
                 fieldsAdded = true;
                 getAcroFields();
-                //@sonatype-lift ignore since before 'isForm' is called
                 PdfFormField field = (PdfFormField) annot;
                 if (field.getParent() != null) {
                     return;
@@ -1498,7 +1497,6 @@ private void addAnnotationToDocument(PdfAnnotation annot) {
                             fieldTemplates.putAll(templates);
                         }
                     }
-                    //@sonatype-lift ignore since before 'isForm' is called
                     PdfFormField field = (PdfFormField) annot;
                     if (field.getParent() == null) {
                         addDocumentField(field.getIndirectReference());

File: openpdf/src/main/java/com/lowagie/text/Jpeg.java
Patch:
@@ -185,7 +185,7 @@ private static int getShort(InputStream is) throws IOException {
      * Returns a type of marker.
      *
      * @param marker an int
-     * @return a type: <VAR>VALID_MARKER</CODE>, <VAR>UNSUPPORTED_MARKER</VAR> or <VAR>NOPARAM_MARKER</VAR>
+     * @return a type: <code>VALID_MARKER</code>, <code>UNSUPPORTED_MARKER</code> or <code>NOPARAM_MARKER</code>
      */
     private static int marker(int marker) {
         for (int validMarker : VALID_MARKERS) {

File: openpdf/src/main/java/com/lowagie/text/factories/RomanNumberFactory.java
Patch:
@@ -106,8 +106,9 @@ public static String getString(int index) {
             }
             // look for the next digit that can be used in a special way
             int j = pos;
-            while (!roman[++j].pre)
-                ;
+            while (!roman[++j].pre) {
+                // find j
+            }
 
             // does the special notation apply?
             if (index + roman[j].value >= dig.value) {

File: openpdf/src/main/java/com/lowagie/text/html/Markup.java
Patch:
@@ -484,7 +484,7 @@ public static float parseLength(String string, float actualFontSize) {
         if (string == null) {
             return 0f;
         }
-        FontSize fs = FontSize.parse(string);// it can be one of the CCS font size names (e.g. 'x-large')
+        FontSize fs = FontSize.parse(string); // it can be one of the CCS font size names (e.g. 'x-large')
         if (fs != null) {
             if (fs.isRelative()) {
                 return fs.getScale() * actualFontSize;

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseFont.java
Patch:
@@ -1313,7 +1313,7 @@ public float getWidthPoint(int char1, float fontSize) {
     }
 
     /**
-     * Converts a <CODE>String</CODE> to a </CODE>byte</CODE> array according to the font's encoding.
+     * Converts a <CODE>String</CODE> to a <CODE>byte</CODE> array according to the font's encoding.
      *
      * @param text the <CODE>String</CODE> to be converted
      * @return an array of <CODE>byte</CODE> representing the conversion according to the font's encoding
@@ -1344,7 +1344,7 @@ byte[] convertToBytes(String text) {
     }
 
     /**
-     * Converts a <CODE>char</CODE> to a </CODE>byte</CODE> array according to the font's encoding.
+     * Converts a <CODE>char</CODE> to a <CODE>byte</CODE> array according to the font's encoding.
      *
      * @param char1 the <CODE>char</CODE> to be converted
      * @return an array of <CODE>byte</CODE> representing the conversion according to the font's encoding

File: openpdf/src/main/java/com/lowagie/text/pdf/FontDetails.java
Patch:
@@ -300,12 +300,12 @@ byte[] convertToBytes(GlyphVector glyphVector, int beginIndex, int endIndex) {
         int glyphCount = 0;
         for (int i = beginIndex; i < endIndex; i++) {
             int code = glyphVector.getGlyphCode(i);
-            if (code == 0xFFFE || code == 0xFFFF) {// considered non-glyphs by
-                // AWT
+            if (code == 0xFFFE || code == 0xFFFF) {
+                // considered non-glyphs by AWT
                 continue;
             }
 
-            glyphs[glyphCount++] = (char) code;// FIXME supplementary plane?
+            glyphs[glyphCount++] = (char) code; // FIXME supplementary plane?
 
             Integer codeKey = code;
             if (!longTag.containsKey(codeKey)) {

File: openpdf/src/main/java/com/lowagie/text/pdf/LayoutProcessor.java
Patch:
@@ -208,8 +208,8 @@ private static void setRunDirection(com.lowagie.text.Font font, Boolean runDirec
      *
      * @param font           The font for which kerning is to be turned on
      * @param textAttributes Map of text attributes to be set
-     * @see <a href="https://docs.oracle.com/javase/tutorial/2d/text/textattributes.html">
-     * Oracle: The Java™ Tutorials, Using Text Attributes to Style Text</a>*
+     * @see <a href="https://docs.oracle.com/javase/tutorial/2d/text/textattributes.html" >Oracle: The Java™ Tutorials,
+     * Using Text Attributes to Style Text</a>
      */
     private static void setTextAttributes(com.lowagie.text.Font font, Map<TextAttribute, Object> textAttributes) {
         BaseFont baseFont = font.getBaseFont();

File: openpdf/src/main/java/com/lowagie/text/pdf/MappedRandomAccessFile.java
Patch:
@@ -230,6 +230,8 @@ public void close() throws IOException {
      *
      * @see java.lang.Object#finalize()
      */
+    @Override
+    @Deprecated(since = "OpenPDF-2.0.2", forRemoval = true)
     protected void finalize() throws Throwable {
         close();
         super.finalize();

File: openpdf/src/main/java/com/lowagie/text/pdf/PRTokeniser.java
Patch:
@@ -572,8 +572,9 @@ public boolean readLineSegment(byte[] input) throws IOException {
         // skip initial whitespace; added this because PdfReader.rebuildXref()
         // assumes that line provided by readLineSegment does not have init. whitespace;
         if (ptr < len) {
-            while (isWhitespace((c = read())))
-                ;
+            while (isWhitespace((c = read()))) {
+                // consume input
+            }
         }
         while (!eol && ptr < len) {
             switch (c) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfChunk.java
Patch:
@@ -892,7 +892,7 @@ boolean isExtSplitCharacter(int start, int current, int end, char[] cc, PdfChunk
      * Removes all the <VAR>' '</VAR> and <VAR>'-'</VAR>-characters on the right of a <CODE>String</CODE>.
      * <p>
      *
-     * @param string the <CODE>String<CODE> that has to be trimmed.
+     * @param string the <CODE>String</CODE> that has to be trimmed.
      * @return the trimmed <CODE>String</CODE>
      */
     String trim(String string) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -494,11 +494,10 @@ public static void releaseLastXrefPartial(PdfObject obj) {
         if (!obj.isIndirect()) {
             return;
         }
-        if (!(obj instanceof PRIndirectReference)) {
+        if (!(obj instanceof PRIndirectReference ref)) {
             return;
         }
 
-        PRIndirectReference ref = (PRIndirectReference) obj;
         PdfReader reader = ref.getReader();
         if (reader.partial && reader.lastXrefPartial != -1
                 && reader.lastXrefPartial == ref.getNumber()) {
@@ -1637,7 +1636,8 @@ private void readDecryptedDocObj() throws IOException {
                     ownerPasswordUsed = true;
                 }
             } else {
-                // implements Algorithm 2.A: Retrieving the file encryption key from an encrypted document in order to decrypt it (revision 6 and later) - ISO 32000-2 section 7.6.4.3.3
+                /* implements Algorithm 2.A: Retrieving the file encryption key from an encrypted document in order to
+                 decrypt it (revision 6 and later) - ISO 32000-2 section 7.6.4.3.3 */
                 s = enc.get(PdfName.UE).toString();
                 strings.remove(enc.get(PdfName.UE));
                 byte[] ueValue = com.lowagie.text.DocWriter.getISOBytes(s);

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/ComplexText.java
Patch:
@@ -68,7 +68,8 @@ public static void main(String[] args) {
             BaseFont bf = BaseFont.createFont("c:\\windows\\fonts\\arialuni.ttf", BaseFont.IDENTITY_H, true);
             Font ft = new Font(bf, 12);
             // This is the text:
-            String text = "\u0623\u0648\u0631\u0648\u0628\u0627, \u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u062d\u0627\u0633\u0648\u0628 + \u0627\u0646\u062a\u0631\u0646\u064a\u062a :";
+            String text = "\u0623\u0648\u0631\u0648\u0628\u0627, \u0628\u0631\u0645\u062c\u064a\u0627\u062a"
+                    + " \u0627\u0644\u062d\u0627\u0633\u0648\u0628 + \u0627\u0646\u062a\u0631\u0646\u064a\u062a :";
             Phrase center = new Phrase(text + " Center", ft);
             ColumnText.showTextAligned(cb, PdfContentByte.ALIGN_CENTER, center, 250, 700, 0,
                     PdfWriter.RUN_DIRECTION_RTL, 0);

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/LandscapePortrait.java
Patch:
@@ -54,7 +54,8 @@ public static void main(String[] args) {
 
             // step 4: we add some content
             document.add(new Paragraph(
-                    "To create a document in landscape format, just make the height smaller than the width. For instance by rotating the PageSize Rectangle: PageSize.A4.rotate()"));
+                    "To create a document in landscape format, just make the height smaller than the width. For "
+                            + "instance by rotating the PageSize Rectangle: PageSize.A4.rotate()"));
             document.setPageSize(PageSize.A4);
             document.newPage();
             document.add(new Paragraph("This is portrait again"));

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/FontSelection.java
Patch:
@@ -42,7 +42,9 @@ public static void main(String[] args) {
             // step 4
             String text = "This text is the first verse of \u275dThe Iliad\u275e. It's not polytonic as it should be "
                     + "with \u2798 and \u279a entoation variants but that's all we have for now.\n\n"
-                    + "\u2766\u00a0\u00a0\u039c\u03b7\u03bd\u03b9\u03bd \u03b1\u03b5\u03b9\u03b4\u03b5, \u03b8\u03b5\u03b1, \u03a0\u03b7\u03bb\u03b7\u03b9\u03b1\u03b4\u03b5\u03c9 \u0391\u03c7\u03b9\u03bb\u03b7\u03bf\u03c2";
+                    + "\u2766\u00a0\u00a0\u039c\u03b7\u03bd\u03b9\u03bd \u03b1\u03b5\u03b9\u03b4\u03b5, "
+                    + "\u03b8\u03b5\u03b1, \u03a0\u03b7\u03bb\u03b7\u03b9\u03b1\u03b4\u03b5\u03c9 "
+                    + "\u0391\u03c7\u03b9\u03bb\u03b7\u03bf\u03c2";
             FontSelector sel = new FontSelector();
             sel.addFont(new Font(Font.TIMES_ROMAN, 12));
             sel.addFont(new Font(Font.ZAPFDINGBATS, 12));

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Phrases.java
Patch:
@@ -57,7 +57,8 @@ public static void main(String[] args) {
             // In this example the leading is passed as a parameter
             Phrase phrase2 = new Phrase(
                     24,
-                    "(2) this is a phrase with leading 24. You can only see the difference if the line is long enough. Do you see it? There is more space between this line and the previous one.\n");
+                    "(2) this is a phrase with leading 24. You can only see the difference if the line is long"
+                            + " enough. Do you see it? There is more space between this line and the previous one.\n");
             // When a Font is passed (explicitely or embedded in a chunk),
             // the default leading = 1.5 * size of the font
             Phrase phrase3 = new Phrase(

File: openpdf/src/test/java/com/lowagie/text/pdf/FontSubsetTest.java
Patch:
@@ -59,11 +59,11 @@ private byte[] getLiberationFontByte() throws IOException {
      */
     @Test
     void includeCidSetTest() throws Exception {
-        checkCidSetPresence(true);
-        checkCidSetPresence(false);
+        assertCidSetPresence(true);
+        assertCidSetPresence(false);
     }
 
-    private void checkCidSetPresence(boolean includeCidSet) throws Exception {
+    private void assertCidSetPresence(boolean includeCidSet) throws Exception {
         byte[] documentBytes;
         try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
             Document document = new Document();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamperImp.java
Patch:
@@ -991,7 +991,7 @@ else if (objReal instanceof PdfStream) {
                             double y = box.getBottom();
                             
                             rotation = rotation % 360; 
-                            if (rotation == 90 || rotation == 270) {
+                            if (rotation == 90 || rotation == 180) {
                                 x += box.getWidth();
                             }
                             if (rotation == 180 || rotation == 270) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStructureTreeRoot.java
Patch:
@@ -119,7 +119,7 @@ void setPageMark(int page, PdfIndirectReference reference) {
     private void nodeProcess(PdfDictionary dictionary, PdfIndirectReference reference)
             throws IOException {
         PdfObject obj = dictionary.get(PdfName.K);
-        if (obj != null && obj.isArray() && !((PdfArray) obj).getElements().get(0).isNumber()) {
+        if (obj != null && obj.isArray() && !((PdfArray) obj).getElements().isEmpty() && !((PdfArray) obj).getElements().get(0).isNumber()) {
             PdfArray ar = (PdfArray) obj;
             for (int k = 0; k < ar.size(); ++k) {
                 PdfStructureElement e = (PdfStructureElement) ar.getDirectObject(k);

File: openpdf/src/test/java/com/lowagie/text/pdf/FontSubsetTest.java
Patch:
@@ -68,7 +68,7 @@ private void checkCidSetPresence(boolean includeCidSet) throws Exception {
             PdfWriter.getInstance(document, baos);
             document.open();
 
-            TrueTypeFontUnicode font = (TrueTypeFontUnicode) BaseFont.createFont("LiberationSerif-Regular.ttf", BaseFont.IDENTITY_H,
+            BaseFont font = BaseFont.createFont("LiberationSerif-Regular.ttf", BaseFont.IDENTITY_H,
                     BaseFont.EMBEDDED,true, getFontByte("fonts/liberation-serif/LiberationSerif-Regular.ttf"), null);
             font.setIncludeCidSet(includeCidSet);
             String text = "This is the test string.";

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfDocumentCJKExtensionTest.java
Patch:
@@ -7,6 +7,7 @@
 import com.lowagie.text.Document;
 import com.lowagie.text.Font;
 import com.lowagie.text.FontFactory;
+import org.junit.jupiter.api.Test;
 
 class PdfDocumentCJKExtensionTest {
 	@Test

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfDocumentCJKExtensionTest.java
Patch:
@@ -3,8 +3,6 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 
-import org.junit.jupiter.api.Test;
-
 import com.lowagie.text.Chunk;
 import com.lowagie.text.Document;
 import com.lowagie.text.Font;

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -1361,6 +1361,7 @@ else if (element.type() == Element.PTABLE) {
                 float tableWidth;
                 if (table.isLockedWidth()) {
                     tableWidth = table.getTotalWidth();
+                    table.calculateHeights(true);
                     updateFilledWidth(tableWidth);
                 }
                 else {

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfDocumentCJKExtensionTest.java
Patch:
@@ -11,7 +11,7 @@
 import com.lowagie.text.FontFactory;
 
 class PdfDocumentCJKExtensionTest {
-	@Test
+	//@Test
 	void generateDocumentsWithCJKExtension() throws IOException {
 		String fontName = "TakaoMjMincho";
 

File: openpdf/src/main/java/module-info.java
Patch:
@@ -3,10 +3,10 @@
     requires static org.bouncycastle.provider;
     requires static fop;
     requires static java.desktop;
-	requires static fop.core;
-	requires static com.ibm.icu;
+    requires static fop.core;
+    requires static com.ibm.icu;
 
-	exports com.lowagie.bouncycastle;
+    exports com.lowagie.bouncycastle;
     exports com.lowagie.text;
     exports com.lowagie.text.alignment;
     exports com.lowagie.text.error_messages;

File: openpdf/src/main/java/com/lowagie/text/Document.java
Patch:
@@ -1041,7 +1041,7 @@ public boolean isGlyphSubstitutionEnabled() {
 	 * 
 	 * @param textRenderingOptions the text rendering options
 	 * @see #setDocumentLanguage(String)
-	 * @see Document#setGlyphSubstitutionsEnabled(boolean)
+	 * @see Document#setGlyphSubstitutionEnabled(boolean)
 	 */
     public void setTextRenderingOptions(TextRenderingOptions textRenderingOptions) {
     	this.textRenderingOptions = textRenderingOptions == null ? new TextRenderingOptions() : textRenderingOptions;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -1877,6 +1877,8 @@ private static String getNameString(PdfDictionary dic, PdfName key) {
 
     // types of encryption
 
+    /** No encryption */
+    public static final int ENCRYPTION_NONE = -1;
     /** Type of encryption */
     public static final int STANDARD_ENCRYPTION_40 = 0;
     /** Type of encryption */

File: openpdf/src/test/java/com/lowagie/text/pdf/encryption/DecryptAES256R6Test.java
Patch:
@@ -1,4 +1,4 @@
-package com.lowagie.text.pdf;
+package com.lowagie.text.pdf.encryption;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -10,6 +10,7 @@
 
 import com.lowagie.text.exceptions.BadPasswordException;
 import com.lowagie.text.exceptions.InvalidPdfException;
+import com.lowagie.text.pdf.PdfReader;
 import com.lowagie.text.pdf.parser.PdfTextExtractor;
 
 /**

File: pdf-toolbox/src/main/java/com/lowagie/tools/Executable.java
Patch:
@@ -119,7 +119,7 @@ else if (isMac()) {
      * Creates a command string array from the string arguments.
      *
      * @param arguments
-     * @return
+     * @return String[] of commands
      */
     private static String[] createCommand(String... arguments) {
         return arguments;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfChunk.java
Patch:
@@ -537,6 +537,8 @@ Color color() {
  */
     
     float width() {
+        if (isAttribute(Chunk.TAB))
+            return 0.0f;
         if (isAttribute(Chunk.CHAR_SPACING)) {
             Float cs = (Float) getAttribute(Chunk.CHAR_SPACING);
             return font.width(value) + value.length() * cs;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLine.java
Patch:
@@ -292,6 +292,8 @@ public void resetAlignment() {
     void setExtraIndent(float extra) {
         left += extra;
         width -= extra;
+        if (extra < 0.0f)
+            originalWidth -= extra;
     }
     
     /**

File: openpdf/src/main/java/com/lowagie/text/html/WebColors.java
Patch:
@@ -420,7 +420,7 @@ private static double toDegrees(String hueString) {
      * @param hue Hue angle in degrees
      * @param saturation saturation (0 to 1)
      * @param lightness lightness (0 to 1)
-     * @return
+     * @return int[] rgb
      */
     private static int[] hsl2rgb(float hue, float saturation, float lightness) {
         int[] rgb = new int[3];

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfColor.java
Patch:
@@ -55,7 +55,7 @@
  * @see        PdfDictionary
  */
 
-class PdfColor extends PdfArray {
+public class PdfColor extends PdfArray {
     
     // constructors
     
@@ -73,7 +73,7 @@ class PdfColor extends PdfArray {
         add(new PdfNumber((double)(blue & 0xFF) / 0xFF));
     }
     
-    PdfColor(Color color) {
+    public PdfColor(Color color) {
         this(color.getRed(), color.getGreen(), color.getBlue());
     }
 }
\ No newline at end of file

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfResources.java
Patch:
@@ -64,15 +64,15 @@
  * @see        PdfPage
  */
 
-class PdfResources extends PdfDictionary {
+public class PdfResources extends PdfDictionary {
     
     // constructor
     
 /**
  * Constructs a PDF ResourcesDictionary.
  */
     
-    PdfResources() {
+    public PdfResources() {
         super();
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PushbuttonField.java
Patch:
@@ -318,7 +318,7 @@ private float calculateFontSize(float w, float h) throws IOException, DocumentEx
      * @return the button appearance
      */    
     public PdfAppearance getAppearance() throws IOException, DocumentException {
-        PdfAppearance app = getBorderAppearance();
+        PdfAppearance app = getBorderAppearance(super.writer,super.box,super.rotation,super.backgroundColor,super.borderStyle,super.borderWidth,super.borderColor,super.options,super.maxCharacterLength);
         Rectangle box = new Rectangle(app.getBoundingBox());
         if ((text == null || text.length() == 0) && (layout == LAYOUT_LABEL_ONLY || (image == null && template == null && iconReference == null))) {
             return app;

File: openpdf/src/main/java/com/lowagie/text/pdf/TSAClientBouncyCastle.java
Patch:
@@ -310,8 +310,8 @@ public void setProxy(final Proxy aProxy) {
   }
 
   /**
-   * Returns Proxy object used for URL connections.
-   * @return
+   * Proxy object used for URL connections.
+   * @return Proxy object
    */
   public Proxy getProxy() {
       return proxy;
@@ -326,7 +326,7 @@ public String getPolicy() {
 
   /**
    * Sets Policy OID of TSA request.
-   * @param policy
+   * @param policy oid
    */
   public void setPolicy(String policy) {
       this.policy = policy;

File: openpdf/src/test/java/com/lowagie/text/pdf/CrossReferenceTableEncodingTest.java
Patch:
@@ -27,7 +27,8 @@ public void testCrossReferenceTableEncoding() throws Exception {
     }
 
     private static String filterPdf(final String pdf) {
-        return pdf.replaceAll("<</ModDate.*?>>", "<</ModDate XXXXX>>")
+        return pdf.replaceAll("<</ModDate.*?>>", "")
+            .replaceAll("<</CreationDate.*?>>", "")
             .replaceAll("<</Info .*?>>", "<</Info XXXXX>>")
             .replaceAll("startxref\\n(\\d+)\\n%%EOF", "startxref\nXXXXX\n%%EOF");
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -1579,7 +1579,9 @@ else if (isJustified) {
                             subtract = 0;
                         if (nextChunk == null)
                             subtract += hangingCorrection;
-                        text.addAnnotation(new PdfAnnotation(writer, xMarker, yMarker, xMarker + width - subtract, yMarker + chunk.font().size(), (PdfAction)chunk.getAttribute(Chunk.ACTION)));
+                        PdfAnnotation annotation = new PdfAnnotation(writer, xMarker, yMarker, xMarker + width - subtract, yMarker + chunk.font().size(), (PdfAction)chunk.getAttribute(Chunk.ACTION));
+                        annotation.setFlags(PdfAnnotation.FLAGS_PRINT);
+                        text.addAnnotation(annotation);
                     }
                     if (chunk.isAttribute(Chunk.REMOTEGOTO)) {
                         float subtract = lastBaseFactor;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStructureElement.java
Patch:
@@ -79,6 +79,7 @@ public PdfStructureElement(PdfStructureElement parent, PdfName structureType) {
         init(parent, structureType);
         this.parent = parent;
         put(PdfName.P, parent.reference);
+        put(PdfName.TYPE,new PdfName("StructElem"));
     }
     
     /**
@@ -90,6 +91,7 @@ public PdfStructureElement(PdfStructureTreeRoot parent, PdfName structureType) {
         top = parent;
         init(parent, structureType);
         put(PdfName.P, parent.getReference());
+        put(PdfName.TYPE,new PdfName("StructElem"));
     }
     
     private void init(PdfDictionary parent, PdfName structureType) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamper.java
Patch:
@@ -62,6 +62,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.nio.file.Files;
 import java.security.SignatureException;
 import java.security.cert.Certificate;
 import java.util.Calendar;
@@ -710,7 +711,7 @@ public static PdfStamper createSignature(PdfReader reader, OutputStream os, char
         }
         else {
             if (tempFile.isDirectory())
-                tempFile = File.createTempFile("pdf", null, tempFile);
+                tempFile = Files.createTempFile(tempFile.toPath(), "pdf", null).toFile();
             FileOutputStream fout = new FileOutputStream(tempFile);
             stp = new PdfStamper(reader, fout, pdfVersion, append);
             stp.sigApp = new PdfSignatureAppearance(stp.stamper);

File: openpdf/src/test/java/com/lowagie/text/pdf/LargePdfTest.java
Patch:
@@ -8,6 +8,7 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
+import java.nio.file.Files;
 
 /**
  * This will create a file which is ~14GB, then attempt to read it.
@@ -20,7 +21,7 @@ public class LargePdfTest {
     @Disabled
     @Test
     void writeLargePdf() throws Exception {
-        File largeFile = File.createTempFile("largePDFFile", ".pdf");
+        File largeFile = Files.createTempFile("largePDFFile", ".pdf").toFile();
         Document document = PdfTestBase.createPdf(
                 new FileOutputStream(largeFile));
 

File: openpdf/src/test/java/com/lowagie/text/pdf/SimplePdfTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
+import java.nio.file.Files;
 
 import org.junit.jupiter.api.Test;
 
@@ -34,7 +35,7 @@ void testSimplePdf() throws Exception {
     @Test
     void testTryWithResources_with_os_before_doc() throws Exception {
         try (PdfReader reader = new PdfReader("./src/test/resources/HelloWorldMeta.pdf");
-            FileOutputStream os = new FileOutputStream(File.createTempFile("temp-file-name", ".pdf"));
+            FileOutputStream os = new FileOutputStream(Files.createTempFile("temp-file-name", ".pdf").toFile());
              Document document = new Document()
         ) {
             PdfWriter writer = PdfWriter.getInstance(document, os);

File: openpdf/src/main/java/com/lowagie/text/HeaderFooter.java
Patch:
@@ -52,8 +52,6 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.lowagie.text.pdf.PdfPTable;
-
 /**
  * A <CODE>HeaderFooter</CODE>-object is a <CODE>Rectangle</CODe> with text that can be put above and/or below every
  * page.

File: openpdf/src/test/java/com/lowagie/text/FooterTableTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.lowagie.text;
 
 import java.io.ByteArrayOutputStream;
-import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.Objects;
 

File: openpdf/src/main/java/com/lowagie/text/HeaderFooter.java
Patch:
@@ -52,6 +52,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import com.lowagie.text.pdf.PdfPTable;
+
 /**
  * A <CODE>HeaderFooter</CODE>-object is a <CODE>Rectangle</CODe> with text that can be put above and/or below every
  * page.

File: openpdf/src/main/java/com/lowagie/text/pdf/OutputStreamEncryption.java
Patch:
@@ -62,6 +62,7 @@ public class OutputStreamEncryption extends OutputStream {
     protected AESCipher cipher;
     private byte[] sb = new byte[1];
     private static final int AES_128 = 4;
+    private static final int AES_256_V3 = 6;
     private boolean aes;
     private boolean finished;
     
@@ -77,7 +78,7 @@ public class OutputStreamEncryption extends OutputStream {
     public OutputStreamEncryption(OutputStream out, byte[] key, int off, int len, int revision) {
         try {
             this.out = out;
-            aes = revision == AES_128;
+            aes = (revision == AES_128) || (revision == AES_256_V3);
             if (aes) {
                 byte[] iv = IVGenerator.getIV();
                 byte[] nkey = new byte[len];

File: openpdf/src/main/java/com/lowagie/text/pdf/StandardDecryption.java
Patch:
@@ -56,6 +56,7 @@ public class StandardDecryption {
     protected AESCipher cipher;
     private byte[] key;
     private static final int AES_128 = 4;
+    private static final int AES_256_V3 = 6;
     private boolean aes;
     private boolean initiated;
     private byte[] iv = new byte[16];
@@ -69,7 +70,7 @@ public class StandardDecryption {
      * @param revision the aes revision
      */
     public StandardDecryption(byte[] key, int off, int len, int revision) {
-        aes = revision == AES_128;
+        aes = revision == AES_128 || revision == AES_256_V3;
         if (aes) {
             this.key = new byte[len];
             System.arraycopy(key, off, this.key, 0, len);

File: openpdf/src/main/java/com/lowagie/text/pdf/TSAClientBouncyCastle.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf;
 
 import com.lowagie.text.error_messages.MessageLocalization;
+
 import java.io.ByteArrayOutputStream;
 import java.io.InputStream;
 import java.io.OutputStream;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCell.java
Patch:
@@ -384,6 +384,7 @@ public void setBottom(float value) {
         extraHeight += getBorderWidthInside(TOP);
         if (firstLine != null) {
             firstLine.height = firstLineRealHeight + extraHeight;
+            contentHeight += extraHeight;
         }
     }
 

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfDocument620Test.java
Patch:
@@ -45,8 +45,7 @@ public void generate2DocumentsWithLongLine() throws IOException {
     private void createPdf(String baseFileName, String lineToTest, boolean keepTogether) throws IOException {
         String pathname = baseFileName + "KeepTogether" + Boolean.toString(keepTogether).toUpperCase() + ".pdf";
         OutputStream outputStream = Files.newOutputStream(Paths.get("target", pathname));
-        Document document = new Document();
-        try (document) {
+        try (Document document = new Document()) {
             PdfWriter.getInstance(document, outputStream);
             document.open();
             document.add(new Paragraph("Paragraph 1", FontFactory.getFont(BaseFont.COURIER, 10)));

File: openpdf/src/main/java/com/lowagie/text/Chunk.java
Patch:
@@ -112,8 +112,6 @@ public class Chunk implements Element {
     /** Contains some of the attributes for this Chunk. */
     protected Map<String, Object> attributes = null;
 
-
-
     // constructors
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPRow.java
Patch:
@@ -89,6 +89,7 @@ public class PdfPRow {
     protected boolean calculated = false;
     
     private int[] canvasesPos;
+
     /**
      * Constructs a new PdfPRow with the cells in the array that was passed
      * as a parameter.
@@ -688,5 +689,4 @@ else if ((status & ColumnText.NO_MORE_TEXT) == 0) {
     public PdfPCell[] getCells() {
         return cells;
     }
-
 }

File: openpdf/src/main/java/com/lowagie/text/Chunk.java
Patch:
@@ -112,6 +112,8 @@ public class Chunk implements Element {
     /** Contains some of the attributes for this Chunk. */
     protected Map<String, Object> attributes = null;
 
+
+
     // constructors
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPRow.java
Patch:
@@ -89,7 +89,6 @@ public class PdfPRow {
     protected boolean calculated = false;
     
     private int[] canvasesPos;
-    
     /**
      * Constructs a new PdfPRow with the cells in the array that was passed
      * as a parameter.
@@ -689,4 +688,5 @@ else if ((status & ColumnText.NO_MORE_TEXT) == 0) {
     public PdfPCell[] getCells() {
         return cells;
     }
+
 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -2575,6 +2575,7 @@ else if ((image.getAlignment() & Image.MIDDLE) == Image.MIDDLE)
                 }
             }
         }
+        footer.setPadding(0);
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -2532,6 +2532,9 @@ protected void add(Image image) throws DocumentException {
     }
 
     protected void flushSpecial() {
+        if(footer.getSpecialcontent() == null){
+            return;
+        }
         for (Element element : footer.getSpecialcontent()) {
             switch (element.type()) {
                 case Element.JPEG:

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -3213,7 +3213,7 @@ protected void doFooter() throws DocumentException {
         text.moveText(left(), indentBottom());
         flushLines();
         text.moveText(-left(), -bottom());
-        footer.setTop(bottom(currentHeight));
+        footer.setTop(bottom(Math.max(footer.getPadding(), currentHeight)));
         footer.setBottom(bottom() - (0.75f * leading));
         footer.setLeft(left());
         footer.setRight(right());

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPRow.java
Patch:
@@ -625,7 +625,7 @@ public PdfPRow splitRow(PdfPTable table, int rowIndex, float new_height) {
                 ColumnText ct = ColumnText.duplicate(cell.getColumn());
                 float left = cell.getLeft() + cell.getEffectivePaddingLeft();
                 float top = cell.getTop() - cell.getEffectivePaddingTop();
-                float bottom = top + cell.getEffectivePaddingBottom() - newHeight;
+                float bottom = cell.getTop() + cell.getEffectivePaddingBottom() - newHeight;
                 float right = cell.getRight() - cell.getEffectivePaddingRight();
                 switch (cell.getRotation()) {
                     case 90:

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -1420,9 +1420,7 @@ else if (element.type() == Element.PTABLE) {
                         }
                     }
                     else if (!table.isSplitRows() && k == listIdx && firstPass) {
-                        compositeElements.removeFirst();
-                        splittedRow = false;
-                        continue;
+                        return NO_MORE_COLUMN;
                     }
                     else if (k == listIdx && !firstPass && (!table.isSplitRows() || table.isSplitLate()) && (table.getFooterRows() == 0 || table.isComplete()))
                         return NO_MORE_COLUMN;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2489,7 +2489,7 @@ private void addASEvent(PdfName event, PdfName category) {
         PdfArray arr = new PdfArray();
         for (PdfOCG o : documentOCG) {
             PdfLayer layer = (PdfLayer) o;
-            PdfDictionary usage = (PdfDictionary) layer.get(PdfName.USAGE);
+            PdfDictionary usage = layer.getAsDict(PdfName.USAGE);
             if (usage != null && usage.get(category) != null)
                 arr.add(layer.getRef());
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2550,9 +2550,9 @@ protected void fillOCProperties(boolean erase) {
         }
         if (gr.size() > 0)
             d.put(PdfName.OFF, gr);
-        if (OCGRadioGroup.size() > 0)
+        if (OCGRadioGroup != null && OCGRadioGroup.size() > 0)
             d.put(PdfName.RBGROUPS, OCGRadioGroup);
-        if (OCGLocked.size() > 0)
+        if (OCGLocked != null && OCGLocked.size() > 0)
             d.put(PdfName.LOCKED, OCGLocked);
         addASEvent(PdfName.VIEW, PdfName.ZOOM);
         addASEvent(PdfName.VIEW, PdfName.VIEW);

File: openpdf/src/main/java/com/lowagie/text/html/SAXmyHtmlHandler.java
Patch:
@@ -233,6 +233,7 @@ public void endElement(String uri, String localName, String name) {
         if (HtmlTagMap.isTitle(lowerCaseName)) {
             if (currentChunk != null) {
                 bodyAttributes.put(ElementTags.TITLE, currentChunk.getContent());
+                currentChunk = null;
             }
             return;
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -3730,6 +3730,8 @@ private void popPageAttributes() {
 
     private void iteratePages(PRIndirectReference rpage) {
       PdfDictionary page = (PdfDictionary) getPdfObject(rpage);
+      if (page == null)
+        return;
       PdfArray kidsPR = page.getAsArray(PdfName.KIDS);
       // reference to a leaf
       if (kidsPR == null) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -3237,7 +3237,7 @@ protected void removeUnusedNode(PdfObject obj, boolean[] hits) {
           PdfObject v = ar.get(k);
           if (v.isIndirect()) {
             int num = ((PRIndirectReference) v).getNumber();
-            if (num >= xrefObj.size() || (!partial && xrefObj.get(num) == null)) {
+            if (num < 0 || num >= xrefObj.size() || (!partial && xrefObj.get(num) == null)) {
               ar.set(k, PdfNull.PDFNULL);
               continue;
             }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -206,7 +206,8 @@ int getRefnum() {
             public void toPdf(OutputStream os) throws IOException {
               // TODO: are generation number and 'In use' keyword bound that way?
               final char inUse = generation == GENERATION_MAX ? 'f' : 'n';
-              os.write(String.format(CROSS_REFERENCE_ENTRY_FORMAT, offset, generation, inUse).getBytes());
+              String entry = String.format(CROSS_REFERENCE_ENTRY_FORMAT, offset, generation, inUse);
+              os.write(PdfEncodings.convertToBytes(entry, null));
             }
 
             /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfName.java
Patch:
@@ -172,6 +172,8 @@ public class PdfName extends PdfObject implements Comparable<PdfName> {
     /** A name */
     public static final PdfName ARTBOX = new PdfName("ArtBox");
     /** A name */
+    public static final PdfName ARTIFACT = new PdfName("Artifact");
+    /** A name */
     public static final PdfName ASCENT = new PdfName("Ascent");
     /** A name */
     public static final PdfName AS = new PdfName("AS");

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics2d/JFreeChartExample.java
Patch:
@@ -108,7 +108,7 @@ public static JFreeChart getBarChart() {
      * @return a piechart
      */
     public static JFreeChart getPieChart() {
-        DefaultPieDataset dataset = new DefaultPieDataset();
+        DefaultPieDataset<String> dataset = new DefaultPieDataset<>();
         dataset.setValue("iText", 60);
         dataset.setValue("cinema.lowagie.com", 10);
         dataset.setValue("tutorial", 30);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSmartCopy.java
Patch:
@@ -100,6 +100,9 @@ protected PdfIndirectReference copyIndirect(PRIndirectReference in) throws IOExc
         PdfObject srcObj = PdfReader.getPdfObjectRelease(in);
         ByteStore streamKey = null;
         boolean validStream = false;
+        if (srcObj == null) {
+            return null;
+        }
         if (srcObj.isStream()) {
             streamKey = new ByteStore((PRStream)srcObj);
             validStream = true;

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -127,7 +127,7 @@ private static List<Map<String, Object>> bookmarkDepth(PdfDictionary outline,
         while (outline != null) {
             Map<String, Object> map = new HashMap<>();
             PdfString title = (PdfString) PdfReader.getPdfObjectRelease(outline.get(PdfName.TITLE));
-            map.put("Title", title.toUnicodeString());
+            map.put("Title", ((title != null) ? title.toUnicodeString() : ""));
             PdfArray color = (PdfArray) PdfReader.getPdfObjectRelease(outline.get(PdfName.C));
             if (color != null && color.size() == 3) {
                 ByteBuffer out = new ByteBuffer();

File: openpdf/src/main/java/com/lowagie/text/pdf/CJKFont.java
Patch:
@@ -732,6 +732,9 @@ public boolean hasKernPairs() {
      */
     @Override
     public boolean charExists(int c) {
+        if (c >= translationMap.length) {
+            return false;
+        }
         return translationMap[c] != 0;
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -1678,6 +1678,9 @@ else if (isJustified) {
             if (chunk.isImage()) {
                 adjustMatrix = true;
             }
+            else if (chunk.isVerticalSeparator()) {
+                // Did nothing here to avoid printing out OBJECT_REPLACEMENT_CHARACTER
+            }
             else if (chunk.isHorizontalSeparator()) {
                 PdfTextArray array = new PdfTextArray();
                 array.add(-glueWidth * 1000f / chunk.font.size() / hScale);

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePDF417.java
Patch:
@@ -862,7 +862,8 @@ else if (codeRows > 90) {
         pad = tot - lenErr - lenCodewords;
         if ((options & PDF417_USE_MACRO) != 0) {
             // the padding comes before the control block
-            System.arraycopy(codewords, macroIndex, codewords, macroIndex + pad, pad);
+            int lenCodewordsAdjusted = lenCodewords = macroIndex;
+            System.arraycopy(codewords, macroIndex, codewords, macroIndex + pad, lenCodewordsAdjusted);
             cwPtr = lenCodewords + pad;
             while (pad-- != 0)
                 codewords[macroIndex++] = TEXT_MODE;

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfDocumentTest.java
Patch:
@@ -32,7 +32,7 @@ List<DynamicTest> testCreateWithAllElementsInOneCell() {
         mainParagraph.add(table);
         mainParagraph.add(paragraph2);
 
-        PdfPTable result = PdfDocument.createInOneCell(mainParagraph.iterator());
+        PdfPTable result = PdfDocument.createInOneCell(mainParagraph);
         return Arrays.asList(
                 DynamicTest.dynamicTest("row size should be 1", () -> assertThat(result.getRows().size(), equalTo(1))),
                 DynamicTest.dynamicTest("cell size should be 1", () -> {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -3212,7 +3212,7 @@ protected void removeUnusedNode(PdfObject obj, boolean[] hits) {
           PdfObject v = dic.get(key);
           if (v.isIndirect()) {
             int num = ((PRIndirectReference) v).getNumber();
-            if (num >= xrefObj.size() || (!partial && xrefObj.get(num) == null)) {
+            if (num < 0 || num >= xrefObj.size() || (!partial && xrefObj.get(num) == null)) {
               dic.put(key, PdfNull.PDFNULL);
               continue;
             }

File: openpdf/src/test/java/com/lowagie/text/pdf/metadata/CleanMetaDataTest.java
Patch:
@@ -36,6 +36,8 @@ private HashMap<String, String> createCleanerMoreInfo() {
 
 	@Test
 	public void testProducer() throws Exception {
+		String PRODUCER = "OpenPDF 1.3.26-SNAPSHOT";
+
 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
 		Document document = new Document();
 
@@ -45,7 +47,7 @@ public void testProducer() throws Exception {
 		document.close();
 
 		try (PdfReader r = new PdfReader(baos.toByteArray())) {
-			Assertions.assertNull(r.getInfo().get("Producer"));
+			Assertions.assertEquals(PRODUCER, r.getInfo().get("Producer"));
 		}
 		
 	}

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -330,6 +330,8 @@ void setAdditionalActions(PdfDictionary actions) {
      */
     public PdfDocument() {
         super();
+        addProducer();
+        addCreationDate();
     }
 
     /** The <CODE>PdfWriter</CODE>. */

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamperImp.java
Patch:
@@ -847,6 +847,8 @@ void flatFields() {
                 if (ff != null)
                     flags = ff.intValue();
                 int page = item.getPage(k);
+                if (page == -1)
+                	continue;
                 PdfDictionary appDic = merged.getAsDict(PdfName.AP);
                 if (appDic != null && (flags & PdfFormField.FLAGS_PRINT) != 0 && (flags & PdfFormField.FLAGS_HIDDEN) == 0) {
                     PdfObject obj = appDic.get(PdfName.N);

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/ALink.java
Patch:
@@ -48,6 +48,7 @@
 package com.lowagie.text.html.simpleparser;
 
 import com.lowagie.text.Paragraph;
+
 /**
  *
  * @author  psoares

File: openpdf/src/main/java/com/lowagie/text/pdf/CMYKColor.java
Patch:
@@ -104,7 +104,9 @@ public CMYKColor(float floatCyan, float floatMagenta, float floatYellow, float f
      * @param floatAlpha alpha value
      */
     public CMYKColor(float floatCyan, float floatMagenta, float floatYellow, float floatBlack, float floatAlpha) {
-        super(TYPE_CMYK, MAX_FLOAT_COLOR_VALUE - normalize(floatCyan) - normalize(floatBlack), MAX_FLOAT_COLOR_VALUE - normalize(floatMagenta) - normalize(floatBlack), MAX_FLOAT_COLOR_VALUE - normalize(floatYellow) - normalize(floatBlack), normalize(floatAlpha));
+        super(TYPE_CMYK, MAX_FLOAT_COLOR_VALUE - normalize(floatCyan) - normalize(floatBlack),
+                MAX_FLOAT_COLOR_VALUE - normalize(floatMagenta) - normalize(floatBlack),
+                MAX_FLOAT_COLOR_VALUE - normalize(floatYellow) - normalize(floatBlack), normalize(floatAlpha));
         cyan = normalize(floatCyan);
         magenta = normalize(floatMagenta);
         yellow = normalize(floatYellow);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfShading.java
Patch:
@@ -46,9 +46,9 @@
  */
 package com.lowagie.text.pdf;
 
+import com.lowagie.text.error_messages.MessageLocalization;
 import java.awt.Color;
 import java.io.IOException;
-import com.lowagie.text.error_messages.MessageLocalization;
 /** Implements the shading dictionary (or stream).
  *
  * @author Paulo Soares (psoares@consiste.pt)
@@ -101,9 +101,9 @@ protected void setColorSpace(Color color) {
                 break;
             }
             case ExtendedColor.TYPE_PATTERN:
-            case ExtendedColor.TYPE_SHADING: {
+            case ExtendedColor.TYPE_SHADING:
                 throwColorSpaceError();
-            }
+                break;
             default:
                 colorSpace = PdfName.DEVICERGB;
                 break;

File: openpdf/src/main/java/com/lowagie/text/pdf/PushbuttonField.java
Patch:
@@ -46,12 +46,11 @@
  */
 package com.lowagie.text.pdf;
 
-import java.io.IOException;
-import com.lowagie.text.error_messages.MessageLocalization;
-
 import com.lowagie.text.DocumentException;
 import com.lowagie.text.Image;
 import com.lowagie.text.Rectangle;
+import com.lowagie.text.error_messages.MessageLocalization;
+import java.io.IOException;
 /**
  * Creates a pushbutton field. It supports all the text and icon alignments.
  * The icon may be an image or a template.
@@ -357,6 +356,7 @@ public PdfAppearance getAppearance() throws IOException, DocumentException {
                         textX = (box.getWidth() - ufont.getWidthPoint(text, fsize)) / 2;
                         textY = (box.getHeight() - ufont.getFontDescriptor(BaseFont.ASCENT, fsize)) / 2;
                     }
+                    // fallthrough
                 case LAYOUT_ICON_ONLY:
                     if (nlayout == LAYOUT_LABEL_OVER_ICON || nlayout == LAYOUT_ICON_ONLY)
                         iconBox = new Rectangle(box.getLeft() + adj, box.getBottom() + adj, box.getRight() - adj, box.getTop() - adj);

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/EntitiesToUnicode.java
Patch:
@@ -328,7 +328,7 @@ public static Map<String, Character> getMap() {
         map.put("hearts", '\u2665'); // black heart suit = valentine, U+2665 ISOpub
         map.put("diams", '\u2666'); // black diamond suit, U+2666 ISOpub
         // C0 Controls and Basic Latin
-        map.put("quot", '\u0022'); // quotation mark = APL quote, U+0022 ISOnum
+        map.put("quot", '"'); // quotation mark = APL quote, U+0022 ISOnum
         map.put("amp", '\u0026'); // ampersand, U+0026 ISOnum
         map.put("apos", '\'');
         map.put("lt", '\u003c'); // less-than sign, U+003C ISOnum

File: pdf-toolbox/src/test/java/com/lowagie/examples/RunAll.java
Patch:
@@ -21,9 +21,9 @@
 import com.lowagie.examples.directcontent.graphics.Literal;
 import com.lowagie.examples.directcontent.graphics.Shapes;
 import com.lowagie.examples.directcontent.graphics.State;
-import com.lowagie.examples.directcontent.graphics2D.ArabicText;
-import com.lowagie.examples.directcontent.graphics2D.G2D;
-import com.lowagie.examples.directcontent.graphics2D.JFreeChartExample;
+import com.lowagie.examples.directcontent.graphics2d.ArabicText;
+import com.lowagie.examples.directcontent.graphics2d.G2D;
+import com.lowagie.examples.directcontent.graphics2d.JFreeChartExample;
 import com.lowagie.examples.directcontent.optionalcontent.Automatic;
 import com.lowagie.examples.directcontent.optionalcontent.ContentGroups;
 import com.lowagie.examples.directcontent.optionalcontent.NestedLayers;

File: pdf-swing/src/main/java/com/lowagie/rups/view/Console.java
Patch:
@@ -27,7 +27,6 @@
 import java.io.PrintStream;
 import java.util.Observable;
 import java.util.Observer;
-
 import javax.swing.JTextPane;
 import javax.swing.text.AttributeSet;
 import javax.swing.text.BadLocationException;
@@ -190,8 +189,7 @@ public void run() {
                     doc.insertString(doc.getLength(),
                                      snippet, attset);
                     printStream.print(snippet);
-                    textArea.setCaretPosition(textArea.getDocument().
-                                              getLength());
+                    textArea.setCaretPosition(textArea.getDocument().getLength());
                 } catch (BadLocationException | IOException ignored) {
                     // ignored
                 }

File: openpdf/src/main/java9/module-info.java
Patch:
@@ -1,10 +1,7 @@
 module com.github.librepdf.openpdf {
     requires static org.bouncycastle.pkix;
     requires static org.bouncycastle.provider;
-    requires static com.github.spotbugs.spotbugs;
-    requires static imageio.tiff;
     requires static fop;
-    requires static xmlgraphics.commons;
     requires static java.desktop;
 
     exports com.lowagie.bouncycastle;

File: pdf-toolbox/src/main/java9/module-info.java
Patch:
@@ -1,6 +1,6 @@
 module com.github.librepdf.pdfToolbox {
     requires com.github.librepdf.openpdf;
-    requires jfreechart;
+    requires org.jfree.jfreechart;
     requires jcommon;
 
     exports com.lowagie.toolbox;

File: openpdf/src/main/java/com/lowagie/text/pdf/StandardDecryption.java
Patch:
@@ -107,7 +107,7 @@ public byte[] update(byte[] b, int off, int len) {
     }
     
     public byte[] finish() {
-        if (aes) {
+        if (aes && cipher != null) {
             return cipher.doFinal();
         }
         else

File: openpdf/src/main/java/com/lowagie/text/Table.java
Patch:
@@ -110,7 +110,7 @@
  * </PRE></BLOCKQUOTE>
  * The result of this code is a table:
  *      <TABLE BORDER="1">
- *          <CAPTION></CAPTION>
+ *          <CAPTION>the result of the code above</CAPTION>
  *              <TR VALIGN="Left">
  *                      <TH COLSPAN="3" VALIGN="Left">
  *                              header

File: openpdf/src/main/java/com/lowagie/text/html/SAXmyHtmlHandler.java
Patch:
@@ -107,7 +107,7 @@ public SAXmyHtmlHandler(DocListener document, HtmlTagMap htmlTags, BaseFont bf)
      * triggered by the parser to actions on the <CODE>Document</CODE>-object.
      *
      * @param document this is the document on which events must be triggered
-     * @param bf
+     * @param bf the base class for the supported fonts
      */
     public SAXmyHtmlHandler(DocListener document, BaseFont bf) {
         this(document, new HtmlTagMap(), bf);

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/ChainedProperties.java
Patch:
@@ -123,6 +123,8 @@ public boolean hasProperty(String key) {
 
     /**
      * @deprecated use {@link ChainedProperties#addToChain(String, HashMap)}
+     * @param key the key
+     * @param prop the properties
      */
     @Deprecated
     @SuppressWarnings("unchecked")

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/FactoryProperties.java
Patch:
@@ -307,8 +307,8 @@ public static void insertStyle(Map<String, String> h) {
     /**
      * New method contributed by Lubos Strapko
      *
-     * @param h
-     * @param cprops
+     * @param h a Map
+     * @param cprops the ChainedProperties
      * @since 2.1.3
      */
     public static void insertStyle(Map<String, String> h, ChainedProperties cprops) {

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/IncCell.java
Patch:
@@ -67,6 +67,8 @@ public class IncCell implements TextElementArray {
 
     /**
      * Creates a new instance of IncCell
+     * @param tag the tag
+     * @param props the ChainedProperties
      */
     public IncCell(String tag, ChainedProperties props) {
         cell = new PdfPCell((Phrase) null);

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/StyleSheet.java
Patch:
@@ -63,6 +63,8 @@ public class StyleSheet {
     /**
      * @deprecated please use #applyStyle(String tag, Map&lt;String, String&gt; props) this method will be
      * removed in 2.0
+     * @param props a HashMap
+     * @param tag the tag
      */
     @Deprecated
     @SuppressWarnings({"unchecked", "rawtypes"})

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode.java
Patch:
@@ -365,7 +365,7 @@ public void setCodeType(int codeType) {
      * translation matrix to move it elsewhere.
      * <p>The bars and text are written in the following colors:</p>
      *     <TABLE BORDER=1>
-     *         <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode128.java
Patch:
@@ -569,7 +569,7 @@ else if (codeType == CODE128_UCC)
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode39.java
Patch:
@@ -253,7 +253,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeCodabar.java
Patch:
@@ -204,7 +204,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -514,7 +514,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEANSUPP.java
Patch:
@@ -96,7 +96,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeInter25.java
Patch:
@@ -205,7 +205,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePostnet.java
Patch:
@@ -126,7 +126,7 @@ public Rectangle getBarcodeSize() {
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
      * <TABLE BORDER=1>
-     *     <CAPTION></CAPTION>
+     *     <CAPTION>table of the colors of the bars and text</CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/PRAcroForm.java
Patch:
@@ -208,6 +208,7 @@ protected PdfDictionary mergeAttrib(PdfDictionary parent, PdfDictionary child) {
     }
     /**
      * stack a level of dictionary. Merge in a dictionary from this level
+     * @param dict the PfdDictionary
      */
     protected void pushAttrib(PdfDictionary dict) {
         PdfDictionary dic = null;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfArray.java
Patch:
@@ -238,6 +238,7 @@ public PdfObject set(int idx, PdfObject obj) {
      * @throws IndexOutOfBoundsException
      *             the specified position doesn't exist
      * @since 2.1.5
+     * @return the PdfObject that was removed
      */
     public PdfObject remove(int idx) {
         return arrayList.remove(idx);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfBorderDictionary.java
Patch:
@@ -69,6 +69,9 @@ public class PdfBorderDictionary extends PdfDictionary {
     
 /**
  * Constructs a <CODE>PdfBorderDictionary</CODE>.
+ * @param borderStyle the border style
+ * @param borderWidth the width of the border
+ * @param dashes the pattern of the border
  */
     
     public PdfBorderDictionary(float borderWidth, int borderStyle, PdfDashPattern dashes) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCell.java
Patch:
@@ -356,7 +356,7 @@ private void addList(List list, float left, float right, int alignment) {
     /**
      * Sets the bottom of the Rectangle and determines the proper {link #verticalOffset}
      * to appropriately align the contents vertically.
-     * @param value
+     * @param value the lower-left y-coordinate of the rectangle
      */
     public void setBottom(float value) {
         super.setBottom(value);
@@ -773,7 +773,7 @@ public float cellpadding() {
      * Processes all actions contained in the cell.
      * @param element    an element in the cell
      * @param action    an action that should be coupled to the cell
-     * @param allActions
+     * @param allActions    a list of PdfAction to execute
      */
 
     protected void processActions(Element element, PdfAction action, java.util.List<PdfAction> allActions) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFields.java
Patch:
@@ -90,6 +90,7 @@ public PdfCopyFields(OutputStream os, char pdfVersion) throws DocumentException
      * Concatenates a PDF document.
      * @param reader the PDF document
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader) throws DocumentException, IOException {
         fc.addDocument(reader);
@@ -102,6 +103,7 @@ public void addDocument(PdfReader reader) throws DocumentException, IOException
      * @param reader the PDF document
      * @param pagesToKeep the pages to keep
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws DocumentException, IOException {
         fc.addDocument(reader, pagesToKeep);
@@ -114,6 +116,7 @@ public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws Docu
      * @param reader the PDF document
      * @param ranges the comma separated ranges as described in {@link SequenceList}
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader, String ranges) throws DocumentException, IOException {
         fc.addDocument(reader, SequenceList.expand(ranges, reader.getNumberOfPages()));

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyForms.java
Patch:
@@ -84,6 +84,7 @@ public PdfCopyForms(OutputStream os) throws DocumentException {
      * Concatenates a PDF document.
      * @param reader the PDF document
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader) throws DocumentException, IOException {
         fc.addDocument(reader);
@@ -96,6 +97,7 @@ public void addDocument(PdfReader reader) throws DocumentException, IOException
      * @param reader the PDF document
      * @param pagesToKeep the pages to keep
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws DocumentException, IOException {
         fc.addDocument(reader, pagesToKeep);
@@ -108,6 +110,7 @@ public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws Docu
      * @param reader the PDF document
      * @param ranges the comma separated ranges as described in {@link SequenceList}
      * @throws DocumentException on error
+     * @throws IOException on error
      */    
     public void addDocument(PdfReader reader, String ranges) throws DocumentException, IOException {
         fc.addDocument(reader, SequenceList.expand(ranges, reader.getNumberOfPages()));

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfFileSpecification.java
Patch:
@@ -302,6 +302,7 @@ public void addDescription(String description, boolean unicode) {
     
     /**
      * Adds the Collection item dictionary.
+     * @param ci the PdfCollectionItem to add
      */
     public void addCollectionItem(PdfCollectionItem ci) {
         put(PdfName.CI, ci);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfFunction.java
Patch:
@@ -63,7 +63,8 @@ public class PdfFunction {
     
     protected PdfDictionary dictionary;
     
-    /** Creates new PdfFunction */
+    /** Creates new PdfFunction
+     * @param writer the PdfWriter to associate to the PdfFunction */
     protected PdfFunction(PdfWriter writer) {
         this.writer = writer;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfImage.java
Patch:
@@ -76,6 +76,7 @@ public class PdfImage extends PdfStream {
      *
      * @param image the <CODE>Image</CODE>-object
      * @param name the <CODE>PdfName</CODE> for this image
+     * @param maskRef the <CODE>PdfIndirectReference</CODE>
      * @throws BadPdfFormatException on error
      */
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLine.java
Patch:
@@ -470,8 +470,8 @@ int getSeparatorCount() {
     
     /**
      * Gets a width corrected with a charSpacing and wordSpacing.
-     * @param charSpacing
-     * @param wordSpacing
+     * @param charSpacing the spacing between characters
+     * @param wordSpacing the spacing between words
      * @return a corrected width
      */
     public float getWidthCorrected(float charSpacing, float wordSpacing) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPSXObject.java
Patch:
@@ -58,7 +58,7 @@ protected PdfPSXObject() {
     
     /**
      * Constructs a PSXObject
-     * @param wr
+     * @param wr the PdfWriter
      */
     public PdfPSXObject(PdfWriter wr) {
         super(wr);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPageLabels.java
Patch:
@@ -156,6 +156,7 @@ public void addPageLabel(int page, int numberStyle) {
 
     /**
      * Adds or replaces a page label.
+     * @param format the PdfPageLabelFormat to add
      */
     public void addPageLabel(PdfPageLabelFormat format) {
         addPageLabel(format.physicalPage, format.numberStyle, format.prefix, format.logicalPage);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfRectangle.java
Patch:
@@ -90,6 +90,7 @@ public class PdfRectangle extends PdfArray {
  * @param        lly            lower left y
  * @param        urx            upper right x
  * @param        ury            upper right y
+ * @param       rotation        the rotation angle
  *
  * @since        rugPdf0.10
  */
@@ -123,6 +124,7 @@ public PdfRectangle(float llx, float lly, float urx, float ury) {
  *
  * @param        urx            upper right x
  * @param        ury            upper right y
+ * @param       rotation        the rotation angle
  */
 
     public PdfRectangle(float urx, float ury, int rotation) {
@@ -137,6 +139,7 @@ public PdfRectangle(float urx, float ury) {
  * Constructs a <CODE>PdfRectangle</CODE>-object with a <CODE>Rectangle</CODE>-object.
  *
  * @param    rectangle    a <CODE>Rectangle</CODE>
+ * @param rotation the rotation angle
  */
 
     public PdfRectangle(Rectangle rectangle, int rotation) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfShading.java
Patch:
@@ -75,7 +75,8 @@ public class PdfShading {
     /** Holds value of property antiAlias. */
     protected boolean antiAlias = false;
     
-    /** Creates new PdfShading */
+    /** Creates new PdfShading
+     * @param writer  the PdfWriter */
     protected PdfShading(PdfWriter writer) {
         this.writer = writer;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfShadingPattern.java
Patch:
@@ -64,7 +64,8 @@ public class PdfShadingPattern extends PdfDictionary {
 
     protected PdfIndirectReference patternReference;
 
-    /** Creates new PdfShadingPattern */
+    /** Creates new PdfShadingPattern
+     * @param shading the shading */
     public PdfShadingPattern(PdfShading shading) {
         writer = shading.getWriter();
         put(PdfName.PATTERNTYPE, new PdfNumber(2));

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSignature.java
Patch:
@@ -53,7 +53,9 @@
  */
 public class PdfSignature extends PdfDictionary {
 
-    /** Creates new PdfSignature */
+    /** Creates new PdfSignature
+     * @param filter the filter
+     * @param subFilter the sub filter */
     public PdfSignature(PdfName filter, PdfName subFilter) {
         super(PdfName.SIG);
         put(PdfName.FILTER, filter);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStream.java
Patch:
@@ -147,7 +147,6 @@ public PdfStream(byte[] bytes) {
     /**
      * Creates an efficient stream. No temporary array is ever created. The <CODE>InputStream</CODE>
      * is totally consumed but is not closed. The general usage is:
-     * <p>
      * <pre>
      * InputStream in = ...;
      * PdfStream stream = new PdfStream(in, writer);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfTransparencyGroup.java
Patch:
@@ -62,7 +62,7 @@ public PdfTransparencyGroup() {
  
     /**
      * Determining the initial backdrop against which its stack is composited.
-     * @param isolated
+     * @param isolated true to set, false to remove
      */
     public void setIsolated(boolean isolated) {
         if (isolated)
@@ -73,7 +73,7 @@ public void setIsolated(boolean isolated) {
     
     /**
      * Determining whether the objects within the stack are composited with one another or only with the group's backdrop.
-     * @param knockout
+     * @param knockout boolean value to set
      */
     public void setKnockout(boolean knockout) {
         if (knockout)

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfXConformanceException.java
Patch:
@@ -63,7 +63,7 @@ public PdfXConformanceException() {
     
     /**
      * Creates a new instance of PdfXConformanceException.
-     * @param s
+     * @param s the detail message. The detail message is saved for later retrieval by the Throwable.getMessage() method.
      */
     public PdfXConformanceException(String s) {
         super(s);

File: openpdf/src/main/java/com/lowagie/text/pdf/PushbuttonField.java
Patch:
@@ -55,9 +55,7 @@
 /**
  * Creates a pushbutton field. It supports all the text and icon alignments.
  * The icon may be an image or a template.
- * <p>
  * Example usage:
- * <p>
  * <PRE>
  * Document document = new Document(PageSize.A4, 50, 50, 50, 50);
  * PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("output.pdf"));

File: openpdf/src/main/java/com/lowagie/text/pdf/RadioCheckField.java
Patch:
@@ -55,9 +55,7 @@
 
 /**
  * Creates a radio or a check field.
- * <p>
  * Example usage:
- * <p>
  * <PRE>
  * Document document = new Document(PageSize.A4, 50, 50, 50, 50);
  * PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("output.pdf"));

File: openpdf/src/main/java/com/lowagie/text/pdf/RandomAccessFileOrArray.java
Patch:
@@ -636,6 +636,8 @@ public void setStartOffset(int startOffset) {
 
     /**
      * @since 2.0.8
+     * @throws IOException on error
+     * @return a ByteBuffer
      */
     public java.nio.ByteBuffer getNioByteBuffer() throws IOException {
         if (filename != null) {

File: openpdf/src/main/java/com/lowagie/text/pdf/ShadingColor.java
Patch:
@@ -58,7 +58,7 @@ public class ShadingColor extends ExtendedColor {
 
     /**
      * Creates a shading color.
-     * @param shadingPattern
+     * @param shadingPattern the shading pattern
      */
     public ShadingColor(PdfShadingPattern shadingPattern) {
         super(TYPE_SHADING, .5f, .5f, .5f);

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleNamedDestination.java
Patch:
@@ -103,7 +103,6 @@ public static HashMap<Object, Object> getNamedDestination(PdfReader reader, bool
 
     /**
      * Exports the destinations to XML. The DTD for this XML is:
-     * <p>
      * <pre>
      * &lt;?xml version='1.0' encoding='UTF-8'?&gt;
      * &lt;!ELEMENT Name (#PCDATA)&gt;

File: openpdf/src/main/java/com/lowagie/text/pdf/TSAClient.java
Patch:
@@ -72,6 +72,7 @@ public interface TSAClient {
     /**
      * Gets the MessageDigest to digest the data imprint
      * @return the digest algorithm name
+     * @throws GeneralSecurityException a security problem
      */
     MessageDigest getMessageDigest() throws GeneralSecurityException;
     

File: openpdf/src/main/java/com/lowagie/text/pdf/TextField.java
Patch:
@@ -132,7 +132,7 @@ private Phrase composePhrase(String text, BaseFont ufont, Color color, float fon
     /**
      * Removes CRLF from a <code>String</code>.
      * 
-     * @param text
+     * @param text the String to remove the CRLF from
      * @return String
      * @since    2.1.5
      */
@@ -161,7 +161,7 @@ else if (c == '\r') {
      * Obfuscates a password <code>String</code>.
      * Every character is replaced by an asterisk (*).
      * 
-     * @param text 
+     * @param text  the text to obfuscate
      * @return String
      * @since    2.1.5
      */

File: openpdf/src/main/java/com/lowagie/text/pdf/Type3Font.java
Patch:
@@ -81,9 +81,7 @@ public Type3Font(PdfWriter writer, char[] chars, boolean colorized) {
     /**
      * Creates a Type3 font. This implementation assumes that the /FontMatrix is
      * [0.001 0 0 0.001 0 0] or a 1000-unit glyph coordinate system.
-     * <p>
      * An example:
-     * <p>
      * <pre>
      * Document document = new Document(PageSize.A4);
      * PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("type3.pdf"));

File: openpdf/src/main/java/com/lowagie/text/pdf/collection/PdfCollectionField.java
Patch:
@@ -100,6 +100,7 @@ public void setEditable(boolean editable) {
 
     /**
      * Checks if the type of the field is suitable for a Collection Item.
+     * @return true if it is a Collection item, false otherwise
      */
     public boolean isCollectionItem() {
         switch(fieldType) {
@@ -114,7 +115,8 @@ public boolean isCollectionItem() {
     
     /**
      * Returns a PdfObject that can be used as the value of a Collection Item.
-     * @param v    value    the value that has to be changed into a PdfObject (PdfString, PdfDate or PdfNumber)    
+     * @param v    value    the value that has to be changed into a PdfObject (PdfString, PdfDate or PdfNumber)
+     * @return  a PdfObject that can be used as the value of a Collection Item.
      */
     public PdfObject getValue(String v) {
         switch(fieldType) {

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/ByteVector.java
Patch:
@@ -78,14 +78,14 @@ public byte[] getArray() {
     }
 
     /**
-     * return number of items in array
+     * @return number of items in array
      */
     public int length() {
         return n;
     }
 
     /**
-     * returns current capacity of array
+     * @return current capacity of array
      */
     public int capacity() {
         return array.length;

File: openpdf/src/main/java/com/lowagie/text/pdf/internal/PdfVersionImp.java
Patch:
@@ -128,6 +128,7 @@ public void setAppendmode(boolean appendmode) {
     
     /**
      * Writes the header to the OutputStreamCounter.
+     * @param os the OutputStreamCounter
      * @throws IOException thrown when an I/O operation goes wrong
      */
     public void writeHeader(OutputStreamCounter os) throws IOException {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfContentReaderTool.java
Patch:
@@ -214,7 +214,7 @@ public static void listContentStream(File pdfFile, int pageNum,
      * Writes information about each page in a PDF file to the specified file,
      * or System.out.
      * 
-     * @param args
+     * @param args the arguments passed to the command line
      */
     public static void main(String[] args) {
         try {

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/PdfSchema.java
Patch:
@@ -77,23 +77,23 @@ public PdfSchema() {
     
     /**
      * Adds keywords.
-     * @param keywords
+     * @param keywords the keywords
      */
     public void addKeywords(String keywords) {
         setProperty(KEYWORDS, keywords);
     }
     
     /**
      * Adds the producer.
-     * @param producer
+     * @param producer the producer
      */
     public void addProducer(String producer) {
         setProperty(PRODUCER, producer);
     }
 
     /**
      * Adds the version.
-     * @param version
+     * @param version the version
      */
     public void addVersion(String version) {
         setProperty(VERSION, version);

File: openpdf/src/test/java/com/lowagie/text/pdf/AcroFieldsTest.java
Patch:
@@ -20,6 +20,7 @@ public class AcroFieldsTest {
     /**
      * This test fails, because signatureCoversWholeDocument does only check the
      * last signed block.
+     * @throws Exception a ClassCastException
      */
     @Test
     public void testGetSignatures() throws Exception {

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/AdvanceTypographyTest.java
Patch:
@@ -51,7 +51,7 @@ public void testSubstitutionWithMerge() throws Exception{
     /**
      * Test fonts loaded externally and passed as byte array to BaseFont, Fop should be able to
      * resolve these fonts
-     * @throws Exception
+     * @throws Exception a DocumentException or an IOException thrown by BaseFont.createFont
      */
     @Test
     public void testInMemoryFonts() throws Exception{

File: pdf-swing/src/main/java/com/lowagie/rups/controller/PdfReaderController.java
Patch:
@@ -137,6 +137,7 @@ public PdfObjectPanel getObjectPanel() {
     /**
      * Getter for the tabs with the editor windows
      * (to which the Console window will be added).
+     * @return the tabs with the editor windows
      */
     public JTabbedPane getEditorTabs() {
         return editorTabs;
@@ -203,6 +204,7 @@ public void selectNode(int objectNumber) {
      * Renders the syntax of a PdfObject in the objectPanel.
      * If the object is a PDF Stream, then the stream is shown
      * in the streamArea too.
+     * @param object the object to render
      */
     public void render(PdfObject object) {
         objectPanel.render(object);

File: pdf-swing/src/main/java/com/lowagie/rups/view/Console.java
Patch:
@@ -100,6 +100,7 @@ private Console() throws IOException {
 
     /**
      * Console is a Singleton class: you can only get one Console.
+     * @return the Console
      */
     public static synchronized Console getInstance() {
         if (console == null) {
@@ -141,13 +142,15 @@ public static void println(String s) {
 
     /**
      * Get the custom PrintStream of the console.
+     * @return the PrintStream
      */
     public PrintStream getPrintStream() {
         return printStream;
     }
 
     /**
      * Get the JTextArea to which everything is written.
+     * @return the JTextArea
      */
     public JTextPane getTextArea() {
         return textArea;

File: pdf-swing/src/main/java/com/lowagie/rups/view/PageSelectionListener.java
Patch:
@@ -30,7 +30,7 @@ public interface PageSelectionListener {
 
     /**
      * Goes to a specific page number in a document.
-     * @param    pageNumber
+     * @param    pageNumber the page number to go to
      * @return    the resulting page number.
      *         Can be different from pageNumber if pageNumber doesn't exist.
      */

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/treenodes/PdfObjectTreeNode.java
Patch:
@@ -184,6 +184,7 @@ public boolean isArray() {
     /**
      * Checks if this node is a dictionary item with a specific key.
      * @param    key    the key of the node we're looking for
+     * @return true if the node is a dictionary item with the specified key, false otherwise
      */
     public boolean isDictionaryNode(PdfName key) {
         if (key == null) return false;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/AbstractTool.java
Patch:
@@ -130,7 +130,7 @@ public ArrayList<AbstractArgument> getArguments() {
      *
      * @param name the name of the argument
      * @return the value of an argument as an Object.
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      */
     public Object getValue(String name) throws InstantiationException {
         for (AbstractArgument argument: arguments) {
@@ -317,7 +317,7 @@ public void actionPerformed(ActionEvent evt) {
     /**
      * Gets the PDF file that should be generated (or null if the output isn't a PDF file).
      * @return the PDF file that should be generated
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      */
     protected abstract File getDestPathPDF() throws InstantiationException;
 

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/AbstractArgument.java
Patch:
@@ -111,7 +111,7 @@ public void setTool(AbstractTool tool) {
      * Gets the argument as an object.
      *
      * @return an object
-     * @throws InstantiationException
+     * @throws InstantiationException if the specified key cannot be compared with the keys currently in the map
      */
     public Object getArgument() throws InstantiationException {
         if (value == null) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/FileArgument.java
Patch:
@@ -92,7 +92,7 @@ public FileArgument(AbstractTool tool, String name, String description,
     /**
      * Gets the argument as an object.
      * @return an object
-     * @throws InstantiationException
+     * @throws InstantiationException if the specified key cannot be compared with the keys currently in the map
      */
     public Object getArgument() throws InstantiationException {
         if (value == null) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/ImageArgument.java
Patch:
@@ -78,7 +78,7 @@ public ImageArgument(AbstractTool tool, String name, String description) {
     /**
      * Gets the argument as an object.
      * @return an object
-     * @throws InstantiationException
+     * @throws InstantiationException if the specified key cannot be compared with the keys currently in the map
      */
     public Object getArgument() throws InstantiationException {
         if (value == null) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/OptionArgument.java
Patch:
@@ -146,7 +146,7 @@ public void addOption(Object description, Object value) {
     /**
      * Gets the argument as an object.
      * @return an object
-     * @throws InstantiationException
+     * @throws InstantiationException if the specified key cannot be compared with the keys currently in the map
      */
     public Object getArgument() throws InstantiationException {
         if (value == null) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/PageSizeArgument.java
Patch:
@@ -95,7 +95,7 @@ public TreeMap<String, String> getOptions() {
     /**
      * Gets the argument as an object.
      * @return an object
-     * @throws InstantiationException
+     * @throws InstantiationException if the key can't be compared with the other ones in the map
      */
     public Object getArgument() throws InstantiationException {
         if (value == null) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Add3D.java
Patch:
@@ -264,7 +264,7 @@ public static void AddButton(float x, float y, String fname, String js,
      * PDF file).
      *
      * @return the PDF file that should be generated
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      */
     protected File getDestPathPDF() throws InstantiationException {
         return (File) getValue("destfile");

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Bookmarks2XML.java
Patch:
@@ -133,7 +133,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Burst.java
Patch:
@@ -171,7 +171,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/CompressDecompressPageContent.java
Patch:
@@ -113,7 +113,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -170,7 +170,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -180,7 +180,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Decrypt.java
Patch:
@@ -133,7 +133,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Divide.java
Patch:
@@ -174,7 +174,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/DvdCover.java
Patch:
@@ -187,7 +187,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Encrypt.java
Patch:
@@ -178,7 +178,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ExtractAttachments.java
Patch:
@@ -169,7 +169,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {
@@ -185,7 +185,7 @@ protected File getDestPathPDF() throws InstantiationException {
      *            The dictionary containing the file specifications
      * @param outPath
      *            The path where the attachment has to be written
-     * @throws IOException
+     * @throws IOException on error
      */
     public static void unpackFile(PdfReader reader, PdfDictionary filespec,
             String outPath) throws IOException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Handouts.java
Patch:
@@ -217,7 +217,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/HtmlBookmarks.java
Patch:
@@ -282,7 +282,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ImageXRefViewer.java
Patch:
@@ -114,7 +114,7 @@ public ImageXRefViewer() {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/InspectPDF.java
Patch:
@@ -157,7 +157,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/NUp.java
Patch:
@@ -184,7 +184,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Normalize.java
Patch:
@@ -307,7 +307,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/PhotoAlbum.java
Patch:
@@ -226,7 +226,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/RemoveLaunchApplication.java
Patch:
@@ -173,7 +173,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ReversePages.java
Patch:
@@ -177,7 +177,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/SelectedPages.java
Patch:
@@ -148,7 +148,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Split.java
Patch:
@@ -188,7 +188,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Txt2Pdf.java
Patch:
@@ -154,7 +154,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/XML2Bookmarks.java
Patch:
@@ -153,7 +153,7 @@ public static void main(String[] args) {
     /**
      *
      * @see com.lowagie.toolbox.AbstractTool#getDestPathPDF()
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      * @return File
      */
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/watermarker/WatermarkerTool.java
Patch:
@@ -152,7 +152,7 @@ public void execute() {
      * PDF file).
      * 
      * @return the PDF file that should be generated
-     * @throws InstantiationException
+     * @throws InstantiationException on error
      */
     @Override
     protected File getDestPathPDF() throws InstantiationException {

File: pdf-toolbox/src/main/java/com/lowagie/tools/ToolboxAvailable.java
Patch:
@@ -60,6 +60,7 @@ public class ToolboxAvailable {
      * Checks if the toolbox if available.
      * If it is, the toolbox is started.
      * If it isn't, an error message is shown.
+     * @param args the command-line args
      */
     public static void main(String[] args) {
         if (GraphicsEnvironment.isHeadless()) {

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics/Literal.java
Patch:
@@ -28,7 +28,7 @@ public class Literal {
 
     
     /**
-     * @param args
+     * @param args the command line arguments
      */
     public static void main(String[] args) {
         

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/Vertical.java
Patch:
@@ -40,7 +40,7 @@ public class Vertical {
     static String[] encs = {"UniJIS-UCS2-V", "Identity-V"};
     
     /**
-     * @param text
+     * @param text the text to convert
      * @return converted text
      */
     public static String convertCid(String text) {

File: pdf-toolbox/src/test/java/com/lowagie/examples/forms/SimpleRegistrationForm.java
Patch:
@@ -84,7 +84,7 @@ public void cellLayout(PdfPCell cell, Rectangle position,
      * Example originally written by Wendy Smoak to generate a Table with
      * 'floating boxes'. Adapted by Bruno Lowagie.
      * 
-     * @param args
+     * @param args the command line arguments
      */
     public static void main(String[] args) {
         // step 1

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/SilentPrintServlet.java
Patch:
@@ -56,6 +56,7 @@ public void doPost(HttpServletRequest requ, HttpServletResponse resp)
      * 
      * @param requ    the request object
      * @param resp    the response object
+     * @throws IOException on error
      */
     public void doWork(HttpServletRequest requ, HttpServletResponse resp)
             throws IOException {

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/Bookmarks.java
Patch:
@@ -39,9 +39,9 @@ public class Bookmarks extends PdfPageEventHelper {
     
     /**
      * Adds an outline for every new Paragraph
-     * @param writer
-     * @param document
-     * @param position
+     * @param writer the PdfWriter that link to the pdf
+     * @param document the Document to outline
+     * @param position the position in the document
      */
     public void onParagraph(PdfWriter writer, Document document, float position) {
         n++;

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/PageLabels.java
Patch:
@@ -38,6 +38,7 @@ public class PageLabels {
      * Demonstrates some PageLabel functionality.
      * 
      * @param args no arguments needed here
+     * @throws IOException thrown when a I/O operation fails
      */
     public static void main(String[] args) throws IOException {
 

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/pdfptable/FloatingBoxes.java
Patch:
@@ -71,7 +71,7 @@ public void cellLayout(PdfPCell cell, Rectangle position,
      * Example originally written by Wendy Smoak to generate a Table with
      * 'floating boxes'. Adapted by Bruno Lowagie.
      * 
-     * @param args
+     * @param args the command-line arguments
      */
     public static void main(String[] args) {
         FloatingBoxes floatingBoxes = new FloatingBoxes();

File: openpdf/src/main/java/com/lowagie/text/exceptions/BadPasswordException.java
Patch:
@@ -63,6 +63,7 @@ public class BadPasswordException extends IOException {
 
     /**
      * Creates an exception saying the user password was incorrect.
+     * @param message   The message to give to the user
      */
     public BadPasswordException(String message) {
         super(message);

File: openpdf/src/main/java/com/lowagie/text/factories/GreekAlphabetFactory.java
Patch:
@@ -91,6 +91,7 @@ public static final String getUpperCaseString(int index) {
     /**
      * Changes an int into a Greek letter combination.
      * @param index the original number
+     * @param lowercase true for lowercase, false for uppercase
      * @return the letter combination
      */
     public static final String getString(int index, boolean lowercase) {

File: openpdf/src/main/java/com/lowagie/text/factories/RomanNumberFactory.java
Patch:
@@ -163,6 +163,7 @@ public static String getUpperCaseString(int index) {
     /**
      * Changes an int into a roman number.
      * @param index the original number
+     * @param lowercase true for lowercase, false for uppercase
      * @return the roman number (lower case)
      */
     public static String getString(int index, boolean lowercase) {

File: openpdf/src/main/java/com/lowagie/text/html/simpleparser/StyleSheet.java
Patch:
@@ -61,7 +61,7 @@ public class StyleSheet {
     private final Map<String, Map<String, String>> tagMap = new HashMap<>();
 
     /**
-     * @deprecated please use #applyStyle(String tag, Map<String, String> props) this method will be
+     * @deprecated please use #applyStyle(String tag, Map&lt;String, String&gt; props) this method will be
      * removed in 2.0
      */
     @Deprecated

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode.java
Patch:
@@ -364,7 +364,8 @@ public void setCodeType(int codeType) {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p>The bars and text are written in the following colors:</p>
-     *     <TABLE BORDER=1 SUMMARY="">
+     *     <TABLE BORDER=1>
+     *         <CAPTION></CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode128.java
Patch:
@@ -568,7 +568,8 @@ else if (codeType == CODE128_UCC)
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode39.java
Patch:
@@ -252,7 +252,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeCodabar.java
Patch:
@@ -203,7 +203,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -513,7 +513,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEANSUPP.java
Patch:
@@ -95,7 +95,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeInter25.java
Patch:
@@ -204,7 +204,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePostnet.java
Patch:
@@ -125,7 +125,8 @@ public Rectangle getBarcodeSize() {
      * barcode is always placed at coordinates (0, 0). Use the
      * translation matrix to move it elsewhere.
      * <p> The bars and text are written in the following colors:</p>
-     * <TABLE BORDER=1 SUMMARY="">
+     * <TABLE BORDER=1>
+     *     <CAPTION></CAPTION>
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/IntHashtable.java
Patch:
@@ -149,7 +149,7 @@ public boolean isEmpty() {
      * @param      value   a value to search for.
      * @return     <code>true</code> if and only if some key maps to the
      *             <code>value</code> argument in this hashtable as
-     *             determined by the <tt>equals</tt> method;
+     *             determined by the <code>equals</code> method;
      *             <code>false</code> otherwise.
      * @throws  NullPointerException  if the value is <code>null</code>.
      * @see        #containsKey(int)
@@ -190,7 +190,7 @@ public boolean containsValue(int value) {
      *
      * @param  key  possible key.
      * @return <code>true</code> if and only if the specified int is a
-     *    key in this hashtable, as determined by the <tt>equals</tt>
+     *    key in this hashtable, as determined by the <code>equals</code>
      *    method; <code>false</code> otherwise.
      * @see #contains(int)
      */

File: openpdf/src/main/java/com/lowagie/text/pdf/OutputStreamCounter.java
Patch:
@@ -149,7 +149,7 @@ public void write(int b) throws IOException {
      * <p>
      * If <code>off</code> is negative, or <code>len</code> is negative, or
      * <code>off+len</code> is greater than the length of the array
-     * <code>b</code>, then an <tt>IndexOutOfBoundsException</tt> is thrown.
+     * <code>b</code>, then an <code>IndexOutOfBoundsException</code> is thrown.
      *
      * @param      b     the data.
      * @param      off   the start offset in the data.

File: openpdf/src/main/java/com/lowagie/text/pdf/OutputStreamEncryption.java
Patch:
@@ -181,7 +181,7 @@ public void write(int b) throws IOException {
      * <p>
      * If <code>off</code> is negative, or <code>len</code> is negative, or
      * <code>off+len</code> is greater than the length of the array
-     * <code>b</code>, then an <tt>IndexOutOfBoundsException</tt> is thrown.
+     * <code>b</code>, then an <code>IndexOutOfBoundsException</code> is thrown.
      *
      * @param      b     the data.
      * @param      off   the start offset in the data.

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAnnotation.java
Patch:
@@ -334,7 +334,9 @@ public static PdfAnnotation createText(PdfWriter writer, Rectangle rect, String
 
   /**
    * Creates a link.
-   *
+   * @param writer {@link PdfWriter}
+   * @param rect dimensions {@link Rectangle}
+   * @param highlight the highlight property
    * @return A PdfAnnotation
    */
   protected static PdfAnnotation createLink(PdfWriter writer, Rectangle rect, PdfName highlight) {

File: openpdf/src/main/java/com/lowagie/text/pdf/events/IndexEvents.java
Patch:
@@ -337,7 +337,7 @@ public int getPageNumber() {
         /**
          * Add a pagenumber.
          * @param number    The page number.
-         * @param tag
+         * @param tag       The tag.
          */
         public void addPageNumberAndTag(final int number, final String tag) {
             pagenumbers.add(number);

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/ByteVector.java
Patch:
@@ -101,6 +101,8 @@ public byte get(int index) {
 
     /**
      * This is to implement memory allocation in the array. Like malloc().
+     * @param size  The size to add
+     * @return  The index of the size of the old array
      */
     public int alloc(int size) {
         int index = n;

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/CharVector.java
Patch:
@@ -91,14 +91,15 @@ public char[] getArray() {
     }
 
     /**
-     * return number of items in array
+     * @return the number of items in array
      */
     public int length() {
         return n;
     }
 
     /**
      * returns current capacity of array
+     * @return the current capacity of array
      */
     public int capacity() {
         return array.length;

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphenation.java
Patch:
@@ -49,13 +49,15 @@ public int length() {
     }
 
     /**
+     * @param index The index of the hyphen character
      * @return the pre-break text, not including the hyphen character
      */
     public String getPreHyphenText(int index) {
         return word.substring(0, hyphenPoints[index]);
     }
 
     /**
+     * @param index The index of the hyphen character in the word
      * @return the post-break text
      */
     public String getPostHyphenText(int index) {

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/PatternConsumer.java
Patch:
@@ -41,6 +41,8 @@ public interface PatternConsumer {
      * fails or the user wants to provide his own hyphenation.
      * A hyphenatedword is a vector of alternating String's and
      * {@link Hyphen Hyphen} instances
+     * @param word              The word to change
+     * @param hyphenatedword    A vector of alternating String's and {@link Hyphen Hyphen} instances
      */
     void addException(String word, ArrayList hyphenatedword);
 

File: openpdf/src/main/java/com/lowagie/text/pdf/internal/PdfViewerPreferencesImp.java
Patch:
@@ -128,13 +128,15 @@ public class PdfViewerPreferencesImp implements PdfViewerPreferences {
 
     /**
      * Returns the page layout and page mode value.
+     * @return an int that hold the viewer preferences for the page layout and page mode.
      */
     public int getPageLayoutAndMode() {
         return pageLayoutAndMode;
     }
 
     /**
      * Returns the viewer preferences.
+     * @return a PdfDictionary containing the viewer's preferences.
      */
     public PdfDictionary getViewerPreferences() {
         return viewerPreferences;
@@ -277,7 +279,7 @@ && isPossibleValue((PdfName)value, DUPLEX_PREFERENCES)) {
      * Adds the viewer preferences defined in the preferences parameter to a
      * PdfDictionary (more specifically the root or catalog of a PDF file).
      * 
-     * @param catalog
+     * @param catalog   The PdfDictionary to add the viewer preferences to
      */
     public void addToCatalog(PdfDictionary catalog) {
         // Page Layout

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfContentReaderTool.java
Patch:
@@ -133,7 +133,7 @@ public static String getDictionaryDetail(PdfDictionary dic, int depth) {
      *            the page number to read
      * @param out
      *            the output stream to send the content to
-     * @throws IOException
+     * @throws IOException  thrown when an I/O operation goes wrong
      */
     public static void listContentStreamForPage(PdfReader reader, int pageNum, PrintWriter out)
             throws IOException {
@@ -176,7 +176,7 @@ public static void listContentStreamForPage(PdfReader reader, int pageNum, Print
      *            a File instance referring to a PDF file
      * @param out
      *            the output stream to send the content to
-     * @throws IOException
+     * @throws IOException  thrown when an I/O operation goes wrong
      */
     public static void listContentStream(File pdfFile, PrintWriter out)
             throws IOException {
@@ -201,7 +201,7 @@ public static void listContentStream(File pdfFile, PrintWriter out)
      *            the page number to read
      * @param out
      *            the output stream to send the content to
-     * @throws IOException
+     * @throws IOException  thrown when an I/O operation goes wrong
      */
     public static void listContentStream(File pdfFile, int pageNum,
             PrintWriter out) throws IOException {

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/AdvanceTypographyTest.java
Patch:
@@ -20,7 +20,7 @@ public class AdvanceTypographyTest {
     /**
      * Without ghyph substitution out will be {660,666,676,1143,656,1130}, which is no correct
      * FopGlyphProcessor performs ghyph substitution to correct the output
-     * @throws Exception
+     * @throws Exception - DocumentException or IOException thrown by the processedContent() method
      */
     @Test
     public void testTypographySubstitution() throws Exception{
@@ -36,7 +36,7 @@ public void testTypographySubstitution() throws Exception{
     /**
      * In some fonts combination of two characters can be represented by single glyph
      * This method tests above case.
-     * @throws Exception
+     * @throws Exception - UnsupportedEncodingException by the convertToBytesWithGlyphs method
      */
     @Test
     public void testSubstitutionWithMerge() throws Exception{

File: pdf-swing/src/main/java/com/lowagie/rups/model/Permissions.java
Patch:
@@ -121,6 +121,7 @@ public boolean isAllowPrinting() {
     }
     /**
      * Tells you if modifying the contents is allowed.
+     * @param decrypted     Not used, boolean that specifies is the file is decrypted
      * @return true if modifying contents is allowed
      */
     public boolean isAllowModifyContents(boolean decrypted) {
@@ -130,6 +131,7 @@ public boolean isAllowModifyContents(boolean decrypted) {
     }
     /**
      * Tells you if copying is allowed.
+     * @param decrypted     Not used, boolean that specifies is the file is decrypted
      * @return true if copying is allowed
      */
     public boolean isAllowCopy(boolean decrypted) {

File: pdf-swing/src/main/java/com/lowagie/rups/model/TreeNodeFactory.java
Patch:
@@ -111,7 +111,8 @@ public void expandNode(PdfObjectTreeNode node) {
     /**
      * Finds a specific child of dictionary node.
      * @param    node    the node with a dictionary among its children
-     * @param    key        the key of the item corresponding with the node we need
+     * @param    key     the key of the item corresponding with the node we need
+     * @return the PdfObjectTreeNode that is the child of the dictionary node
      */
     public PdfObjectTreeNode getChildNode(PdfObjectTreeNode node, PdfName key) {
         Enumeration children = node.breadthFirstEnumeration();

File: pdf-swing/src/main/java/com/lowagie/rups/model/XfaFile.java
Patch:
@@ -43,8 +43,8 @@ public class XfaFile implements OutputStreamResource {
      * Constructs an XFA file from an OutputStreamResource.
      * This resource can be an XML file or a node in a RUPS application.
      * @param    resource    the XFA resource
-     * @throws IOException 
-     * @throws DocumentException 
+     * @throws IOException  thrown when an I/O operation goes wrong
+     * @throws DocumentException    thrown when something goes wrong with a Document
      */
     public XfaFile(OutputStreamResource resource) throws IOException, DocumentException {
         // Is there a way to avoid loading everything in memory?

File: pdf-swing/src/main/java/com/lowagie/rups/view/icons/IconButton.java
Patch:
@@ -30,6 +30,7 @@ public class IconButton extends JButton {
     /**
      * Creates a button with an Icon that performs an
      * action when you push it.
+     * @param listener  The listener to add to the Icon
      */
     public IconButton(IconActionListener listener) {
         super(listener.getIcon());

File: pdf-swing/src/main/java/com/lowagie/rups/view/icons/IconTreeNode.java
Patch:
@@ -50,7 +50,8 @@ public IconTreeNode(String icon, Object userobject) {
         this.icon = IconFetcher.getIcon(icon);
     }
     
-    /** Getter for the icon. */
+    /** Getter for the icon.
+     * @return  the icon*/
     public Icon getIcon() {
         return icon;
     }

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/FormTree.java
Patch:
@@ -62,6 +62,7 @@ public class FormTree extends JTree implements TreeSelectionListener, Observer {
     
     /**
      * Creates a new FormTree.
+     * @param controller    The renderer that will render an object when selected in the table.
      */
     public FormTree(PdfReaderController controller) {
         super();

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/OutlineTree.java
Patch:
@@ -46,7 +46,8 @@ public class OutlineTree extends JTree implements TreeSelectionListener, Observe
     /** Nodes in the FormTree correspond with nodes in the main PdfTree. */
     protected PdfReaderController controller;
     
-    /** Creates a new outline tree. */
+    /** Creates a new outline tree.
+     *  @param controller   The renderer that will render an object when selected in the table.*/
     public OutlineTree(PdfReaderController controller) {
         super();
         this.controller = controller;

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/PagesTable.java
Patch:
@@ -57,6 +57,7 @@ public class PagesTable extends JTable implements JTableAutoModelInterface, Obse
     /**
      * Constructs a PagesTable.
      * @param    listener    the page navigation listener.
+     * @param controller     The renderer that will render an object when selected in the table.
      */
     public PagesTable(PdfReaderController controller, PageSelectionListener listener) {
         this.controller = controller;

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/XRefTable.java
Patch:
@@ -45,7 +45,8 @@ public class XRefTable extends JTable implements JTableAutoModelInterface, Obser
     /** The renderer that will render an object when selected in the table. */
     protected PdfReaderController controller;
     
-    /** Creates a JTable visualizing xref table. */
+    /** Creates a JTable visualizing xref table.
+     * @param controller The renderer that will render an object when selected in the table.*/
     public XRefTable(PdfReaderController controller) {
         super();
         this.controller = controller;

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/Templates.java
Patch:
@@ -28,7 +28,7 @@
 public class Templates {
     
     /**
-     * @param args
+     * @param args - the arguments passed by the command line
      */
     public static void main(String[] args) {
         

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/pageevents/Bookmarks.java
Patch:
@@ -39,9 +39,9 @@ public class Bookmarks extends PdfPageEventHelper {
     
     /**
      * Adds an outline for every new Paragraph
-     * @param writer
-     * @param document
-     * @param position
+     * @param writer        The PdfWrite to write to the Document
+     * @param document      The Document to write to
+     * @param position      An int that specifies the y / x coordinate of the top / left edge of the window
      */
     public void onParagraph(PdfWriter writer, Document document, float position) {
         n++;

File: openpdf/src/main/java/com/lowagie/text/pdf/crypto/AESCipher.java
Patch:
@@ -78,16 +78,14 @@ public byte[] update(byte[] inp, int inpOff, int inpLen) {
     byte[] outp = null;
     if (neededLen > 0)
       outp = new byte[neededLen];
-    else
-      neededLen = 0;
     bp.processBytes(inp, inpOff, inpLen, outp, 0);
     return outp;
   }
 
   public byte[] doFinal() {
     int neededLen = bp.getOutputSize(0);
     byte[] outp = new byte[neededLen];
-    int n = 0;
+    int n;
     try {
       n = bp.doFinal(outp, 0);
     } catch (Exception ex) {

File: openpdf/src/main/java/com/lowagie/text/ChapterAutoNumber.java
Patch:
@@ -110,7 +110,9 @@ public Section addSection(final Paragraph title) {
     
     /**
      * Changes the Chapter number.
+     *
      * @param    number    the new chapter number
+     * @return updated chapter number
      * @since 2.1.4
      */
     public int setAutomaticNumber(int number) {

File: openpdf/src/main/java/com/lowagie/text/Chunk.java
Patch:
@@ -888,6 +888,8 @@ public boolean isNestable() {
 
     /**
      * Returns the hyphenation (if present).
+     *
+     * @return an object of {@link HyphenationEvent}
      * @since    2.1.2
      */
     public HyphenationEvent getHyphenation() {

File: openpdf/src/main/java/com/lowagie/text/FontFactory.java
Patch:
@@ -373,7 +373,7 @@ public static int registerDirectory(String dir) {
     /**
      * Register all the fonts in a directory and possibly its subdirectories.
      * @param dir the directory
-     * @param scanSubdirectories recursively scan subdirectories if <code>true</true>
+     * @param scanSubdirectories recursively scan subdirectories if <code>true</code>
      * @return the number of fonts registered
      * @since 2.1.2
      */

File: openpdf/src/main/java/com/lowagie/text/FontFactoryImp.java
Patch:
@@ -624,7 +624,7 @@ public int registerDirectory(String dir) {
     /**
      * Register all the fonts in a directory and possibly its subdirectories.
      * @param dir the directory
-     * @param scanSubdirectories recursively scan subdirectories if <code>true</true>
+     * @param scanSubdirectories recursively scan subdirectories if <code>true</code>
      * @return the number of fonts registered
      * @since 2.1.2
      */

File: openpdf/src/main/java/com/lowagie/text/Footnote.java
Patch:
@@ -53,8 +53,7 @@
 /**
  * A <CODE>Footnote</CODE> is a little note that can be added at the bottom of a
  * page.
- * <p>
- * 
+ *
  * @see Element
  * @see Anchor
  */

File: openpdf/src/main/java/com/lowagie/text/SplitCharacter.java
Patch:
@@ -63,7 +63,7 @@ public interface SplitCharacter {
      * is free to look ahead or look behind characters to make a decision.
      * <p>
      * The default implementation is:
-     * <p>
+     * </p>
      * <pre>{@code
      * public boolean isSplitCharacter(int start, int current, int end, char[] cc, PdfChunk[] ck) {
      *    char c;

File: openpdf/src/main/java/com/lowagie/text/ZapfDingbatsNumberList.java
Patch:
@@ -89,7 +89,7 @@ public ZapfDingbatsNumberList(int type, int symbolIndent) {
     /**
      * set the type 
      * 
-     * @param type
+     * @param type {@link ZapfDingbatsNumberList#type}
      */
     public void setType(int type) {
         this.type = type;

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode.java
Patch:
@@ -362,9 +362,9 @@ public void setCodeType(int codeType) {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p>The bars and text are written in the following colors:</p>
+     *     <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode128.java
Patch:
@@ -566,9 +566,9 @@ else if (codeType == CODE128_UCC)
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode39.java
Patch:
@@ -250,9 +250,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeCodabar.java
Patch:
@@ -201,9 +201,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -511,9 +511,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEANSUPP.java
Patch:
@@ -93,9 +93,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeInter25.java
Patch:
@@ -202,9 +202,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePostnet.java
Patch:
@@ -123,9 +123,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseField.java
Patch:
@@ -262,6 +262,8 @@ else if (borderStyle == PdfBorderDictionary.STYLE_INSET) {
     }
 
     /**
+     * @param text text
+     * @return an {@link ArrayList} of {@link String}
      * @deprecated use {@link BaseField#getAllHardBreaks(String)}
      */
     @Deprecated

File: openpdf/src/main/java/com/lowagie/text/pdf/BidiLine.java
Patch:
@@ -207,7 +207,8 @@ public void addChunk(PdfChunk chunk) {
     }
 
     /**
-     * Deprecated use {@link BidiLine#addChunks(List)}, since 1.2.22
+     * @param chunks an {@link ArrayList} of {@link PdfChunk}
+     * @deprecated  use {@link BidiLine#addChunks(List)}, since 1.2.22
      */
     @Deprecated
     @SuppressWarnings("unchecked")

File: openpdf/src/main/java/com/lowagie/text/pdf/ByteBuffer.java
Patch:
@@ -123,7 +123,7 @@ public static void setCacheSize(int size) {
     /**
      * You can fill the cache in advance if you want to.
      *
-     * @param   decimals
+     * @param   decimals decimals
      */
     
     public static void fillCache(int decimals) {

File: openpdf/src/main/java/com/lowagie/text/pdf/CMapAwareDocumentFont.java
Patch:
@@ -227,8 +227,9 @@ public boolean hasUnicodeCMAP() {
      * Decodes a string of bytes (encoded in the font's encoding) into a unicode string. This will
      * use the ToUnicode map of the font, if available, otherwise it uses the font's encoding
      *
-     * @param cidbytes
-     *            the bytes that need to be decoded
+     * @param cidbytes the bytes that need to be decoded
+     * @param len length
+     * @param offset offset
      * @return the unicode String that results from decoding
      * @since 2.1.7
      */

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDate.java
Patch:
@@ -59,7 +59,7 @@
  * PDF defines a standard date format. The PDF date format closely follows the format
  * defined by the international standard ASN.1 (Abstract Syntax Notation One, defined
  * in CCITT X.208 or ISO/IEC 8824). A date is a <CODE>PdfString</CODE> of the form:
- * <P><BLOCKQUOTE>
+ * <BLOCKQUOTE>
  * (D:YYYYMMDDHHmmSSOHH'mm')
  * </BLOCKQUOTE><P>
  * This object is described in the 'Portable Document Format Reference Manual version 1.3'

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDictionary.java
Patch:
@@ -71,7 +71,6 @@
  * sequence of key-value pairs, followed by two right angle brackets ({@literal >>}).<BR>
  * This object is described in the 'Portable Document Format Reference Manual
  * version 1.7' section 3.2.6 (page 59-60).
- * <P>
  *
  * @see        PdfObject
  * @see        PdfName
@@ -133,7 +132,7 @@ public PdfDictionary(PdfName type) {
      *
      * @param writer for backwards compatibility
      * @param os the <CODE>OutputStream</CODE> to write the bytes to.
-     * @throws IOException
+     * @throws IOException on error
      */
     public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
         os.write('<');
@@ -235,7 +234,7 @@ public void remove(PdfName key) {
      * <VAR>key</VAR>.
      *
      * @param key a <CODE>PdfName</CODE>
-     * @return the </CODE>PdfObject</CODE> previously associated to the
+     * @return the <CODE>PdfObject</CODE> previously associated to the
      *   <VAR>key</VAR>
      */
     public PdfObject get(PdfName key) {
@@ -281,6 +280,7 @@ public int size() {
      * Returns <CODE>true</CODE> if this <CODE>PdfDictionary</CODE> contains a
      * mapping for the specified <VAR>key</VAR>.
      *
+     * @param key key
      * @return <CODE>true</CODE> if the key is set, otherwise <CODE>false</CODE>.
      */
     public boolean contains(PdfName key) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfName.java
Patch:
@@ -67,7 +67,7 @@
  * in a name is 127.<BR>
  * This object is described in the 'Portable Document Format Reference Manual
  * version 1.7' section 3.2.4 (page 56-58).
- * <P>
+ * </P>
  *
  * @see        PdfObject
  * @see        PdfDictionary

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfObject.java
Patch:
@@ -167,10 +167,10 @@ protected PdfObject(int type, byte[] bytes) {
     /**
      * Writes the PDF representation of this <CODE>PdfObject</CODE> as an
      * array of <CODE>byte</CODE>s to the writer.
-     * 
+     *
      * @param writer for backwards compatibility
      * @param os     The <CODE>OutputStream</CODE> to write the bytes to.
-     * @throws IOException
+     * @throws IOException on error
      */
     public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
         if (bytes != null)

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPCellEvent.java
Patch:
@@ -55,7 +55,7 @@ public interface PdfPCellEvent {
     /** This method is called at the end of the cell rendering. The text or graphics are added to
      * one of the 4 <CODE>PdfContentByte</CODE> contained in
      * <CODE>canvases</CODE>.<br>
-     * The indexes to <CODE>canvases</CODE> are:<p>
+     * The indexes to <CODE>canvases</CODE> are:
      * <ul>
      * <li><CODE>PdfPTable.BASECANVAS</CODE> - the original <CODE>PdfContentByte</CODE>. Anything placed here
      * will be under the cell.

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPTableEvent.java
Patch:
@@ -58,7 +58,7 @@ public interface PdfPTableEvent {
     /** This method is called at the end of the table rendering. The text or graphics are added to
      * one of the 4 <CODE>PdfContentByte</CODE> contained in
      * <CODE>canvases</CODE>.<br>
-     * The indexes to <CODE>canvases</CODE> are:<p>
+     * The indexes to <CODE>canvases</CODE> are:
      * <ul>
      * <li><CODE>PdfPTable.BASECANVAS</CODE> - the original <CODE>PdfContentByte</CODE>. Anything placed here
      * will be under the table.

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -105,6 +105,8 @@
  * <ul>
  * <li>"File" - "the_file_to_open_or_execute"
  * </ul>
+ * </ul>
+ *
  * @author Paulo Soares (psoares@consiste.pt)
  */
 public final class SimpleBookmark implements SimpleXMLDocHandler {
@@ -646,7 +648,6 @@ public static void exportToXMLNode(List list, Writer out, int indent, boolean on
 
     /**
      * Exports the bookmarks to XML. The DTD for this XML is:
-     * <p>
      * <pre>
      * &lt;?xml version='1.0' encoding='UTF-8'?&gt;
      * &lt;!ELEMENT Title (#PCDATA|Title)*&gt;

File: openpdf/src/main/java/com/lowagie/text/pdf/XfaForm.java
Patch:
@@ -615,7 +615,7 @@ public void inverseSearchAdd(String unstack) {
          * @param inverseSearch the start point
          * @param stack the stack with the separated SOM parts
          * @param unstack the full name
-         * @deprecated use {@link #addSomNameToSearchNodeChain(Map, Stack2, String)}
+         * @deprecated use {@link #addSomNameToSearchNodeChain}
          */
         @Deprecated
         @SuppressWarnings("unchecked")
@@ -1232,6 +1232,8 @@ public void fillXfaForm(InputSource is) throws ParserConfigurationException, SAX
     
     /**
      * Replaces the data under datasets/data.
+     *
+     * @param node node to fill data under
      * @since    iText 5.0.0
      */
     public void fillXfaForm(Node node) {

File: openpdf/src/main/java/com/lowagie/text/pdf/internal/PdfAnnotationsImp.java
Patch:
@@ -98,6 +98,8 @@ public PdfAnnotationsImp(PdfWriter writer) {
     
     /**
      * Checks if the AcroForm is valid.
+     *
+     * @return boolean, <code>true</code> if valid else <code>false</code>
      */
     public boolean hasValidAcroForm() {
         return acroForm.isValid();

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ParsedText.java
Patch:
@@ -453,7 +453,8 @@ public boolean shouldNotSplit() {
     }
 
     /**
-     * @return
+     * @return a boolean value
+     *
      * @see com.lowagie.text.pdf.parser.ParsedTextImpl#breakBefore()
      */
     @Override

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/EntitiesToUnicode.java
Patch:
@@ -403,6 +403,9 @@ public static char decodeEntity(String name) {
     /**
      * Translates a String with entities {@literal (&...;)} to a String without entities,
      * replacing the entity with the right (unicode) character.
+     *
+     * @param s string to be decoded
+     * @return a ddecoded string
      */
     public static String decodeString(String s) {
         int pos_amp = s.indexOf('&');

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -61,7 +61,7 @@
  * an event based parser, but with much less functionality.
  * <p>
  * The parser can:
- * <p>
+ * </p>
  * <ul>
  * <li>It recognizes the encoding used
  * <li>It recognizes all the elements' start tags and end tags
@@ -70,7 +70,6 @@
  * <li>It recognizes the standard entities: &amp;amp;, &amp;lt;, &amp;gt;, &amp;quot;, and &amp;apos;, as well as numeric entities
  * <li>It maps lines ending in <code>\r\n</code> and <code>\r</code> to <code>\n</code> on input, in accordance with the XML Specification, Section 2.11
  * </ul>
- * <p>
  */
 public final class SimpleXMLParser {
     /** possible states */
@@ -542,7 +541,9 @@ private void throwException(String s) throws IOException {
     /**
      * Parses the XML document firing the events to the handler.
      * @param doc the document handler
+     * @param comment {@link SimpleXMLParser#comment}
      * @param r the document. The encoding is already resolved. The reader is not closed
+     * @param html {@link SimpleXMLParser#html}
      * @throws IOException on error
      */
     public static void parse(SimpleXMLDocHandler doc, SimpleXMLDocHandlerComment comment, Reader r, boolean html) throws IOException {

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/PdfA1Schema.java
Patch:
@@ -72,15 +72,15 @@ public PdfA1Schema() {
     
     /**
      * Adds part.
-     * @param part
+     * @param part part
      */
     public void addPart(String part) {
         setProperty(PART, part);
     }
     
     /**
      * Adds the conformance.
-     * @param conformance
+     * @param conformance conformance
      */
     public void addConformance(String conformance) {
         setProperty(CONFORMANCE, conformance);

File: pdf-swing/src/main/java/com/lowagie/rups/io/FileChooserAction.java
Patch:
@@ -59,6 +59,8 @@ public FileChooserAction(Observable observable, String caption, FileFilter filte
     
     /**
      * Getter for the file.
+     *
+     * @return a file
      */
     public File getFile() {
         return file;

File: openpdf/src/main/java/com/lowagie/text/ChapterAutoNumber.java
Patch:
@@ -110,7 +110,9 @@ public Section addSection(final Paragraph title) {
     
     /**
      * Changes the Chapter number.
+     *
      * @param    number    the new chapter number
+     * @return updated chapter number
      * @since 2.1.4
      */
     public int setAutomaticNumber(int number) {

File: openpdf/src/main/java/com/lowagie/text/Chunk.java
Patch:
@@ -888,6 +888,8 @@ public boolean isNestable() {
 
     /**
      * Returns the hyphenation (if present).
+     *
+     * @return an object of {@link HyphenationEvent}
      * @since    2.1.2
      */
     public HyphenationEvent getHyphenation() {

File: openpdf/src/main/java/com/lowagie/text/FontFactory.java
Patch:
@@ -373,7 +373,7 @@ public static int registerDirectory(String dir) {
     /**
      * Register all the fonts in a directory and possibly its subdirectories.
      * @param dir the directory
-     * @param scanSubdirectories recursively scan subdirectories if <code>true</true>
+     * @param scanSubdirectories recursively scan subdirectories if <code>true</code>
      * @return the number of fonts registered
      * @since 2.1.2
      */

File: openpdf/src/main/java/com/lowagie/text/FontFactoryImp.java
Patch:
@@ -624,7 +624,7 @@ public int registerDirectory(String dir) {
     /**
      * Register all the fonts in a directory and possibly its subdirectories.
      * @param dir the directory
-     * @param scanSubdirectories recursively scan subdirectories if <code>true</true>
+     * @param scanSubdirectories recursively scan subdirectories if <code>true</code>
      * @return the number of fonts registered
      * @since 2.1.2
      */

File: openpdf/src/main/java/com/lowagie/text/Footnote.java
Patch:
@@ -53,8 +53,7 @@
 /**
  * A <CODE>Footnote</CODE> is a little note that can be added at the bottom of a
  * page.
- * <p>
- * 
+ *
  * @see Element
  * @see Anchor
  */

File: openpdf/src/main/java/com/lowagie/text/SplitCharacter.java
Patch:
@@ -63,7 +63,7 @@ public interface SplitCharacter {
      * is free to look ahead or look behind characters to make a decision.
      * <p>
      * The default implementation is:
-     * <p>
+     * </p>
      * <pre>{@code
      * public boolean isSplitCharacter(int start, int current, int end, char[] cc, PdfChunk[] ck) {
      *    char c;

File: openpdf/src/main/java/com/lowagie/text/ZapfDingbatsNumberList.java
Patch:
@@ -89,7 +89,7 @@ public ZapfDingbatsNumberList(int type, int symbolIndent) {
     /**
      * set the type 
      * 
-     * @param type
+     * @param type {@link ZapfDingbatsNumberList#type}
      */
     public void setType(int type) {
         this.type = type;

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode.java
Patch:
@@ -362,9 +362,9 @@ public void setCodeType(int codeType) {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p>The bars and text are written in the following colors:</p>
+     *     <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode128.java
Patch:
@@ -566,9 +566,9 @@ else if (codeType == CODE128_UCC)
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/Barcode39.java
Patch:
@@ -250,9 +250,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeCodabar.java
Patch:
@@ -201,9 +201,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -511,9 +511,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEANSUPP.java
Patch:
@@ -93,9 +93,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeInter25.java
Patch:
@@ -202,9 +202,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *    <TH><P><CODE>barColor</CODE></TH>
      *    <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePostnet.java
Patch:
@@ -123,9 +123,9 @@ public Rectangle getBarcodeSize() {
     
     /** Places the barcode in a <CODE>PdfContentByte</CODE>. The
      * barcode is always placed at coordinates (0, 0). Use the
-     * translation matrix to move it elsewhere.<p>
-     * The bars and text are written in the following colors:<p>
-     * <P><TABLE BORDER=1>
+     * translation matrix to move it elsewhere.
+     * <p> The bars and text are written in the following colors:</p>
+     * <TABLE BORDER=1 SUMMARY="">
      * <TR>
      *   <TH><P><CODE>barColor</CODE></TH>
      *   <TH><P><CODE>textColor</CODE></TH>

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseField.java
Patch:
@@ -262,6 +262,8 @@ else if (borderStyle == PdfBorderDictionary.STYLE_INSET) {
     }
 
     /**
+     * @param text text
+     * @return an {@link ArrayList} of {@link String}
      * @deprecated use {@link BaseField#getAllHardBreaks(String)}
      */
     @Deprecated

File: openpdf/src/main/java/com/lowagie/text/pdf/BidiLine.java
Patch:
@@ -207,7 +207,8 @@ public void addChunk(PdfChunk chunk) {
     }
 
     /**
-     * Deprecated use {@link BidiLine#addChunks(List)}, since 1.2.22
+     * @param chunks an {@link ArrayList} of {@link PdfChunk}
+     * @deprecated  use {@link BidiLine#addChunks(List)}, since 1.2.22
      */
     @Deprecated
     @SuppressWarnings("unchecked")

File: openpdf/src/main/java/com/lowagie/text/pdf/ByteBuffer.java
Patch:
@@ -123,7 +123,7 @@ public static void setCacheSize(int size) {
     /**
      * You can fill the cache in advance if you want to.
      *
-     * @param   decimals
+     * @param   decimals decimals
      */
     
     public static void fillCache(int decimals) {

File: openpdf/src/main/java/com/lowagie/text/pdf/CMapAwareDocumentFont.java
Patch:
@@ -227,8 +227,9 @@ public boolean hasUnicodeCMAP() {
      * Decodes a string of bytes (encoded in the font's encoding) into a unicode string. This will
      * use the ToUnicode map of the font, if available, otherwise it uses the font's encoding
      *
-     * @param cidbytes
-     *            the bytes that need to be decoded
+     * @param cidbytes the bytes that need to be decoded
+     * @param len length
+     * @param offset offset
      * @return the unicode String that results from decoding
      * @since 2.1.7
      */

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDate.java
Patch:
@@ -59,7 +59,7 @@
  * PDF defines a standard date format. The PDF date format closely follows the format
  * defined by the international standard ASN.1 (Abstract Syntax Notation One, defined
  * in CCITT X.208 or ISO/IEC 8824). A date is a <CODE>PdfString</CODE> of the form:
- * <P><BLOCKQUOTE>
+ * <BLOCKQUOTE>
  * (D:YYYYMMDDHHmmSSOHH'mm')
  * </BLOCKQUOTE><P>
  * This object is described in the 'Portable Document Format Reference Manual version 1.3'

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDictionary.java
Patch:
@@ -71,7 +71,6 @@
  * sequence of key-value pairs, followed by two right angle brackets ({@literal >>}).<BR>
  * This object is described in the 'Portable Document Format Reference Manual
  * version 1.7' section 3.2.6 (page 59-60).
- * <P>
  *
  * @see        PdfObject
  * @see        PdfName
@@ -133,7 +132,7 @@ public PdfDictionary(PdfName type) {
      *
      * @param writer for backwards compatibility
      * @param os the <CODE>OutputStream</CODE> to write the bytes to.
-     * @throws IOException
+     * @throws IOException on error
      */
     public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
         os.write('<');
@@ -235,7 +234,7 @@ public void remove(PdfName key) {
      * <VAR>key</VAR>.
      *
      * @param key a <CODE>PdfName</CODE>
-     * @return the </CODE>PdfObject</CODE> previously associated to the
+     * @return the <CODE>PdfObject</CODE> previously associated to the
      *   <VAR>key</VAR>
      */
     public PdfObject get(PdfName key) {
@@ -281,6 +280,7 @@ public int size() {
      * Returns <CODE>true</CODE> if this <CODE>PdfDictionary</CODE> contains a
      * mapping for the specified <VAR>key</VAR>.
      *
+     * @param key key
      * @return <CODE>true</CODE> if the key is set, otherwise <CODE>false</CODE>.
      */
     public boolean contains(PdfName key) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfName.java
Patch:
@@ -67,7 +67,7 @@
  * in a name is 127.<BR>
  * This object is described in the 'Portable Document Format Reference Manual
  * version 1.7' section 3.2.4 (page 56-58).
- * <P>
+ * </P>
  *
  * @see        PdfObject
  * @see        PdfDictionary

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfObject.java
Patch:
@@ -167,10 +167,10 @@ protected PdfObject(int type, byte[] bytes) {
     /**
      * Writes the PDF representation of this <CODE>PdfObject</CODE> as an
      * array of <CODE>byte</CODE>s to the writer.
-     * 
+     *
      * @param writer for backwards compatibility
      * @param os     The <CODE>OutputStream</CODE> to write the bytes to.
-     * @throws IOException
+     * @throws IOException on error
      */
     public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
         if (bytes != null)

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPCellEvent.java
Patch:
@@ -55,7 +55,7 @@ public interface PdfPCellEvent {
     /** This method is called at the end of the cell rendering. The text or graphics are added to
      * one of the 4 <CODE>PdfContentByte</CODE> contained in
      * <CODE>canvases</CODE>.<br>
-     * The indexes to <CODE>canvases</CODE> are:<p>
+     * The indexes to <CODE>canvases</CODE> are:
      * <ul>
      * <li><CODE>PdfPTable.BASECANVAS</CODE> - the original <CODE>PdfContentByte</CODE>. Anything placed here
      * will be under the cell.

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPTableEvent.java
Patch:
@@ -58,7 +58,7 @@ public interface PdfPTableEvent {
     /** This method is called at the end of the table rendering. The text or graphics are added to
      * one of the 4 <CODE>PdfContentByte</CODE> contained in
      * <CODE>canvases</CODE>.<br>
-     * The indexes to <CODE>canvases</CODE> are:<p>
+     * The indexes to <CODE>canvases</CODE> are:
      * <ul>
      * <li><CODE>PdfPTable.BASECANVAS</CODE> - the original <CODE>PdfContentByte</CODE>. Anything placed here
      * will be under the table.

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -105,6 +105,8 @@
  * <ul>
  * <li>"File" - "the_file_to_open_or_execute"
  * </ul>
+ * </ul>
+ *
  * @author Paulo Soares (psoares@consiste.pt)
  */
 public final class SimpleBookmark implements SimpleXMLDocHandler {
@@ -646,7 +648,6 @@ public static void exportToXMLNode(List list, Writer out, int indent, boolean on
 
     /**
      * Exports the bookmarks to XML. The DTD for this XML is:
-     * <p>
      * <pre>
      * &lt;?xml version='1.0' encoding='UTF-8'?&gt;
      * &lt;!ELEMENT Title (#PCDATA|Title)*&gt;

File: openpdf/src/main/java/com/lowagie/text/pdf/XfaForm.java
Patch:
@@ -615,7 +615,7 @@ public void inverseSearchAdd(String unstack) {
          * @param inverseSearch the start point
          * @param stack the stack with the separated SOM parts
          * @param unstack the full name
-         * @deprecated use {@link #addSomNameToSearchNodeChain(Map, Stack2, String)}
+         * @deprecated use {@link #addSomNameToSearchNodeChain}
          */
         @Deprecated
         @SuppressWarnings("unchecked")
@@ -1232,6 +1232,8 @@ public void fillXfaForm(InputSource is) throws ParserConfigurationException, SAX
     
     /**
      * Replaces the data under datasets/data.
+     *
+     * @param node node to fill data under
      * @since    iText 5.0.0
      */
     public void fillXfaForm(Node node) {

File: openpdf/src/main/java/com/lowagie/text/pdf/internal/PdfAnnotationsImp.java
Patch:
@@ -98,6 +98,8 @@ public PdfAnnotationsImp(PdfWriter writer) {
     
     /**
      * Checks if the AcroForm is valid.
+     *
+     * @return boolean, <code>true</code> if valid else <code>false</code>
      */
     public boolean hasValidAcroForm() {
         return acroForm.isValid();

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ParsedText.java
Patch:
@@ -453,7 +453,8 @@ public boolean shouldNotSplit() {
     }
 
     /**
-     * @return
+     * @return a boolean value
+     *
      * @see com.lowagie.text.pdf.parser.ParsedTextImpl#breakBefore()
      */
     @Override

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/EntitiesToUnicode.java
Patch:
@@ -403,6 +403,9 @@ public static char decodeEntity(String name) {
     /**
      * Translates a String with entities {@literal (&...;)} to a String without entities,
      * replacing the entity with the right (unicode) character.
+     *
+     * @param s string to be decoded
+     * @return a ddecoded string
      */
     public static String decodeString(String s) {
         int pos_amp = s.indexOf('&');

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -61,7 +61,7 @@
  * an event based parser, but with much less functionality.
  * <p>
  * The parser can:
- * <p>
+ * </p>
  * <ul>
  * <li>It recognizes the encoding used
  * <li>It recognizes all the elements' start tags and end tags
@@ -70,7 +70,6 @@
  * <li>It recognizes the standard entities: &amp;amp;, &amp;lt;, &amp;gt;, &amp;quot;, and &amp;apos;, as well as numeric entities
  * <li>It maps lines ending in <code>\r\n</code> and <code>\r</code> to <code>\n</code> on input, in accordance with the XML Specification, Section 2.11
  * </ul>
- * <p>
  */
 public final class SimpleXMLParser {
     /** possible states */
@@ -542,7 +541,9 @@ private void throwException(String s) throws IOException {
     /**
      * Parses the XML document firing the events to the handler.
      * @param doc the document handler
+     * @param comment {@link SimpleXMLParser#comment}
      * @param r the document. The encoding is already resolved. The reader is not closed
+     * @param html {@link SimpleXMLParser#html}
      * @throws IOException on error
      */
     public static void parse(SimpleXMLDocHandler doc, SimpleXMLDocHandlerComment comment, Reader r, boolean html) throws IOException {

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/PdfA1Schema.java
Patch:
@@ -72,15 +72,15 @@ public PdfA1Schema() {
     
     /**
      * Adds part.
-     * @param part
+     * @param part part
      */
     public void addPart(String part) {
         setProperty(PART, part);
     }
     
     /**
      * Adds the conformance.
-     * @param conformance
+     * @param conformance conformance
      */
     public void addConformance(String conformance) {
         setProperty(CONFORMANCE, conformance);

File: pdf-swing/src/main/java/com/lowagie/rups/io/FileChooserAction.java
Patch:
@@ -59,6 +59,8 @@ public FileChooserAction(Observable observable, String caption, FileFilter filte
     
     /**
      * Getter for the file.
+     *
+     * @return a file
      */
     public File getFile() {
         return file;

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -240,6 +240,8 @@ else if (dest.isArray())
     private static String makeBookmarkParam(PdfArray dest, IntHashtable pages)
     {
         StringBuilder s = new StringBuilder();
+        if (dest.size() == 0)
+        		throw new IllegalArgumentException("Illegal bookmark destination");
         PdfObject obj = dest.getPdfObject(0);
         if (obj.isNumber())
             s.append(((PdfNumber)obj).intValue() + 1);

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -240,6 +240,8 @@ else if (dest.isArray())
     private static String makeBookmarkParam(PdfArray dest, IntHashtable pages)
     {
         StringBuilder s = new StringBuilder();
+        if (dest.size() == 0)
+        		throw new IllegalArgumentException("Illegal bookmark destination");
         PdfObject obj = dest.getPdfObject(0);
         if (obj.isNumber())
             s.append(((PdfNumber)obj).intValue() + 1);

File: openpdf/src/main/java/com/lowagie/text/pdf/FontDetails.java
Patch:
@@ -172,7 +172,7 @@ BaseFont getBaseFont() {
      * @param text the text to convert
      * @return the conversion
      */    
-    byte[] convertToBytes(String text) {
+    byte[] convertToBytes(String text, String language) {
         byte[] b = null;
         switch (fontType) {
             case BaseFont.FONT_TYPE_T3:
@@ -219,7 +219,7 @@ byte[] convertToBytes(String text) {
                         String fileName = ((TrueTypeFontUnicode)getBaseFont()).fileName;
                         if (FopGlyphProcessor.isFopSupported() && (fileName!=null && fileName.length()>0 
                                                                    &&( fileName.contains(".ttf") || fileName.contains(".TTF")))){
-                            return FopGlyphProcessor.convertToBytesWithGlyphs(ttu,text,fileName,longTag);
+                            return FopGlyphProcessor.convertToBytesWithGlyphs(ttu,text,fileName,longTag,language);
                         }else {
                             return convertToBytesWithGlyphs(text);
                         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfContentByte.java
Patch:
@@ -1501,7 +1501,7 @@ public void setTextRise(float rise) {
     private void showText2(String text) {
         if (state.fontDetails == null)
             throw new NullPointerException(MessageLocalization.getComposedMessage("font.and.size.must.be.set.before.writing.any.text"));
-        byte[] b = state.fontDetails.convertToBytes(text);
+        byte[] b = state.fontDetails.convertToBytes(text, getPdfDocument().getDocumentLanguage());
         escapeString(b, content);
     }
 

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/AdvanceTypographyTest.java
Patch:
@@ -24,7 +24,7 @@ public void testTypographySubstitution() throws Exception{
         char[] expectedOutput = {660,666,911,656,1130};
         byte[] processedContent = FopGlyphProcessor.convertToBytesWithGlyphs(
                 BaseFont.createFont("fonts/jaldi/Jaldi-Regular.ttf", BaseFont.IDENTITY_H, false)
-                , "नमस्ते", "fonts/jaldi/Jaldi-Regular.ttf", new HashMap<>());
+                , "नमस्ते", "fonts/jaldi/Jaldi-Regular.ttf", new HashMap<>(), "dflt");
         String str = new String(processedContent, "UnicodeBigUnmarked");
 
         assertArrayEquals(expectedOutput,str.toCharArray());
@@ -40,7 +40,7 @@ public void testSubstitutionWithMerge() throws Exception{
         char[] expectedOutput = {254,278,390,314,331,376,254,285,278};
         byte[] processedContent = FopGlyphProcessor.convertToBytesWithGlyphs(
                 BaseFont.createFont("fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", BaseFont.IDENTITY_H, false)
-                , "instruction", "fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", new HashMap<>());
+                , "instruction", "fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", new HashMap<>(), "dflt");
         String str = new String(processedContent, "UnicodeBigUnmarked");
         assertArrayEquals(expectedOutput,str.toCharArray());
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/FontDetails.java
Patch:
@@ -172,7 +172,7 @@ BaseFont getBaseFont() {
      * @param text the text to convert
      * @return the conversion
      */    
-    byte[] convertToBytes(String text) {
+    byte[] convertToBytes(String text, String language) {
         byte[] b = null;
         switch (fontType) {
             case BaseFont.FONT_TYPE_T3:
@@ -219,7 +219,7 @@ byte[] convertToBytes(String text) {
                         String fileName = ((TrueTypeFontUnicode)getBaseFont()).fileName;
                         if (FopGlyphProcessor.isFopSupported() && (fileName!=null && fileName.length()>0 
                                                                    &&( fileName.contains(".ttf") || fileName.contains(".TTF")))){
-                            return FopGlyphProcessor.convertToBytesWithGlyphs(ttu,text,fileName,longTag);
+                            return FopGlyphProcessor.convertToBytesWithGlyphs(ttu,text,fileName,longTag,language);
                         }else {
                             return convertToBytesWithGlyphs(text);
                         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfContentByte.java
Patch:
@@ -1501,7 +1501,7 @@ public void setTextRise(float rise) {
     private void showText2(String text) {
         if (state.fontDetails == null)
             throw new NullPointerException(MessageLocalization.getComposedMessage("font.and.size.must.be.set.before.writing.any.text"));
-        byte[] b = state.fontDetails.convertToBytes(text);
+        byte[] b = state.fontDetails.convertToBytes(text, getPdfDocument().getDocumentLanguage());
         escapeString(b, content);
     }
 

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/AdvanceTypographyTest.java
Patch:
@@ -24,7 +24,7 @@ public void testTypographySubstitution() throws Exception{
         char[] expectedOutput = {660,666,911,656,1130};
         byte[] processedContent = FopGlyphProcessor.convertToBytesWithGlyphs(
                 BaseFont.createFont("fonts/jaldi/Jaldi-Regular.ttf", BaseFont.IDENTITY_H, false)
-                , "नमस्ते", "fonts/jaldi/Jaldi-Regular.ttf", new HashMap<>());
+                , "नमस्ते", "fonts/jaldi/Jaldi-Regular.ttf", new HashMap<>(), "dflt");
         String str = new String(processedContent, "UnicodeBigUnmarked");
 
         assertArrayEquals(expectedOutput,str.toCharArray());
@@ -40,7 +40,7 @@ public void testSubstitutionWithMerge() throws Exception{
         char[] expectedOutput = {254,278,390,314,331,376,254,285,278};
         byte[] processedContent = FopGlyphProcessor.convertToBytesWithGlyphs(
                 BaseFont.createFont("fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", BaseFont.IDENTITY_H, false)
-                , "instruction", "fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", new HashMap<>());
+                , "instruction", "fonts/Viaoda_Libre/ViaodaLibre-Regular.ttf", new HashMap<>(), "dflt");
         String str = new String(processedContent, "UnicodeBigUnmarked");
         assertArrayEquals(expectedOutput,str.toCharArray());
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -483,6 +483,7 @@ private double drawString(String s, BaseFont baseFont, double x, double y) {
                     if (strokeWidth != 1) {
                         if(realPaint instanceof Color){
                             cb.setTextRenderingMode(PdfContentByte.TEXT_RENDER_MODE_FILL_STROKE);
+                            oldStroke = new BasicStroke(strokeWidth);
                             cb.setLineWidth(strokeWidth);
                             Color color = (Color)realPaint;
                             int alpha = color.getAlpha();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -483,6 +483,7 @@ private double drawString(String s, BaseFont baseFont, double x, double y) {
                     if (strokeWidth != 1) {
                         if(realPaint instanceof Color){
                             cb.setTextRenderingMode(PdfContentByte.TEXT_RENDER_MODE_FILL_STROKE);
+                            oldStroke = new BasicStroke(strokeWidth);
                             cb.setLineWidth(strokeWidth);
                             Color color = (Color)realPaint;
                             int alpha = color.getAlpha();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -1850,8 +1850,8 @@ private static void openPackageInModule(Class<?> classInModule, String packageNa
                 if (isOpenMethod == null) {
                     return;
                 }
-                Object isOpend = isOpenMethod.invoke(targetModule, packageName, callerModule);
-                if (isOpend instanceof Boolean && ((Boolean) isOpend)) {
+                Object isOpened = isOpenMethod.invoke(targetModule, packageName, callerModule);
+                if (isOpened instanceof Boolean && ((Boolean) isOpened)) {
                     Method addOpensMethod = getMethod(moduleClass, ADD_OPENS_METHOD_NAME, String.class, moduleClass);
                     if (callerModule != null) {
                         addOpensMethod.invoke(targetModule, packageName, callerModule);

File: openpdf/src/main/java/com/lowagie/text/FontFactoryImp.java
Patch:
@@ -182,6 +182,7 @@ public Font getFont(@Nullable String fontname, String encoding, boolean embedded
                 int fs = getFontStyle(f);
                 if ((s & Font.BOLDITALIC) == fs) {
                     fontname = f;
+		    lowerCaseFontname = fontname.toLowerCase(Locale.ROOT);
                     // If a styled font already exists, we don't want to use the separate style-Attribut.
                     // For example: Helvetica-Bold should have a normal style, because it's already bold.
                     style = s == fs ? Font.NORMAL : s;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -810,7 +810,7 @@ public RenderingHints getRenderingHints() {
      * @see Graphics#translate(int, int)
      */
     public void translate(int x, int y) {
-        translate(x, y);
+        translate((double)x, (double)y);
     }
     
     /**

File: openpdf/src/test/java/com/lowagie/text/pdf/PRAcroFormTest.java
Patch:
@@ -11,7 +11,7 @@ public class PRAcroFormTest {
 	
     @Test
     public void infiniteLoopTest() throws Exception {
-        try (InputStream is = AcroFieldsTest.class.getResourceAsStream("/pades_opposite_infinite_loop.pdf");
+        try (InputStream is = PRAcroFormTest.class.getResourceAsStream("/pades_opposite_infinite_loop.pdf");
                 PdfReader reader = new PdfReader(is)) {
             assertTimeoutPreemptively(ofMillis(500), () -> {
     			reader.getAcroForm();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2345,7 +2345,7 @@ void addSimpleShading(PdfShading shading) {
 
 // [F10] extended graphics state (for instance for transparency)
 
-    protected HashMap<PdfDictionary, PdfObject[]> documentExtGState = new HashMap<>();
+    protected HashMap<PdfDictionary, PdfObject[]> documentExtGState = new LinkedHashMap<>();
 
     PdfObject[] addSimpleExtGState(PdfDictionary gstate) {
         if (!documentExtGState.containsKey(gstate)) {
@@ -2358,6 +2358,7 @@ PdfObject[] addSimpleExtGState(PdfDictionary gstate) {
 //  [F11] adding properties (OCG, marked content)
 
     protected HashMap<Object, PdfObject[]> documentProperties = new HashMap<>();
+
     PdfObject[] addSimpleProperty(Object prop, PdfIndirectReference refi) {
         if (!documentProperties.containsKey(prop)) {
             if (prop instanceof PdfOCG)

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/images/Images.java
Patch:
@@ -57,6 +57,9 @@ public static void main(String[] args) {
             document.add(new Paragraph("pngnow.png"));
             Image png = Image.getInstance("pngnow.png");
             document.add(png);
+            document.add(new Paragraph("grayscaled.png"));
+            Image grayscaledPng = Image.getInstance("grayscaled.png");
+            document.add(grayscaledPng);
             document.add(new Paragraph("iText.bmp"));
             Image bmp = Image.getInstance("iText.bmp");
             document.add(bmp);

File: openpdf/src/main/java/com/lowagie/text/Image.java
Patch:
@@ -575,7 +575,7 @@ public static Image getInstance(java.awt.Image image, java.awt.Color color,
 
         if(image instanceof BufferedImage){
             BufferedImage bi = (BufferedImage) image;
-            if(bi.getType()==BufferedImage.TYPE_BYTE_BINARY) {
+            if(bi.getType() == BufferedImage.TYPE_BYTE_BINARY && bi.getColorModel().getNumColorComponents() <= 2) {
                 forceBW=true;
             }
         }

File: openpdf/src/main/java/com/lowagie/text/FontFactoryImp.java
Patch:
@@ -182,6 +182,7 @@ public Font getFont(@Nullable String fontname, String encoding, boolean embedded
                 int fs = getFontStyle(f);
                 if ((s & Font.BOLDITALIC) == fs) {
                     fontname = f;
+		    lowerCaseFontname = fontname.toLowerCase(Locale.ROOT);
                     // If a styled font already exists, we don't want to use the separate style-Attribut.
                     // For example: Helvetica-Bold should have a normal style, because it's already bold.
                     style = s == fs ? Font.NORMAL : s;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDocument.java
Patch:
@@ -1483,7 +1483,7 @@ else if (isJustified) {
                         float descender = chunk.font().getFont().getFontDescriptor(BaseFont.DESCENT, fontSize);
                         Object[] bgr = (Object[]) chunk.getAttribute(Chunk.BACKGROUND);
 
-                        graphics.setColorFill((ExtendedColor) bgr[0]);
+                        graphics.setColorFill((Color) bgr[0]);
 
                         float[] extra = (float[]) bgr[1];
                         graphics.rectangle(xMarker - extra[0],

File: openpdf/src/test/java/com/lowagie/text/VersionBeanTest.java
Patch:
@@ -9,6 +9,7 @@
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
+@Deprecated
 class VersionBeanTest {
 
     private VersionBean versionBean;

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/HyphenationTree.java
Patch:
@@ -350,7 +350,7 @@ public Hyphenation hyphenate(char[] w, int offset, int len,
         String sw = new String(word, 1, len);
         if (stoplist.containsKey(sw)) {
             // assume only simple hyphens (Hyphen.pre="-", Hyphen.post = Hyphen.no = null)
-            ArrayList hw = (ArrayList)stoplist.get(sw);
+            List hw = stoplist.get(sw);
             int j = 0;
             for (i = 0; i < hw.size(); i++) {
                 Object o = hw.get(i);

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/PageLabels.java
Patch:
@@ -19,7 +19,6 @@
 import java.util.Arrays;
 
 import com.lowagie.text.Document;
-import com.lowagie.text.DocumentException;
 import com.lowagie.text.Paragraph;
 import com.lowagie.text.pdf.PdfPageLabels;
 import com.lowagie.text.pdf.PdfReader;

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/pageevents/PageNumbersWatermark.java
Patch:
@@ -161,8 +161,8 @@ public void onEndPage(PdfWriter writer, Document document) {
             catch(Exception e) {
                 throw new ExceptionConverter(e);
             }
-            cb.restoreState();
         }
+        cb.restoreState();
         cb.sanityCheck();
     }
     

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/pageevents/PageNumbersWatermark.java
Patch:
@@ -161,8 +161,8 @@ public void onEndPage(PdfWriter writer, Document document) {
             catch(Exception e) {
                 throw new ExceptionConverter(e);
             }
-            cb.restoreState();
         }
+        cb.restoreState();
         cb.sanityCheck();
     }
     

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.lowagie.text.Font;
 import com.lowagie.text.FontFactory;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 import java.util.HashMap;
@@ -29,7 +28,7 @@ class FontTest {
         put(Font.BOLDITALIC, f -> f.isBold() && f.isItalic());
     }};
 
-    private static final String FONT_NAME_WITHOUT_STYLES = "Tahoma";
+    private static final String FONT_NAME_WITHOUT_STYLES = "non-existing-font";
     
     private static final String FONT_NAME_WITH_STYLES = "Courier";
 
@@ -42,7 +41,6 @@ class FontTest {
      * @see Font#getStyle()
      */
     @Test
-    @Disabled  //TODO: see issue https://github.com/LibrePDF/OpenPDF/issues/264
     void testStyleSettingByValue() {
         FontFactory.registerDirectories();
         for (final int style: STYLES_TO_TEST_METHOD.keySet()) { // TODO: complement tests after adding enum with font styles

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.lowagie.text.Font;
 import com.lowagie.text.FontFactory;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 import java.util.HashMap;
@@ -29,7 +28,7 @@ class FontTest {
         put(Font.BOLDITALIC, f -> f.isBold() && f.isItalic());
     }};
 
-    private static final String FONT_NAME_WITHOUT_STYLES = "Tahoma";
+    private static final String FONT_NAME_WITHOUT_STYLES = "non-existing-font";
     
     private static final String FONT_NAME_WITH_STYLES = "Courier";
 
@@ -42,7 +41,6 @@ class FontTest {
      * @see Font#getStyle()
      */
     @Test
-    @Disabled  //TODO: see issue https://github.com/LibrePDF/OpenPDF/issues/264
     void testStyleSettingByValue() {
         FontFactory.registerDirectories();
         for (final int style: STYLES_TO_TEST_METHOD.keySet()) { // TODO: complement tests after adding enum with font styles

File: openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.lowagie.text.Font;
 import com.lowagie.text.FontFactory;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 import java.util.HashMap;
@@ -41,6 +42,7 @@ class FontTest {
      * @see Font#getStyle()
      */
     @Test
+    @Disabled  //TODO: see issue https://github.com/LibrePDF/OpenPDF/issues/264
     void testStyleSettingByValue() {
         FontFactory.registerDirectories();
         for (final int style: STYLES_TO_TEST_METHOD.keySet()) { // TODO: complement tests after adding enum with font styles

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPRow.java
Patch:
@@ -607,9 +607,9 @@ public PdfPRow splitRow(PdfPTable table, int rowIndex, float new_height) {
                 float y;
                 ColumnText ct = ColumnText.duplicate(cell.getColumn());
                 float left = cell.getLeft() + cell.getEffectivePaddingLeft();
-                float bottom = cell.getTop() + cell.getEffectivePaddingBottom() - newHeight;
-                float right = cell.getRight() - cell.getEffectivePaddingRight();
                 float top = cell.getTop() - cell.getEffectivePaddingTop();
+                float bottom = top + cell.getEffectivePaddingBottom() - newHeight;
+                float right = cell.getRight() - cell.getEffectivePaddingRight();
                 switch (cell.getRotation()) {
                     case 90:
                     case 270:

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPRow.java
Patch:
@@ -607,9 +607,9 @@ public PdfPRow splitRow(PdfPTable table, int rowIndex, float new_height) {
                 float y;
                 ColumnText ct = ColumnText.duplicate(cell.getColumn());
                 float left = cell.getLeft() + cell.getEffectivePaddingLeft();
-                float bottom = cell.getTop() + cell.getEffectivePaddingBottom() - newHeight;
-                float right = cell.getRight() - cell.getEffectivePaddingRight();
                 float top = cell.getTop() - cell.getEffectivePaddingTop();
+                float bottom = top + cell.getEffectivePaddingBottom() - newHeight;
+                float right = cell.getRight() - cell.getEffectivePaddingRight();
                 switch (cell.getRotation()) {
                     case 90:
                     case 270:

File: openpdf/src/main/java/com/lowagie/text/ExceptionConverter.java
Patch:
@@ -170,7 +170,7 @@ public void printStackTrace(java.io.PrintWriter s) {
      * is called by the constructor of Throwable 
      * @return a Throwable
      */
-    public Throwable fillInStackTrace() {
+    public synchronized Throwable fillInStackTrace() {
         return this;
     }
 }
\ No newline at end of file

File: openpdf/src/main/java/com/lowagie/text/error_messages/MessageLocalization.java
Patch:
@@ -236,7 +236,9 @@ private static Map<String, String> getLanguageMessages(String language, String c
         }
         finally {
             try {
-                is.close();
+                if (is != null) {
+                    is.close();
+                }
             } catch (Exception ignored) {
                 // do nothing
             }

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeDatamatrix.java
Patch:
@@ -353,8 +353,7 @@ private static int X12Encodation(byte[] text, int textOffset, int textLength, by
             }
         }
         c = 100;
-        if (textLength > 0)
-            c = x[textLength - 1];
+        c = x[textLength - 1];
         if (ptrIn != textLength || (c < 40 && ptrOut >= dataLength))
             return -1;
         if (c < 40)
@@ -639,7 +638,7 @@ else if (eci < 16383) {
                     return -1;
                 ptrIn += 2;
                 fi = getNumber(text, textOffset + ptrIn, 5);
-                if (fi < 0 || fn >= 64516)
+                if (fi < 0)
                     return -1;
                 ptrIn += 5;
                 data[ptrOut++] = (byte)(233);

File: openpdf/src/main/java/com/lowagie/text/pdf/CFFFontSubset.java
Patch:
@@ -840,7 +840,7 @@ protected void ReadCommand()
                 arg_count++;
                 continue;
             }
-            if (b0<=31 && b0 != 28) // An operator was found.. Set Key.
+            if (b0 <= 31) // An operator was found.. Set Key.
             {
                 gotKey=true;
                 // 12 is an escape command therefore the next byte is a part
@@ -854,7 +854,6 @@ protected void ReadCommand()
                 }
                 else
                     key = SubrsFunctions[b0];
-                continue;
             }
         }        
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -816,8 +816,7 @@ public int go(boolean simulate) throws DocumentException {
         float ratio = spaceCharRatio;
         Object[] currentValues = new Object[2];
         PdfFont currentFont = null;
-        Float lastBaseFactor = (float) 0;
-        currentValues[1] = lastBaseFactor;
+        currentValues[1] = 0.0F;
         PdfDocument pdf = null;
         PdfContentByte graphics = null;
         PdfContentByte text = null;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -1845,10 +1845,10 @@ public static byte[] decodePredictor(byte[] in, PdfObject dicPar) {
         break;
       case 3: // PNG_FILTER_AVERAGE
         for (int i = 0; i < bytesPerPixel; i++) {
-          curr[i] += prior[i] / 2;
+          curr[i] += prior[i] / (byte) 2;
         }
         for (int i = bytesPerPixel; i < bytesPerRow; i++) {
-          curr[i] += ((curr[i - bytesPerPixel] & 0xff) + (prior[i] & 0xff)) / 2;
+          curr[i] += ((curr[i - bytesPerPixel] & 0xff) + (prior[i] & 0xff)) / (byte) 2;
         }
         break;
       case 4: // PNG_FILTER_PAETH

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2252,7 +2252,7 @@ public void freeReader(PdfReader reader) throws IOException {
      * @return the approximate size without fonts or templates
      */
     public long getCurrentDocumentSize() {
-        return body.offset() + body.size() * 20 + 0x48;
+        return body.offset() + (long)body.size() * 20L + 0x48;
     }
 
     protected PdfReaderInstance currentPdfReaderInstance;

File: openpdf/src/main/java/com/lowagie/text/pdf/Type1Font.java
Patch:
@@ -423,7 +423,7 @@ public void process(RandomAccessFileOrArray rf) throws DocumentException, IOExce
                 break;
             }
             Integer C = -1;
-            Integer WX = 250;
+            int WX = 250;
             String N = "";
             int[] B = null;
 
@@ -490,7 +490,7 @@ public void process(RandomAccessFileOrArray rf) throws DocumentException, IOExce
             {
                 String first = tok.nextToken();
                 String second = tok.nextToken();
-                Integer width = (int) Float.parseFloat(tok.nextToken());
+                int width = Integer.parseInt(tok.nextToken());
                 Object[] relates = KernPairs.get(first);
                 if (relates == null)
                     KernPairs.put(first, new Object[]{second, width});

File: openpdf/src/main/java/com/lowagie/text/pdf/fonts/cmaps/CMapParser.java
Patch:
@@ -286,7 +286,7 @@ else if( theNextByte >= 'a' && theNextByte <= 'f' )
                         {
                             multiplyer = 16;
                         }
-                        tokenParserByteBuffer[bufferIndex]+= intValue;
+                        tokenParserByteBuffer[bufferIndex]+= (byte) intValue;
                         theNextByte = is.read();
                     }
                     byte[] finalResult = new byte[bufferIndex+1];
@@ -339,7 +339,7 @@ else if( theNextByte >= 'a' && theNextByte <= 'f' )
                 String value = buffer.toString();
                 if( value.indexOf( '.' ) >=0 )
                 {
-                    retval = new Double( value );
+                    retval = Double.valueOf( value );
                 }
                 else
                 {

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/LangAlt.java
Patch:
@@ -92,7 +92,7 @@ protected void process(StringBuffer buf, Object lang) {
     /**
      * Creates a String that can be used in an XmpSchema.
      */
-    public String toString() {
+    public synchronized String toString() {
         StringBuffer sb = new StringBuffer();
         sb.append("<rdf:Alt>");
         for (Enumeration e = this.propertyNames(); e.hasMoreElements();) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamperImp.java
Patch:
@@ -225,7 +225,7 @@ void close(Map<String, String> moreInfo) throws IOException {
           skipInfo = iInfo.getNumber();
         }
         if (oldInfo != null && oldInfo.get(PdfName.PRODUCER) != null) {
-          producer = oldInfo.getAsString(PdfName.PRODUCER).toString();
+          producer = oldInfo.getAsString(PdfName.PRODUCER).toUnicodeString();
         }
         if (producer == null) {
           producer = Document.getVersion();

File: openpdf/src/main/java/com/lowagie/text/ExceptionConverter.java
Patch:
@@ -170,7 +170,7 @@ public void printStackTrace(java.io.PrintWriter s) {
      * is called by the constructor of Throwable 
      * @return a Throwable
      */
-    public Throwable fillInStackTrace() {
+    public synchronized Throwable fillInStackTrace() {
         return this;
     }
 }
\ No newline at end of file

File: openpdf/src/main/java/com/lowagie/text/error_messages/MessageLocalization.java
Patch:
@@ -236,7 +236,9 @@ private static Map<String, String> getLanguageMessages(String language, String c
         }
         finally {
             try {
-                is.close();
+                if (is != null) {
+                    is.close();
+                }
             } catch (Exception ignored) {
                 // do nothing
             }

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeDatamatrix.java
Patch:
@@ -353,8 +353,7 @@ private static int X12Encodation(byte[] text, int textOffset, int textLength, by
             }
         }
         c = 100;
-        if (textLength > 0)
-            c = x[textLength - 1];
+        c = x[textLength - 1];
         if (ptrIn != textLength || (c < 40 && ptrOut >= dataLength))
             return -1;
         if (c < 40)
@@ -639,7 +638,7 @@ else if (eci < 16383) {
                     return -1;
                 ptrIn += 2;
                 fi = getNumber(text, textOffset + ptrIn, 5);
-                if (fi < 0 || fn >= 64516)
+                if (fi < 0)
                     return -1;
                 ptrIn += 5;
                 data[ptrOut++] = (byte)(233);

File: openpdf/src/main/java/com/lowagie/text/pdf/CFFFontSubset.java
Patch:
@@ -840,7 +840,7 @@ protected void ReadCommand()
                 arg_count++;
                 continue;
             }
-            if (b0<=31 && b0 != 28) // An operator was found.. Set Key.
+            if (b0 <= 31) // An operator was found.. Set Key.
             {
                 gotKey=true;
                 // 12 is an escape command therefore the next byte is a part
@@ -854,7 +854,6 @@ protected void ReadCommand()
                 }
                 else
                     key = SubrsFunctions[b0];
-                continue;
             }
         }        
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -816,8 +816,7 @@ public int go(boolean simulate) throws DocumentException {
         float ratio = spaceCharRatio;
         Object[] currentValues = new Object[2];
         PdfFont currentFont = null;
-        Float lastBaseFactor = (float) 0;
-        currentValues[1] = lastBaseFactor;
+        currentValues[1] = 0.0F;
         PdfDocument pdf = null;
         PdfContentByte graphics = null;
         PdfContentByte text = null;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -1845,10 +1845,10 @@ public static byte[] decodePredictor(byte[] in, PdfObject dicPar) {
         break;
       case 3: // PNG_FILTER_AVERAGE
         for (int i = 0; i < bytesPerPixel; i++) {
-          curr[i] += prior[i] / 2;
+          curr[i] += prior[i] / (byte) 2;
         }
         for (int i = bytesPerPixel; i < bytesPerRow; i++) {
-          curr[i] += ((curr[i - bytesPerPixel] & 0xff) + (prior[i] & 0xff)) / 2;
+          curr[i] += ((curr[i - bytesPerPixel] & 0xff) + (prior[i] & 0xff)) / (byte) 2;
         }
         break;
       case 4: // PNG_FILTER_PAETH

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2252,7 +2252,7 @@ public void freeReader(PdfReader reader) throws IOException {
      * @return the approximate size without fonts or templates
      */
     public long getCurrentDocumentSize() {
-        return body.offset() + body.size() * 20 + 0x48;
+        return body.offset() + (long)body.size() * 20L + 0x48;
     }
 
     protected PdfReaderInstance currentPdfReaderInstance;

File: openpdf/src/main/java/com/lowagie/text/pdf/Type1Font.java
Patch:
@@ -423,7 +423,7 @@ public void process(RandomAccessFileOrArray rf) throws DocumentException, IOExce
                 break;
             }
             Integer C = -1;
-            Integer WX = 250;
+            int WX = 250;
             String N = "";
             int[] B = null;
 
@@ -490,7 +490,7 @@ public void process(RandomAccessFileOrArray rf) throws DocumentException, IOExce
             {
                 String first = tok.nextToken();
                 String second = tok.nextToken();
-                Integer width = (int) Float.parseFloat(tok.nextToken());
+                int width = Integer.parseInt(tok.nextToken());
                 Object[] relates = KernPairs.get(first);
                 if (relates == null)
                     KernPairs.put(first, new Object[]{second, width});

File: openpdf/src/main/java/com/lowagie/text/pdf/fonts/cmaps/CMapParser.java
Patch:
@@ -286,7 +286,7 @@ else if( theNextByte >= 'a' && theNextByte <= 'f' )
                         {
                             multiplyer = 16;
                         }
-                        tokenParserByteBuffer[bufferIndex]+= intValue;
+                        tokenParserByteBuffer[bufferIndex]+= (byte) intValue;
                         theNextByte = is.read();
                     }
                     byte[] finalResult = new byte[bufferIndex+1];
@@ -339,7 +339,7 @@ else if( theNextByte >= 'a' && theNextByte <= 'f' )
                 String value = buffer.toString();
                 if( value.indexOf( '.' ) >=0 )
                 {
-                    retval = new Double( value );
+                    retval = Double.valueOf( value );
                 }
                 else
                 {

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/LangAlt.java
Patch:
@@ -92,7 +92,7 @@ protected void process(StringBuffer buf, Object lang) {
     /**
      * Creates a String that can be used in an XmpSchema.
      */
-    public String toString() {
+    public synchronized String toString() {
         StringBuffer sb = new StringBuffer();
         sb.append("<rdf:Alt>");
         for (Enumeration e = this.propertyNames(); e.hasMoreElements();) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamperImp.java
Patch:
@@ -225,7 +225,7 @@ void close(Map<String, String> moreInfo) throws IOException {
           skipInfo = iInfo.getNumber();
         }
         if (oldInfo != null && oldInfo.get(PdfName.PRODUCER) != null) {
-          producer = oldInfo.getAsString(PdfName.PRODUCER).toString();
+          producer = oldInfo.getAsString(PdfName.PRODUCER).toUnicodeString();
         }
         if (producer == null) {
           producer = Document.getVersion();

File: openpdf/src/main/java/com/lowagie/text/pdf/CFFFontSubset.java
Patch:
@@ -945,7 +945,9 @@ protected byte[] BuildNewIndex(int[] Offsets, Map<Integer, int[]> Used,byte Oper
             // If the object in the offset is also present in the used
             // HashMap then increment the offset var by its size
             if (Used.containsKey(i)) {
-                Offset += Offsets[i+1] - Offsets[i];
+                if (Offsets.length > i + 1) {
+                    Offset += Offsets[i + 1] - Offsets[i];
+                }
             } else {
                 // Else the same offset is kept in i+1.
                 unusedCount++;

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -484,6 +484,9 @@ protected List<float[]> convertColumn(float[] cLine) {
             throw new RuntimeException(MessageLocalization.getComposedMessage("no.valid.column.line.found"));
         List<float[]> cc = new ArrayList<>();
         for (int k = 0; k < cLine.length - 2; k += 2) {
+            if (cLine.length == k + 3){
+                break;
+            }
             float x1 = cLine[k];
             float y1 = cLine[k + 1];
             float x2 = cLine[k + 2];

File: openpdf/src/main/java/com/lowagie/text/pdf/DocumentFont.java
Patch:
@@ -586,7 +586,7 @@ public int getWidth(String text) {
       char[] chars = text.toCharArray();
       int total = 0;
       for (char aChar : chars) {
-        int[] ws = metrics.get(aChar);
+        int[] ws = metrics.get(Character.getNumericValue(aChar));
         if (ws != null) {
           total += ws[1];
         }
@@ -606,7 +606,7 @@ byte[] convertToBytes(String text) {
       byte[] b = new byte[len * 2];
       int bptr = 0;
       for (char aChar : chars) {
-        int[] ws = metrics.get(aChar);
+        int[] ws = metrics.get(Character.getNumericValue(aChar));
         if (ws != null) {
           int g = ws[0];
           b[bptr++] = (byte) (g / 256);

File: openpdf/src/main/java/com/lowagie/text/pdf/FontSelector.java
Patch:
@@ -117,7 +117,9 @@ public Phrase process(String text) {
                             lastidx = f;
                         }
                         sb.append(c);
-                        sb.append(cc[++k]);
+                        if (cc.length > k + 1) {
+                            sb.append(cc[++k]);
+                        }
                         break;
                     }
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -1186,8 +1186,9 @@ protected void readDocObj() throws IOException {
     xrefObj.addAll(Collections.nCopies(xref.length / 2, null));
     for (int k = 2; k < xref.length; k += 2) {
       int pos = xref[k];
-      if (pos <= 0 || xref[k + 1] > 0)
+      if (pos <= 0 || ((xref.length > k + 1) && (xref[k + 1] > 0))) {
         continue;
+      }
       tokens.seek(pos);
       tokens.nextValidToken();
       if (tokens.getTokenType() != PRTokeniser.TK_NUMBER)

File: openpdf/src/main/java/com/lowagie/text/pdf/Type1Font.java
Patch:
@@ -327,7 +327,7 @@ public int getKerning(int char1, int char2)
         if (obj == null)
             return 0;
         for (int k = 0; k < obj.length; k += 2) {
-            if (second.equals(obj[k]))
+            if (second.equals(obj[k]) && obj.length > k + 1)
                 return (Integer) obj[k + 1];
         }
         return 0;
@@ -819,7 +819,7 @@ public boolean setKerning(int char1, int char2, int kern) {
             return true;
         }
         for (int k = 0; k < obj.length; k += 2) {
-            if (second.equals(obj[k])) {
+            if (second.equals(obj[k]) && obj.length > k + 1) {
                 obj[k + 1] = kern;
                 return true;
             }

File: openpdf/src/main/java/com/lowagie/text/pdf/CFFFontSubset.java
Patch:
@@ -945,7 +945,9 @@ protected byte[] BuildNewIndex(int[] Offsets, Map<Integer, int[]> Used,byte Oper
             // If the object in the offset is also present in the used
             // HashMap then increment the offset var by its size
             if (Used.containsKey(i)) {
-                Offset += Offsets[i+1] - Offsets[i];
+                if (Offsets.length > i + 1) {
+                    Offset += Offsets[i + 1] - Offsets[i];
+                }
             } else {
                 // Else the same offset is kept in i+1.
                 unusedCount++;

File: openpdf/src/main/java/com/lowagie/text/pdf/ColumnText.java
Patch:
@@ -484,6 +484,9 @@ protected List<float[]> convertColumn(float[] cLine) {
             throw new RuntimeException(MessageLocalization.getComposedMessage("no.valid.column.line.found"));
         List<float[]> cc = new ArrayList<>();
         for (int k = 0; k < cLine.length - 2; k += 2) {
+            if (cLine.length == k + 3){
+                break;
+            }
             float x1 = cLine[k];
             float y1 = cLine[k + 1];
             float x2 = cLine[k + 2];

File: openpdf/src/main/java/com/lowagie/text/pdf/DocumentFont.java
Patch:
@@ -586,7 +586,7 @@ public int getWidth(String text) {
       char[] chars = text.toCharArray();
       int total = 0;
       for (char aChar : chars) {
-        int[] ws = metrics.get(aChar);
+        int[] ws = metrics.get(Character.getNumericValue(aChar));
         if (ws != null) {
           total += ws[1];
         }
@@ -606,7 +606,7 @@ byte[] convertToBytes(String text) {
       byte[] b = new byte[len * 2];
       int bptr = 0;
       for (char aChar : chars) {
-        int[] ws = metrics.get(aChar);
+        int[] ws = metrics.get(Character.getNumericValue(aChar));
         if (ws != null) {
           int g = ws[0];
           b[bptr++] = (byte) (g / 256);

File: openpdf/src/main/java/com/lowagie/text/pdf/FontSelector.java
Patch:
@@ -117,7 +117,9 @@ public Phrase process(String text) {
                             lastidx = f;
                         }
                         sb.append(c);
-                        sb.append(cc[++k]);
+                        if (cc.length > k + 1) {
+                            sb.append(cc[++k]);
+                        }
                         break;
                     }
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -1186,8 +1186,9 @@ protected void readDocObj() throws IOException {
     xrefObj.addAll(Collections.nCopies(xref.length / 2, null));
     for (int k = 2; k < xref.length; k += 2) {
       int pos = xref[k];
-      if (pos <= 0 || xref[k + 1] > 0)
+      if (pos <= 0 || ((xref.length > k + 1) && (xref[k + 1] > 0))) {
         continue;
+      }
       tokens.seek(pos);
       tokens.nextValidToken();
       if (tokens.getTokenType() != PRTokeniser.TK_NUMBER)

File: openpdf/src/main/java/com/lowagie/text/pdf/Type1Font.java
Patch:
@@ -327,7 +327,7 @@ public int getKerning(int char1, int char2)
         if (obj == null)
             return 0;
         for (int k = 0; k < obj.length; k += 2) {
-            if (second.equals(obj[k]))
+            if (second.equals(obj[k]) && obj.length > k + 1)
                 return (Integer) obj[k + 1];
         }
         return 0;
@@ -819,7 +819,7 @@ public boolean setKerning(int char1, int char2, int kern) {
             return true;
         }
         for (int k = 0; k < obj.length; k += 2) {
-            if (second.equals(obj[k])) {
+            if (second.equals(obj[k]) && obj.length > k + 1) {
                 obj[k + 1] = kern;
                 return true;
             }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -104,6 +104,7 @@
  */
 
 public class PdfWriter extends DocWriter implements
+    AutoCloseable,
     Closeable,
     PdfViewerPreferences,
     PdfEncryptionSettings,
@@ -1165,7 +1166,7 @@ public void close() {
                 // See: https://github.com/LibrePDF/OpenPDF/issues/164
                 throw new RuntimeException("The page " + pageReferences.size() +
                 " was requested but the document has only " + (currentPageNumber - 1) + " pages.");
-            pdf.close();
+
             try {
                 addSharedObjectsToBody();
                 // add the root to the body
@@ -1224,8 +1225,7 @@ public void close() {
                 os.write(getISOBytes("\n%%EOF\n"));
                 super.close();
             }
-            catch(IOException ioe) {
-                throw new ExceptionConverter(ioe);
+            catch(IOException ignored) {
             }
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -104,6 +104,7 @@
  */
 
 public class PdfWriter extends DocWriter implements
+    AutoCloseable,
     Closeable,
     PdfViewerPreferences,
     PdfEncryptionSettings,
@@ -1165,7 +1166,7 @@ public void close() {
                 // See: https://github.com/LibrePDF/OpenPDF/issues/164
                 throw new RuntimeException("The page " + pageReferences.size() +
                 " was requested but the document has only " + (currentPageNumber - 1) + " pages.");
-            pdf.close();
+
             try {
                 addSharedObjectsToBody();
                 // add the root to the body
@@ -1224,8 +1225,7 @@ public void close() {
                 os.write(getISOBytes("\n%%EOF\n"));
                 super.close();
             }
-            catch(IOException ioe) {
-                throw new ExceptionConverter(ioe);
+            catch(IOException ignored) {
             }
         }
     }

File: openpdf/src/main/java/com/lowagie/text/Utilities.java
Patch:
@@ -55,7 +55,7 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.Collections;
-import java.util.Hashtable;
+import java.util.Map;
 import java.util.Properties;
 import java.util.Set;
 
@@ -75,8 +75,8 @@ public class Utilities {
      *            a Hashtable
      * @return the keyset of a Hashtable (or an empty set if table is null)
      */
-    public static Set getKeySet(Hashtable table) {
-        return (table == null) ? Collections.EMPTY_SET : table.keySet();
+    public static Set<String> getKeySet(Map<String, ?> table) {
+        return (table == null) ? Collections.emptySet() : table.keySet();
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleBookmark.java
Patch:
@@ -61,12 +61,12 @@
 import java.util.Map;
 import java.util.Stack;
 import java.util.StringTokenizer;
-import com.lowagie.text.error_messages.MessageLocalization;
 
+import com.lowagie.text.error_messages.MessageLocalization;
+import com.lowagie.text.xml.XMLUtil;
 import com.lowagie.text.xml.simpleparser.IanaEncodings;
 import com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler;
 import com.lowagie.text.xml.simpleparser.SimpleXMLParser;
-import com.lowagie.text.xml.XMLUtil;
 
 /**
  * Bookmark processing in a simple way. It has some limitations, mainly the only
@@ -712,7 +712,7 @@ public static List<Map<String, Object>> importFromXML(InputStream in) throws IOE
      * @throws IOException on error
      * @return the bookmarks
      */
-    public static List importFromXML(Reader in) throws IOException {
+    public static List<Map<String, Object>> importFromXML(Reader in) throws IOException {
         SimpleBookmark book = new SimpleBookmark();
         SimpleXMLParser.parse(book, in);
         return book.topList;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/OptionArgument.java
Patch:
@@ -37,7 +37,6 @@
 
 import java.awt.event.ActionEvent;
 import java.util.TreeMap;
-
 import javax.swing.JComboBox;
 import javax.swing.JOptionPane;
 
@@ -186,7 +185,7 @@ public String getUsage() {
     public void actionPerformed(ActionEvent evt) {
         Object[] message = new Object[2];
         message[0] = "Choose one of the following options:";
-        JComboBox cb = new JComboBox();
+        JComboBox<Entry> cb = new JComboBox<>();
         for (Entry entry: options.values()) {
             cb.addItem(entry);
         }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/XML2Bookmarks.java
Patch:
@@ -104,7 +104,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination PDF file");
             FileInputStream bmReader = new FileInputStream( (File) getValue("xmlfile") );
-            List<Map<String, Object>> bookmarks = SimpleBookmark.importFromXML( bmReader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.importFromXML(bmReader);
             bmReader.close();
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();

File: pdf-toolbox/src/main/java/com/lowagie/tools/ConcatPdf.java
Patch:
@@ -78,7 +78,7 @@ public static void main(String[] args) {
         else {
             try {
                 int pageOffset = 0;
-                ArrayList master = new ArrayList();
+                List<Map<String, Object>> master = new ArrayList<>();
                 int f = 0;
                 String outFile = args[args.length-1];
                 Document document = null;

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/optionalcontent/Layers.java
Patch:
@@ -16,6 +16,7 @@
 import java.awt.Color;
 import java.io.FileOutputStream;
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.Element;
@@ -64,7 +65,7 @@ public static void main(String[] args) {
             l4.setPrint("Print", true);
             l2.setOn(false);
             l3.setOn(false);
-            ArrayList radio = new ArrayList();
+            List<PdfLayer> radio = new ArrayList<>();
             radio.add(l1);
             radio.add(l2);
             radio.add(l3);

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/optionalcontent/OptionalContent.java
Patch:
@@ -16,6 +16,7 @@
 import java.awt.Color;
 import java.io.FileOutputStream;
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Chunk;
 import com.lowagie.text.Document;
@@ -96,7 +97,7 @@ public static void main(String[] args) {
             tp.setLayer(l4);
             tp.setBoundingBox(new Rectangle(0, -10, 100, 20));
             cb.addTemplate(tp, 200, 500);
-            ArrayList state = new ArrayList();
+            List<Object> state = new ArrayList<>();
             state.add("toggle");
             state.add(l1);
             state.add(l2);

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/getting/UsingFontFactory.java
Patch:
@@ -58,7 +58,7 @@ public static void main(String[] args) {
             Paragraph p = new Paragraph("Font Families", FontFactory.getFont(FontFactory.HELVETICA, 16f));
             document.add(p);
             FontFactory.registerDirectories();
-            TreeSet families = new TreeSet(FontFactory.getRegisteredFamilies());
+            TreeSet<String> families = new TreeSet<>(FontFactory.getRegisteredFamilies());
             int c = 0;
             for (Iterator i = families.iterator(); i.hasNext() && c < 15; ) {
                 name = (String) i.next();

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/Concatenate.java
Patch:
@@ -47,7 +47,7 @@ public static void main(String[] args) {
             System.out.println("PdfCopy example");
             try {
                 int pageOffset = 0;
-                ArrayList master = new ArrayList();
+                List<Map<String, Object>> master = new ArrayList<>();
                 int f = 0;
                 String outFile = args[args.length-1];
                 Document document = null;

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Glossary.java
Patch:
@@ -16,6 +16,7 @@
 
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.util.Map;
 import java.util.TreeMap;
 
 import com.lowagie.text.Chunk;
@@ -38,7 +39,7 @@
 public class Glossary extends PdfPageEventHelper {
     
     /** keeps a glossary of words and the pages they appear on */
-    public TreeMap glossary = new TreeMap();
+    private Map<String, Integer> glossary = new TreeMap<>();
     
     /**
      * All the text that is passed to this event, gets registered in the glossary.
@@ -115,7 +116,7 @@ public static void main(String[] args) {
             document.newPage();
             for (Object o : generic.glossary.keySet()) {
                 String key = (String) o;
-                int page = (Integer) generic.glossary.get(key);
+                int page = generic.glossary.get(key);
                 Paragraph g = new Paragraph(key);
                 g.add(" : page ");
                 g.add(String.valueOf(page));

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -426,8 +426,8 @@ public boolean process(ElementListener listener) {
      * @return an <CODE>ArrayList</CODE>
      */
 
-    public ArrayList getChunks() {
-        return new ArrayList();
+    public ArrayList<Element> getChunks() {
+        return new ArrayList<>();
     }
 
     // methods

File: openpdf/src/main/java/com/lowagie/text/Chapter.java
Patch:
@@ -85,7 +85,7 @@ public class Chapter extends Section {
      */
     public Chapter(int number) {
         super(null, 1);
-        numbers = new ArrayList();
+        numbers = new ArrayList<>();
         numbers.add(number);
         triggerNewPage = true;
     }
@@ -99,7 +99,7 @@ public Chapter(int number) {
     
     public Chapter(Paragraph title, int number) {
         super(title, 1);
-        numbers = new ArrayList();
+        numbers = new ArrayList<>();
         numbers.add(number);
         triggerNewPage = true;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPTable.java
Patch:
@@ -1032,7 +1032,7 @@ public void setHeaderRows(int headerRows) {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
+    public ArrayList<Element> getChunks() {
         return new ArrayList<>();
     }
     

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfSignatureAppearanceTest.java
Patch:
@@ -46,7 +46,7 @@ void invisibleExternalSignature() throws DocumentException, IOException, NoSuchA
                 sap.setCertificationLevel(2);
                 sap.setReason("Test");
 
-                HashMap exc = new HashMap();
+                HashMap<PdfName, Integer> exc = new HashMap<>();
                 exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
@@ -99,7 +99,7 @@ void visibleExternalSignature() throws DocumentException, IOException, NoSuchAlg
                 sap.setVisibleSignature(new Rectangle(100, 100), 1);
                 sap.setLayer2Text("Hello world");
 
-                HashMap exc = new HashMap();
+                HashMap<PdfName, Integer> exc = new HashMap<>();
                 exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 

File: openpdf/src/test/java/com/lowagie/text/pdf/sign/ExtractCertificatesTest.java
Patch:
@@ -40,7 +40,7 @@ private void extract(String pdf) throws Exception {
         try (PdfReader reader = new PdfReader(pdf)) {
             AcroFields fields = reader.getAcroFields();
 
-            ArrayList<String> signatures = fields.getSignatureNames();
+            List<String> signatures = fields.getSignedFieldNames();
             System.out.println("Signs: " + signatures.size());
             for (String signature : signatures) {
 

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -426,8 +426,8 @@ public boolean process(ElementListener listener) {
      * @return an <CODE>ArrayList</CODE>
      */
 
-    public ArrayList getChunks() {
-        return new ArrayList();
+    public ArrayList<Element> getChunks() {
+        return new ArrayList<>();
     }
 
     // methods

File: openpdf/src/main/java/com/lowagie/text/Chapter.java
Patch:
@@ -85,7 +85,7 @@ public class Chapter extends Section {
      */
     public Chapter(int number) {
         super(null, 1);
-        numbers = new ArrayList();
+        numbers = new ArrayList<>();
         numbers.add(number);
         triggerNewPage = true;
     }
@@ -99,7 +99,7 @@ public Chapter(int number) {
     
     public Chapter(Paragraph title, int number) {
         super(title, 1);
-        numbers = new ArrayList();
+        numbers = new ArrayList<>();
         numbers.add(number);
         triggerNewPage = true;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPTable.java
Patch:
@@ -1032,7 +1032,7 @@ public void setHeaderRows(int headerRows) {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
+    public ArrayList<Element> getChunks() {
         return new ArrayList<>();
     }
     

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfSignatureAppearanceTest.java
Patch:
@@ -46,7 +46,7 @@ void invisibleExternalSignature() throws DocumentException, IOException, NoSuchA
                 sap.setCertificationLevel(2);
                 sap.setReason("Test");
 
-                HashMap exc = new HashMap();
+                HashMap<PdfName, Integer> exc = new HashMap<>();
                 exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
@@ -99,7 +99,7 @@ void visibleExternalSignature() throws DocumentException, IOException, NoSuchAlg
                 sap.setVisibleSignature(new Rectangle(100, 100), 1);
                 sap.setLayer2Text("Hello world");
 
-                HashMap exc = new HashMap();
+                HashMap<PdfName, Integer> exc = new HashMap<>();
                 exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 

File: openpdf/src/test/java/com/lowagie/text/pdf/sign/ExtractCertificatesTest.java
Patch:
@@ -40,7 +40,7 @@ private void extract(String pdf) throws Exception {
         try (PdfReader reader = new PdfReader(pdf)) {
             AcroFields fields = reader.getAcroFields();
 
-            ArrayList<String> signatures = fields.getSignatureNames();
+            List<String> signatures = fields.getSignedFieldNames();
             System.out.println("Signs: " + signatures.size());
             for (String signature : signatures) {
 

File: openpdf/src/main/java/com/lowagie/text/pdf/TrueTypeFont.java
Patch:
@@ -879,6 +879,7 @@ else if (platId == 3 && platSpecId == 10) {
     HashMap<Integer, int[]> readFormat12() throws IOException {
         HashMap<Integer, int[]> h = new HashMap<>();
         rf.skipBytes(2);
+        rf.readInt();
         rf.skipBytes(4);
         rf.skipBytes(4);
         int nGroups = rf.readInt();

File: openpdf/src/main/java/com/lowagie/text/pdf/TrueTypeFont.java
Patch:
@@ -880,6 +880,7 @@ HashMap<Integer, int[]> readFormat12() throws IOException {
         HashMap<Integer, int[]> h = new HashMap<>();
         rf.skipBytes(2);
         rf.skipBytes(4);
+        rf.skipBytes(4);
         int nGroups = rf.readInt();
         for (int k = 0; k < nGroups; k++) {
             int startCharCode = rf.readInt();

File: openpdf/src/main/java/com/lowagie/text/pdf/TrueTypeFont.java
Patch:
@@ -879,6 +879,7 @@ else if (platId == 3 && platSpecId == 10) {
     HashMap<Integer, int[]> readFormat12() throws IOException {
         HashMap<Integer, int[]> h = new HashMap<>();
         rf.skipBytes(2);
+        rf.readInt();
         rf.skipBytes(4);
         int nGroups = rf.readInt();
         for (int k = 0; k < nGroups; k++) {

File: openpdf/src/main/java/com/lowagie/text/Anchor.java
Patch:
@@ -218,8 +218,8 @@ public boolean process(ElementListener listener) {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
-        java.util.ArrayList<Element> tmp = new ArrayList<>();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         Chunk chunk;
         Iterator<Element> i = iterator();
         boolean localDestination = (reference != null && reference.startsWith("#"));

File: openpdf/src/main/java/com/lowagie/text/Cell.java
Patch:
@@ -253,8 +253,8 @@ public int type() {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
-        java.util.ArrayList<Element> tmp = new ArrayList<>();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         for (Element o : arrayList) {
             tmp.addAll(o.getChunks());
         }

File: openpdf/src/main/java/com/lowagie/text/Chunk.java
Patch:
@@ -320,8 +320,8 @@ public int type() {
      * 
      * @return an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
-        ArrayList tmp = new ArrayList();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         tmp.add(this);
         return tmp;
     }
@@ -447,6 +447,7 @@ public Map<String, Object> getChunkAttributes() {
      * @deprecated use {@link #setChunkAttributes(Map)}
      */
     @Deprecated
+    @SuppressWarnings("unchecked")
     public void setAttributes(HashMap attributes) {
         this.attributes = attributes;
     }

File: openpdf/src/main/java/com/lowagie/text/Element.java
Patch:
@@ -49,6 +49,8 @@
 
 package com.lowagie.text;
 
+import java.util.ArrayList;
+
 /**
  * Interface for a text element.
  * <P>
@@ -344,7 +346,7 @@ public interface Element {
      * @return an <CODE>ArrayList</CODE>
      */
 
-    java.util.ArrayList<Element> getChunks();
+    ArrayList<Element> getChunks();
 
     /**
      * Gets the content of the text element.

File: openpdf/src/main/java/com/lowagie/text/List.java
Patch:
@@ -250,8 +250,8 @@ public int type() {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
-        java.util.ArrayList<Element> tmp = new ArrayList<>();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         for (Element o : list) {
             tmp.addAll(o.getChunks());
         }

File: openpdf/src/main/java/com/lowagie/text/MarkedObject.java
Patch:
@@ -49,6 +49,7 @@
 
 package com.lowagie.text;
 
+import java.util.ArrayList;
 import java.util.Properties;
 
 /**
@@ -86,7 +87,7 @@ public MarkedObject(Element element) {
      *
      * @return  an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
+    public ArrayList<Element> getChunks() {
         return element.getChunks();
     }
 

File: openpdf/src/main/java/com/lowagie/text/Meta.java
Patch:
@@ -130,8 +130,8 @@ public int type() {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
-        return new ArrayList();
+    public ArrayList<Element> getChunks() {
+        return new ArrayList<>();
     }
     
     /**

File: openpdf/src/main/java/com/lowagie/text/Phrase.java
Patch:
@@ -83,7 +83,7 @@
  * @see        Anchor
  */
 
-public class Phrase extends java.util.ArrayList<Element> implements TextElementArray {
+public class Phrase extends ArrayList<Element> implements TextElementArray {
 
     // constants
     private static final long serialVersionUID = 2643594602455068231L;
@@ -236,8 +236,8 @@ public int type() {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
-        java.util.ArrayList<Element> tmp = new ArrayList<>();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         for (Element element : this) {
             tmp.addAll(element.getChunks());
         }

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -283,7 +283,7 @@ public int type() {
    * @return an <CODE>ArrayList</CODE>
    */
   @Override
-  public java.util.ArrayList<Element> getChunks() {
+  public ArrayList<Element> getChunks() {
     return new ArrayList<>();
   }
 

File: openpdf/src/main/java/com/lowagie/text/Row.java
Patch:
@@ -146,7 +146,7 @@ public int type() {
      *
      * @return  an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
+    public ArrayList<Element> getChunks() {
         return new ArrayList<>();
     }
     

File: openpdf/src/main/java/com/lowagie/text/Section.java
Patch:
@@ -81,7 +81,7 @@
  * </PRE></BLOCKQUOTE>
  */
 
-public class Section extends java.util.ArrayList<Element> implements TextElementArray, LargeElement {
+public class Section extends ArrayList<Element> implements TextElementArray, LargeElement {
     // constant
     /**
      * A possible number style. The default number style: "1.2.3."
@@ -231,8 +231,8 @@ public boolean isSection() {
      *
      * @return    an <CODE>ArrayList</CODE>
      */
-    public java.util.ArrayList<Element> getChunks() {
-        java.util.ArrayList<Element> tmp = new ArrayList<>();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> tmp = new ArrayList<>();
         for (Element o : this) {
             tmp.addAll(o.getChunks());
         }

File: openpdf/src/main/java/com/lowagie/text/Table.java
Patch:
@@ -330,7 +330,7 @@ public int type() {
      * @return  an <CODE>ArrayList</CODE>
      */
     
-    public java.util.ArrayList<Element> getChunks() {
+    public ArrayList<Element> getChunks() {
         return new ArrayList<>();
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/TSAClientBouncyCastle.java
Patch:
@@ -178,8 +178,7 @@ protected byte[] getTimeStampToken(byte[] imprint) throws Exception {
       tsqGenerator.setCertReq(true);
       // tsqGenerator.setReqPolicy("1.3.6.1.4.1.601.10.3.1");
       BigInteger nonce = BigInteger.valueOf(System.currentTimeMillis());
-      TimeStampRequest request = tsqGenerator.generate(
-          X509ObjectIdentifiers.id_SHA1.getId(), imprint, nonce);
+      TimeStampRequest request = tsqGenerator.generate(X509ObjectIdentifiers.id_SHA1, imprint, nonce);
       byte[] requestBytes = request.getEncoded();
 
       // Call the communications layer

File: openpdf/src/main/java/com/lowagie/text/pdf/XfdfReader.java
Patch:
@@ -176,6 +176,7 @@ public String getFileSpec() {
      */
     @Deprecated
     @Override
+    @SuppressWarnings("unchecked")
     public void startElement(String tag, HashMap h) {
         startElement(tag, (Map<String, String>) h);
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/SequenceList.java
Patch:
@@ -249,9 +249,9 @@ protected boolean getAttributes() {
      * @param maxNumber the maximum number in the range
      * @return a list with the numbers as <CODE>Integer</CODE>
      */    
-    public static List expand(String ranges, int maxNumber) {
+    public static List<Integer> expand(String ranges, int maxNumber) {
         SequenceList parse = new SequenceList(ranges);
-        LinkedList list = new LinkedList();
+        List<Integer> list = new LinkedList<>();
         boolean sair = false;
         while (!sair) {
             sair = parse.getAttributes();

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/XML2Bookmarks.java
Patch:
@@ -51,8 +51,8 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 import javax.swing.JOptionPane;
@@ -104,7 +104,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination PDF file");
             FileInputStream bmReader = new FileInputStream( (File) getValue("xmlfile") );
-            List<HashMap<String, Object>> bookmarks = SimpleBookmark.importFromXML( bmReader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.importFromXML( bmReader );
             bmReader.close();
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSignatureAppearance.java
Patch:
@@ -146,7 +146,7 @@ public class PdfSignatureAppearance {
   private byte[] externalDigest;
   private byte[] externalRSAdata;
   private String digestEncryptionAlgorithm;
-  private HashMap exclusionLocations;
+  private Map<PdfName, PdfLiteral> exclusionLocations;
 
   private Certificate[] certChain;
 
@@ -984,7 +984,7 @@ public void preClose() throws IOException, DocumentException {
    * @throws DocumentException
    *           on error
    */
-  public void preClose(HashMap exclusionSizes) throws IOException,
+  public void preClose(Map<PdfName, Integer> exclusionSizes) throws IOException,
       DocumentException {
     if (preClosed)
       throw new DocumentException(
@@ -1047,7 +1047,7 @@ public void preClose(HashMap exclusionSizes) throws IOException,
       writer.addAnnotation(sigField, pagen);
     }
 
-    exclusionLocations = new HashMap();
+    exclusionLocations = new HashMap<>();
     if (cryptoDictionary == null) {
       if (PdfName.ADOBE_PPKLITE.equals(getFilter()))
         sigStandard = new PdfSigGenericPKCS.PPKLite(getProvider());

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamper.java
Patch:
@@ -156,6 +156,7 @@ public Map<String, String> getInfoDictionary() {
      * @deprecated use {@link #setInfoDictionary(Map)}
      */
     @Deprecated
+    @SuppressWarnings("unchecked")
     public void setMoreInfo(HashMap moreInfo) {
         this.moreInfo = moreInfo;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfArray.java
Patch:
@@ -135,7 +135,7 @@ public PdfArray(int[] values) {
      *            added to the array
      * @since 2.1.3
      */
-    public PdfArray(List<PdfObject> pdfObjectList) {
+    public PdfArray(List<? extends PdfObject> pdfObjectList) {
         this();
         if (pdfObjectList != null) {
             arrayList.addAll(pdfObjectList);

File: openpdf/src/main/java/com/lowagie/text/pdf/FontDetails.java
Patch:
@@ -53,7 +53,6 @@
 import java.io.UnsupportedEncodingException;
 import java.util.HashMap;
 
-
 import com.lowagie.text.Utilities;
 import com.lowagie.text.ExceptionConverter;
 
@@ -93,7 +92,7 @@ class FontDetails {
      * The map used with double byte encodings. The key is Integer(glyph) and
      * the value is int[]{glyph, width, Unicode code}
      */    
-    HashMap longTag;
+    HashMap<Integer, int[]> longTag;
     /**
      * IntHashtable with CIDs of CJK glyphs that are used in the text.
      */
@@ -135,7 +134,7 @@ class FontDetails {
                 cjkFont = (CJKFont)baseFont;
                 break;
             case BaseFont.FONT_TYPE_TTUNI:
-                longTag = new HashMap();
+                longTag = new HashMap<>();
                 ttu = (TrueTypeFontUnicode)baseFont;
                 symbolic = baseFont.isFontSpecific();
                 break;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAcroForm.java
Patch:
@@ -94,6 +94,7 @@ public void setNeedAppearances(boolean value) {
      * @deprecated use {@link #addFieldTemplates(Map)}
      */
     @Deprecated
+    @SuppressWarnings("unchecked")
     public void addFieldTemplates(HashMap ft) {
         fieldTemplates.putAll(ft);
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfArray.java
Patch:
@@ -135,7 +135,7 @@ public PdfArray(int[] values) {
      *            added to the array
      * @since 2.1.3
      */
-    public PdfArray(List<PdfObject> pdfObjectList) {
+    public PdfArray(List<? extends PdfObject> pdfObjectList) {
         this();
         if (pdfObjectList != null) {
             arrayList.addAll(pdfObjectList);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopy.java
Patch:
@@ -700,7 +700,7 @@ private void addDocumentField(PdfIndirectReference ref) {
       cstp.fieldArray.add(ref);
     }
 
-    private void expandFields(PdfFormField field, ArrayList allAnnots) {
+    private void expandFields(PdfFormField field, List<PdfAnnotation> allAnnots) {
       allAnnots.add(field);
       List<PdfFormField> kids = field.getKidFields();
       if (kids != null) {
@@ -712,7 +712,7 @@ private void expandFields(PdfFormField field, ArrayList allAnnots) {
 
     public void addAnnotation(PdfAnnotation annot) {
       try {
-        ArrayList<PdfAnnotation> allAnnots = new ArrayList<>();
+        List<PdfAnnotation> allAnnots = new ArrayList<>();
         if (annot.isForm()) {
           PdfFormField field = (PdfFormField) annot;
           if (field.getParent() != null) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFields.java
Patch:
@@ -103,7 +103,7 @@ public void addDocument(PdfReader reader) throws DocumentException, IOException
      * @param pagesToKeep the pages to keep
      * @throws DocumentException on error
      */    
-    public void addDocument(PdfReader reader, List pagesToKeep) throws DocumentException, IOException {
+    public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws DocumentException, IOException {
         fc.addDocument(reader, pagesToKeep);
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyForms.java
Patch:
@@ -97,7 +97,7 @@ public void addDocument(PdfReader reader) throws DocumentException, IOException
      * @param pagesToKeep the pages to keep
      * @throws DocumentException on error
      */    
-    public void addDocument(PdfReader reader, List pagesToKeep) throws DocumentException, IOException {
+    public void addDocument(PdfReader reader, List<Integer> pagesToKeep) throws DocumentException, IOException {
         fc.addDocument(reader, pagesToKeep);
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/draw/VerticalPositionMark.java
Patch:
@@ -134,8 +134,8 @@ public boolean isNestable() {
     /**
      * @see com.lowagie.text.Element#getChunks()
      */
-    public ArrayList getChunks() {
-        ArrayList list = new ArrayList();
+    public ArrayList<Element> getChunks() {
+        ArrayList<Element> list = new ArrayList<>();
         list.add(new Chunk(this, true));
         return list;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/AcroFields.java
Patch:
@@ -747,7 +747,7 @@ PdfAppearance getAppearance(PdfDictionary merged, String[] values, String fieldN
       tx = new TextField(writer, null, null);
       tx.setExtraMargin(extraMarginLeft, extraMarginTop);
       tx.setBorderWidth(0);
-      tx.setSubstitutionFonts(substitutionFonts);
+      tx.setSubstitutionFontList(substitutionFonts);
       decodeGenericDictionary(merged, tx);
       //rect
       PdfArray rect = merged.getAsArray(PdfName.RECT);
@@ -2475,6 +2475,7 @@ public Map<String, BaseField> getFieldCacheMap() {
    * @since 2.1.5  this method used to take a HashMap as parameter
    */
   @Deprecated
+  @SuppressWarnings("unchecked")
   public void setFieldCache(Map fieldCache) {
     this.fieldCache = fieldCache;
   }
@@ -2654,6 +2655,7 @@ public List<BaseFont> getAllSubstitutionFonts() {
    * @param substitutionFonts the list
    */
   @Deprecated
+  @SuppressWarnings("unchecked")
   public void setSubstitutionFonts(ArrayList substitutionFonts) {
     this.substitutionFonts = substitutionFonts;
   }

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeDatamatrix.java
Patch:
@@ -58,6 +58,7 @@
 import java.util.Arrays;
 import java.io.UnsupportedEncodingException;
 import java.util.Hashtable;
+import java.util.Map;
 
 /**
  * A DataMatrix 2D barcode generator.
@@ -979,14 +980,14 @@ static class Placement {
         private int nrow;
         private int ncol;
         private short[] array;
-        private static final Hashtable cache = new Hashtable();
+        private static final Map<Integer, short[]> cache = new Hashtable<>();
 
         private Placement() {
         }
         
         static short[] doPlacement(int nrow, int ncol) {
             Integer key = nrow * 1000 + ncol;
-            short[] pc = (short[])cache.get(key);
+            short[] pc = cache.get(key);
             if (pc != null)
                 return pc;
             Placement p = new Placement();

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePDF417.java
Patch:
@@ -52,6 +52,7 @@
 import java.awt.Color;
 import java.awt.image.MemoryImageSource;
 import java.util.ArrayList;
+
 import com.lowagie.text.error_messages.MessageLocalization;
 
 import com.lowagie.text.BadElementException;
@@ -1590,7 +1591,7 @@ public Segment(char type, int start, int end) {
     }
     
     protected static class SegmentList {
-        protected ArrayList list = new ArrayList();
+        protected ArrayList<Segment> list = new ArrayList<>();
         
         public void add(char type, int start, int end) {
             list.add(new Segment(type, start, end));
@@ -1599,7 +1600,7 @@ public void add(char type, int start, int end) {
         public Segment get(int idx) {
             if (idx < 0 || idx >= list.size())
                 return null;
-            return (Segment)list.get(idx);
+            return list.get(idx);
         }
 
         public void remove(int idx) {

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseField.java
Patch:
@@ -305,6 +305,7 @@ protected static void trimRight(StringBuffer buf) {
     }
 
     @Deprecated
+    @SuppressWarnings("unchecked")
     protected static ArrayList breakLines(ArrayList breaks, BaseFont font, float fontSize, float width) {
         return (ArrayList) breakLines((List<String>) breaks, font, fontSize, width);
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/CFFFont.java
Patch:
@@ -70,6 +70,7 @@
 
 import com.lowagie.text.ExceptionConverter;
 
+import java.util.Deque;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.Objects;
@@ -694,8 +695,8 @@ public byte[] getCID(String fontName)
         for (j=0; j<fonts.length; j++)
             if (fontName.equals(fonts[j].name)) break;
         if (j==fonts.length) return null;
-        
-        LinkedList l = new LinkedList();
+
+        Deque<Item> l = new LinkedList<>();
         
         // copy the header
         

File: openpdf/src/main/java/com/lowagie/text/pdf/EnumerateTTC.java
Patch:
@@ -76,7 +76,7 @@ class EnumerateTTC extends TrueTypeFont{
     }
     
     void findNames() throws DocumentException, IOException {
-        tables = new HashMap();
+        tables = new HashMap<>();
         
         try {
             String mainTag = readStandardString(4);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -1799,7 +1799,7 @@ static boolean isSupported() {
 
             SUPPORTED = FONT_UTILITIES_CLASS != null && COMPOSITE_FONT_CLASS != null &&
                     FONT2D_CLASS != null && GET_FONT2D_METHOD != null && GET_NUM_SLOTS_METHOD != null &&
-                    GET_SLOT_FONT_METHOD != null && CAN_DYSPLAY_METHOD != null || GET_FONT_NAME_METHOD != null;
+                    GET_SLOT_FONT_METHOD != null && CAN_DYSPLAY_METHOD != null && GET_FONT_NAME_METHOD != null;
         }
 
         private static Class<?> getClassForName(String className) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -444,7 +444,7 @@ public void drawString(String s, float x, float y) {
                                 }
                                 cb.setGState(gs);
                             }
-                            cb.setColorStroke(color);
+                            setStrokePaint();
                             restoreTextRenderingMode = true;
                         }
                     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -444,7 +444,7 @@ public void drawString(String s, float x, float y) {
                                 }
                                 cb.setGState(gs);
                             }
-                            cb.setColorStroke(color);
+                            setStrokePaint();
                             restoreTextRenderingMode = true;
                         }
                     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -355,8 +355,9 @@ protected void doAttributes(AttributedCharacterIterator iter) {
      * @see Graphics2D#drawString(String, float, float)
      */
     public void drawString(String s, float x, float y) {
-        if (s.length() == 0)
+        if (s.length() == 0 || (!Float.isFinite(fontSize) || fontSize < PdfContentByte.MIN_FONT_SIZE)) {
             return;
+        }
         setFillPaint();
         if (onlyShapes) {
             drawGlyphVector(this.font.layoutGlyphVector(getFontRenderContext(), s.toCharArray(), 0, s.length(), java.awt.Font.LAYOUT_LEFT_TO_RIGHT), x, y);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -355,8 +355,9 @@ protected void doAttributes(AttributedCharacterIterator iter) {
      * @see Graphics2D#drawString(String, float, float)
      */
     public void drawString(String s, float x, float y) {
-        if (s.length() == 0)
+        if (s.length() == 0 || (!Float.isFinite(fontSize) || fontSize < PdfContentByte.MIN_FONT_SIZE)) {
             return;
+        }
         setFillPaint();
         if (onlyShapes) {
             drawGlyphVector(this.font.layoutGlyphVector(getFontRenderContext(), s.toCharArray(), 0, s.length(), java.awt.Font.LAYOUT_LEFT_TO_RIGHT), x, y);

File: openpdf/src/main/java/com/lowagie/text/Element.java
Patch:
@@ -49,8 +49,6 @@
 
 package com.lowagie.text;
 
-import java.util.ArrayList;
-
 /**
  * Interface for a text element.
  * <P>
@@ -346,7 +344,7 @@ public interface Element {
      * @return an <CODE>ArrayList</CODE>
      */
 
-    ArrayList getChunks();
+    java.util.List<Element> getChunks();
 
     /**
      * Gets the content of the text element.

File: openpdf/src/main/java/com/lowagie/text/MarkedObject.java
Patch:
@@ -49,7 +49,6 @@
 
 package com.lowagie.text;
 
-import java.util.ArrayList;
 import java.util.Properties;
 
 /**
@@ -87,7 +86,7 @@ public MarkedObject(Element element) {
      *
      * @return  an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
+    public java.util.List<Element> getChunks() {
         return element.getChunks();
     }
 

File: openpdf/src/main/java/com/lowagie/text/MarkedSection.java
Patch:
@@ -85,7 +85,7 @@ public MarkedSection(Section section) {
      * @param    o       an object of type <CODE>Paragraph</CODE>, <CODE>List</CODE> or <CODE>Table</CODE>=
      * @throws    ClassCastException if the object is not a <CODE>Paragraph</CODE>, <CODE>List</CODE> or <CODE>Table</CODE>
      */
-    public void add(int index, Object o) {
+    public void add(int index, Element o) {
         ((Section)element).add(index, o);
     }
         
@@ -97,7 +97,7 @@ public void add(int index, Object o) {
      * @return    a boolean
      * @throws    ClassCastException if the object is not a <CODE>Paragraph</CODE>, <CODE>List</CODE>, <CODE>Table</CODE> or <CODE>Section</CODE>
      */ 
-    public boolean add(Object o) {
+    public boolean add(Element o) {
         return ((Section)element).add(o);
     }
 
@@ -130,7 +130,7 @@ public boolean process(ElementListener listener) {
      * @return    <CODE>true</CODE> if the action succeeded, <CODE>false</CODE> if not.
      * @throws    ClassCastException if one of the objects isn't a <CODE>Paragraph</CODE>, <CODE>List</CODE>, <CODE>Table</CODE>
      */ 
-    public boolean addAll(Collection collection) {
+    public boolean addAll(Collection<? extends Element> collection) {
         return ((Section)element).addAll(collection);
     }
       

File: openpdf/src/main/java/com/lowagie/text/Paragraph.java
Patch:
@@ -224,7 +224,7 @@ public int type() {
      * @param    o   object        the object to add.
      * @return true is adding the object succeeded
      */
-    public boolean add(Object o) {
+    public boolean add(Element o) {
         if (o instanceof List) {
             List list = (List) o;
             list.setIndentationLeft(list.getIndentationLeft() + indentationLeft);

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -283,8 +283,8 @@ public int type() {
    * @return an <CODE>ArrayList</CODE>
    */
   @Override
-  public ArrayList getChunks() {
-    return new ArrayList();
+  public java.util.List<Element> getChunks() {
+    return new ArrayList<>();
   }
 
   /**

File: openpdf/src/main/java/com/lowagie/text/TextElementArray.java
Patch:
@@ -69,5 +69,5 @@ public interface TextElementArray extends Element {
    * @param    o            an object that has to be added
    * @return    <CODE>true</CODE> if the addition succeeded; <CODE>false</CODE> otherwise
    */
-  boolean add(Object o);
+  boolean add(Element o);
 }
\ No newline at end of file

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfIndirectReference.java
Patch:
@@ -88,7 +88,7 @@ protected PdfIndirectReference() {
  */
     
     PdfIndirectReference(int type, int number, int generation) {
-        super(0, new StringBuffer().append(number).append(" ").append(generation).append(" R").toString());
+        super(0, number + " " + generation + " R");
         this.number = number;
         this.generation = generation;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/fonts/cmaps/CMapParser.java
Patch:
@@ -217,7 +217,7 @@ private Object parseNextToken( PushbackInputStream is ) throws IOException
             }
             case '[':
             {
-                List list = new ArrayList();
+                List<Object> list = new ArrayList<>();
                 
                 Object nextToken = parseNextToken( is ); 
                 while( nextToken != MARK_END_OF_ARRAY )
@@ -233,7 +233,7 @@ private Object parseNextToken( PushbackInputStream is ) throws IOException
                 int theNextByte = is.read();
                 if( theNextByte == '<' )
                 {
-                    Map result = new HashMap();
+                    Map<String, Object> result = new HashMap<>();
                     //we are reading a dictionary
                     Object key = parseNextToken( is ); 
                     while( key instanceof LiteralName && key != MARK_END_OF_DICTIONARY )

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphenator.java
Patch:
@@ -20,6 +20,7 @@
 import java.io.FileInputStream;
 import java.io.InputStream;
 import java.util.Hashtable;
+import java.util.Map;
 
 import com.lowagie.text.pdf.BaseFont;
 
@@ -32,7 +33,7 @@
 public class Hyphenator {
     
     /** TODO: Don't use statics */
-    private static Hashtable hyphenTrees = new Hashtable();
+    private static Map<String, HyphenationTree> hyphenTrees = new Hashtable<>();
 
     private HyphenationTree hyphenTree = null;
     private int remainCharCount = 2;

File: openpdf/src/main/java/com/lowagie/text/pdf/crypto/AESCipher.java
Patch:
@@ -49,7 +49,7 @@
 package com.lowagie.text.pdf.crypto;
 
 import org.bouncycastle.crypto.BlockCipher;
-import org.bouncycastle.crypto.engines.AESFastEngine;
+import org.bouncycastle.crypto.engines.AESEngine;
 import org.bouncycastle.crypto.modes.CBCBlockCipher;
 import org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;
 import org.bouncycastle.crypto.params.KeyParameter;
@@ -65,7 +65,7 @@ public class AESCipher {
 
   /** Creates a new instance of AESCipher */
   public AESCipher(boolean forEncryption, byte[] key, byte[] iv) {
-    BlockCipher aes = new AESFastEngine();
+    BlockCipher aes = new AESEngine();
     BlockCipher cbc = new CBCBlockCipher(aes);
     bp = new PaddedBufferedBlockCipher(cbc);
     KeyParameter kp = new KeyParameter(key);

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPCellEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Rectangle;
 import com.lowagie.text.pdf.PdfContentByte;
@@ -66,7 +67,7 @@
 public class PdfPCellEventForwarder implements PdfPCellEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPCellEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPTableEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.pdf.PdfContentByte;
 import com.lowagie.text.pdf.PdfPTable;
@@ -65,7 +66,7 @@
 public class PdfPTableEventForwarder implements PdfPTableEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPTableEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPageEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.Paragraph;
@@ -67,7 +68,7 @@
 public class PdfPageEventForwarder implements PdfPageEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPageEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/Element.java
Patch:
@@ -49,8 +49,6 @@
 
 package com.lowagie.text;
 
-import java.util.ArrayList;
-
 /**
  * Interface for a text element.
  * <P>
@@ -346,7 +344,7 @@ public interface Element {
      * @return an <CODE>ArrayList</CODE>
      */
 
-    ArrayList getChunks();
+    java.util.List<Element> getChunks();
 
     /**
      * Gets the content of the text element.

File: openpdf/src/main/java/com/lowagie/text/MarkedObject.java
Patch:
@@ -49,7 +49,6 @@
 
 package com.lowagie.text;
 
-import java.util.ArrayList;
 import java.util.Properties;
 
 /**
@@ -87,7 +86,7 @@ public MarkedObject(Element element) {
      *
      * @return  an <CODE>ArrayList</CODE>
      */
-    public ArrayList getChunks() {
+    public java.util.List<Element> getChunks() {
         return element.getChunks();
     }
 

File: openpdf/src/main/java/com/lowagie/text/MarkedSection.java
Patch:
@@ -85,7 +85,7 @@ public MarkedSection(Section section) {
      * @param    o       an object of type <CODE>Paragraph</CODE>, <CODE>List</CODE> or <CODE>Table</CODE>=
      * @throws    ClassCastException if the object is not a <CODE>Paragraph</CODE>, <CODE>List</CODE> or <CODE>Table</CODE>
      */
-    public void add(int index, Object o) {
+    public void add(int index, Element o) {
         ((Section)element).add(index, o);
     }
         
@@ -97,7 +97,7 @@ public void add(int index, Object o) {
      * @return    a boolean
      * @throws    ClassCastException if the object is not a <CODE>Paragraph</CODE>, <CODE>List</CODE>, <CODE>Table</CODE> or <CODE>Section</CODE>
      */ 
-    public boolean add(Object o) {
+    public boolean add(Element o) {
         return ((Section)element).add(o);
     }
 
@@ -130,7 +130,7 @@ public boolean process(ElementListener listener) {
      * @return    <CODE>true</CODE> if the action succeeded, <CODE>false</CODE> if not.
      * @throws    ClassCastException if one of the objects isn't a <CODE>Paragraph</CODE>, <CODE>List</CODE>, <CODE>Table</CODE>
      */ 
-    public boolean addAll(Collection collection) {
+    public boolean addAll(Collection<? extends Element> collection) {
         return ((Section)element).addAll(collection);
     }
       

File: openpdf/src/main/java/com/lowagie/text/Paragraph.java
Patch:
@@ -224,7 +224,7 @@ public int type() {
      * @param    o   object        the object to add.
      * @return true is adding the object succeeded
      */
-    public boolean add(Object o) {
+    public boolean add(Element o) {
         if (o instanceof List) {
             List list = (List) o;
             list.setIndentationLeft(list.getIndentationLeft() + indentationLeft);

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -283,8 +283,8 @@ public int type() {
    * @return an <CODE>ArrayList</CODE>
    */
   @Override
-  public ArrayList getChunks() {
-    return new ArrayList();
+  public java.util.List<Element> getChunks() {
+    return new ArrayList<>();
   }
 
   /**

File: openpdf/src/main/java/com/lowagie/text/TextElementArray.java
Patch:
@@ -69,5 +69,5 @@ public interface TextElementArray extends Element {
    * @param    o            an object that has to be added
    * @return    <CODE>true</CODE> if the addition succeeded; <CODE>false</CODE> otherwise
    */
-  boolean add(Object o);
+  boolean add(Element o);
 }
\ No newline at end of file

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfIndirectReference.java
Patch:
@@ -88,7 +88,7 @@ protected PdfIndirectReference() {
  */
     
     PdfIndirectReference(int type, int number, int generation) {
-        super(0, new StringBuffer().append(number).append(" ").append(generation).append(" R").toString());
+        super(0, number + " " + generation + " R");
         this.number = number;
         this.generation = generation;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/fonts/cmaps/CMapParser.java
Patch:
@@ -217,7 +217,7 @@ private Object parseNextToken( PushbackInputStream is ) throws IOException
             }
             case '[':
             {
-                List list = new ArrayList();
+                List<Object> list = new ArrayList<>();
                 
                 Object nextToken = parseNextToken( is ); 
                 while( nextToken != MARK_END_OF_ARRAY )
@@ -233,7 +233,7 @@ private Object parseNextToken( PushbackInputStream is ) throws IOException
                 int theNextByte = is.read();
                 if( theNextByte == '<' )
                 {
-                    Map result = new HashMap();
+                    Map<String, Object> result = new HashMap<>();
                     //we are reading a dictionary
                     Object key = parseNextToken( is ); 
                     while( key instanceof LiteralName && key != MARK_END_OF_DICTIONARY )

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphenator.java
Patch:
@@ -20,6 +20,7 @@
 import java.io.FileInputStream;
 import java.io.InputStream;
 import java.util.Hashtable;
+import java.util.Map;
 
 import com.lowagie.text.pdf.BaseFont;
 
@@ -32,7 +33,7 @@
 public class Hyphenator {
     
     /** TODO: Don't use statics */
-    private static Hashtable hyphenTrees = new Hashtable();
+    private static Map<String, HyphenationTree> hyphenTrees = new Hashtable<>();
 
     private HyphenationTree hyphenTree = null;
     private int remainCharCount = 2;

File: openpdf/src/main/java/com/lowagie/text/pdf/crypto/AESCipher.java
Patch:
@@ -49,7 +49,7 @@
 package com.lowagie.text.pdf.crypto;
 
 import org.bouncycastle.crypto.BlockCipher;
-import org.bouncycastle.crypto.engines.AESFastEngine;
+import org.bouncycastle.crypto.engines.AESEngine;
 import org.bouncycastle.crypto.modes.CBCBlockCipher;
 import org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;
 import org.bouncycastle.crypto.params.KeyParameter;
@@ -65,7 +65,7 @@ public class AESCipher {
 
   /** Creates a new instance of AESCipher */
   public AESCipher(boolean forEncryption, byte[] key, byte[] iv) {
-    BlockCipher aes = new AESFastEngine();
+    BlockCipher aes = new AESEngine();
     BlockCipher cbc = new CBCBlockCipher(aes);
     bp = new PaddedBufferedBlockCipher(cbc);
     KeyParameter kp = new KeyParameter(key);

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPCellEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Rectangle;
 import com.lowagie.text.pdf.PdfContentByte;
@@ -66,7 +67,7 @@
 public class PdfPCellEventForwarder implements PdfPCellEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPCellEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPTableEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.pdf.PdfContentByte;
 import com.lowagie.text.pdf.PdfPTable;
@@ -65,7 +66,7 @@
 public class PdfPTableEventForwarder implements PdfPTableEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPTableEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPageEventForwarder.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.Paragraph;
@@ -67,7 +68,7 @@
 public class PdfPageEventForwarder implements PdfPageEvent {
 
     /** ArrayList containing all the PageEvents that have to be executed. */
-    protected ArrayList events = new ArrayList();
+    protected List<PdfPageEvent> events = new ArrayList<>();
     
     /** 
      * Add a page event to the forwarder.

File: openpdf/src/main/java/com/lowagie/text/DocWriter.java
Patch:
@@ -281,6 +281,9 @@ public void setPageCount(int pageN) {
  */
 
     public void close() {
+        if (!open) {
+            return;
+        }
         open = false;
         try {
             os.flush();

File: openpdf/src/main/java/com/lowagie/text/DocWriter.java
Patch:
@@ -281,6 +281,9 @@ public void setPageCount(int pageN) {
  */
 
     public void close() {
+        if (!open) {
+            return;
+        }
         open = false;
         try {
             os.flush();

File: openpdf/src/main/java/com/lowagie/text/pdf/OutputStreamCounter.java
Patch:
@@ -55,7 +55,7 @@
 public class OutputStreamCounter extends OutputStream {
     
     protected OutputStream out;
-    protected int counter = 0;
+    protected long counter = 0;
     
     /** Creates a new instance of OutputStreamCounter */
     public OutputStreamCounter(OutputStream out) {
@@ -160,7 +160,7 @@ public void write(byte[] b, int off, int len) throws IOException {
         out.write(b, off, len);
     }
     
-    public int getCounter() {
+    public long getCounter() {
         return counter;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLiteral.java
Patch:
@@ -58,7 +58,7 @@ public class PdfLiteral extends PdfObject {
     /**
      * Holds value of property position.
      */
-    private int position;
+    private long position;
         
     public PdfLiteral(String text) {
         super(0, text);
@@ -92,7 +92,7 @@ public void toPdf(PdfWriter writer, java.io.OutputStream os) throws java.io.IOEx
      * Getter for property position.
      * @return Value of property position.
      */
-    public int getPosition() {
+    public long getPosition() {
         return this.position;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStream.java
Patch:
@@ -120,9 +120,9 @@ public class PdfStream extends PdfDictionary {
     protected ByteArrayOutputStream streamBytes = null;
     protected InputStream inputStream;
     protected PdfIndirectReference ref;
-    protected int inputStreamLength = -1;
+    protected long inputStreamLength = -1;
     protected PdfWriter writer;
-    protected int rawLength;
+    protected long rawLength;
 
     static final byte[] STARTSTREAM = DocWriter.getISOBytes("stream\n");
     static final byte[] ENDSTREAM = DocWriter.getISOBytes("\nendstream");
@@ -197,7 +197,7 @@ public void writeLength() throws IOException {
      * Gets the raw length of the stream.
      * @return the raw length of the stream
      */
-    public int getRawLength() {
+    public long getRawLength() {
         return rawLength;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/OutputStreamCounter.java
Patch:
@@ -55,7 +55,7 @@
 public class OutputStreamCounter extends OutputStream {
     
     protected OutputStream out;
-    protected int counter = 0;
+    protected long counter = 0;
     
     /** Creates a new instance of OutputStreamCounter */
     public OutputStreamCounter(OutputStream out) {
@@ -160,7 +160,7 @@ public void write(byte[] b, int off, int len) throws IOException {
         out.write(b, off, len);
     }
     
-    public int getCounter() {
+    public long getCounter() {
         return counter;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLiteral.java
Patch:
@@ -58,7 +58,7 @@ public class PdfLiteral extends PdfObject {
     /**
      * Holds value of property position.
      */
-    private int position;
+    private long position;
         
     public PdfLiteral(String text) {
         super(0, text);
@@ -92,7 +92,7 @@ public void toPdf(PdfWriter writer, java.io.OutputStream os) throws java.io.IOEx
      * Getter for property position.
      * @return Value of property position.
      */
-    public int getPosition() {
+    public long getPosition() {
         return this.position;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStream.java
Patch:
@@ -120,9 +120,9 @@ public class PdfStream extends PdfDictionary {
     protected ByteArrayOutputStream streamBytes = null;
     protected InputStream inputStream;
     protected PdfIndirectReference ref;
-    protected int inputStreamLength = -1;
+    protected long inputStreamLength = -1;
     protected PdfWriter writer;
-    protected int rawLength;
+    protected long rawLength;
 
     static final byte[] STARTSTREAM = DocWriter.getISOBytes("stream\n");
     static final byte[] ENDSTREAM = DocWriter.getISOBytes("\nendstream");
@@ -197,7 +197,7 @@ public void writeLength() throws IOException {
      * Gets the raw length of the stream.
      * @return the raw length of the stream
      */
-    public int getRawLength() {
+    public long getRawLength() {
         return rawLength;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/MappedRandomAccessFile.java
Patch:
@@ -100,7 +100,9 @@ public MappedRandomAccessFile(String filename, String mode)
      */
     private void init(FileChannel channel, FileChannel.MapMode mapMode)
     throws IOException {
-        
+
+        if (channel.size() > Integer.MAX_VALUE) throw new PdfException("The PDF file is too large. Max 2GB. Size: " + channel.size());
+
         this.channel = channel;
         this.mappedByteBuffer = channel.map(mapMode, 0L, channel.size());
         mappedByteBuffer.load();

File: openpdf/src/main/java/com/lowagie/text/pdf/internal/PdfVersionImp.java
Patch:
@@ -79,7 +79,7 @@ public class PdfVersionImp implements PdfVersion {
     /** Indicates if we are working in append mode. */
     protected boolean appendmode = false;
     /** The version that was or will be written to the header. */
-    protected char header_version = PdfWriter.VERSION_1_4;
+    protected char header_version = PdfWriter.VERSION_1_5;
     /** The version that will be written to the catalog. */
     protected PdfName catalog_version = null;
     /**

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfTestBase.java
Patch:
@@ -15,7 +15,7 @@ static Document createPdf(String filename) throws DocumentException, IOException
         // create a new file in target dir
         return createPdf(
                 new FileOutputStream(
-                        File.createTempFile("filename", "pdf")));
+                        File.createTempFile(filename, ".pdf")));
     }
 
     static Document createPdf(OutputStream outputStream) throws DocumentException {

File: openpdf/src/main/java/com/lowagie/text/Phrase.java
Patch:
@@ -400,7 +400,7 @@ protected boolean addChunk(Chunk chunk) {
             }
         }
         Chunk newChunk = new Chunk(c, f);
-        newChunk.setAttributes(chunk.getAttributes());
+        newChunk.setChunkAttributes(chunk.getChunkAttributes());
         if (hyphenation != null && newChunk.getHyphenation() == null && !newChunk.isEmpty()) {
             newChunk.setHyphenation(hyphenation);
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAnnotation.java
Patch:
@@ -647,8 +647,8 @@ public void setUsed() {
     used = true;
   }
 
-  public Map<PdfTemplate, Object> getTemplates() {
-    return templates;
+  public HashMap<PdfTemplate, Object> getTemplates() {
+    return (HashMap<PdfTemplate, Object>) templates;
   }
 
   /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfChunk.java
Patch:
@@ -214,7 +214,7 @@ public class PdfChunk {
         }
         font = new PdfFont(baseFont, size);
         // other style possibilities
-        Map<String, Object> attr = chunk.getAttributes();
+        Map<String, Object> attr = chunk.getChunkAttributes();
         if (attr != null) {
             for (Map.Entry<String, Object> entry : attr.entrySet()) {
                 String name = entry.getKey();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopy.java
Patch:
@@ -702,7 +702,7 @@ private void addDocumentField(PdfIndirectReference ref) {
 
     private void expandFields(PdfFormField field, ArrayList allAnnots) {
       allAnnots.add(field);
-      List<PdfFormField> kids = field.getKids();
+      List<PdfFormField> kids = field.getKidFields();
       if (kids != null) {
           for (PdfFormField kid : kids) {
               expandFields(kid, allAnnots);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFormsImp.java
Patch:
@@ -99,7 +99,7 @@ public void copyDocumentFields(PdfReader reader) throws DocumentException {
      */
     void mergeFields() {
         for (AcroFields field : fields) {
-            mergeWithMaster(field.getFields());
+            mergeWithMaster(field.getAllFields());
         }
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfEncryptor.java
Patch:
@@ -106,7 +106,7 @@ public static void encrypt(PdfReader reader, OutputStream os, byte[] userPasswor
     public static void encrypt(PdfReader reader, OutputStream os, byte[] userPassword, byte[] ownerPassword, int permissions, boolean strength128Bits, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(userPassword, ownerPassword, permissions, strength128Bits);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
     
@@ -153,7 +153,7 @@ public static void encrypt(PdfReader reader, OutputStream os, boolean strength,
     public static void encrypt(PdfReader reader, OutputStream os, boolean strength, String userPassword, String ownerPassword, int permissions, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(strength, userPassword, ownerPassword, permissions);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
 
@@ -181,7 +181,7 @@ public static void encrypt(PdfReader reader, OutputStream os, boolean strength,
     public static void encrypt(PdfReader reader, OutputStream os, int type, String userPassword, String ownerPassword, int permissions, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(type, userPassword, ownerPassword, permissions);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -3776,7 +3776,7 @@ private void selectPages(List pagesToKeep) {
         getPageN(p).put(PdfName.PARENT, parent);
       }
       AcroFields af = reader.getAcroFields();
-      boolean removeFields = (af.getFields().size() > 0);
+      boolean removeFields = (af.getAllFields().size() > 0);
       for (int k = 1; k <= psize; ++k) {
         if (!pg.containsKey(k)) {
           if (removeFields)

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -53,6 +53,7 @@
 import java.io.InputStreamReader;
 import java.io.Reader;
 import java.util.HashMap;
+import java.util.Map;
 import java.util.Stack;
 
 /**
@@ -527,7 +528,7 @@ private void doTag() {
     private void processTag(boolean start) {
         if (start) {
             nested++;
-            doc.startElement(tag,attributes);
+            doc.startElement(tag, (Map<String, String>) attributes);
         }
         else {
             nested--;

File: pdf-html/src/main/java/com/lowagie/text/html/HtmlWriter.java
Patch:
@@ -636,7 +636,7 @@ protected void write(Element element, int indent) throws IOException {
                 }
                 
                 if (chunk.isEmpty()) return;
-                Map<String, Object> attributes = chunk.getAttributes();
+                Map<String, Object> attributes = chunk.getChunkAttributes();
                 if (attributes != null && attributes.get(Chunk.NEWPAGE) != null) {
                     return;
                 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/ImageProvider.java
Patch:
@@ -50,8 +50,9 @@
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
-import java.util.Map;
+
+import java.util.HashMap;
 
 public interface ImageProvider {
-    Image getImage(String src, Map<String, String> h, ChainedProperties cprops, DocListener doc);
+    Image getImage(String src, HashMap h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/Img.java
Patch:
@@ -47,7 +47,7 @@
 
 package com.lowagie.text.html.simpleparser;
 
-import java.util.Map;
+import java.util.HashMap;
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
@@ -57,5 +57,5 @@
  * @author  psoares
  */
 public interface Img {
-    boolean process(Image img, Map<String, String> h, ChainedProperties cprops, DocListener doc);
+    boolean process(Image img, HashMap h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Bookmarks2XML.java
Patch:
@@ -87,7 +87,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();
-            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList( reader );
             // save them in XML format
             FileOutputStream bmWriter = new FileOutputStream( (File)getValue("xmlfile") );
             SimpleBookmark.exportToXML(bookmarks, bmWriter, "UTF-8", false);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -104,10 +104,10 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0)
-                        SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                        SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                     master.addAll(bookmarks);
                 }
                 pageOffset += n;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -112,10 +112,10 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0) {
-                        SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                        SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                     }
                     master.addAll(bookmarks);
                 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/HtmlBookmarks.java
Patch:
@@ -151,7 +151,7 @@ public void execute() {
                 Paragraph d = new Paragraph((String) description);
                 document.add(d);
             }
-            List<Map<String, Object>> list = SimpleBookmark.getBookmark(reader);
+            List<Map<String, Object>> list = SimpleBookmark.getBookmarkList(reader);
             if (list == null) {
                 document.add(new Paragraph("This document has no bookmarks."));
             }

File: pdf-toolbox/src/main/java/com/lowagie/tools/ConcatPdf.java
Patch:
@@ -52,6 +52,7 @@
 import java.io.FileOutputStream;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.pdf.PdfCopy;
@@ -88,10 +89,10 @@ public static void main(String[] args) {
                     reader.consolidateNamedDestinations();
                     // we retrieve the total number of pages
                     int n = reader.getNumberOfPages();
-                    List bookmarks = SimpleBookmark.getBookmark(reader);
+                    List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                     if (bookmarks != null) {
                         if (pageOffset != 0)
-                            SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                            SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                         master.addAll(bookmarks);
                     }
                     pageOffset += n;

File: pdf-toolbox/src/test/java/com/lowagie/examples/forms/FormList.java
Patch:
@@ -59,11 +59,11 @@ public static void main(String[] args) {
             // you must turn on multiselect before making multiple selections or they will be discarded.
             fldDef.setOptions( TextField.MULTISELECT );
 
-            ArrayList selections = new ArrayList( 3 );
+            java.util.List<Integer> selections = new ArrayList<>( 3 );
             selections.add(1);
             selections.add(3);
             selections.add(5);
-            fldDef.setChoiceSelections( selections ); // index into chioces
+            fldDef.setChoiceSelections(selections); // index into chioces
             
             PdfFormField field = fldDef.getListField();
             writer.addAnnotation( field );

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/AddWatermarkPageNumbers.java
Patch:
@@ -44,7 +44,7 @@ public static void main(String[] args) {
             // adding some metadata
             Map<String, String> moreInfo = new HashMap<>();
             moreInfo.put("Author", "Bruno Lowagie");
-            stamp.setMoreInfo(moreInfo);
+            stamp.setInfoDictionary(moreInfo);
             // adding content to each page
             int i = 0;
             PdfContentByte under;
@@ -85,4 +85,4 @@ public static void main(String[] args) {
             de.printStackTrace();
         }
     }
-}
\ No newline at end of file
+}

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/Concatenate.java
Patch:
@@ -20,6 +20,7 @@
 import java.io.FileOutputStream;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.pdf.PRAcroForm;
@@ -57,10 +58,10 @@ public static void main(String[] args) {
                     reader.consolidateNamedDestinations();
                     // we retrieve the total number of pages
                     int n = reader.getNumberOfPages();
-                    List bookmarks = SimpleBookmark.getBookmark(reader);
+                    List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                     if (bookmarks != null) {
                         if (pageOffset != 0)
-                            SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                            SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                         master.addAll(bookmarks);
                     }
                     pageOffset += n;

File: openpdf/src/main/java/com/lowagie/text/Phrase.java
Patch:
@@ -400,7 +400,7 @@ protected boolean addChunk(Chunk chunk) {
             }
         }
         Chunk newChunk = new Chunk(c, f);
-        newChunk.setAttributes(chunk.getAttributes());
+        newChunk.setChunkAttributes(chunk.getChunkAttributes());
         if (hyphenation != null && newChunk.getHyphenation() == null && !newChunk.isEmpty()) {
             newChunk.setHyphenation(hyphenation);
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAnnotation.java
Patch:
@@ -647,8 +647,8 @@ public void setUsed() {
     used = true;
   }
 
-  public Map<PdfTemplate, Object> getTemplates() {
-    return templates;
+  public HashMap<PdfTemplate, Object> getTemplates() {
+    return (HashMap<PdfTemplate, Object>) templates;
   }
 
   /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfChunk.java
Patch:
@@ -214,7 +214,7 @@ public class PdfChunk {
         }
         font = new PdfFont(baseFont, size);
         // other style possibilities
-        Map<String, Object> attr = chunk.getAttributes();
+        Map<String, Object> attr = chunk.getChunkAttributes();
         if (attr != null) {
             for (Map.Entry<String, Object> entry : attr.entrySet()) {
                 String name = entry.getKey();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopy.java
Patch:
@@ -702,7 +702,7 @@ private void addDocumentField(PdfIndirectReference ref) {
 
     private void expandFields(PdfFormField field, ArrayList allAnnots) {
       allAnnots.add(field);
-      List<PdfFormField> kids = field.getKids();
+      List<PdfFormField> kids = field.getKidFields();
       if (kids != null) {
           for (PdfFormField kid : kids) {
               expandFields(kid, allAnnots);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFormsImp.java
Patch:
@@ -99,7 +99,7 @@ public void copyDocumentFields(PdfReader reader) throws DocumentException {
      */
     void mergeFields() {
         for (AcroFields field : fields) {
-            mergeWithMaster(field.getFields());
+            mergeWithMaster(field.getAllFields());
         }
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfEncryptor.java
Patch:
@@ -106,7 +106,7 @@ public static void encrypt(PdfReader reader, OutputStream os, byte[] userPasswor
     public static void encrypt(PdfReader reader, OutputStream os, byte[] userPassword, byte[] ownerPassword, int permissions, boolean strength128Bits, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(userPassword, ownerPassword, permissions, strength128Bits);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
     
@@ -153,7 +153,7 @@ public static void encrypt(PdfReader reader, OutputStream os, boolean strength,
     public static void encrypt(PdfReader reader, OutputStream os, boolean strength, String userPassword, String ownerPassword, int permissions, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(strength, userPassword, ownerPassword, permissions);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
 
@@ -181,7 +181,7 @@ public static void encrypt(PdfReader reader, OutputStream os, boolean strength,
     public static void encrypt(PdfReader reader, OutputStream os, int type, String userPassword, String ownerPassword, int permissions, Map<String, String> newInfo) throws DocumentException, IOException {
         PdfStamper stamper = new PdfStamper(reader, os);
         stamper.setEncryption(type, userPassword, ownerPassword, permissions);
-        stamper.setMoreInfo(newInfo);
+        stamper.setInfoDictionary(newInfo);
         stamper.close();
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -3776,7 +3776,7 @@ private void selectPages(List pagesToKeep) {
         getPageN(p).put(PdfName.PARENT, parent);
       }
       AcroFields af = reader.getAcroFields();
-      boolean removeFields = (af.getFields().size() > 0);
+      boolean removeFields = (af.getAllFields().size() > 0);
       for (int k = 1; k <= psize; ++k) {
         if (!pg.containsKey(k)) {
           if (removeFields)

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -53,6 +53,7 @@
 import java.io.InputStreamReader;
 import java.io.Reader;
 import java.util.HashMap;
+import java.util.Map;
 import java.util.Stack;
 
 /**
@@ -527,7 +528,7 @@ private void doTag() {
     private void processTag(boolean start) {
         if (start) {
             nested++;
-            doc.startElement(tag,attributes);
+            doc.startElement(tag, (Map<String, String>) attributes);
         }
         else {
             nested--;

File: pdf-html/src/main/java/com/lowagie/text/html/HtmlWriter.java
Patch:
@@ -636,7 +636,7 @@ protected void write(Element element, int indent) throws IOException {
                 }
                 
                 if (chunk.isEmpty()) return;
-                Map<String, Object> attributes = chunk.getAttributes();
+                Map<String, Object> attributes = chunk.getChunkAttributes();
                 if (attributes != null && attributes.get(Chunk.NEWPAGE) != null) {
                     return;
                 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/ImageProvider.java
Patch:
@@ -50,8 +50,9 @@
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
-import java.util.Map;
+
+import java.util.HashMap;
 
 public interface ImageProvider {
-    Image getImage(String src, Map<String, String> h, ChainedProperties cprops, DocListener doc);
+    Image getImage(String src, HashMap h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/Img.java
Patch:
@@ -47,7 +47,7 @@
 
 package com.lowagie.text.html.simpleparser;
 
-import java.util.Map;
+import java.util.HashMap;
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
@@ -57,5 +57,5 @@
  * @author  psoares
  */
 public interface Img {
-    boolean process(Image img, Map<String, String> h, ChainedProperties cprops, DocListener doc);
+    boolean process(Image img, HashMap h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Bookmarks2XML.java
Patch:
@@ -87,7 +87,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();
-            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList( reader );
             // save them in XML format
             FileOutputStream bmWriter = new FileOutputStream( (File)getValue("xmlfile") );
             SimpleBookmark.exportToXML(bookmarks, bmWriter, "UTF-8", false);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -104,10 +104,10 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0)
-                        SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                        SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                     master.addAll(bookmarks);
                 }
                 pageOffset += n;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -112,10 +112,10 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0) {
-                        SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                        SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                     }
                     master.addAll(bookmarks);
                 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/HtmlBookmarks.java
Patch:
@@ -151,7 +151,7 @@ public void execute() {
                 Paragraph d = new Paragraph((String) description);
                 document.add(d);
             }
-            List<Map<String, Object>> list = SimpleBookmark.getBookmark(reader);
+            List<Map<String, Object>> list = SimpleBookmark.getBookmarkList(reader);
             if (list == null) {
                 document.add(new Paragraph("This document has no bookmarks."));
             }

File: pdf-toolbox/src/main/java/com/lowagie/tools/ConcatPdf.java
Patch:
@@ -52,6 +52,7 @@
 import java.io.FileOutputStream;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.pdf.PdfCopy;
@@ -88,10 +89,10 @@ public static void main(String[] args) {
                     reader.consolidateNamedDestinations();
                     // we retrieve the total number of pages
                     int n = reader.getNumberOfPages();
-                    List bookmarks = SimpleBookmark.getBookmark(reader);
+                    List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                     if (bookmarks != null) {
                         if (pageOffset != 0)
-                            SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                            SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                         master.addAll(bookmarks);
                     }
                     pageOffset += n;

File: pdf-toolbox/src/test/java/com/lowagie/examples/forms/FormList.java
Patch:
@@ -59,11 +59,11 @@ public static void main(String[] args) {
             // you must turn on multiselect before making multiple selections or they will be discarded.
             fldDef.setOptions( TextField.MULTISELECT );
 
-            ArrayList selections = new ArrayList( 3 );
+            java.util.List<Integer> selections = new ArrayList<>( 3 );
             selections.add(1);
             selections.add(3);
             selections.add(5);
-            fldDef.setChoiceSelections( selections ); // index into chioces
+            fldDef.setChoiceSelections(selections); // index into chioces
             
             PdfFormField field = fldDef.getListField();
             writer.addAnnotation( field );

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/AddWatermarkPageNumbers.java
Patch:
@@ -44,7 +44,7 @@ public static void main(String[] args) {
             // adding some metadata
             Map<String, String> moreInfo = new HashMap<>();
             moreInfo.put("Author", "Bruno Lowagie");
-            stamp.setMoreInfo(moreInfo);
+            stamp.setInfoDictionary(moreInfo);
             // adding content to each page
             int i = 0;
             PdfContentByte under;
@@ -85,4 +85,4 @@ public static void main(String[] args) {
             de.printStackTrace();
         }
     }
-}
\ No newline at end of file
+}

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/Concatenate.java
Patch:
@@ -20,6 +20,7 @@
 import java.io.FileOutputStream;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 import com.lowagie.text.Document;
 import com.lowagie.text.pdf.PRAcroForm;
@@ -57,10 +58,10 @@ public static void main(String[] args) {
                     reader.consolidateNamedDestinations();
                     // we retrieve the total number of pages
                     int n = reader.getNumberOfPages();
-                    List bookmarks = SimpleBookmark.getBookmark(reader);
+                    List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmarkList(reader);
                     if (bookmarks != null) {
                         if (pageOffset != 0)
-                            SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);
+                            SimpleBookmark.shiftPageNumbersInRange(bookmarks, pageOffset, null);
                         master.addAll(bookmarks);
                     }
                     pageOffset += n;

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -52,6 +52,7 @@
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Map;
 
 /**
  * An <CODE>Annotation</CODE> is a little note that can be added to a page on
@@ -141,7 +142,7 @@ public class Annotation implements Element {
     protected int annotationtype;
 
     /** This is the title of the <CODE>Annotation</CODE>. */
-    protected HashMap annotationAttributes = new HashMap();
+    protected Map<String, Object> annotationAttributes = new HashMap<>();
 
     /** This is the lower left x-value */
     protected float llx = Float.NaN;
@@ -578,7 +579,7 @@ public String content() {
      * 
      * @return a reference
      */
-    public HashMap attributes() {
+    public Map<String, Object> attributes() {
         return annotationAttributes;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/FieldReader.java
Patch:
@@ -1,14 +1,14 @@
 package com.lowagie.text.pdf;
 
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 /**
  * Represents the basic needs for reading fields.
  */
 public interface FieldReader {
 
-    HashMap<String, String> getFields();
+    Map<String, String> getFields();
 
     String getFieldValue(String fieldKey);
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAcroForm.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf;
 
 import java.util.HashMap;
+import java.util.Map;
 
 
 import com.lowagie.text.Rectangle;
@@ -93,7 +94,7 @@ public void setNeedAppearances(boolean value) {
      * @param ft
      */
 
-    public void addFieldTemplates(HashMap ft) {
+    public void addFieldTemplates(Map<PdfTemplate, Object> ft) {
         fieldTemplates.putAll(ft);
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamper.java
Patch:
@@ -84,7 +84,7 @@ public class PdfStamper
      * The writer
      */    
     protected PdfStamperImp stamper;
-    private HashMap moreInfo;
+    private Map<String, String> moreInfo;
     private boolean hasSignature;
     private PdfSignatureAppearance sigApp;
 
@@ -134,7 +134,7 @@ public PdfStamper(PdfReader reader, OutputStream os, char pdfVersion, boolean ap
      * @return the map or <CODE>null</CODE>
      *
      */
-    public HashMap getMoreInfo() {
+    public Map<String, String> getMoreInfo() {
         return this.moreInfo;
     }
 
@@ -144,7 +144,7 @@ public HashMap getMoreInfo() {
      * @param moreInfo additional entries to the info dictionary
      *
      */
-    public void setMoreInfo(HashMap moreInfo) {
+    public void setMoreInfo(Map<String, String> moreInfo) {
         this.moreInfo = moreInfo;
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleNamedDestination.java
Patch:
@@ -71,7 +71,7 @@
 public final class SimpleNamedDestination implements SimpleXMLDocHandler {
     
     private HashMap xmlNames;
-    private HashMap xmlLast;
+    private Map<String, String> xmlLast;
 
     private SimpleNamedDestination() {
     }
@@ -310,7 +310,7 @@ public void endElement(String tag) {
     public void startDocument() {
     }
 
-    public void startElement(String tag, HashMap h) {
+    public void startElement(String tag, Map<String, String> h) {
         if (xmlNames == null) {
             if (tag.equals("Destination")) {
                 xmlNames = new HashMap();

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLDocHandler.java
Patch:
@@ -46,7 +46,7 @@
  */
 package com.lowagie.text.xml.simpleparser;
 
-import java.util.HashMap;
+import java.util.Map;
 
 /**
  * The handler for the events fired by <CODE>SimpleXMLParser</CODE>.
@@ -58,7 +58,7 @@ public interface SimpleXMLDocHandler {
      * @param tag the tag name
      * @param h the tag's attributes
      */
-    void startElement(String tag, HashMap h);
+    void startElement(String tag, Map<String, String> h);
     /**
      * Called when an end tag is found.
      * @param tag the tag name

File: openpdf/src/test/java/com/lowagie/text/pdf/AcroFieldsTest.java
Patch:
@@ -3,7 +3,7 @@
 import java.io.ByteArrayOutputStream;
 import java.io.InputStream;
 import java.security.Security;
-import java.util.ArrayList;
+import java.util.List;
 
 import org.bouncycastle.jce.provider.BouncyCastleProvider;
 import org.junit.jupiter.api.Assertions;
@@ -29,7 +29,7 @@ public void testGetSignatures() throws Exception {
         PdfWriter writer = PdfWriter.getInstance(document, out);
 
         AcroFields fields = new AcroFields(reader, writer);
-        ArrayList<String> names = fields.getSignatureNames();
+        List<String> names = fields.getSignatureNames();
         Assertions.assertEquals(1, names.size());
 
         for (String signName : names) {

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/FactoryProperties.java
Patch:
@@ -338,8 +338,8 @@ public static void insertStyle(HashMap h) {
      * @param cprops
      * @since 2.1.3
      */
-    public static void insertStyle(final Map<String, String> h, final ChainedProperties cprops) {
-        final String style = h.get("style");
+    public static void insertStyle(Map<String, String> h, ChainedProperties cprops) {
+        String style = h.get("style");
         if (style == null)
             return;
         Properties prop = Markup.parseAttributes(style);

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/ImageProvider.java
Patch:
@@ -50,8 +50,8 @@
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
-import java.util.HashMap;
+import java.util.Map;
 
 public interface ImageProvider {
-    Image getImage(String src, HashMap h, ChainedProperties cprops, DocListener doc);
+    Image getImage(String src, Map<String, String> h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/Img.java
Patch:
@@ -47,7 +47,7 @@
 
 package com.lowagie.text.html.simpleparser;
 
-import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
@@ -57,5 +57,5 @@
  * @author  psoares
  */
 public interface Img {
-    boolean process(Image img, HashMap h, ChainedProperties cprops, DocListener doc);
+    boolean process(Image img, Map<String, String> h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Bookmarks2XML.java
Patch:
@@ -37,8 +37,8 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 import javax.swing.JOptionPane;
@@ -87,7 +87,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();
-            List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
             // save them in XML format
             FileOutputStream bmWriter = new FileOutputStream( (File)getValue("xmlfile") );
             SimpleBookmark.exportToXML(bookmarks, bmWriter, "UTF-8", false);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -38,8 +38,8 @@
 import java.io.File;
 import java.io.FileOutputStream;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 
@@ -95,7 +95,7 @@ public void execute() {
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination file");
             File pdf_file = (File)getValue("destfile");
             int pageOffset = 0;
-            List<HashMap<String, Object>> master = new ArrayList<>();
+            List<Map<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy  writer = null;
             for (int i = 0; i < 2; i++) {
@@ -104,7 +104,7 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0)
                         SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -40,6 +40,7 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 
@@ -103,7 +104,7 @@ public void execute() {
             }
             File pdf_file = (File) getValue("destfile");
             int pageOffset = 0;
-            ArrayList<HashMap<String, Object>> master = new ArrayList<>();
+            List<Map<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy writer = null;
             for (int i = 0; i < files.length; i++) {
@@ -112,7 +113,7 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0) {
                         SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);

File: pdf-toolbox/src/main/java/com/lowagie/tools/EncryptPdf.java
Patch:
@@ -50,6 +50,7 @@
 
 import java.io.FileOutputStream;
 import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.pdf.PdfEncryptor;
 import com.lowagie.text.pdf.PdfReader;
@@ -114,7 +115,7 @@ public static void main (String[] args) {
             System.out.println("Reading " + args[INPUT_FILE]);
             PdfReader reader = new PdfReader(args[INPUT_FILE]);
             System.out.println("Writing " + args[OUTPUT_FILE]);
-            HashMap moreInfo = new HashMap();
+            Map<String, String> moreInfo = new HashMap<>();
             for (int k = MOREINFO; k < args.length - 1; k += 2)
                 moreInfo.put(args[k], args[k + 1]);
             PdfEncryptor.encrypt(reader, new FileOutputStream(args[OUTPUT_FILE]),

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/AddWatermarkPageNumbers.java
Patch:
@@ -15,6 +15,7 @@
 
 import java.io.FileOutputStream;
 import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.Element;
 import com.lowagie.text.Image;
@@ -41,7 +42,7 @@ public static void main(String[] args) {
             // we create a stamper that will copy the document to a new file
             PdfStamper stamp = new PdfStamper(reader, new FileOutputStream("watermark_pagenumbers.pdf"));
             // adding some metadata
-            HashMap moreInfo = new HashMap();
+            Map<String, String> moreInfo = new HashMap<>();
             moreInfo.put("Author", "Bruno Lowagie");
             stamp.setMoreInfo(moreInfo);
             // adding content to each page

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -52,6 +52,7 @@
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Map;
 
 /**
  * An <CODE>Annotation</CODE> is a little note that can be added to a page on
@@ -141,7 +142,7 @@ public class Annotation implements Element {
     protected int annotationtype;
 
     /** This is the title of the <CODE>Annotation</CODE>. */
-    protected HashMap annotationAttributes = new HashMap();
+    protected Map<String, Object> annotationAttributes = new HashMap<>();
 
     /** This is the lower left x-value */
     protected float llx = Float.NaN;
@@ -578,7 +579,7 @@ public String content() {
      * 
      * @return a reference
      */
-    public HashMap attributes() {
+    public Map<String, Object> attributes() {
         return annotationAttributes;
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/FieldReader.java
Patch:
@@ -1,14 +1,14 @@
 package com.lowagie.text.pdf;
 
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 /**
  * Represents the basic needs for reading fields.
  */
 public interface FieldReader {
 
-    HashMap<String, String> getFields();
+    Map<String, String> getFields();
 
     String getFieldValue(String fieldKey);
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAcroForm.java
Patch:
@@ -50,6 +50,7 @@
 package com.lowagie.text.pdf;
 
 import java.util.HashMap;
+import java.util.Map;
 
 
 import com.lowagie.text.Rectangle;
@@ -93,7 +94,7 @@ public void setNeedAppearances(boolean value) {
      * @param ft
      */
 
-    public void addFieldTemplates(HashMap ft) {
+    public void addFieldTemplates(Map<PdfTemplate, Object> ft) {
         fieldTemplates.putAll(ft);
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfStamper.java
Patch:
@@ -84,7 +84,7 @@ public class PdfStamper
      * The writer
      */    
     protected PdfStamperImp stamper;
-    private HashMap moreInfo;
+    private Map<String, String> moreInfo;
     private boolean hasSignature;
     private PdfSignatureAppearance sigApp;
 
@@ -134,7 +134,7 @@ public PdfStamper(PdfReader reader, OutputStream os, char pdfVersion, boolean ap
      * @return the map or <CODE>null</CODE>
      *
      */
-    public HashMap getMoreInfo() {
+    public Map<String, String> getMoreInfo() {
         return this.moreInfo;
     }
 
@@ -144,7 +144,7 @@ public HashMap getMoreInfo() {
      * @param moreInfo additional entries to the info dictionary
      *
      */
-    public void setMoreInfo(HashMap moreInfo) {
+    public void setMoreInfo(Map<String, String> moreInfo) {
         this.moreInfo = moreInfo;
     }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/SimpleNamedDestination.java
Patch:
@@ -71,7 +71,7 @@
 public final class SimpleNamedDestination implements SimpleXMLDocHandler {
     
     private HashMap xmlNames;
-    private HashMap xmlLast;
+    private Map<String, String> xmlLast;
 
     private SimpleNamedDestination() {
     }
@@ -310,7 +310,7 @@ public void endElement(String tag) {
     public void startDocument() {
     }
 
-    public void startElement(String tag, HashMap h) {
+    public void startElement(String tag, Map<String, String> h) {
         if (xmlNames == null) {
             if (tag.equals("Destination")) {
                 xmlNames = new HashMap();

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLDocHandler.java
Patch:
@@ -46,7 +46,7 @@
  */
 package com.lowagie.text.xml.simpleparser;
 
-import java.util.HashMap;
+import java.util.Map;
 
 /**
  * The handler for the events fired by <CODE>SimpleXMLParser</CODE>.
@@ -58,7 +58,7 @@ public interface SimpleXMLDocHandler {
      * @param tag the tag name
      * @param h the tag's attributes
      */
-    void startElement(String tag, HashMap h);
+    void startElement(String tag, Map<String, String> h);
     /**
      * Called when an end tag is found.
      * @param tag the tag name

File: openpdf/src/test/java/com/lowagie/text/pdf/AcroFieldsTest.java
Patch:
@@ -3,7 +3,7 @@
 import java.io.ByteArrayOutputStream;
 import java.io.InputStream;
 import java.security.Security;
-import java.util.ArrayList;
+import java.util.List;
 
 import org.bouncycastle.jce.provider.BouncyCastleProvider;
 import org.junit.jupiter.api.Assertions;
@@ -29,7 +29,7 @@ public void testGetSignatures() throws Exception {
         PdfWriter writer = PdfWriter.getInstance(document, out);
 
         AcroFields fields = new AcroFields(reader, writer);
-        ArrayList<String> names = fields.getSignatureNames();
+        List<String> names = fields.getSignatureNames();
         Assertions.assertEquals(1, names.size());
 
         for (String signName : names) {

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/FactoryProperties.java
Patch:
@@ -338,8 +338,8 @@ public static void insertStyle(HashMap h) {
      * @param cprops
      * @since 2.1.3
      */
-    public static void insertStyle(final Map<String, String> h, final ChainedProperties cprops) {
-        final String style = h.get("style");
+    public static void insertStyle(Map<String, String> h, ChainedProperties cprops) {
+        String style = h.get("style");
         if (style == null)
             return;
         Properties prop = Markup.parseAttributes(style);

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/ImageProvider.java
Patch:
@@ -50,8 +50,8 @@
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
-import java.util.HashMap;
+import java.util.Map;
 
 public interface ImageProvider {
-    Image getImage(String src, HashMap h, ChainedProperties cprops, DocListener doc);
+    Image getImage(String src, Map<String, String> h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-html/src/main/java/com/lowagie/text/html/simpleparser/Img.java
Patch:
@@ -47,7 +47,7 @@
 
 package com.lowagie.text.html.simpleparser;
 
-import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.DocListener;
 import com.lowagie.text.Image;
@@ -57,5 +57,5 @@
  * @author  psoares
  */
 public interface Img {
-    boolean process(Image img, HashMap h, ChainedProperties cprops, DocListener doc);
+    boolean process(Image img, Map<String, String> h, ChainedProperties cprops, DocListener doc);
 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Bookmarks2XML.java
Patch:
@@ -37,8 +37,8 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 import javax.swing.JOptionPane;
@@ -87,7 +87,7 @@ public void execute() {
             if (getValue("pdffile") == null) throw new InstantiationException("You need to choose a source PDF file");
             PdfReader reader = new PdfReader(((File)getValue("pdffile")).getAbsolutePath());
             reader.consolidateNamedDestinations();
-            List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
+            List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark( reader );
             // save them in XML format
             FileOutputStream bmWriter = new FileOutputStream( (File)getValue("xmlfile") );
             SimpleBookmark.exportToXML(bookmarks, bmWriter, "UTF-8", false);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -38,8 +38,8 @@
 import java.io.File;
 import java.io.FileOutputStream;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 
@@ -95,7 +95,7 @@ public void execute() {
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination file");
             File pdf_file = (File)getValue("destfile");
             int pageOffset = 0;
-            List<HashMap<String, Object>> master = new ArrayList<>();
+            List<Map<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy  writer = null;
             for (int i = 0; i < 2; i++) {
@@ -104,7 +104,7 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0)
                         SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -40,6 +40,7 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.JInternalFrame;
 
@@ -103,7 +104,7 @@ public void execute() {
             }
             File pdf_file = (File) getValue("destfile");
             int pageOffset = 0;
-            ArrayList<HashMap<String, Object>> master = new ArrayList<>();
+            List<Map<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy writer = null;
             for (int i = 0; i < files.length; i++) {
@@ -112,7 +113,7 @@ public void execute() {
                 reader.consolidateNamedDestinations();
                 // we retrieve the total number of pages
                 int n = reader.getNumberOfPages();
-                List<HashMap<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
+                List<Map<String, Object>> bookmarks = SimpleBookmark.getBookmark(reader);
                 if (bookmarks != null) {
                     if (pageOffset != 0) {
                         SimpleBookmark.shiftPageNumbers(bookmarks, pageOffset, null);

File: pdf-toolbox/src/main/java/com/lowagie/tools/EncryptPdf.java
Patch:
@@ -50,6 +50,7 @@
 
 import java.io.FileOutputStream;
 import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.pdf.PdfEncryptor;
 import com.lowagie.text.pdf.PdfReader;
@@ -114,7 +115,7 @@ public static void main (String[] args) {
             System.out.println("Reading " + args[INPUT_FILE]);
             PdfReader reader = new PdfReader(args[INPUT_FILE]);
             System.out.println("Writing " + args[OUTPUT_FILE]);
-            HashMap moreInfo = new HashMap();
+            Map<String, String> moreInfo = new HashMap<>();
             for (int k = MOREINFO; k < args.length - 1; k += 2)
                 moreInfo.put(args[k], args[k + 1]);
             PdfEncryptor.encrypt(reader, new FileOutputStream(args[OUTPUT_FILE]),

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/copystamp/AddWatermarkPageNumbers.java
Patch:
@@ -15,6 +15,7 @@
 
 import java.io.FileOutputStream;
 import java.util.HashMap;
+import java.util.Map;
 
 import com.lowagie.text.Element;
 import com.lowagie.text.Image;
@@ -41,7 +42,7 @@ public static void main(String[] args) {
             // we create a stamper that will copy the document to a new file
             PdfStamper stamp = new PdfStamper(reader, new FileOutputStream("watermark_pagenumbers.pdf"));
             // adding some metadata
-            HashMap moreInfo = new HashMap();
+            Map<String, String> moreInfo = new HashMap<>();
             moreInfo.put("Author", "Bruno Lowagie");
             stamp.setMoreInfo(moreInfo);
             // adding content to each page

File: openpdf/src/main/java/com/lowagie/text/Anchor.java
Patch:
@@ -219,13 +219,13 @@ public boolean process(ElementListener listener) {
      * @return    an <CODE>ArrayList</CODE>
      */
     public ArrayList getChunks() {
-        ArrayList tmp = new ArrayList();
+        ArrayList<Chunk> tmp = new ArrayList<>();
         Chunk chunk;
-        Iterator i = iterator();
+        Iterator<Chunk> i = iterator();
         boolean localDestination = (reference != null && reference.startsWith("#"));
         boolean notGotoOK = true;
         while (i.hasNext()) {
-            chunk = (Chunk) i.next();
+            chunk = i.next();
             if (name != null && notGotoOK && !chunk.isEmpty()) {
                 chunk.setLocalDestination(name);
                 notGotoOK = false;

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -338,7 +338,7 @@ public Annotation(float llx, float lly, float urx, float ury, String file,
         this(llx, lly, urx, ury);
         annotationtype = FILE_PAGE;
         annotationAttributes.put(FILE, file);
-        annotationAttributes.put(PAGE, new Integer(page));
+        annotationAttributes.put(PAGE, page);
     }
 
     /**
@@ -358,7 +358,7 @@ public Annotation(float llx, float lly, float urx, float ury, String file,
     public Annotation(float llx, float lly, float urx, float ury, int named) {
         this(llx, lly, urx, ury);
         annotationtype = NAMED_DEST;
-        annotationAttributes.put(NAMED, new Integer(named));
+        annotationAttributes.put(NAMED, named);
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/Chapter.java
Patch:
@@ -86,7 +86,7 @@ public class Chapter extends Section {
     public Chapter(int number) {
         super(null, 1);
         numbers = new ArrayList();
-        numbers.add(new Integer(number));
+        numbers.add(number);
         triggerNewPage = true;
     }
     
@@ -100,7 +100,7 @@ public Chapter(int number) {
     public Chapter(Paragraph title, int number) {
         super(title, 1);
         numbers = new ArrayList();
-        numbers.add(new Integer(number));
+        numbers.add(number);
         triggerNewPage = true;
     }
     

File: openpdf/src/main/java/com/lowagie/text/Image.java
Patch:
@@ -1313,7 +1313,7 @@ public float[] matrix() {
     /** Creates a new serial id. */
     static protected synchronized Long getSerialId() {
         ++serialId;
-        return new Long(serialId);
+        return serialId;
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/MarkedSection.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text;
 
 import java.util.Collection;
-import java.util.Iterator;
 
 /**
  * Wrapper that allows to add properties to a Chapter/Section object.
@@ -112,8 +111,8 @@ public boolean add(Object o) {
     public boolean process(ElementListener listener) {
         try {
             Element element;
-            for (Iterator i = ((Section)this.element).iterator(); i.hasNext(); ) {
-                element = (Element)i.next();
+            for (Object o : ((Section) this.element)) {
+                element = (Element) o;
                 listener.add(element);
             }
             return true;

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -959,7 +959,7 @@ public void softCloneNonPositionParameters(Rectangle rect) {
    */
   @Override
   public String toString() {
-    StringBuffer buf = new StringBuffer("Rectangle: ");
+    StringBuilder buf = new StringBuilder("Rectangle: ");
     buf.append(getWidth());
     buf.append('x');
     buf.append(getHeight());

File: openpdf/src/main/java/com/lowagie/text/RectangleReadOnly.java
Patch:
@@ -346,7 +346,7 @@ public void softCloneNonPositionParameters(Rectangle rect) {
      * @see java.lang.Object#toString()
      */
     public String toString() {
-        StringBuffer buf = new StringBuffer("RectangleReadOnly: ");
+        StringBuilder buf = new StringBuilder("RectangleReadOnly: ");
         buf.append(getWidth());
         buf.append('x');
         buf.append(getHeight());

File: openpdf/src/main/java/com/lowagie/text/Utilities.java
Patch:
@@ -117,7 +117,7 @@ public static boolean checkTrueOrFalse(Properties attributes, String key) {
      * @return the unescaped value
      */    
     public static String unEscapeURL(String src) {
-        StringBuffer bf = new StringBuffer();
+        StringBuilder bf = new StringBuilder();
         char[] s = src.toCharArray();
         for (int k = 0; k < s.length; ++k) {
             char c = s[k];

File: openpdf/src/main/java/com/lowagie/text/html/Markup.java
Patch:
@@ -478,7 +478,7 @@ public static Properties parseAttributes(String string) {
      */
     public static String removeComment(String string, String startComment,
             String endComment) {
-        StringBuffer result = new StringBuffer();
+        StringBuilder result = new StringBuilder();
         int pos = 0;
         int end = endComment.length();
         int start = string.indexOf(startComment, pos);

File: openpdf/src/main/java/com/lowagie/text/pdf/ArabicLigaturizer.java
Patch:
@@ -503,8 +503,8 @@ else if (join == 1) {
 
     static int arabic_shape(char[] src, int srcoffset, int srclength, char[] dest, int destoffset, int destlength, int level) {
         char[] str = new char[srclength];
-        for (int k = srclength + srcoffset - 1; k >= srcoffset; --k)
-            str[k - srcoffset] = src[k];
+        if (srclength + srcoffset - srcoffset >= 0)
+            System.arraycopy(src, srcoffset, str, srcoffset - srcoffset, srclength + srcoffset - srcoffset);
         StringBuffer string = new StringBuffer(srclength);
         shape(str, string, level);
         if ((level & (ar_composedtashkeel | ar_lig)) != 0)

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeDatamatrix.java
Patch:
@@ -985,7 +985,7 @@ private Placement() {
         }
         
         static short[] doPlacement(int nrow, int ncol) {
-            Integer key = new Integer(nrow * 1000 + ncol);
+            Integer key = nrow * 1000 + ncol;
             short[] pc = (short[])cache.get(key);
             if (pc != null)
                 return pc;

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -726,8 +726,7 @@ public java.awt.Image createAwtImage(Color foreground, Color background) {
         int ptr = 0;
         int height = (int)barHeight;
         int[] pix = new int[width * height];
-        for (int k = 0; k < bars.length; ++k) {
-            int w = bars[k];
+        for (int w : bars) {
             int c = g;
             if (print)
                 c = f;

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePDF417.java
Patch:
@@ -707,7 +707,7 @@ private void macroCodes() {
     }
     
     private void append(int in, int len) {
-        StringBuffer sb = new StringBuffer(len+1);
+        StringBuilder sb = new StringBuilder(len+1);
         sb.append(in);
         for(int i = sb.length(); i < len; i++) {
             sb.insert(0, "0");
@@ -747,7 +747,7 @@ protected void dumpList() {
                 if (c[j] == '\r')
                     c[j] = '\n';
             }
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             sb.append(v.type);
             sb.append(c);
             System.out.println(sb.toString());

File: openpdf/src/main/java/com/lowagie/text/pdf/BidiLine.java
Patch:
@@ -376,8 +376,8 @@ public PdfLine processLine(float leftX, float width, int alignment, int runDirec
             lastValidChunk = ck;
             if (ck.isTab()) {
                 Object[] tab = (Object[])ck.getAttribute(Chunk.TAB);
-                float tabPosition = ((Float)tab[1]).floatValue();
-                boolean newLine = ((Boolean)tab[2]).booleanValue();
+                float tabPosition = (Float) tab[1];
+                boolean newLine = (Boolean) tab[2];
                 if (newLine && tabPosition < originalWidth - width) {
                     return new PdfLine(0, originalWidth, width, alignment, true, createArrayOfPdfChunks(oldCurrentChar, currentChar - 1), isRTL);
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/ByteBuffer.java
Patch:
@@ -390,7 +390,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 int x = 100000;
                 int v = (int) (d * x);
                 
-                StringBuffer res = new StringBuffer();
+                StringBuilder res = new StringBuilder();
                 if (negative) res.append('-');
                 res.append("0.");
                 
@@ -505,7 +505,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 }
                 return null;
             } else {
-                StringBuffer res = new StringBuffer();
+                StringBuilder res = new StringBuilder();
                 if (negative) res.append('-');
                 if (v >= 1000000) {
                     res.append( chars[(v / 1000000)] );
@@ -533,7 +533,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 return res.toString();
             }
         } else {
-            StringBuffer res = new StringBuffer();
+            StringBuilder res = new StringBuilder();
             if (negative) res.append('-');
             d += 0.5;
             long v = (long) d;

File: openpdf/src/main/java/com/lowagie/text/pdf/DefaultFontMapper.java
Patch:
@@ -284,9 +284,9 @@ public void insertNames(Object[] allNames, String path) {
     }
     BaseFontParameters p = new BaseFontParameters(path);
     mapper.put(main, p);
-    for (int k = 0; k < names.length; ++k) {
-      aliases.put(names[k][3], main);
-    }
+      for (String[] name : names) {
+          aliases.put(name[3], main);
+      }
     aliases.put((String) allNames[0], main);
   }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/FontSelector.java
Patch:
@@ -92,7 +92,7 @@ public Phrase process(String text) {
             throw new IndexOutOfBoundsException(MessageLocalization.getComposedMessage("no.font.is.defined"));
         char[] cc = text.toCharArray();
         int len = cc.length;
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         Font font = null;
         int lastidx = -1;
         Phrase ret = new Phrase();

File: openpdf/src/main/java/com/lowagie/text/pdf/PRTokeniser.java
Patch:
@@ -148,7 +148,7 @@ public RandomAccessFileOrArray getFile() {
     }
     
     public String readString(int size) throws IOException {
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
         int ch;
         while ((size--) > 0) {
             ch = file.read();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFormsImp.java
Patch:
@@ -98,8 +98,8 @@ public void copyDocumentFields(PdfReader reader) throws DocumentException {
      * of PdfCopyFields.
      */
     void mergeFields() {
-        for (int k = 0; k < fields.size(); ++k) {
-            HashMap fd = ((AcroFields)fields.get(k)).getFields();
+        for (Object field : fields) {
+            HashMap fd = ((AcroFields) field).getFields();
             mergeWithMaster(fd);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDate.java
Patch:
@@ -84,7 +84,7 @@ public class PdfDate extends PdfString {
     
     public PdfDate(Calendar d) {
         super();
-        StringBuffer date = new StringBuffer("D:");
+        StringBuilder date = new StringBuilder("D:");
         date.append(setLength(d.get(Calendar.YEAR), 4));
         date.append(setLength(d.get(Calendar.MONTH) + 1, 2));
         date.append(setLength(d.get(Calendar.DATE), 2));
@@ -128,7 +128,7 @@ public PdfDate() {
  */
     
     private String setLength(int i, int length) { // 1.3-1.4 problem fixed by Finn Bock
-        StringBuffer tmp = new StringBuffer();
+        StringBuilder tmp = new StringBuilder();
         tmp.append(i);
         while (tmp.length() < length) {
             tmp.insert(0, "0");
@@ -153,7 +153,7 @@ public String getW3CDate() {
     public static String getW3CDate(String d) {
         if (d.startsWith("D:"))
             d = d.substring(2);
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         if (d.length() < 4)
             return "0000";
         sb.append(d, 0, 4); //year

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDictionary.java
Patch:
@@ -111,7 +111,7 @@ public class PdfDictionary extends PdfObject {
      */
     public PdfDictionary() {
         super(DICTIONARY);
-        hashMap = new HashMap<PdfName, PdfObject>();
+        hashMap = new HashMap<>();
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfEncryptor.java
Patch:
@@ -215,7 +215,7 @@ public static void encrypt(PdfReader reader, OutputStream os, int type, String u
      * @return a String that explains the meaning of the permissions value
      */
     public static String getPermissionsVerbose(int permissions) {
-        StringBuffer buf = new StringBuffer("Allowed:");
+        StringBuilder buf = new StringBuilder("Allowed:");
         if ((PdfWriter.ALLOW_PRINTING & permissions) == PdfWriter.ALLOW_PRINTING) buf.append(" Printing");
         if ((PdfWriter.ALLOW_MODIFY_CONTENTS & permissions) == PdfWriter.ALLOW_MODIFY_CONTENTS) buf.append(" Modify contents");
         if ((PdfWriter.ALLOW_COPY & permissions) == PdfWriter.ALLOW_COPY) buf.append(" Copy");

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfFunction.java
Patch:
@@ -122,8 +122,7 @@ public static PdfFunction type3(PdfWriter writer, float[] domain, float[] range,
         if (range != null)
             func.dictionary.put(PdfName.RANGE, new PdfArray(range));
         PdfArray array = new PdfArray();
-        for (int k = 0; k < functions.length; ++k)
-            array.add(functions[k].getReference());
+        for (PdfFunction function : functions) array.add(function.getReference());
         func.dictionary.put(PdfName.FUNCTIONS, array);
         func.dictionary.put(PdfName.BOUNDS, new PdfArray(bounds));
         func.dictionary.put(PdfName.ENCODE, new PdfArray(encode));

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfImage.java
Patch:
@@ -109,8 +109,7 @@ public PdfImage(Image image, String name, PdfIndirectReference maskRef) throws B
                 int[] transparency = image.getTransparency();
                 if (transparency != null && !image.isMask() && maskRef == null) {
                     String s = "[";
-                    for (int k = 0; k < transparency.length; ++k)
-                        s += transparency[k] + " ";
+                    for (int i : transparency) s += i + " ";
                     s += "]";
                     put(PdfName.MASK, new PdfLiteral(s));
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLister.java
Patch:
@@ -102,8 +102,8 @@ public void listDict(PdfDictionary dictionary)
         out.println("<<");
         PdfName key;
         PdfObject value;
-        for (Iterator i = dictionary.getKeys().iterator(); i.hasNext(); ) {
-            key = (PdfName) i.next();
+        for (PdfName pdfName : dictionary.getKeys()) {
+            key = pdfName;
             value = dictionary.get(key);
             out.print(key.toString());
             out.print(' ');

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPSXObject.java
Patch:
@@ -46,8 +46,6 @@
  */
 package com.lowagie.text.pdf;
 
-import java.io.IOException;
-
 /**
  * Implements the PostScript XObject.
  */

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSigGenericPKCS.java
Patch:
@@ -101,8 +101,8 @@ public void setSignInfo(PrivateKey privKey, Certificate[] certChain, CRL[] crlLi
             pkcs.setExternalDigest(externalDigest, externalRSAdata, digestEncryptionAlgorithm);
             if (PdfName.ADBE_X509_RSA_SHA1.equals(get(PdfName.SUBFILTER))) {
                 ByteArrayOutputStream bout = new ByteArrayOutputStream();
-                for (int k = 0; k < certChain.length; ++k) {
-                    bout.write(certChain[k].getEncoded());
+                for (Certificate certificate : certChain) {
+                    bout.write(certificate.getEncoded());
                 }
                 bout.close();
                 setCert(bout.toByteArray());

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSignature.java
Patch:
@@ -62,8 +62,7 @@ public PdfSignature(PdfName filter, PdfName subFilter) {
     
     public void setByteRange(int[] range) {
         PdfArray array = new PdfArray();
-        for (int k = 0; k < range.length; ++k)
-            array.add(new PdfNumber(range[k]));
+        for (int i : range) array.add(new PdfNumber(i));
         put(PdfName.BYTERANGE, array);
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfString.java
Patch:
@@ -152,8 +152,7 @@ public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
             ByteBuffer buf = new ByteBuffer();
             buf.append('<');
             int len = b.length;
-            for (int k = 0; k < len; ++k)
-                buf.appendHex(b[k]);
+            for (byte b1 : b) buf.appendHex(b1);
             buf.append('>');
             os.write(buf.toByteArray());
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/wmf/MetaDo.java
Patch:
@@ -52,7 +52,6 @@
 
 import java.awt.Color;
 import java.awt.Point;
-import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -405,8 +404,8 @@ public void readAll() throws IOException, DocumentException{
                     cx = pt[0];
                     cy = pt[1];
                     cb.moveTo(cx, cy);
-                    for (int k = 0; k < ar.size(); ++k) {
-                        pt = ar.get(k);
+                    for (float[] floats : ar) {
+                        pt = floats;
                         cb.curveTo(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);
                     }
                     cb.lineTo(cx, cy);

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPCellEventForwarder.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
-import java.util.Iterator;
 
 import com.lowagie.text.Rectangle;
 import com.lowagie.text.pdf.PdfContentByte;
@@ -82,8 +81,8 @@ public void addCellEvent(PdfPCellEvent event) {
      */
     public void cellLayout(PdfPCell cell, Rectangle position, PdfContentByte[] canvases) {
         PdfPCellEvent event;
-        for (Iterator i = events.iterator(); i.hasNext(); ) {
-            event = (PdfPCellEvent)i.next();
+        for (Object event1 : events) {
+            event = (PdfPCellEvent) event1;
             event.cellLayout(cell, position, canvases);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPTableEventForwarder.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
-import java.util.Iterator;
 
 import com.lowagie.text.pdf.PdfContentByte;
 import com.lowagie.text.pdf.PdfPTable;
@@ -81,8 +80,8 @@ public void addTableEvent(PdfPTableEvent event) {
      */
     public void tableLayout(PdfPTable table, float[][] widths, float[] heights, int headerRows, int rowStart, PdfContentByte[] canvases) {
         PdfPTableEvent event;
-        for (Iterator i = events.iterator(); i.hasNext(); ) {
-            event = (PdfPTableEvent)i.next();
+        for (Object event1 : events) {
+            event = (PdfPTableEvent) event1;
             event.tableLayout(table, widths, heights, headerRows, rowStart, canvases);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphen.java
Patch:
@@ -56,7 +56,7 @@ public String toString() {
                 && preBreak.equals("-")) {
             return "-";
                 }
-        StringBuffer res = new StringBuffer("{");
+        StringBuilder res = new StringBuilder("{");
         res.append(preBreak);
         res.append("}{");
         res.append(postBreak);

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphenation.java
Patch:
@@ -70,7 +70,7 @@ public int[] getHyphenationPoints() {
     }
 
     public String toString() {
-        StringBuffer str = new StringBuffer();
+        StringBuilder str = new StringBuilder();
         int start = 0;
         for (int i = 0; i < len; i++) {
             str.append(word, start, hyphenPoints[i]).append('-');

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/TernaryTree.java
Patch:
@@ -619,7 +619,7 @@ private int run() {
             }
             // The current node should be a data node and
             // the key should be in the key stack (at least partially)
-            StringBuffer buf = new StringBuffer(ks.toString());
+            StringBuilder buf = new StringBuilder(ks.toString());
             if (sc[cur] == 0xFFFF) {
                 int p = lo[cur];
                 while (kv.get(p) != 0) {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/Matrix.java
Patch:
@@ -199,8 +199,7 @@ public int hashCode() {
         //return Arrays.hashCode(vals); // JDK 5 code, replaced with the following
         
         int result = 1;
-        for (int i = 0; i < vals.length; i++)
-            result = 31 * result + Float.floatToIntBits(vals[i]);
+        for (float val : vals) result = 31 * result + Float.floatToIntBits(val);
 
         return result;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ParsedText.java
Patch:
@@ -50,7 +50,6 @@
 import com.lowagie.text.pdf.PdfReader;
 import com.lowagie.text.pdf.PdfString;
 
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.List;
@@ -277,7 +276,7 @@ private static float getStringWidth(String string, GraphicsState gs) {
      * @return list of Word objects.
      */
     public List<Word> getAsPartialWords() {
-        ArrayList<Word> result = new ArrayList<Word>();
+        ArrayList<Word> result = new ArrayList<>();
         CMapAwareDocumentFont font = gs.font;
         char[] chars = pdfText.getOriginalChars();
         boolean[] hasSpace = new boolean[chars.length];

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfTextExtractor.java
Patch:
@@ -245,7 +245,7 @@ public void processContent(byte[] contentBytes, PdfDictionary resources,
         try {
             PdfContentParser ps = new PdfContentParser(new PRTokeniser(
                     contentBytes));
-            ArrayList<PdfObject> operands = new ArrayList<PdfObject>();
+            ArrayList<PdfObject> operands = new ArrayList<>();
             while (ps.parse(operands).size() > 0) {
                 PdfLiteral operator = (PdfLiteral) operands
                         .get(operands.size() - 1);

File: openpdf/src/main/java/com/lowagie/text/xml/XmlDomWriter.java
Patch:
@@ -141,8 +141,7 @@ public void write(Node node) {
                 fOut.print('<');
                 fOut.print(node.getNodeName());
                 Attr[] attrs = sortAttributes(node.getAttributes());
-                for (int i = 0; i < attrs.length; i++) {
-                    Attr attr = attrs[i];
+                for (Attr attr : attrs) {
                     fOut.print(' ');
                     fOut.print(attr.getNodeName());
                     fOut.print("=\"");

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -461,7 +461,7 @@ else if(character == quoteCharacter) {
      */
     private int restoreState() {
         if(!stack.empty())
-            return ((Integer)stack.pop()).intValue();
+            return (Integer) stack.pop();
         else
             return UNKNOWN;
     }
@@ -470,7 +470,7 @@ private int restoreState() {
      * @param    s    a state to add to the stack
      */
     private void saveState(int s) {
-        stack.push(new Integer(s));
+        stack.push(s);
     }
     /**
      * Flushes the text that is currently in the buffer.
@@ -566,7 +566,7 @@ public static void parse(SimpleXMLDocHandler doc, InputStream in) throws IOExcep
 
         String decl = null;
         if (encoding.equals("UTF-8")) {
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             int c;
             while ((c = in.read()) != -1) {
                 if (c == '>')

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/XmpBasicSchema.java
Patch:
@@ -50,6 +50,8 @@
 package com.lowagie.text.xml.xmp;
 
 
+import java.util.Arrays;
+
 /**
  * An implementation of an XmpSchema.
  */
@@ -122,9 +124,7 @@ public void addMetaDataDate(String date) {
      */
     public void addIdentifiers(String[] id) {
         XmpArray array = new XmpArray(XmpArray.UNORDERED);
-        for (int i = 0; i < id.length; i++) {
-            array.add(id[i]);
-        }
+        array.addAll(Arrays.asList(id));
         setProperty(IDENTIFIER, array);
     }
 

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/XmpSchema.java
Patch:
@@ -144,7 +144,7 @@ public Object setProperty(String key, LangAlt value) {
      * @return an escaped string
      */
     public static String escape(String content) {
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
         for (int i = 0; i < content.length(); i++) {
             switch(content.charAt(i)) {
             case '<':

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfSignatureAppearanceTest.java
Patch:
@@ -47,7 +47,7 @@ void invisibleExternalSignature() throws DocumentException, IOException, NoSuchA
                 sap.setReason("Test");
 
                 HashMap exc = new HashMap();
-                exc.put(PdfName.CONTENTS, new Integer(10));
+                exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
                 byte[] result = Utilities.toByteArray(sap.getRangeStream());
@@ -100,7 +100,7 @@ void visibleExternalSignature() throws DocumentException, IOException, NoSuchAlg
                 sap.setLayer2Text("Hello world");
 
                 HashMap exc = new HashMap();
-                exc.put(PdfName.CONTENTS, new Integer(10));
+                exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
                 byte[] result = Utilities.toByteArray(sap.getRangeStream());

File: pdf-html/src/main/java/com/lowagie/text/html/HtmlEncoder.java
Patch:
@@ -137,7 +137,7 @@ private HtmlEncoder () { }
     public static String encode(String string) {
         int n = string.length();
         char character;
-        StringBuffer buffer = new StringBuffer();
+        StringBuilder buffer = new StringBuilder();
         // loop over all the characters of the String.
         for (int i = 0; i < n; i++) {
             character = string.charAt(i);
@@ -161,7 +161,7 @@ public static String encode(String string) {
  */
     
     public static String encode(Color color) {
-        StringBuffer buffer = new StringBuffer("#");
+        StringBuilder buffer = new StringBuilder("#");
         if (color.getRed() < 16) {
             buffer.append('0');
         }

File: pdf-swing/src/main/java/com/lowagie/rups/model/IndirectObjectFactory.java
Patch:
@@ -41,7 +41,7 @@ public class IndirectObjectFactory {
     /** The highest xref number. */
     protected int n;
     /** A list of all the indirect objects in a PDF file. */
-    protected ArrayList<PdfObject> objects = new ArrayList<PdfObject>();
+    protected ArrayList<PdfObject> objects = new ArrayList<>();
     /** Mapping between the index in the objects list and the reference number in the xref table.  */
     protected IntHashtable idxToRef = new IntHashtable();
     /** Mapping between the reference number in the xref table and the index in the objects list .  */

File: pdf-swing/src/main/java/com/lowagie/rups/model/TreeNodeFactory.java
Patch:
@@ -41,7 +41,7 @@ public class TreeNodeFactory {
     /** The factory that can produce all indirect objects. */
     protected IndirectObjectFactory objects;
     /** An list containing the nodes of every indirect object. */
-    protected ArrayList<PdfObjectTreeNode> nodes = new ArrayList<PdfObjectTreeNode>();
+    protected ArrayList<PdfObjectTreeNode> nodes = new ArrayList<>();
     
     /**
      * Creates a factory that can produce TreeNode objects
@@ -100,8 +100,8 @@ public void expandNode(PdfObjectTreeNode node) {
         case PdfObject.DICTIONARY:
         case PdfObject.STREAM:
             PdfDictionary dict = (PdfDictionary)object;
-            for (Iterator it = dict.getKeys().iterator(); it.hasNext(); ) {
-                leaf = PdfObjectTreeNode.getInstance(dict, (PdfName)it.next());
+            for (PdfName pdfName : dict.getKeys()) {
+                leaf = PdfObjectTreeNode.getInstance(dict, pdfName);
                 addNodes(node, leaf);
                 expandNode(leaf);
             }

File: pdf-swing/src/main/java/com/lowagie/rups/view/Console.java
Patch:
@@ -189,8 +189,8 @@ public void run() {
                     printStream.print(snippet);
                     textArea.setCaretPosition(textArea.getDocument().
                                               getLength());
-                } catch (BadLocationException ex) {
-                } catch (IOException e) {
+                } catch (BadLocationException | IOException ignored) {
+                    // ignored
                 }
             }
         }

File: pdf-swing/src/main/java/com/lowagie/rups/view/RupsMenuBar.java
Patch:
@@ -65,7 +65,7 @@ public class RupsMenuBar extends JMenuBar implements Observer {
      */
     public RupsMenuBar(Observable observable) {
         this.observable = observable;
-        items = new HashMap<String, JMenuItem>();
+        items = new HashMap<>();
         fileChooserAction = new FileChooserAction(observable, "Open", PdfFilter.INSTANCE, false);
         MessageAction message = new MessageAction();
         JMenu file = new JMenu(FILE_MENU);

File: pdf-swing/src/main/java/com/lowagie/rups/view/icons/IconFetcher.java
Patch:
@@ -31,7 +31,7 @@
 public class IconFetcher {
     
     /** Cache with icons. */
-    protected static HashMap<String, Icon> cache = new HashMap<String, Icon>();
+    protected static HashMap<String, Icon> cache = new HashMap<>();
     
     /**
      * Gets an Icon with a specific name.

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/FormTree.java
Patch:
@@ -114,9 +114,7 @@ public void update(Observable observable, Object obj) {
                     xfaFile = new XfaFile(node);
                     xfaTree.load(xfaFile);
                     xfaTextArea.load(xfaFile);
-                } catch (IOException e) {
-                    e.printStackTrace();
-                } catch (DocumentException e) {
+                } catch (IOException | DocumentException e) {
                     e.printStackTrace();
                 }
             }

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/PagesTable.java
Patch:
@@ -48,7 +48,7 @@
 public class PagesTable extends JTable implements JTableAutoModelInterface, Observer {
 
     /** A list with page nodes. */
-    protected ArrayList<PdfPageTreeNode> list = new ArrayList<PdfPageTreeNode>();
+    protected ArrayList<PdfPageTreeNode> list = new ArrayList<>();
     /** Nodes in the FormTree correspond with nodes in the main PdfTree. */
     protected PdfReaderController controller;
     /***/
@@ -68,7 +68,7 @@ public PagesTable(PdfReaderController controller, PageSelectionListener listener
      */
     public void update(Observable observable, Object obj) {
         if (obj == null) {
-            list = new ArrayList<PdfPageTreeNode>();
+            list = new ArrayList<>();
             repaint();
             return;
         }

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/treenodes/PdfObjectTreeNode.java
Patch:
@@ -253,7 +253,7 @@ public static String getCaption(PdfObject object) {
      * @return    a caption for the object corresponding with the key in the dictionary.
      */
     public static String getDictionaryEntryCaption(PdfDictionary dict, PdfName key) {
-        StringBuffer buf = new StringBuffer(key.toString());
+        StringBuilder buf = new StringBuilder(key.toString());
         buf.append(": ");
         PdfObject valObj = dict.get(key);
         if (valObj.isIndirect()) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/AbstractArgument.java
Patch:
@@ -91,7 +91,7 @@ public void setName(String name) {
      * @return a String
      */
     public String getUsage() {
-        StringBuffer buf = new StringBuffer("  ");
+        StringBuilder buf = new StringBuilder("  ");
         buf.append(name);
         buf.append(" -  ");
         buf.append(description);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/OptionArgument.java
Patch:
@@ -122,7 +122,7 @@ public void setValue(Object value) {
     }
 
 
-    private TreeMap<String, Entry> options = new TreeMap<String, Entry>();
+    private TreeMap<String, Entry> options = new TreeMap<>();
 
     /**
      * Constructs an OptionArgument.
@@ -166,7 +166,7 @@ public Object getArgument() throws InstantiationException {
      * @return String
      */
     public String getUsage() {
-        StringBuffer buf = new StringBuffer(super.getUsage());
+        StringBuilder buf = new StringBuilder(super.getUsage());
         buf.append("    possible options:\n");
         for (Entry entry: options.values()) {
             buf.append("    - ");

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -95,7 +95,7 @@ public void execute() {
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination file");
             File pdf_file = (File)getValue("destfile");
             int pageOffset = 0;
-            List<HashMap<String, Object>> master = new ArrayList<HashMap<String, Object>>();
+            List<HashMap<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy  writer = null;
             for (int i = 0; i < 2; i++) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -103,7 +103,7 @@ public void execute() {
             }
             File pdf_file = (File) getValue("destfile");
             int pageOffset = 0;
-            ArrayList<HashMap<String, Object>> master = new ArrayList<HashMap<String, Object>>();
+            ArrayList<HashMap<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy writer = null;
             for (int i = 0; i < files.length; i++) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ExtractAttachments.java
Patch:
@@ -113,9 +113,9 @@ public void execute() {
                 PdfDictionary embFiles = names.getAsDict(new PdfName("EmbeddedFiles"));
                 if (embFiles != null) {
                     HashMap<String, PdfObject> embMap = PdfNameTree.readTree(embFiles);
-                    for (Iterator<PdfObject> i = embMap.values().iterator(); i.hasNext();) {
+                    for (PdfObject pdfObject : embMap.values()) {
                         PdfDictionary filespec = (PdfDictionary) PdfReader
-                                .getPdfObject(i.next());
+                                .getPdfObject(pdfObject);
                         unpackFile(reader, filespec, outPath);
                     }
                 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ImageXRefViewer.java
Patch:
@@ -251,8 +251,7 @@ public Object construct() {
                                 }
                             }
                         }
-                    } catch (InstantiationException ex) {
-                    } catch (IOException ex) {
+                    } catch (InstantiationException | IOException ex) {
                     }
                     internalFrame.setCursor(Cursor.getDefaultCursor());
                     return null;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Normalize.java
Patch:
@@ -205,7 +205,7 @@ public void execute() {
 
       PdfWriter writer = stp.getWriter();
 
-      ArrayList<PdfDictionary> pageInh = new ArrayList<PdfDictionary>();
+      ArrayList<PdfDictionary> pageInh = new ArrayList<>();
       PdfDictionary catalog = reader.getCatalog();
       PdfDictionary rootPages = catalog.getAsDict(PdfName.PAGES);
       iteratePages(rootPages, reader, pageInh, 0, writer);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ReversePages.java
Patch:
@@ -105,9 +105,9 @@ public void execute() {
       System.out.println("The original file had " + reader.getNumberOfPages() +
                          " pages.");
       int pages = reader.getNumberOfPages();
-      ArrayList<Integer> li = new ArrayList<Integer>();
+      ArrayList<Integer> li = new ArrayList<>();
       for (int i = pages; i > 0; i--) {
-        li.add(Integer.valueOf(i));
+        li.add(i);
       }
       reader.selectPages(li);
 

File: pdf-toolbox/src/main/java/com/lowagie/tools/BuildTutorial.java
Patch:
@@ -131,8 +131,8 @@ public static void action(File source, File destination, File xsl_examples, File
             File current;
             File[] xmlFiles = source.listFiles();
             if (xmlFiles != null) {
-                for (int i = 0; i < xmlFiles.length; i++) {
-                    current = xmlFiles[i];
+                for (File xmlFile : xmlFiles) {
+                    current = xmlFile;
                     action(current, dest, xsl_examples, xsl_site);
                 }
             }
@@ -183,7 +183,7 @@ public static void convert(File infile, File xslfile, File outfile) {
             // passing 2 parameters
             String branch = outfile.getParentFile().getCanonicalPath().substring(root.length());
             branch = branch.replace(File.separatorChar, '/');
-            StringBuffer path = new StringBuffer();
+            StringBuilder path = new StringBuilder();
             for (int i = 0; i < branch.length(); i++) {
                 if (branch.charAt(i) == '/') path.append("/pdf-core/src/test");
             }

File: pdf-toolbox/src/main/java/com/lowagie/tools/Executable.java
Patch:
@@ -296,7 +296,7 @@ else if (isWindows())
      */
     public static boolean isWindows() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("windows") != -1 || os.indexOf("nt") != -1;
+        return os.contains("windows") || os.contains("nt");
     }
 
     /**
@@ -316,7 +316,7 @@ public static boolean isWindows9X() {
      */
     public static boolean isMac() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("mac") != -1;
+        return os.contains("mac");
     }
 
     /**
@@ -326,6 +326,6 @@ public static boolean isMac() {
      */
     public static boolean isLinux() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("linux") != -1;
+        return os.contains("linux");
     }
 }

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics/GState.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             cb.fill();
             
             cb.sanityCheck();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics/State.java
Patch:
@@ -71,10 +71,8 @@ public static void main(String[] args) {
             cb.fill();
             
             cb.sanityCheck();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics2D/ArabicText.java
Patch:
@@ -13,6 +13,7 @@
  */
 package com.lowagie.examples.directcontent.graphics2D;
 
+import java.awt.*;
 import java.io.FileOutputStream;
 
 import com.lowagie.text.Document;
@@ -40,7 +41,7 @@ public static void main(String[] args) {
             document.open();
             // step 4
             String text1 = "This text has \u0634\u0627\u062f\u062c\u0645\u0647\u0648\u0631 123,456 \u0645\u0646 (Arabic)";
-            java.awt.Font font = new java.awt.Font("arial", 0, 18);
+            java.awt.Font font = new java.awt.Font("arial", Font.PLAIN, 18);
             PdfContentByte cb = writer.getDirectContent();
             java.awt.Graphics2D g2 = cb.createGraphicsShapes(PageSize.A4.getWidth(), PageSize.A4.getHeight());
             g2.setFont(font);

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/FontFactoryType1Fonts.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             for (int i = 0; i < 14; i++) {
                     document.add(new Paragraph("quick brown fox jumps over the lazy dog", fonts[i]));
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/FullFontNames.java
Patch:
@@ -36,9 +36,9 @@ public static void main(String[] args) {
             out.write("\r\n\r\n");
             String[][] names = bf.getFullFontName();
             out.write("\n\nListing the full font name:\n\n");
-            for (int k = 0; k < names.length; ++k) {
-                if (names[k][0].equals("3") && names[k][1].equals("1")) // Microsoft encoding
-                    out.write(names[k][3] + "\r\n");
+            for (String[] name : names) {
+                if (name[0].equals("3") && name[1].equals("1")) // Microsoft encoding
+                    out.write(name[3] + "\r\n");
             }
             out.flush();
             out.close();

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/StandardType1Fonts.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             for (int i = 0; i < 14; i++) {
                 document.add(new Paragraph("quick brown fox jumps over the lazy dog", fonts[i]));
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/getting/UsingFontFactory.java
Patch:
@@ -82,10 +82,8 @@ public static void main(String[] args) {
                 }
                 c--;
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/ExtraStyles.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Demonstrates how to underline and strike through text.
@@ -64,7 +65,7 @@ void testUnderlineAndStrikeThrough() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
 
     }

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/FontColor.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             cb.setFontAndSize(bf, 12);
             cb.showTextAligned(PdfContentByte.ALIGN_CENTER, "Grass is green", 250, 700, 0);
             cb.endText();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/FontStylePropagation.java
Patch:
@@ -76,10 +76,8 @@ public static void main(String[] args) {
             myParagraph.add(new Paragraph("Hello 3bis! ", new Font(Font.TIMES_ROMAN, 8, Font.BOLD)));
             myParagraph.add(new Paragraph("This is the end of the sentence.", new Font(Font.TIMES_ROMAN, 8, Font.ITALIC)));
             document.add(myParagraph);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloEncrypted.java
Patch:
@@ -53,10 +53,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloSystemOut.java
Patch:
@@ -54,10 +54,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorld.java
Patch:
@@ -52,10 +52,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorldMeta.java
Patch:
@@ -57,10 +57,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorldPdf.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Generates a simple 'Hello World' PDF.
@@ -67,7 +68,7 @@ void testHelloWorld() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
 
     }

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/HelloWorldServlet.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.IOException;
 import java.util.Date;
 
-import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/OutSimplePdf.java
Patch:
@@ -15,9 +15,7 @@
 package com.lowagie.examples.general.webapp;
 
 import java.io.ByteArrayOutputStream;
-import java.io.IOException;
 
-import javax.servlet.ServletException;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/SilentPrintServlet.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 
-import javax.servlet.ServletException;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/HelloHtml.java
Patch:
@@ -52,10 +52,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/HelloWorldMeta.java
Patch:
@@ -61,10 +61,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/JavaScriptAction.java
Patch:
@@ -51,7 +51,7 @@ public static void main(String[] args) {
                     "JavaScriptAction.html"));
             // step 3: we add Javascript as Metadata and we open the document
             
-            StringBuffer javaScriptSection = new StringBuffer();
+            StringBuilder javaScriptSection = new StringBuilder();
             javaScriptSection.append("\t\tfunction load() {\n");
             javaScriptSection.append("\t\t  alert('Page has been loaded.');\n");
             javaScriptSection.append("\t\t}\n");

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Chunks.java
Patch:
@@ -64,10 +64,8 @@ public static void main(String[] args) {
             document.add(fox);
             document.add(jumps);
             document.add(dog);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/FancyLists.java
Patch:
@@ -134,10 +134,8 @@ public static void main(String[] args) {
             }
             document.add(z3);
 
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Lists.java
Patch:
@@ -119,10 +119,8 @@ public static void main(String[] args) {
             sublist.add("Galapagos");
             list.add(sublist);
             document.add(list);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/NegativeLeading.java
Patch:
@@ -56,10 +56,8 @@ public static void main(String[] args) {
                     .add(new Phrase(
                             -16,
                             "Hello, this is a very long phrase to show you the somewhat odd effect of a negative leading. You can write from bottom to top. This is not fully supported. It's something between a feature and a bug."));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/ParagraphAttributes.java
Patch:
@@ -86,10 +86,8 @@ public static void main(String[] args) {
                 document.add(p[i]);
             }
             document.newPage();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Paragraphs.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             Paragraph p3 = new Paragraph("This is my third paragraph.",
                     FontFactory.getFont(FontFactory.HELVETICA, 12));
             document.add(p3);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Phrases.java
Patch:
@@ -101,10 +101,8 @@ public static void main(String[] args) {
             document.add(phrase5);
             document.add(phrase6);
             document.add(phrase7);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/SymbolSubstitution.java
Patch:
@@ -55,10 +55,8 @@ public static void main(String[] args) {
                     for (int i = 913; i < 970; i++) {
                         document.add(Phrase.getInstance(" " + i + ": " + (char) i));
                     }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/anchors/AHref.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
             Anchor anchor2 = new Anchor("please jump to a local destination", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, new Color(0, 0, 255)));
             anchor2.setReference("#top");
             document.add(anchor2);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/Layers.java
Patch:
@@ -98,10 +98,8 @@ public static void main(String[] args) {
             PdfDictionary d = new PdfDictionary();
             d.put(PdfName.ORDER, order);
             p.put(PdfName.D, d);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/OutlineActions.java
Patch:
@@ -80,10 +80,8 @@ public static void main(String[] args) {
             Paragraph p = new Paragraph("This paragraph contains a ");
             p.add(new Chunk("local destination").setLocalDestination("test"));
             remote.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/PageLabels.java
Patch:
@@ -59,10 +59,8 @@ public static void main(String[] args) {
             pageLabels.addPageLabel(5, PdfPageLabels.DECIMAL_ARABIC_NUMERALS);
             pageLabels.addPageLabel(8, PdfPageLabels.DECIMAL_ARABIC_NUMERALS, "A-", 8);
             writer.setPageLabels(pageLabels);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Background.java
Patch:
@@ -79,10 +79,8 @@ public static void main(String[] args) {
             p.add(c);
             p.add(" example");
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/ChunkColor.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             cb.setFontAndSize(bf, 12);
             cb.showTextAligned(PdfContentByte.ALIGN_CENTER, "Grass is green", 250, 700, 0);
             cb.endText();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/EndOfLine.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
                 p.add(chunk);
             }
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Generic.java
Patch:
@@ -96,10 +96,8 @@ public static void main(String[] args) {
             p.add("; the other an ");
             p.add(ellipse);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Hyphenation.java
Patch:
@@ -78,10 +78,8 @@ public static void main(String[] args) {
             p = new Paragraph(ck);
             p.setAlignment(Paragraph.ALIGN_JUSTIFIED);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Lines.java
Patch:
@@ -79,10 +79,8 @@ public static void main(String[] args) {
             c.setUnderline(new Color(0x00, 0xFF, 0x00), 5.0f, 0.0f, 0.0f, -0.5f, PdfContentByte.LINE_CAP_PROJECTING_SQUARE);
             c.setUnderline(new Color(0x00, 0x00, 0xFF), 0.0f, 0.2f, 15.0f, 0.0f, PdfContentByte.LINE_CAP_BUTT);
             document.add(c);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Rendering.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             bold.setTextRenderMode(PdfContentByte.TEXT_RENDER_MODE_FILL_STROKE, 0.5f, new Color(0x00, 0x00, 0x00));
             document.add(bold);
             
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Skew.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             italic.setSkew(0f, 12f);
             document.add(italic);
             
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/SplitChar.java
Patch:
@@ -70,10 +70,8 @@ public static void main(String[] args) {
             chunk.setSplitCharacter(new SplitChar());
             p = new Paragraph(24, chunk);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/SubSupScript.java
Patch:
@@ -64,10 +64,8 @@ public static void main(String[] args) {
                 document.add(c);
                 textrise -= 2.0f;
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Width.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
             c.setHorizontalScaling(0.5f);
             document.add(c);
             document.add(c);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/columns/MultiColumnIrregular.java
Patch:
@@ -102,9 +102,7 @@ public static void main(String[] args) {
                 mct.nextColumn();
             } while (mct.isOverflow());
             document.close();
-        } catch (DocumentException e) {
-            e.printStackTrace();
-        } catch (FileNotFoundException e) {
+        } catch (DocumentException | FileNotFoundException e) {
             e.printStackTrace();
         }
 

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/images/AwtImage.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Using the java.awt.Image object.
@@ -71,7 +72,7 @@ void testAwtImage() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
     }
 }

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/DefaultCell.java
Patch:
@@ -69,10 +69,8 @@ public static void main(String[] args) {
             table.getDefaultCell().setBackgroundColor(new Color(0xC0, 0xC0, 0xC0));
             table.addCell("cell test2");
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/ImageCell.java
Patch:
@@ -57,10 +57,8 @@ public static void main(String[] args) {
             table.addCell("This three");
             table.addCell(new PdfPCell(image, false));
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/MyFirstTable.java
Patch:
@@ -69,10 +69,8 @@ public static void main(String[] args) {
             cell.setBackgroundColor(new Color(0xC0, 0xC0, 0xC0));
             table.addCell(cell);
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: openpdf/src/main/java/com/lowagie/text/Anchor.java
Patch:
@@ -219,13 +219,13 @@ public boolean process(ElementListener listener) {
      * @return    an <CODE>ArrayList</CODE>
      */
     public ArrayList getChunks() {
-        ArrayList tmp = new ArrayList();
+        ArrayList<Chunk> tmp = new ArrayList<>();
         Chunk chunk;
-        Iterator i = iterator();
+        Iterator<Chunk> i = iterator();
         boolean localDestination = (reference != null && reference.startsWith("#"));
         boolean notGotoOK = true;
         while (i.hasNext()) {
-            chunk = (Chunk) i.next();
+            chunk = i.next();
             if (name != null && notGotoOK && !chunk.isEmpty()) {
                 chunk.setLocalDestination(name);
                 notGotoOK = false;

File: openpdf/src/main/java/com/lowagie/text/Annotation.java
Patch:
@@ -338,7 +338,7 @@ public Annotation(float llx, float lly, float urx, float ury, String file,
         this(llx, lly, urx, ury);
         annotationtype = FILE_PAGE;
         annotationAttributes.put(FILE, file);
-        annotationAttributes.put(PAGE, new Integer(page));
+        annotationAttributes.put(PAGE, page);
     }
 
     /**
@@ -358,7 +358,7 @@ public Annotation(float llx, float lly, float urx, float ury, String file,
     public Annotation(float llx, float lly, float urx, float ury, int named) {
         this(llx, lly, urx, ury);
         annotationtype = NAMED_DEST;
-        annotationAttributes.put(NAMED, new Integer(named));
+        annotationAttributes.put(NAMED, named);
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/Chapter.java
Patch:
@@ -86,7 +86,7 @@ public class Chapter extends Section {
     public Chapter(int number) {
         super(null, 1);
         numbers = new ArrayList();
-        numbers.add(new Integer(number));
+        numbers.add(number);
         triggerNewPage = true;
     }
     
@@ -100,7 +100,7 @@ public Chapter(int number) {
     public Chapter(Paragraph title, int number) {
         super(title, 1);
         numbers = new ArrayList();
-        numbers.add(new Integer(number));
+        numbers.add(number);
         triggerNewPage = true;
     }
     

File: openpdf/src/main/java/com/lowagie/text/Image.java
Patch:
@@ -1313,7 +1313,7 @@ public float[] matrix() {
     /** Creates a new serial id. */
     static protected synchronized Long getSerialId() {
         ++serialId;
-        return new Long(serialId);
+        return serialId;
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/MarkedSection.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text;
 
 import java.util.Collection;
-import java.util.Iterator;
 
 /**
  * Wrapper that allows to add properties to a Chapter/Section object.
@@ -112,8 +111,8 @@ public boolean add(Object o) {
     public boolean process(ElementListener listener) {
         try {
             Element element;
-            for (Iterator i = ((Section)this.element).iterator(); i.hasNext(); ) {
-                element = (Element)i.next();
+            for (Object o : ((Section) this.element)) {
+                element = (Element) o;
                 listener.add(element);
             }
             return true;

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -959,7 +959,7 @@ public void softCloneNonPositionParameters(Rectangle rect) {
    */
   @Override
   public String toString() {
-    StringBuffer buf = new StringBuffer("Rectangle: ");
+    StringBuilder buf = new StringBuilder("Rectangle: ");
     buf.append(getWidth());
     buf.append('x');
     buf.append(getHeight());

File: openpdf/src/main/java/com/lowagie/text/RectangleReadOnly.java
Patch:
@@ -346,7 +346,7 @@ public void softCloneNonPositionParameters(Rectangle rect) {
      * @see java.lang.Object#toString()
      */
     public String toString() {
-        StringBuffer buf = new StringBuffer("RectangleReadOnly: ");
+        StringBuilder buf = new StringBuilder("RectangleReadOnly: ");
         buf.append(getWidth());
         buf.append('x');
         buf.append(getHeight());

File: openpdf/src/main/java/com/lowagie/text/Utilities.java
Patch:
@@ -117,7 +117,7 @@ public static boolean checkTrueOrFalse(Properties attributes, String key) {
      * @return the unescaped value
      */    
     public static String unEscapeURL(String src) {
-        StringBuffer bf = new StringBuffer();
+        StringBuilder bf = new StringBuilder();
         char[] s = src.toCharArray();
         for (int k = 0; k < s.length; ++k) {
             char c = s[k];

File: openpdf/src/main/java/com/lowagie/text/html/Markup.java
Patch:
@@ -478,7 +478,7 @@ public static Properties parseAttributes(String string) {
      */
     public static String removeComment(String string, String startComment,
             String endComment) {
-        StringBuffer result = new StringBuffer();
+        StringBuilder result = new StringBuilder();
         int pos = 0;
         int end = endComment.length();
         int start = string.indexOf(startComment, pos);

File: openpdf/src/main/java/com/lowagie/text/pdf/ArabicLigaturizer.java
Patch:
@@ -503,8 +503,8 @@ else if (join == 1) {
 
     static int arabic_shape(char[] src, int srcoffset, int srclength, char[] dest, int destoffset, int destlength, int level) {
         char[] str = new char[srclength];
-        for (int k = srclength + srcoffset - 1; k >= srcoffset; --k)
-            str[k - srcoffset] = src[k];
+        if (srclength + srcoffset - srcoffset >= 0)
+            System.arraycopy(src, srcoffset, str, srcoffset - srcoffset, srclength + srcoffset - srcoffset);
         StringBuffer string = new StringBuffer(srclength);
         shape(str, string, level);
         if ((level & (ar_composedtashkeel | ar_lig)) != 0)

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeDatamatrix.java
Patch:
@@ -985,7 +985,7 @@ private Placement() {
         }
         
         static short[] doPlacement(int nrow, int ncol) {
-            Integer key = new Integer(nrow * 1000 + ncol);
+            Integer key = nrow * 1000 + ncol;
             short[] pc = (short[])cache.get(key);
             if (pc != null)
                 return pc;

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodeEAN.java
Patch:
@@ -726,8 +726,7 @@ public java.awt.Image createAwtImage(Color foreground, Color background) {
         int ptr = 0;
         int height = (int)barHeight;
         int[] pix = new int[width * height];
-        for (int k = 0; k < bars.length; ++k) {
-            int w = bars[k];
+        for (int w : bars) {
             int c = g;
             if (print)
                 c = f;

File: openpdf/src/main/java/com/lowagie/text/pdf/BarcodePDF417.java
Patch:
@@ -707,7 +707,7 @@ private void macroCodes() {
     }
     
     private void append(int in, int len) {
-        StringBuffer sb = new StringBuffer(len+1);
+        StringBuilder sb = new StringBuilder(len+1);
         sb.append(in);
         for(int i = sb.length(); i < len; i++) {
             sb.insert(0, "0");
@@ -747,7 +747,7 @@ protected void dumpList() {
                 if (c[j] == '\r')
                     c[j] = '\n';
             }
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             sb.append(v.type);
             sb.append(c);
             System.out.println(sb.toString());

File: openpdf/src/main/java/com/lowagie/text/pdf/BidiLine.java
Patch:
@@ -376,8 +376,8 @@ public PdfLine processLine(float leftX, float width, int alignment, int runDirec
             lastValidChunk = ck;
             if (ck.isTab()) {
                 Object[] tab = (Object[])ck.getAttribute(Chunk.TAB);
-                float tabPosition = ((Float)tab[1]).floatValue();
-                boolean newLine = ((Boolean)tab[2]).booleanValue();
+                float tabPosition = (Float) tab[1];
+                boolean newLine = (Boolean) tab[2];
                 if (newLine && tabPosition < originalWidth - width) {
                     return new PdfLine(0, originalWidth, width, alignment, true, createArrayOfPdfChunks(oldCurrentChar, currentChar - 1), isRTL);
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/ByteBuffer.java
Patch:
@@ -390,7 +390,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 int x = 100000;
                 int v = (int) (d * x);
                 
-                StringBuffer res = new StringBuffer();
+                StringBuilder res = new StringBuilder();
                 if (negative) res.append('-');
                 res.append("0.");
                 
@@ -505,7 +505,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 }
                 return null;
             } else {
-                StringBuffer res = new StringBuffer();
+                StringBuilder res = new StringBuilder();
                 if (negative) res.append('-');
                 if (v >= 1000000) {
                     res.append( chars[(v / 1000000)] );
@@ -533,7 +533,7 @@ public static String formatDouble(double d, ByteBuffer buf) {
                 return res.toString();
             }
         } else {
-            StringBuffer res = new StringBuffer();
+            StringBuilder res = new StringBuilder();
             if (negative) res.append('-');
             d += 0.5;
             long v = (long) d;

File: openpdf/src/main/java/com/lowagie/text/pdf/DefaultFontMapper.java
Patch:
@@ -284,9 +284,9 @@ public void insertNames(Object[] allNames, String path) {
     }
     BaseFontParameters p = new BaseFontParameters(path);
     mapper.put(main, p);
-    for (int k = 0; k < names.length; ++k) {
-      aliases.put(names[k][3], main);
-    }
+      for (String[] name : names) {
+          aliases.put(name[3], main);
+      }
     aliases.put((String) allNames[0], main);
   }
 

File: openpdf/src/main/java/com/lowagie/text/pdf/FontSelector.java
Patch:
@@ -92,7 +92,7 @@ public Phrase process(String text) {
             throw new IndexOutOfBoundsException(MessageLocalization.getComposedMessage("no.font.is.defined"));
         char[] cc = text.toCharArray();
         int len = cc.length;
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         Font font = null;
         int lastidx = -1;
         Phrase ret = new Phrase();

File: openpdf/src/main/java/com/lowagie/text/pdf/PRTokeniser.java
Patch:
@@ -148,7 +148,7 @@ public RandomAccessFileOrArray getFile() {
     }
     
     public String readString(int size) throws IOException {
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
         int ch;
         while ((size--) > 0) {
             ch = file.read();

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfCopyFormsImp.java
Patch:
@@ -98,8 +98,8 @@ public void copyDocumentFields(PdfReader reader) throws DocumentException {
      * of PdfCopyFields.
      */
     void mergeFields() {
-        for (int k = 0; k < fields.size(); ++k) {
-            HashMap fd = ((AcroFields)fields.get(k)).getFields();
+        for (Object field : fields) {
+            HashMap fd = ((AcroFields) field).getFields();
             mergeWithMaster(fd);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDate.java
Patch:
@@ -84,7 +84,7 @@ public class PdfDate extends PdfString {
     
     public PdfDate(Calendar d) {
         super();
-        StringBuffer date = new StringBuffer("D:");
+        StringBuilder date = new StringBuilder("D:");
         date.append(setLength(d.get(Calendar.YEAR), 4));
         date.append(setLength(d.get(Calendar.MONTH) + 1, 2));
         date.append(setLength(d.get(Calendar.DATE), 2));
@@ -128,7 +128,7 @@ public PdfDate() {
  */
     
     private String setLength(int i, int length) { // 1.3-1.4 problem fixed by Finn Bock
-        StringBuffer tmp = new StringBuffer();
+        StringBuilder tmp = new StringBuilder();
         tmp.append(i);
         while (tmp.length() < length) {
             tmp.insert(0, "0");
@@ -153,7 +153,7 @@ public String getW3CDate() {
     public static String getW3CDate(String d) {
         if (d.startsWith("D:"))
             d = d.substring(2);
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         if (d.length() < 4)
             return "0000";
         sb.append(d, 0, 4); //year

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDictionary.java
Patch:
@@ -111,7 +111,7 @@ public class PdfDictionary extends PdfObject {
      */
     public PdfDictionary() {
         super(DICTIONARY);
-        hashMap = new HashMap<PdfName, PdfObject>();
+        hashMap = new HashMap<>();
     }
 
     /**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfEncryptor.java
Patch:
@@ -215,7 +215,7 @@ public static void encrypt(PdfReader reader, OutputStream os, int type, String u
      * @return a String that explains the meaning of the permissions value
      */
     public static String getPermissionsVerbose(int permissions) {
-        StringBuffer buf = new StringBuffer("Allowed:");
+        StringBuilder buf = new StringBuilder("Allowed:");
         if ((PdfWriter.ALLOW_PRINTING & permissions) == PdfWriter.ALLOW_PRINTING) buf.append(" Printing");
         if ((PdfWriter.ALLOW_MODIFY_CONTENTS & permissions) == PdfWriter.ALLOW_MODIFY_CONTENTS) buf.append(" Modify contents");
         if ((PdfWriter.ALLOW_COPY & permissions) == PdfWriter.ALLOW_COPY) buf.append(" Copy");

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfFunction.java
Patch:
@@ -122,8 +122,7 @@ public static PdfFunction type3(PdfWriter writer, float[] domain, float[] range,
         if (range != null)
             func.dictionary.put(PdfName.RANGE, new PdfArray(range));
         PdfArray array = new PdfArray();
-        for (int k = 0; k < functions.length; ++k)
-            array.add(functions[k].getReference());
+        for (PdfFunction function : functions) array.add(function.getReference());
         func.dictionary.put(PdfName.FUNCTIONS, array);
         func.dictionary.put(PdfName.BOUNDS, new PdfArray(bounds));
         func.dictionary.put(PdfName.ENCODE, new PdfArray(encode));

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfImage.java
Patch:
@@ -109,8 +109,7 @@ public PdfImage(Image image, String name, PdfIndirectReference maskRef) throws B
                 int[] transparency = image.getTransparency();
                 if (transparency != null && !image.isMask() && maskRef == null) {
                     String s = "[";
-                    for (int k = 0; k < transparency.length; ++k)
-                        s += transparency[k] + " ";
+                    for (int i : transparency) s += i + " ";
                     s += "]";
                     put(PdfName.MASK, new PdfLiteral(s));
                 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfLister.java
Patch:
@@ -102,8 +102,8 @@ public void listDict(PdfDictionary dictionary)
         out.println("<<");
         PdfName key;
         PdfObject value;
-        for (Iterator i = dictionary.getKeys().iterator(); i.hasNext(); ) {
-            key = (PdfName) i.next();
+        for (PdfName pdfName : dictionary.getKeys()) {
+            key = pdfName;
             value = dictionary.get(key);
             out.print(key.toString());
             out.print(' ');

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfPSXObject.java
Patch:
@@ -46,8 +46,6 @@
  */
 package com.lowagie.text.pdf;
 
-import java.io.IOException;
-
 /**
  * Implements the PostScript XObject.
  */

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSigGenericPKCS.java
Patch:
@@ -101,8 +101,8 @@ public void setSignInfo(PrivateKey privKey, Certificate[] certChain, CRL[] crlLi
             pkcs.setExternalDigest(externalDigest, externalRSAdata, digestEncryptionAlgorithm);
             if (PdfName.ADBE_X509_RSA_SHA1.equals(get(PdfName.SUBFILTER))) {
                 ByteArrayOutputStream bout = new ByteArrayOutputStream();
-                for (int k = 0; k < certChain.length; ++k) {
-                    bout.write(certChain[k].getEncoded());
+                for (Certificate certificate : certChain) {
+                    bout.write(certificate.getEncoded());
                 }
                 bout.close();
                 setCert(bout.toByteArray());

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfSignature.java
Patch:
@@ -62,8 +62,7 @@ public PdfSignature(PdfName filter, PdfName subFilter) {
     
     public void setByteRange(int[] range) {
         PdfArray array = new PdfArray();
-        for (int k = 0; k < range.length; ++k)
-            array.add(new PdfNumber(range[k]));
+        for (int i : range) array.add(new PdfNumber(i));
         put(PdfName.BYTERANGE, array);
     }
     

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfString.java
Patch:
@@ -152,8 +152,7 @@ public void toPdf(PdfWriter writer, OutputStream os) throws IOException {
             ByteBuffer buf = new ByteBuffer();
             buf.append('<');
             int len = b.length;
-            for (int k = 0; k < len; ++k)
-                buf.appendHex(b[k]);
+            for (byte b1 : b) buf.appendHex(b1);
             buf.append('>');
             os.write(buf.toByteArray());
         }

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/wmf/MetaDo.java
Patch:
@@ -52,7 +52,6 @@
 
 import java.awt.Color;
 import java.awt.Point;
-import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -405,8 +404,8 @@ public void readAll() throws IOException, DocumentException{
                     cx = pt[0];
                     cy = pt[1];
                     cb.moveTo(cx, cy);
-                    for (int k = 0; k < ar.size(); ++k) {
-                        pt = ar.get(k);
+                    for (float[] floats : ar) {
+                        pt = floats;
                         cb.curveTo(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);
                     }
                     cb.lineTo(cx, cy);

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPCellEventForwarder.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
-import java.util.Iterator;
 
 import com.lowagie.text.Rectangle;
 import com.lowagie.text.pdf.PdfContentByte;
@@ -82,8 +81,8 @@ public void addCellEvent(PdfPCellEvent event) {
      */
     public void cellLayout(PdfPCell cell, Rectangle position, PdfContentByte[] canvases) {
         PdfPCellEvent event;
-        for (Iterator i = events.iterator(); i.hasNext(); ) {
-            event = (PdfPCellEvent)i.next();
+        for (Object event1 : events) {
+            event = (PdfPCellEvent) event1;
             event.cellLayout(cell, position, canvases);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/events/PdfPTableEventForwarder.java
Patch:
@@ -50,7 +50,6 @@
 package com.lowagie.text.pdf.events;
 
 import java.util.ArrayList;
-import java.util.Iterator;
 
 import com.lowagie.text.pdf.PdfContentByte;
 import com.lowagie.text.pdf.PdfPTable;
@@ -81,8 +80,8 @@ public void addTableEvent(PdfPTableEvent event) {
      */
     public void tableLayout(PdfPTable table, float[][] widths, float[] heights, int headerRows, int rowStart, PdfContentByte[] canvases) {
         PdfPTableEvent event;
-        for (Iterator i = events.iterator(); i.hasNext(); ) {
-            event = (PdfPTableEvent)i.next();
+        for (Object event1 : events) {
+            event = (PdfPTableEvent) event1;
             event.tableLayout(table, widths, heights, headerRows, rowStart, canvases);
         }
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphen.java
Patch:
@@ -56,7 +56,7 @@ public String toString() {
                 && preBreak.equals("-")) {
             return "-";
                 }
-        StringBuffer res = new StringBuffer("{");
+        StringBuilder res = new StringBuilder("{");
         res.append(preBreak);
         res.append("}{");
         res.append(postBreak);

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/Hyphenation.java
Patch:
@@ -70,7 +70,7 @@ public int[] getHyphenationPoints() {
     }
 
     public String toString() {
-        StringBuffer str = new StringBuffer();
+        StringBuilder str = new StringBuilder();
         int start = 0;
         for (int i = 0; i < len; i++) {
             str.append(word, start, hyphenPoints[i]).append('-');

File: openpdf/src/main/java/com/lowagie/text/pdf/hyphenation/TernaryTree.java
Patch:
@@ -619,7 +619,7 @@ private int run() {
             }
             // The current node should be a data node and
             // the key should be in the key stack (at least partially)
-            StringBuffer buf = new StringBuffer(ks.toString());
+            StringBuilder buf = new StringBuilder(ks.toString());
             if (sc[cur] == 0xFFFF) {
                 int p = lo[cur];
                 while (kv.get(p) != 0) {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/Matrix.java
Patch:
@@ -199,8 +199,7 @@ public int hashCode() {
         //return Arrays.hashCode(vals); // JDK 5 code, replaced with the following
         
         int result = 1;
-        for (int i = 0; i < vals.length; i++)
-            result = 31 * result + Float.floatToIntBits(vals[i]);
+        for (float val : vals) result = 31 * result + Float.floatToIntBits(val);
 
         return result;
     }

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ParsedText.java
Patch:
@@ -50,7 +50,6 @@
 import com.lowagie.text.pdf.PdfReader;
 import com.lowagie.text.pdf.PdfString;
 
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.List;
@@ -277,7 +276,7 @@ private static float getStringWidth(String string, GraphicsState gs) {
      * @return list of Word objects.
      */
     public List<Word> getAsPartialWords() {
-        ArrayList<Word> result = new ArrayList<Word>();
+        ArrayList<Word> result = new ArrayList<>();
         CMapAwareDocumentFont font = gs.font;
         char[] chars = pdfText.getOriginalChars();
         boolean[] hasSpace = new boolean[chars.length];

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfTextExtractor.java
Patch:
@@ -245,7 +245,7 @@ public void processContent(byte[] contentBytes, PdfDictionary resources,
         try {
             PdfContentParser ps = new PdfContentParser(new PRTokeniser(
                     contentBytes));
-            ArrayList<PdfObject> operands = new ArrayList<PdfObject>();
+            ArrayList<PdfObject> operands = new ArrayList<>();
             while (ps.parse(operands).size() > 0) {
                 PdfLiteral operator = (PdfLiteral) operands
                         .get(operands.size() - 1);

File: openpdf/src/main/java/com/lowagie/text/xml/XmlDomWriter.java
Patch:
@@ -141,8 +141,7 @@ public void write(Node node) {
                 fOut.print('<');
                 fOut.print(node.getNodeName());
                 Attr[] attrs = sortAttributes(node.getAttributes());
-                for (int i = 0; i < attrs.length; i++) {
-                    Attr attr = attrs[i];
+                for (Attr attr : attrs) {
                     fOut.print(' ');
                     fOut.print(attr.getNodeName());
                     fOut.print("=\"");

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -461,7 +461,7 @@ else if(character == quoteCharacter) {
      */
     private int restoreState() {
         if(!stack.empty())
-            return ((Integer)stack.pop()).intValue();
+            return (Integer) stack.pop();
         else
             return UNKNOWN;
     }
@@ -470,7 +470,7 @@ private int restoreState() {
      * @param    s    a state to add to the stack
      */
     private void saveState(int s) {
-        stack.push(new Integer(s));
+        stack.push(s);
     }
     /**
      * Flushes the text that is currently in the buffer.
@@ -566,7 +566,7 @@ public static void parse(SimpleXMLDocHandler doc, InputStream in) throws IOExcep
 
         String decl = null;
         if (encoding.equals("UTF-8")) {
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             int c;
             while ((c = in.read()) != -1) {
                 if (c == '>')

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/XmpBasicSchema.java
Patch:
@@ -50,6 +50,8 @@
 package com.lowagie.text.xml.xmp;
 
 
+import java.util.Arrays;
+
 /**
  * An implementation of an XmpSchema.
  */
@@ -122,9 +124,7 @@ public void addMetaDataDate(String date) {
      */
     public void addIdentifiers(String[] id) {
         XmpArray array = new XmpArray(XmpArray.UNORDERED);
-        for (int i = 0; i < id.length; i++) {
-            array.add(id[i]);
-        }
+        array.addAll(Arrays.asList(id));
         setProperty(IDENTIFIER, array);
     }
 

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/XmpSchema.java
Patch:
@@ -144,7 +144,7 @@ public Object setProperty(String key, LangAlt value) {
      * @return an escaped string
      */
     public static String escape(String content) {
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
         for (int i = 0; i < content.length(); i++) {
             switch(content.charAt(i)) {
             case '<':

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfSignatureAppearanceTest.java
Patch:
@@ -47,7 +47,7 @@ void invisibleExternalSignature() throws DocumentException, IOException, NoSuchA
                 sap.setReason("Test");
 
                 HashMap exc = new HashMap();
-                exc.put(PdfName.CONTENTS, new Integer(10));
+                exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
                 byte[] result = Utilities.toByteArray(sap.getRangeStream());
@@ -100,7 +100,7 @@ void visibleExternalSignature() throws DocumentException, IOException, NoSuchAlg
                 sap.setLayer2Text("Hello world");
 
                 HashMap exc = new HashMap();
-                exc.put(PdfName.CONTENTS, new Integer(10));
+                exc.put(PdfName.CONTENTS, 10);
                 sap.preClose(exc);
 
                 byte[] result = Utilities.toByteArray(sap.getRangeStream());

File: pdf-html/src/main/java/com/lowagie/text/html/HtmlEncoder.java
Patch:
@@ -137,7 +137,7 @@ private HtmlEncoder () { }
     public static String encode(String string) {
         int n = string.length();
         char character;
-        StringBuffer buffer = new StringBuffer();
+        StringBuilder buffer = new StringBuilder();
         // loop over all the characters of the String.
         for (int i = 0; i < n; i++) {
             character = string.charAt(i);
@@ -161,7 +161,7 @@ public static String encode(String string) {
  */
     
     public static String encode(Color color) {
-        StringBuffer buffer = new StringBuffer("#");
+        StringBuilder buffer = new StringBuilder("#");
         if (color.getRed() < 16) {
             buffer.append('0');
         }

File: pdf-swing/src/main/java/com/lowagie/rups/model/IndirectObjectFactory.java
Patch:
@@ -41,7 +41,7 @@ public class IndirectObjectFactory {
     /** The highest xref number. */
     protected int n;
     /** A list of all the indirect objects in a PDF file. */
-    protected ArrayList<PdfObject> objects = new ArrayList<PdfObject>();
+    protected ArrayList<PdfObject> objects = new ArrayList<>();
     /** Mapping between the index in the objects list and the reference number in the xref table.  */
     protected IntHashtable idxToRef = new IntHashtable();
     /** Mapping between the reference number in the xref table and the index in the objects list .  */

File: pdf-swing/src/main/java/com/lowagie/rups/model/TreeNodeFactory.java
Patch:
@@ -41,7 +41,7 @@ public class TreeNodeFactory {
     /** The factory that can produce all indirect objects. */
     protected IndirectObjectFactory objects;
     /** An list containing the nodes of every indirect object. */
-    protected ArrayList<PdfObjectTreeNode> nodes = new ArrayList<PdfObjectTreeNode>();
+    protected ArrayList<PdfObjectTreeNode> nodes = new ArrayList<>();
     
     /**
      * Creates a factory that can produce TreeNode objects
@@ -100,8 +100,8 @@ public void expandNode(PdfObjectTreeNode node) {
         case PdfObject.DICTIONARY:
         case PdfObject.STREAM:
             PdfDictionary dict = (PdfDictionary)object;
-            for (Iterator it = dict.getKeys().iterator(); it.hasNext(); ) {
-                leaf = PdfObjectTreeNode.getInstance(dict, (PdfName)it.next());
+            for (PdfName pdfName : dict.getKeys()) {
+                leaf = PdfObjectTreeNode.getInstance(dict, pdfName);
                 addNodes(node, leaf);
                 expandNode(leaf);
             }

File: pdf-swing/src/main/java/com/lowagie/rups/view/Console.java
Patch:
@@ -189,8 +189,8 @@ public void run() {
                     printStream.print(snippet);
                     textArea.setCaretPosition(textArea.getDocument().
                                               getLength());
-                } catch (BadLocationException ex) {
-                } catch (IOException e) {
+                } catch (BadLocationException | IOException ignored) {
+                    // ignored
                 }
             }
         }

File: pdf-swing/src/main/java/com/lowagie/rups/view/RupsMenuBar.java
Patch:
@@ -65,7 +65,7 @@ public class RupsMenuBar extends JMenuBar implements Observer {
      */
     public RupsMenuBar(Observable observable) {
         this.observable = observable;
-        items = new HashMap<String, JMenuItem>();
+        items = new HashMap<>();
         fileChooserAction = new FileChooserAction(observable, "Open", PdfFilter.INSTANCE, false);
         MessageAction message = new MessageAction();
         JMenu file = new JMenu(FILE_MENU);

File: pdf-swing/src/main/java/com/lowagie/rups/view/icons/IconFetcher.java
Patch:
@@ -31,7 +31,7 @@
 public class IconFetcher {
     
     /** Cache with icons. */
-    protected static HashMap<String, Icon> cache = new HashMap<String, Icon>();
+    protected static HashMap<String, Icon> cache = new HashMap<>();
     
     /**
      * Gets an Icon with a specific name.

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/FormTree.java
Patch:
@@ -114,9 +114,7 @@ public void update(Observable observable, Object obj) {
                     xfaFile = new XfaFile(node);
                     xfaTree.load(xfaFile);
                     xfaTextArea.load(xfaFile);
-                } catch (IOException e) {
-                    e.printStackTrace();
-                } catch (DocumentException e) {
+                } catch (IOException | DocumentException e) {
                     e.printStackTrace();
                 }
             }

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/PagesTable.java
Patch:
@@ -48,7 +48,7 @@
 public class PagesTable extends JTable implements JTableAutoModelInterface, Observer {
 
     /** A list with page nodes. */
-    protected ArrayList<PdfPageTreeNode> list = new ArrayList<PdfPageTreeNode>();
+    protected ArrayList<PdfPageTreeNode> list = new ArrayList<>();
     /** Nodes in the FormTree correspond with nodes in the main PdfTree. */
     protected PdfReaderController controller;
     /***/
@@ -68,7 +68,7 @@ public PagesTable(PdfReaderController controller, PageSelectionListener listener
      */
     public void update(Observable observable, Object obj) {
         if (obj == null) {
-            list = new ArrayList<PdfPageTreeNode>();
+            list = new ArrayList<>();
             repaint();
             return;
         }

File: pdf-swing/src/main/java/com/lowagie/rups/view/itext/treenodes/PdfObjectTreeNode.java
Patch:
@@ -253,7 +253,7 @@ public static String getCaption(PdfObject object) {
      * @return    a caption for the object corresponding with the key in the dictionary.
      */
     public static String getDictionaryEntryCaption(PdfDictionary dict, PdfName key) {
-        StringBuffer buf = new StringBuffer(key.toString());
+        StringBuilder buf = new StringBuilder(key.toString());
         buf.append(": ");
         PdfObject valObj = dict.get(key);
         if (valObj.isIndirect()) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/AbstractArgument.java
Patch:
@@ -91,7 +91,7 @@ public void setName(String name) {
      * @return a String
      */
     public String getUsage() {
-        StringBuffer buf = new StringBuffer("  ");
+        StringBuilder buf = new StringBuilder("  ");
         buf.append(name);
         buf.append(" -  ");
         buf.append(description);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/arguments/OptionArgument.java
Patch:
@@ -122,7 +122,7 @@ public void setValue(Object value) {
     }
 
 
-    private TreeMap<String, Entry> options = new TreeMap<String, Entry>();
+    private TreeMap<String, Entry> options = new TreeMap<>();
 
     /**
      * Constructs an OptionArgument.
@@ -166,7 +166,7 @@ public Object getArgument() throws InstantiationException {
      * @return String
      */
     public String getUsage() {
-        StringBuffer buf = new StringBuffer(super.getUsage());
+        StringBuilder buf = new StringBuilder(super.getUsage());
         buf.append("    possible options:\n");
         for (Entry entry: options.values()) {
             buf.append("    - ");

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Concat.java
Patch:
@@ -95,7 +95,7 @@ public void execute() {
             if (getValue("destfile") == null) throw new InstantiationException("You need to choose a destination file");
             File pdf_file = (File)getValue("destfile");
             int pageOffset = 0;
-            List<HashMap<String, Object>> master = new ArrayList<HashMap<String, Object>>();
+            List<HashMap<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy  writer = null;
             for (int i = 0; i < 2; i++) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ConcatN.java
Patch:
@@ -103,7 +103,7 @@ public void execute() {
             }
             File pdf_file = (File) getValue("destfile");
             int pageOffset = 0;
-            ArrayList<HashMap<String, Object>> master = new ArrayList<HashMap<String, Object>>();
+            ArrayList<HashMap<String, Object>> master = new ArrayList<>();
             Document document = null;
             PdfCopy writer = null;
             for (int i = 0; i < files.length; i++) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ExtractAttachments.java
Patch:
@@ -113,9 +113,9 @@ public void execute() {
                 PdfDictionary embFiles = names.getAsDict(new PdfName("EmbeddedFiles"));
                 if (embFiles != null) {
                     HashMap<String, PdfObject> embMap = PdfNameTree.readTree(embFiles);
-                    for (Iterator<PdfObject> i = embMap.values().iterator(); i.hasNext();) {
+                    for (PdfObject pdfObject : embMap.values()) {
                         PdfDictionary filespec = (PdfDictionary) PdfReader
-                                .getPdfObject(i.next());
+                                .getPdfObject(pdfObject);
                         unpackFile(reader, filespec, outPath);
                     }
                 }

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ImageXRefViewer.java
Patch:
@@ -251,8 +251,7 @@ public Object construct() {
                                 }
                             }
                         }
-                    } catch (InstantiationException ex) {
-                    } catch (IOException ex) {
+                    } catch (InstantiationException | IOException ex) {
                     }
                     internalFrame.setCursor(Cursor.getDefaultCursor());
                     return null;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/Normalize.java
Patch:
@@ -205,7 +205,7 @@ public void execute() {
 
       PdfWriter writer = stp.getWriter();
 
-      ArrayList<PdfDictionary> pageInh = new ArrayList<PdfDictionary>();
+      ArrayList<PdfDictionary> pageInh = new ArrayList<>();
       PdfDictionary catalog = reader.getCatalog();
       PdfDictionary rootPages = catalog.getAsDict(PdfName.PAGES);
       iteratePages(rootPages, reader, pageInh, 0, writer);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/ReversePages.java
Patch:
@@ -105,9 +105,9 @@ public void execute() {
       System.out.println("The original file had " + reader.getNumberOfPages() +
                          " pages.");
       int pages = reader.getNumberOfPages();
-      ArrayList<Integer> li = new ArrayList<Integer>();
+      ArrayList<Integer> li = new ArrayList<>();
       for (int i = pages; i > 0; i--) {
-        li.add(Integer.valueOf(i));
+        li.add(i);
       }
       reader.selectPages(li);
 

File: pdf-toolbox/src/main/java/com/lowagie/tools/BuildTutorial.java
Patch:
@@ -131,8 +131,8 @@ public static void action(File source, File destination, File xsl_examples, File
             File current;
             File[] xmlFiles = source.listFiles();
             if (xmlFiles != null) {
-                for (int i = 0; i < xmlFiles.length; i++) {
-                    current = xmlFiles[i];
+                for (File xmlFile : xmlFiles) {
+                    current = xmlFile;
                     action(current, dest, xsl_examples, xsl_site);
                 }
             }
@@ -183,7 +183,7 @@ public static void convert(File infile, File xslfile, File outfile) {
             // passing 2 parameters
             String branch = outfile.getParentFile().getCanonicalPath().substring(root.length());
             branch = branch.replace(File.separatorChar, '/');
-            StringBuffer path = new StringBuffer();
+            StringBuilder path = new StringBuilder();
             for (int i = 0; i < branch.length(); i++) {
                 if (branch.charAt(i) == '/') path.append("/pdf-core/src/test");
             }

File: pdf-toolbox/src/main/java/com/lowagie/tools/Executable.java
Patch:
@@ -296,7 +296,7 @@ else if (isWindows())
      */
     public static boolean isWindows() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("windows") != -1 || os.indexOf("nt") != -1;
+        return os.contains("windows") || os.contains("nt");
     }
 
     /**
@@ -316,7 +316,7 @@ public static boolean isWindows9X() {
      */
     public static boolean isMac() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("mac") != -1;
+        return os.contains("mac");
     }
 
     /**
@@ -326,6 +326,6 @@ public static boolean isMac() {
      */
     public static boolean isLinux() {
         String os = System.getProperty("os.name").toLowerCase();
-        return os.indexOf("linux") != -1;
+        return os.contains("linux");
     }
 }

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics/GState.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             cb.fill();
             
             cb.sanityCheck();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics/State.java
Patch:
@@ -71,10 +71,8 @@ public static void main(String[] args) {
             cb.fill();
             
             cb.sanityCheck();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/directcontent/graphics2D/ArabicText.java
Patch:
@@ -13,6 +13,7 @@
  */
 package com.lowagie.examples.directcontent.graphics2D;
 
+import java.awt.*;
 import java.io.FileOutputStream;
 
 import com.lowagie.text.Document;
@@ -40,7 +41,7 @@ public static void main(String[] args) {
             document.open();
             // step 4
             String text1 = "This text has \u0634\u0627\u062f\u062c\u0645\u0647\u0648\u0631 123,456 \u0645\u0646 (Arabic)";
-            java.awt.Font font = new java.awt.Font("arial", 0, 18);
+            java.awt.Font font = new java.awt.Font("arial", Font.PLAIN, 18);
             PdfContentByte cb = writer.getDirectContent();
             java.awt.Graphics2D g2 = cb.createGraphicsShapes(PageSize.A4.getWidth(), PageSize.A4.getHeight());
             g2.setFont(font);

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/FontFactoryType1Fonts.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             for (int i = 0; i < 14; i++) {
                     document.add(new Paragraph("quick brown fox jumps over the lazy dog", fonts[i]));
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/FullFontNames.java
Patch:
@@ -36,9 +36,9 @@ public static void main(String[] args) {
             out.write("\r\n\r\n");
             String[][] names = bf.getFullFontName();
             out.write("\n\nListing the full font name:\n\n");
-            for (int k = 0; k < names.length; ++k) {
-                if (names[k][0].equals("3") && names[k][1].equals("1")) // Microsoft encoding
-                    out.write(names[k][3] + "\r\n");
+            for (String[] name : names) {
+                if (name[0].equals("3") && name[1].equals("1")) // Microsoft encoding
+                    out.write(name[3] + "\r\n");
             }
             out.flush();
             out.close();

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/StandardType1Fonts.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             for (int i = 0; i < 14; i++) {
                 document.add(new Paragraph("quick brown fox jumps over the lazy dog", fonts[i]));
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/getting/UsingFontFactory.java
Patch:
@@ -82,10 +82,8 @@ public static void main(String[] args) {
                 }
                 c--;
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/ExtraStyles.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Demonstrates how to underline and strike through text.
@@ -64,7 +65,7 @@ void testUnderlineAndStrikeThrough() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
 
     }

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/FontColor.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             cb.setFontAndSize(bf, 12);
             cb.showTextAligned(PdfContentByte.ALIGN_CENTER, "Grass is green", 250, 700, 0);
             cb.endText();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/fonts/styles/FontStylePropagation.java
Patch:
@@ -76,10 +76,8 @@ public static void main(String[] args) {
             myParagraph.add(new Paragraph("Hello 3bis! ", new Font(Font.TIMES_ROMAN, 8, Font.BOLD)));
             myParagraph.add(new Paragraph("This is the end of the sentence.", new Font(Font.TIMES_ROMAN, 8, Font.ITALIC)));
             document.add(myParagraph);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloEncrypted.java
Patch:
@@ -53,10 +53,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloSystemOut.java
Patch:
@@ -54,10 +54,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorld.java
Patch:
@@ -52,10 +52,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorldMeta.java
Patch:
@@ -57,10 +57,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/HelloWorldPdf.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Generates a simple 'Hello World' PDF.
@@ -67,7 +68,7 @@ void testHelloWorld() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
 
     }

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/HelloWorldServlet.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.IOException;
 import java.util.Date;
 
-import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/OutSimplePdf.java
Patch:
@@ -15,9 +15,7 @@
 package com.lowagie.examples.general.webapp;
 
 import java.io.ByteArrayOutputStream;
-import java.io.IOException;
 
-import javax.servlet.ServletException;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/SilentPrintServlet.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 
-import javax.servlet.ServletException;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/HelloHtml.java
Patch:
@@ -52,10 +52,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/HelloWorldMeta.java
Patch:
@@ -61,10 +61,8 @@ public static void main(String[] args) {
             document.open();
             // step 4: we add a paragraph to the document
             document.add(new Paragraph("Hello World"));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/html/JavaScriptAction.java
Patch:
@@ -51,7 +51,7 @@ public static void main(String[] args) {
                     "JavaScriptAction.html"));
             // step 3: we add Javascript as Metadata and we open the document
             
-            StringBuffer javaScriptSection = new StringBuffer();
+            StringBuilder javaScriptSection = new StringBuilder();
             javaScriptSection.append("\t\tfunction load() {\n");
             javaScriptSection.append("\t\t  alert('Page has been loaded.');\n");
             javaScriptSection.append("\t\t}\n");

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Chunks.java
Patch:
@@ -64,10 +64,8 @@ public static void main(String[] args) {
             document.add(fox);
             document.add(jumps);
             document.add(dog);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/FancyLists.java
Patch:
@@ -134,10 +134,8 @@ public static void main(String[] args) {
             }
             document.add(z3);
 
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Lists.java
Patch:
@@ -119,10 +119,8 @@ public static void main(String[] args) {
             sublist.add("Galapagos");
             list.add(sublist);
             document.add(list);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/NegativeLeading.java
Patch:
@@ -56,10 +56,8 @@ public static void main(String[] args) {
                     .add(new Phrase(
                             -16,
                             "Hello, this is a very long phrase to show you the somewhat odd effect of a negative leading. You can write from bottom to top. This is not fully supported. It's something between a feature and a bug."));
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/ParagraphAttributes.java
Patch:
@@ -86,10 +86,8 @@ public static void main(String[] args) {
                 document.add(p[i]);
             }
             document.newPage();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Paragraphs.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             Paragraph p3 = new Paragraph("This is my third paragraph.",
                     FontFactory.getFont(FontFactory.HELVETICA, 12));
             document.add(p3);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/Phrases.java
Patch:
@@ -101,10 +101,8 @@ public static void main(String[] args) {
             document.add(phrase5);
             document.add(phrase6);
             document.add(phrase7);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/SymbolSubstitution.java
Patch:
@@ -55,10 +55,8 @@ public static void main(String[] args) {
                     for (int i = 913; i < 970; i++) {
                         document.add(Phrase.getInstance(" " + i + ": " + (char) i));
                     }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/anchors/AHref.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
             Anchor anchor2 = new Anchor("please jump to a local destination", FontFactory.getFont(FontFactory.HELVETICA, 12, Font.NORMAL, new Color(0, 0, 255)));
             anchor2.setReference("#top");
             document.add(anchor2);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/Layers.java
Patch:
@@ -98,10 +98,8 @@ public static void main(String[] args) {
             PdfDictionary d = new PdfDictionary();
             d.put(PdfName.ORDER, order);
             p.put(PdfName.D, d);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/OutlineActions.java
Patch:
@@ -80,10 +80,8 @@ public static void main(String[] args) {
             Paragraph p = new Paragraph("This paragraph contains a ");
             p.add(new Chunk("local destination").setLocalDestination("test"));
             remote.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/PageLabels.java
Patch:
@@ -59,10 +59,8 @@ public static void main(String[] args) {
             pageLabels.addPageLabel(5, PdfPageLabels.DECIMAL_ARABIC_NUMERALS);
             pageLabels.addPageLabel(8, PdfPageLabels.DECIMAL_ARABIC_NUMERALS, "A-", 8);
             writer.setPageLabels(pageLabels);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Background.java
Patch:
@@ -79,10 +79,8 @@ public static void main(String[] args) {
             p.add(c);
             p.add(" example");
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/ChunkColor.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             cb.setFontAndSize(bf, 12);
             cb.showTextAligned(PdfContentByte.ALIGN_CENTER, "Grass is green", 250, 700, 0);
             cb.endText();
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/EndOfLine.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
                 p.add(chunk);
             }
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Generic.java
Patch:
@@ -96,10 +96,8 @@ public static void main(String[] args) {
             p.add("; the other an ");
             p.add(ellipse);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Hyphenation.java
Patch:
@@ -78,10 +78,8 @@ public static void main(String[] args) {
             p = new Paragraph(ck);
             p.setAlignment(Paragraph.ALIGN_JUSTIFIED);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Lines.java
Patch:
@@ -79,10 +79,8 @@ public static void main(String[] args) {
             c.setUnderline(new Color(0x00, 0xFF, 0x00), 5.0f, 0.0f, 0.0f, -0.5f, PdfContentByte.LINE_CAP_PROJECTING_SQUARE);
             c.setUnderline(new Color(0x00, 0x00, 0xFF), 0.0f, 0.2f, 15.0f, 0.0f, PdfContentByte.LINE_CAP_BUTT);
             document.add(c);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Rendering.java
Patch:
@@ -72,10 +72,8 @@ public static void main(String[] args) {
             bold.setTextRenderMode(PdfContentByte.TEXT_RENDER_MODE_FILL_STROKE, 0.5f, new Color(0x00, 0x00, 0x00));
             document.add(bold);
             
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Skew.java
Patch:
@@ -73,10 +73,8 @@ public static void main(String[] args) {
             italic.setSkew(0f, 12f);
             document.add(italic);
             
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/SplitChar.java
Patch:
@@ -70,10 +70,8 @@ public static void main(String[] args) {
             chunk.setSplitCharacter(new SplitChar());
             p = new Paragraph(24, chunk);
             document.add(p);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/SubSupScript.java
Patch:
@@ -64,10 +64,8 @@ public static void main(String[] args) {
                 document.add(c);
                 textrise -= 2.0f;
             }
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/chunk/Width.java
Patch:
@@ -66,10 +66,8 @@ public static void main(String[] args) {
             c.setHorizontalScaling(0.5f);
             document.add(c);
             document.add(c);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/columns/MultiColumnIrregular.java
Patch:
@@ -102,9 +102,7 @@ public static void main(String[] args) {
                 mct.nextColumn();
             } while (mct.isOverflow());
             document.close();
-        } catch (DocumentException e) {
-            e.printStackTrace();
-        } catch (FileNotFoundException e) {
+        } catch (DocumentException | FileNotFoundException e) {
             e.printStackTrace();
         }
 

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/images/AwtImage.java
Patch:
@@ -24,6 +24,7 @@
 import java.io.ByteArrayOutputStream;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 
 /**
  * Using the java.awt.Image object.
@@ -71,7 +72,7 @@ void testAwtImage() throws Exception {
             // step 5: we close the document
             document.close();
 
-            assertFalse(baos.size() == 0);
+            assertNotEquals(0, baos.size());
         }
     }
 }

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/DefaultCell.java
Patch:
@@ -69,10 +69,8 @@ public static void main(String[] args) {
             table.getDefaultCell().setBackgroundColor(new Color(0xC0, 0xC0, 0xC0));
             table.addCell("cell test2");
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/ImageCell.java
Patch:
@@ -57,10 +57,8 @@ public static void main(String[] args) {
             table.addCell("This three");
             table.addCell(new PdfPCell(image, false));
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/MyFirstTable.java
Patch:
@@ -69,10 +69,8 @@ public static void main(String[] args) {
             cell.setBackgroundColor(new Color(0xC0, 0xC0, 0xC0));
             table.addCell(cell);
             document.add(table);
-        } catch (DocumentException de) {
+        } catch (DocumentException | IOException de) {
             System.err.println(de.getMessage());
-        } catch (IOException ioe) {
-            System.err.println(ioe.getMessage());
         }
 
         // step 5: we close the document

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfTestBase.java
Patch:
@@ -12,8 +12,8 @@
 class PdfTestBase {
 
     static Document createPdf(String filename) throws FileNotFoundException, DocumentException {
-        // create a new file
-        return createPdf(new FileOutputStream(new File(filename)));
+        // create a new file in target dir
+        return createPdf(new FileOutputStream(new File("target", filename)));
     }
 
     static Document createPdf(OutputStream outputStream) throws DocumentException {

File: openpdf/src/test/java/com/lowagie/text/pdf/UnicodePdfTest.java
Patch:
@@ -17,7 +17,7 @@ public class UnicodePdfTest {
     @Test
     void testSimplePdf() throws FileNotFoundException, DocumentException {
         // create document
-        Document document = PdfTestBase.createPdf("target/unicode.pdf");
+        Document document = PdfTestBase.createPdf("unicode.pdf");
         // Probably a good idea to write the document to a byte array, so you can read the result and make some checks.
         // ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
         // Document document = PdfTestBase.createPdf(outputStream);

File: openpdf/src/test/java/com/lowagie/text/pdf/PdfTestBase.java
Patch:
@@ -12,8 +12,8 @@
 class PdfTestBase {
 
     static Document createPdf(String filename) throws FileNotFoundException, DocumentException {
-        // create a new file
-        return createPdf(new FileOutputStream(new File(filename)));
+        // create a new file in target dir
+        return createPdf(new FileOutputStream(new File("target", filename)));
     }
 
     static Document createPdf(OutputStream outputStream) throws DocumentException {

File: openpdf/src/test/java/com/lowagie/text/pdf/UnicodePdfTest.java
Patch:
@@ -17,7 +17,7 @@ public class UnicodePdfTest {
     @Test
     void testSimplePdf() throws FileNotFoundException, DocumentException {
         // create document
-        Document document = PdfTestBase.createPdf("target/unicode.pdf");
+        Document document = PdfTestBase.createPdf("unicode.pdf");
         // Probably a good idea to write the document to a byte array, so you can read the result and make some checks.
         // ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
         // Document document = PdfTestBase.createPdf(outputStream);

File: pdf-toolbox/src/test/java/com/lowagie/examples/general/webapp/HelloWorldServlet.java
Patch:
@@ -61,7 +61,7 @@ else if ("html".equals(presentationtype)) {
                 HtmlWriter.getInstance(document, response.getOutputStream());
             }
             else {
-                response.sendRedirect("https://github.com/LibrePDF/OpenPDF/wiki/Tutorialgeneral/webapp/index.html#HelloWorld");
+                response.sendRedirect("https://web.archive.org/web/20071005033458/http://itextdocs.lowagie.com:80/tutorial/general/webapp/index.html#HelloWorld");
             }
             
             // step 3
@@ -79,4 +79,4 @@ else if ("html".equals(presentationtype)) {
         // step 5: we close the document (the outputstream is also closed internally)
         document.close();
     }
-}
\ No newline at end of file
+}

File: openpdf/src/main/java/com/lowagie/text/pdf/FieldReader.java
Patch:
@@ -8,10 +8,10 @@
  */
 public interface FieldReader {
 
-    HashMap getFields();
+    HashMap<String, String> getFields();
 
     String getFieldValue(String fieldKey);
 
-    List getListValues(String fieldKey);
+    List<String> getListValues(String fieldKey);
 
 }

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -200,18 +200,18 @@ public void toPdf(int midSize, OutputStream os) throws IOException {
             }
 
             /**
-             * Compares current {@link PdfCrossReference entry} with passed {@code reference} by PDF object offset.
+             * Compares current {@link PdfCrossReference entry} with passed {@code reference} by PDF object number.
              */
             @Override
             public int compareTo(final PdfCrossReference reference) {
               return Integer.compare(refnum, reference.refnum);
             }
 
             /**
-             * Checks if two entries are equal if their PDF object offset are equal.
+             * Checks if two entries are equal if their PDF object numbers are equal.
              *
              * @param obj Another cross-reference entry
-             * @return If null, not of type {@link PdfCrossReference} or offsets are not equal,
+             * @return If null, not of type {@link PdfCrossReference} or object numbers are not equal,
              * returns false; true otherwise
              */
             @Override

File: openpdf/src/test/java/com/lowagie/text/pdf/core/document/PdfCrossReferenceTest.java
Patch:
@@ -57,7 +57,7 @@ class PdfCrossReferenceTest {
 
   /**
    * Tests comparison between different {@link PdfCrossReference cross-reference entries},
-   * because such entries are ordered through according PDF objects offsets.
+   * because such entries are ordered through according PDF object numbers.
    */
   @TestFactory
   Iterable<DynamicTest> testComparison() {

File: openpdf/src/test/java/com/lowagie/text/pdf/SimplePdfTest.java
Patch:
@@ -2,16 +2,16 @@
 
 import java.io.FileNotFoundException;
 
-import org.junit.Test;
-
 import com.lowagie.text.Annotation;
 import com.lowagie.text.Document;
 import com.lowagie.text.DocumentException;
 import com.lowagie.text.Rectangle;
+import org.junit.jupiter.api.Test;
 
 public class SimplePdfTest {
+
 	@Test
-	public void testSimplePdf() throws FileNotFoundException, DocumentException {
+	void testSimplePdf() throws FileNotFoundException, DocumentException {
 		// create document
 		Document document = PdfTestBase.createPdf("testSimplePdf.pdf");
 		try {

File: openpdf/src/test/java/com/lowagie/text/pdf/UnicodePdfTest.java
Patch:
@@ -8,14 +8,14 @@
 import com.lowagie.text.Element;
 import com.lowagie.text.Font;
 import com.lowagie.text.Paragraph;
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 public class UnicodePdfTest {
 
     private static final String INPUT = "Symbol: '\u25b2' Latin: 'äöüÄÖÜß'";
 
     @Test
-    public void testSimplePdf() throws FileNotFoundException, DocumentException {
+    void testSimplePdf() throws FileNotFoundException, DocumentException {
         // create document
         Document document = PdfTestBase.createPdf("target/unicode.pdf");
         // Probably a good idea to write the document to a byte array, so you can read the result and make some checks.

File: pdf-html/src/test/java/com/lowagie/text/html/simpleparser/FactoryPropertiesTest.java
Patch:
@@ -1,18 +1,18 @@
 package com.lowagie.text.html.simpleparser;
 
 import org.assertj.core.api.Assertions;
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.HashMap;
 import java.util.Map;
 
 /**
  * @author Serhiy Yakovyn
  */
-public class FactoryPropertiesTest {
+class FactoryPropertiesTest {
 
     @Test
-    public void shouldCreateRelativeLeadingForLineHeightNUmber() {
+    void shouldCreateRelativeLeadingForLineHeightNUmber() {
         // given
         final Map<String, String> h = new HashMap<>();
         final String style = "line-height:1.4";

File: openpdf/src/main/java/com/lowagie/text/xml/simpleparser/SimpleXMLParser.java
Patch:
@@ -563,7 +563,9 @@ public static void parse(SimpleXMLDocHandler doc, InputStream in) throws IOExcep
             throw new IOException(MessageLocalization.getComposedMessage("insufficient.length"));
         UniversalDetector detector = new UniversalDetector(null);
         detector.handleData(b4, 0, count);
+        detector.dataEnd();
         String encoding = detector.getDetectedCharset();
+        if (encoding == null) encoding = "UTF-8"; //UTF-8 is default.
 
         String decl = null;
         if (encoding.equals("UTF-8")) {

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -2164,7 +2164,7 @@ void eliminateFontSubset(PdfDictionary fonts) {
 
     /** The form XObjects in this document. The key is the xref and the value
         is Object[]{PdfName, template}.*/
-    protected HashMap<PdfIndirectReference, Object[]> formXObjects = new HashMap<PdfIndirectReference, Object[]>();
+    protected LinkedHashMap<PdfIndirectReference, Object[]> formXObjects = new LinkedHashMap<PdfIndirectReference, Object[]>();
 
     /** The name counter for the form XObjects name. */
     protected int formXObjectsCounter = 1;

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/images/Images.java
Patch:
@@ -63,9 +63,6 @@ public static void main(String[] args) {
             document.add(new Paragraph("iText.wmf"));
             Image wmf = Image.getInstance("iText.wmf");
             document.add(wmf);
-            document.add(new Paragraph("iText.tif"));
-            Image tiff = Image.getInstance("iText.tif");
-            document.add(tiff);
         }
         catch(DocumentException de) {
             System.err.println(de.getMessage());

File: openpdf/src/main/java/com/lowagie/text/html/Markup.java
Patch:
@@ -53,6 +53,7 @@
 package com.lowagie.text.html;
 
 import java.awt.Color;
+import java.util.Locale;
 import java.util.Properties;
 import java.util.StringTokenizer;
 
@@ -419,7 +420,7 @@ public static float parseLength(String string, float actualFontSize) {
 	public static Color decodeColor(String s) {
 		if (s == null)
 			return null;
-		s = s.toLowerCase().trim();
+		s = s.toLowerCase(Locale.ROOT).trim();
 		try {
 			return WebColors.getRGBColor(s);
 		}
@@ -459,7 +460,7 @@ public static Properties parseAttributes(String string) {
 				value = value.substring(1);
 			if (value.endsWith("\""))
 				value = value.substring(0, value.length() - 1);
-			result.setProperty(key.toLowerCase(), value);
+			result.setProperty(key.toLowerCase(Locale.ROOT), value);
 		}
 		return result;
 	}

File: openpdf/src/main/java/com/lowagie/text/html/WebColors.java
Patch:
@@ -51,6 +51,7 @@
 
 import java.awt.Color;
 import java.util.HashMap;
+import java.util.Locale;
 import java.util.StringTokenizer;
 import com.lowagie.text.error_messages.MessageLocalization;
 
@@ -253,7 +254,7 @@ else if (c[k] > 255)
             }
             return new Color(c[0], c[1], c[2], c[3]);
         }
-		name = name.toLowerCase();
+		name = name.toLowerCase(Locale.ROOT);
 		if (!NAMES.containsKey(name))
 			throw new IllegalArgumentException("Color '" + name
 					+ "' not found.");

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -419,7 +419,7 @@ public void drawString(String s, float x, float y) {
 			
             // Check if we need to simulate a bold font.
             // Do nothing if the BaseFont is already bold. This test is not foolproof but it will work most of the times.
-            if (baseFont.getPostscriptFontName().toLowerCase().indexOf("bold") < 0) { 
+            if (baseFont.getPostscriptFontName().toLowerCase(Locale.ROOT).indexOf("bold") < 0) { 
                 // Get the weight of the font so we can detect fonts with a weight
                 // that makes them bold, but the Font.isBold() value is false.
                 Float weight = (Float) font.getAttributes().get(TextAttribute.WEIGHT);

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/wmf/MetaFont.java
Patch:
@@ -51,6 +51,7 @@
 import com.lowagie.text.Document;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
+import java.util.Locale;
 
 import com.lowagie.text.ExceptionConverter;
 import com.lowagie.text.Font;
@@ -127,7 +128,7 @@ public void init(InputMeta in) throws IOException {
         catch (UnsupportedEncodingException e) {
             faceName = new String(name, 0, k);
         }
-        faceName = faceName.toLowerCase();
+        faceName = faceName.toLowerCase(Locale.ROOT);
     }
     
     public BaseFont getFont() {

File: openpdf/src/main/java/com/lowagie/text/pdf/DocumentFont.java
Patch:
@@ -152,6 +152,7 @@ public class DocumentFont extends BaseFont {
 	                    return;
 	                }
 	            }
+	            encoding = enc;
 	            if (PdfName.TYPE0.equals(subType) && enc.equals("Identity-H")) {
 	                processType0(font);
 	                isType0 = true;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfDictionary.java
Patch:
@@ -52,7 +52,6 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.HashMap;
-import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
 

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ContentOperator.java
Patch:
@@ -63,9 +63,9 @@ public interface ContentOperator {
      * @param operands
      *            the operands that come with the operator
      * @param handler
-     *            TODO
+     *            content stream handler that is invoking us
      * @param resources
-     *            TODO
+     *            Pdf Resources found in the file containing the stream.
      */
     void invoke(ArrayList<PdfObject> operands,
                 PdfContentStreamHandler handler, PdfDictionary resources);

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/FinalText.java
Patch:
@@ -47,10 +47,10 @@ public void assemble(TextAssembler p) {
 	/**
 	 * @return
 	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#getFinalText(PdfReader,
-	 *      int, TextAssembler)
+	 *      int, TextAssembler, boolean)
 	 */
 	@Override
-	public FinalText getFinalText(PdfReader reader, int page, TextAssembler assembler) {
+	public FinalText getFinalText(PdfReader reader, int page, TextAssembler assembler, boolean useMarkup) {
 		return this;
 	}
 

File: openpdf/src/main/java/com/lowagie/text/xml/xmp/XmpWriter.java
Patch:
@@ -51,13 +51,11 @@
 
 import com.lowagie.text.pdf.PdfDate;
 import com.lowagie.text.pdf.PdfDictionary;
-import com.lowagie.text.pdf.PdfDocument;
 import com.lowagie.text.pdf.PdfName;
 import com.lowagie.text.pdf.PdfObject;
 import com.lowagie.text.pdf.PdfString;
 import com.lowagie.text.pdf.PdfWriter;
 
-import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;

File: pdf-toolbox/src/test/java/com/lowagie/examples/forms/FormList.java
Patch:
@@ -18,8 +18,6 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.ArrayList;
-import java.util.Map;
-
 import com.lowagie.text.*;
 import com.lowagie.text.pdf.*;
 

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/images/AwtImage.java
Patch:
@@ -22,8 +22,6 @@
 
 import java.awt.*;
 import java.io.ByteArrayOutputStream;
-import java.io.FileOutputStream;
-
 import static org.junit.Assert.*;
 
 /**

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/tables/TableBorders.java
Patch:
@@ -16,7 +16,6 @@
 import java.awt.Color;
 import java.io.FileOutputStream;
 
-import com.lowagie.text.BadElementException;
 import com.lowagie.text.Document;
 import com.lowagie.text.DocumentException;
 import com.lowagie.text.Element;

File: pdf-toolbox/src/test/java/com/lowagie/text/rtf/OnlineExamplesTest.java
Patch:
@@ -4,7 +4,6 @@
 
 import java.lang.reflect.Method;
 
-import com.lowagie.examples.general.HelloWorldPdf;
 import org.junit.Test;
 
 public class OnlineExamplesTest {

File: openpdf/src/main/java/com/lowagie/text/html/Markup.java
Patch:
@@ -53,6 +53,7 @@
 package com.lowagie.text.html;
 
 import java.awt.Color;
+import java.util.Locale;
 import java.util.Properties;
 import java.util.StringTokenizer;
 
@@ -419,7 +420,7 @@ public static float parseLength(String string, float actualFontSize) {
 	public static Color decodeColor(String s) {
 		if (s == null)
 			return null;
-		s = s.toLowerCase().trim();
+		s = s.toLowerCase(Locale.ROOT).trim();
 		try {
 			return WebColors.getRGBColor(s);
 		}
@@ -459,7 +460,7 @@ public static Properties parseAttributes(String string) {
 				value = value.substring(1);
 			if (value.endsWith("\""))
 				value = value.substring(0, value.length() - 1);
-			result.setProperty(key.toLowerCase(), value);
+			result.setProperty(key.toLowerCase(Locale.ROOT), value);
 		}
 		return result;
 	}

File: openpdf/src/main/java/com/lowagie/text/html/WebColors.java
Patch:
@@ -51,6 +51,7 @@
 
 import java.awt.Color;
 import java.util.HashMap;
+import java.util.Locale;
 import java.util.StringTokenizer;
 import com.lowagie.text.error_messages.MessageLocalization;
 
@@ -253,7 +254,7 @@ else if (c[k] > 255)
             }
             return new Color(c[0], c[1], c[2], c[3]);
         }
-		name = name.toLowerCase();
+		name = name.toLowerCase(Locale.ROOT);
 		if (!NAMES.containsKey(name))
 			throw new IllegalArgumentException("Color '" + name
 					+ "' not found.");

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfGraphics2D.java
Patch:
@@ -419,7 +419,7 @@ public void drawString(String s, float x, float y) {
 			
             // Check if we need to simulate a bold font.
             // Do nothing if the BaseFont is already bold. This test is not foolproof but it will work most of the times.
-            if (baseFont.getPostscriptFontName().toLowerCase().indexOf("bold") < 0) { 
+            if (baseFont.getPostscriptFontName().toLowerCase(Locale.ROOT).indexOf("bold") < 0) { 
                 // Get the weight of the font so we can detect fonts with a weight
                 // that makes them bold, but the Font.isBold() value is false.
                 Float weight = (Float) font.getAttributes().get(TextAttribute.WEIGHT);

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/wmf/MetaFont.java
Patch:
@@ -51,6 +51,7 @@
 import com.lowagie.text.Document;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
+import java.util.Locale;
 
 import com.lowagie.text.ExceptionConverter;
 import com.lowagie.text.Font;
@@ -127,7 +128,7 @@ public void init(InputMeta in) throws IOException {
         catch (UnsupportedEncodingException e) {
             faceName = new String(name, 0, k);
         }
-        faceName = faceName.toLowerCase();
+        faceName = faceName.toLowerCase(Locale.ROOT);
     }
     
     public BaseFont getFont() {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfContentStreamHandler.java
Patch:
@@ -48,6 +48,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.ListIterator;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Stack;
 
@@ -694,7 +695,7 @@ public String getOperatorName() {
 		public void invoke(ArrayList<PdfObject> operands,
 				PdfContentStreamHandler handler, PdfDictionary resources) {
 			PdfName tagName = (PdfName) operands.get(0);
-			String realName = tagName.toString().substring(1).toLowerCase();
+			String realName = tagName.toString().substring(1).toLowerCase(Locale.ROOT);
 			if ("artifact".equals(tagName) || "placedpdf".equals(tagName)) {
 				handler.pushContext(null);
 			} else {
@@ -720,7 +721,7 @@ public String getOperatorName() {
 		public void invoke(ArrayList<PdfObject> operands,
 				PdfContentStreamHandler handler, PdfDictionary resources) {
 			String tagName = ((PdfName) operands.get(0)).toString().substring(1)
-					.toLowerCase();
+					.toLowerCase(Locale.ROOT);
 			if ("artifact".equals(tagName) || "placedpdf".equals(tagName)
 					|| handler.contextNames.peek() == null) {
 				tagName = null;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfEncodings.java
Patch:
@@ -605,7 +605,7 @@ static void encodeSequence(int size, byte seqs[], char cid,
 	 *            the conversion class
 	 */
 	public static void addExtraEncoding(String name, ExtraEncoding enc) {
-		extraEncodings.putIfAbsent(name, enc);
+		extraEncodings.putIfAbsent(name.toLowerCase(), enc);
 	}
 
 	private static class WingdingsConversion implements ExtraEncoding {

File: openpdf/src/main/java/com/lowagie/text/pdf/DocumentFont.java
Patch:
@@ -152,6 +152,7 @@ public class DocumentFont extends BaseFont {
 	                    return;
 	                }
 	            }
+	            encoding = enc;
 	            if (PdfName.TYPE0.equals(subType) && enc.equals("Identity-H")) {
 	                processType0(font);
 	                isType0 = true;

File: openpdf/src/main/java/com/lowagie/text/pdf/TrueTypeFont.java
Patch:
@@ -672,7 +672,9 @@ void process(byte ttfAfm[], boolean preload) throws DocumentException, IOExcepti
                 readCMaps();
                 readKerning();
                 readBbox();
-                GlyphWidths = null;
+                // TIBCO Software #4 : Part 1 - START
+                // GlyphWidths = null;
+                // TIBCO Software #4 : Part 1 - END
             }
         }
         finally {

File: openpdf/src/main/java/com/lowagie/text/Document.java
Patch:
@@ -108,7 +108,7 @@ public class Document implements DocListener {
     /**
      * @since	2.1.6
      */
-    private static final String RELEASE = "1.0.6-SNAPSHOT";
+    private static final String RELEASE = VersionBean.VERSION.getImplementationVersion();
     private static final String OPENPDF_VERSION = OPENPDF + " " + RELEASE;
     
 	/**

File: pdf-toolbox/src/main/java/com/lowagie/tools/BuildTutorial.java
Patch:
@@ -54,6 +54,7 @@
 import java.io.FileWriter;
 import java.io.IOException;
 
+import javax.xml.XMLConstants;
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 import javax.xml.transform.Templates;
@@ -171,7 +172,7 @@ public static void convert(File infile, File xslfile, File outfile) {
 		try {
 			// Create transformer factory
 			TransformerFactory factory = TransformerFactory.newInstance();
-
+			factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
 			// Use the factory to create a template containing the xsl file
 			Templates template = factory.newTemplates(new StreamSource(
 					new FileInputStream(xslfile)));

File: pdf-toolbox/src/main/java/com/lowagie/tools/BuildTutorial.java
Patch:
@@ -54,6 +54,7 @@
 import java.io.FileWriter;
 import java.io.IOException;
 
+import javax.xml.XMLConstants;
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 import javax.xml.transform.Templates;
@@ -171,7 +172,7 @@ public static void convert(File infile, File xslfile, File outfile) {
 		try {
 			// Create transformer factory
 			TransformerFactory factory = TransformerFactory.newInstance();
-
+			factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
 			// Use the factory to create a template containing the xsl file
 			Templates template = factory.newTemplates(new StreamSource(
 					new FileInputStream(xslfile)));

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/Word.java
Patch:
@@ -86,7 +86,7 @@ public void assemble(TextAssembler p) {
 	}
 
 	private static String formatPercent(float f) {
-		return String.format("%f.2%%", f);
+		return String.format("%.2f%%", f);
 	}
 
 	/**

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/Word.java
Patch:
@@ -86,7 +86,7 @@ public void assemble(TextAssembler p) {
 	}
 
 	private static String formatPercent(float f) {
-		return String.format("%f.2%%", f);
+		return String.format("%.2f%%", f);
 	}
 
 	/**

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfWriter.java
Patch:
@@ -60,6 +60,7 @@
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Map;
 import java.util.TreeMap;
 import java.util.TreeSet;
@@ -1327,14 +1328,14 @@ public PdfOutline getRootOutline() {
          return directContent.getRootOutline();
      }
 
-     protected java.util.List newBookmarks;
+     protected List newBookmarks;
 
     /**
      * Sets the bookmarks. The list structure is defined in
      * {@link SimpleBookmark}.
      * @param outlines the bookmarks or <CODE>null</CODE> to remove any
      */
-    public void setOutlines(java.util.List outlines) {
+    public void setOutlines(List outlines) {
         newBookmarks = outlines;
     }
 

File: pdf-rtf/src/main/java/com/lowagie/text/rtf/document/output/RtfByteArrayBuffer.java
Patch:
@@ -51,6 +51,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.util.List;
+
 import com.lowagie.text.error_messages.MessageLocalization;
 
 /**
@@ -62,7 +64,7 @@
  */
 public final class RtfByteArrayBuffer extends OutputStream
 {
-	private final java.util.List arrays = new java.util.ArrayList();
+	private final List arrays = new java.util.ArrayList();
 	private byte[] buffer;
 	private int pos = 0;
 	private int size = 0;

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/InspectPDF.java
Patch:
@@ -36,7 +36,6 @@
 package com.lowagie.toolbox.plugins;
 
 import java.io.File;
-import java.util.HashMap;
 import java.util.Map;
 
 import javax.swing.JInternalFrame;
@@ -104,7 +103,7 @@ public void execute() {
 			System.out.println("Rebuilt? " + reader.isRebuilt());
 			// Some metadata
 			System.out.println("=== Metadata ===");
-			HashMap<String, String> info = reader.getInfo();
+			Map<String, String> info = reader.getInfo();
 			String key;
 			String value;
 			for (Map.Entry<String, String> entry: info.entrySet()) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/swing/FileList.java
Patch:
@@ -33,6 +33,7 @@
 import java.awt.event.KeyEvent;
 import java.io.File;
 import java.io.IOException;
+import java.util.List;
 import java.util.Vector;
 
 import javax.swing.*;
@@ -116,7 +117,7 @@ public void drop(DropTargetDropEvent dtde) {
 
     Transferable transferable = dtde.getTransferable();
     try {
-      java.util.List<File> filelist = (java.util.List<File>) transferable.getTransferData(
+      List<File> filelist = (List<File>) transferable.getTransferData(
           DataFlavor.javaFileListFlavor);
       for (File f: filelist) {
         filevector.add(new RowContainer(f));

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/swing/PdfInformationPanel.java
Patch:
@@ -39,7 +39,7 @@
 import java.beans.PropertyChangeListener;
 import java.io.File;
 import java.io.IOException;
-import java.util.HashMap;
+import java.util.Map;
 
 import javax.swing.JFileChooser;
 import javax.swing.JLabel;
@@ -99,9 +99,9 @@ public void createTextFromPDF(File file) {
 
 			try {
 				reader = new PdfReader(new RandomAccessFileOrArray(file.getAbsolutePath()), null);
-				HashMap<String, String> pdfinfo = reader.getInfo();
+				Map<String, String> pdfinfo = reader.getInfo();
 
-				StringBuffer sb = new StringBuffer();
+				StringBuilder sb = new StringBuilder();
 				sb.append("<html>=== Document Information ===<p>");
 				sb.append(reader.getCropBox(page).getHeight() + "*"
 						+ reader.getCropBox(page).getWidth() + "<p>");

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/ViewerPreferences.java
Patch:
@@ -57,8 +57,7 @@ public static void main(String[] args) {
 					new FileOutputStream("NoScaling.pdf"));
 			// step 3:
 			writer1.setViewerPreferences(PdfWriter.PageLayoutTwoColumnLeft);
-			writer2.setViewerPreferences(PdfWriter.HideMenubar
-					| PdfWriter.HideMenubar);
+			writer2.setViewerPreferences(PdfWriter.HideMenubar);
 			writer3.setViewerPreferences(PdfWriter.PageLayoutTwoColumnRight
 					| PdfWriter.PageModeFullScreen
 					| PdfWriter.NonFullScreenPageModeUseThumbs);

File: openpdf/src/main/java/com/lowagie/text/Document.java
Patch:
@@ -108,8 +108,8 @@ public class Document implements DocListener {
     /**
      * @since	2.1.6
      */
-	private static final String RELEASE = "1.0.0-SNAPSHOT";
-	private static final String OPENPDF_VERSION = OPENPDF + " " + RELEASE;
+    private static final String RELEASE = "1.0.5-SNAPSHOT";
+    private static final String OPENPDF_VERSION = OPENPDF + " " + RELEASE;
     
 	/**
 	 * Allows the pdf documents to be produced without compression for debugging

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfAppearance.java
Patch:
@@ -58,7 +58,7 @@
 
 public class PdfAppearance extends PdfTemplate {
 
-    static final Map<String, PdfName> stdFieldFontNames = new HashMap<>();
+    public static final Map<String, PdfName> stdFieldFontNames = new HashMap<>();
     static {
         stdFieldFontNames.put("Courier-BoldOblique", new PdfName("CoBO"));
         stdFieldFontNames.put("Courier-Bold", new PdfName("CoBo"));
@@ -175,4 +175,4 @@ public PdfContentByte getDuplicate() {
         tpl.separator = separator;
         return tpl;
     }
-}
\ No newline at end of file
+}

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/TiffImage.java
Patch:
@@ -325,11 +325,12 @@ else if (rot == TIFFConstants.ORIENTATION_RIGHTTOP || rot == TIFFConstants.ORIEN
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_PLANARCONFIG)
                 && dir.getFieldAsLong(TIFFConstants.TIFFTAG_PLANARCONFIG) == TIFFConstants.PLANARCONFIG_SEPARATE)
                 throw new IllegalArgumentException(MessageLocalization.getComposedMessage("planar.images.are.not.supported"));
-            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
-                throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int samplePerPixel = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL)) // 1,3,4
                 samplePerPixel = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL);
+            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
+                if(samplePerPixel != 4) // TIFFTAG_EXTRASAMPLES is supposed to be set when RGB image data has an alpha channel (the 4th channel in this case).
+                    throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int bitsPerSample = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_BITSPERSAMPLE))
                 bitsPerSample = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_BITSPERSAMPLE);

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/TiffImage.java
Patch:
@@ -325,11 +325,12 @@ else if (rot == TIFFConstants.ORIENTATION_RIGHTTOP || rot == TIFFConstants.ORIEN
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_PLANARCONFIG)
                 && dir.getFieldAsLong(TIFFConstants.TIFFTAG_PLANARCONFIG) == TIFFConstants.PLANARCONFIG_SEPARATE)
                 throw new IllegalArgumentException(MessageLocalization.getComposedMessage("planar.images.are.not.supported"));
-            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
-                throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int samplePerPixel = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL)) // 1,3,4
                 samplePerPixel = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL);
+            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
+                if(samplePerPixel != 4) // TIFFTAG_EXTRASAMPLES is supposed to be set when RGB image data has an alpha channel (the 4th channel in this case).
+                    throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int bitsPerSample = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_BITSPERSAMPLE))
                 bitsPerSample = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_BITSPERSAMPLE);

File: openpdf/src/main/java/com/lowagie/text/pdf/codec/TiffImage.java
Patch:
@@ -325,11 +325,12 @@ else if (rot == TIFFConstants.ORIENTATION_RIGHTTOP || rot == TIFFConstants.ORIEN
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_PLANARCONFIG)
                 && dir.getFieldAsLong(TIFFConstants.TIFFTAG_PLANARCONFIG) == TIFFConstants.PLANARCONFIG_SEPARATE)
                 throw new IllegalArgumentException(MessageLocalization.getComposedMessage("planar.images.are.not.supported"));
-            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
-                throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int samplePerPixel = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL)) // 1,3,4
                 samplePerPixel = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_SAMPLESPERPIXEL);
+            if (dir.isTagPresent(TIFFConstants.TIFFTAG_EXTRASAMPLES))
+                if(samplePerPixel != 4) // TIFFTAG_EXTRASAMPLES is supposed to be set when RGB image data has an alpha channel (the 4th channel in this case).
+                    throw new IllegalArgumentException(MessageLocalization.getComposedMessage("extra.samples.are.not.supported"));
             int bitsPerSample = 1;
             if (dir.isTagPresent(TIFFConstants.TIFFTAG_BITSPERSAMPLE))
                 bitsPerSample = (int)dir.getFieldAsLong(TIFFConstants.TIFFTAG_BITSPERSAMPLE);

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/plugins/InspectPDF.java
Patch:
@@ -36,7 +36,6 @@
 package com.lowagie.toolbox.plugins;
 
 import java.io.File;
-import java.util.HashMap;
 import java.util.Map;
 
 import javax.swing.JInternalFrame;
@@ -104,7 +103,7 @@ public void execute() {
 			System.out.println("Rebuilt? " + reader.isRebuilt());
 			// Some metadata
 			System.out.println("=== Metadata ===");
-			HashMap<String, String> info = reader.getInfo();
+			Map<String, String> info = reader.getInfo();
 			String key;
 			String value;
 			for (Map.Entry<String, String> entry: info.entrySet()) {

File: pdf-toolbox/src/main/java/com/lowagie/toolbox/swing/PdfInformationPanel.java
Patch:
@@ -39,7 +39,7 @@
 import java.beans.PropertyChangeListener;
 import java.io.File;
 import java.io.IOException;
-import java.util.HashMap;
+import java.util.Map;
 
 import javax.swing.JFileChooser;
 import javax.swing.JLabel;
@@ -99,9 +99,9 @@ public void createTextFromPDF(File file) {
 
 			try {
 				reader = new PdfReader(new RandomAccessFileOrArray(file.getAbsolutePath()), null);
-				HashMap<String, String> pdfinfo = reader.getInfo();
+				Map<String, String> pdfinfo = reader.getInfo();
 
-				StringBuffer sb = new StringBuffer();
+				StringBuilder sb = new StringBuilder();
 				sb.append("<html>=== Document Information ===<p>");
 				sb.append(reader.getCropBox(page).getHeight() + "*"
 						+ reader.getCropBox(page).getWidth() + "<p>");

File: pdf-toolbox/src/test/java/com/lowagie/examples/objects/bookmarks/ViewerPreferences.java
Patch:
@@ -57,8 +57,7 @@ public static void main(String[] args) {
 					new FileOutputStream("NoScaling.pdf"));
 			// step 3:
 			writer1.setViewerPreferences(PdfWriter.PageLayoutTwoColumnLeft);
-			writer2.setViewerPreferences(PdfWriter.HideMenubar
-					| PdfWriter.HideMenubar);
+			writer2.setViewerPreferences(PdfWriter.HideMenubar);
 			writer3.setViewerPreferences(PdfWriter.PageLayoutTwoColumnRight
 					| PdfWriter.PageModeFullScreen
 					| PdfWriter.NonFullScreenPageModeUseThumbs);

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -673,6 +673,9 @@ private boolean equalsArray(byte ar1[], byte ar2[], int size) {
   private void readDecryptedDocObj() throws IOException {
     if (encrypted)
       return;
+    if (trailer == null) {
+      return;
+    }
     PdfObject encDic = trailer.get(PdfName.ENCRYPT);
     if (encDic == null || encDic.toString().equals("null"))
       return;
@@ -1664,9 +1667,6 @@ protected void rebuildXref() throws IOException {
         }
       }
     }
-    if (trailer == null)
-      throw new InvalidPdfException(
-          MessageLocalization.getComposedMessage("trailer.not.found"));
     xref = new int[top * 2];
     for (int k = 0; k < top; ++k) {
       int obj[] = xr[k];

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfTextExtractor.java
Patch:
@@ -214,6 +214,9 @@ public String getTextFromPage(int page) throws IOException {
 	public String getTextFromPage(int page, boolean useContainerMarkup)
 			throws IOException {
 		PdfDictionary pageDict = reader.getPageN(page);
+		if (pageDict == null) {
+			return ""; 
+		}
 		PdfDictionary resources = pageDict.getAsDict(PdfName.RESOURCES);
 
 		renderListener.reset();

File: openpdf/src/main/java/com/lowagie/text/pdf/PRTokeniser.java
Patch:
@@ -349,6 +349,9 @@ public boolean nextToken() throws IOException {
             case '<':
             {
                 int v1 = file.read();
+                while (isWhitespace(v1)) {
+                    v1 = file.read();
+                }
                 if (v1 == '<') {
                     type = TK_START_DIC;
                     break;

File: openpdf/src/main/java/com/lowagie/text/pdf/PdfReader.java
Patch:
@@ -673,6 +673,9 @@ private boolean equalsArray(byte ar1[], byte ar2[], int size) {
   private void readDecryptedDocObj() throws IOException {
     if (encrypted)
       return;
+    if (trailer == null) {
+      return;
+    }
     PdfObject encDic = trailer.get(PdfName.ENCRYPT);
     if (encDic == null || encDic.toString().equals("null"))
       return;
@@ -1664,9 +1667,6 @@ protected void rebuildXref() throws IOException {
         }
       }
     }
-    if (trailer == null)
-      throw new InvalidPdfException(
-          MessageLocalization.getComposedMessage("trailer.not.found"));
     xref = new int[top * 2];
     for (int k = 0; k < top; ++k) {
       int obj[] = xr[k];

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/PdfTextExtractor.java
Patch:
@@ -214,6 +214,9 @@ public String getTextFromPage(int page) throws IOException {
 	public String getTextFromPage(int page, boolean useContainerMarkup)
 			throws IOException {
 		PdfDictionary pageDict = reader.getPageN(page);
+		if (pageDict == null) {
+			return ""; 
+		}
 		PdfDictionary resources = pageDict.getAsDict(PdfName.RESOURCES);
 
 		renderListener.reset();

File: openpdf/src/main/java/com/lowagie/text/Rectangle.java
Patch:
@@ -288,7 +288,7 @@ public ArrayList getChunks() {
   }
 
   /**
-   * @see com.itextpdf.text.Element#isContent()
+   * @see com.lowagie.text.Element#isContent()
    * @since iText 2.0.8
    */
   @Override
@@ -297,7 +297,7 @@ public boolean isContent() {
   }
 
   /**
-   * @see com.itextpdf.text.Element#isNestable()
+   * @see com.lowagie.text.Element#isNestable()
    * @since iText 2.0.8
    */
   @Override

File: openpdf/src/main/java/com/lowagie/text/pdf/OcspClientBouncyCastle.java
Patch:
@@ -223,7 +223,7 @@ private static OCSPReq generateOCSPRequest(X509Certificate issuerCert,
 
   /**
    * @return a byte array
-   * @see com.itextpdf.text.pdf.OcspClient#getEncoded()
+   * @see com.lowagie.text.pdf.OcspClient
    */
   @Override
   public byte[] getEncoded() {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/MarkedUpTextAssembler.java
Patch:
@@ -205,8 +205,7 @@ public void renderText(FinalText finalText) {
 	 * Captures text using a simplified algorithm for inserting hard returns and
 	 * spaces
 	 * 
-	 * @see com.lowagie.text.pdf.parser.AbstractRenderListener#renderText(java.lang.String,
-	 *      com.lowagie.text.pdf.parser.GraphicsState,
+	 * @see com.lowagie.text.pdf.parser.GraphicsState,
 	 *      com.lowagie.text.pdf.parser.Matrix,
 	 *      com.lowagie.text.pdf.parser.Matrix)
 	 */
@@ -266,7 +265,6 @@ public void renderText(ParsedTextImpl partialWord) {
 	/**
 	 * Getter.
 	 * 
-	 * @see SimpleTextExtractingPdfContentRenderListener#_reader
 	 * @return reader
 	 */
 	protected PdfReader getReader() {

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/ParsedTextImpl.java
Patch:
@@ -60,7 +60,7 @@ public abstract class ParsedTextImpl implements TextAssemblyBuffer {
 	 *            font ascent above baseline
 	 * @param descent
 	 *            font descent below the baseling
-	 * @param width
+	 * @param spaceWidth
 	 *            What is the width of the space in this font....
 	 */
 	ParsedTextImpl(String text, Vector startPoint, Vector endPoint,

File: openpdf/src/main/java/com/lowagie/text/pdf/parser/RenderListener.java
Patch:
@@ -49,7 +49,7 @@
 package com.lowagie.text.pdf.parser;
 
 /**
- * Callback interface for render operations during {@link PdfContentStreamProcessor} execution
+ * Callback interface for render operations during execution
  * 
  * @since 2.1.6
  */

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseFont.java
Patch:
@@ -852,8 +852,9 @@ public static BaseFont createFont(String name, String encoding,
 		}
 		if (cached) {
 			fontCache.putIfAbsent(key, fontBuilt);
+      return fontCache.get(key);
 		}
-		return fontCache.get(key);
+		return fontBuilt;
 	}
 
 	/**

File: openpdf/src/main/java/com/lowagie/text/pdf/BaseFont.java
Patch:
@@ -852,8 +852,9 @@ public static BaseFont createFont(String name, String encoding,
 		}
 		if (cached) {
 			fontCache.putIfAbsent(key, fontBuilt);
+      return fontCache.get(key);
 		}
-		return fontCache.get(key);
+		return fontBuilt;
 	}
 
 	/**

File: pdf-toolbox/src/test/java/com/lowagie/examples/rtf/RtfTest.java
Patch:
@@ -116,7 +116,7 @@ public static void main(String[] args) {
             a.setReference("http://www.uni-klu.ac.at");
             doc.add(a);
 
-            Image img = Image.getInstance("www/lowagie/images/pngnow.png");
+            Image img = Image.getInstance("src/test/java/com/lowagie/examples/rtf/pngnow.png");
             doc.add(new Chunk(img, 0, 0));
             doc.add(new Annotation("Mark", "This works!"));
 

File: src/main/java/com/lowagie/text/pdf/parser/Word.java
Patch:
@@ -119,7 +119,7 @@ private String wordMarkup(String text, PdfReader reader, int page,
 			}
 		}
 		float xOffset = clipBox.getLeft() - mediaBox.getLeft();
-		float yOffset = clipBox.getTop() - mediaBox.getTop(); // opposite order
+		float yOffset = clipBox.getTop() - mediaBox.getTop();
 		Vector startPoint = getStartPoint();
 		Vector endPoint = getEndPoint();
 		float pageWidth = clipBox.getWidth();

File: src/main/java/com/lowagie/text/pdf/parser/Word.java
Patch:
@@ -134,11 +134,11 @@ private String wordMarkup(String text, PdfReader reader, int page,
 		float height = getAscent();
 		float heightPercent = height / pageHeight * 100.0f;
 		String myId = assembler.getWordId();
-		result.append("<span class=\"t-word\" style=\"bottom: ")
+		result.append("<span class=\"t-word sync_word\" style=\"bottom: ")
 				.append(bottomPercent).append("%; left: ").append(leftPercent)
 				.append("%; width: ").append(widthPercent)
 				.append("%; height: ").append(heightPercent).append("%;\"")
-				.append(" id=\"t-word-id").append(myId).append("\">")
+				.append(" id=\"").append(myId).append("\">")
 				.append(getText().trim()).append(" ");
 		result.append("</span> ");
 

File: src/main/java/com/lowagie/text/pdf/parser/FinalText.java
Patch:
@@ -28,11 +28,11 @@ public String getText() {
 
 	/**
 	 * @param p
-	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler)
+	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler, String)
 	 */
 	@Override
-	public void accumulate(TextAssembler p) {
-		p.process(this);
+	public void accumulate(TextAssembler p, String contextName) {
+		p.process(this, contextName);
 	}
 
 	/**

File: src/main/java/com/lowagie/text/pdf/parser/ParsedText.java
Patch:
@@ -204,11 +204,11 @@ private static float convertHeightToUser(float height,
 	}
 
 	/**
-	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler)
+	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler, String)
 	 */
 	@Override
-	public void accumulate(TextAssembler p) {
-		p.process(this);
+	public void accumulate(TextAssembler p, String contextName) {
+		p.process(this, contextName);
 	}
 
 	/**

File: src/main/java/com/lowagie/text/pdf/parser/TextAssemblyBuffer.java
Patch:
@@ -38,10 +38,11 @@ public abstract FinalText getFinalText(PdfReader reader, int page,
 	 * 
 	 * @param p
 	 *            the assembler that is visiting us.
+	 * @param contextName TODO
 	 * 
-	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler)
+	 * @see com.lowagie.text.pdf.parser.TextAssemblyBuffer#accumulate(com.lowagie.text.pdf.parser.TextAssembler, String)
 	 */
-	public abstract void accumulate(TextAssembler p);
+	public abstract void accumulate(TextAssembler p, String contextName);
 
 	/**
 	 * @param p

File: src/main/java/com/lowagie/text/pdf/parser/Word.java
Patch:
@@ -72,8 +72,8 @@ public class Word extends ParsedTextImpl {
 	 */
 
 	@Override
-	public void accumulate(TextAssembler p) {
-		p.process(this);
+	public void accumulate(TextAssembler p, String contextName) {
+		p.process(this, contextName);
 	}
 
 	/**

File: src/main/java/com/lowagie/text/pdf/PdfPCell.java
Patch:
@@ -1005,7 +1005,7 @@ public float getMaxHeight() {
 			}
 		}
 		float height = getHeight();
-		if (height < getFixedHeight())
+		if (hasFixedHeight())
 			height = getFixedHeight();
 		else if (height < getMinimumHeight())
 			height = getMinimumHeight();

File: src/main/java/com/lowagie/text/pdf/PdfPCell.java
Patch:
@@ -1005,7 +1005,7 @@ public float getMaxHeight() {
 			}
 		}
 		float height = getHeight();
-		if (height < getFixedHeight())
+		if (hasFixedHeight())
 			height = getFixedHeight();
 		else if (height < getMinimumHeight())
 			height = getMinimumHeight();

File: src/main/java/com/lowagie/text/pdf/PdfPCell.java
Patch:
@@ -971,7 +971,7 @@ public float getMaxHeight() {
 			setBottom(getTop() - getEffectivePaddingTop() - getEffectivePaddingBottom() - refHeight);
 		}
 		else {
-			if (pivoted && hasFixedHeight())
+			if ((pivoted && hasFixedHeight()) || getColumn() == null)
 				setBottom(getTop() - getFixedHeight());
 			else {
 				ColumnText ct = ColumnText.duplicate(getColumn());
@@ -986,7 +986,7 @@ public float getMaxHeight() {
 					right = isNoWrap() ? PdfPRow.RIGHT_LIMIT : getRight() - getEffectivePaddingRight();
 					top = getTop() - getEffectivePaddingTop();
 					left = getLeft() + getEffectivePaddingLeft();
-					bottom = hasFixedHeight() ? top + getEffectivePaddingBottom() - getFixedHeight() : PdfPRow.BOTTOM_LIMIT;
+					bottom = hasFixedHeight() ? getTop() + getEffectivePaddingBottom() - getFixedHeight() : PdfPRow.BOTTOM_LIMIT;
 				}
 				PdfPRow.setColumn(ct, left, bottom, right, top);
 				try {

File: src/main/java/com/lowagie/text/pdf/PdfPTable.java
Patch:
@@ -876,7 +876,7 @@ public float getRowHeight(int idx, boolean firsttime) {
         	tmprow = (PdfPRow)rows.get(idx - rs);
         	cell = tmprow.getCells()[i];
         	float tmp = 0;
-        	if ( cell.getRowspan() == rs + 1) {
+        	if (cell != null && cell.getRowspan() == rs + 1) {
         		tmp = cell.getMaxHeight();
         		while (rs > 0) {
         			tmp -= getRowHeight(idx - rs);

File: src/core/com/lowagie/text/pdf/PdfPCell.java
Patch:
@@ -971,7 +971,7 @@ public float getMaxHeight() {
 			setBottom(getTop() - getEffectivePaddingTop() - getEffectivePaddingBottom() - refHeight);
 		}
 		else {
-			if (pivoted && hasFixedHeight())
+			if ((pivoted && hasFixedHeight()) || getColumn() == null)
 				setBottom(getTop() - getFixedHeight());
 			else {
 				ColumnText ct = ColumnText.duplicate(getColumn());
@@ -986,7 +986,7 @@ public float getMaxHeight() {
 					right = isNoWrap() ? PdfPRow.RIGHT_LIMIT : getRight() - getEffectivePaddingRight();
 					top = getTop() - getEffectivePaddingTop();
 					left = getLeft() + getEffectivePaddingLeft();
-					bottom = hasFixedHeight() ? top + getEffectivePaddingBottom() - getFixedHeight() : PdfPRow.BOTTOM_LIMIT;
+					bottom = hasFixedHeight() ? getTop() + getEffectivePaddingBottom() - getFixedHeight() : PdfPRow.BOTTOM_LIMIT;
 				}
 				PdfPRow.setColumn(ct, left, bottom, right, top);
 				try {

