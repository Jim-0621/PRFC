File: support/src/main/java/com/yanzhenjie/recyclerview/SwipeMenuLayout.java
Patch:
@@ -70,6 +70,8 @@ public SwipeMenuLayout(Context context, AttributeSet attrs) {
 
     public SwipeMenuLayout(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
+        setClickable(true);
+
         TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.SwipeMenuLayout);
         mLeftViewId = typedArray.getResourceId(R.styleable.SwipeMenuLayout_leftViewId, mLeftViewId);
         mContentViewId = typedArray.getResourceId(R.styleable.SwipeMenuLayout_contentViewId, mContentViewId);

File: x/src/main/java/com/yanzhenjie/recyclerview/SwipeMenuLayout.java
Patch:
@@ -73,6 +73,8 @@ public SwipeMenuLayout(Context context, AttributeSet attrs) {
 
     public SwipeMenuLayout(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
+        setClickable(true);
+
         TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.SwipeMenuLayout);
         mLeftViewId = typedArray.getResourceId(R.styleable.SwipeMenuLayout_leftViewId, mLeftViewId);
         mContentViewId = typedArray.getResourceId(R.styleable.SwipeMenuLayout_contentViewId, mContentViewId);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeAdapterWrapper.java
Patch:
@@ -155,7 +155,7 @@ public final void onBindViewHolder(RecyclerView.ViewHolder holder, int position,
         View itemView = holder.itemView;
         position -= getHeaderItemCount();
 
-        if (itemView instanceof SwipeMenuLayout) {
+        if (itemView instanceof SwipeMenuLayout && mSwipeMenuCreator != null) {
             SwipeMenuLayout menuLayout = (SwipeMenuLayout)itemView;
             SwipeMenu leftMenu = new SwipeMenu(menuLayout);
             SwipeMenu rightMenu = new SwipeMenu(menuLayout);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuView.java
Patch:
@@ -23,6 +23,7 @@
 import android.support.v7.widget.RecyclerView;
 import android.text.TextUtils;
 import android.util.AttributeSet;
+import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.widget.ImageView;
@@ -111,7 +112,7 @@ private TextView createTitle(SwipeMenuItem item) {
         textView.setGravity(Gravity.CENTER);
         int textSize = item.getTextSize();
         if (textSize > 0)
-            textView.setTextSize(textSize);
+            textView.setTextSize(TypedValue.COMPLEX_UNIT_SP, textSize);
         ColorStateList textColor = item.getTitleColor();
         if (textColor != null)
             textView.setTextColor(textColor);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuBridge.java
Patch:
@@ -30,6 +30,7 @@
  */
 public final class SwipeMenuBridge {
 
+    @SwipeMenuRecyclerView.DirectionMode
     private final int mDirection;
     private final int mPosition;
     private final SwipeSwitch mSwipeSwitch;
@@ -39,7 +40,7 @@ public final class SwipeMenuBridge {
     TextView mTextView;
     ImageView mImageView;
 
-    SwipeMenuBridge(int direction, int position, SwipeSwitch swipeSwitch, View viewRoot) {
+    SwipeMenuBridge(@SwipeMenuRecyclerView.DirectionMode int direction, int position, SwipeSwitch swipeSwitch, View viewRoot) {
         mDirection = direction;
         mPosition = position;
         mSwipeSwitch = swipeSwitch;
@@ -84,6 +85,7 @@ public SwipeMenuBridge setText(String title) {
         return this;
     }
 
+    @SwipeMenuRecyclerView.DirectionMode
     public int getDirection() {
         return mDirection;
     }

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeAdapterWrapper.java
Patch:
@@ -204,7 +204,6 @@ public int getSpanSize(int position) {
     @Override
     public void onViewAttachedToWindow(RecyclerView.ViewHolder holder) {
         //noinspection unchecked
-        mAdapter.onViewAttachedToWindow(holder);
         int position = holder.getLayoutPosition();
 
         if (isHeaderView(position) || isFooterView(position)) {
@@ -213,6 +212,8 @@ public void onViewAttachedToWindow(RecyclerView.ViewHolder holder) {
                 StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) lp;
                 p.setFullSpan(true);
             }
+        } else {
+            mAdapter.onViewAttachedToWindow(holder);
         }
     }
 

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuRecyclerView.java
Patch:
@@ -369,6 +369,7 @@ public void smoothOpenMenu(int position, @DirectionMode int direction, int durat
                 mOldSwipedLayout.smoothCloseMenu();
             }
         }
+        position += getHeaderItemCount();
         ViewHolder vh = findViewHolderForAdapterPosition(position);
         if (vh != null) {
             View itemView = getSwipeMenuView(vh.itemView);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/widget/DefaultLoadMoreView.java
Patch:
@@ -49,6 +49,7 @@ public DefaultLoadMoreView(Context context, @Nullable AttributeSet attrs) {
         super(context, attrs);
         setLayoutParams(new ViewGroup.LayoutParams(-1, -2));
         setGravity(Gravity.CENTER);
+        setVisibility(GONE);
 
         DisplayMetrics displayMetrics = getResources().getDisplayMetrics();
 

File: sample/src/main/java/com/yanzhenjie/recyclerview/swipe/sample/activity/load/DefineActivity.java
Patch:
@@ -166,6 +166,7 @@ public DefineLoadMoreView(Context context) {
             super(context);
             setLayoutParams(new ViewGroup.LayoutParams(-1, -2));
             setGravity(Gravity.CENTER);
+            setVisibility(GONE);
 
             inflate(getContext(), R.layout.layout_fotter_loadmore, this);
             mLoadingView = (LoadingView) findViewById(R.id.loading_view);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenu.java
Patch:
@@ -43,12 +43,11 @@ public class SwipeMenu {
 
     private int orientation = HORIZONTAL;
 
-    private List<SwipeMenuItem> mSwipeMenuItems;
+    private List<SwipeMenuItem> mSwipeMenuItems = new ArrayList<>(2);
 
     public SwipeMenu(SwipeMenuLayout swipeMenuLayout, int viewType) {
         this.mSwipeMenuLayout = swipeMenuLayout;
         this.mViewType = viewType;
-        this.mSwipeMenuItems = new ArrayList<>(2);
     }
 
     /**

File: sample/src/main/java/com/yanzhenjie/recyclerview/swipe/sample/App.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.yanzhenjie.swiperecyclerview;
+package com.yanzhenjie.recyclerview.swipe.sample;
 
 import android.app.Application;
 

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuLayout.java
Patch:
@@ -170,7 +170,8 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
                 return Math.abs(disX) > mScaledTouchSlop && Math.abs(disX) > Math.abs(disY);
             }
             case MotionEvent.ACTION_UP: {
-                boolean isClick = mSwipeCurrentHorizontal.isClickOnContentView(getWidth(), ev.getX());
+                boolean isClick = mSwipeCurrentHorizontal != null
+                        && mSwipeCurrentHorizontal.isClickOnContentView(getWidth(), ev.getX());
                 if (isMenuOpen() && isClick) {
                     smoothCloseMenu();
                     return true;

File: sample/src/main/java/com/yanzhenjie/swiperecyclerview/adapter/MenuViewPagerAdapter.java
Patch:
@@ -24,11 +24,11 @@
 /**
  * Created by Yan Zhenjie on 2016/8/12.
  */
-public class MenuPagerAdapter extends FragmentPagerAdapter {
+public class MenuViewPagerAdapter extends FragmentPagerAdapter {
 
     private List<Fragment> fragments;
 
-    public MenuPagerAdapter(FragmentManager fragmentManager, List<Fragment> fragments) {
+    public MenuViewPagerAdapter(FragmentManager fragmentManager, List<Fragment> fragments) {
         super(fragmentManager);
         this.fragments = fragments;
     }

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuRecyclerView.java
Patch:
@@ -397,7 +397,7 @@ private boolean handleUnDown(int x, int y, boolean defaultValue) {
         int disX = mDownX - x;
         int disY = mDownY - y;
         // swipe
-        if (Math.abs(disX) > mViewConfig.getScaledTouchSlop())
+        if (Math.abs(disX) > mViewConfig.getScaledTouchSlop() && Math.abs(disX) > Math.abs(disY))
             defaultValue = false;
         // click
         if (Math.abs(disY) < mViewConfig.getScaledTouchSlop() && Math.abs(disX) < mViewConfig.getScaledTouchSlop())

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuLayout.java
Patch:
@@ -17,6 +17,7 @@
 
 import android.content.Context;
 import android.content.res.TypedArray;
+import android.support.v4.view.ViewCompat;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -236,7 +237,7 @@ public boolean onTouchEvent(MotionEvent ev) {
                                 smoothCloseMenu(duration);
                             }
                         }
-                        postInvalidateOnAnimation();
+                        ViewCompat.postInvalidateOnAnimation(this);
                     }
                 } else {
                     judgeOpenClose(dx, dy);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/touch/DefaultItemTouchHelperCallback.java
Patch:
@@ -16,7 +16,6 @@
 package com.yanzhenjie.recyclerview.swipe.touch;
 
 import android.graphics.Canvas;
-import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.GridLayoutManager;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
@@ -111,7 +110,7 @@ public void onChildDraw(Canvas c, RecyclerView recyclerView, RecyclerView.ViewHo
         if (actionState == ItemTouchHelper.ACTION_STATE_SWIPE) {
             //1.ItemView--ViewHolder; 2.侧滑条目的透明度程度关联谁？dX(delta增量，范围：当前条目-width~width)。
             float alpha = 1 - Math.abs(dX) / viewHolder.itemView.getWidth();
-            ViewCompat.setAlpha(viewHolder.itemView, alpha);//1~0
+            viewHolder.itemView.setAlpha(alpha);//1~0
         }
         // super里面自动实现了viewHolder.itemView.setTranslationX(dX);
         super.onChildDraw(c, recyclerView, viewHolder, dX, dY, actionState, isCurrentlyActive);

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/SwipeMenuLayout.java
Patch:
@@ -33,7 +33,7 @@
  */
 public class SwipeMenuLayout extends FrameLayout implements SwipeSwitch {
 
-    public static final int DEFAULT_SCROLLER_DURATION = 300;
+    public static final int DEFAULT_SCROLLER_DURATION = 200;
 
     private int mLeftViewId = 0;
     private int mContentViewId = 0;

File: recyclerview-swipe/src/main/java/com/yanzhenjie/recyclerview/swipe/touch/DefaultItemTouchHelperCallback.java
Patch:
@@ -16,6 +16,7 @@
 package com.yanzhenjie.recyclerview.swipe.touch;
 
 import android.graphics.Canvas;
+import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.GridLayoutManager;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
@@ -110,7 +111,7 @@ public void onChildDraw(Canvas c, RecyclerView recyclerView, RecyclerView.ViewHo
         if (actionState == ItemTouchHelper.ACTION_STATE_SWIPE) {
             //1.ItemView--ViewHolder; 2.侧滑条目的透明度程度关联谁？dX(delta增量，范围：当前条目-width~width)。
             float alpha = 1 - Math.abs(dX) / viewHolder.itemView.getWidth();
-            viewHolder.itemView.setAlpha(alpha);//1~0
+            ViewCompat.setAlpha(viewHolder.itemView, alpha);//1~0
         }
         // super里面自动实现了viewHolder.itemView.setTranslationX(dX);
         super.onChildDraw(c, recyclerView, viewHolder, dX, dY, actionState, isCurrentlyActive);

File: sample/src/main/java/com/yanzhenjie/swiperecyclerview/activity/DragSwipeFlagsActivity.java
Patch:
@@ -143,6 +143,9 @@ public int onSwipeFlags(RecyclerView recyclerView, RecyclerView.ViewHolder targe
     private OnItemMoveListener onItemMoveListener = new OnItemMoveListener() {
         @Override
         public boolean onItemMove(int fromPosition, int toPosition) {
+            if (toPosition == 0) {// 保证第一个不被挤走。
+                return false;
+            }
             Collections.swap(mStrings, fromPosition, toPosition);
             mMenuAdapter.notifyItemMoved(fromPosition, toPosition);
             return true;

