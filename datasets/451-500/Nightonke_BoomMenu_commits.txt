File: boommenu/src/main/java/com/nightonke/boommenu/Piece/BoomPiece.java
Patch:
@@ -24,6 +24,8 @@ public BoomPiece(Context context) {
 
     public abstract void setColor(int color);
 
+    public abstract void setColorRes(int colorRes);
+
     public void place(int left, int top, int width, int height) {
         FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) getLayoutParams();
         if (layoutParams != null) {

File: boommenu/src/main/java/com/nightonke/boommenu/Piece/Dot.java
Patch:
@@ -36,4 +36,7 @@ public void init(int color, int cornerRadius) {
     public void setColor(int color) {
         ((GradientDrawable)getBackground()).setColor(color);
     }
+
+    @Override
+    public void setColorRes(int colorRes) { setColor(Util.getColor(getContext(), colorRes)); }
 }

File: boommenu/src/main/java/com/nightonke/boommenu/Piece/Ham.java
Patch:
@@ -32,4 +32,7 @@ public void init(int color, int cornerRadius) {
     public void setColor(int color) {
         ((GradientDrawable)getBackground()).setColor(color);
     }
+
+    @Override
+    public void setColorRes(int colorRes) { setColor(Util.getColor(getContext(), colorRes)); }
 }

File: boommenu/src/main/java/com/nightonke/boommenu/Piece/PiecePlaceManager.java
Patch:
@@ -463,12 +463,14 @@ public static BoomPiece createPiece(Context context,
 
     private static Dot createDot(Context context, BoomButtonBuilder builder, int pieceCornerRadius) {
         Dot dot = new Dot(context);
+        builder.piece(dot);
         dot.init(builder.pieceColor(context), pieceCornerRadius);
         return dot;
     }
 
     private static Ham createHam(Context context, BoomButtonBuilder builder, int pieceCornerRadius) {
         Ham ham = new Ham(context);
+        builder.piece(ham);
         ham.init(builder.pieceColor(context), pieceCornerRadius);
         return ham;
     }

File: app/src/main/java/com/nightonke/boommenusample/SquareAndPieceCornerRadiusActivity.java
Patch:
@@ -5,6 +5,8 @@
 
 import com.nightonke.boommenu.BoomMenuButton;
 
+import static com.nightonke.boommenusample.R.id.bmb1;
+
 public class SquareAndPieceCornerRadiusActivity extends AppCompatActivity {
 
     @Override

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/BoomButtonBuilder.java
Patch:
@@ -103,6 +103,7 @@ public abstract class BoomButtonBuilder {
     int buttonWidth = Util.dp2px(300);
     int buttonHeight = Util.dp2px(60);
     int buttonCornerRadius = Util.dp2px(5);
+    boolean isRound = true;  // only for simple circle/text inside/text outside circle button
 
     public int pieceColor(Context context) {
         if (pieceColor == null && pieceColorRes == null)

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/HamButton.java
Patch:
@@ -10,6 +10,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 
+import com.nightonke.boommenu.ButtonEnum;
 import com.nightonke.boommenu.R;
 import com.nightonke.boommenu.Util;
 
@@ -27,6 +28,7 @@ public class HamButton extends BoomButton {
     private HamButton(Builder builder, Context context) {
         super(context);
         this.context = context;
+        this.buttonEnum = ButtonEnum.Ham;
         init(builder);
     }
 

File: boommenu/src/main/java/com/nightonke/boommenu/Piece/BoomPiece.java
Patch:
@@ -20,7 +20,7 @@ public BoomPiece(Context context) {
         super(context);
     }
 
-    public abstract void init(int color);
+    public abstract void init(int color, int cornerRadius);
 
     public abstract void setColor(int color);
 

File: boommenu/src/main/java/com/nightonke/boommenu/Piece/Ham.java
Patch:
@@ -21,9 +21,10 @@ public Ham(Context context) {
     }
 
     @Override
-    public void init(int color) {
-        Drawable backgroundDrawable = Util.getDrawable(this, R.drawable.piece_ham, null);
+    public void init(int color, int cornerRadius) {
+        Drawable backgroundDrawable = Util.getDrawable(this, R.drawable.piece, null);
         ((GradientDrawable)backgroundDrawable).setColor(color);
+        ((GradientDrawable)backgroundDrawable).setCornerRadius(cornerRadius);
         Util.setDrawable(this, backgroundDrawable);
     }
 

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/ButtonPlaceManager.java
Patch:
@@ -786,7 +786,7 @@ public static ArrayList<Point> getHamButtonPositions(ButtonPlaceEnum placeEnum,
                                                          float buttonBottomMargin,
                                                          float buttonLeftMargin,
                                                          float buttonRightMargin,
-                                                         float bottomHamButtonTopMargin) {
+                                                         Float bottomHamButtonTopMargin) {
         ArrayList<Point> positions = new ArrayList<>(buttonNumber);
         float w = buttonWidth, h = buttonHeight;
         float hm = buttonHorizontalMargin, vm = buttonVerticalMargin;
@@ -821,7 +821,7 @@ public static ArrayList<Point> getHamButtonPositions(ButtonPlaceEnum placeEnum,
                     positions.add(point(0, 0));
                     for (int i = 0; i < half; i++) positions.add(point(0, h + vm + i * (h + vm)));
                 }
-                if (buttonNumber >= 2 && bottomHamButtonTopMargin != Util.dp2px(-1))
+                if (buttonNumber >= 2 && bottomHamButtonTopMargin != null)
                     positions.get(positions.size() - 1).offset(0, (int) (bottomHamButtonTopMargin - vm));
                 break;
         }

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/HamButton.java
Patch:
@@ -24,7 +24,7 @@
 
 public class HamButton extends BoomButton {
 
-    protected HamButton(Builder builder, Context context) {
+    private HamButton(Builder builder, Context context) {
         super(context);
         this.context = context;
         init(builder);

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/TextInsideCircleButton.java
Patch:
@@ -22,7 +22,7 @@
 
 public class TextInsideCircleButton extends BoomButton {
 
-    protected TextInsideCircleButton(Builder builder, Context context) {
+    private TextInsideCircleButton(Builder builder, Context context) {
         super(context);
         this.context = context;
         init(builder);

File: boommenu/src/main/java/com/nightonke/boommenu/BoomButtons/TextOutsideCircleButton.java
Patch:
@@ -22,7 +22,7 @@
 
 public class TextOutsideCircleButton extends BoomButton {
 
-    protected TextOutsideCircleButton(Builder builder, Context context) {
+    private TextOutsideCircleButton(Builder builder, Context context) {
         super(context);
         this.context = context;
         init(builder);

File: boommenu/src/main/java/com/nightonke/boommenu/Util.java
Patch:
@@ -308,7 +308,7 @@ public static int getLighterColor(int color) {
         return Color.HSVToColor(hsv);
     }
 
-    private static int[] colors = new int[] {
+    private static final int[] colors = new int[] {
             Color.parseColor("#F44336"),
             Color.parseColor("#E91E63"),
             Color.parseColor("#9C27B0"),
@@ -329,7 +329,7 @@ public static int getLighterColor(int color) {
             Color.parseColor("#607D8B"),
     };
 
-    private static ArrayList<Integer> usedColor = new ArrayList<>();
+    private static final ArrayList<Integer> usedColor = new ArrayList<>();
 
     public static int getColor() {
         Random random = new Random();

File: boommenu/src/main/java/com/nightonke/boommenu/Animation/ShareLinesView.java
Patch:
@@ -9,6 +9,8 @@
 import android.view.View;
 import android.widget.FrameLayout;
 
+import com.nightonke.boommenu.Util;
+
 import java.util.ArrayList;
 
 
@@ -59,7 +61,7 @@ public void setData(ArrayList<Point> piecePositions,
                         long hideDuration,
                         long hideDelay) {
         float xOffset = dotRadius - lineWidth / 4f;
-        float yOffset = (float) (dotRadius - lineWidth * Math.sqrt(3) / 4f) + 0.5f;
+        float yOffset = (float) (dotRadius - lineWidth * Math.sqrt(3) / 4f) + Util.dp2px(0.25f);
 
         this.piecePositions = new ArrayList<>();
         for (Point piecePosition : piecePositions) {

File: app/src/main/java/com/nightonke/boommenusample/ActionBarActivity.java
Patch:
@@ -40,12 +40,12 @@ protected void onCreate(Bundle savedInstanceState) {
         leftBmb.setPiecePlaceEnum(PiecePlaceEnum.DOT_9_1);
         leftBmb.setButtonPlaceEnum(ButtonPlaceEnum.SC_9_1);
         for (int i = 0; i < leftBmb.getPiecePlaceEnum().pieceNumber(); i++)
-            leftBmb.addBuilder(BuilderManager.getTextOutsideCircleButtonBuilder());
+            leftBmb.addBuilder(BuilderManager.getTextOutsideCircleButtonBuilderWithDifferentPieceColor());
 
         rightBmb.setButtonEnum(ButtonEnum.Ham);
         rightBmb.setPiecePlaceEnum(PiecePlaceEnum.HAM_4);
         rightBmb.setButtonPlaceEnum(ButtonPlaceEnum.HAM_4);
         for (int i = 0; i < rightBmb.getPiecePlaceEnum().pieceNumber(); i++)
-            rightBmb.addBuilder(BuilderManager.getHamButtonBuilder());
+            rightBmb.addBuilder(BuilderManager.getHamButtonBuilderWithDifferentPieceColor());
     }
 }

File: app/src/main/java/com/nightonke/boommenusample/ListenerActivity.java
Patch:
@@ -49,7 +49,7 @@ public void onBoomWillShow() {
             @Override
             public void onClicked(int index, BoomButton boomButton) {
                 // If you have implement listeners for boom-buttons in builders,
-                // then you should add any listener here for duplicate callbacks.
+                // then you shouldn't add any listener here for duplicate callbacks.
             }
 
             @Override

File: app/src/main/java/com/nightonke/boommenusample/ShareActivity.java
Patch:
@@ -44,7 +44,7 @@ protected void onCreate(Bundle savedInstanceState) {
     private BoomMenuButton initBmb(BoomMenuButton bmb) {
         assert bmb != null;
         for (int i = 0; i < bmb.getButtonPlaceEnum().buttonNumber(); i++)
-            bmb.addBuilder(BuilderManager.getSimpleCircleButtonBuilder());
+            bmb.addBuilder(BuilderManager.getTextInsideCircleButtonBuilder());
         return bmb;
     }
 

File: app/src/main/java/com/nightonke/boommenusample/MainActivity.java
Patch:
@@ -26,6 +26,7 @@
 import com.nightonke.boommenu.BoomMenuButton;
 import com.nightonke.boommenu.BoomType;
 import com.nightonke.boommenu.ButtonType;
+import com.nightonke.boommenu.DimType;
 import com.nightonke.boommenu.OrderType;
 import com.nightonke.boommenu.ParticleEffect;
 import com.nightonke.boommenu.PlaceType;
@@ -104,6 +105,7 @@ protected void onCreate(Bundle savedInstanceState) {
         boomMenuButton = (BoomMenuButton)findViewById(R.id.boom);
         boomMenuButton.setOnSubButtonClickListener(this);
         boomMenuButton.setAnimatorListener(this);
+        boomMenuButton.setDimType(DimType.DIM_0);
 
         boomInfo = (BoomMenuButton)mCustomView.findViewById(R.id.info);
         boomInfo.setOnSubButtonClickListener(new BoomMenuButton.OnSubButtonClickListener() {

File: boommenu/src/main/java/com/nightonke/boommenu/Util.java
Patch:
@@ -49,14 +49,14 @@ public float dp2px(float dp){
     public int getDarkerColor(int color) {
         float[] hsv = new float[3];
         Color.colorToHSV(color, hsv);
-        hsv[2] *= 0.8f;
+        hsv[2] *= 0.9f;
         return Color.HSVToColor(hsv);
     }
 
     public int getLighterColor(int color) {
         float[] hsv = new float[3];
         Color.colorToHSV(color, hsv);
-        hsv[2] *= 1.2f;
+        hsv[2] *= 1.1f;
         return Color.HSVToColor(hsv);
     }
 

