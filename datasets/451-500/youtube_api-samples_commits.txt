File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/live/ListBroadcasts.java
Patch:
@@ -63,8 +63,8 @@ public static void main(String[] args) {
                     youtube.liveBroadcasts().list("id,snippet");
 
             // Indicate that the API response should not filter broadcasts
-            // based on their status.
-            liveBroadcastRequest.setBroadcastStatus("all");
+            // based on their type or status.
+            liveBroadcastRequest.setBroadcastType("all").setBroadcastStatus("all");
 
             // Execute the API request and return the list of broadcasts.
             LiveBroadcastListResponse returnedListResponse = liveBroadcastRequest.execute();

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/live/ListLiveChatMessages.java
Patch:
@@ -176,7 +176,7 @@ private static String buildOutput(
             output.append("SUPERCHAT RECEIVED FROM ");
         }
         output.append(author.getDisplayName());
-        if (author.getIsChatOwner() || author.getIsChatOwner() || author.getIsChatSponsor()) {
+        if (author.getIsChatOwner() || author.getIsChatModerator() || author.getIsChatSponsor()) {
             output.append(" (");
             boolean appendComma = false;
             if (author.getIsChatOwner()) {

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/live/ListLiveChatMessages.java
Patch:
@@ -259,7 +259,7 @@ private static String buildOutput(
                 if (appendComma) {
                     output.append(", ");
                 }
-                output.append("SPONSER");
+                output.append("SPONSOR");
             }
             output.append(")");
         }

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/live/ListBroadcasts.java
Patch:
@@ -63,8 +63,8 @@ public static void main(String[] args) {
                     youtube.liveBroadcasts().list("id,snippet");
 
             // Indicate that the API response should not filter broadcasts
-            // based on their status.
-            liveBroadcastRequest.setBroadcastStatus("all");
+            // based on their type or status.
+            liveBroadcastRequest.setBroadcastType("all").setBroadcastStatus("all");
 
             // Execute the API request and return the list of broadcasts.
             LiveBroadcastListResponse returnedListResponse = liveBroadcastRequest.execute();

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/data/CommentThreads.java
Patch:
@@ -27,7 +27,7 @@
 import com.google.api.services.youtube.model.CommentSnippet;
 import com.google.api.services.youtube.model.CommentThread;
 import com.google.api.services.youtube.model.CommentThreadSnippet;
-import com.google.api.services.youtube.model.V3CommentThreadListResponse;
+import com.google.api.services.youtube.model.CommentThreadListResponse;
 import com.google.common.collect.Lists;
 
 /**
@@ -135,7 +135,7 @@ public static void main(String[] args) {
 
             // Call the YouTube Data API's commentThreads.list method to
             // retrieve video comment threads.
-            V3CommentThreadListResponse videoCommentsListResponse = youtube.commentThreads()
+            CommentThreadListResponse videoCommentsListResponse = youtube.commentThreads()
                     .list("snippet").setVideoId(videoId).setTextFormat("plainText").execute();
             List<CommentThread> videoComments = videoCommentsListResponse.getItems();
 
@@ -172,7 +172,7 @@ public static void main(String[] args) {
 
             // Call the YouTube Data API's commentThreads.list method to
             // retrieve channel comment threads.
-            V3CommentThreadListResponse channelCommentsListResponse = youtube.commentThreads()
+            CommentThreadListResponse channelCommentsListResponse = youtube.commentThreads()
                     .list("snippet").setChannelId(channelId).setTextFormat("plainText").execute();
             List<CommentThread> channelComments = channelCommentsListResponse.getItems();
 

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/reporting/RetrieveReports.java
Patch:
@@ -16,6 +16,7 @@
 
 import com.google.api.client.auth.oauth2.Credential;
 import com.google.api.client.googleapis.json.GoogleJsonResponseException;
+import com.google.api.client.http.GenericUrl;
 import com.google.api.services.samples.youtube.cmdline.Auth;
 import com.google.api.services.youtubereporting.YouTubeReporting;
 import com.google.api.services.youtubereporting.YouTubeReporting.Media.Download;

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/data/CommentThreads.java
Patch:
@@ -27,7 +27,7 @@
 import com.google.api.services.youtube.model.CommentSnippet;
 import com.google.api.services.youtube.model.CommentThread;
 import com.google.api.services.youtube.model.CommentThreadSnippet;
-import com.google.api.services.youtube.model.V3CommentThreadListResponse;
+import com.google.api.services.youtube.model.CommentThreadListResponse;
 import com.google.common.collect.Lists;
 
 /**
@@ -135,7 +135,7 @@ public static void main(String[] args) {
 
             // Call the YouTube Data API's commentThreads.list method to
             // retrieve video comment threads.
-            V3CommentThreadListResponse videoCommentsListResponse = youtube.commentThreads()
+            CommentThreadListResponse videoCommentsListResponse = youtube.commentThreads()
                     .list("snippet").setVideoId(videoId).setTextFormat("plainText").execute();
             List<CommentThread> videoComments = videoCommentsListResponse.getItems();
 
@@ -172,7 +172,7 @@ public static void main(String[] args) {
 
             // Call the YouTube Data API's commentThreads.list method to
             // retrieve channel comment threads.
-            V3CommentThreadListResponse channelCommentsListResponse = youtube.commentThreads()
+            CommentThreadListResponse channelCommentsListResponse = youtube.commentThreads()
                     .list("snippet").setChannelId(channelId).setTextFormat("plainText").execute();
             List<CommentThread> channelComments = channelCommentsListResponse.getItems();
 

File: java/src/main/java/com/google/api/services/samples/youtube/cmdline/reporting/RetrieveReports.java
Patch:
@@ -16,6 +16,7 @@
 
 import com.google.api.client.auth.oauth2.Credential;
 import com.google.api.client.googleapis.json.GoogleJsonResponseException;
+import com.google.api.client.http.GenericUrl;
 import com.google.api.services.samples.youtube.cmdline.Auth;
 import com.google.api.services.youtubereporting.YouTubeReporting;
 import com.google.api.services.youtubereporting.YouTubeReporting.Media.Download;

