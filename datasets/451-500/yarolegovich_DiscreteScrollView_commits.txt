File: library/src/main/java/com/yarolegovich/discretescrollview/DSVOrientation.java
Patch:
@@ -42,7 +42,7 @@ interface Helper {
 
         void offsetChildren(int amount, RecyclerViewProxy lm);
 
-        float getDistanceFromCenter(Point center, int viewCenterX, int viewCenterY);
+        float getDistanceFromCenter(Point center, float viewCenterX, float viewCenterY);
 
         boolean isViewVisible(Point center, int halfWidth, int halfHeight, int endBound, int extraSpace);
 
@@ -104,7 +104,7 @@ public void offsetChildren(int amount, RecyclerViewProxy helper) {
         }
 
         @Override
-        public float getDistanceFromCenter(Point center, int viewCenterX, int viewCenterY) {
+        public float getDistanceFromCenter(Point center, float viewCenterX, float viewCenterY) {
             return viewCenterX - center.x;
         }
 
@@ -165,7 +165,7 @@ public void offsetChildren(int amount, RecyclerViewProxy helper) {
         }
 
         @Override
-        public float getDistanceFromCenter(Point center, int viewCenterX, int viewCenterY) {
+        public float getDistanceFromCenter(Point center, float viewCenterX, float viewCenterY) {
             return viewCenterY - center.y;
         }
 

File: library/src/main/java/com/yarolegovich/discretescrollview/DiscreteScrollView.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * Created by yarolegovich on 18.02.2017.
  */
-@SuppressWarnings("unchecked")
+@SuppressWarnings({"unchecked", "rawtypes"})
 public class DiscreteScrollView extends RecyclerView {
 
     public static final int NO_POSITION = DiscreteScrollLayoutManager.NO_POSITION;

File: library/src/main/java/com/yarolegovich/discretescrollview/util/ScrollListenerAdapter.java
Patch:
@@ -38,7 +38,7 @@ public void onScroll(float scrollPosition,
     @Override
     public boolean equals(Object obj) {
         if (obj instanceof ScrollListenerAdapter) {
-            return adaptee.equals(((ScrollListenerAdapter) obj).adaptee);
+            return adaptee.equals(((ScrollListenerAdapter<?>) obj).adaptee);
         } else {
             return super.equals(obj);
         }

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/DiscreteScrollViewOptions.java
Patch:
@@ -86,6 +86,7 @@ public static int getTransitionTime() {
         return defaultPrefs().getInt(instance.KEY_TRANSITION_TIME, 150);
     }
 
+    @SuppressWarnings("deprecation")
     private static SharedPreferences defaultPrefs() {
         return PreferenceManager.getDefaultSharedPreferences(App.getInstance());
     }

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/gallery/GalleryActivity.java
Patch:
@@ -34,7 +34,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         Gallery gallery = Gallery.get();
         List<Image> data = gallery.getData();
-        DiscreteScrollView itemPicker = (DiscreteScrollView) findViewById(R.id.item_picker);
+        DiscreteScrollView itemPicker = findViewById(R.id.item_picker);
         itemPicker.setAdapter(new GalleryAdapter(data));
         itemPicker.addScrollListener(this);
         itemPicker.addOnItemChangedListener(this);

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/gallery/GalleryAdapter.java
Patch:
@@ -69,7 +69,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
 
         public ViewHolder(View itemView) {
             super(itemView);
-            image = (ImageView) itemView.findViewById(R.id.image);
+            image = itemView.findViewById(R.id.image);
             overlay = itemView.findViewById(R.id.overlay);
         }
 

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/shop/ShopAdapter.java
Patch:
@@ -51,7 +51,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
 
         public ViewHolder(View itemView) {
             super(itemView);
-            image = (ImageView) itemView.findViewById(R.id.image);
+            image = itemView.findViewById(R.id.image);
         }
     }
 }

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/weather/ForecastAdapter.java
Patch:
@@ -72,8 +72,8 @@ class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener
 
         public ViewHolder(View itemView) {
             super(itemView);
-            imageView = (ImageView) itemView.findViewById(R.id.city_image);
-            textView = (TextView) itemView.findViewById(R.id.city_name);
+            imageView = itemView.findViewById(R.id.city_image);
+            textView = itemView.findViewById(R.id.city_name);
 
             itemView.findViewById(R.id.container).setOnClickListener(this);
         }

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/weather/ForecastView.java
Patch:
@@ -55,9 +55,9 @@ public ForecastView(Context context, AttributeSet attrs, int defStyleAttr) {
         setGravity(Gravity.CENTER_HORIZONTAL);
         inflate(getContext(), R.layout.view_forecast, this);
 
-        weatherDescription = (TextView) findViewById(R.id.weather_description);
-        weatherImage = (ImageView) findViewById(R.id.weather_image);
-        weatherTemperature = (TextView) findViewById(R.id.weather_temperature);
+        weatherDescription = findViewById(R.id.weather_description);
+        weatherImage = findViewById(R.id.weather_image);
+        weatherTemperature = findViewById(R.id.weather_temperature);
     }
 
     private void initGradient() {

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/weather/WeatherActivity.java
Patch:
@@ -34,10 +34,10 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_weather);
 
-        forecastView = (ForecastView) findViewById(R.id.forecast_view);
+        forecastView = findViewById(R.id.forecast_view);
 
         forecasts = WeatherStation.get().getForecasts();
-        cityPicker = (DiscreteScrollView) findViewById(R.id.forecast_city_picker);
+        cityPicker = findViewById(R.id.forecast_city_picker);
         cityPicker.setSlideOnFling(true);
         cityPicker.setAdapter(new ForecastAdapter(forecasts));
         cityPicker.addOnItemChangedListener(this);

File: library/src/main/java/com/yarolegovich/discretescrollview/DiscreteScrollLayoutManager.java
Patch:
@@ -413,7 +413,7 @@ private void onDragStart() {
 
     public void onFling(int velocityX, int velocityY) {
         int velocity = orientationHelper.getFlingVelocity(velocityX, velocityY);
-        int throttleValue = shouldSlideOnFling ? Math.abs(velocityX / flingThreshold) : 1;
+        int throttleValue = shouldSlideOnFling ? Math.abs(velocity / flingThreshold) : 1;
         int newPosition = currentPosition + Direction.fromDelta(velocity).applyTo(throttleValue);
         newPosition = checkNewOnFlingPositionIsInBounds(newPosition);
         boolean isInScrollDirection = velocity * scrolled >= 0;

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/shop/ShopActivity.java
Patch:
@@ -72,7 +72,8 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     public void onClick(View v) {
         switch (v.getId()) {
             case R.id.item_btn_rate:
-                Item current = data.get(itemPicker.getCurrentItem());
+                int realPosition = infiniteAdapter.getRealPosition(itemPicker.getCurrentItem());
+                Item current = data.get(realPosition);
                 shop.setRated(current.getId(), !shop.isRated(current.getId()));
                 changeRateButtonState(current);
                 break;

File: library/src/main/java/com/yarolegovich/discretescrollview/DiscreteScrollLayoutManager.java
Patch:
@@ -194,7 +194,7 @@ public void onItemsAdded(RecyclerView recyclerView, int positionStart, int itemC
         if (currentPosition == NO_POSITION) {
             currentPosition = 0;
         } else if (currentPosition >= positionStart) {
-            currentPosition += itemCount;
+            currentPosition = Math.min(currentPosition + itemCount, getItemCount() - 1);
         }
     }
 

File: sample/src/main/java/com/yarolegovich/discretescrollview/sample/weather/WeatherActivity.java
Patch:
@@ -54,7 +54,6 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
 
     @Override
     public void onCurrentItemChanged(ForecastAdapter.ViewHolder holder, int position) {
-        Log.d("tag", "currentItem changed: " + position);
         forecastView.setForecast(forecasts.get(position));
         holder.showText();
     }

File: library/src/main/java/com/yarolegovich/discretescrollview/DiscreteScrollLayoutManager.java
Patch:
@@ -84,7 +84,9 @@ public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State
 
         applyItemTransformToChildren();
 
-        notifyFirstLayoutCompleted();
+        if (isFirstOrEmptyLayout) {
+            notifyFirstLayoutCompleted();
+        }
     }
 
     private void initChildDimensions(RecyclerView.Recycler recycler) {

