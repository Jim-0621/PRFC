File: htextview-evaporate/src/main/java/com/hanks/htextview/evaporate/EvaporateText.java
Patch:
@@ -4,16 +4,13 @@
 import android.animation.ValueAnimator;
 import android.graphics.Canvas;
 import android.graphics.Rect;
-import android.text.Layout;
 import android.util.AttributeSet;
 import android.view.animation.AccelerateDecelerateInterpolator;
-
 import com.hanks.htextview.base.CharacterDiffResult;
 import com.hanks.htextview.base.CharacterUtils;
 import com.hanks.htextview.base.DefaultAnimatorListener;
 import com.hanks.htextview.base.HText;
 import com.hanks.htextview.base.HTextView;
-
 import java.util.ArrayList;
 import java.util.List;
 
@@ -62,6 +59,9 @@ public void animateText(final CharSequence text) {
         mHTextView.post(new Runnable() {
             @Override
             public void run() {
+                if (mHTextView == null || mHTextView.getLayout() == null) {
+                    return;
+                }
                 oldStartX = mHTextView.getLayout().getLineLeft(0);
                 EvaporateText.super.animateText(text);
             }

File: htextview-fall/src/main/java/com/hanks/htextview/fall/FallText.java
Patch:
@@ -64,6 +64,9 @@ public void animateText(final CharSequence text) {
         mHTextView.post(new Runnable() {
             @Override
             public void run() {
+                if (mHTextView == null || mHTextView.getLayout() == null) {
+                    return;
+                }
                 oldStartX = mHTextView.getLayout().getLineLeft(0);
                 FallText.super.animateText(text);
             }

File: htextview-evaporate/src/main/java/com/hanks/htextview/evaporate/EvaporateText.java
Patch:
@@ -4,16 +4,13 @@
 import android.animation.ValueAnimator;
 import android.graphics.Canvas;
 import android.graphics.Rect;
-import android.text.Layout;
 import android.util.AttributeSet;
 import android.view.animation.AccelerateDecelerateInterpolator;
-
 import com.hanks.htextview.base.CharacterDiffResult;
 import com.hanks.htextview.base.CharacterUtils;
 import com.hanks.htextview.base.DefaultAnimatorListener;
 import com.hanks.htextview.base.HText;
 import com.hanks.htextview.base.HTextView;
-
 import java.util.ArrayList;
 import java.util.List;
 
@@ -62,6 +59,9 @@ public void animateText(final CharSequence text) {
         mHTextView.post(new Runnable() {
             @Override
             public void run() {
+                if (mHTextView == null || mHTextView.getLayout() == null) {
+                    return;
+                }
                 oldStartX = mHTextView.getLayout().getLineLeft(0);
                 EvaporateText.super.animateText(text);
             }

File: htextview-fall/src/main/java/com/hanks/htextview/fall/FallText.java
Patch:
@@ -64,6 +64,9 @@ public void animateText(final CharSequence text) {
         mHTextView.post(new Runnable() {
             @Override
             public void run() {
+                if (mHTextView == null || mHTextView.getLayout() == null) {
+                    return;
+                }
                 oldStartX = mHTextView.getLayout().getLineLeft(0);
                 FallText.super.animateText(text);
             }

File: demoapp/src/main/java/com/example/demoapp/EvaporateTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/FadeTextViewActivity.java
Patch:
@@ -22,6 +22,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textview2.setOnClickListener(new ClickListener());
         textview2.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView.animateText(getString(R.string.initStr));
+
         seekBar = (SeekBar) findViewById(R.id.seekbar);
         seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override

File: demoapp/src/main/java/com/example/demoapp/FallTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/LineTextViewActivity.java
Patch:
@@ -31,6 +31,8 @@ protected void onCreate(Bundle savedInstanceState) {
         hTextView4.setOnClickListener(new ClickListener());
         hTextView4.setAnimationListener(new SimpleAnimationListener(this));
 
+        hTextView.animateText(getString(R.string.initStr));
+
         seekBar = (SeekBar) findViewById(R.id.seekbar);
         seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override

File: demoapp/src/main/java/com/example/demoapp/ScaleTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/TyperTextViewActivity.java
Patch:
@@ -13,6 +13,7 @@ protected void onCreate(Bundle savedInstanceState) {
         final HTextView textView1 = (HTextView) findViewById(R.id.textview);
         textView1.setOnClickListener(new ClickListener());
         textView1.setAnimationListener(new SimpleAnimationListener(this));
+        textView1.animateText(getString(R.string.initStr));
 
         final HTextView textView2 = (HTextView) findViewById(R.id.textview2);
         textView2.setOnClickListener(new ClickListener());

File: demoapp/src/main/java/com/example/demoapp/EvaporateTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/FadeTextViewActivity.java
Patch:
@@ -22,6 +22,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textview2.setOnClickListener(new ClickListener());
         textview2.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView.animateText(getString(R.string.initStr));
+
         seekBar = (SeekBar) findViewById(R.id.seekbar);
         seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override

File: demoapp/src/main/java/com/example/demoapp/FallTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/LineTextViewActivity.java
Patch:
@@ -31,6 +31,8 @@ protected void onCreate(Bundle savedInstanceState) {
         hTextView4.setOnClickListener(new ClickListener());
         hTextView4.setAnimationListener(new SimpleAnimationListener(this));
 
+        hTextView.animateText(getString(R.string.initStr));
+
         seekBar = (SeekBar) findViewById(R.id.seekbar);
         seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override

File: demoapp/src/main/java/com/example/demoapp/ScaleTextViewActivity.java
Patch:
@@ -28,6 +28,8 @@ protected void onCreate(Bundle savedInstanceState) {
         textView2.setAnimationListener(new SimpleAnimationListener(this));
         textView3.setAnimationListener(new SimpleAnimationListener(this));
 
+        textView3.animateText(getString(R.string.initStr));
+
         ((SeekBar) findViewById(R.id.seekbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {

File: demoapp/src/main/java/com/example/demoapp/TyperTextViewActivity.java
Patch:
@@ -13,6 +13,7 @@ protected void onCreate(Bundle savedInstanceState) {
         final HTextView textView1 = (HTextView) findViewById(R.id.textview);
         textView1.setOnClickListener(new ClickListener());
         textView1.setAnimationListener(new SimpleAnimationListener(this));
+        textView1.animateText(getString(R.string.initStr));
 
         final HTextView textView2 = (HTextView) findViewById(R.id.textview2);
         textView2.setOnClickListener(new ClickListener());

File: demoapp/src/main/java/com/example/demoapp/BaseActivity.java
Patch:
@@ -14,7 +14,7 @@
  */
 
 public class BaseActivity extends AppCompatActivity {
-    String[] sentences = {"What is design?",
+    String[] sentences = {"","What is design?",
             "Design is not just",
             "what it looks like and feels like.",
             "Design is how it works. \n- Steve Jobs",

File: htextview-library/src/main/java/com/hanks/htextview/HTextView.java
Patch:
@@ -157,8 +157,8 @@ public void setAnimateType(HTextViewType type) {
     
     @Override
     public void setTextColor(@ColorInt int color) {
-        //Check for SparkleText. Do not alter color if on that type due to paint conflicts
-        if(animateType != 3){
+        //Check for RainbowText. Do not alter color if on that type due to paint conflicts
+        if(animateType != 8){
             super.setTextColor(color);
         }
     }

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/RainBowText.java
Patch:
@@ -43,7 +43,7 @@ protected void animatePrepare(CharSequence text) {
 
     @Override
     protected void drawFrame(Canvas canvas) {
-        if (mMatrix != null) {
+        if (mMatrix != null && mLinearGradient != null) {
             mTranslate += dx;
             mMatrix.setTranslate(mTranslate, 0);
             mLinearGradient.setLocalMatrix(mMatrix);

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/HText.java
Patch:
@@ -77,12 +77,13 @@ public abstract class HText implements IHText {
     }
 
     @Override public void onDraw(Canvas canvas) {
+        mPaint.setColor(mHTextView.getCurrentTextColor());
+        mOldPaint.setColor(mHTextView.getCurrentTextColor());
         drawFrame(canvas);
     }
 
     private void prepareAnimate() {
         mTextSize = mHTextView.getTextSize();
-
         mPaint.setTextSize(mTextSize);
         for (int i = 0; i < mText.length(); i++) {
             gaps[i] = mPaint.measureText(mText.charAt(i) + "");

File: demo/src/main/java/com/hanks/htextview/example/FontManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.hanks.htextview.util;
+package com.hanks.htextview.example;
 
 import android.content.res.AssetManager;
 import android.graphics.Typeface;
@@ -10,7 +10,7 @@
 /**
  * Just a simple singleton class to manage font loading from assets.
  * Original source: <a href="http://stackoverflow.com/a/29134056">http://stackoverflow.com/a/29134056</a>
- *
+ * <p/>
  * Created by mathias.berwig on 22/06/2016.
  */
 public class FontManager {

File: htextview-library/src/main/java/com/hanks/htextview/HTextViewType.java
Patch:
@@ -1,7 +1,6 @@
 package com.hanks.htextview;
 
 /**
- * 支持的动画类型
  * Created by hanks on 15-12-14.
  */
 public enum HTextViewType {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/CharacterDiffResult.java
Patch:
@@ -1,6 +1,5 @@
 package com.hanks.htextview.animatetext;
 /**
- * 记录重复字符的信息
  * Created by hanks on 15-12-14.
  */
 public class CharacterDiffResult {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/LineText.java
Patch:
@@ -8,7 +8,6 @@
 
 import com.hanks.htextview.util.DisplayUtils;
 /**
- * 线条边框流动
  * Created by hanks on 15-12-17.
  */
 public class LineText extends HText {
@@ -82,7 +81,6 @@ public class LineText extends HText {
     @Override protected void drawFrame(Canvas canvas) {
         float percent = progress;
 
-        // 计算横向 和 纵向 线条的最终宽度
         xLineLength = (int) (mHTextView.getWidth() - (mHTextView.getWidth() - distWidth + gap) * percent);
         yLineLength = (int) (mHTextView.getHeight() - (mHTextView.getHeight() - distHeight + gap) * percent);
 
@@ -103,7 +101,6 @@ public class LineText extends HText {
         canvas.drawLine(p4.x, p4.y + yLineLength, p4.x, p4.y, linePaint);
 
 
-        // 离开的线条
         xLineShort = (int) ((distWidth + gap) * (1 - percent));
         yLineShort = (int) ((distHeight + gap) * (1 - percent));
 

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/ScaleText.java
Patch:
@@ -5,7 +5,6 @@
 
 import com.hanks.htextview.util.CharacterUtils;
 /**
- * 缩放动画
  * Created by hanks on 15-12-14.
  */
 public class ScaleText extends HText {
@@ -22,7 +21,6 @@ public class ScaleText extends HText {
     @Override protected void animateStart(CharSequence text) {
         int n = mText.length();
         n = n <= 0 ? 1 : n;
-        // 计算动画总时间
         duration = (long) (charTime + charTime / mostCount * (n - 1));
 
         ValueAnimator valueAnimator = ValueAnimator.ofFloat(0, duration).setDuration(duration);

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/TyperText.java
Patch:
@@ -3,7 +3,6 @@
 import android.graphics.Canvas;
 
 /**
- * 打字机效果
  * Created by hanks on 15/12/26.
  */
 public class TyperText extends HText {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/HText.java
Patch:
@@ -46,10 +46,12 @@ public abstract class HText implements IHText {
         mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
         mPaint.setColor(mHTextView.getCurrentTextColor());
         mPaint.setStyle(Paint.Style.FILL);
+        mPaint.setTypeface(mHTextView.getTypeface());
 
         mOldPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
         mOldPaint.setColor(mHTextView.getCurrentTextColor());
         mOldPaint.setStyle(Paint.Style.FILL);
+        mOldPaint.setTypeface(mHTextView.getTypeface());
 
         mText = mHTextView.getText();
         mOldText = mHTextView.getText();

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/PixelateText.java
Patch:
@@ -261,10 +261,12 @@ public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         paint = new Paint(Paint.ANTI_ALIAS_FLAG);
         paint.setColor(Color.BLACK);
         paint.setStyle(Paint.Style.FILL);
+        paint.setTypeface(hTextView.getTypeface());
 
         oldPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
         oldPaint.setColor(Color.BLACK);
         oldPaint.setStyle(Paint.Style.FILL);
+        oldPaint.setTypeface(hTextView.getTypeface());
 
         pixPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
         pixPaint.setColor(Color.BLACK);

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/RainBowText.java
Patch:
@@ -45,9 +45,6 @@ protected void animatePrepare(CharSequence text) {
     protected void drawFrame(Canvas canvas) {
         if (mMatrix != null) {
             mTranslate += dx;
-            if (mTranslate > 2 * mTextWidth) {
-                mTranslate = -mTextWidth;
-            }
             mMatrix.setTranslate(mTranslate, 0);
             mLinearGradient.setLocalMatrix(mMatrix);
             canvas.drawText(mText, 0, mText.length(), startX, startY, mPaint);

File: htextview-library/src/main/java/com/hanks/htextview/HTextViewType.java
Patch:
@@ -4,5 +4,5 @@
  * Created by hanks on 15-12-14.
  */
 public enum HTextViewType {
-    SCALE, EVAPORATE, FALL, PIXELATE, ANVIL, SPARKLE, LINE
+    SCALE, EVAPORATE, FALL, PIXELATE, ANVIL, SPARKLE, LINE,TYPER
 }

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/AnvilText.java
Patch:
@@ -67,6 +67,7 @@ public class AnvilText extends HText {
             smokes[i] = Bitmap.createScaledBitmap(smoke, dstWidth, dstHeight, false);
             smoke.recycle();
         }
+        System.gc();
     }
 
     @Override protected void animatePrepare(CharSequence text) {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/AnvilText.java
Patch:
@@ -66,8 +66,8 @@ public class AnvilText extends HText {
             int dstHeight = (int) (smoke.getHeight() * 1f / smoke.getWidth() * dstWidth);
             smokes[i] = Bitmap.createScaledBitmap(smoke, dstWidth, dstHeight, false);
             smoke.recycle();
-            System.gc();
         }
+        System.gc();
     }
 
     @Override protected void animatePrepare(CharSequence text) {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/AnvilText.java
Patch:
@@ -66,6 +66,7 @@ public class AnvilText extends HText {
             int dstHeight = (int) (smoke.getHeight() * 1f / smoke.getWidth() * dstWidth);
             smokes[i] = Bitmap.createScaledBitmap(smoke, dstWidth, dstHeight, false);
             smoke.recycle();
+            System.gc();
         }
     }
 

File: htextview-library/src/main/java/com/hanks/htextview/HTextView.java
Patch:
@@ -59,7 +59,7 @@ public void setAnimateType(HTextViewType type) {
                 mIHText = new ScaleText();
                 break;
             case EVAPORATE:
-                mIHText = new EvaporateTlext();
+                mIHText = new EvaporateText();
                 break;
             case FALL:
                 mIHText = new FallText();

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/HText.java
Patch:
@@ -55,6 +55,7 @@ public abstract class HText implements AnimateText {
 
         mTextSize = mHTextView.getTextSize();
 
+        initVariables();
     }
 
     @Override public void animateText(CharSequence text) {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/HText.java
Patch:
@@ -56,8 +56,10 @@ public abstract class HText implements AnimateText {
         mOldPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
         mOldPaint.setColor(mHTextView.getCurrentTextColor());
         mOldPaint.setStyle(Paint.Style.FILL);
+
         mText = "";
         mOldText = "";
+
         mTextSize = mHTextView.getTextSize();
 
     }
@@ -68,7 +70,6 @@ public abstract class HText implements AnimateText {
         prepareAnimate();
         animatePrepare(text);
         animateStart(text);
-
     }
 
     @Override public void onDraw(Canvas canvas) {

File: app/src/main/java/com/hanks/htextview/example/MainActivity.java
Patch:
@@ -21,7 +21,6 @@
 import com.hanks.htextview.animatetext.FallText;
 import com.hanks.htextview.animatetext.PixelateText;
 import com.hanks.htextview.animatetext.ScaleText;
-import com.hanks.htextview.animatetext.Shimmer;
 import com.hanks.htextview.animatetext.SparkleText;
 import com.hanks.htextview.util.LineText;
 
@@ -113,8 +112,6 @@ public class MainActivity extends AppCompatActivity implements ViewSwitcher.View
 
     public void onClick(View v) {
         updateCounter();
-        Shimmer shimmer = new Shimmer();
-        shimmer.start(hTextView);
     }
 
     private void updateCounter() {

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/AnimateText.java
Patch:
@@ -1,13 +1,14 @@
 package com.hanks.htextview.animatetext;
 import android.graphics.Canvas;
+import android.util.AttributeSet;
 
 import com.hanks.htextview.HTextView;
 /**
  * interface used in HTextView
  * Created by hanks on 15-12-14.
  */
 public interface AnimateText {
-    void init(HTextView hTextView);
+    void init(HTextView hTextView, AttributeSet attrs, int defStyle);
     void animateText(CharSequence text);
     void onDraw(Canvas canvas);
     void reset(CharSequence text);

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/BurnText.java
Patch:
@@ -8,6 +8,7 @@
 import android.graphics.Paint;
 import android.graphics.Rect;
 import android.graphics.drawable.ColorDrawable;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 
@@ -45,7 +46,7 @@ public class BurnText implements AnimateText {
     private float startY    = 0;
     private Bitmap sparkBitmap;
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/EvaporateText.java
Patch:
@@ -5,6 +5,7 @@
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Rect;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
@@ -37,7 +38,7 @@ public class EvaporateText implements AnimateText {
     private float startX    = 0;
     private float startY    = 0;
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/FallText.java
Patch:
@@ -6,6 +6,7 @@
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.graphics.Rect;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
@@ -40,7 +41,7 @@ public class FallText implements AnimateText {
     private float                     startX        = 0;
     private float                     startY        = 0;
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/PixelateText.java
Patch:
@@ -7,6 +7,7 @@
 import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Rect;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
@@ -251,7 +252,7 @@ public static Bitmap fastBlur(Bitmap sbitmap, float radiusf) {
 
     }
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

File: htextview-library/src/main/java/com/hanks/htextview/animatetext/SparkleText.java
Patch:
@@ -8,6 +8,7 @@
 import android.graphics.Paint;
 import android.graphics.Rect;
 import android.graphics.drawable.ColorDrawable;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 
@@ -50,7 +51,7 @@ public class SparkleText implements AnimateText {
 
     private Bitmap sparkBitmap;
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

File: htextview-library/src/main/java/com/hanks/htextview/util/LineText.java
Patch:
@@ -7,6 +7,7 @@
 import android.graphics.PointF;
 import android.graphics.Rect;
 import android.graphics.drawable.ColorDrawable;
+import android.util.AttributeSet;
 import android.util.DisplayMetrics;
 import android.view.WindowManager;
 
@@ -63,7 +64,7 @@ public class LineText implements AnimateText {
     private int yLineShort;
     private int xLineShort;
 
-    public void init(HTextView hTextView) {
+    public void init(HTextView hTextView, AttributeSet attrs, int defStyle) {
         mHTextView = hTextView;
 
         mText = "";

