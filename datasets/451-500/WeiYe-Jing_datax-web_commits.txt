File: datax-admin/src/main/java/com/wugui/datax/admin/tool/meta/ClickHouseDataBaseMeta.java
Patch:
@@ -13,7 +13,7 @@ public static ClickHouseDataBaseMeta getInstance() {
         return single;
     }
     @Override
-    public String getSQLQueryTables(String... args) {
+    public String getSQLQueryTables() {
         return "show tables";
     }
 }

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/meta/HiveDatabaseMeta.java
Patch:
@@ -23,7 +23,7 @@ public static HiveDatabaseMeta getInstance() {
     }
 
     @Override
-    public String getSQLQueryTables(String... args) {
+    public String getSQLQueryTables() {
         return "show tables";
     }
 

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/meta/MySQLDatabaseMeta.java
Patch:
@@ -34,7 +34,7 @@ public String getSQLQueryPrimaryKey() {
     }
 
     @Override
-    public String getSQLQueryTables(String... args) {
+    public String getSQLQueryTables() {
         return "show tables";
     }
 

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/JobServiceImpl.java
Patch:
@@ -448,7 +448,7 @@ public ReturnT<String> batchAdd(DataXBatchJsonBuildDto dto) throws IOException {
 
             String json = dataxJsonService.buildJobJson(jsonBuild);
 
-            JobTemplate jobTemplate = jobTemplateMapper.loadById(19);
+            JobTemplate jobTemplate = jobTemplateMapper.loadById(dto.getTemplateId());
             JobInfo jobInfo = new JobInfo();
             BeanUtils.copyProperties(jobTemplate, jobInfo);
             jobInfo.setJobJson(json);

File: datax-admin/src/main/java/com/wugui/datax/admin/config/ServiceModelToSwagger2MapperImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.common.collect.Multimap;
 import io.swagger.models.*;
 import io.swagger.models.parameters.Parameter;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;
 import org.springframework.context.MessageSource;

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/pojo/DataxHbasePojo.java
Patch:
@@ -21,7 +21,7 @@ public class DataxHbasePojo {
 
   private String readerHbaseConfig;
 
-  private List<String> readerTable;
+  private String readerTable;
 
   private String readerMode;
 
@@ -31,7 +31,7 @@ public class DataxHbasePojo {
 
   private String writerHbaseConfig;
 
-  private List<String> writerTable;
+  private String writerTable;
 
   private String writerMode;
 

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/JobServiceImpl.java
Patch:
@@ -122,7 +122,7 @@ public ReturnT<String> add(JobInfo jobInfo) {
         if (jobInfo.getChildJobId() != null && jobInfo.getChildJobId().trim().length() > 0) {
             String[] childJobIds = jobInfo.getChildJobId().split(",");
             for (String childJobIdItem : childJobIds) {
-                if (childJobIdItem != null && childJobIdItem.trim().length() > 0 && isNumeric(childJobIdItem)) {
+                if (StringUtils.isNotBlank(childJobIdItem) && isNumeric(childJobIdItem) && Integer.parseInt(childJobIdItem) > 0) {
                     JobInfo childJobInfo = jobInfoMapper.loadById(Integer.parseInt(childJobIdItem));
                     if (childJobInfo == null) {
                         return new ReturnT<String>(ReturnT.FAIL_CODE,
@@ -159,7 +159,7 @@ public ReturnT<String> add(JobInfo jobInfo) {
 
     private boolean isNumeric(String str) {
         try {
-            int result = Integer.valueOf(str);
+            Integer.valueOf(str);
             return true;
         } catch (NumberFormatException e) {
             return false;

File: datax-admin/src/main/java/com/wugui/datax/admin/entity/JobInfo.java
Patch:
@@ -109,7 +109,7 @@ public class JobInfo {
 	private Long incStartId;
 
 	@ApiModelProperty("增量方式")
-	private Integer incrementType;
+	private int incrementType;
 
 	@ApiModelProperty("datax的读表")
 	private  String readerTable;

File: datax-core/src/main/java/com/wugui/datatx/core/biz/model/TriggerParam.java
Patch:
@@ -40,7 +40,7 @@ public class TriggerParam implements Serializable{
     private long startId;
     private long endId;
 
-    private int incrementType;
+    private Integer incrementType;
 
     private String replaceParamType;
 
@@ -213,11 +213,11 @@ public void setEndId(long endId) {
         this.endId = endId;
     }
 
-    public int getIncrementType() {
+    public Integer getIncrementType() {
         return incrementType;
     }
 
-    public void setIncrementType(int incrementType) {
+    public void setIncrementType(Integer incrementType) {
         this.incrementType = incrementType;
     }
 

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobRegistryController.java
Patch:
@@ -57,10 +57,8 @@ public R<IPage<JobRegistry>> selectAll() {
 	protected QueryWrapper<JobRegistry> pageQueryWrapperCustom(Map<String, Object> map) {
 		// mybatis plus 分页相关的参数
 		Map<String, Object> pageHelperParams = PageUtils.filterPageParams(map);
-		logger.info("分页相关的参数: {}", pageHelperParams);
 		//过滤空值，分页查询相关的参数
 		Map<String, Object> columnQueryMap = PageUtils.filterColumnQueryParams(map);
-		logger.info("字段查询条件参数为: {}", columnQueryMap);
 
 		QueryWrapper<JobRegistry> queryWrapper = new QueryWrapper<>();
 

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobInfoController.java
Patch:
@@ -49,7 +49,7 @@ public ReturnT<Map<String, Object>> pageList(@RequestParam(required = false, def
 
     @GetMapping("/list")
     @ApiOperation("全部任务列表")
-    public ReturnT<List<Object>> list(){
+    public ReturnT<List<JobInfo>> list(){
         return new ReturnT<>(jobService.list());
     }
 

File: datax-admin/src/main/java/com/wugui/datax/admin/mapper/JobInfoMapper.java
Patch:
@@ -34,7 +34,7 @@ int pageListCount(@Param("offset") int offset,
                       @Param("userId") int userId,
                       @Param("projectIds") Integer[] projectIds);
 
-    List<Object> findAll();
+    List<JobInfo> findAll();
 
     int save(JobInfo info);
 

File: datax-admin/src/main/java/com/wugui/datax/admin/mapper/JobTemplateMapper.java
Patch:
@@ -22,8 +22,6 @@ public List<JobTemplate> pageList(@Param("offset") int offset,
 									  @Param("userId") int userId,
 									  @Param("projectIds") Integer[] projectIds);
 
-	public List<JobTemplate> findAll();
-
 	public int pageListCount(@Param("offset") int offset,
                              @Param("pagesize") int pagesize,
                              @Param("jobGroup") int jobGroup,

File: datax-admin/src/main/java/com/wugui/datax/admin/service/DatasourceQueryService.java
Patch:
@@ -57,5 +57,5 @@ public interface DatasourceQueryService {
      * @param id
      * @return
      */
-    List<String> getPgTableSchema(Long id);
+    List<String> getTableSchema(Long id);
 }

File: datax-admin/src/main/java/com/wugui/datax/admin/service/JobService.java
Patch:
@@ -30,7 +30,7 @@ public interface JobService {
      */
     Map<String, Object> pageList(int start, int length, int jobGroup, int triggerStatus, String jobDesc, String glueType, int userId,Integer[] projectIds);
 
-    List<Object> list();
+    List<JobInfo> list();
 
     /**
      * add job

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/DatasourceQueryServiceImpl.java
Patch:
@@ -57,7 +57,7 @@ public List<String> getTables(Long id,String tableSchema) throws IOException {
     }
 
     @Override
-    public List<String> getPgTableSchema(Long id) {
+    public List<String> getTableSchema(Long id) {
         //获取数据源对象
         JobDatasource datasource = jobDatasourceService.getById(id);
         //queryTool组装

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/JobServiceImpl.java
Patch:
@@ -74,7 +74,7 @@ public Map<String, Object> pageList(int start, int length, int jobGroup, int tri
         return maps;
     }
 
-    public List<Object> list() {
+    public List<JobInfo> list() {
         return jobInfoMapper.findAll();
     }
 

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobCodeController.java
Patch:
@@ -8,7 +8,6 @@
 import com.wugui.datax.admin.mapper.JobLogGlueMapper;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
-import org.springframework.beans.BeanUtils;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobInfoController.java
Patch:
@@ -42,9 +42,9 @@ public class JobInfoController extends BaseController{
     @ApiOperation("任务列表")
     public ReturnT<Map<String, Object>> pageList(@RequestParam(required = false, defaultValue = "0") int current,
                                         @RequestParam(required = false, defaultValue = "10") int size,
-                                        int jobGroup, int triggerStatus, String jobDesc, String glueType, int userId, Integer[] projectIds) {
+                                        int jobGroup, int triggerStatus, String jobDesc, String glueType, Integer[] projectIds) {
 
-        return new ReturnT<>(jobService.pageList((current-1)*size, size, jobGroup, triggerStatus, jobDesc, glueType, userId, projectIds));
+        return new ReturnT<>(jobService.pageList((current-1)*size, size, jobGroup, triggerStatus, jobDesc, glueType, 0, projectIds));
     }
 
     @GetMapping("/list")

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobRegistryController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
-import com.baomidou.mybatisplus.extension.api.ApiController;
 import com.baomidou.mybatisplus.extension.api.R;
 import com.wugui.datax.admin.entity.JobRegistry;
 import com.wugui.datax.admin.service.JobRegistryService;

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobTemplateController.java
Patch:
@@ -35,9 +35,9 @@ public class JobTemplateController {
     @ApiOperation("任务模板列表")
     public ReturnT<Map<String, Object>> pageList(@RequestParam(required = false, defaultValue = "0") int current,
                                         @RequestParam(required = false, defaultValue = "10") int size,
-                                        int jobGroup, String jobDesc, String executorHandler, String author) {
+                                        int jobGroup, String jobDesc, String executorHandler, int userId,Integer[] projectIds) {
 
-        return new ReturnT<>(jobTemplateService.pageList((current-1)*size, size, jobGroup, jobDesc, executorHandler, author));
+        return new ReturnT<>(jobTemplateService.pageList((current-1)*size, size, jobGroup, jobDesc, executorHandler, userId, projectIds));
     }
 
     @GetMapping("/list")

File: datax-admin/src/main/java/com/wugui/datax/admin/dto/DataXBatchJsonBuildDto.java
Patch:
@@ -9,7 +9,7 @@
  * 构建json dto
  *
  * @author jingwk
- * @ClassName DataxJsonDto
+ * @ClassName DataXJsonDto
  * @Version 2.1.2
  * @since 2020/05/05 17:15
  */

File: datax-admin/src/main/java/com/wugui/datax/admin/service/JobTemplateService.java
Patch:
@@ -22,10 +22,10 @@ public interface JobTemplateService {
 	 * @param jobGroup
 	 * @param jobDesc
 	 * @param executorHandler
-	 * @param author
+	 * @param userId
 	 * @return
 	 */
-	Map<String, Object> pageList(int start, int length, int jobGroup, String jobDesc, String executorHandler, String author);
+	Map<String, Object> pageList(int start, int length, int jobGroup, String jobDesc, String executorHandler, int userId,Integer[] projectIds);
 
 	/**
 	 * find all template

File: datax-admin/src/main/java/com/wugui/datax/admin/util/DBUtilErrorCode.java
Patch:
@@ -1,6 +1,8 @@
 package com.wugui.datax.admin.util;
 
-//TODO
+/**
+ * DBUtilErrorCode
+ */
 public enum DBUtilErrorCode implements ErrorCode {
     //连接错误
     MYSQL_CONN_USERPWD_ERROR("MYSQLErrCode-01","数据库用户名或者密码错误，请检查填写的账号密码或者联系DBA确认账号和密码是否正确"),

File: datax-core/src/main/java/com/wugui/datatx/core/handler/impl/ScriptJobHandler.java
Patch:
@@ -80,7 +80,7 @@ public ReturnT<String> execute(TriggerParam tgParam) throws Exception {
 
         // invoke
         JobLogger.log("----------- script file:"+ scriptFileName +" -----------");
-        int exitValue = ScriptUtil.execToFile(cmd, scriptFileName, logFileName, scriptParams);
+        int exitValue = ScriptUtil.execToFile(cmd, scriptFileName, logFileName,tgParam.getLogId(),tgParam.getLogDateTime(), scriptParams);
 
         if (exitValue == 0) {
             return IJobHandler.SUCCESS;

File: datax-core/src/main/java/com/wugui/datatx/core/thread/ProcessCallbackThread.java
Patch:
@@ -181,7 +181,7 @@ private void doCallback(List<HandleProcessCallbackParam> callbackParamList) {
      */
     private void callbackLog(List<HandleProcessCallbackParam> callbackParamList, String logContent) {
         for (HandleProcessCallbackParam callbackParam : callbackParamList) {
-            String logFileName = JobFileAppender.makeLogFileName(new Date(callbackParam.getLogDateTim()), callbackParam.getLogId());
+            String logFileName = JobFileAppender.makeLogFileName(new Date(callbackParam.getLogDateTime()), callbackParam.getLogId());
             JobFileAppender.contextHolder.set(logFileName);
             JobLogger.log(logContent);
         }

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/DataxJsonServiceImpl.java
Patch:
@@ -33,8 +33,6 @@ public String buildJobJson(DataxJsonDto dataxJsonDto) {
         JobDatasource writerDatasource = jobJdbcDatasourceService.getById(dataxJsonDto.getWriterDatasourceId());
         dataxJsonHelper.initWriter(dataxJsonDto, writerDatasource);
 
-
-
         return JSON.toJSONString(dataxJsonHelper.buildJob());
     }
 }
\ No newline at end of file

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/datax/DataxJsonHelper.java
Patch:
@@ -165,7 +165,7 @@ public void initWriter(DataxJsonDto dataxJsonDto, JobDatasource readerDatasource
         }
     }
 
-    public List<String> rewrite(List<?> list, String datasource) {
+    public List<String> rewrite(List<String> list, String datasource) {
         List<String> newLists = new ArrayList<>();
         if (JdbcConstants.POSTGRESQL.equals(datasource)) {
             list.forEach((v) -> {
@@ -179,6 +179,8 @@ public List<String> rewrite(List<?> list, String datasource) {
             list.forEach((v) -> {
                 newLists.add("`" + v + "`");
             });
+        }else {
+            return list;
         }
         return newLists;
     }

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/JobServiceImpl.java
Patch:
@@ -238,9 +238,10 @@ public ReturnT<String> update(JobInfo jobInfo) {
             }
         }
 
-        if (jobInfo.getReplaceParamType() != null || jobInfo.getReplaceParamType().isEmpty()) {
+        if (jobInfo.getReplaceParamType() == null || jobInfo.getReplaceParamType().isEmpty()) {
             jobInfo.setReplaceParamType("UnitTime");
         }
+
         exists_jobInfo.setJobGroup(jobInfo.getJobGroup());
         exists_jobInfo.setJobCron(jobInfo.getJobCron());
         exists_jobInfo.setJobDesc(jobInfo.getJobDesc());

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobCodeController.java
Patch:
@@ -45,7 +45,7 @@ public ReturnT<String> save(Model model, int id, String glueSource, String glueR
         }
         JobInfo existsJobInfo = jobInfoMapper.loadById(id);
         if (existsJobInfo == null) {
-            return new ReturnT<>(FAIL_CODE, I18nUtil.getString("jobinfo_glue_jobid_unvalid"));
+            return new ReturnT<>(FAIL_CODE, I18nUtil.getString("jobinfo_glue_jobid_invalid"));
         }
 
         // update new code

File: datax-admin/src/main/java/com/wugui/datax/admin/controller/JobLogController.java
Patch:
@@ -99,7 +99,7 @@ public ReturnT<String> logKill(int id) {
         JobLog log = jobLogMapper.load(id);
         JobInfo jobInfo = jobInfoMapper.loadById(log.getJobId());
         if (jobInfo == null) {
-            return new ReturnT<>(500, I18nUtil.getString("jobinfo_glue_jobid_unvalid"));
+            return new ReturnT<>(500, I18nUtil.getString("jobinfo_glue_jobid_invalid"));
         }
         if (ReturnT.SUCCESS_CODE != log.getTriggerCode()) {
             return new ReturnT<>(500, I18nUtil.getString("joblog_kill_log_limit"));
@@ -151,7 +151,7 @@ public ReturnT<String> clearLog(int jobGroup, int jobId, int type) {
         } else if (type == 9) {
             clearBeforeNum = 0;            // 清理所有日志数据
         } else {
-            return new ReturnT<>(ReturnT.FAIL_CODE, I18nUtil.getString("joblog_clean_type_unvalid"));
+            return new ReturnT<>(ReturnT.FAIL_CODE, I18nUtil.getString("joblog_clean_type_invalid"));
         }
 
         List<Long> logIds;

File: datax-admin/src/main/java/com/wugui/datax/admin/filter/JWTAuthenticationFilter.java
Patch:
@@ -87,6 +87,6 @@ protected void successfulAuthentication(HttpServletRequest request,
     @Override
     protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) throws IOException, ServletException {
         response.setCharacterEncoding("UTF-8");
-        response.getWriter().write(JSON.toJSON(new ReturnT<>(ReturnT.FAIL_CODE,I18nUtil.getString("login_param_unvalid"))).toString());
+        response.getWriter().write(JSON.toJSON(new ReturnT<>(ReturnT.FAIL_CODE,I18nUtil.getString("login_param_invalid"))).toString());
     }
 }
\ No newline at end of file

File: datax-admin/src/main/java/com/wugui/datax/admin/core/trigger/JobTrigger.java
Patch:
@@ -49,7 +49,7 @@ public static void trigger(int jobId, TriggerTypeEnum triggerType, int failRetry
         }
         if (GlueTypeEnum.BEAN.getDesc().equals(jobInfo.getGlueType())) {
             //解密账密
-            String json = JSONUtils.decryptJson(jobInfo.getJobJson());
+            String json = JSONUtils.changeJson(jobInfo.getJobJson(), JSONUtils.decrypt);
             jobInfo.setJobJson(json);
         }
         if (StringUtils.isNotBlank(executorParam)) {

File: datax-admin/src/main/java/com/wugui/datax/admin/dto/HbaseWriterDto.java
Patch:
@@ -11,7 +11,7 @@ public class HbaseWriterDto implements Serializable {
 
   private String writerMode;
 
-  private RowkeyColumn writerRowkeyColumn;
+  private String writerRowkeyColumn;
 
   private VersionColumn writerVersionColumn;
 }

File: datax-admin/src/main/java/com/wugui/datax/admin/entity/JwtUser.java
Patch:
@@ -21,11 +21,11 @@ public JwtUser() {
     }
 
     // 写一个能直接使用user创建jwtUser的构造器
-    public JwtUser(JobUser user) {
+    public JwtUser(JobUser user,JobRole role) {
         id = user.getId();
         username = user.getUsername();
         password = user.getPassword();
-        authorities = Collections.singleton(new SimpleGrantedAuthority(user.getRole()));
+        authorities = Collections.singleton(new SimpleGrantedAuthority(role.getName()));
     }
 
     @Override

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/JobTemplateServiceImpl.java
Patch:
@@ -49,7 +49,7 @@ public Map<String, Object> pageList(int start, int length, int jobGroup, String
 		int list_count = jobTemplateMapper.pageListCount(start, length, jobGroup, jobDesc, executorHandler, author);
 		
 		// package result
-		Map<String, Object> maps = new HashMap<String, Object>();
+		Map<String, Object> maps = new HashMap<>();
 	    maps.put("recordsTotal", list_count);		// 总记录数
 	    maps.put("recordsFiltered", list_count);	// 过滤后的总记录数
 	    maps.put("data", list);  					// 分页列表

File: datax-admin/src/main/java/com/wugui/datax/admin/service/impl/UserDetailsServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.wugui.datax.admin.service.impl;
 
+import com.wugui.datax.admin.entity.JobRole;
 import com.wugui.datax.admin.entity.JwtUser;
 import com.wugui.datax.admin.entity.JobUser;
 import com.wugui.datax.admin.mapper.JobUserMapper;
@@ -24,7 +25,8 @@ public class UserDetailsServiceImpl implements UserDetailsService {
     @Override
     public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {
         JobUser user = jobUserMapper.loadByUserName(s);
-        return new JwtUser(user);
+        JobRole role = jobUserMapper.getRoleByUserId(user.getId());
+        return new JwtUser(user, role);
     }
 
 }

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/datax/writer/HBaseWriter.java
Patch:
@@ -1,5 +1,6 @@
 package com.wugui.datax.admin.tool.datax.writer;
 
+import com.alibaba.fastjson.JSON;
 import com.google.common.collect.Maps;
 import com.wugui.datax.admin.tool.pojo.DataxHbasePojo;
 import org.apache.commons.lang3.StringUtils;
@@ -28,9 +29,7 @@ public Map<String, Object> buildHbase(DataxHbasePojo plugin) {
         parameterObj.put("table", plugin.getWriterTable());
         parameterObj.put("mode", plugin.getWriterMode());
         parameterObj.put("column", plugin.getColumns());
-        if (StringUtils.isNotBlank(plugin.getWriterRowkeyColumn().getType())) {
-            parameterObj.put("rowkeyColumn", plugin.getWriterRowkeyColumn());
-        }
+        parameterObj.put("rowkeyColumn", JSON.parseArray(plugin.getWriterRowkeyColumn()));
         if (StringUtils.isNotBlank(plugin.getWriterVersionColumn().getValue())) {
             parameterObj.put("versionColumn", plugin.getWriterVersionColumn());
         }

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/meta/DatabaseMetaFactory.java
Patch:
@@ -24,6 +24,8 @@ public static DatabaseInterface getByDbType(String dbType) {
             return SqlServerDatabaseMeta.getInstance();
         } else if (JdbcConstants.HIVE.equals(dbType)) {
             return HiveDatabaseMeta.getInstance();
+        }else if(JdbcConstants.CLICKHOUSE.equals(dbType)) {
+            return ClickHouseDataBaseMeta.getInstance();
         } else {
             throw new UnsupportedOperationException("暂不支持的类型：".concat(dbType));
         }

File: datax-admin/src/main/java/com/wugui/datax/admin/tool/pojo/DataxHbasePojo.java
Patch:
@@ -1,7 +1,6 @@
 package com.wugui.datax.admin.tool.pojo;
 
 import com.wugui.datax.admin.dto.Range;
-import com.wugui.datax.admin.dto.RowkeyColumn;
 import com.wugui.datax.admin.dto.VersionColumn;
 import com.wugui.datax.admin.entity.JobDatasource;
 import lombok.Data;
@@ -38,5 +37,5 @@ public class DataxHbasePojo {
 
   private VersionColumn writerVersionColumn;
 
-  private RowkeyColumn writerRowkeyColumn;
+  private String writerRowkeyColumn;
 }

File: datax-admin/src/main/java/com/wugui/datax/admin/util/ServletUtils.java
Patch:
@@ -56,7 +56,7 @@ public static HttpServletRequest getRequest() {
      * <filter-name>requestContextFilter</filter-name><url-pattern>/*</url-pattern></filter-mapping>
      */
     public static HttpServletResponse getResponse() {
-        HttpServletResponse response = null;
+        HttpServletResponse response;
         try {
             response = ((ServletRequestAttributes) RequestContextHolder.currentRequestAttributes()).getResponse();
             if (response == null) {

File: datax-core/src/main/java/com/wugui/datatx/core/thread/JobThread.java
Patch:
@@ -46,8 +46,8 @@ public class JobThread extends Thread {
     public JobThread(int jobId, IJobHandler handler) {
         this.jobId = jobId;
         this.handler = handler;
-        this.triggerQueue = new LinkedBlockingQueue<TriggerParam>();
-        this.triggerLogIdSet = Collections.synchronizedSet(new HashSet<Long>());
+        this.triggerQueue = new LinkedBlockingQueue<>();
+        this.triggerLogIdSet = Collections.synchronizedSet(new HashSet<>());
     }
 
     public IJobHandler getHandler() {

File: datax-registry/src/main/java/com.wugui.datax.registry/model/XxlRegistryDataParamVO.java
Patch:
@@ -14,6 +14,7 @@ public class XxlRegistryDataParamVO {
 
     public XxlRegistryDataParamVO() {
     }
+
     public XxlRegistryDataParamVO(String key, String value) {
         this.key = key;
         this.value = value;

File: datax-registry/src/main/java/com.wugui.datax.registry/util/json/BasicJsonwriter.java
Patch:
@@ -82,13 +82,13 @@ private void writeObjItem(String key, Object value, StringBuilder json) {
             // string
 
             json.append(STR_SLASH).append(value.toString()).append(STR_SLASH);
-        } else if ( value instanceof Boolean
+        } else if (value instanceof Boolean
                 || value instanceof Short
                 || value instanceof Integer
                 || value instanceof Long
                 || value instanceof Float
                 || value instanceof Double
-                ) {
+        ) {
             // number
 
             json.append(value);
@@ -191,5 +191,4 @@ private synchronized Object getFieldObject(Field field, Object obj) {
     }
 
 
-
 }
\ No newline at end of file

File: datax-rpc/src/main/java/com/wugui/datax/rpc/registry/impl/LocalServiceRegistry.java
Patch:
@@ -36,7 +36,7 @@ public void stop() {
 
     @Override
     public boolean registry(Set<String> keys, String value) {
-        if (keys==null || keys.size()==0 || value==null || value.trim().length()==0) {
+        if (keys == null || keys.size() == 0 || value == null || value.trim().length() == 0) {
             return false;
         }
         for (String key : keys) {
@@ -52,7 +52,7 @@ public boolean registry(Set<String> keys, String value) {
 
     @Override
     public boolean remove(Set<String> keys, String value) {
-        if (keys==null || keys.size()==0 || value==null || value.trim().length()==0) {
+        if (keys == null || keys.size() == 0 || value == null || value.trim().length() == 0) {
             return false;
         }
         for (String key : keys) {
@@ -66,7 +66,7 @@ public boolean remove(Set<String> keys, String value) {
 
     @Override
     public Map<String, TreeSet<String>> discovery(Set<String> keys) {
-        if (keys==null || keys.size()==0) {
+        if (keys == null || keys.size() == 0) {
             return null;
         }
         Map<String, TreeSet<String>> registryDataTmp = new HashMap<String, TreeSet<String>>();

File: datax-rpc/src/main/java/com/wugui/datax/rpc/remoting/invoker/call/XxlRpcInvokeFuture.java
Patch:
@@ -20,13 +20,13 @@ public class XxlRpcInvokeFuture implements Future {
     public XxlRpcInvokeFuture(XxlRpcFutureResponse futureResponse) {
         this.futureResponse = futureResponse;
     }
-    public void stop(){
+
+    public void stop() {
         // remove-InvokerFuture
         futureResponse.removeInvokerFuture();
     }
 
 
-
     @Override
     public boolean cancel(boolean mayInterruptIfRunning) {
         return futureResponse.cancel(mayInterruptIfRunning);

File: datax-rpc/src/main/java/com/wugui/datax/rpc/remoting/invoker/impl/XxlRpcSpringInvokerFactory.java
Patch:
@@ -26,7 +26,7 @@
  *
  * @author xuxueli 2018-10-19
  */
-public class XxlRpcSpringInvokerFactory extends InstantiationAwareBeanPostProcessorAdapter implements InitializingBean,DisposableBean, BeanFactoryAware {
+public class XxlRpcSpringInvokerFactory extends InstantiationAwareBeanPostProcessorAdapter implements InitializingBean, DisposableBean, BeanFactoryAware {
     private Logger logger = LoggerFactory.getLogger(XxlRpcSpringInvokerFactory.class);
 
     // ---------------------- config ----------------------

File: datax-rpc/src/main/java/com/wugui/datax/rpc/util/NetUtil.java
Patch:
@@ -47,7 +47,7 @@ public static int findAvailablePort(int defaultPort) {
      * @return
      */
     public static boolean isPortUsed(int port) {
-        boolean used = false;
+        boolean used;
         ServerSocket serverSocket = null;
         try {
             serverSocket = new ServerSocket(port);

File: datax-rpc/src/main/java/com/wugui/datax/rpc/util/XxlRpcException.java
Patch:
@@ -4,6 +4,7 @@
  * @author xuxueli 2018-10-20 23:00:40
  */
 public class XxlRpcException extends RuntimeException {
+
     private static final long serialVersionUID = 42L;
 
     public XxlRpcException(String msg) {

File: datax-admin/src/main/java/com/wugui/datax/admin/config/ControllerAspect.java
Patch:
@@ -44,10 +44,10 @@ public Object doAround(ProceedingJoinPoint joinPoint) throws Throwable {
             log.info("---controller: {} costTime is {}ms", method, cost);
             return resObj;
         } catch (Throwable e) {
-            long excepCost = System.currentTimeMillis() - start;
+            long exceptCost = System.currentTimeMillis() - start;
             log.error(
                     "controller request failed {} costTime is {}ms with exception {}",
-                    method, excepCost, e.getMessage());
+                    method, exceptCost, e.getMessage());
             throw e;
         }
     }

File: datax-core/src/main/java/com/wugui/datatx/core/handler/impl/ScriptJobHandler.java
Patch:
@@ -20,6 +20,7 @@ public class ScriptJobHandler extends IJobHandler {
     private String gluesource;
     private GlueTypeEnum glueType;
 
+
     public ScriptJobHandler(int jobId, long glueUpdatetime, String gluesource, GlueTypeEnum glueType){
         this.jobId = jobId;
         this.glueUpdatetime = glueUpdatetime;
@@ -68,7 +69,7 @@ public ReturnT<String> execute(String param) throws Exception {
         }
 
         // log file
-        String logFileName = JobFileAppender.contextHolder.get();
+        String logFileName = JobFileAppender.cxtHolder.get();
 
         // script params：0=param、1=分片序号、2=分片总数
         ShardingUtil.ShardingVO shardingVO = ShardingUtil.getShardingVo();

File: datax-web/src/main/java/com/wugui/dataxweb/controller/JobController.java
Patch:
@@ -128,13 +128,13 @@ public String mock2() {
     /**
      * 通过接口传入json配置启动一个datax作业
      *
-     * @param jobJson
+     * @param runJobDto
      * @return
      */
     @ApiOperation("通过传入json配置启动一个datax作业")
     @PostMapping("/runJob")
-    public R<String> runJob(@RequestBody String jobJson) {
-        String result = iDataxJobService.startJobByJsonStr(jobJson);
+    public R<String> runJob(@RequestBody RunJobDto runJobDto) {
+        String result = iDataxJobService.startJobByJsonStr(runJobDto.getJobJson());
         return R.ok(result);
     }
 

File: datax-web/src/main/java/com/wugui/dataxweb/controller/BaseForm.java
Patch:
@@ -153,8 +153,9 @@ public String getOrderby() {
      */
     public Page getPlusPagingQueryEntity() {
         Page page = new Page();
-        page.setCurrent(Long.valueOf(StrUtil.toString(this.get("current"))));
-        page.setSize(Long.valueOf(StrUtil.toString(this.getString("size"))));
+        //如果无current，默认返回1000条数据
+        page.setCurrent(Long.valueOf(StrUtil.toString(ObjectUtil.defaultIfNull(this.get("current"), "0"))));
+        page.setSize(Long.valueOf(StrUtil.toString(ObjectUtil.defaultIfNull(this.get("size"), "1000"))));
         if (ObjectUtil.isNotNull(this.get("ifCount"))) {
             page.setSearchCount(BooleanUtil.toBoolean(this.getString("ifCount")));
         } else {

