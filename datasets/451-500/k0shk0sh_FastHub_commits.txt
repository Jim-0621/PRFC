File: app/src/main/java/com/fastaccess/provider/timeline/ReactionsProvider.java
Patch:
@@ -91,7 +91,7 @@ public boolean isPreviouslyReacted(long idOrNumber, @IdRes int vId) {
             return false;
         }
         ReactionTypes type = ReactionTypes.get(vId);
-        return type != null && type.getContent().equals(reactionsModel.getContent());
+        return type != null && (type.getContent().equals(reactionsModel.getContent()) || type.getPostContent().equals(reactionsModel.getContent()));
     }
 
     public boolean isCallingApi(long id, int vId) {
@@ -100,7 +100,8 @@ public boolean isCallingApi(long id, int vId) {
             return false;
         }
         ReactionTypes type = ReactionTypes.get(vId);
-        return type != null && type.getContent().equals(reactionsModel.getContent()) && reactionsModel.isCallingApi();
+        return type != null && (type.getContent().equals(reactionsModel.getContent()) || type.getPostContent().equals(reactionsModel.getContent()))
+                && reactionsModel.isCallingApi();
     }
 
     @NonNull private Map<Long, ReactionsModel> getReactionsMap() {

File: app/src/main/java/com/fastaccess/data/dao/types/ReactionTypes.java
Patch:
@@ -14,8 +14,8 @@ public enum ReactionTypes {
 
     HEART("heart", R.id.heart, R.id.heartReaction),
     HOORAY("hooray", R.id.hurray, R.id.hurrayReaction),
-    PLUS_ONE("+1", R.id.thumbsUp, R.id.thumbsUpReaction),
-    MINUS_ONE("-1", R.id.thumbsDown, R.id.thumbsDownReaction),
+    PLUS_ONE("thumbs_up", R.id.thumbsUp, R.id.thumbsUpReaction),
+    MINUS_ONE("thumbs_down", R.id.thumbsDown, R.id.thumbsDownReaction),
     CONFUSED("confused", R.id.sad, R.id.sadReaction),
     LAUGH("laugh", R.id.laugh, R.id.laughReaction);
 

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -120,7 +120,6 @@ public static void downloadFile(@NonNull Context context, @NonNull String url) {
     public static int getErrorCode(Throwable throwable) {
         if (throwable instanceof HttpException) {
             return ((HttpException) throwable).code();
-
         }
         return -1;
     }

File: app/src/main/java/com/fastaccess/provider/timeline/handler/DrawableHandler.java
Patch:
@@ -41,7 +41,6 @@
                 builder.append("\n");
                 DrawableGetter imageGetter = new DrawableGetter(textView, width);
                 builder.setSpan(new ImageSpan(imageGetter.getDrawable(src)), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
-                builder.setSpan(new CenterSpan(), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
                 builder.append("\n");
             } else {
                 builder.append(SpannableBuilder.builder().clickable("Image", v -> SchemeParser.launchUri(v.getContext(), src)));

File: app/src/main/java/com/fastaccess/provider/timeline/handler/PreTagHandler.java
Patch:
@@ -71,7 +71,7 @@ private String replace(String text) {
             this.appendNewLine(builder);
             this.appendNewLine(builder);
         } else {
-            StringBuffer text = node.getText();
+            CharSequence text = node.getText();
             builder.append(" ");
             builder.append(replace(text.toString()));
             builder.append(" ");

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/DrawableGetter.java
Patch:
@@ -40,8 +40,8 @@ public DrawableGetter(TextView tv, int width) {
             final RequestBuilder load = Glide.with(context)
                     .load(url)
                     .placeholder(ContextCompat.getDrawable(context, R.drawable.ic_image))
-                    .dontAnimate()
-                    .override(width, width / 2);
+                    .dontAnimate();
+
             final GlideDrawableTarget target = new GlideDrawableTarget(urlDrawable, container, width);
             load.into(target);
             cachedTargets.add(target);

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/GlideDrawableTarget.java
Patch:
@@ -37,9 +37,8 @@ class GlideDrawableTarget extends SimpleTarget<Drawable> {
                     width = (float) (resource.getIntrinsicWidth() / downScale / 1.3);
                     height = (float) (resource.getIntrinsicHeight() / downScale / 1.3);
                 } else {
-                    float multiplier = (float) this.width / resource.getIntrinsicWidth();
-                    width = (float) resource.getIntrinsicWidth() * multiplier;
-                    height = (float) resource.getIntrinsicHeight() * multiplier;
+                    width =  (float) resource.getIntrinsicWidth();
+                    height = (float) resource.getIntrinsicHeight();
                 }
                 Rect rect = new Rect(0, 0, Math.round(width), Math.round(height));
                 resource.setBounds(rect);

File: app/src/main/java/com/fastaccess/ui/modules/parser/LinksParserActivity.java
Patch:
@@ -15,8 +15,6 @@
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.modules.login.chooser.LoginChooserActivity;
 
-import org.apache.tools.ant.ExitException;
-
 /**
  * Created by Kosh on 09 Dec 2016, 12:31 PM
  */
@@ -51,7 +49,7 @@ private void onCreate(@Nullable Intent intent) {
                     Uri uri = Uri.parse(sharedText);
                     onUriReceived(uri);
                 }
-            } catch (ExitException ignored) {}
+            } catch (Exception ignored) {}
         } else if (intent.getAction().equals(Intent.ACTION_VIEW)) {
             if (intent.getData() != null) {
                 onUriReceived(intent.getData());

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -426,7 +426,7 @@ private IssueTimelineFragment getIssueTimelineFragment() {
     }
 
     private void hideShowFab() {
-        if (getPresenter().isLocked() && !getPresenter().isOwner()) {
+        if (getPresenter().isLocked() && !getPresenter().isOwner() && !getPresenter().isCollaborator()) {
             getSupportFragmentManager().beginTransaction().hide(commentEditorFragment).commit();
             return;
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -574,7 +574,7 @@ private void updateViews(@NonNull PullRequest pullRequest) {
     }
 
     private void hideShowFab() {
-        if (getPresenter().isLocked() && !getPresenter().isOwner()) {
+        if (getPresenter().isLocked() && !getPresenter().isOwner() && !getPresenter().isCollaborator()) {
             getSupportFragmentManager().beginTransaction()
                     .setCustomAnimations(android.R.anim.fade_in, android.R.anim.fade_out)
                     .hide(commentEditorFragment).commit();

File: app/src/main/java/com/fastaccess/provider/timeline/CommentsHelper.java
Patch:
@@ -115,6 +115,7 @@ public static String getHeart() {
 
     @NonNull public static ArrayList<String> getUsers(@NonNull List<Comment> comments) {
         return Stream.of(comments)
+                .filter(comment -> comment.getUser() != null)
                 .map(comment -> comment.getUser().getLogin())
                 .distinct()
                 .collect(Collectors.toCollection(ArrayList::new));

File: app/src/main/java/com/fastaccess/data/dao/CreateMilestoneModel.java
Patch:
@@ -14,5 +14,5 @@
 public class CreateMilestoneModel {
     private String title;
     private String description;
-    @SerializedName("due_one") private String dueOn;
+    @SerializedName("due_on") private String dueOn;
 }

File: app/src/main/java/com/fastaccess/provider/colors/ColorsProvider.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.provider.colors;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Color;
 import android.support.annotation.ColorInt;
@@ -39,7 +40,7 @@ public class ColorsProvider {
 
     private static Map<String, LanguageColorModel> colors = new LinkedHashMap<>();
 
-    public static void load() {
+    @SuppressLint("CheckResult") public static void load() {
         if (colors.isEmpty()) {
             RxHelper.safeObservable(Observable
                     .create(observableEmitter -> {
@@ -68,7 +69,7 @@ public static void load() {
                 .filter(value -> value != null && !InputHelper.isEmpty(value.getKey()))
                 .map(Map.Entry::getKey)
                 .collect(Collectors.toCollection(ArrayList::new)));
-        lang.add(0, "All Languages");
+        lang.add(0, "All");
         lang.addAll(1, POPULAR_LANG);
         return lang;
     }

File: app/src/main/java/com/fastaccess/provider/rest/converters/GithubResponseConverter.java
Patch:
@@ -39,7 +39,7 @@ public class GithubResponseConverter extends Converter.Factory {
         return GsonConverterFactory.create(gson).requestBodyConverter(type, parameterAnnotations, methodAnnotations, retrofit);
     }
 
-    private static class StringResponseConverter implements Converter<ResponseBody, String> {
+    public static class StringResponseConverter implements Converter<ResponseBody, String> {
         @Override public String convert(@NonNull ResponseBody value) throws IOException {
             return value.string();
         }

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -94,7 +94,7 @@ public void setUrl(@Nullable String url, @Nullable String login, boolean isOrg,
                 .dontAnimate()
                 .into(avatar);
     }
-    
+
     private void setBackground() {
         if (PrefGetter.isRectAvatar()) {
             setBackgroundResource(R.drawable.rect_shape);

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -154,6 +154,7 @@ private void buildMisc(Context context, MaterialAboutCard.Builder miscCardBuilde
                         .setOnClickAction(() -> new LibsBuilder()
                                 .withActivityStyle(AppHelper.isNightMode(getResources()) ? Libs.ActivityStyle.DARK : Libs.ActivityStyle.LIGHT)
                                 .withAutoDetect(true)
+                                .withActivityTitle(this.getResources().getString(R.string.open_source_libs))
                                 .withAboutIconShown(true)
                                 .withAboutVersionShown(true)
                                 .start(this))

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -154,6 +154,7 @@ private void buildMisc(Context context, MaterialAboutCard.Builder miscCardBuilde
                         .setOnClickAction(() -> new LibsBuilder()
                                 .withActivityStyle(AppHelper.isNightMode(getResources()) ? Libs.ActivityStyle.DARK : Libs.ActivityStyle.LIGHT)
                                 .withAutoDetect(true)
+                                .withActivityTitle(this.getResources().getString(R.string.open_source_libs))
                                 .withAboutIconShown(true)
                                 .withAboutVersionShown(true)
                                 .start(this))

File: app/src/main/java/com/fastaccess/provider/timeline/handler/QuoteHandler.java
Patch:
@@ -19,9 +19,8 @@
 
     @ColorInt private int color;
 
+    @Override
     public void handleTagNode(TagNode node, SpannableStringBuilder builder, int start, int end) {
-        builder.append("\n");
-        builder.setSpan(new MarkDownQuoteSpan(color), (start > builder.length() - 1) ? start + 1 : start, builder.length() - 1, 33);
-        builder.append("\n");
+        builder.setSpan(new MarkDownQuoteSpan(color), start + 1, builder.length(), 33);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryFragment.java
Patch:
@@ -351,7 +351,7 @@ private void restoreData(Intent data) {
                 Map<String, ?> savedPref = gson.fromJson(json.toString(), typeOfHashMap);
                 if (savedPref != null && !savedPref.isEmpty()) {
                     for (Map.Entry<String, ?> stringEntry : savedPref.entrySet()) {
-                        PrefHelper.set(stringEntry.getKey(), stringEntry.getKey());
+                        PrefHelper.set(stringEntry.getKey(), stringEntry.getValue());
                     }
                 }
                 callback.onThemeChanged();

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/DynamicRecyclerView.java
Patch:
@@ -149,10 +149,10 @@ public void addDivider(@NonNull Class toDivide) {
 
     private boolean canAddDivider() {
         if (getLayoutManager() != null) {
-            if (getLayoutManager() instanceof LinearLayoutManager) {
-                return true;
-            } else if (getLayoutManager() instanceof GridLayoutManager) {
+            if (getLayoutManager() instanceof GridLayoutManager) {
                 return ((GridLayoutManager) getLayoutManager()).getSpanCount() == 1;
+            } else if (getLayoutManager() instanceof LinearLayoutManager) {
+                return true;
             } else if (getLayoutManager() instanceof StaggeredGridLayoutManager) {
                 return ((StaggeredGridLayoutManager) getLayoutManager()).getSpanCount() == 1;
             }

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/DynamicRecyclerView.java
Patch:
@@ -149,10 +149,10 @@ public void addDivider(@NonNull Class toDivide) {
 
     private boolean canAddDivider() {
         if (getLayoutManager() != null) {
-            if (getLayoutManager() instanceof LinearLayoutManager) {
-                return true;
-            } else if (getLayoutManager() instanceof GridLayoutManager) {
+            if (getLayoutManager() instanceof GridLayoutManager) {
                 return ((GridLayoutManager) getLayoutManager()).getSpanCount() == 1;
+            } else if (getLayoutManager() instanceof LinearLayoutManager) {
+                return true;
             } else if (getLayoutManager() instanceof StaggeredGridLayoutManager) {
                 return ((StaggeredGridLayoutManager) getLayoutManager()).getSpanCount() == 1;
             }

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedGists.java
Patch:
@@ -32,7 +32,7 @@
     @io.requery.Nullable long gistId;
 
     public static void pinUpin(@NonNull Gist gist) {
-        PinnedGists pinnedIssues = get(gist.getId());
+        PinnedGists pinnedIssues = get(gist.getGistId().hashCode());
         if (pinnedIssues == null) {
             PinnedGists pinned = new PinnedGists();
             pinned.setLogin(Login.getUser().getLogin());
@@ -42,7 +42,7 @@ public static void pinUpin(@NonNull Gist gist) {
                 App.getInstance().getDataStore().toBlocking().insert(pinned);
             } catch (Exception ignored) {}
         } else {
-            delete(gist.getId());
+            delete(gist.getGistId().hashCode());
         }
     }
 
@@ -73,5 +73,4 @@ public static void delete(long gistId) {
     public static boolean isPinned(long gistId) {
         return get(gistId) != null;
     }
-
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistActivity.java
Patch:
@@ -278,7 +278,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
     }
 
     @Override public void onUpdatePinIcon(@NonNull Gist gist) {
-        pinUnpin.setImageDrawable(PinnedGists.isPinned(gist.getId())
+        pinUnpin.setImageDrawable(PinnedGists.isPinned(gist.getGistId().hashCode())
                                   ? ContextCompat.getDrawable(this, R.drawable.ic_pin_filled)
                                   : ContextCompat.getDrawable(this, R.drawable.ic_pin));
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -231,7 +231,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
     }
 
     @Override public void onDelete(@NonNull String message, int position) {
-        getPresenter().onDeleteFile(message, adapter.getItem(position));
+        getPresenter().onDeleteFile(message, adapter.getItem(position), getParent() != null ? getParent().getRef() : "master");
     }
 
     private void showReload() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesMvp.java
Patch:
@@ -47,7 +47,7 @@ void onInitDataAndRequest(@NonNull String login, @NonNull String repoId, @NonNul
 
         @Nullable List<RepoFile> getCachedFiles(@NonNull String url, @NonNull String ref);
 
-        void onDeleteFile(@NonNull String message, @NonNull RepoFile item);
+        void onDeleteFile(@NonNull String message, @NonNull RepoFile item, @NonNull String branch);
     }
 
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -121,8 +121,8 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
         return pathsModel.getPaths(url, ref);
     }
 
-    @Override public void onDeleteFile(@NonNull String message, @NonNull RepoFile item) {
-        CommitRequestModel body = new CommitRequestModel(message, null, item.getSha());
+    @Override public void onDeleteFile(@NonNull String message, @NonNull RepoFile item, @NonNull String branch) {
+        CommitRequestModel body = new CommitRequestModel(message, null, item.getSha(), branch);
         makeRestCall(RestProvider.getContentService(isEnterprise())
                         .deleteFile(login, repoId, item.getPath(), ref, body),
                 gitCommitModel -> sendToView(SwipeRefreshLayout.OnRefreshListener::onRefresh));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerPresenter.java
Patch:
@@ -314,9 +314,11 @@ class PullRequestPagerPresenter extends BasePresenter<PullRequestPagerMvp.View>
     }
 
     private void callApi() {
+        Login loggedInUser = Login.getUser();
+        if (loggedInUser == null) return;
         makeRestCall(RxHelper.getObservable(Observable.zip(RestProvider.getPullRequestService(isEnterprise())
                         .getPullRequest(login, repoId, issueNumber),
-                RestProvider.getRepoService(isEnterprise()).isCollaborator(login, repoId, Login.getUser().getLogin()),
+                RestProvider.getRepoService(isEnterprise()).isCollaborator(login, repoId, loggedInUser.getLogin()),
                 RestProvider.getIssueService(isEnterprise()).getIssue(login, repoId, issueNumber),
                 (pullRequestModel, booleanResponse, issue) -> {
                     this.pullRequest = pullRequestModel;

File: app/src/main/java/com/fastaccess/helper/InputHelper.java
Patch:
@@ -67,7 +67,9 @@ public static long toLong(@NonNull TextView textView) {
     public static long toLong(@NonNull String text) {
         if (!isEmpty(text)) {
             try {
-                return Long.valueOf(text.replace(".", "").replaceAll(",", ""));
+                return Long.valueOf(text.replace(".", "")
+                        .replaceAll(",", "")
+                        .replaceAll(" ", ""));
             } catch (NumberFormatException ignored) {}
         }
         return 0;

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -448,7 +448,7 @@ private boolean canExit() {
         if (backPressTimer + 2000 > System.currentTimeMillis()) {
             return true;
         } else {
-            Toast.makeText(App.getInstance(), R.string.press_again_to_exit, Toast.LENGTH_SHORT).show();
+            showMessage(R.string.press_again_to_exit, R.string.press_again_to_exit);
         }
         backPressTimer = System.currentTimeMillis();
         return false;

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -448,7 +448,7 @@ private boolean canExit() {
         if (backPressTimer + 2000 > System.currentTimeMillis()) {
             return true;
         } else {
-            Toast.makeText(App.getInstance(), R.string.press_again_to_exit, Toast.LENGTH_SHORT).show();
+            showMessage(R.string.press_again_to_exit, R.string.press_again_to_exit);
         }
         backPressTimer = System.currentTimeMillis();
         return false;

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -288,6 +288,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String logi
                 if (!username.equalsIgnoreCase(this.login)) {
                     menu.findItem(R.id.block)
                             .setIcon(getPresenter().isUserBlocked() ? R.drawable.ic_unlock : R.drawable.ic_lock)
+                            .setTitle(getPresenter().isUserBlocked() ? getString(R.string.unblock) : getString(R.string.block))
                             .setVisible(true);
                 }
             }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitLinesViewHolder.java
Patch:
@@ -36,6 +36,7 @@ private CommitLinesViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdap
         patchAdditionColor = ViewHelper.getPatchAdditionColor(itemView.getContext());
         patchDeletionColor = ViewHelper.getPatchDeletionColor(itemView.getContext());
         patchRefColor = ViewHelper.getPatchRefColor(itemView.getContext());
+        textView.setOnLongClickListener(this);
     }
 
     public static CommitLinesViewHolder newInstance(@NonNull ViewGroup viewGroup, @NonNull BaseRecyclerAdapter adapter) {

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/DrawableGetter.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.text.Html;
 import android.widget.TextView;
 
@@ -36,8 +37,10 @@ public DrawableGetter(TextView tv, int width) {
             Context context = container.get().getContext();
             final GenericRequestBuilder load = Glide.with(context)
                     .load(url)
+                    .placeholder(ContextCompat.getDrawable(context, R.drawable.ic_image))
                     .dontAnimate();
             final GlideDrawableTarget target = new GlideDrawableTarget(urlDrawable, container, width);
+            load.override(width, width / 2);
             load.into(target);
             cachedTargets.add(target);
         }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -132,5 +132,7 @@ public class MainPresenter extends BasePresenter<MainMvp.View> implements MainMv
         }
     }
 
-    @Override public void onMenuItemReselect(@IdRes int id, int position, boolean fromUser) {}
+    @Override public void onMenuItemReselect(@IdRes int id, int position, boolean fromUser) {
+        sendToView(view -> view.onScrollTop(position));
+    }
 }

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryFragment.java
Patch:
@@ -226,10 +226,10 @@ private void addBackup() {
                 String json = new Gson().toJson(preferences);
                 String path = FileHelper.PATH;
                 File folder = new File(path);
-                boolean mkDirs = folder.mkdirs();
+                folder.mkdirs();
                 File backup = new File(folder, "backup.json");
                 try {
-                    boolean isCreated = backup.createNewFile();
+                    backup.createNewFile();
                     try (FileOutputStream outputStream = new FileOutputStream(backup)) {
                         try (OutputStreamWriter myOutWriter = new OutputStreamWriter(outputStream)) {
                             myOutWriter.append(json);
@@ -239,6 +239,7 @@ private void addBackup() {
                     Log.e(getTag(), "Couldn't backup: " + e.toString());
                 }
                 PrefHelper.set("backed_up", new SimpleDateFormat("MM/dd", Locale.ENGLISH).format(new Date()));
+                Toasty.success(App.getInstance(), getString(R.string.backed_up)).show();
             } else {
                 requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSION_REQUEST_CODE);
             }

File: app/src/main/java/com/fastaccess/ui/base/BaseFragment.java
Patch:
@@ -96,7 +96,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
     }
 
     @Override public void hideProgress() {
-        callback.hideProgress();
+        if (callback != null) callback.hideProgress();
     }
 
     @Override public void showMessage(@StringRes int titleRes, @StringRes int msgRes) {

File: app/src/main/java/com/fastaccess/provider/scheme/LinkParserHelper.java
Patch:
@@ -21,11 +21,11 @@
 
 public class LinkParserHelper {
     public static final String HOST_DEFAULT = "github.com";
+    public static final String PROTOCOL_HTTPS = "https";
     static final String HOST_GISTS = "gist.github.com";
     static final String HOST_GISTS_RAW = "gist.githubusercontent.com";
     static final String RAW_AUTHORITY = "raw.githubusercontent.com";
     static final String API_AUTHORITY = "api.github.com";
-    static final String PROTOCOL_HTTPS = "https";
     static final List<String> IGNORED_LIST = Arrays.asList("notifications", "settings", "blog",
             "explore", "dashboard", "repositories", "logout", "sessions", "site", "security",
             "contact", "about", "logos", "login", "pricing", "");

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -110,7 +110,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
         setupTheme();
         AppHelper.updateAppLanguage(this);
         super.onCreate(savedInstanceState);
-        Logger.e(FirebaseInstanceId.getInstance().getToken());
         if (layout() != 0) {
             setContentView(layout());
             ButterKnife.bind(this);

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -72,7 +72,7 @@ private void setupPreference() {
     public ReactiveEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 17);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 18);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPullRequest.java
Patch:
@@ -79,6 +79,7 @@
     int reviewComments;
     String repoId;
     String login;
+    String mergeableState;
     @Convert(UsersConverter.class) UsersListModel assignees;
     @Convert(UserConverter.class) User mergedBy;
     @Convert(UserConverter.class) User closedBy;
@@ -262,6 +263,7 @@ public static Observable<PullRequest> getPullRequestByNumber(int number, @NonNul
         dest.writeInt(this.reviewComments);
         dest.writeString(this.repoId);
         dest.writeString(this.login);
+        dest.writeString(this.mergeableState);
         dest.writeList(this.assignees);
         dest.writeParcelable(this.mergedBy, flags);
         dest.writeParcelable(this.closedBy, flags);
@@ -309,6 +311,7 @@ protected AbstractPullRequest(Parcel in) {
         this.reviewComments = in.readInt();
         this.repoId = in.readString();
         this.login = in.readString();
+        this.mergeableState = in.readString();
         this.assignees = new UsersListModel();
         in.readList(this.assignees, this.assignees.getClass().getClassLoader());
         this.mergedBy = in.readParcelable(User.class.getClassLoader());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -375,6 +375,7 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                             List<TimelineModel> models = TimelineConverter.INSTANCE.convert(response.getItems(), comments);
                             if (page == 1 && status != null) {
                                 status.setMergable(parameter.isMergeable());
+                                status.setMergeableState(parameter.getMergeState());
                                 if (status.getState() != null) models.add(0, new TimelineModel(status));
                             }
                             return models;

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -98,7 +98,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
     }
 
     @Override public void onInitDataAndRequest(@NonNull String login, @NonNull String repoId, @NonNull String path,
-                                               @NonNull String ref, boolean clear, @NonNull RepoFile toAppend) {
+                                               @NonNull String ref, boolean clear, @Nullable RepoFile toAppend) {
         if (clear) pathsModel.clear();
         this.login = login;
         this.repoId = repoId;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesFragment.java
Patch:
@@ -95,7 +95,7 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
         if (getArguments() == null) {
             throw new NullPointerException("Bundle is null, therefore, issues can't be proceeded.");
         }
-        stateLayout.setEmptyText(R.string.no_closed_issues);
+        stateLayout.setEmptyText(R.string.no_issues);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -97,7 +97,7 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
         if (getArguments() == null) {
             throw new NullPointerException("Bundle is null, therefore, issues can't be proceeded.");
         }
-        stateLayout.setEmptyText(R.string.no_opened_issues);
+        stateLayout.setEmptyText(R.string.no_issues);
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestFragment.java
Patch:
@@ -109,8 +109,7 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
         } else if (getPresenter().getPullRequests().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
-        stateLayout.setEmptyText(getPresenter().getIssueState() == IssueState.open
-                                 ? R.string.no_open_pull_requests : R.string.no_closed_pull_request);
+        stateLayout.setEmptyText(R.string.no_pull_requests);
         fastScroller.attachRecyclerView(recycler);
     }
 

File: app/src/main/java/com/fastaccess/data/service/GistService.java
Patch:
@@ -73,4 +73,6 @@ public interface GistService {
     @POST("gists/{gist_id}/forks")
     Observable<Response<Gist>> forkGist(@Path("gist_id") @NonNull String gistId);
 
+    @GET("/gists/starred") Observable<Pageable<Gist>> getStarredGists(@Query("page") int page);
+
 }

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -426,7 +426,8 @@ private static boolean getInvitationIntent(@NonNull Uri uri) {
         List<String> segments = uri.getPathSegments();
         if (segments == null || segments.size() < 4) return null;
         String segmentTwo = segments.get(2);
-        if (InputHelper.isEmpty(MimeTypeMap.getFileExtensionFromUrl(uri.toString()))) {
+        String extension = MimeTypeMap.getFileExtensionFromUrl(uri.toString());
+        if (InputHelper.isEmpty(extension) || TextUtils.isDigitsOnly(extension)) {
             Uri urlBuilder = LinkParserHelper.getBlobBuilder(uri);
             return RepoFilesActivity.getIntent(context, urlBuilder.toString());
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsDialogFragment.java
Patch:
@@ -72,8 +72,6 @@ public static LabelsDialogFragment newInstance(@Nullable LabelListModel selected
             callback = (LabelsMvp.SelectedLabelsListener) getParentFragment();
         } else if (context instanceof LabelsMvp.SelectedLabelsListener) {
             callback = (LabelsMvp.SelectedLabelsListener) context;
-        } else {
-            throw new IllegalArgumentException("Parent Fragment or Activity must implement LabelsMvp.SelectedLabelsListener");
         }
     }
 
@@ -98,6 +96,7 @@ public static LabelsDialogFragment newInstance(@Nullable LabelListModel selected
         if (labelModels == null) {
             labelModels = new ArrayList<>();
         }
+        add.setVisibility(callback == null ? View.GONE : View.VISIBLE);
         adapter = new LabelsAdapter(getPresenter().getLabels(), this);
         recycler.setAdapter(adapter);
         fastScroller.attachRecyclerView(recycler);
@@ -157,7 +156,7 @@ public static LabelsDialogFragment newInstance(@Nullable LabelListModel selected
                 dismiss();
                 break;
             case R.id.ok:
-                callback.onSelectedLabels(labelModels);
+                if (callback != null) callback.onSelectedLabels(labelModels);
                 dismiss();
                 break;
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesMvp.java
Patch:
@@ -4,6 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.fastaccess.data.dao.CommentRequestModel;
 import com.fastaccess.data.dao.CommitFileChanges;
 import com.fastaccess.data.dao.CommitLinesModel;
 import com.fastaccess.data.dao.model.Comment;
@@ -37,6 +38,8 @@ interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListe
         void onFragmentCreated(@Nullable Bundle bundle);
 
         void onSubmitComment(@NonNull String comment, @NonNull CommitLinesModel item, @Nullable Bundle bundle);
+
+        void onSubmit(String username, String name, CommentRequestModel commentRequestModel);
     }
 
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -174,7 +174,7 @@ private void setupChanges() {
     }
 
     @Override public void onOpenForResult(int position, @NonNull CommitFileChanges model) {
-        FullScreenFileChangeActivity.Companion.startActivityForResult(this, model, position);
+        FullScreenFileChangeActivity.Companion.startActivityForResult(this, model, position, false);
     }
 
     @Override public void onRefresh() {

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -110,7 +110,7 @@ private void buildLogo(Context context, MaterialAboutCard.Builder newLogoAuthor,
                 .addItem(new MaterialAboutActionItem.Builder()
                         .text(R.string.website)
                         .icon(ContextCompat.getDrawable(context, R.drawable.ic_brower))
-                        .setOnClickAction(() -> ActivityHelper.startCustomTab(this, "https://www.221pixels.com/"))
+                        .setOnClickAction(() -> ActivityHelper.startCustomTab(this, "http://kevaguilar.com/"))
                         .build());
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -110,7 +110,7 @@ private void buildLogo(Context context, MaterialAboutCard.Builder newLogoAuthor,
                 .addItem(new MaterialAboutActionItem.Builder()
                         .text(R.string.website)
                         .icon(ContextCompat.getDrawable(context, R.drawable.ic_brower))
-                        .setOnClickAction(() -> ActivityHelper.startCustomTab(this, "https://www.221pixels.com/"))
+                        .setOnClickAction(() -> ActivityHelper.startCustomTab(this, "http://kevaguilar.com/"))
                         .build());
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -296,6 +296,8 @@ public class IssueTimelineFragment extends BaseFragment<IssueTimelineMvp.View, I
             recycler.smoothScrollToPosition(1);
         } else if (index != -1) {
             recycler.smoothScrollToPosition(index + 1);
+        } else {
+            showMessage(R.string.error, R.string.comment_is_too_far_to_paginate);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -61,8 +61,7 @@ public M getItemByPosition(int position) {
     }
 
     public M getItem(int position) {
-        if (position < data.size()) return data.get(position);
-        return null;
+        return data.get(position);
     }
 
     public int getItem(M t) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -296,6 +296,8 @@ public class IssueTimelineFragment extends BaseFragment<IssueTimelineMvp.View, I
             recycler.smoothScrollToPosition(1);
         } else if (index != -1) {
             recycler.smoothScrollToPosition(index + 1);
+        } else {
+            showMessage(R.string.error, R.string.comment_is_too_far_to_paginate);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -61,8 +61,7 @@ public M getItemByPosition(int position) {
     }
 
     public M getItem(int position) {
-        if (position < data.size()) return data.get(position);
-        return null;
+        return data.get(position);
     }
 
     public int getItem(M t) {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -271,7 +271,7 @@ private void showNotification(long id, android.app.Notification notification) {
         NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
         if (notificationManager != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                NotificationChannel notificationChannel = new NotificationChannel(String.valueOf(id),
+                NotificationChannel notificationChannel = new NotificationChannel(notification.getChannelId(),
                         notification.getChannelId(), NotificationManager.IMPORTANCE_DEFAULT);
                 notificationChannel.setShowBadge(true);
                 notificationManager.createNotificationChannel(notificationChannel);
@@ -297,4 +297,4 @@ private static class CustomNotificationModel {
         public Notification notification;
         public Comment comment;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -271,7 +271,7 @@ private void showNotification(long id, android.app.Notification notification) {
         NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
         if (notificationManager != null) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                NotificationChannel notificationChannel = new NotificationChannel(String.valueOf(id),
+                NotificationChannel notificationChannel = new NotificationChannel(notification.getChannelId(),
                         notification.getChannelId(), NotificationManager.IMPORTANCE_DEFAULT);
                 notificationChannel.setShowBadge(true);
                 notificationManager.createNotificationChannel(notificationChannel);
@@ -297,4 +297,4 @@ private static class CustomNotificationModel {
         public Notification notification;
         public Comment comment;
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/com/fastaccess/data/dao/StatusesModel.java
Patch:
@@ -16,7 +16,6 @@
 
 @Getter @Setter public class StatusesModel implements Parcelable {
     private String url;
-    private int id;
     private StatusStateType state;
     private String description;
     private String targetUrl;
@@ -30,7 +29,6 @@ public StatusesModel() {}
 
     @Override public void writeToParcel(Parcel dest, int flags) {
         dest.writeString(this.url);
-        dest.writeInt(this.id);
         dest.writeInt(this.state == null ? -1 : this.state.ordinal());
         dest.writeString(this.description);
         dest.writeString(this.targetUrl);
@@ -41,7 +39,6 @@ public StatusesModel() {}
 
     private StatusesModel(Parcel in) {
         this.url = in.readString();
-        this.id = in.readInt();
         int tmpState = in.readInt();
         this.state = tmpState == -1 ? null : StatusStateType.values()[tmpState];
         this.description = in.readString();

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -41,7 +41,7 @@ public class MarkDownProvider {
     };
 
     private static final String[] ARCHIVE_EXTENSIONS = {
-            ".zip", ".7z", ".rar", ".tar.gz", ".tgz", ".tar.Z", ".tar.bz2", ".tbz2", ".tar.lzma", ".tlz", ".apk", ".jar", ".dmg", ".pdf"
+            ".zip", ".7z", ".rar", ".tar.gz", ".tgz", ".tar.Z", ".tar.bz2", ".tbz2", ".tar.lzma", ".tlz", ".apk", ".jar", ".dmg", ".pdf", ".ico"
     };
 
     private MarkDownProvider() {}

File: app/src/main/java/com/fastaccess/ui/modules/profile/ProfilePagerFragment.java
Patch:
@@ -10,6 +10,7 @@
 import com.fastaccess.data.dao.FragmentPagerAdapterModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
 import com.fastaccess.ui.base.BaseFragment;
 import com.fastaccess.ui.widgets.ViewPagerView;

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchPresenter.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Created by Kosh on 08 Dec 2016, 8:20 PM
  */
-class SearchPresenter extends BasePresenter<SearchMvp.View> implements SearchMvp.Presenter {
+public class SearchPresenter extends BasePresenter<SearchMvp.View> implements SearchMvp.Presenter {
     private ArrayList<SearchHistory> hints = new ArrayList<>();
 
     @Override protected void onAttachView(@NonNull SearchMvp.View view) {

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -33,6 +33,7 @@
 import com.fastaccess.ui.modules.main.MainActivity;
 import com.fastaccess.ui.modules.profile.org.repos.OrgReposFragment;
 import com.fastaccess.ui.modules.profile.repos.ProfileReposFragment;
+import com.fastaccess.ui.modules.search.SearchUserActivity;
 import com.fastaccess.ui.widgets.SpannableBuilder;
 import com.fastaccess.ui.widgets.ViewPagerView;
 

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -117,8 +117,8 @@ public FragmentPagerAdapterModel(String title, Fragment fragment, String key) {
                 .collect(Collectors.toList());
     }
 
-    @NonNull public static List<FragmentPagerAdapterModel> buildForIssues(@NonNull Context context) {
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.details), IssueTimelineFragment.newInstance()))
+    @NonNull public static List<FragmentPagerAdapterModel> buildForIssues(@NonNull Context context, long commentId) {
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.details), IssueTimelineFragment.newInstance(commentId)))
                 .collect(Collectors.toList());
     }
 

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -40,6 +40,7 @@
     private ReviewModel review;
     private GroupedReviewModel groupedReviewModel;
     private PullRequestCommitModel commit;
+    private int position;
 
     public TimelineModel(Issue issue) {
         this.issue = issue;
@@ -113,7 +114,6 @@ public static TimelineModel constructComment(Comment comment) {
         return comment != null ? (int) comment.getId() : 0;
     }
 
-
     public IssueEventType getEvent() {
         return event;
     }
@@ -198,6 +198,7 @@ public void setCommit(PullRequestCommitModel commit) {
         dest.writeParcelable(this.review, flags);
         dest.writeParcelable(this.groupedReviewModel, flags);
         dest.writeParcelable(this.commit, flags);
+        dest.writeInt(this.position);
     }
 
     protected TimelineModel(Parcel in) {
@@ -211,6 +212,7 @@ protected TimelineModel(Parcel in) {
         this.review = in.readParcelable(ReviewModel.class.getClassLoader());
         this.groupedReviewModel = in.readParcelable(GroupedReviewModel.class.getClassLoader());
         this.commit = in.readParcelable(PullRequestCommitModel.class.getClassLoader());
+        this.position = in.readInt();
     }
 
     public static final Creator<TimelineModel> CREATOR = new Creator<TimelineModel>() {

File: app/src/main/java/com/fastaccess/provider/timeline/handler/EmojiHandler.java
Patch:
@@ -21,13 +21,13 @@ public class EmojiHandler extends TagNodeHandler {
         if (emoji != null) {
             Emoji unicode = EmojiManager.getForAlias(emoji);
             if (unicode != null && unicode.getUnicode() != null) {
-                builder.replace(start, end, unicode.getUnicode());
+                builder.replace(start, end, " " + unicode.getUnicode() + " ");
             }
         } else if (node.getText() != null) {
             Logger.e(node.getText());
             Emoji unicode = EmojiManager.getForAlias(node.getText().toString());
             if (unicode != null && unicode.getUnicode() != null) {
-                builder.replace(start, end, unicode.getUnicode());
+                builder.replace(start, end, " " + unicode.getUnicode() + " ");
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -187,7 +187,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     @Override public void hideProgress() {
         ProgressDialogFragment fragment = (ProgressDialogFragment) AppHelper.getFragmentByTag(getSupportFragmentManager(),
                 ProgressDialogFragment.TAG);
-        Logger.e(fragment);
         if (fragment != null) {
             isProgressShowing = false;
             fragment.dismiss();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -47,6 +47,7 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
     @com.evernote.android.state.State String repoId;
     @com.evernote.android.state.State boolean isCollaborator;
     @com.evernote.android.state.State boolean showToRepoBtn;
+    @com.evernote.android.state.State long commentId;
 
     @Nullable @Override public Issue getIssue() {
         return issueModel;
@@ -69,6 +70,7 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
             login = intent.getExtras().getString(BundleConstant.EXTRA);
             repoId = intent.getExtras().getString(BundleConstant.EXTRA_TWO);
             showToRepoBtn = intent.getExtras().getBoolean(BundleConstant.EXTRA_THREE);
+            commentId = intent.getExtras().getLong(BundleConstant.EXTRA_SIX);
             if (issueModel != null) {
                 issueNumber = issueModel.getNumber();
                 sendToView(view -> view.onSetupIssue(false));

File: app/src/main/java/com/fastaccess/helper/PrefHelper.java
Patch:
@@ -53,7 +53,8 @@ public class PrefHelper {
     }
 
     public static boolean getBoolean(@NonNull String key) {
-        return PreferenceManager.getDefaultSharedPreferences(App.getInstance()).getBoolean(key, false);
+        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(App.getInstance());
+        return preferences.getAll().get(key) instanceof Boolean && preferences.getBoolean(key, false);
     }
 
     public static int getInt(@NonNull String key) {

File: app/src/main/java/com/fastaccess/provider/timeline/TimelineProvider.java
Patch:
@@ -41,7 +41,7 @@ public class TimelineProvider {
             String thisString = context.getString(R.string.this_value);
             String in = context.getString(R.string.in_value);
             if (event == IssueEventType.labeled || event == IssueEventType.unlabeled) {
-                spannableBuilder.bold(issueEventModel.getActor().getLogin());
+                spannableBuilder.bold(issueEventModel.getActor() != null ? issueEventModel.getActor().getLogin() : "anonymous");
                 spannableBuilder.append(" ").append(event.name().replaceAll("_", " "));
                 LabelModel labelModel = issueEventModel.getLabel();
                 int color = Color.parseColor("#" + labelModel.getColor());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/RepoCodePagerFragment.java
Patch:
@@ -64,7 +64,7 @@ public static RepoCodePagerFragment newInstance(@NonNull String repoId, @NonNull
             String htmlUrl = getArguments().getString(BundleConstant.EXTRA_FOUR);
             String defaultBranch = getArguments().getString(BundleConstant.EXTRA_THREE);
             if (InputHelper.isEmpty(repoId) || InputHelper.isEmpty(login) || InputHelper.isEmpty(url) || InputHelper.isEmpty(htmlUrl)) {
-                throw new NullPointerException();
+                return;
             }
             pager.setAdapter(new FragmentsPagerAdapter(getChildFragmentManager(),
                     FragmentPagerAdapterModel.buildForRepoCode(getContext(), repoId, login, url,

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/assignees/AssigneesDialogFragment.java
Patch:
@@ -120,9 +120,7 @@ public static AssigneesDialogFragment newInstance(@NonNull String login, @NonNul
                         .filter(value -> value.getValue() != null)
                         .map(Map.Entry::getValue)
                         .collect(Collectors.toCollection(ArrayList::new));
-                if (labels != null && !labels.isEmpty()) {
-                    callback.onSelectedAssignees(labels, getArguments().getBoolean(BundleConstant.EXTRA_TWO));
-                }
+                callback.onSelectedAssignees(labels != null ? labels : new ArrayList<>(), getArguments().getBoolean(BundleConstant.EXTRA_TWO));
                 dismiss();
                 break;
         }

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryFragment.java
Patch:
@@ -51,6 +51,8 @@
 public class SettingsCategoryFragment extends PreferenceFragmentCompat implements
         Preference.OnPreferenceChangeListener, NotificationSoundMvp.NotificationSoundListener {
 
+    public static final String TAG = SettingsCategoryFragment.class.getSimpleName();
+
     public interface SettingsCallback {
         @SettingsModel.SettingsType int getSettingsType();
     }

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -61,7 +61,8 @@ public M getItemByPosition(int position) {
     }
 
     public M getItem(int position) {
-        return data.get(position);
+        if (position < data.size()) return data.get(position);
+        return null;
     }
 
     public int getItem(M t) {

File: app/src/main/java/com/fastaccess/helper/BundleConstant.java
Patch:
@@ -35,6 +35,7 @@ public class BundleConstant {
     public static final String NOTIFICATION_ID = "notification_id";
     public static final String IS_ENTERPRISE = "is_enterprise";
     public static final String REVIEW_EXTRA = "review_extra";
+    public static final String SCHEME_URL = "scheme_url";
     public static final int REQUEST_CODE = 2016;
     public static final int REVIEW_REQUEST_CODE = 2017;
     public static int REFRESH_CODE = 64;

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -120,7 +120,9 @@ public static void downloadFile(@NonNull Context context, @NonNull String url) {
         request.setDescription(context.getString(R.string.downloading_file));
         request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_MOBILE | DownloadManager.Request.NETWORK_WIFI);
         request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);
-        downloadManager.enqueue(request);
+        if (downloadManager != null) {
+            downloadManager.enqueue(request);
+        }
     }
 
     public static int getErrorCode(Throwable throwable) {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -23,6 +23,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.helper.PrefGetter;
+import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.modules.notification.NotificationActivity;
 import com.firebase.jobdispatcher.Constraint;
@@ -221,7 +222,7 @@ private void withComments(Comment comment, Context context, Notification thread,
                 .setSmallIcon(R.drawable.ic_notification)
                 .setStyle(new NotificationCompat.BigTextStyle()
                         .setBigContentTitle(comment.getUser() != null ? comment.getUser().getLogin() : "")
-                        .bigText(comment.getBody()))
+                        .bigText(MarkDownProvider.stripMdText(comment.getBody())))
                 .setWhen(comment.getCreatedAt().getTime())
                 .setShowWhen(true)
                 .addAction(R.drawable.ic_github, context.getString(R.string.open), getPendingIntent(thread.getId(),

File: app/src/main/java/com/fastaccess/ui/base/mvp/BaseMvp.java
Patch:
@@ -45,6 +45,8 @@ interface FAView extends TiView, MessageDialogView.MessageDialogViewActionCallba
         void onOpenSettings();
 
         boolean isEnterprise();
+
+        void onOpenUrlInBrowser();
     }
 
     interface FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerMvp.java
Patch:
@@ -93,6 +93,8 @@ interface Presenter extends BaseMvp.FAPresenter, PullRequestFilesMvp.CommitComme
         void onRefresh();
 
         void onPinUnpinPullRequest();
+
+        void onSubscribeOrMute(boolean mute);
     }
 
 }

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -88,7 +88,7 @@ public PrettifyWebView(Context context, AttributeSet attrs, int defStyleAttr) {
         settings.setJavaScriptEnabled(true);
         settings.setAppCachePath(getContext().getCacheDir().getPath());
         settings.setAppCacheEnabled(true);
-        settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);
+        settings.setCacheMode(WebSettings.LOAD_NO_CACHE);
         settings.setDefaultTextEncodingName("utf-8");
         settings.setLoadsImagesAutomatically(true);
         settings.setBlockNetworkImage(false);

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -72,7 +72,7 @@ private void setupPreference() {
     public ReactiveEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 13);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 14);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/ui/modules/pinned/repo/PinnedReposFragment.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.pinned;
+package com.fastaccess.ui.modules.pinned.repo;
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;

File: app/src/main/java/com/fastaccess/ui/modules/pinned/repo/PinnedReposMvp.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.pinned;
+package com.fastaccess.ui.modules.pinned.repo;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;

File: app/src/main/java/com/fastaccess/ui/modules/pinned/repo/PinnedReposPresenter.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.pinned;
+package com.fastaccess.ui.modules.pinned.repo;
 
 import android.support.annotation.NonNull;
 import android.view.View;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerMvp.java
Patch:
@@ -38,7 +38,6 @@ interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
         void onMileStoneSelected(@NonNull MilestoneModel milestoneModel);
 
         void onFinishActivity();
-
     }
 
     interface Presenter extends BaseMvp.FAPresenter {
@@ -78,6 +77,8 @@ interface Presenter extends BaseMvp.FAPresenter {
         void onUpdateIssue(@NonNull Issue issueModel);
 
         void onSubscribeOrMute(boolean mute);
+
+        void onPinUnpinIssue();
     }
 
     interface IssuePrCallback<T> {

File: app/src/main/java/com/fastaccess/data/dao/CreateIssueModel.java
Patch:
@@ -28,15 +28,15 @@ public class CreateIssueModel implements Parcelable {
         dest.writeString(this.body);
         dest.writeStringList(this.labels);
         dest.writeStringList(this.assignees);
-        dest.writeLong(this.milestone);
+        dest.writeValue(this.milestone);
     }
 
     protected CreateIssueModel(Parcel in) {
         this.title = in.readString();
         this.body = in.readString();
         this.labels = in.createStringArrayList();
         this.assignees = in.createStringArrayList();
-        this.milestone = in.readLong();
+        this.milestone = (Long) in.readValue(Long.class.getClassLoader());
     }
 
     public static final Creator<CreateIssueModel> CREATOR = new Creator<CreateIssueModel>() {

File: app/src/main/java/com/fastaccess/data/dao/CreateIssueModel.java
Patch:
@@ -19,7 +19,7 @@ public class CreateIssueModel implements Parcelable {
     private String body;
     private ArrayList<String> labels;
     private ArrayList<String> assignees;
-    private long milestone;
+    private Long milestone;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/data/dao/CreateIssueModel.java
Patch:
@@ -19,7 +19,7 @@ public class CreateIssueModel implements Parcelable {
     private String body;
     private ArrayList<String> labels;
     private ArrayList<String> assignees;
-    private long milestone;
+    private Long milestone;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/ui/modules/editor/popup/EditorLinkImageDialogFragment.java
Patch:
@@ -77,7 +77,7 @@ public static EditorLinkImageDialogFragment newInstance(boolean isLink, @Nullabl
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         select.setVisibility(isLink() ? View.GONE : View.VISIBLE);
         if (savedInstanceState == null) {
-            link.getEditText().setText(getArguments().getString(BundleConstant.ITEM));
+            title.getEditText().setText(getArguments().getString(BundleConstant.ITEM));
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssuePresenter.java
Patch:
@@ -79,7 +79,7 @@ public class CreateIssuePresenter extends BasePresenter<CreateIssueMvp.View> imp
                         createIssue.setAssignees(Stream.of(users).map(User::getLogin).collect(Collectors.toCollection(ArrayList::new)));
                     }
                     if (milestoneModel != null) {
-                        createIssue.setMilestone(milestoneModel.getNumber());
+                        createIssue.setMilestone((long) milestoneModel.getNumber());
                     }
                 }
                 makeRestCall(RestProvider.getIssueService(isEnterprise()).createIssue(login, repo, createIssue),

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -314,11 +314,12 @@ public static void insertAtCursor(@NonNull EditText editText, @NonNull String te
         String oriContent = editText.getText().toString();
         int start = editText.getSelectionStart();
         int end = editText.getSelectionEnd();
-        int index = start >= 0 ? start : 0;
         Logger.e(start, end);
-        if (start >= 0 && end > 0) {
+        if (start >= 0 && end > 0 && start != end) {
             editText.setText(editText.getText().replace(start, end, text));
         } else {
+            int index = editText.getSelectionStart() >= 0 ? editText.getSelectionStart() : 0;
+            Logger.e(start, end, index);
             StringBuilder builder = new StringBuilder(oriContent);
             builder.insert(index, text);
             editText.setText(builder.toString());

File: app/src/main/java/com/fastaccess/data/dao/CreateIssueModel.java
Patch:
@@ -19,7 +19,7 @@ public class CreateIssueModel implements Parcelable {
     private String body;
     private ArrayList<String> labels;
     private ArrayList<String> assignees;
-    private MilestoneModel milestone;
+    private long milestone;
 
     @Override public int describeContents() { return 0; }
 
@@ -28,15 +28,15 @@ public class CreateIssueModel implements Parcelable {
         dest.writeString(this.body);
         dest.writeStringList(this.labels);
         dest.writeStringList(this.assignees);
-        dest.writeParcelable(this.milestone, flags);
+        dest.writeLong(this.milestone);
     }
 
     protected CreateIssueModel(Parcel in) {
         this.title = in.readString();
         this.body = in.readString();
         this.labels = in.createStringArrayList();
         this.assignees = in.createStringArrayList();
-        this.milestone = in.readParcelable(MilestoneModel.class.getClassLoader());
+        this.milestone = in.readLong();
     }
 
     public static final Creator<CreateIssueModel> CREATOR = new Creator<CreateIssueModel>() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssuePresenter.java
Patch:
@@ -79,7 +79,7 @@ public class CreateIssuePresenter extends BasePresenter<CreateIssueMvp.View> imp
                         createIssue.setAssignees(Stream.of(users).map(User::getLogin).collect(Collectors.toCollection(ArrayList::new)));
                     }
                     if (milestoneModel != null) {
-                        createIssue.setMilestone(milestoneModel);
+                        createIssue.setMilestone(milestoneModel.getNumber());
                     }
                 }
                 makeRestCall(RestProvider.getIssueService(isEnterprise()).createIssue(login, repo, createIssue),

File: app/src/main/java/com/fastaccess/provider/timeline/handler/QouteHandler.java
Patch:
@@ -21,8 +21,10 @@
 
     public void handleTagNode(TagNode node, SpannableStringBuilder builder, int start, int end) {
         builder.append("\n");
-        builder.setSpan(new MarkDownQuoteSpan(color), start, builder.length(), 33);
+        builder.setSpan(new MarkDownQuoteSpan(color), start + 1, builder.length() - 1, 33);
         builder.append("\n");
     }
 
+
+
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -34,7 +34,6 @@
 import it.sephiroth.android.library.bottomnavigation.BottomNavigation;
 import shortbread.Shortcut;
 
-@Shortcut(id = "feeds", icon = R.drawable.ic_app_shortcut_github, shortLabelRes = R.string.feeds, rank = 1)
 public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> implements MainMvp.View {
 
     @State @MainMvp.NavigationType int navType = MainMvp.FEEDS;

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 
 import com.annimon.stream.Collectors;
@@ -239,7 +240,7 @@ public FragmentPagerAdapterModel(String title, Fragment fragment, String key) {
                 .toList();
     }
 
-    @NonNull public static List<FragmentPagerAdapterModel> buildForRepoProjects(@NonNull Context context, @NonNull String repoId,
+    @NonNull public static List<FragmentPagerAdapterModel> buildForRepoProjects(@NonNull Context context, @Nullable String repoId,
                                                                                 @NonNull String login) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.open),
                         RepoProjectFragment.Companion.newInstance(login, repoId, IssueState.open)),

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractUser.java
Patch:
@@ -19,6 +19,7 @@
 import io.requery.Key;
 import io.requery.Persistable;
 import io.requery.Table;
+import io.requery.Transient;
 import lombok.NoArgsConstructor;
 
 import static com.fastaccess.data.dao.model.User.FOLLOWER_NAME;
@@ -68,6 +69,7 @@ public abstract class AbstractUser implements Parcelable {
     @Column(name = "date_column") Date date;
     String repoId;
     String description;
+    @Transient boolean hasOrganizationProjects;
 
     public void save(User entity) {
         if (getUser(entity.getId()) != null) {

File: app/src/main/java/com/fastaccess/helper/Bundler.java
Patch:
@@ -200,5 +200,4 @@ private Bundle get() {
         return get();
     }
 
-
 }

File: app/src/main/java/com/fastaccess/helper/FileHelper.java
Patch:
@@ -62,7 +62,7 @@ public class FileHelper {
                             title = cur.getString(cur.getColumnIndex(MediaStore.Audio.Media.TITLE));
                         }
                     }
-                }
+                } catch (Exception ignored) {}
             }
         }
         return title;

File: app/src/main/java/com/fastaccess/ui/base/BaseDialogFragment.java
Patch:
@@ -22,6 +22,7 @@
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
+import com.fastaccess.ui.widgets.dialog.ProgressDialogFragment;
 
 import net.grandcentrix.thirtyinch.TiDialogFragment;
 
@@ -103,7 +104,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
         final Dialog dialog = super.onCreateDialog(savedInstanceState);
-        if (!PrefGetter.isAppAnimationDisabled()) {
+        if (!PrefGetter.isAppAnimationDisabled() && !(this instanceof ProgressDialogFragment)) {
             dialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(dialog,
                     getResources().getInteger(android.R.integer.config_longAnimTime)));
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -236,7 +236,7 @@ private void callApi(int navTyp) {
                 break;
             case RepoPagerMvp.PROJECTS:
                 if (projectsFragmentPager == null) {
-                    onAddAndHide(fragmentManager, RepoProjectsFragmentPager.Companion.newInstance(repoId(), login()), currentVisible);
+                    onAddAndHide(fragmentManager, RepoProjectsFragmentPager.Companion.newInstance(login(), repoId()), currentVisible);
                 } else {
                     onShowHideFragment(fragmentManager, projectsFragmentPager, currentVisible);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesMvp.java
Patch:
@@ -29,6 +29,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onNotifyAdapter(@Nullable List<CommitFileChanges> items, int page);
 
         @NonNull OnLoadMore getLoadMore();
+
+        void onOpenForResult(int position, @NonNull CommitFileChanges linesModel);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesPresenter.java
Patch:
@@ -104,7 +104,9 @@ class PullRequestFilesPresenter extends BasePresenter<PullRequestFilesMvp.View>
     }
 
     @Override public void onItemClick(int position, View v, CommitFileChanges model) {
-        if (v.getId() == R.id.open) {
+        if (v.getId() == R.id.patchList) {
+            sendToView(view -> view.onOpenForResult(position, model));
+        } else if (v.getId() == R.id.open) {
             CommitFileModel item = model.getCommitFileModel();
             PopupMenu popup = new PopupMenu(v.getContext(), v);
             MenuInflater inflater = popup.getMenuInflater();

File: app/src/main/java/com/fastaccess/helper/ViewHelper.java
Patch:
@@ -112,7 +112,7 @@ public static Drawable getDrawableSelector(int normalColor, int pressedColor) {
         return new RippleDrawable(ColorStateList.valueOf(pressedColor), getRippleMask(normalColor), getRippleMask(normalColor));
     }
 
-    @Nullable private static Drawable getRippleMask(int color) {
+    @NonNull private static Drawable getRippleMask(int color) {
         float[] outerRadii = new float[8];
         Arrays.fill(outerRadii, 3);
         RoundRectShape r = new RoundRectShape(outerRadii, null, null);
@@ -208,6 +208,5 @@ public static boolean isEllipsed(@NonNull TextView textView) {
 
     @NonNull public static TextView getTabTextView(@NonNull TabLayout tabs, int tabIndex) {
         return (TextView) (((LinearLayout) ((LinearLayout) tabs.getChildAt(0)).getChildAt(tabIndex)).getChildAt(1));
-
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsMvp.java
Patch:
@@ -42,6 +42,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void onAddNewComment(@NonNull Comment comment);
 
         @NonNull ArrayList<String> getNamesToTag();
+
+        void hideBlockingProgress();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -50,6 +50,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void onHandleComment(@NonNull String text, @Nullable Bundle bundle);
 
         @NonNull List<String> getNamesToTags();
+
+        void hideBlockingProgress();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -59,6 +59,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void addNewComment(@NonNull TimelineModel timelineModel);
 
         @NonNull ArrayList<String> getNamesToTag();
+
+        void onHideBlockingProgress();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -77,6 +77,8 @@ void onReplyOrCreateReview(@Nullable User user, @Nullable String message, int gr
         void addComment(@NonNull TimelineModel timelineModel);
 
         @NonNull ArrayList<String> getNamesToTag();
+
+        void onHideBlockingProgress();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -31,6 +31,7 @@
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.helper.ViewHelper;
@@ -157,8 +158,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
             boolean logout = bundle.getBoolean("logout");
             if (logout) {
                 onRequireLogin();
-//                if(App.getInstance().getGoogleApiClient().isConnected())
-//                    Auth.CredentialsApi.disableAutoSignIn(App.getInstance().getGoogleApiClient());
             }
         }
     }//pass
@@ -196,6 +195,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     @Override public void hideProgress() {
         ProgressDialogFragment fragment = (ProgressDialogFragment) AppHelper.getFragmentByTag(getSupportFragmentManager(),
                 ProgressDialogFragment.TAG);
+        Logger.e(fragment);
         if (fragment != null) {
             isProgressShowing = false;
             fragment.dismiss();

File: app/src/main/java/com/fastaccess/data/dao/ReactionsModel.java
Patch:
@@ -13,7 +13,7 @@
 import lombok.Getter;
 import lombok.NonNull;
 import lombok.Setter;
-import pr.PullRequestTimelineQuery;
+import github.PullRequestTimelineQuery;
 
 /**
  * Created by Kosh on 28 Mar 2017, 9:15 PM

File: app/src/main/java/com/fastaccess/data/dao/timeline/PullRequestReviewModel.java
Patch:
@@ -10,8 +10,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import pr.PullRequestTimelineQuery;
-import pr.type.PullRequestReviewState;
+import github.PullRequestTimelineQuery;
+import github.type.PullRequestReviewState;
 
 /**
  * Created by kosh on 20/08/2017.

File: app/src/main/java/com/fastaccess/data/dao/timeline/PullRequestTimelineModel.java
Patch:
@@ -7,7 +7,7 @@
 
 import lombok.Getter;
 import lombok.Setter;
-import pr.PullRequestTimelineQuery;
+import github.PullRequestTimelineQuery;
 
 /**
  * Created by kosh on 02/08/2017.

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestTimelineCommentsViewHolder.java
Patch:
@@ -30,8 +30,8 @@
 import java.util.List;
 
 import butterknife.BindView;
-import pr.PullRequestTimelineQuery;
-import pr.type.ReactionContent;
+import github.PullRequestTimelineQuery;
+import github.type.ReactionContent;
 
 /**
  * Created by Kosh on 11 Nov 2016, 2:08 PM

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -52,7 +52,7 @@
 
 import butterknife.BindView;
 import butterknife.OnClick;
-import pr.GetPinnedReposQuery;
+import github.GetPinnedReposQuery;
 
 import static android.view.Gravity.TOP;
 import static android.view.View.GONE;

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -13,7 +13,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import pr.GetPinnedReposQuery;
+import github.GetPinnedReposQuery;
 
 /**
  * Created by Kosh on 03 Dec 2016, 9:15 AM

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewPresenter.java
Patch:
@@ -8,12 +8,12 @@
 
 import com.apollographql.apollo.ApolloCall;
 import com.apollographql.apollo.rx2.Rx2Apollo;
-import com.fastaccess.App;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.RxHelper;
+import com.fastaccess.provider.rest.ApolloProdivder;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.widgets.contributions.ContributionsDay;
@@ -23,8 +23,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import github.GetPinnedReposQuery;
 import io.reactivex.Observable;
-import pr.GetPinnedReposQuery;
 
 /**
  * Created by Kosh on 03 Dec 2016, 9:16 AM
@@ -106,7 +106,7 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
     }
 
     @SuppressWarnings("ConstantConditions") private void loadPinnedRepos(@NonNull String login) {
-        ApolloCall<GetPinnedReposQuery.Data> apolloCall = App.getInstance().getApolloClient()
+        ApolloCall<GetPinnedReposQuery.Data> apolloCall = ApolloProdivder.INSTANCE.getApollo(isEnterprise())
                 .query(GetPinnedReposQuery.builder()
                         .login(login)
                         .build());

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -86,7 +86,7 @@ public static String getFastHubIssueTemplate(boolean enterprise) {
         builder.append("- **Model:** ").append(model).append("  \n")
                 .append("---").append("\n\n");
         if (!Locale.getDefault().getLanguage().equals(new Locale("en").getLanguage())) {
-            builder.append("<--")
+            builder.append("<!--")
                     .append(App.getInstance().getString(R.string.english_please))
                     .append("-->")
                     .append("\n");

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -86,7 +86,7 @@ public static String getFastHubIssueTemplate(boolean enterprise) {
         builder.append("- **Model:** ").append(model).append("  \n")
                 .append("---").append("\n\n");
         if (!Locale.getDefault().getLanguage().equals(new Locale("en").getLanguage())) {
-            builder.append("<--")
+            builder.append("<!--")
                     .append(App.getInstance().getString(R.string.english_please))
                     .append("-->")
                     .append("\n");

File: app/src/main/java/com/fastaccess/provider/colors/ColorsProvider.java
Patch:
@@ -68,7 +68,7 @@ public static void load() {
                 .filter(value -> value != null && !InputHelper.isEmpty(value.getKey()))
                 .map(Map.Entry::getKey)
                 .collect(Collectors.toCollection(ArrayList::new)));
-        lang.add(0, "All Language");
+        lang.add(0, "All Languages");
         lang.addAll(1, POPULAR_LANG);
         return lang;
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsMvp.java
Patch:
@@ -40,6 +40,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void onHandleComment(@NonNull String text, @Nullable Bundle bundle);
 
         void onAddNewComment(@NonNull Comment comment);
+
+        @NonNull ArrayList<String> getNamesToTag();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -48,6 +48,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void showReload();
 
         void onHandleComment(@NonNull String text, @Nullable Bundle bundle);
+
+        @NonNull List<String> getNamesToTags();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -57,6 +57,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onHandleComment(String text, @Nullable Bundle bundle);
 
         void addNewComment(@NonNull TimelineModel timelineModel);
+
+        @NonNull ArrayList<String> getNamesToTag();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -75,6 +75,8 @@ void onReplyOrCreateReview(@Nullable User user, @Nullable String message, int gr
                                    @NonNull EditReviewCommentModel model);
 
         void addComment(@NonNull TimelineModel timelineModel);
+
+        @NonNull ArrayList<String> getNamesToTag();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/provider/timeline/handler/DrawableHandler.java
Patch:
@@ -8,7 +8,6 @@
 import com.fastaccess.provider.timeline.handler.drawable.DrawableGetter;
 
 import net.nightwhistler.htmlspanner.TagNodeHandler;
-import net.nightwhistler.htmlspanner.spans.CenterSpan;
 
 import org.htmlcleaner.TagNode;
 
@@ -33,9 +32,7 @@
         if (!InputHelper.isEmpty(src)) {
             builder.append("￼");
             if (isNull()) return;
-            CenterSpan centerSpan = new CenterSpan();
             DrawableGetter imageGetter = new DrawableGetter(textView);
-            builder.setSpan(centerSpan, start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
             builder.setSpan(new ImageSpan(imageGetter.getDrawable(src)), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
             appendNewLine(builder);
         }

File: app/src/main/java/com/fastaccess/data/dao/types/FilesType.java
Patch:
@@ -12,7 +12,8 @@ public enum FilesType {
     file(R.drawable.ic_file_document),
     dir(R.drawable.ic_folder),
     blob(R.drawable.ic_file_document),
-    tree(R.drawable.ic_folder);
+    tree(R.drawable.ic_folder),
+    symlink(R.drawable.ic_file_document);
 
     int icon;
 

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -41,7 +41,7 @@ public class MarkDownProvider {
     };
 
     private static final String[] ARCHIVE_EXTENSIONS = {
-            ".zip", ".7z", ".rar", ".tar.gz", ".tgz", ".tar.Z", ".tar.bz2", ".tbz2", ".tar.lzma", ".tlz", ".apk", ".jar", ".dmg"
+            ".zip", ".7z", ".rar", ".tar.gz", ".tgz", ".tar.Z", ".tar.bz2", ".tbz2", ".tar.lzma", ".tlz", ".apk", ".jar", ".dmg", ".pdf"
     };
 
     private MarkDownProvider() {}

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsFragment.java
Patch:
@@ -199,6 +199,7 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
     @Override public void onAddNewComment(@NonNull Comment comment) {
         hideProgress();
         adapter.addItem(comment);
+        if (commentsCallback != null) commentsCallback.onClearEditText();
     }
 
     @Override public void onDestroyView() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragment.java
Patch:
@@ -206,6 +206,7 @@ public static CommitCommentsFragment newInstance(@NonNull String login, @NonNull
         if (adapter != null) {
             adapter.addItem(TimelineModel.constructComment(newComment));
         }
+        if (commentsCallback != null) commentsCallback.onClearEditText();
     }
 
     @Override public void onDestroyView() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -77,6 +77,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
                 .flatMap(response -> {
                     if (response != null && response.getItems() != null) {
                         return Observable.fromIterable(response.getItems())
+                                .filter(repoFile -> repoFile.getType() != null)
                                 .sorted((repoFile, repoFile2) -> repoFile2.getType().compareTo(repoFile.getType()));
                     }
                     return Observable.empty();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -267,6 +267,7 @@ public class IssueTimelineFragment extends BaseFragment<IssueTimelineMvp.View, I
     @Override public void addNewComment(@NonNull TimelineModel timelineModel) {
         hideProgress();
         adapter.addItem(timelineModel);
+        if (commentsCallback != null) commentsCallback.onClearEditText();
     }
 
     @Override public void onActivityResult(int requestCode, int resultCode, Intent data) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -281,6 +281,7 @@ public class PullRequestTimelineFragment extends BaseFragment<PullRequestTimelin
     @Override public void addComment(@NonNull TimelineModel timelineModel) {
         hideProgress();
         adapter.addItem(timelineModel);
+        if (commentsCallback != null) commentsCallback.onClearEditText();
     }
 
     @Override public void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId,

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -252,7 +252,7 @@ public static void addPhoto(@NonNull EditText editText) {
     }
 
     public static void addPhoto(@NonNull EditText editText, @NonNull String title, @NonNull String link) {
-        String result = "![" + InputHelper.toString(title) + "](" + InputHelper.toString(link) + ")\n";
+        String result = "![" + InputHelper.toString(title) + "](" + InputHelper.toString(link) + ")";
         insertAtCursor(editText, result);
     }
 
@@ -261,7 +261,7 @@ public static void addLink(@NonNull EditText editText) {
     }
 
     public static void addLink(@NonNull EditText editText, @NonNull String title, @NonNull String link) {
-        String result = "[" + InputHelper.toString(title) + "](" + InputHelper.toString(link) + ")\n";
+        String result = "[" + InputHelper.toString(title) + "](" + InputHelper.toString(link) + ")";
         insertAtCursor(editText, result);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullStatusViewHolder.java
Patch:
@@ -11,7 +11,6 @@
 import com.fastaccess.data.dao.PullRequestStatusModel;
 import com.fastaccess.data.dao.types.StatusStateType;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.ForegroundImageView;
@@ -45,7 +44,6 @@ public static PullStatusViewHolder newInstance(@NonNull ViewGroup parent) {
     }
 
     @Override public void bind(@NonNull PullRequestStatusModel pullRequestStatusModel) {
-        Logger.e(pullRequestStatusModel.getState());
         if (pullRequestStatusModel.getState() != null) {
             StatusStateType stateType = pullRequestStatusModel.getState();
             stateImage.setImageResource(stateType.getDrawableRes());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -26,6 +26,7 @@
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.provider.timeline.CommentsHelper;
@@ -361,8 +362,8 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                             lastPage = response.getLast();
                             List<TimelineModel> models = TimelineConverter.INSTANCE.convert(response.getItems(), comments);
                             if (page == 1 && status != null) {
-                                status.setMergable(parameter.isMergable());
-                                if (status.getState() != null && status.getStatuses() != null) models.add(0, new TimelineModel(status));
+                                status.setMergable(parameter.isMergeable());
+                                if (status.getState() != null) models.add(0, new TimelineModel(status));
                             }
                             return models;
                         } else {

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -308,7 +308,7 @@ public static boolean isArchive(@Nullable String name) {
         return false;
     }
 
-    private static void insertAtCursor(@NonNull EditText editText, @NonNull String text) {
+    public static void insertAtCursor(@NonNull EditText editText, @NonNull String text) {
         String oriContent = editText.getText().toString();
         int index = editText.getSelectionStart() >= 0 ? editText.getSelectionStart() : 0;
         StringBuilder builder = new StringBuilder(oriContent);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerMvp.java
Patch:
@@ -17,6 +17,7 @@
 import com.fastaccess.ui.modules.repos.issues.issue.details.IssuePagerMvp;
 import com.fastaccess.ui.modules.repos.pull_requests.pull_request.details.files.PullRequestFilesMvp;
 import com.fastaccess.ui.modules.repos.pull_requests.pull_request.merge.MergePullReqeustMvp;
+import com.fastaccess.ui.modules.reviews.changes.ReviewChangesMvp;
 import com.fastaccess.ui.widgets.SpannableBuilder;
 
 import java.util.ArrayList;
@@ -30,7 +31,7 @@ public interface PullRequestPagerMvp {
     interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
             AssigneesMvp.SelectedAssigneesListener, MergePullReqeustMvp.MergeCallback,
             IssuePagerMvp.IssuePrCallback<PullRequest>, PullRequestFilesMvp.PatchCallback,
-            CommentEditorFragment.CommentListener {
+            CommentEditorFragment.CommentListener, ReviewChangesMvp.ReviewSubmissionCallback {
 
         void onSetupIssue(boolean update);
 

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/DynamicRecyclerView.java
Patch:
@@ -64,6 +64,7 @@ public DynamicRecyclerView(@NonNull Context context, AttributeSet attrs, int def
         }
     }
 
+
     public void removeBottomDecoration() {
         if (bottomPaddingDecoration != null) {
             removeItemDecoration(bottomPaddingDecoration);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -353,9 +353,9 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
             Observable<List<TimelineModel>> observable = Observable.zip(
                     RestProvider.getIssueService(isEnterprise()).getTimeline(login, repoId, number, page),
                     RestProvider.getReviewService(isEnterprise()).getPrReviewComments(login, repoId, number),
-                    RestProvider.getPullRequestService(isEnterprise()).getPullStatus(login, repoId, parameter.getHead().getRef())
+                    RestProvider.getPullRequestService(isEnterprise()).getPullStatus(login, repoId, parameter.getHead().getSha())
                             .onErrorReturn(throwable -> RestProvider.getPullRequestService(isEnterprise()).getPullStatus(login, repoId,
-                                    parameter.getBase().getRef()).blockingFirst(new PullRequestStatusModel())),
+                                    parameter.getBase().getSha()).blockingFirst(new PullRequestStatusModel())),
                     (response, comments, status) -> {
                         if (response != null) {
                             lastPage = response.getLast();

File: app/src/main/java/com/fastaccess/data/dao/CommitLinesModel.java
Patch:
@@ -35,6 +35,7 @@
     public int rightLineNo;
     public boolean noNewLine;
     public int position;
+    private boolean hasCommentedOn;
 
     @NonNull public static List<CommitLinesModel> getLines(@Nullable String text) {
         ArrayList<CommitLinesModel> models = new ArrayList<>();
@@ -82,7 +83,7 @@
                         token = token.replace("\\ No newline at end of file", "");
                     }
                     models.add(new CommitLinesModel(token, color, token.startsWith("@@") || !addLeft ? -1 : leftLineNo,
-                            token.startsWith("@@") || !addRight ? -1 : rightLineNo, index != -1, position));
+                            token.startsWith("@@") || !addRight ? -1 : rightLineNo, index != -1, position, false));
                 }
             }
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitLinesViewHolder.java
Patch:
@@ -26,6 +26,7 @@ public class CommitLinesViewHolder extends BaseViewHolder<CommitLinesModel> {
     @BindView(R.id.textView) AppCompatTextView textView;
     @BindView(R.id.leftLinNo) AppCompatTextView leftLinNo;
     @BindView(R.id.rightLinNo) AppCompatTextView rightLinNo;
+    @BindView(R.id.hasComment) View hasComment;
     private final int patchAdditionColor;
     private final int patchDeletionColor;
     private final int patchRefColor;
@@ -44,6 +45,7 @@ public static CommitLinesViewHolder newInstance(@NonNull ViewGroup viewGroup, @N
     @Override public void bind(@NonNull CommitLinesModel item) {
         leftLinNo.setText(item.getLeftLineNo() > 0 ? String.valueOf(item.getLeftLineNo()) : "  ");
         rightLinNo.setText(item.getRightLineNo() > 0 ? String.valueOf(item.getRightLineNo()) : "  ");
+        hasComment.setVisibility(item.isHasCommentedOn() ? View.VISIBLE : View.GONE);
         switch (item.getColor()) {
             case CommitLinesModel.ADDITION:
                 textView.setBackgroundColor(patchAdditionColor);

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -51,11 +51,11 @@ Observable<Issue> getIssue(@Path("owner") String owner, @Path("repo") String rep
     Observable<Pageable<IssueEvent>> getTimeline(@Path("owner") String owner, @Path("repo") String repo,
                                                  @Path("issue_number") int issue_number);
 
-    @GET("repos/{owner}/{repo}/issues/{issue_number}/timeline")
+    @GET("repos/{owner}/{repo}/issues/{issue_number}/timeline?per_page=100")
     @Headers("Accept: application/vnd.github.mockingbird-preview,application/vnd.github.VERSION.full+json," +
             " application/vnd.github.squirrel-girl-preview")
     Observable<IssuesPageable<JsonObject>> getTimeline(@Path("owner") String owner, @Path("repo") String repo,
-                                                   @Path("issue_number") int issue_number, @Query("page") int page);
+                                                       @Path("issue_number") int issue_number, @Query("page") int page);
 
     @POST("repos/{owner}/{repo}/issues")
     Observable<Issue> createIssue(@Path("owner") String owner, @Path("repo") String repo,

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -63,7 +63,7 @@ public static void copyToClipboard(@NonNull Context context, @NonNull String uri
 
     public static boolean isNightMode(@NonNull Resources resources) {
         @PrefGetter.ThemeType int themeType = PrefGetter.getThemeType(resources);
-        return themeType == PrefGetter.DARK || themeType == PrefGetter.AMLOD || themeType == PrefGetter.BLUISH;
+        return themeType != PrefGetter.LIGHT;
     }
 
     public static String getFastHubIssueTemplate(boolean enterprise) {

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -24,8 +24,8 @@ public class PrefGetter {
     public static final int LIGHT = 1;
     public static final int DARK = 2;
     public static final int AMLOD = 3;
-    public static final int MID_NIGHT_BLUE = 4;
-    public static final int BLUISH = 5;
+    public static final int BLUISH = 4;
+    public static final int MID_NIGHT_BLUE = 5;
 
     public static final int RED = 1;
     public static final int PINK = 2;

File: app/src/main/java/com/prettifier/pretty/helper/GithubHelper.java
Patch:
@@ -23,7 +23,8 @@
 public class GithubHelper {
 
     @NonNull public static String generateContent(@NonNull Context context, @NonNull String source,
-                                                  @Nullable String baseUrl, boolean dark, boolean isWiki, boolean replace) {
+                                                  @Nullable String baseUrl, boolean dark,
+                                                  boolean isWiki, boolean replace) {
         if (baseUrl == null) {
             return mergeContent(context, source, dark, replace);
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -63,12 +63,13 @@ interface View extends BaseMvp.FAView, FilterAddChooserListener {
 
         void onChangeForkCount(boolean isForked);
 
-
         boolean hasUserInteractedWithView();
 
         void disableIssueTab();
 
         void openUserProfile();
+
+        void onScrolled(boolean isUp);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSelectionListener {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -105,7 +105,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
                     break;
                 case R.id.editFile:
                     EditRepoFileActivity.Companion.startForResult(this, getPresenter().repoId,
-                            getPresenter().login, item.getPath(), item.getDownloadUrl(), true);
+                            getPresenter().login, item.getPath(), item.getDownloadUrl(), getPresenter().ref, true);
                     break;
             }
             return true;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -19,6 +19,8 @@ interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {
         void onChangeIssueSort(boolean isLastUpdated);
 
         @IntRange(from = 0, to = 1) int getCurrentItem();
+
+        void onScrolled(boolean isUp);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/RepoPullRequestPagerMvp.java
Patch:
@@ -9,10 +9,12 @@
  * Created by Kosh on 31 Dec 2016, 1:35 AM
  */
 
-interface RepoPullRequestPagerMvp {
+public interface RepoPullRequestPagerMvp {
 
     interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {
         @IntRange(from = 0, to = 1) int getCurrentItem();
+
+        void onScrolled(boolean isUp);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/scroll/InfiniteScroll.java
Patch:
@@ -48,6 +48,7 @@ private int getLastVisibleItem(int[] lastVisibleItemPositions) {
             newlyAdded = false;
             return;
         }
+        onScrolled(dy > 0);
         if (layoutManager == null) {
             initLayoutManager(recyclerView.getLayoutManager());
         }
@@ -103,5 +104,7 @@ public void initialize(int page, int previousTotal) {
 
     public abstract boolean onLoadMore(int page, int totalItemsCount);
 
+    public void onScrolled(boolean isUp) {}
+
 }
 

File: app/src/main/java/com/fastaccess/provider/timeline/TimelineProvider.java
Patch:
@@ -86,15 +86,16 @@ public class TimelineProvider {
                 } else if (event == IssueEventType.assigned || event == IssueEventType.unassigned) {
                     spannableBuilder
                             .append(" ");
-                    if (user != null && user.getLogin().equalsIgnoreCase(issueEventModel.getAssignee().getLogin())) {
+                    if ((user != null && issueEventModel.getAssignee() != null) && user.getLogin()
+                            .equalsIgnoreCase(issueEventModel.getAssignee().getLogin())) {
                         spannableBuilder
                                 .append(event == IssueEventType.assigned ? "self-assigned this" : "removed their assignment");
                     } else {
                         spannableBuilder
                                 .append(event == IssueEventType.assigned ? "assigned" : "unassigned");
                         spannableBuilder
                                 .append(" ")
-                                .bold(issueEventModel.getAssignee().getLogin());
+                                .bold(issueEventModel.getAssignee() != null ? issueEventModel.getAssignee().getLogin() : "");
                     }
                 } else if (event == IssueEventType.locked || event == IssueEventType.unlocked) {
                     spannableBuilder

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -281,6 +281,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
     }
 
     @Override public void onInitPinnedRepos(@NonNull List<GetPinnedReposQuery.Node> nodes) {
+        if (pinnedReposTextView == null) return;
         if (!nodes.isEmpty()) {
             pinnedReposTextView.setVisibility(VISIBLE);
             pinnedReposCard.setVisibility(VISIBLE);

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewPresenter.java
Patch:
@@ -110,7 +110,7 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
                 .query(GetPinnedReposQuery.builder()
                         .login(login)
                         .build());
-        manageObservable(Rx2Apollo.from(apolloCall)
+        manageDisposable(RxHelper.getObservable(Rx2Apollo.from(apolloCall))
                 .filter(dataResponse -> !dataResponse.hasErrors())
                 .flatMap(dataResponse -> {
                     if (dataResponse.data() != null && dataResponse.data().user() != null) {
@@ -121,11 +121,11 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
                 .map(GetPinnedReposQuery.Edge::node)
                 .toList()
                 .toObservable()
-                .doOnNext(nodes1 -> {
+                .subscribe(nodes1 -> {
                     nodes.clear();
                     nodes.addAll(nodes1);
                     sendToView(view -> view.onInitPinnedRepos(nodes));
-                }));
+                }, Throwable::printStackTrace));
     }
 
     @Override public void onWorkOffline(@NonNull String login) {

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ProgressDialogFragment.java
Patch:
@@ -10,6 +10,7 @@
 
 import com.fastaccess.helper.AnimHelper;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.PrefGetter;
 
 /**
  * Created by Kosh on 09 Dec 2016, 5:18 PM
@@ -39,7 +40,8 @@ public class ProgressDialogFragment extends DialogFragment {
         progressDialog.setCancelable(isCancelable);
         setCancelable(isCancelable);
         if (getActivity() != null && !getActivity().isFinishing()) {
-            progressDialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(progressDialog, 200));
+            if (PrefGetter.isAppAnimationDisabled())
+                progressDialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(progressDialog, 200));
         }
         return progressDialog;
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/popup/EditorLinkImagePresenter.java
Patch:
@@ -28,7 +28,7 @@ public class EditorLinkImagePresenter extends BasePresenter<EditorLinkImageMvp.V
                             return;
                         }
                         sendToView(view -> view.onUploaded(null, null));
-                    });
+                    }, false);
         } else {
             if (getView() != null) getView().onUploaded(null, null);
         }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -41,6 +41,8 @@ interface View extends BaseMvp.FAView {
         void onOpenProfile();
 
         void onInvalidateNotification();
+
+        void onUserIsBlackListed();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -14,6 +14,7 @@
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
+import java.net.URLDecoder;
 
 /**
  * Created by Kosh on 10 Nov 2016, 3:43 PM
@@ -91,7 +92,7 @@ public class PrefGetter {
     private static final String OTP_CODE = "otp_code";
     private static final String ENTERPRISE_OTP_CODE = "enterprise_otp_code";
     private static final String APP_LANGUAGE = "app_language";
-    private static final String SENT_VIA = "sent_via";
+    private static final String SENT_VIA = "fasthub_signature";
     private static final String SENT_VIA_BOX = "sent_via_enabled";
     private static final String PROFILE_BACKGROUND_URL = "profile_background_url";
     private static final String AMLOD_THEME_ENABLED = "amlod_theme_enabled";

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/GlideDrawableTarget.java
Patch:
@@ -8,6 +8,7 @@
 import com.bumptech.glide.request.animation.GlideAnimation;
 import com.bumptech.glide.request.target.SimpleTarget;
 import com.fastaccess.R;
+import com.fastaccess.helper.PrefGetter;
 
 import java.lang.ref.WeakReference;
 
@@ -38,7 +39,7 @@ class GlideDrawableTarget extends SimpleTarget<GlideDrawable> {
             resource.setBounds(rect);
             urlDrawable.setBounds(rect);
             urlDrawable.setDrawable(resource);
-            if (resource.isAnimated()) {
+            if (resource.isAnimated() && !PrefGetter.isGistDisabled()) {
                 urlDrawable.setCallback((Drawable.Callback) textView.getTag(R.id.drawable_callback));
                 resource.setLoopCount(GlideDrawable.LOOP_FOREVER);
                 resource.start();

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -109,8 +109,8 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
         if (isLoggedIn() && Notification.hasUnreadNotifications()) {
             ViewHelper.tintDrawable(menu.findItem(R.id.notifications).setIcon(R.drawable.ic_ring).getIcon(), ViewHelper.getAccentColor(this));
         } else {
-            ViewHelper.tintDrawable(menu.findItem(R.id.notifications).setIcon(R.drawable.ic_notifications_none).getIcon(), ViewHelper.getIconColor
-                    (this));
+            ViewHelper.tintDrawable(menu.findItem(R.id.notifications)
+                    .setIcon(R.drawable.ic_notifications_none).getIcon(), ViewHelper.getIconColor(this));
         }
         return super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -47,8 +47,10 @@ public class MainPresenter extends BasePresenter<MainMvp.View> implements MainMv
                 .flatMap(login -> RxHelper.getObservable(RestProvider.getNotificationService(isEnterprise())
                         .getNotifications(ParseDateFormat.getLastWeekDate())))
                 .flatMapSingle(notificationPageable -> {
-                    if (notificationPageable != null) {
+                    if (notificationPageable != null && (notificationPageable.getItems() != null && !notificationPageable.getItems().isEmpty())) {
                         return Notification.saveAsSingle(notificationPageable.getItems());
+                    } else {
+                        Notification.deleteAll();
                     }
                     return Single.just(true);
                 })

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerFragment.java
Patch:
@@ -66,8 +66,8 @@ private static ViewerFragment newInstance(@NonNull Bundle bundle) {
         return fragmentView;
     }
 
-    @Override public void onSetImageUrl(@NonNull String url) {
-        webView.loadImage(url);
+    @Override public void onSetImageUrl(@NonNull String url, boolean isSvg) {
+        webView.loadImage(url, isSvg);
         webView.setOnContentChangedListener(this);
         webView.setVisibility(View.VISIBLE);
         getActivity().invalidateOptionsMenu();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerMvp.java
Patch:
@@ -16,7 +16,7 @@ interface ViewerMvp {
 
     interface View extends BaseMvp.FAView, PrettifyWebView.OnContentChangedListener {
 
-        void onSetImageUrl(@NonNull String url);
+        void onSetImageUrl(@NonNull String url, boolean isSvg);
 
         void onSetMdText(@NonNull String text, String baseUrl, boolean replace);
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -21,6 +21,7 @@
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.data.dao.timeline.GenericEvent;
 import com.fastaccess.data.dao.timeline.SourceModel;
+import com.fastaccess.data.dao.types.IssueEventType;
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
@@ -95,6 +96,8 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                 } else if (issueEventModel.getAssignee() != null) {
                     FilterIssuesActivity.startActivity(v, pullRequest.getLogin(), pullRequest.getRepoId(), false,
                             true, isEnterprise(), "assignee:\"" + issueEventModel.getAssignee().getLogin() + "\"");
+                } else if (issueEventModel.getEvent() == IssueEventType.committed) {
+                    SchemeParser.launchUri(v.getContext(), issueEventModel.getUrl().replace("git/", ""));
                 } else {
                     SourceModel sourceModel = issueEventModel.getSource();
                     if (sourceModel != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -248,7 +248,8 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                 CommentRequestModel commentRequestModel = new CommentRequestModel();
                 commentRequestModel.setBody(text);
                 makeRestCall(RestProvider.getIssueService(isEnterprise()).createIssueComment(pullRequest.getLogin(), pullRequest.getRepoId(),
-                        pullRequest.getNumber(), commentRequestModel), comment -> sendToView(view -> view.addComment(TimelineModel.constructComment(comment))));
+                        pullRequest.getNumber(), commentRequestModel), comment -> sendToView(view -> view.addComment(TimelineModel.constructComment
+                        (comment))));
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/popup/EditorLinkImageDialogFragment.java
Patch:
@@ -108,7 +108,7 @@ public static EditorLinkImageDialogFragment newInstance(boolean isLink) {
 
     @OnClick(R.id.insert) public void onInsertClicked() {
         if (callback != null) {
-            callback.onAppendLink(InputHelper.toString(title), InputHelper.toString(link), isLink());
+            callback.onAppendLink(InputHelper.toString(title), InputHelper.toString(link).replace("http://", "https://"), isLink());
         }
         dismiss();
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -30,6 +30,7 @@
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.provider.scheme.LinkParserHelper;
@@ -393,6 +394,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         getPresenter().onAddComment(comment);
         AnimHelper.mimicFabVisibility(getPresenter().hasReviewComments(), prReviewHolder, null);
         reviewsCount.setText(String.format("%s", getPresenter().getCommitComment().size()));
+        Logger.e(reviewsCount.getText(), prReviewHolder.getVisibility());
     }
 
     @Override public void onMerge(@NonNull String msg, @NonNull String mergeMethod) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -71,9 +71,10 @@ void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @Non
 
         void onHandleComment(String text, @Nullable Bundle bundle);
 
-        void onReplyOrCreateReview(@Nullable User user, @Nullable Bundle bundle);
+        void onReplyOrCreateReview(@Nullable User user, @Nullable String message, int groupPosition, int childPosition,
+                                   @NonNull EditReviewCommentModel model);
 
-        void onAddReviewComment(@Nullable ReviewCommentModel reviewCommentModel, @NonNull EditReviewCommentModel commentModel);
+        void addComment(@NonNull TimelineModel timelineModel);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/data/service/ReviewService.java
Patch:
@@ -42,7 +42,7 @@ Observable<Pageable<ReviewModel>> getReviews(@Path("owner") String owner, @Path(
     Observable<Pageable<ReviewCommentModel>> getReviewComments(@Path("owner") String owner, @Path("repo") String repo,
                                                                @Path("number") long number, @Path("id") long reviewId);
 
-    @GET("repos/{owner}/{repo}/pulls/{number}/comments")
+    @GET("repos/{owner}/{repo}/pulls/{number}/comments?per_page=100")
     @Headers("Accept: application/vnd.github.black-cat-preview+json, application/vnd.github.VERSION.html, "
             + "application/vnd.github.squirrel-girl-preview")
     @NonNull
@@ -68,5 +68,5 @@ Observable<ReviewCommentModel> editComment(@Path("owner") String owner, @Path("r
     @POST("repos/{owner}/{repo}/pulls/{number}/reviews")
     @Headers("Accept: application/vnd.github.black-cat-preview")
     Observable<Response<ReviewModel>> submitPrReview(@Path("owner") String owner, @Path("repo") String repo,
-                                        @Path("number") long number, @NonNull @Body ReviewRequestModel body);
+                                                     @Path("number") long number, @NonNull @Body ReviewRequestModel body);
 }

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/scroll/InfiniteScroll.java
Patch:
@@ -43,6 +43,9 @@ private int getLastVisibleItem(int[] lastVisibleItemPositions) {
     }
 
     @Override public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
+        if (dx == 0 && dy == 0) {
+            return;
+        }
         if (layoutManager == null) {
             initLayoutManager(recyclerView.getLayoutManager());
         }

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -58,6 +58,7 @@ public class RestProvider {
             .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)
             .excludeFieldsWithModifiers(Modifier.FINAL, Modifier.TRANSIENT, Modifier.STATIC)
             .setDateFormat("yyyy-MM-dd HH:mm:ss")
+            .disableHtmlEscaping()
             .setPrettyPrinting()
             .create();
 

File: app/src/main/java/com/fastaccess/ui/adapter/TopicsAdapter.java
Patch:
@@ -11,7 +11,6 @@
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.ui.adapter.viewholder.SimpleViewHolder;
 import com.fastaccess.ui.modules.search.SearchActivity;
-import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -39,10 +38,10 @@ public TopicsAdapter(@NonNull List<String> data) {
         if (isLightTheme) {
             holder.itemView.setBackgroundColor(cardBackground);
         }
+        String item = getItem(position);
         holder.itemView.setOnClickListener((view) -> {
-            FontTextView topic = (FontTextView) view;
             Intent intent = new Intent(new Intent(App.getInstance().getApplicationContext(), SearchActivity.class));
-            intent.putExtra("search", topic.getText().toString());
+            intent.putExtra("search", "topic:\"" + item + "\"");
             view.getContext().startActivity(intent);
         });
         holder.bind(getItem(position));

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerMvp.java
Patch:
@@ -18,7 +18,7 @@ interface View extends BaseMvp.FAView, PrettifyWebView.OnContentChangedListener
 
         void onSetImageUrl(@NonNull String url);
 
-        void onSetMdText(@NonNull String text, String baseUrl);
+        void onSetMdText(@NonNull String text, String baseUrl, boolean replace);
 
         void onSetCode(@NonNull String text);
 

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -138,6 +138,9 @@ Observable<TreeResponseModel> getRepoTree(@NonNull @Path("owner") String owner,
     @NonNull @GET("repos/{owner}/{repo}/labels?per_page=100")
     Observable<Pageable<LabelModel>> getLabels(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo);
 
+    @NonNull @GET("repos/{owner}/{repo}/labels?per_page=100")
+    Observable<Pageable<LabelModel>> getLabels(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo, @Query("page") int page);
+
     @NonNull @POST("repos/{owner}/{repo}/labels")
     Observable<LabelModel> addLabel(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo, @Body LabelModel body);
 

File: app/src/main/java/com/fastaccess/ui/adapter/LabelsAdapter.java
Patch:
@@ -19,9 +19,9 @@ public class LabelsAdapter extends BaseRecyclerAdapter<LabelModel, LabelsViewHol
         .OnItemClickListener<LabelModel>> {
 
     public interface OnSelectLabel {
-        boolean isLabelSelected(int position);
+        boolean isLabelSelected(LabelModel labelModel);
 
-        void onToggleSelection(int position, boolean select);
+        void onToggleSelection(LabelModel labelModel, boolean select);
     }
 
     @Nullable private OnSelectLabel onSelectLabel;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueTimelineViewHolder.java
Patch:
@@ -9,7 +9,6 @@
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.timeline.GenericEvent;
 import com.fastaccess.data.dao.types.IssueEventType;
-import com.fastaccess.helper.InputHelper;
 import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.provider.timeline.TimelineProvider;
 import com.fastaccess.provider.timeline.handler.drawable.DrawableGetter;
@@ -66,7 +65,6 @@ public static IssueTimelineViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
             stateText.setText("");
             stateImage.setImageResource(R.drawable.ic_label);
         }
-        itemView.setEnabled(!InputHelper.isEmpty(issueEventModel.getCommitUrl()) || issueEventModel.getSource() != null);
     }
 
     @Override protected void onViewIsDetaching() {

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -7,6 +7,7 @@
 import com.crashlytics.android.Crashlytics;
 import com.crashlytics.android.core.CrashlyticsCore;
 import com.fastaccess.data.dao.model.Models;
+import com.fastaccess.helper.DeviceNameGetter;
 import com.fastaccess.helper.TypeFaceHelper;
 import com.fastaccess.provider.colors.ColorsProvider;
 import com.fastaccess.provider.emoji.EmojiManager;
@@ -54,6 +55,7 @@ private void init() {
         Shortbread.create(this);
         EmojiManager.load();
         ColorsProvider.load();
+        DeviceNameGetter.getInstance().loadDevice();
     }
 
     private void initFabric() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -41,7 +41,7 @@
  */
 
 public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimelineMvp.View> implements PullRequestTimelineMvp.Presenter {
-    @com.evernote.android.state.State boolean hasNextPage;
+    @com.evernote.android.state.State boolean hasNextPage = true;
 
     private ArrayList<PullRequestTimelineModel> timeline = new ArrayList<>();
     private SparseArray<String> pages = new SparseArray<>();

File: app/src/main/java/com/fastaccess/data/dao/timeline/PullRequestTimelineModel.java
Patch:
@@ -19,9 +19,9 @@
     public static final int STATUS = 3;
     public static final int REVIEW = 4;
 
-    private PullRequestTimelineQuery.Node node;
-    private PullRequest pullRequest;
-    private PullRequestStatusModel status;
+    public PullRequestTimelineQuery.Node node;
+    public PullRequest pullRequest;
+    public PullRequestStatusModel status;
 
     public PullRequestTimelineModel(PullRequest pullRequest) {
         this.pullRequest = pullRequest;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -21,7 +21,7 @@
 import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.provider.timeline.HtmlHelper;
 import com.fastaccess.provider.timeline.handler.drawable.DrawableGetter;
-import com.fastaccess.ui.adapter.IssuePullsTimelineAdapter;
+import com.fastaccess.ui.adapter.IssuesTimelineAdapter;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.adapter.callback.ReactionsCallback;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -76,7 +76,7 @@ public class TimelineCommentsViewHolder extends BaseViewHolder<TimelineModel> {
         }
     }
 
-    private TimelineCommentsViewHolder(@NonNull View itemView, @NonNull ViewGroup viewGroup, @Nullable IssuePullsTimelineAdapter adapter,
+    private TimelineCommentsViewHolder(@NonNull View itemView, @NonNull ViewGroup viewGroup, @Nullable IssuesTimelineAdapter adapter,
                                        @NonNull OnToggleView onToggleView, boolean showEmojies, @NonNull ReactionsCallback reactionsCallback,
                                        String repoOwner, String poster) {
         super(itemView, adapter);
@@ -106,7 +106,7 @@ private TimelineCommentsViewHolder(@NonNull View itemView, @NonNull ViewGroup vi
         heart.setOnClickListener(this);
     }
 
-    public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable IssuePullsTimelineAdapter adapter,
+    public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable IssuesTimelineAdapter adapter,
                                                          @NonNull OnToggleView onToggleView, boolean showEmojies,
                                                          @NonNull ReactionsCallback reactionsCallback, String repoOwner, String poster) {
         return new TimelineCommentsViewHolder(getView(viewGroup, R.layout.comments_row_item), viewGroup, adapter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragment.java
Patch:
@@ -21,7 +21,7 @@
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.provider.timeline.ReactionsProvider;
-import com.fastaccess.ui.adapter.IssuePullsTimelineAdapter;
+import com.fastaccess.ui.adapter.IssuesTimelineAdapter;
 import com.fastaccess.ui.base.BaseFragment;
 import com.fastaccess.ui.modules.editor.EditorActivity;
 import com.fastaccess.ui.modules.repos.reactions.ReactionsDialogFragment;
@@ -48,7 +48,7 @@ public class CommitCommentsFragment extends BaseFragment<CommitCommentsMvp.View,
     @BindView(R.id.fastScroller) RecyclerViewFastScroller fastScroller;
     @State HashMap<Long, Boolean> toggleMap = new LinkedHashMap<>();
 
-    private IssuePullsTimelineAdapter adapter;
+    private IssuesTimelineAdapter adapter;
     private OnLoadMore onLoadMore;
 
     public static CommitCommentsFragment newInstance(@NonNull String login, @NonNull String repoId, @NonNull String sha) {
@@ -72,7 +72,7 @@ public static CommitCommentsFragment newInstance(@NonNull String login, @NonNull
         recycler.setItemViewCacheSize(30);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
-        adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true,
+        adapter = new IssuesTimelineAdapter(getPresenter().getComments(), this, true,
                 this, getArguments().getString(BundleConstant.EXTRA), null);
         adapter.setListener(getPresenter());
         getLoadMore().initialize(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -15,7 +15,6 @@
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.helper.BundleConstant;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.TypeFaceHelper;
 import com.fastaccess.helper.ViewHelper;
@@ -107,11 +106,11 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
     }
 
     @Override public boolean onPrepareOptionsMenu(Menu menu) {
-        Logger.e();
         if (isLoggedIn() && Notification.hasUnreadNotifications()) {
             ViewHelper.tintDrawable(menu.findItem(R.id.notifications).setIcon(R.drawable.ic_ring).getIcon(), ViewHelper.getAccentColor(this));
         } else {
-            ViewHelper.tintDrawable(menu.findItem(R.id.notifications).setIcon(R.drawable.ic_ring).getIcon(), ViewHelper.getIconColor(this));
+            ViewHelper.tintDrawable(menu.findItem(R.id.notifications).setIcon(R.drawable.ic_notifications_none).getIcon(), ViewHelper.getIconColor
+                    (this));
         }
         return super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -48,11 +48,12 @@ public class MainPresenter extends BasePresenter<MainMvp.View> implements MainMv
                 .flatMap(login -> RxHelper.getObservable(RestProvider.getNotificationService(isEnterprise())
                         .getNotifications(ParseDateFormat.getLastWeekDate())))
                 .flatMap(notificationPageable -> {
+                    boolean hasUnread = false;
                     if (notificationPageable != null && notificationPageable.getItems() == null && !notificationPageable.getItems().isEmpty()) {
+                        hasUnread = Stream.of(notificationPageable.getItems()).anyMatch(Notification::isUnread);
                         manageDisposable(Notification.save(notificationPageable.getItems()));
-                        return Observable.just(Stream.of(notificationPageable.getItems()).anyMatch(Notification::isUnread));
                     }
-                    return Observable.empty();
+                    return Observable.just(hasUnread);
                 })
                 .subscribe(unread -> {/**/}, Throwable::printStackTrace/*fail silently*/, () -> sendToView(view -> {
                     view.onInvalidateNotification();

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryFragment.java
Patch:
@@ -111,12 +111,14 @@ public interface SettingsCallback {
                 getPreferenceScreen().addPreference(notificationTime);
                 getPreferenceScreen().addPreference(notificationRead);
                 getPreferenceScreen().addPreference(notificationSound);
+                getPreferenceScreen().addPreference(findPreference("notification_sound_path"));
                 NotificationSchedulerJobTask.scheduleJob(App.getInstance(),
                         PrefGetter.getNotificationTaskDuration(), true);
             } else {
                 getPreferenceScreen().removePreference(notificationTime);
                 getPreferenceScreen().removePreference(notificationRead);
                 getPreferenceScreen().removePreference(notificationSound);
+                getPreferenceScreen().removePreference(findPreference("notification_sound_path"));
                 NotificationSchedulerJobTask.scheduleJob(App.getInstance(), -1, true);
             }
             return true;

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -223,9 +223,10 @@ private void removeProgress() {
     private void addSpanLookup(ViewGroup parent) {
         if (parent instanceof RecyclerView) {
             if (((RecyclerView) parent).getLayoutManager() instanceof GridLayoutManager) {
-                ((GridLayoutManager) ((RecyclerView) parent).getLayoutManager()).setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
+                GridLayoutManager layoutManager = ((GridLayoutManager) ((RecyclerView) parent).getLayoutManager());
+                layoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {
                     @Override public int getSpanSize(int position) {
-                        return getItemViewType(position) == PROGRESS_TYPE ? 2 : 1;
+                        return getItemViewType(position) == PROGRESS_TYPE ? layoutManager.getSpanCount() : 1;
                     }
                 });
             }

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ListDialogView.java
Patch:
@@ -53,7 +53,7 @@ public interface onSimpleItemSelection<O extends Parcelable> {
         title.setText(titleText);
         if (objects != null) {
             SimpleListAdapter<O> adapter = new SimpleListAdapter<>(objects, this);
-            recycler.addDivider(true);
+            recycler.addDivider();
             recycler.setAdapter(adapter);
         } else {
             dismiss();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragment.java
Patch:
@@ -290,7 +290,7 @@ public static CommitCommentsFragment newInstance(@NonNull String login, @NonNull
         if (recycler != null) recycler.scrollToPosition(0);
     }
 
-    private void showReload() {
+    @Override public void showReload() {
         hideProgress();
         stateLayout.showReload(adapter.getItemCount());
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -46,6 +46,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void showReactionsPopup(@NonNull ReactionTypes reactionTypes, @NonNull String login, @NonNull String repoId, long commentId);
 
         void addComment(@NonNull Comment newComment);
+
+        void showReload();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -244,8 +244,7 @@
                     return TimelineConverter.INSTANCE.convert(response != null ? response.getItems() : null);
                 })
                 .toList()
-                .toObservable()
-                .doOnError(Throwable::printStackTrace);
+                .toObservable();
         makeRestCall(observable, timeline -> sendToView(view -> view.onNotifyAdapter(timeline, page)));
     }
 }

File: app/src/main/java/com/fastaccess/data/dao/PullRequestStatusModel.java
Patch:
@@ -3,7 +3,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.fastaccess.data.dao.timeline.Timeline;
 import com.fastaccess.data.dao.types.StatusStateType;
 
 import java.util.Date;
@@ -16,7 +15,7 @@
  * Created by Kosh on 10 Apr 2017, 3:15 AM
  */
 
-@Getter @Setter public class PullRequestStatusModel extends Timeline implements Parcelable {
+@Getter @Setter public class PullRequestStatusModel implements Parcelable {
 
     StatusStateType state;
     String sha;

File: app/src/main/java/com/fastaccess/data/dao/ReviewCommentModel.java
Patch:
@@ -4,7 +4,6 @@
 import android.os.Parcelable;
 
 import com.fastaccess.data.dao.model.User;
-import com.fastaccess.data.dao.timeline.Timeline;
 
 import java.util.Date;
 
@@ -15,7 +14,7 @@
  * Created by Kosh on 04 May 2017, 7:10 PM
  */
 
-@Getter @Setter public class ReviewCommentModel extends Timeline implements Parcelable {
+@Getter @Setter public class ReviewCommentModel implements Parcelable {
 
     long id;
     String url;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -23,6 +23,7 @@
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.timeline.CommentsHelper;
@@ -333,9 +334,7 @@ private void loadEverything(@NonNull String login, @NonNull String repoId, int n
                                          : Observable.fromIterable(new ArrayList<>());
                 })
                 .map(PullRequestTimelineModel::new)
-                .subscribe(timeline -> {
-//                    sendToView(view -> view.onNotifyAdapter(timeline, page));
-                }, Throwable::printStackTrace, () -> sendToView(BaseMvp.FAView::hideProgress)));
+                .subscribe(Logger::e, Throwable::printStackTrace, () -> sendToView(BaseMvp.FAView::hideProgress)));
     }
 
     @NonNull private PullRequestTimelineQuery getTimelineBuilder(@NonNull String login, @NonNull String repoId, int number, int page) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -46,6 +46,7 @@ private CommentsViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter
         itemView.setOnLongClickListener(null);
         toggleHolder.setOnClickListener(this);
         toggle.setOnClickListener(this);
+        toggle.setOnLongClickListener(this);
     }
 
     public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable BaseRecyclerAdapter adapter) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -89,6 +89,7 @@ private TimelineCommentsViewHolder(@NonNull View itemView, @NonNull ViewGroup vi
         itemView.setOnClickListener(null);
         itemView.setOnLongClickListener(null);
         commentMenu.setOnClickListener(this);
+        commentMenu.setOnLongClickListener(this);
         toggleHolder.setOnClickListener(this);
         toggle.setOnClickListener(this);
         laugh.setOnClickListener(this);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesSingleton.java
Patch:
@@ -25,7 +25,7 @@ static CommitFilesSingleton getInstance() {
     private CommitFilesSingleton() {}
 
     void putFiles(@NonNull String id, @NonNull CommitFileListModel commitFiles) {
-        files.clear();
+        clear();
         files.put(id, commitFiles);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -236,7 +236,7 @@
                     if (response != null) {
                         lastPage = response.getLast();
                     }
-                    return TimelineConverter.convert(response != null ? response.getItems() : null);
+                    return TimelineConverter.INSTANCE.convert(response != null ? response.getItems() : null);
                 }).toList()
                 .toObservable();
         makeRestCall(observable, timeline -> sendToView(view -> view.onNotifyAdapter(timeline, page)));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -299,7 +299,7 @@ private void loadEverything(@NonNull String login, @NonNull String repoId, int n
                 .getTimeline(login, repoId, number, page)
                 .flatMap(response -> {
                     lastPage = response != null ? response.getLast() : 0;
-                    return TimelineConverter.convert(response != null ? response.getItems() : null);
+                    return TimelineConverter.INSTANCE.convert(response != null ? response.getItems() : null);
                 })
                 .toList()
                 .toObservable()

File: app/src/main/java/com/fastaccess/provider/timeline/TimelineProvider.java
Patch:
@@ -142,6 +142,8 @@ public class TimelineProvider {
                             title.url("#" + sourceModel.getPullRequest().getNumber());
                         } else if (sourceModel.getCommit() != null) {
                             title.url(substring(sourceModel.getCommit().getSha()));
+                        } else if (sourceModel.getRepository() != null) {
+                            title.url(sourceModel.getRepository().getName());
                         }
                         if (!InputHelper.isEmpty(title)) {
                             spannableBuilder.append(" ")

File: app/src/main/java/com/fastaccess/provider/timeline/handler/DrawableHandler.java
Patch:
@@ -5,10 +5,10 @@
 import android.widget.TextView;
 
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.timeline.handler.drawable.DrawableGetter;
 
 import net.nightwhistler.htmlspanner.TagNodeHandler;
+import net.nightwhistler.htmlspanner.spans.CenterSpan;
 
 import org.htmlcleaner.TagNode;
 
@@ -30,12 +30,12 @@
 
     @Override public void handleTagNode(TagNode node, SpannableStringBuilder builder, int start, int end) {
         String src = node.getAttributeByName("src");
-        boolean isGif = "gif".equalsIgnoreCase(node.getAttributeByName("alt"));
-        Logger.e(isGif);
         if (!InputHelper.isEmpty(src)) {
             builder.append("￼");
             if (isNull()) return;
+            CenterSpan centerSpan = new CenterSpan();
             DrawableGetter imageGetter = new DrawableGetter(textView);
+            builder.setSpan(centerSpan, start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
             builder.setSpan(new ImageSpan(imageGetter.getDrawable(src)), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
             appendNewLine(builder);
         }

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/DrawableGetter.java
Patch:
@@ -20,7 +20,7 @@
 
 public class DrawableGetter implements Html.ImageGetter, Drawable.Callback {
     private WeakReference<TextView> container;
-    private final Set<GifBitmapTarget> cachedTargets;
+    private final Set<GlideDrawableTarget> cachedTargets;
 
     public DrawableGetter(TextView tv) {
         tv.setTag(R.id.drawable_callback, this);
@@ -35,7 +35,7 @@ public DrawableGetter(TextView tv) {
             final GenericRequestBuilder load = Glide.with(context)
                     .load(url)
                     .dontAnimate();
-            final GifBitmapTarget target = new GifBitmapTarget(urlDrawable, container);
+            final GlideDrawableTarget target = new GlideDrawableTarget(urlDrawable, container);
             load.into(target);
             cachedTargets.add(target);
         }
@@ -54,7 +54,7 @@ public DrawableGetter(TextView tv) {
 
     public void clear(@NonNull DrawableGetter drawableGetter) {
         if (drawableGetter.cachedTargets != null) {
-            for (GifBitmapTarget target : drawableGetter.cachedTargets) {
+            for (GlideDrawableTarget target : drawableGetter.cachedTargets) {
                 Glide.clear(target);
             }
         }

File: app/src/main/java/com/fastaccess/provider/timeline/handler/drawable/GlideDrawableTarget.java
Patch:
@@ -11,11 +11,11 @@
 
 import java.lang.ref.WeakReference;
 
-class GifBitmapTarget extends SimpleTarget<GlideDrawable> {
+class GlideDrawableTarget extends SimpleTarget<GlideDrawable> {
     private final UrlDrawable urlDrawable;
     private final WeakReference<TextView> container;
 
-    GifBitmapTarget(UrlDrawable urlDrawable, WeakReference<TextView> container) {
+    GlideDrawableTarget(UrlDrawable urlDrawable, WeakReference<TextView> container) {
         this.urlDrawable = urlDrawable;
         this.container = container;
     }
@@ -34,7 +34,7 @@ class GifBitmapTarget extends SimpleTarget<GlideDrawable> {
                 width = (float) resource.getIntrinsicWidth() * multiplier;
                 height = (float) resource.getIntrinsicHeight() * multiplier;
             }
-            Rect rect = new Rect(0, 0, Math.round(width), Math.round(height));
+            Rect rect = new Rect(0, 0, (int) Math.round(width / 1.5), (int) Math.round(height / 1.5));
             resource.setBounds(rect);
             urlDrawable.setBounds(rect);
             urlDrawable.setDrawable(resource);

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsPresenter.java
Patch:
@@ -111,7 +111,7 @@ private void markAsRead(int position, View v, Notification item) {
                     }
                     return Observable.empty();
                 });
-        makeRestCall(observable.doFinally(() -> sendToView(BaseMvp.FAView::hideProgress)), response -> sendToView(view -> view.onNotifyAdapter
+        makeRestCall(observable.doOnComplete(() -> sendToView(BaseMvp.FAView::hideProgress)), response -> sendToView(view -> view.onNotifyAdapter
                 (response)));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -70,7 +70,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
                             lastPage = listResponse.getLast();
                             return TimelineModel.construct(listResponse.getItems());
                         })
-                        .doFinally(() -> sendToView(BaseMvp.FAView::hideProgress)),
+                        .doOnComplete(() -> sendToView(BaseMvp.FAView::hideProgress)),
                 listResponse -> sendToView(view -> view.onNotifyAdapter(listResponse, page)));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesPresenter.java
Patch:
@@ -76,7 +76,7 @@ class CommitFilesPresenter extends BasePresenter<CommitFilesMvp.View> implements
                             .map(CommitFileChanges::construct)
                             .doOnSubscribe(disposable -> sendToView(CommitFilesMvp.View::clearAdapter))
                             .doOnNext(commitFileChanges -> sendToView(view -> view.onNotifyAdapter(commitFileChanges)))
-                            .doFinally(() -> sendToView(BaseMvp.FAView::hideProgress)));
+                            .doOnComplete(() -> sendToView(BaseMvp.FAView::hideProgress)));
                 }
 
             }

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -80,11 +80,12 @@ public static String getFastHubIssueTemplate(boolean enterprise) {
         }
         builder.append("- **Model:** ")
                 .append(model)
-                .append("  \n").append("---").append("\n\n");
+                .append("  \n").append("---").append("\n");
         if (!Locale.getDefault().getLanguage().equals(new Locale("en").getLanguage())) {
             builder.append("<--")
                     .append(App.getInstance().getString(R.string.english_please))
-                    .append("-->");
+                    .append("-->")
+                    .append("\n");
         }
         return builder.toString();
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -172,7 +172,7 @@ private void callApi(int navTyp) {
                         } else {
                             callApi(navTyp);
                         }
-                    }));
+                    }, Throwable::printStackTrace));
         } else {
             sendToView(RepoPagerMvp.View::onFinishActivity);
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -91,7 +91,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
     }
 
     @Override public void hideProgress() {
-        refresh.setRefreshing(false);
+        if (refresh != null) refresh.setRefreshing(false);
     }
 
     @Override protected int fragmentLayout() {

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRepo.java
Patch:
@@ -130,7 +130,6 @@ public Single<Repo> save(Repo entity) {
                 .flatMap(observer -> App.getInstance().getDataStore().insert(entity)));
     }
 
-
     public static Maybe<Repo> getRepo(@NonNull String name, @NonNull String login) {
         return App.getInstance().getDataStore()
                 .select(Repo.class)

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -154,6 +154,7 @@ private static boolean isInstalledFromPlaySore(@NonNull Context context) {
     }
 
     public static boolean isGoogleAvailable(@NonNull Context context) {
-        return GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(context) == ConnectionResult.SUCCESS;
+        int status = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(context);
+        return status != ConnectionResult.SERVICE_DISABLED && status == ConnectionResult.SUCCESS;
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -276,6 +276,7 @@ private android.app.Notification getSummaryGroupNotification(@NonNull Notificati
                 new Intent(getApplicationContext(), NotificationActivity.class), PendingIntent.FLAG_UPDATE_CURRENT);
         return getNotification(thread.getSubject().getTitle(), thread.getRepository().getFullName())
                 .setDefaults(PrefGetter.isNotificationSoundEnabled() ? NotificationCompat.DEFAULT_ALL : 0)
+                .setSound(PrefGetter.getNotificationSound())
                 .setContentIntent(toNotificationActivity ? pendingIntent : getPendingIntent(thread.getId(), thread.getSubject().getUrl()))
                 .addAction(R.drawable.ic_github, getString(R.string.open), getPendingIntent(thread.getId(), thread
                         .getSubject().getUrl()))

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -105,7 +105,7 @@ public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements Feed
         onCallApi(page);
     }
 
-    @Override public void onSubscribed() {
+    @Override public void onSubscribed(boolean cancelable) {
         sendToView(view -> view.showProgress(0));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/FilterIssuesActivity.java
Patch:
@@ -149,7 +149,7 @@ public static void startActivity(@NonNull Activity context, @NonNull String logi
                 searchEditText.setText(text);
                 onSearch();
             } else {
-                searchEditText.setText(String.format("%s %s", isOpen ? "is:open" : "is:closed", isIssue ? "is:issue" : "is:pr"));
+                searchEditText.setText(String.format("%s %s ", isOpen ? "is:open" : "is:closed", isIssue ? "is:issue" : "is:pr"));
                 onSearch();
             }
         }
@@ -165,7 +165,7 @@ public static void startActivity(@NonNull Activity context, @NonNull String logi
                 searchEditText.setText(text);
                 onSearch();
             } else {
-                searchEditText.setText(String.format("%s %s", isOpen ? "is:open" : "is:closed", isIssue ? "is:issue" : "is:pr"));
+                searchEditText.setText(String.format("%s %s ", isOpen ? "is:open" : "is:closed", isIssue ? "is:issue" : "is:pr"));
                 onSearch();
             }
         }

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistPresenter.java
Patch:
@@ -57,6 +57,6 @@ class CreateGistPresenter extends BasePresenter<CreateGistMvp.View> implements C
 
     @Override public void onSubmit(@NonNull CreateGistModel model) {
         makeRestCall(RestProvider.getGistService(isEnterprise()).createGist(model),
-                gistsModel -> sendToView(view -> view.onSuccessSubmission(gistsModel)));
+                gistsModel -> sendToView(view -> view.onSuccessSubmission(gistsModel)), false);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistPresenter.java
Patch:
@@ -53,7 +53,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
     @Override public void onDeleteGist() {
         if (getGist() == null) return;
         manageDisposable(RxHelper.getObservable(RestProvider.getGistService(isEnterprise()).deleteGist(getGist().getGistId()))
-                .doOnSubscribe(disposable -> onSubscribed())
+                .doOnSubscribe(disposable -> onSubscribed(false))
                 .doOnNext(booleanResponse -> {
                     if (booleanResponse.code() == 204) {
                         sendToView(GistMvp.View::onSuccessDeleted);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -178,7 +178,7 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
     @Override public void onLoadLabels() {
         manageDisposable(
                 RxHelper.getObservable(RestProvider.getRepoService(isEnterprise()).getLabels(login, repoId))
-                        .doOnSubscribe(disposable -> onSubscribed())
+                        .doOnSubscribe(disposable -> onSubscribed(false))
                         .doOnNext(response -> {
                             if (response.getItems() != null && !response.getItems().isEmpty()) {
                                 sendToView(view -> view.onLabelsRetrieved(response.getItems()));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerPresenter.java
Patch:
@@ -171,7 +171,7 @@ class PullRequestPagerPresenter extends BasePresenter<PullRequestPagerMvp.View>
     @Override public void onLoadLabels() {
         manageDisposable(
                 RxHelper.getObservable(RestProvider.getRepoService(isEnterprise()).getLabels(login, repoId))
-                        .doOnSubscribe(disposable -> onSubscribed())
+                        .doOnSubscribe(disposable -> onSubscribed(false))
                         .subscribe(response -> {
                             if (response.getItems() != null && !response.getItems().isEmpty()) {
                                 sendToView(view -> view.onLabelsRetrieved(response.getItems()));

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractIssueEvent.java
Patch:
@@ -61,6 +61,7 @@
     String repoId;
     String login;
     @Transient List<LabelModel> labels;
+    @Transient Issue issue;
 
     public static Disposable save(@NonNull List<IssueEvent> models, @NonNull String repoId,
                                   @NonNull String login, @NonNull String issueId) {
@@ -125,6 +126,7 @@ public static Single<List<IssueEvent>> get(@NonNull String repoId, @NonNull Stri
         dest.writeString(this.repoId);
         dest.writeString(this.login);
         dest.writeTypedList(this.labels);
+        dest.writeParcelable(this.issue, flags);
     }
 
     protected AbstractIssueEvent(Parcel in) {
@@ -149,6 +151,7 @@ protected AbstractIssueEvent(Parcel in) {
         this.repoId = in.readString();
         this.login = in.readString();
         this.labels = in.createTypedArrayList(LabelModel.CREATOR);
+        this.issue = in.readParcelable(Issue.class.getClassLoader());
     }
 
     public static final Creator<IssueEvent> CREATOR = new Creator<IssueEvent>() {

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -22,9 +22,10 @@ public enum IssueEventType {
     subscribed(R.drawable.ic_subscribe),
     unassigned(R.drawable.ic_profile),
     unlabeled(R.drawable.ic_label),
-    unlocked(R.drawable.ic_unsubscribe),
+    unlocked(R.drawable.ic_unlock),
     unsubscribed(R.drawable.ic_eye_off),
     review_requested(R.drawable.ic_eye),
+    review_dismissed(R.drawable.ic_eye_off),
     review_request_removed(R.drawable.ic_eye_off),
     @SerializedName("cross-referenced")crossReferenced(R.drawable.ic_format_quote);
 

File: app/src/main/java/com/fastaccess/data/dao/types/MyIssuesType.java
Patch:
@@ -9,5 +9,5 @@ public enum MyIssuesType {
     ASSIGNED,
     MENTIONED,
     REVIEW,
-    PARTICIPATED,
+    PARTICIPATED
 }

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractIssueEvent.java
Patch:
@@ -61,6 +61,7 @@
     String repoId;
     String login;
     @Transient List<LabelModel> labels;
+    @Transient Issue issue;
 
     public static Disposable save(@NonNull List<IssueEvent> models, @NonNull String repoId,
                                   @NonNull String login, @NonNull String issueId) {
@@ -125,6 +126,7 @@ public static Single<List<IssueEvent>> get(@NonNull String repoId, @NonNull Stri
         dest.writeString(this.repoId);
         dest.writeString(this.login);
         dest.writeTypedList(this.labels);
+        dest.writeParcelable(this.issue, flags);
     }
 
     protected AbstractIssueEvent(Parcel in) {
@@ -149,6 +151,7 @@ protected AbstractIssueEvent(Parcel in) {
         this.repoId = in.readString();
         this.login = in.readString();
         this.labels = in.createTypedArrayList(LabelModel.CREATOR);
+        this.issue = in.readParcelable(Issue.class.getClassLoader());
     }
 
     public static final Creator<IssueEvent> CREATOR = new Creator<IssueEvent>() {

File: app/src/main/java/com/fastaccess/data/dao/types/MyIssuesType.java
Patch:
@@ -10,5 +10,4 @@ public enum MyIssuesType {
     MENTIONED,
     REVIEW,
     PARTICIPATED,
-    DISMISSED
 }

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -22,7 +22,7 @@ public enum IssueEventType {
     subscribed(R.drawable.ic_subscribe),
     unassigned(R.drawable.ic_profile),
     unlabeled(R.drawable.ic_label),
-    unlocked(R.drawable.ic_unsubscribe),
+    unlocked(R.drawable.ic_unlock),
     unsubscribed(R.drawable.ic_eye_off),
     review_requested(R.drawable.ic_eye),
     review_dismissed(R.drawable.ic_eye_off),

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -97,8 +97,6 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
                 return RepoQueryProvider.getMentioned(login, parameter, true);
             case REVIEW:
                 return RepoQueryProvider.getReviewRequests(login, parameter);
-            case DISMISSED:
-                return RepoQueryProvider.getReviewDismissed(login, parameter);
         }
         return RepoQueryProvider.getMyIssuesPullRequestQuery(login, parameter, false);
     }

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -25,6 +25,7 @@ public enum IssueEventType {
     unlocked(R.drawable.ic_unsubscribe),
     unsubscribed(R.drawable.ic_eye_off),
     review_requested(R.drawable.ic_eye),
+    review_dismissed(R.drawable.ic_eye_off),
     review_request_removed(R.drawable.ic_eye_off),
     @SerializedName("cross-referenced")crossReferenced(R.drawable.ic_format_quote);
 

File: app/src/main/java/com/fastaccess/data/dao/types/MyIssuesType.java
Patch:
@@ -9,5 +9,6 @@ public enum MyIssuesType {
     ASSIGNED,
     MENTIONED,
     REVIEW,
-    PARTICIPATED
+    PARTICIPATED,
+    DISMISSED
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -97,6 +97,8 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
                 return RepoQueryProvider.getMentioned(login, parameter, true);
             case REVIEW:
                 return RepoQueryProvider.getReviewRequests(login, parameter);
+            case DISMISSED:
+                return RepoQueryProvider.getReviewDismissed(login, parameter);
         }
         return RepoQueryProvider.getMyIssuesPullRequestQuery(login, parameter, false);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -32,7 +32,7 @@
 import it.sephiroth.android.library.bottomnavigation.BottomNavigation;
 import shortbread.Shortcut;
 
-@Shortcut(id = "feeds", icon = R.drawable.ic_shortcut_github, shortLabelRes = R.string.feeds, rank = 1)
+@Shortcut(id = "feeds", icon = R.drawable.ic_app_shortcut_github, shortLabelRes = R.string.feeds, rank = 1)
 public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> implements MainMvp.View {
 
     @State @MainMvp.NavigationType int navType = MainMvp.FEEDS;
@@ -129,10 +129,10 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
         UserPagerActivity.startActivity(this, Login.getUser().getLogin(), false, PrefGetter.isEnterprise(), -1);
     }
 
-    @Shortcut(id = "myIssues", icon = R.drawable.ic_shortcut_issue, shortLabelRes = R.string.issues, rank = 2, action = "myIssues")
+    @Shortcut(id = "myIssues", icon = R.drawable.ic_app_shortcut_issues, shortLabelRes = R.string.issues, rank = 2, action = "myIssues")
     public void myIssues() {}//do nothing
 
-    @Shortcut(id = "myPulls", icon = R.drawable.ic_shortcut_pull_request, shortLabelRes = R.string.pull_requests, rank = 3, action = "myPulls")
+    @Shortcut(id = "myPulls", icon = R.drawable.ic_app_shortcut_pull_requests, shortLabelRes = R.string.pull_requests, rank = 3, action = "myPulls")
     public void myPulls() {}//do nothing
 
     private void onInit(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposActivity.java
Patch:
@@ -19,7 +19,7 @@
  * Created by Kosh on 25 Mar 2017, 11:14 PM
  */
 
-@Shortcut(id = "pinned", icon = R.drawable.ic_shortcut_pinned, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
+@Shortcut(id = "pinned", icon = R.drawable.ic_app_shortcut_pinned, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
 public class PinnedReposActivity extends BaseActivity {
 
     public static void startActivity(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -46,7 +46,7 @@
  * Created by Kosh on 03 Dec 2016, 8:00 AM
  */
 
-@Shortcut(id = "profile", icon = R.drawable.ic_shortcut_profile, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
+@Shortcut(id = "profile", icon = R.drawable.ic_app_shortcut_profile, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
 public class UserPagerActivity extends BaseActivity<UserPagerMvp.View, UserPagerPresenter> implements UserPagerMvp.View {
 
     @BindView(R.id.tabs) TabLayout tabs;

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -32,7 +32,7 @@
 import it.sephiroth.android.library.bottomnavigation.BottomNavigation;
 import shortbread.Shortcut;
 
-@Shortcut(id = "feeds", icon = R.drawable.ic_shortcut_github, shortLabelRes = R.string.feeds, rank = 1)
+@Shortcut(id = "feeds", icon = R.drawable.ic_app_shortcut_github, shortLabelRes = R.string.feeds, rank = 1)
 public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> implements MainMvp.View {
 
     @State @MainMvp.NavigationType int navType = MainMvp.FEEDS;
@@ -129,10 +129,10 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
         UserPagerActivity.startActivity(this, Login.getUser().getLogin(), false, PrefGetter.isEnterprise(), -1);
     }
 
-    @Shortcut(id = "myIssues", icon = R.drawable.ic_shortcut_issue, shortLabelRes = R.string.issues, rank = 2, action = "myIssues")
+    @Shortcut(id = "myIssues", icon = R.drawable.ic_app_shortcut_issues, shortLabelRes = R.string.issues, rank = 2, action = "myIssues")
     public void myIssues() {}//do nothing
 
-    @Shortcut(id = "myPulls", icon = R.drawable.ic_shortcut_pull_request, shortLabelRes = R.string.pull_requests, rank = 3, action = "myPulls")
+    @Shortcut(id = "myPulls", icon = R.drawable.ic_app_shortcut_pull_requests, shortLabelRes = R.string.pull_requests, rank = 3, action = "myPulls")
     public void myPulls() {}//do nothing
 
     private void onInit(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposActivity.java
Patch:
@@ -19,7 +19,7 @@
  * Created by Kosh on 25 Mar 2017, 11:14 PM
  */
 
-@Shortcut(id = "pinned", icon = R.drawable.ic_shortcut_pinned, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
+@Shortcut(id = "pinned", icon = R.drawable.ic_app_shortcut_pinned, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
 public class PinnedReposActivity extends BaseActivity {
 
     public static void startActivity(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -46,7 +46,7 @@
  * Created by Kosh on 03 Dec 2016, 8:00 AM
  */
 
-@Shortcut(id = "profile", icon = R.drawable.ic_shortcut_profile, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
+@Shortcut(id = "profile", icon = R.drawable.ic_app_shortcut_profile, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
 public class UserPagerActivity extends BaseActivity<UserPagerMvp.View, UserPagerPresenter> implements UserPagerMvp.View {
 
     @BindView(R.id.tabs) TabLayout tabs;

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -69,7 +69,7 @@ public static String getFastHubIssueTemplate(boolean enterprise) {
         String model = (!isEmulator()) ? Build.MODEL : "Android Emulator";
         StringBuilder builder = new StringBuilder()
                 .append("**FastHub Version: ").append(BuildConfig.VERSION_NAME).append(enterprise ? " Enterprise**" : "**").append("  \n")
-                .append("**APK Source: " + (!isInstalledFromPlaySore(App.getInstance()) ? "Unknown" : "Google Play") + "**").append("  \n")
+                .append(!isInstalledFromPlaySore(App.getInstance()) ? "**APK Source: Unknown**  \n" : "")
                 .append("**Android Version: ").append(String.valueOf(Build.VERSION.RELEASE)).append(" (SDK: ")
                     .append(String.valueOf(Build.VERSION.SDK_INT)).append(")**").append("  \n")
                 .append("**Device Information:**").append("  \n")

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractNotification.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.Date;
 import java.util.List;
 
+import io.reactivex.Observable;
 import io.reactivex.Single;
 import io.reactivex.disposables.Disposable;
 import io.requery.BlockingEntityStore;
@@ -71,9 +72,9 @@ public static Disposable markAsRead(long id) {
         })).subscribe(o -> {/*do nothing*/}, Throwable::printStackTrace);
     }
 
-    @android.support.annotation.Nullable public static Disposable save(@android.support.annotation.Nullable List<Notification> models) {
+    public static Disposable save(@android.support.annotation.Nullable List<Notification> models) {
         if (models == null || models.isEmpty()) {
-            return null;
+            return Observable.empty().subscribe();
         }
         return RxHelper.getSingle(Single.fromPublisher(s -> {
             try {

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -77,8 +77,9 @@ public static String getFastHubIssueTemplate(boolean enterprise) {
         if (!model.equalsIgnoreCase(brand)) {
             builder.append("- BRAND: ").append(brand);
         }
-        builder.append("- MODEL: ").append(model).append("  \n")
-               .append("\n\n").append("---").append("\n\n");
+        builder.append("  \n")
+               .append("- MODEL: ").append(model).append("  \n")
+               .append("\n").append("---").append("\n\n");
         return builder.toString();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposActivity.java
Patch:
@@ -19,7 +19,7 @@
  * Created by Kosh on 25 Mar 2017, 11:14 PM
  */
 
-@Shortcut(id = "pinned", icon = R.drawable.ic_pin_shortcut, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
+@Shortcut(id = "pinned", icon = R.drawable.ic_shortcut_pinned, shortLabelRes = R.string.pinned, backStack = {MainActivity.class}, rank = 5)
 public class PinnedReposActivity extends BaseActivity {
 
     public static void startActivity(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -46,7 +46,7 @@
  * Created by Kosh on 03 Dec 2016, 8:00 AM
  */
 
-@Shortcut(id = "profile", icon = R.drawable.ic_profile_shortcut, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
+@Shortcut(id = "profile", icon = R.drawable.ic_shortcut_profile, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
 public class UserPagerActivity extends BaseActivity<UserPagerMvp.View, UserPagerPresenter> implements UserPagerMvp.View {
 
     @BindView(R.id.tabs) TabLayout tabs;

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -147,7 +147,6 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
                 Optional<Intent> intentOptional = returnNonNull(trending, userIntent, repoIssues, repoPulls, pullRequestIntent, commit, commits,
                         createIssueIntent, issueIntent, releasesIntent, repoIntent, repoWikiIntent, blob);
                 Optional<Intent> empty = Optional.empty();
-                Logger.e(isEnterprise);
                 if (intentOptional != null && intentOptional.isPresent() && intentOptional != empty) {
                     Intent intent = intentOptional.get();
                     if (isEnterprise) {
@@ -159,7 +158,6 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
                             intent.putExtra(BundleConstant.IS_ENTERPRISE, true);
                         }
                     }
-                    Logger.e(intent);
                     return intent;
                 } else {
                     Intent intent = getGeneralRepo(context, data);

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -81,7 +81,7 @@ public static boolean isPinned(@NonNull String repoFullName) {
     }
 
     @NonNull public static Disposable updateEntry(@NonNull String repoFullName) {
-        return RxHelper.getObserver(Observable.fromPublisher(e -> {
+        return RxHelper.getObservable(Observable.fromPublisher(e -> {
             PinnedRepos pinned = get(repoFullName);
             if (pinned != null) {
                 pinned.setEntryCount(pinned.getEntryCount() + 1);
@@ -115,7 +115,7 @@ public static boolean isPinned(@NonNull String repoFullName) {
     }
 
     public static void migrateToVersion4() {
-        RxHelper.getObserver(Observable.fromPublisher(e -> {
+        RxHelper.getObservable(Observable.fromPublisher(e -> {
             try {
                 Login login = Login.getUser();
                 if (login == null) {

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -13,14 +13,14 @@
  */
 
 public class RxHelper {
-    public static <T> Observable<T> getObserver(@NonNull Observable<T> observable) {
+    public static <T> Observable<T> getObservable(@NonNull Observable<T> observable) {
         return observable
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread());
     }
 
     public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
-        return getObserver(observable)
+        return getObservable(observable)
                 .doOnError(Throwable::printStackTrace);
     }
 

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -135,9 +135,7 @@ private void markMultiAsRead(@Nullable long[] ids) {
     }
 
     private void markSingleAsRead(long id) {
-        com.fastaccess.data.dao.model.Notification.markAsRead(id)
-                .onErrorComplete()
-                .subscribe();
+        com.fastaccess.data.dao.model.Notification.markAsRead(id);
         RestProvider.getNotificationService(PrefGetter.isEnterprise())
                 .markAsRead(String.valueOf(id))
                 .doOnSubscribe(disposable -> notify(id, getNotification().build()))

File: app/src/main/java/com/fastaccess/provider/tasks/slack/SlackInvitationService.java
Patch:
@@ -30,7 +30,7 @@ public SlackInvitationService() {
             body.setEmail(login.getEmail());
             body.setFirst_name(login.getName());
             body.setLast_name(login.getLogin());
-            RxHelper.getObserver(RestProvider.getSlackService()
+            RxHelper.getObservable(RestProvider.getSlackService()
                     .invite(body))
                     .subscribe(response -> {
                         if (response != null) {

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -8,7 +8,6 @@
 import com.evernote.android.state.StateSaver;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.GitHubErrorResponse;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
@@ -51,7 +50,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
 
     @Override public <T> void manageObservable(@Nullable Observable<T> observable) {
         if (observable != null) {
-            manageDisposable(RxHelper.getObserver(observable).subscribe(t -> {/**/}, Throwable::printStackTrace));
+            manageDisposable(RxHelper.getObservable(observable).subscribe(t -> {/**/}, Throwable::printStackTrace));
         }
     }
 
@@ -90,7 +89,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
 
     @Override public <T> void makeRestCall(@NonNull Observable<T> observable, @NonNull Consumer<T> onNext) {
         manageDisposable(
-                RxHelper.getObserver(observable)
+                RxHelper.getObservable(observable)
                         .doOnSubscribe(disposable -> onSubscribed())
                         .subscribe(onNext, this::onError, () -> apiCalled = true)
         );

File: app/src/main/java/com/fastaccess/ui/modules/changelog/ChangelogPresenter.java
Patch:
@@ -15,7 +15,7 @@
     private String html;
 
     @Override public void onLoadChangelog() {
-        manageDisposable(RxHelper.getObserver(ToGsonProvider.getChangelog(App.getInstance()))
+        manageDisposable(RxHelper.getObservable(ToGsonProvider.getChangelog(App.getInstance()))
                 .subscribe(s -> {
                     this.html = s;
                     sendToView(view -> view.onChangelogLoaded(html));

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -120,7 +120,7 @@ public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements Feed
 
     @Override public void onWorkOffline() {
         if (eventsModels.isEmpty() && InputHelper.isEmpty(user)) {
-            manageDisposable(RxHelper.getObserver(Event.getEvents(Login.getUser().getLogin()).toObservable())
+            manageDisposable(RxHelper.getObservable(Event.getEvents(Login.getUser().getLogin()).toObservable())
                     .subscribe(modelList -> {
                         if (modelList != null) {
                             sendToView(view -> view.onNotifyAdapter(modelList, 1));

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -66,7 +66,7 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
 
     @Override public void onWorkOffline() {
         if (gistsModels.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Gist.getGists().toObservable())
+            manageDisposable(RxHelper.getObservable(Gist.getGists().toObservable())
                     .subscribe(gists -> sendToView(view -> view.onNotifyAdapter(gists, 1))));
         } else {
             sendToView(GistsMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistPresenter.java
Patch:
@@ -52,7 +52,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onDeleteGist() {
         if (getGist() == null) return;
-        manageDisposable(RxHelper.getObserver(RestProvider.getGistService(isEnterprise()).deleteGist(getGist().getGistId()))
+        manageDisposable(RxHelper.getObservable(RestProvider.getGistService(isEnterprise()).deleteGist(getGist().getGistId()))
                 .doOnSubscribe(disposable -> onSubscribed())
                 .doOnNext(booleanResponse -> {
                     if (booleanResponse.code() == 204) {
@@ -99,7 +99,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onWorkOffline(@NonNull String gistId) {
         if (gist == null) {
-            manageDisposable(RxHelper.getObserver(Gist.getGist(gistId))
+            manageDisposable(RxHelper.getObservable(Gist.getGist(gistId))
                     .subscribe(gistsModel -> {
                         this.gist = gistsModel;
                         sendToView(GistMvp.View::onSetupDetails);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -95,7 +95,7 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String gistId) {
         if (comments.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Comment.getGistComments(gistId).toObservable())
+            manageDisposable(RxHelper.getObservable(Comment.getGistComments(gistId).toObservable())
                     .subscribe(localComments -> sendToView(view -> view.onNotifyAdapter(localComments, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -28,7 +28,7 @@ public class MainPresenter extends BasePresenter<MainMvp.View> implements MainMv
 
     MainPresenter() {
         setEnterprise(PrefGetter.isEnterprise());
-        manageDisposable(RxHelper.getObserver(RestProvider.getUserService(isEnterprise()).getUser())
+        manageDisposable(RxHelper.getObservable(RestProvider.getUserService(isEnterprise()).getUser())
                 .flatMap(login -> {
                     Login current = Login.getUser();
                     current.setLogin(login.getLogin());

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -75,7 +75,7 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (gistsModels.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Gist.getMyGists(login).toObservable()).subscribe(gistsModels1 ->
+            manageDisposable(RxHelper.getObservable(Gist.getMyGists(login).toObservable()).subscribe(gistsModels1 ->
                     sendToView(view -> view.onNotifyAdapter(gistsModels1, 1))));
         } else {
             sendToView(ProfileGistsMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposMvp.java
Patch:
@@ -16,7 +16,7 @@
  * Created by Kosh on 03 Dec 2016, 3:45 PM
  */
 
-interface OrgReposMvp {
+public interface OrgReposMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<Repo> items, int page);

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposPresenter.java
Patch:
@@ -23,7 +23,7 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
     private int page;
     private int previousTotal;
     private int lastPage = Integer.MAX_VALUE;
-    private FilterOptionsModel filterOptions = new FilterOptionsModel();
+    @com.evernote.android.state.State FilterOptionsModel filterOptions = new FilterOptionsModel();
 
     @Override public int getCurrentPage() {
         return page;
@@ -80,7 +80,7 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObservable(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> view.onNotifyAdapter(repoModels, 1))));
         } else {
             sendToView(OrgReposMvp.View::hideProgress);
@@ -101,7 +101,7 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
 
     @Override public void onItemLongClick(int position, View v, Repo item) {}
 
-    FilterOptionsModel getFilterOptions() {
+    @NonNull FilterOptionsModel getFilterOptions() {
         return filterOptions;
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -91,7 +91,7 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObservable(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> view.onNotifyAdapter(repoModels, 1))));
         } else {
             sendToView(ProfileReposMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -95,7 +95,7 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Repo.getStarred(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObservable(Repo.getStarred(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> {
                         starredCount = -1;
                         view.onUpdateCount(repoModels != null ? repoModels.size() : 0);

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -135,7 +135,7 @@ private void callApi(int navTyp) {
         if (getRepo() != null) {
             String login = login();
             String name = repoId();
-            manageDisposable(RxHelper.getObserver(RestProvider.getRepoService(isEnterprise()).isWatchingRepo(login, name))
+            manageDisposable(RxHelper.getObservable(RestProvider.getRepoService(isEnterprise()).isWatchingRepo(login, name))
                     .doOnSubscribe(disposable -> sendToView(view -> view.onEnableDisableWatch(false)))
                     .doOnNext(subscriptionModel -> sendToView(view -> view.onRepoWatched(isWatched = subscriptionModel.isSubscribed())))
                     .subscribe(o -> {/**/}, throwable -> {
@@ -149,7 +149,7 @@ private void callApi(int navTyp) {
         if (getRepo() != null) {
             String login = login();
             String name = repoId();
-            manageDisposable(RxHelper.getObserver(RestProvider.getRepoService(isEnterprise()).checkStarring(login, name))
+            manageDisposable(RxHelper.getObservable(RestProvider.getRepoService(isEnterprise()).checkStarring(login, name))
                     .doOnSubscribe(disposable -> sendToView(view -> view.onEnableDisableStar(false)))
                     .doOnNext(response -> sendToView(view -> view.onRepoStarred(isStarred = response.code() == 204)))
                     .subscribe(booleanResponse -> {/**/}, throwable -> {
@@ -161,7 +161,7 @@ private void callApi(int navTyp) {
 
     @Override public void onWorkOffline() {
         if (!InputHelper.isEmpty(login()) && !InputHelper.isEmpty(repoId())) {
-            manageDisposable(RxHelper.getObserver(Repo.getRepo(repoId, login).toObservable())
+            manageDisposable(RxHelper.getObservable(Repo.getRepo(repoId, login).toObservable())
                     .subscribe(repoModel -> {
                         repo = repoModel;
                         if (repo != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -93,7 +93,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
 
     @Override public void onWorkOffline() {
         if (commits.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Commit.getCommits(repoId, login).toObservable())
+            manageDisposable(RxHelper.getObservable(Commit.getCommits(repoId, login).toObservable())
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);
@@ -119,7 +119,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
     @Override public void onItemLongClick(int position, View v, Commit item) {}
 
     private void getCommitCount(@NonNull String branch) {
-        manageDisposable(RxHelper.safeObservable(RxHelper.getObserver(RestProvider.getRepoService(isEnterprise())
+        manageDisposable(RxHelper.safeObservable(RxHelper.getObservable(RestProvider.getRepoService(isEnterprise())
                 .getCommitCounts(login, repoId, branch)))
                 .subscribe(response -> {
                     if (response != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerPresenter.java
Patch:
@@ -81,7 +81,7 @@ class CommitPagerPresenter extends BasePresenter<CommitPagerMvp.View> implements
     }
 
     @Override public void onWorkOffline(@NonNull String sha, @NonNull String repoId, @NonNull String login) {
-        manageDisposable(RxHelper.getObserver(Commit.getCommit(sha, repoId, login))
+        manageDisposable(RxHelper.getObservable(Commit.getCommit(sha, repoId, login))
                 .subscribe(commit -> {
                     commitModel = commit;
                     sendToView(CommitPagerMvp.View::onSetup);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -102,7 +102,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
 
     @Override public void onWorkOffline() {
         if (comments.isEmpty()) {
-            manageDisposable(RxHelper.getObserver(Comment.getCommitComments(repoId(), login(), sha).toObservable())
+            manageDisposable(RxHelper.getObservable(Comment.getCommitComments(repoId(), login(), sha).toObservable())
                     .flatMap(comments -> Observable.just(TimelineModel.construct(comments)))
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models, 1))));
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -50,7 +50,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
 
     @Override public void onWorkOffline() {
         if ((repoId == null || login == null) || !files.isEmpty()) return;
-        manageDisposable(RxHelper.getObserver(RepoFile.getFiles(login, repoId).toObservable())
+        manageDisposable(RxHelper.getObservable(RepoFile.getFiles(login, repoId).toObservable())
                 .flatMap(response -> {
                     if (response != null) {
                         return Observable.fromIterable(response)

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -78,7 +78,7 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
 
     @Override public void onWorkOffline() {
         if (downloadedStream == null) {
-            manageDisposable(RxHelper.getObserver(ViewerFile.get(url))
+            manageDisposable(RxHelper.getObservable(ViewerFile.get(url))
                     .subscribe(fileModel -> {
                         if (fileModel != null) {
                             isImage = MarkDownProvider.isImage(fileModel.getFullUrl());

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -90,7 +90,7 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageDisposable(RxHelper.getObserver(RestProvider.getIssueService(isEnterprise())
+        manageDisposable(RxHelper.getObservable(RestProvider.getIssueService(isEnterprise())
                 .getIssuesWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, false), 1))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -89,7 +89,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageDisposable(RxHelper.getObserver(RestProvider.getPullRequestService(isEnterprise())
+        manageDisposable(RxHelper.getObservable(RestProvider.getPullRequestService(isEnterprise())
                 .getPullsWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, true), 0))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));

File: app/src/main/java/com/fastaccess/provider/emoji/EmojiManager.java
Patch:
@@ -44,7 +44,6 @@ public static void load() {
                         EMOJIS_BY_ALIAS.put(alias, emoji);
                     }
                 }
-
                 EMOJI_TRIE = new EmojiTrie(emojis);
                 stream.close();
             } catch (IOException e) {

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -65,7 +65,6 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
     @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (savedInstanceState == null) {
-            startActivity(new Intent(this, CheckPurchaseActivity.class));
             if (getIntent() != null && getIntent().getBooleanExtra(SlackBottomSheetDialog.TAG, false)) {
                 new SlackBottomSheetDialog().show(getSupportFragmentManager(), SlackBottomSheetDialog.TAG);
             }

File: app/src/main/java/com/fastaccess/data/dao/CommitLinesModel.java
Patch:
@@ -49,7 +49,6 @@
                     boolean addLeft = false;
                     boolean addRight = false;
                     int color = TRANSPARENT;
-                    position++;
                     if (token.startsWith("@@")) {
                         color = PATCH;
                         Matcher matcher = HUNK_TITLE.matcher(token.trim());
@@ -60,16 +59,19 @@
                             } catch (NumberFormatException e) {e.printStackTrace();}
                         }
                     } else if (firstChar == '+') {
+                        position++;
                         color = ADDITION;
                         ++rightLineNo;
                         addRight = true;
                         addLeft = false;
                     } else if (firstChar == '-') {
+                        position++;
                         color = DELETION;
                         ++leftLineNo;
                         addRight = false;
                         addLeft = true;
                     } else {
+                        position++;
                         addLeft = true;
                         addRight = true;
                         ++rightLineNo;

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractLogin.java
Patch:
@@ -5,7 +5,6 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.App;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.RxHelper;
 
@@ -114,7 +113,8 @@ public static void logout() {
     public static boolean hasNormalLogin() {
         return App.getInstance().getDataStore()
                 .count(Login.class)
-                .where(Login.IS_ENTERPRISE.eq(false))
+                .where(Login.IS_ENTERPRISE.eq(false)
+                        .or(Login.IS_ENTERPRISE.isNull()))
                 .get()
                 .value() > 0;
     }
@@ -152,7 +152,6 @@ public static Observable<Boolean> onMultipleLogin(@NonNull Login userModel, bool
                     PrefGetter.setTokenEnterprise(userModel.token);
                     PrefGetter.setEnterpriseOtpCode(userModel.otpCode);
                     PrefGetter.setEnterpriseUrl(userModel.enterpriseUrl);
-                    Logger.e(userModel.enterpriseUrl, PrefGetter.getEnterpriseUrl());
                 } else {
                     PrefGetter.resetEnterprise();
                     PrefGetter.setToken(userModel.token);

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginActivity.java
Patch:
@@ -175,6 +175,7 @@ public static void start(@NonNull Activity activity, boolean isBasicAuth, boolea
         if (savedInstanceState == null) {
             if (getIntent() != null && getIntent().getExtras() != null) {
                 isBasicAuth = getIntent().getExtras().getBoolean(BundleConstant.YES_NO_EXTRA);
+                password.setHint(isBasicAuth ? getString(R.string.password) : getString(R.string.access_token));
                 if (getIntent().getExtras().getBoolean(BundleConstant.EXTRA_TWO)) {
                     onOpenBrowser();
                 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -71,8 +71,9 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
             sendToView(ProfileReposMvp.View::hideProgress);
             return;
         }
-        filterOptions.setIsPersonalProfile(TextUtils.equals(currentLoggedIn, username));
-        makeRestCall(TextUtils.equals(currentLoggedIn, username)
+        boolean isProfile = TextUtils.equals(currentLoggedIn, username);
+        filterOptions.setIsPersonalProfile(isProfile);
+        makeRestCall(isProfile
                      ? RestProvider.getUserService(isEnterprise()).getRepos(filterOptions.getQueryMap(), page)
                      : RestProvider.getUserService(isEnterprise()).getRepos(parameter, filterOptions.getQueryMap(), page),
                 repoModelPageable -> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -115,7 +115,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
 
     @Override public void onToggle(long position, boolean isCollapsed) {
         if (adapter.getItem((int) position).getCommitFileModel().getPatch() == null) {
-            ActivityHelper.openChooser(getContext(), adapter.getItem((int) position).getCommitFileModel().getBlobUrl());
+            ActivityHelper.startCustomTab(getActivity(), adapter.getItem((int) position).getCommitFileModel().getBlobUrl());
         }
         toggleMap.put(position, isCollapsed);
     }

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -102,7 +102,7 @@ public static boolean isPinned(@NonNull String repoFullName) {
         return App.getInstance().getDataStore().select(PinnedRepos.class)
                 .where(LOGIN.eq(Login.getUser().getLogin()))
                 .orderBy(ENTRY_COUNT.desc(), ID.desc())
-                .limit(10)
+                .limit(5)
                 .get()
                 .observable()
                 .toList()

File: app/src/main/java/com/fastaccess/ui/modules/profile/ProfilePagerFragment.java
Patch:
@@ -64,4 +64,6 @@ public static ProfilePagerFragment newInstance(@NonNull String login) {
     @Override public void onNavigateToFollowing() {
         pager.setCurrentItem(5);
     }
+
+    @Override public void onCheckType(boolean isOrg) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/ProfilePagerMvp.java
Patch:
@@ -12,6 +12,9 @@ interface View extends BaseMvp.FAView {
         void onNavigateToFollowers();
 
         void onNavigateToFollowing();
+
+        void onCheckType(boolean isOrg);
+
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -151,6 +151,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
     @SuppressLint("ClickableViewAccessibility") @Override public void onInitViews(@Nullable User userModel) {
         progress.setVisibility(GONE);
         if (userModel == null) return;
+        if (profileCallback != null) profileCallback.onCheckType(userModel.isOrganizationType());
         if (getView() != null) {
             if (this.userModel == null) {
                 TransitionManager.beginDelayedTransition((ViewGroup) getView(),

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragment.java
Patch:
@@ -70,7 +70,8 @@ public static CommitCommentsFragment newInstance(@NonNull String login, @NonNull
         recycler.setItemViewCacheSize(30);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
-        adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true, this);
+        adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true,
+                this, getArguments().getString(BundleConstant.EXTRA), null);
         adapter.setListener(getPresenter());
         getLoadMore().initialize(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -79,7 +79,7 @@ public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements Feed
         makeRestCall(observable, response -> {
             lastPage = response.getLast();
             if (getCurrentPage() == 1) {
-                manageDisposable(Event.save(response.getItems()));
+                manageDisposable(Event.save(response.getItems(), user));
             }
             sendToView(view -> view.onNotifyAdapter(response.getItems(), page));
         });
@@ -120,7 +120,7 @@ public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements Feed
 
     @Override public void onWorkOffline() {
         if (eventsModels.isEmpty() && InputHelper.isEmpty(user)) {
-            manageDisposable(RxHelper.getObserver(Event.getEvents().toObservable())
+            manageDisposable(RxHelper.getObserver(Event.getEvents(Login.getUser().getLogin()).toObservable())
                     .subscribe(modelList -> {
                         if (modelList != null) {
                             sendToView(view -> view.onNotifyAdapter(modelList, 1));

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -30,7 +30,7 @@ interface View extends BaseMvp.FAView {
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-        @NonNull Uri getAuthorizationUrl(@Nullable String endpoint);
+        @NonNull Uri getAuthorizationUrl();
 
         void onHandleAuthIntent(@Nullable Intent intent);
 

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/MessageDialogView.java
Patch:
@@ -79,11 +79,11 @@ public interface MessageDialogViewActionCallback {
                 prettifyWebView.setVisibility(View.VISIBLE);
                 prettifyWebView.setGithubContent(msg, null, false, false);
                 prettifyWebView.setNestedScrollingEnabled(false);
-                return;
             }
+        } else {
+            message.setText(msg);
         }
         if (bundle != null) initButton(bundle);
-        message.setText(msg);
     }
 
     private void initButton(@NonNull Bundle bundle) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -423,7 +423,7 @@ private void addPrReview(@NonNull View view) {
         requestModel.setCommitId(pullRequest.getHead().getSha());
         boolean isAuthor = author != null && Login.getUser().getLogin().equalsIgnoreCase(author.getLogin());
         ReviewChangesActivity.Companion.startForResult(this, view, requestModel, getPresenter().getRepoId(),
-                getPresenter().getLogin(), pullRequest.getNumber(), isAuthor);
+                getPresenter().getLogin(), pullRequest.getNumber(), isAuthor, isEnterprise());
     }
 
     private void initTabs(@NonNull PullRequest pullRequest) {

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/FilterIssuesActivity.java
Patch:
@@ -310,7 +310,8 @@ private void setupPopupWindow(@NonNull ViewHolder viewHolder) {
 
     private void onSearch() {
         if (!InputHelper.isEmpty(searchEditText)) {
-            getFilterFragment().onSearch(getRepoName() + InputHelper.toString(searchEditText), open.isSelected(), isIssue);
+            getFilterFragment().onSearch(getRepoName() + InputHelper.toString(searchEditText),
+                    open.isSelected(), isIssue, isEnterprise());
             searchEditText.setSelection(searchEditText.getEditableText().length());
         } else {
             getFilterFragment().onClear();

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -72,7 +72,8 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
         adapter.notifyDataSetChanged();
     }
 
-    @Override public void onSearch(@NonNull String query, boolean isOpen, boolean isIssue) {
+    @Override public void onSearch(@NonNull String query, boolean isOpen, boolean isIssue, boolean isEnterprise) {
+        getPresenter().setEnterprise(isEnterprise);
         this.query = query;
         this.issueState = isOpen ? IssueState.open : IssueState.closed;
         this.isIssue = isIssue;

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssuesMvp.java
Patch:
@@ -22,7 +22,7 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onClear();
 
-        void onSearch(@NonNull String query, boolean isOpen, boolean isIssue);
+        void onSearch(@NonNull String query, boolean isOpen, boolean isIssue, boolean isEnterprise);
 
         void onNotifyAdapter(@Nullable List<Issue> items, int page);
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistActivity.java
Patch:
@@ -15,6 +15,7 @@
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.ui.base.BaseActivity;
@@ -82,7 +83,7 @@ public class CreateGistActivity extends BaseActivity<CreateGistMvp.View, CreateG
 
     @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-
+        getPresenter().setEnterprise(PrefGetter.isEnterprise());
         setTaskName(getString(R.string.create_gist));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -169,7 +169,7 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
         String login = getPresenter().login();
         String repoId = getPresenter().repoId();
         if (!InputHelper.isEmpty(login) && !InputHelper.isEmpty(repoId)) {
-            CreateIssueActivity.startForResult(this, login, repoId);
+            CreateIssueActivity.startForResult(this, login, repoId, isEnterprise());
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -197,7 +197,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
             getPresenter().onLoadLabels();
             return true;
         } else if (item.getItemId() == R.id.edit) {
-            CreateIssueActivity.startForResult(this, getPresenter().getLogin(), getPresenter().getRepoId(), getPresenter().getIssue());
+            CreateIssueActivity.startForResult(this, getPresenter().getLogin(), getPresenter().getRepoId(),
+                    getPresenter().getIssue(), isEnterprise());
             return true;
         } else if (item.getItemId() == R.id.milestone) {
             MilestoneDialogFragment.newInstance(getPresenter().getLogin(), getPresenter().getRepoId())

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -96,7 +96,7 @@
                             Activity activity = ActivityHelper.getActivity(v.getContext());
                             if (activity == null) return false;
                             CreateIssueActivity.startForResult(activity,
-                                    item.getIssue().getLogin(), item.getIssue().getRepoId(), item.getIssue());
+                                    item.getIssue().getLogin(), item.getIssue().getRepoId(), item.getIssue(), isEnterprise());
                         } else if (item1.getItemId() == R.id.share) {
                             ActivityHelper.shareUrl(v.getContext(), item.getIssue().getHtmlUrl());
                         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -207,7 +207,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
             getPresenter().onLoadLabels();
             return true;
         } else if (item.getItemId() == R.id.edit) {
-            CreateIssueActivity.startForResult(this, getPresenter().getLogin(), getPresenter().getRepoId(), pullRequest);
+            CreateIssueActivity.startForResult(this, getPresenter().getLogin(), getPresenter().getRepoId(), pullRequest, isEnterprise());
             return true;
         } else if (item.getItemId() == R.id.milestone) {
             MilestoneDialogFragment.newInstance(getPresenter().getLogin(), getPresenter().getRepoId())

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -94,7 +94,8 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                             Activity activity = ActivityHelper.getActivity(v.getContext());
                             if (activity == null) return false;
                             CreateIssueActivity.startForResult(activity,
-                                    item.getPullRequest().getLogin(), item.getPullRequest().getRepoId(), item.getPullRequest());
+                                    item.getPullRequest().getLogin(), item.getPullRequest().getRepoId(),
+                                    item.getPullRequest(), isEnterprise());
                         } else if (item1.getItemId() == R.id.share) {
                             ActivityHelper.shareUrl(v.getContext(), item.getPullRequest().getHtmlUrl());
                         }

File: app/src/main/java/com/fastaccess/data/dao/CommentRequestModel.java
Patch:
@@ -17,6 +17,7 @@
     @SerializedName("in_reply_to") private Long inReplyTo;
     private String path;
     private int position;
+    private int line;
 
     public CommentRequestModel() {}
 
@@ -40,13 +41,15 @@ public CommentRequestModel() {}
         dest.writeValue(this.inReplyTo);
         dest.writeString(this.path);
         dest.writeInt(this.position);
+        dest.writeInt(this.line);
     }
 
     protected CommentRequestModel(Parcel in) {
         this.body = in.readString();
         this.inReplyTo = (Long) in.readValue(Long.class.getClassLoader());
         this.path = in.readString();
         this.position = in.readInt();
+        this.line = in.readInt();
     }
 
     public static final Creator<CommentRequestModel> CREATOR = new Creator<CommentRequestModel>() {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -115,7 +115,8 @@ public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGrou
         if (!InputHelper.isEmpty(commentsModel.getBodyHtml())) {
             String body = commentsModel.getBodyHtml();
             if (!InputHelper.isEmpty(commentsModel.getPath()) && commentsModel.getPosition() > 0) {
-                body = "<small color='grey'><i>Commented at <b>line(" + commentsModel.getPosition() + ")</b> in "
+                body = "<small color='grey'><i>Commented at <b>line(" +
+                        (commentsModel.getLine() > 0 ? commentsModel.getLine() : commentsModel.getPosition()) + ")</b> in "
                         + commentsModel.getPath() + "</i></small><br/>" + body;
             }
             HtmlHelper.htmlIntoTextView(comment, body);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesPresenter.java
Patch:
@@ -101,6 +101,7 @@ class CommitFilesPresenter extends BasePresenter<CommitFilesMvp.View> implements
             commentRequestModel.setBody(comment);
             commentRequestModel.setPath(path);
             commentRequestModel.setPosition(item.getPosition());
+            commentRequestModel.setLine(item.getRightLineNo() > 0 ? item.getRightLineNo() : item.getLeftLineNo());
             NameParser nameParser = new NameParser(blob);
             makeRestCall(RestProvider.getRepoService(isEnterprise()).postCommitComment(nameParser.getUsername(),
                     nameParser.getName(), sha, commentRequestModel), newComment -> sendToView(view -> view.onCommentAdded(newComment)));

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesPresenter.java
Patch:
@@ -100,7 +100,7 @@ class CommitFilesPresenter extends BasePresenter<CommitFilesMvp.View> implements
             CommentRequestModel commentRequestModel = new CommentRequestModel();
             commentRequestModel.setBody(comment);
             commentRequestModel.setPath(path);
-            commentRequestModel.setPosition(item.getRightLineNo() > 0 ? item.getRightLineNo() : item.getLeftLineNo());
+            commentRequestModel.setPosition(item.getPosition());
             NameParser nameParser = new NameParser(blob);
             makeRestCall(RestProvider.getRepoService(isEnterprise()).postCommitComment(nameParser.getUsername(),
                     nameParser.getName(), sha, commentRequestModel), newComment -> sendToView(view -> view.onCommentAdded(newComment)));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -17,6 +17,7 @@
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.CommitFilesAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -176,7 +177,8 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
             CommentRequestModel commentRequestModel = new CommentRequestModel();
             commentRequestModel.setBody(comment);
             commentRequestModel.setPath(path);
-            commentRequestModel.setPosition(item.getRightLineNo() > 0 ? item.getRightLineNo() : item.getLeftLineNo());
+            commentRequestModel.setPosition(item.getPosition());
+            Logger.e(commentRequestModel.getPosition());
             if (viewCallback != null) viewCallback.onAddComment(commentRequestModel);
         }
     }

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -76,7 +76,7 @@ public static boolean isNightMode(@NonNull Resources resources) {
                 .append(String.valueOf(Build.VERSION.SDK_INT))
                 .append(")**")
                 .append("  \n")
-                .append("**Device information:**")
+                .append("**Device Information:**")
                 .append("  \n")
                 .append("- ")
                 .append(Build.MANUFACTURER)

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -133,12 +133,12 @@ private static void updateResourcesLegacy(Context context, String language) {
     public static String getDeviceName() {
         String brand = Build.BRAND;
         String model = Build.MODEL;
-        if (model.startsWith(manufacturer)) {
+        if (model.startsWith(brand)) {
             return InputHelper.capitalizeFirstLetter(model);
         } else if (isEmulator()){
             return "Android Emulator";
         }
-        return InputHelper.capitalizeFirstLetter(manufacturer) + " " + model;
+        return InputHelper.capitalizeFirstLetter(brand) + " " + model;
     }
 
     private static boolean isEmulator() {

File: app/src/main/java/com/fastaccess/data/dao/GroupedNotificationModel.java
Patch:
@@ -26,8 +26,8 @@
 
 @Getter @Setter public class GroupedNotificationModel {
     public static final int HEADER = 1;
-
     public static final int ROW = 2;
+
     private int type;
     private Repo repo;
     private Notification notification;

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -274,7 +274,7 @@ private android.app.Notification getSummaryGroupNotification(@NonNull Notificati
     }
 
     private NotificationCompat.Builder getNotification(@NonNull String title, @NonNull String message) {
-        return new NotificationCompat.Builder(this)
+        return new NotificationCompat.Builder(this, title)
                 .setContentTitle(title)
                 .setContentText(message)
                 .setAutoCancel(true);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -51,12 +51,12 @@ public static AssigneesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nul
     }
 
     @Override public void bind(@NonNull User user) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(), LinkParserHelper.isEnterprise(user.getUrl()));
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(), LinkParserHelper.isEnterprise(user.getHtmlUrl()));
         title.setText(user.getLogin());
         date.setVisibility(View.GONE);
         if (onSelectAssignee != null) {
             itemView.setBackgroundColor(onSelectAssignee.isAssigneeSelected(getAdapterPosition())
-                                        ? lightGray : ViewHelper.getWindowBackground(itemView.getContext()));
+                    ? lightGray : ViewHelper.getWindowBackground(itemView.getContext()));
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -55,7 +55,7 @@ public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Null
     @Override public void bind(@NonNull Comment commentsModel) {
         if (commentsModel.getUser() != null) {
             avatar.setUrl(commentsModel.getUser().getAvatarUrl(), commentsModel.getUser().getLogin(),
-                    commentsModel.getUser().isOrganizationType(), LinkParserHelper.isEnterprise(commentsModel.getUser().getUrl()));
+                    commentsModel.getUser().isOrganizationType(), LinkParserHelper.isEnterprise(commentsModel.getUser().getHtmlUrl()));
         } else {
             avatar.setUrl(null, null, false, false);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitsViewHolder.java
Patch:
@@ -49,7 +49,7 @@ public static CommitsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
                 .append(" ")
                 .append(ParseDateFormat.getTimeAgo(date)));
         avatarLayout.setUrl(avatar, login, false, LinkParserHelper
-                .isEnterprise(commit.getAuthor() != null ? commit.getAuthor().getUrl() : commit.getGitCommit().getAuthor().getUrl()));
+                .isEnterprise(commit.getAuthor() != null ? commit.getAuthor().getUrl() : commit.getGitCommit().getAuthor().getHtmlUrl()));
         avatarLayout.setVisibility(View.VISIBLE);
         if (commit.getGitCommit() != null && commit.getGitCommit().getCommentCount() > 0) {
             commentsNo.setText(String.valueOf(commit.getGitCommit() != null ? commit.getGitCommit().getCommentCount() : 0));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -456,7 +456,7 @@ private void appendAvatar(@NonNull Event eventsModel) {
             if (eventsModel.getActor() != null) {
                 avatar.setUrl(eventsModel.getActor().getAvatarUrl(), eventsModel.getActor().getLogin(),
                         eventsModel.getActor().isOrganizationType(),
-                        LinkParserHelper.isEnterprise(eventsModel.getActor().getUrl()));
+                        LinkParserHelper.isEnterprise(eventsModel.getActor().getHtmlUrl()));
             } else {
                 avatar.setUrl(null, null, false, false);
             }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/GistsViewHolder.java
Patch:
@@ -48,7 +48,7 @@ public static GistsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullabl
                 String url = item.getOwner() != null ? item.getOwner().getAvatarUrl() : item.getUser() != null ? item.getUser().getAvatarUrl() : null;
                 String login = item.getOwner() != null ? item.getOwner().getLogin() : item.getUser() != null ? item.getUser().getLogin() : null;
                 avatar.setUrl(url, login, false, LinkParserHelper.isEnterprise(
-                        item.getOwner() != null ? item.getOwner().getUrl() : item.getUser() != null ? item.getUser().getUrl() : null));
+                        item.getOwner() != null ? item.getOwner().getHtmlUrl() : item.getUser() != null ? item.getUser().getHtmlUrl() : null));
             }
         }
         title.setText(item.getDisplayTitle(isFromProfile));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -172,7 +172,7 @@ private void bind(@NonNull PullRequest pullRequest) {
 
     private void setup(User user, String description, ReactionsModel reactionsModel) {
         avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(),
-                LinkParserHelper.isEnterprise(user.getUrl()));
+                LinkParserHelper.isEnterprise(user.getHtmlUrl()));
         name.setText(user.getLogin());
         if (reactionsModel != null) {
             appendEmojies(reactionsModel);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -118,7 +118,7 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
         }
         if (withAvatar && avatarLayout != null) {
             avatarLayout.setUrl(issueModel.getUser().getAvatarUrl(), issueModel.getUser().getLogin(), false,
-                    LinkParserHelper.isEnterprise(issueModel.getUser().getUrl()));
+                    LinkParserHelper.isEnterprise(issueModel.getUser().getHtmlUrl()));
             avatarLayout.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -72,7 +72,7 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
         if (avatarLayout != null) {
             avatarLayout.setVisibility(View.VISIBLE);
-            avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getUrl()));
+            avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getHtmlUrl()));
         }
         NumberFormat numberFormat = NumberFormat.getNumberInstance();
         stars.setText(numberFormat.format(repo.getStargazersCount()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ProfileOrgsViewHolder.java
Patch:
@@ -36,6 +36,6 @@ public static ProfileOrgsViewHolder newInstance(@NonNull ViewGroup parent) {
 
     @Override public void bind(@NonNull User user) {
         name.setText(user.getLogin());
-        avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin(), true, LinkParserHelper.isEnterprise(user.getUrl()));
+        avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin(), true, LinkParserHelper.isEnterprise(user.getHtmlUrl()));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestViewHolder.java
Patch:
@@ -55,7 +55,7 @@ public static PullRequestViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         }
         if (withAvatar && avatarLayout != null) {
             avatarLayout.setUrl(pullRequest.getUser().getAvatarUrl(), pullRequest.getUser().getLogin(),
-                    false, LinkParserHelper.isEnterprise(pullRequest.getUrl()));
+                    false, LinkParserHelper.isEnterprise(pullRequest.getHtmlUrl()));
             avatarLayout.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullStatusViewHolder.java
Patch:
@@ -78,8 +78,7 @@ public static PullStatusViewHolder newInstance(@NonNull ViewGroup parent) {
                         builder.append(ContextCompat.getDrawable(statuses.getContext(), statusesModel.getState().getDrawableRes()));
                         if (!InputHelper.isEmpty(statusesModel.getTargetUrl())) {
                             builder.append(" ")
-                                    .url(statusesModel.getDescription(), v -> SchemeParser.launchUri(v.getContext(),
-                                            Uri.parse(statusesModel.getTargetUrl())))
+                                    .url(statusesModel.getDescription(), v -> SchemeParser.launchUri(v.getContext(), statusesModel.getTargetUrl()))
                                     .append("\n");
                         } else {
                             builder.append("\n");

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -81,7 +81,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
             boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
             if (avatarLayout != null) {
                 avatarLayout.setVisibility(View.VISIBLE);
-                avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getUrl()));
+                avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getHtmlUrl()));
             }
         }
         long repoSize = repo.getSize() > 0 ? (repo.getSize() * 1000) : repo.getSize();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewCommentsViewHolder.java
Patch:
@@ -100,7 +100,7 @@ public static ReviewCommentsViewHolder newInstance(ViewGroup viewGroup, BaseRecy
 
     @Override public void bind(@NonNull ReviewCommentModel commentModel) {
         avatarView.setUrl(commentModel.getUser().getAvatarUrl(), commentModel.getUser().getLogin(), commentModel.getUser()
-                .isOrganizationType(), LinkParserHelper.isEnterprise(commentModel.getUrl()));
+                .isOrganizationType(), LinkParserHelper.isEnterprise(commentModel.getHtmlUrl()));
         name.setText(commentModel.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(commentModel.getCreatedAt()));
         if (!InputHelper.isEmpty(commentModel.getBodyHtml())) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewsViewHolder.java
Patch:
@@ -47,7 +47,7 @@ public static ReviewsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
         if (review != null) {
             if (review.getUser() != null) {
                 avatarLayout.setUrl(review.getUser().getAvatarUrl(), review.getUser().getLogin(), false,
-                        LinkParserHelper.isEnterprise(review.getUser().getUrl()));
+                        LinkParserHelper.isEnterprise(review.getUser().getHtmlUrl()));
             } else {
                 avatarLayout.setUrl(null, null, false, false);
             }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -108,7 +108,7 @@ public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGrou
         Comment commentsModel = timelineModel.getComment();
         if (commentsModel.getUser() != null) {
             avatar.setUrl(commentsModel.getUser().getAvatarUrl(), commentsModel.getUser().getLogin(),
-                    false, LinkParserHelper.isEnterprise(commentsModel.getUrl()));
+                    false, LinkParserHelper.isEnterprise(commentsModel.getHtmlUrl()));
         } else {
             avatar.setUrl(null, null, false, false);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/UsersViewHolder.java
Patch:
@@ -47,7 +47,7 @@ public static UsersViewHolder newInstance(@NonNull ViewGroup parent, @Nullable B
 
     public void bind(@NonNull User user, boolean isContributor) {
         avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(),
-                LinkParserHelper.isEnterprise(user.getUrl()));
+                LinkParserHelper.isEnterprise(user.getHtmlUrl()));
         title.setText(user.getLogin());
         date.setVisibility(!isContributor ? View.GONE : View.VISIBLE);
         if (isContributor) {

File: app/src/main/java/com/fastaccess/ui/base/BaseDialogFragment.java
Patch:
@@ -158,7 +158,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
     @Override public void onScrollTop(int index) {}
 
     @Override public boolean isEnterprise() {
-        return callback.isEnterprise();
+        return callback != null && callback.isEnterprise();
     }
 }
 

File: app/src/main/java/com/fastaccess/ui/base/BaseFragment.java
Patch:
@@ -134,7 +134,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
     @Override public void onScrollTop(int index) {}
 
     @Override public boolean isEnterprise() {
-        return callback.isEnterprise();
+        return callback != null && callback.isEnterprise();
     }
 
     protected boolean isSafe() {

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.evernote.android.state.StateSaver;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.GitHubErrorResponse;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistActivity.java
Patch:
@@ -175,7 +175,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
         if (getPresenter().getGist() != null) {
             Intent intent = new Intent();
             Gist gistsModel = new Gist();
-            gistsModel.setUrl(getPresenter().getGist().getUrl());
+            gistsModel.setUrl(getPresenter().getGist().getHtmlUrl());
             intent.putExtras(Bundler.start().put(BundleConstant.ITEM, gistsModel).end());
             setResult(RESULT_OK, intent);
         }
@@ -207,7 +207,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
                      gistsModel.getUser() != null ? gistsModel.getUser().getAvatarUrl() : "";
         String login = gistsModel.getOwner() != null ? gistsModel.getOwner().getLogin() :
                        gistsModel.getUser() != null ? gistsModel.getUser().getLogin() : "";
-        avatarLayout.setUrl(url, login, false, LinkParserHelper.isEnterprise(gistsModel.getUrl()));
+        avatarLayout.setUrl(url, login, false, LinkParserHelper.isEnterprise(gistsModel.getHtmlUrl()));
         title.setText(gistsModel.getDisplayTitle(false, true));
         setTaskName(gistsModel.getDisplayTitle(false, true).toString());
         detailsIcon.setVisibility(InputHelper.isEmpty(gistsModel.getDescription()) || !ViewHelper.isEllipsed(title) ? View.GONE : View.VISIBLE);

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -32,7 +32,7 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         @NonNull Uri getAuthorizationUrl(@Nullable String endpoint);
 
-        void onHandleAuthIntent(@Nullable Intent intent, boolean extraLogin);
+        void onHandleAuthIntent(@Nullable Intent intent);
 
         void onTokenResponse(@Nullable AccessTokenModel response);
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsMvp.java
Patch:
@@ -32,6 +32,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener {
         void onReadNotification(@NonNull Notification notification);
 
         void onMarkAllByRepo(@NonNull Repo repo);
+
+        void onNotifyNotificationChanged(@NonNull GroupedNotificationModel notification);
     }
 
     interface Presenter extends BaseViewHolder.OnItemClickListener<GroupedNotificationModel> {

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationMvp.java
Patch:
@@ -28,6 +28,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener  {
         void onReadNotification(@NonNull Notification notification);
 
         void onClick(@NonNull String url);
+
+        void onNotifyNotificationChanged(@NonNull GroupedNotificationModel notification);
     }
 
     interface Presenter extends BaseViewHolder.OnItemClickListener<GroupedNotificationModel> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -173,7 +173,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
                 .append(" ")
                 .append(" ")
                 .append(ParseDateFormat.getTimeAgo(dateValue)));
-        avatarLayout.setUrl(avatar, login, false, LinkParserHelper.isEnterprise(commit.getUrl()));
+        avatarLayout.setUrl(avatar, login, false, LinkParserHelper.isEnterprise(commit.getHtmlUrl()));
         addition.setText(String.valueOf(commit.getStats() != null ? commit.getStats().getAdditions() : 0));
         deletion.setText(String.valueOf(commit.getStats() != null ? commit.getStats().getDeletions() : 0));
         changes.setText(String.valueOf(commit.getFiles() != null ? commit.getFiles().size() : 0));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -25,6 +25,7 @@
 import com.fastaccess.data.service.NotificationService;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
@@ -62,6 +63,7 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
     }
 
     @Override public void onActivityCreated(@Nullable Intent intent) {
+        Logger.e(isEnterprise());
         if (intent != null && intent.getExtras() != null) {
             issueModel = intent.getExtras().getParcelable(BundleConstant.ITEM);
             issueNumber = intent.getExtras().getInt(BundleConstant.ID);

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -102,7 +102,6 @@ public static Intent createIntent(@NonNull Context context, @NonNull String logi
             if (getIntent() != null && getIntent().getExtras() != null) {
                 login = getIntent().getExtras().getString(BundleConstant.EXTRA);
                 isOrg = getIntent().getExtras().getBoolean(BundleConstant.EXTRA_TYPE);
-                getPresenter().setEnterprise(getIntent().getExtras().getBoolean(BundleConstant.IS_ENTERPRISE));
                 if (!InputHelper.isEmpty(login) && isOrg) {
                     getPresenter().checkOrgMembership(login);
                 }

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -80,7 +80,7 @@ private void setupPreference() {
     public ReactiveEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 9);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 10);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -143,7 +143,7 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
         String login = commitModel.getLogin();
         String repoId = commitModel.getRepoId();
         String sha = commitModel.getSha();
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.commits), CommitFilesFragment.newInstance(commitModel.getSha(),
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.files), CommitFilesFragment.newInstance(commitModel.getSha(),
                 commitModel.getFiles())),
                 new FragmentPagerAdapterModel(context.getString(R.string.comments), CommitCommentsFragment.newInstance(login, repoId, sha)))
                 .collect(Collectors.toList());

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractLogin.java
Patch:
@@ -56,7 +56,7 @@
     @Nullable boolean isLoggedIn;
 
     public Observable<Login> update(Login login) {
-        login.setToken(PrefGetter.getToken());
+        login.setToken(PrefGetter.isEnterprise() ? PrefGetter.getEnterpriseToken() : PrefGetter.getToken());
         login.setIsLoggedIn(true);
         return RxHelper.safeObservable(App.getInstance().getDataStore().update(login).toObservable());
     }

File: app/src/main/java/com/fastaccess/provider/rest/LoginProvider.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.provider.rest.converters.GithubResponseConverter;
 import com.fastaccess.provider.rest.interceptors.AuthenticationInterceptor;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.google.gson.FieldNamingPolicy;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
@@ -44,7 +45,7 @@ private static OkHttpClient provideOkHttpClient(@Nullable String authToken, @Nul
 
     private static Retrofit provideRetrofit(@Nullable String authToken, @Nullable String otp, @Nullable String enterpriseUrl) {
         return new Retrofit.Builder()
-                .baseUrl(InputHelper.isEmpty(enterpriseUrl) ? BuildConfig.REST_URL : RestProvider.getEndpoint(enterpriseUrl))
+                .baseUrl(InputHelper.isEmpty(enterpriseUrl) ? BuildConfig.REST_URL : LinkParserHelper.getEndpoint(enterpriseUrl))
                 .client(provideOkHttpClient(authToken, otp))
                 .addConverterFactory(new GithubResponseConverter(gson))
                 .addCallAdapterFactory(RxJava2CallAdapterFactory.create())

File: app/src/main/java/com/fastaccess/provider/rest/interceptors/AuthenticationInterceptor.java
Patch:
@@ -34,18 +34,17 @@ public AuthenticationInterceptor(boolean isScrapping) {
     @Override public Response intercept(@NonNull Chain chain) throws IOException {
         Request original = chain.request();
         Request.Builder builder = original.newBuilder();
-        boolean isEnterprise = PrefGetter.isEnterprise() && LinkParserHelper.isNotEnterprise(original.url() != null ? original.url().host() : null);
-        Logger.e(isEnterprise);
+        boolean isEnterprise = LinkParserHelper.isEnterprise(original.url().host());
         String authToken = InputHelper.isEmpty(token) ? isEnterprise ? PrefGetter.getEnterpriseToken() : PrefGetter.getToken() : token;
         String otpCode = InputHelper.isEmpty(otp) ? isEnterprise ? PrefGetter.getEnterpriseOtpCode() : PrefGetter.getOtpCode() : otp;
+        Logger.e(isEnterprise, authToken, otpCode);
         if (!InputHelper.isEmpty(authToken)) {
             builder.header("Authorization", authToken.startsWith("Basic") ? authToken : "token " + authToken);
         }
         if (!InputHelper.isEmpty(otpCode)) {
             builder.addHeader("X-GitHub-OTP", otpCode.trim());
         }
         if (!isScrapping) builder.addHeader("User-Agent", "FastHub");
-
         Request request = builder.build();
         return chain.proceed(request);
     }

File: app/src/main/java/com/fastaccess/provider/rest/interceptors/PaginationInterceptor.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.provider.rest.interceptors;
 
 import android.net.Uri;
+import android.support.annotation.NonNull;
 
 import com.fastaccess.helper.InputHelper;
 
@@ -12,7 +13,7 @@
 
 public class PaginationInterceptor implements Interceptor {
 
-    @Override public Response intercept(Chain chain) throws IOException {
+    @Override public Response intercept(@NonNull Chain chain) throws IOException {
         Response response = chain.proceed(chain.request());
         if (response.isSuccessful()) {
             if (response.peekBody(1).string().equals("[")) {

File: app/src/main/java/com/fastaccess/provider/tasks/git/GithubActionService.java
Patch:
@@ -112,7 +112,7 @@ public GithubActionService() {
     private void forkGist(@Nullable String id) {
         if (id != null) {
             String msg = getString(R.string.forking, getString(R.string.gist));
-            RestProvider.getGistService()
+            RestProvider.getGistService(false)//TODO
                     .forkGist(id)
                     .doOnSubscribe(disposable -> showNotification(msg))
                     .subscribeOn(Schedulers.io())
@@ -136,7 +136,7 @@ private void forkRepo(@Nullable String id, @Nullable String login) {
     private void starGist(@Nullable String id) {
         if (id != null) {
             String msg = getString(R.string.starring, getString(R.string.gist));
-            RestProvider.getGistService()
+            RestProvider.getGistService(false)//TODO
                     .starGist(id)
                     .doOnSubscribe(disposable -> showNotification(msg))
                     .subscribeOn(Schedulers.io())
@@ -160,7 +160,7 @@ private void starRepo(@Nullable String id, @Nullable String login) {
     private void unStarGist(@Nullable String id) {
         if (id != null) {
             String msg = getString(R.string.un_starring, getString(R.string.gist));
-            RestProvider.getGistService()
+            RestProvider.getGistService(false)//TODO
                     .unStarGist(id)
                     .doOnSubscribe(disposable -> showNotification(msg))
                     .subscribeOn(Schedulers.io())

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -65,7 +65,7 @@ public class NotificationSchedulerJobTask extends JobService {
             login = Login.getUser();
         } catch (Exception ignored) {}
         if (login != null) {
-            RestProvider.getNotificationService()
+            RestProvider.getNotificationService(PrefGetter.isEnterprise())
                     .getNotifications(ParseDateFormat.getLastWeekDate())
                     .subscribeOn(Schedulers.io())
                     .subscribe(item -> {
@@ -137,7 +137,7 @@ private void onNotifyUser(@NonNull List<Notification> notificationThreadModels,
                 .flatMap(notification -> {
                     Logger.e(notification.getSubject().getTitle());
                     if (notification.getSubject() != null && notification.getSubject().getLatestCommentUrl() != null) {
-                        return RestProvider.getNotificationService()
+                        return RestProvider.getNotificationService(PrefGetter.isEnterprise())
                                 .getComment(notification.getSubject().getLatestCommentUrl())
                                 .subscribeOn(Schedulers.io());
                     } else {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -106,7 +106,7 @@ public ReadNotificationService() {
     }
 
     private void unSubscribeFromThread(long id) {
-        RestProvider.getNotificationService()
+        RestProvider.getNotificationService(PrefGetter.isEnterprise())
                 .unSubscribe(id)
                 .doOnSubscribe(disposable -> notify(id, getNotification().build()))
                 .subscribeOn(Schedulers.io())
@@ -138,7 +138,7 @@ private void markSingleAsRead(long id) {
         com.fastaccess.data.dao.model.Notification.markAsRead(id)
                 .onErrorComplete()
                 .subscribe();
-        RestProvider.getNotificationService()
+        RestProvider.getNotificationService(PrefGetter.isEnterprise())
                 .markAsRead(String.valueOf(id))
                 .doOnSubscribe(disposable -> notify(id, getNotification().build()))
                 .subscribeOn(Schedulers.io())

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.helper.ViewHelper;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.adapter.AssigneesAdapter;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -50,7 +51,7 @@ public static AssigneesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nul
     }
 
     @Override public void bind(@NonNull User user) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType());
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(), LinkParserHelper.isEnterprise(user.getUrl()));
         title.setText(user.getLogin());
         date.setVisibility(View.GONE);
         if (onSelectAssignee != null) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -17,6 +17,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.provider.timeline.HtmlHelper;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
@@ -172,7 +173,8 @@ private void bind(@NonNull PullRequest pullRequest) {
     }
 
     private void setup(User user, String description, ReactionsModel reactionsModel) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType());
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(),
+                LinkParserHelper.isEnterprise(user.getUrl()));
         name.setText(user.getLogin());
         if (reactionsModel != null) {
             appendEmojies(reactionsModel);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -11,6 +11,7 @@
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.types.IssueState;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.SpannableBuilder;
@@ -116,7 +117,8 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
             issueState.setVisibility(View.GONE);
         }
         if (withAvatar && avatarLayout != null) {
-            avatarLayout.setUrl(issueModel.getUser().getAvatarUrl(), issueModel.getUser().getLogin());
+            avatarLayout.setUrl(issueModel.getUser().getAvatarUrl(), issueModel.getUser().getLogin(), false,
+                    LinkParserHelper.isEnterprise(issueModel.getUser().getUrl()));
             avatarLayout.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -12,6 +12,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.provider.colors.ColorsProvider;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.LabelSpan;
@@ -71,7 +72,7 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
         if (avatarLayout != null) {
             avatarLayout.setVisibility(View.VISIBLE);
-            avatarLayout.setUrl(avatar, login, isOrg);
+            avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getUrl()));
         }
         NumberFormat numberFormat = NumberFormat.getNumberInstance();
         stars.setText(numberFormat.format(repo.getStargazersCount()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ProfileOrgsViewHolder.java
Patch:
@@ -7,6 +7,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -37,6 +38,6 @@ public static ProfileOrgsViewHolder newInstance(@NonNull ViewGroup parent) {
     @Override public void bind(@NonNull User user) {
         Logger.e(user.getLogin());
         name.setText(user.getLogin());
-        avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin(), true);
+        avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin(), true, LinkParserHelper.isEnterprise(user.getUrl()));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestViewHolder.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.PullRequest;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
@@ -53,7 +54,8 @@ public static PullRequestViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
             commentsNo.setVisibility(View.GONE);
         }
         if (withAvatar && avatarLayout != null) {
-            avatarLayout.setUrl(pullRequest.getUser().getAvatarUrl(), pullRequest.getUser().getLogin());
+            avatarLayout.setUrl(pullRequest.getUser().getAvatarUrl(), pullRequest.getUser().getLogin(),
+                    false, LinkParserHelper.isEnterprise(pullRequest.getUrl()));
             avatarLayout.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -12,6 +12,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.provider.colors.ColorsProvider;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.LabelSpan;
@@ -80,7 +81,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
             boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
             if (avatarLayout != null) {
                 avatarLayout.setVisibility(View.VISIBLE);
-                avatarLayout.setUrl(avatar, login, isOrg);
+                avatarLayout.setUrl(avatar, login, isOrg, LinkParserHelper.isEnterprise(repo.getUrl()));
             }
         }
         long repoSize = repo.getSize() > 0 ? (repo.getSize() * 1000) : repo.getSize();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/UsersViewHolder.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
@@ -45,7 +46,8 @@ public static UsersViewHolder newInstance(@NonNull ViewGroup parent, @Nullable B
     @Override public void bind(@NonNull User user) {}
 
     public void bind(@NonNull User user, boolean isContributor) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType());
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType(),
+                LinkParserHelper.isEnterprise(user.getUrl()));
         title.setText(user.getLogin());
         date.setVisibility(!isContributor ? View.GONE : View.VISIBLE);
         if (isContributor) {

File: app/src/main/java/com/fastaccess/ui/base/mvp/BaseMvp.java
Patch:
@@ -41,6 +41,8 @@ interface FAView extends TiView, MessageDialogView.MessageDialogViewActionCallba
         void onThemeChanged();
 
         void onOpenSettings();
+
+        boolean isEnterprise();
     }
 
     interface FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -21,6 +21,7 @@
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
+import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.tasks.version.CheckVersionService;
 import com.fastaccess.provider.theme.ThemeEngine;
 import com.fastaccess.ui.modules.changelog.ChangelogBottomSheetDialog;
@@ -119,7 +120,7 @@ private void buildAuthor(Context context, MaterialAboutCard.Builder authorCardBu
                 .text("Kosh Sergani")
                 .subText("k0shk0sh")
                 .icon(ContextCompat.getDrawable(context, R.drawable.ic_profile))
-                .setOnClickAction(() -> UserPagerActivity.startActivity(context, "k0shk0sh"))
+                .setOnClickAction(() -> UserPagerActivity.startActivity(context, "k0shk0sh", false, PrefGetter.isEnterprise()))
                 .build())
                 .addItem(new MaterialAboutActionItem.Builder()
                         .text(R.string.fork_github)

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -78,6 +78,9 @@ public static FeedsFragment newInstance(boolean isEnterprise) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        if (isProfile()) {
+            recycler.addDivider();
+        }
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             getPresenter().onFragmentCreated(getArguments());

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -53,7 +53,7 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
             return;
         }
         setCurrentPage(page);
-        makeRestCall(RestProvider.getGistService().getPublicGists(RestProvider.PAGE_SIZE, page),
+        makeRestCall(RestProvider.getGistService(isEnterprise()).getPublicGists(RestProvider.PAGE_SIZE, page),
                 listResponse -> {
                     lastPage = listResponse.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistPresenter.java
Patch:
@@ -56,7 +56,7 @@ class CreateGistPresenter extends BasePresenter<CreateGistMvp.View> implements C
     }
 
     @Override public void onSubmit(@NonNull CreateGistModel model) {
-        makeRestCall(RestProvider.getGistService().createGist(model),
+        makeRestCall(RestProvider.getGistService(isEnterprise()).createGist(model),
                 gistsModel -> sendToView(view -> view.onSuccessSubmission(gistsModel)));
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistActivity.java
Patch:
@@ -23,6 +23,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.helper.ViewHelper;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.provider.tasks.git.GithubActionService;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
 import com.fastaccess.ui.base.BaseActivity;
@@ -206,7 +207,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
                      gistsModel.getUser() != null ? gistsModel.getUser().getAvatarUrl() : "";
         String login = gistsModel.getOwner() != null ? gistsModel.getOwner().getLogin() :
                        gistsModel.getUser() != null ? gistsModel.getUser().getLogin() : "";
-        avatarLayout.setUrl(url, login);
+        avatarLayout.setUrl(url, login, false, LinkParserHelper.isEnterprise(gistsModel.getUrl()));
         title.setText(gistsModel.getDisplayTitle(false, true));
         setTaskName(gistsModel.getDisplayTitle(false, true).toString());
         detailsIcon.setVisibility(InputHelper.isEmpty(gistsModel.getDescription()) || !ViewHelper.isEllipsed(title) ? View.GONE : View.VISIBLE);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistPresenter.java
Patch:
@@ -43,7 +43,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
             sendToView(GistMvp.View::onSetupDetails);
         } else if (gistId != null) {
             checkStarring(gistId);
-            makeRestCall(RestProvider.getGistService().getGist(gistId), gistsModel -> {
+            makeRestCall(RestProvider.getGistService(isEnterprise()).getGist(gistId), gistsModel -> {
                 this.gist = gistsModel;
                 sendToView(GistMvp.View::onSetupDetails);
             });
@@ -54,7 +54,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onDeleteGist() {
         if (getGist() == null) return;
-        manageDisposable(RxHelper.getObserver(RestProvider.getGistService().deleteGist(getGist().getGistId()))
+        manageDisposable(RxHelper.getObserver(RestProvider.getGistService(isEnterprise()).deleteGist(getGist().getGistId()))
                 .doOnSubscribe(disposable -> onSubscribed())
                 .doOnNext(booleanResponse -> {
                     if (booleanResponse.code() == 204) {
@@ -92,7 +92,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
     }
 
     @Override public void checkStarring(@NonNull String gistId) {
-        makeRestCall(RestProvider.getGistService().checkGistStar(gistId),
+        makeRestCall(RestProvider.getGistService(isEnterprise()).checkGistStar(gistId),
                 booleanResponse -> {
                     isGistStarred = booleanResponse.code() == 204;
                     sendToView(view -> view.onGistStarred(isGistStarred));

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -60,7 +60,7 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
             return;
         }
         setCurrentPage(page);
-        makeRestCall(RestProvider.getGistService().getGistComments(parameter, page),
+        makeRestCall(RestProvider.getGistService(isEnterprise()).getGistComments(parameter, page),
                 listResponse -> {
                     lastPage = listResponse.getLast();
                     if (getCurrentPage() == 1) {
@@ -79,7 +79,7 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
             long commId = bundle.getLong(BundleConstant.EXTRA, 0);
             String gistId = bundle.getString(BundleConstant.ID);
             if (commId != 0 && gistId != null) {
-                makeRestCall(RestProvider.getGistService().deleteGistComment(gistId, commId),
+                makeRestCall(RestProvider.getGistService(isEnterprise()).deleteGistComment(gistId, commId),
                         booleanResponse -> sendToView(view -> {
                             if (booleanResponse.code() == 204) {
                                 Comment comment = new Comment();

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -25,18 +25,18 @@ interface View extends BaseMvp.FAView {
 
         void onEmptyEndpoint(boolean isEmpty);
 
-        void onSuccessfullyLoggedIn();
+        void onSuccessfullyLoggedIn(boolean extraLogin);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {
 
         @NonNull Uri getAuthorizationUrl(@Nullable String endpoint);
 
-        void onHandleAuthIntent(@Nullable Intent intent);
+        void onHandleAuthIntent(@Nullable Intent intent, boolean extraLogin);
 
         void onTokenResponse(@Nullable AccessTokenModel response);
 
-        void onUserResponse(@Nullable Login response);
+        void onUserResponse(@Nullable Login response, boolean isEnterprise);
 
         void login(@NonNull String username, @NonNull String password,
                    @Nullable String twoFactorCode, boolean isBasicAuth,

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -36,7 +36,7 @@ interface View extends BaseMvp.FAView {
 
         void onNavigationChanged(@NavigationType int navType);
 
-        void onUpdateDrawerMenuHeader(boolean isEnterprise);
+        void onUpdateDrawerMenuHeader();
 
         void onOpenProfile();
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogPresenter.java
Patch:
@@ -19,7 +19,7 @@ public class OrgListDialogPresenter extends BasePresenter<OrgListDialogMvp.View>
     private ArrayList<User> orgs = new ArrayList<>();
 
     @Override public void onLoadOrgs() {
-        makeRestCall(RestProvider.getOrgService().getMyOrganizations()
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getMyOrganizations()
                 .flatMap(userPageable -> {
                     if (userPageable != null && userPageable.getItems() != null) {
                         return Observable.fromIterable(userPageable.getItems());

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsPresenter.java
Patch:
@@ -25,7 +25,7 @@
 
 public class UnreadNotificationsPresenter extends BasePresenter<UnreadNotificationMvp.View> implements UnreadNotificationMvp.Presenter {
     private ArrayList<GroupedNotificationModel> notifications = new ArrayList<>();
-
+    
     @Override public void onItemClick(int position, View v, GroupedNotificationModel model) {
         if (getView() == null) return;
         Notification item = model.getNotification();
@@ -77,7 +77,7 @@ public class UnreadNotificationsPresenter extends BasePresenter<UnreadNotificati
     }
 
     @Override public void onCallApi() {
-        Observable<List<GroupedNotificationModel>> observable = RestProvider.getNotificationService()
+        Observable<List<GroupedNotificationModel>> observable = RestProvider.getNotificationService(PrefGetter.isEnterprise())
                 .getNotifications(ParseDateFormat.getLastWeekDate()).flatMap(response -> {
                     if (response.getItems() != null) manageObservable(Notification.save(response.getItems()));
                     return Observable.just(GroupedNotificationModel.onlyNotifications(response.getItems()));

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersPresenter.java
Patch:
@@ -60,7 +60,7 @@ class ProfileFollowersPresenter extends BasePresenter<ProfileFollowersMvp.View>
             sendToView(ProfileFollowersMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getUserService().getFollowers(parameter, page),
+        makeRestCall(RestProvider.getUserService(isEnterprise()).getFollowers(parameter, page),
                 response -> {
                     lastPage = response.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingPresenter.java
Patch:
@@ -60,7 +60,7 @@ class ProfileFollowingPresenter extends BasePresenter<ProfileFollowingMvp.View>
             sendToView(ProfileFollowingMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getUserService().getFollowing(parameter, page),
+        makeRestCall(RestProvider.getUserService(isEnterprise()).getFollowing(parameter, page),
                 response -> {
                     lastPage = response.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -23,6 +23,7 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
     private int previousTotal;
     private int lastPage = Integer.MAX_VALUE;
 
+
     @Override public int getCurrentPage() {
         return page;
     }
@@ -61,7 +62,7 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
             sendToView(ProfileGistsMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getGistService().getUserGists(parameter, page),
+        makeRestCall(RestProvider.getGistService(isEnterprise()).getUserGists(parameter, page),
                 listResponse -> {
                     lastPage = listResponse.getLast();
                     sendToView(view -> view.onNotifyAdapter(listResponse.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/OrgProfileOverviewFragment.java
Patch:
@@ -68,7 +68,7 @@ public static OrgProfileOverviewFragment newInstance(@NonNull String login) {
         } else {
             description.setVisibility(GONE);
         }
-        avatarLayout.setUrl(userModel.getAvatarUrl(), null);
+        avatarLayout.setUrl(userModel.getAvatarUrl(), null, false, false);
         avatarLayout.findViewById(R.id.avatar).setOnTouchListener((v, event) -> {
             if (event.getAction() == MotionEvent.ACTION_UP) {
                 ActivityHelper.startCustomTab(getActivity(), userModel.getAvatarUrl());

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/OrgProfileOverviewPresenter.java
Patch:
@@ -30,7 +30,7 @@ public class OrgProfileOverviewPresenter extends BasePresenter<OrgProfileOvervie
         }
         login = bundle.getString(BundleConstant.EXTRA);
         if (login != null) {
-            makeRestCall(RestProvider.getOrgService().getOrganization(login),
+            makeRestCall(RestProvider.getOrgService(isEnterprise()).getOrganization(login),
                     this::onSendUserToView);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/members/OrgMembersPresenter.java
Patch:
@@ -54,7 +54,7 @@ class OrgMembersPresenter extends BasePresenter<OrgMembersMvp.View> implements O
             sendToView(OrgMembersMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getOrgService().getOrgMembers(parameter, page),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getOrgMembers(parameter, page),
                 response -> {
                     lastPage = response.getLast();
                     sendToView(view -> view.onNotifyAdapter(response.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposPresenter.java
Patch:
@@ -65,7 +65,7 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
             return;
         }
         filterOptions.setOrg(true);
-        makeRestCall(RestProvider.getOrgService().getOrgRepos(parameter, filterOptions.getQueryMap(), page),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getOrgRepos(parameter, filterOptions.getQueryMap(), page),
                 repoModelPageable -> {
                     lastPage = repoModelPageable.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamPresenter.java
Patch:
@@ -55,7 +55,7 @@ class OrgTeamPresenter extends BasePresenter<OrgTeamMvp.View> implements OrgTeam
             sendToView(OrgTeamMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getOrgService().getOrgTeams(parameter, page),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getOrgTeams(parameter, page),
                 response -> {
                     lastPage = response.getLast();
                     sendToView(view -> view.onNotifyAdapter(response.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/members/TeamMembersPresenter.java
Patch:
@@ -54,7 +54,7 @@ class TeamMembersPresenter extends BasePresenter<TeamMembersMvp.View> implements
             sendToView(TeamMembersMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getOrgService().getTeamMembers(parameter, page),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getTeamMembers(parameter, page),
                 response -> {
                     lastPage = response.getLast();
                     sendToView(view -> view.onNotifyAdapter(response.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/repos/TeamReposPresenter.java
Patch:
@@ -55,7 +55,7 @@ class TeamReposPresenter extends BasePresenter<TeamReposMvp.View> implements Tea
             sendToView(TeamReposMvp.View::hideProgress);
             return;
         }
-        makeRestCall(RestProvider.getOrgService().getTeamRepos(parameter, page),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).getTeamRepos(parameter, page),
                 repoModelPageable -> {
                     lastPage = repoModelPageable.getLast();
                     sendToView(view -> view.onNotifyAdapter(repoModelPageable.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -189,7 +189,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
         } else {
             description.setVisibility(GONE);
         }
-        avatarLayout.setUrl(userModel.getAvatarUrl(), null);
+        avatarLayout.setUrl(userModel.getAvatarUrl(), null, false, false);
         avatarLayout.findViewById(R.id.avatar).setOnTouchListener((v, event) -> {
             if (event.getAction() == MotionEvent.ACTION_UP) {
                 ActivityHelper.startCustomTab(getActivity(), userModel.getAvatarUrl());

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -74,8 +74,8 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
         }
         filterOptions.setIsPersonalProfile(TextUtils.equals(currentLoggedIn, username));
         makeRestCall(TextUtils.equals(currentLoggedIn, username)
-                     ? RestProvider.getUserService().getRepos(filterOptions.getQueryMap(), page)
-                     : RestProvider.getUserService().getRepos(parameter, filterOptions.getQueryMap(), page),
+                     ? RestProvider.getUserService(isEnterprise()).getRepos(filterOptions.getQueryMap(), page)
+                     : RestProvider.getUserService(isEnterprise()).getRepos(parameter, filterOptions.getQueryMap(), page),
                 repoModelPageable -> {
                     lastPage = repoModelPageable.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -68,15 +68,15 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
         }
         Observable<Pageable<Repo>> observable;
         if (starredCount == -1) {
-            observable = Observable.zip(RestProvider.getUserService().getStarred(parameter, page),
-                    RestProvider.getUserService().getStarredCount(parameter), (repoPageable, count) -> {
+            observable = Observable.zip(RestProvider.getUserService(isEnterprise()).getStarred(parameter, page),
+                    RestProvider.getUserService(isEnterprise()).getStarredCount(parameter), (repoPageable, count) -> {
                         if (count != null) {
                             starredCount = count.getLast();
                         }
                         return repoPageable;
                     });
         } else {
-            observable = RestProvider.getUserService().getStarred(parameter, page);
+            observable = RestProvider.getUserService(isEnterprise()).getStarred(parameter, page);
         }
         makeRestCall(observable, repoModelPageable -> {
             lastPage = repoModelPageable.getLast();

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -67,6 +67,8 @@ interface View extends BaseMvp.FAView, FilterAddChooserListener {
         boolean hasUserInteractedWithView();
 
         void disableIssueTab();
+
+        void openUserProfile();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSelectionListener {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -6,7 +6,6 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 
-import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.AbstractPinnedRepos;
 import com.fastaccess.data.dao.model.Login;
@@ -20,7 +19,6 @@
 import com.fastaccess.ui.modules.repos.code.RepoCodePagerFragment;
 import com.fastaccess.ui.modules.repos.issues.RepoIssuesPagerFragment;
 import com.fastaccess.ui.modules.repos.pull_requests.RepoPullRequestPagerFragment;
-import com.fastaccess.ui.modules.user.UserPagerActivity;
 
 import static com.fastaccess.helper.ActivityHelper.getVisibleFragment;
 
@@ -190,7 +188,7 @@ private void callApi(int navTyp) {
         if (currentVisible == null) return;
         switch (type) {
             case RepoPagerMvp.PROFILE:
-                UserPagerActivity.startActivity(App.getInstance().getApplicationContext(), Login.getUser().getLogin());
+                sendToView(RepoPagerMvp.View::openUserProfile);
             case RepoPagerMvp.CODE:
                 if (codePagerView == null) {
                     onAddAndHide(fragmentManager, RepoCodePagerFragment.newInstance(repoId(), login(),

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -24,6 +24,7 @@
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.provider.timeline.HtmlHelper;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
@@ -172,7 +173,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
                 .append(" ")
                 .append(" ")
                 .append(ParseDateFormat.getTimeAgo(dateValue)));
-        avatarLayout.setUrl(avatar, login);
+        avatarLayout.setUrl(avatar, login, false, LinkParserHelper.isEnterprise(commit.getUrl()));
         addition.setText(String.valueOf(commit.getStats() != null ? commit.getStats().getAdditions() : 0));
         deletion.setText(String.valueOf(commit.getStats() != null ? commit.getStats().getDeletions() : 0));
         changes.setText(String.valueOf(commit.getFiles() != null ? commit.getFiles().size() : 0));

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/popup/IssuePopupFragment.java
Patch:
@@ -25,6 +25,7 @@
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.provider.markdown.MarkDownProvider;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.base.BaseMvpBottomSheetDialogFragment;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontEditText;
@@ -132,7 +133,7 @@ public static void showPopup(@NonNull FragmentManager manager, @NonNull PullRequ
         MarkDownProvider.setMdText(body, bodyString);
         if (user != null) {
             name.setText(user.getLogin());
-            avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin());
+            avatarLayout.setUrl(user.getAvatarUrl(), user.getLogin(), false, LinkParserHelper.isEnterprise(user.getUrl()));
         }
         if (assigneeModel == null) {
             assigneeLayout.setVisibility(View.GONE);

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/popup/IssuePopupPresenter.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.support.annotation.NonNull;
 
-import com.fastaccess.R;
 import com.fastaccess.data.dao.CommentRequestModel;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -16,7 +15,7 @@ public class IssuePopupPresenter extends BasePresenter<IssuePopupMvp.View> imple
     @Override public void onSubmit(@NonNull String login, @NonNull String repoId, int issueNumber, @NonNull String text) {
         CommentRequestModel requestModel = new CommentRequestModel();
         requestModel.setBody(text);
-        makeRestCall(RestProvider.getIssueService().createIssueComment(login, repoId, issueNumber, requestModel),
+        makeRestCall(RestProvider.getIssueService(isEnterprise()).createIssueComment(login, repoId, issueNumber, requestModel),
                 comment -> sendToView(view -> view.onSuccessfullySubmitted()));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -76,7 +76,7 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
             sortBy = "updated";
         }
         setCurrentPage(page);
-        makeRestCall(RestProvider.getIssueService().getRepositoryIssues(login, repoId, parameter.name(), sortBy, page),
+        makeRestCall(RestProvider.getIssueService(isEnterprise()).getRepositoryIssues(login, repoId, parameter.name(), sortBy, page),
                 issues -> {
                     lastPage = issues.getLast();
                     List<Issue> filtered = Stream.of(issues.getItems())
@@ -90,7 +90,7 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageDisposable(RxHelper.getObserver(RestProvider.getIssueService()
+        manageDisposable(RxHelper.getObserver(RestProvider.getIssueService(isEnterprise())
                 .getIssuesWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, false), 1))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -27,6 +27,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.helper.ViewHelper;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.modules.repos.RepoPagerActivity;
@@ -389,7 +390,7 @@ private void updateViews(@NonNull Issue issueModel) {
                     .append(getString(issueModel.getState().getStatus()))
                     .append(" ").append(getString(R.string.by)).append(" ").append(username).append(" ")
                     .append(parsedDate));
-            avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());
+            avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin(), false, LinkParserHelper.isEnterprise(issueModel.getUrl()));
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -70,7 +70,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestService().getPullRequests(login, repoId, parameter.name(), page), response -> {
+        makeRestCall(RestProvider.getPullRequestService(isEnterprise()).getPullRequests(login, repoId, parameter.name(), page), response -> {
             lastPage = response.getLast();
             if (getCurrentPage() == 1) {
                 manageObservable(PullRequest.save(response.getItems(), login, repoId));
@@ -89,7 +89,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageDisposable(RxHelper.getObserver(RestProvider.getPullRequestService()
+        manageDisposable(RxHelper.getObserver(RestProvider.getPullRequestService(isEnterprise())
                 .getPullsWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, true), 0))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -32,6 +32,7 @@
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ViewHelper;
+import com.fastaccess.provider.scheme.LinkParserHelper;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.base.BaseFragment;
@@ -462,7 +463,8 @@ private void updateViews(@NonNull PullRequest pullRequest) {
         User userModel = pullRequest.getUser();
         if (userModel != null) {
             title.setText(SpannableBuilder.builder().append(userModel.getLogin()).append("/").append(pullRequest.getTitle()));
-            avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());
+            avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin(), false,
+                    LinkParserHelper.isEnterprise(pullRequest.getUrl()));
         } else {
             title.setText(SpannableBuilder.builder().append(pullRequest.getTitle()));
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsPresenter.java
Patch:
@@ -61,7 +61,7 @@ class PullRequestCommitsPresenter extends BasePresenter<PullRequestCommitsMvp.Vi
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestService().getPullRequestCommits(login, repoId, number, page),
+        makeRestCall(RestProvider.getPullRequestService(isEnterprise()).getPullRequestCommits(login, repoId, number, page),
                 response -> {
                     lastPage = response.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesPresenter.java
Patch:
@@ -72,7 +72,7 @@ class PullRequestFilesPresenter extends BasePresenter<PullRequestFilesMvp.View>
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestService().getPullRequestFiles(login, repoId, number, page)
+        makeRestCall(RestProvider.getPullRequestService(isEnterprise()).getPullRequestFiles(login, repoId, number, page)
                         .flatMap(commitFileModelPageable -> {
                             if (commitFileModelPageable != null) {
                                 lastPage = commitFileModelPageable.getLast();

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerPresenter.java
Patch:
@@ -16,7 +16,7 @@
     @com.evernote.android.state.State int isMember = -1;
 
     @Override public void checkOrgMembership(@NonNull String org) {
-        makeRestCall(RestProvider.getOrgService().isMember(org, Login.getUser().getLogin()),
+        makeRestCall(RestProvider.getOrgService(isEnterprise()).isMember(org, Login.getUser().getLogin()),
                 booleanResponse -> sendToView(view -> {
                     isMember = booleanResponse.code() == 204 ? 1 : 0;
                     view.onInitOrg(isMember == 1);

File: app/src/main/java/com/fastaccess/ui/modules/changelog/ChangelogPresenter.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.fastaccess.App;
 import com.fastaccess.helper.RxHelper;
-import com.fastaccess.provider.changelog.ChangelogProvider;
+import com.fastaccess.provider.gson.ToGsonProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
 import lombok.Getter;
@@ -15,7 +15,7 @@
     private String html;
 
     @Override public void onLoadChangelog() {
-        manageDisposable(RxHelper.getObserver(ChangelogProvider.getChangelog(App.getInstance()))
+        manageDisposable(RxHelper.getObserver(ToGsonProvider.getChangelog(App.getInstance()))
                 .subscribe(s -> {
                     this.html = s;
                     sendToView(view -> view.onChangelogLoaded(html));

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -57,17 +57,16 @@ public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements Feed
         }
         setCurrentPage(page);
         if (Login.getUser() == null) return;// I can't understand how this could possibly be reached lol.
-        Observable<Pageable<Event>> observable = null;
+        Observable<Pageable<Event>> observable;
         if (user != null) {
             if (isOrg) {
-                RestProvider.getOrgService().getReceivedEvents(user, page);
+                observable = RestProvider.getOrgService().getReceivedEvents(user, page);
             } else {
                 observable = RestProvider.getUserService().getUserEvents(user, page);
             }
         } else {
             observable = RestProvider.getUserService().getReceivedEvents(Login.getUser().getLogin(), page);
         }
-        if (observable == null) return;
         makeRestCall(observable, response -> {
             lastPage = response.getLast();
             if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -44,7 +44,6 @@
 @Shortcut(id = "profile", icon = R.drawable.ic_profile_shortcut, shortLabelRes = R.string.profile, backStack = {MainActivity.class}, rank = 4)
 public class UserPagerActivity extends BaseActivity<UserPagerMvp.View, UserPagerPresenter> implements UserPagerMvp.View {
 
-
     @BindView(R.id.tabs) TabLayout tabs;
     @BindView(R.id.tabbedPager) ViewPagerView pager;
     @BindView(R.id.fab) FloatingActionButton fab;

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -20,7 +20,7 @@ public enum IssueEventType {
     renamed(R.drawable.ic_edit),
     reopened(R.drawable.ic_issue_opened),
     subscribed(R.drawable.ic_subscribe),
-    unassigned(R.drawable.ic_announcement),
+    unassigned(R.drawable.ic_profile),
     unlabeled(R.drawable.ic_label),
     unlocked(R.drawable.ic_unsubscribe),
     unsubscribed(R.drawable.ic_eye_off),

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogFragment.java
Patch:
@@ -54,7 +54,7 @@ public static OrgListDialogFragment newInstance() {
         toolbar.setTitle(R.string.organizations);
         toolbar.inflateMenu(R.menu.add_menu);
         toolbar.getMenu().findItem(R.id.add).setIcon(R.drawable.ic_info_outline)
-                .setTitle(R.string.no_orgs);
+                .setTitle(R.string.no_orgs_dialog_title);
         toolbar.setOnMenuItemClickListener(item -> {
             MessageDialogView.newInstance(getString(R.string.no_orgs), getString(R.string.no_orgs_description), false, true)
                     .show(getChildFragmentManager(), MessageDialogView.TAG);

File: app/src/main/java/com/fastaccess/provider/timeline/handler/BetterLinkMovementExtended.java
Patch:
@@ -195,7 +195,8 @@ private void highlightUrl(TextView textView, BetterLinkMovementExtended.Clickabl
             int spanStart = text.getSpanStart(spanWithText.span());
             int spanEnd = text.getSpanEnd(spanWithText.span());
             Logger.e(text.getClass().getName());
-            text.setSpan(new BackgroundColorSpan(textView.getHighlightColor()), spanStart, spanEnd, 18);
+            Selection.removeSelection(text);
+            text.setSpan(new BackgroundColorSpan(textView.getHighlightColor()), spanStart, spanEnd, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
             textView.setText(text);
             Selection.setSelection(text, spanStart, spanEnd);
         }

File: app/src/main/java/com/fastaccess/data/service/LoginRestService.java
Patch:
@@ -6,13 +6,13 @@
 import com.fastaccess.data.dao.AuthModel;
 import com.fastaccess.data.dao.model.Login;
 
+import io.reactivex.Observable;
 import retrofit2.http.Body;
 import retrofit2.http.Field;
 import retrofit2.http.FormUrlEncoded;
 import retrofit2.http.GET;
 import retrofit2.http.Headers;
 import retrofit2.http.POST;
-import io.reactivex.Observable;
 
 public interface LoginRestService {
 

File: app/src/main/java/com/fastaccess/helper/BundleConstant.java
Patch:
@@ -27,6 +27,7 @@ public class BundleConstant {
     public static final String EXTRA_TYPE = "extra_type";
     public static final String YES_NO_EXTRA = "yes_no_extra";
     public static final String NOTIFICATION_ID = "notification_id";
+    public static final String IS_ENTERPRISE = "is_enterprise";
     public static final String REVIEW_EXTRA = "review_extra";
     public static final int REQUEST_CODE = 2016;
     public static final int REVIEW_REQUEST_CODE = 2017;

File: app/src/main/java/com/fastaccess/ui/adapter/TopicsAdapter.java
Patch:
@@ -7,7 +7,6 @@
 
 import com.fastaccess.App;
 import com.fastaccess.R;
-import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.ui.adapter.viewholder.SimpleViewHolder;
@@ -44,7 +43,7 @@ public TopicsAdapter(@NonNull List<String> data) {
             FontTextView topic = (FontTextView) view;
             Intent intent = new Intent(new Intent(App.getInstance().getApplicationContext(), SearchActivity.class));
             intent.putExtra("search", topic.getText().toString());
-            ActivityHelper.getActivity(view.getContext()).startActivity(intent);
+            view.getContext().startActivity(intent);
         });
         holder.bind(getItem(position));
     }

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsMvp.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.ui.modules.feeds;
 
+import android.os.Bundle;
 import android.os.Parcelable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -37,6 +38,8 @@ interface Presenter extends BaseMvp.FAPresenter,
             BaseViewHolder.OnItemClickListener<Event>,
             BaseMvp.PaginationListener {
 
+        void onFragmentCreated(@NonNull Bundle argument);
+
         void onCallApi(int page);
 
         @NonNull ArrayList<Event> getEvents();

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -176,4 +176,7 @@ Observable<MilestoneModel> createMilestone(@Path("owner") String owner, @Path("r
 
     @NonNull @GET("/repos/{owner}/{repo}/forks")
     Observable<Pageable<Repo>> getForks(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
+
+    @NonNull @GET("repos/{owner}/{repo}/license") @Headers("Accept: application/vnd.github.html")
+    Observable<String> getLicense(@Path("owner") String owner, @Path("repo") String repo);
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -13,6 +13,7 @@
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.provider.rest.RestProvider;
+import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
 import io.reactivex.Observable;
@@ -36,6 +37,7 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
             if (!isRepo) {
                 sendToView(view -> view.onShowError(R.string.no_file_found));
             }
+            sendToView(BaseMvp.FAView::hideProgress);
         } else {
             if (code == 406) {
                 sendToView(view -> view.openUrl(url));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -11,11 +11,11 @@
 import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.colors.ColorsProvider;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.LabelSpan;
 import com.fastaccess.ui.widgets.SpannableBuilder;
-import com.fastaccess.ui.widgets.color.ColorGenerator;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -79,7 +79,7 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         date.setText(ParseDateFormat.getTimeAgo(repo.getUpdatedAt()));
         if (!InputHelper.isEmpty(repo.getLanguage())) {
             language.setText(repo.getLanguage());
-            language.setTextColor(ColorGenerator.getColor(itemView.getContext(), repo.getLanguage()));
+            language.setTextColor(ColorsProvider.getColorAsColor(repo.getLanguage(), language.getContext()));
             language.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -189,7 +189,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         Repo repoModel = getPresenter().getRepo();
         if (repoModel != null && !InputHelper.isEmpty(repoModel.getDescription())) {
-            MessageDialogView.newInstance(getString(R.string.details), repoModel.getDescription(), false, true)
+            MessageDialogView.newInstance(repoModel.getFullName(), repoModel.getDescription(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -84,7 +84,8 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getCommit() != null && !InputHelper.isEmpty(getPresenter().getCommit().getGitCommit().getMessage()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getCommit().getGitCommit().getMessage(), true, false)
+            MessageDialogView.newInstance(String.format("%s/%s", getPresenter().getLogin(), getPresenter().getRepoId()),
+                    getPresenter().getCommit().getGitCommit().getMessage(), true, false)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -62,8 +62,9 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
             String url = InputHelper.isEmpty(model.getDownloadUrl()) ? model.getUrl() : model.getDownloadUrl();
             if (InputHelper.isEmpty(url)) return;
             if (model.getSize() > FileHelper.ONE_MB && !MarkDownProvider.isImage(url)) {
-                MessageDialogView.newInstance(getString(R.string.big_file), getString(R.string.big_file_description), false, true,
-                        Bundler.start().put(BundleConstant.EXTRA, model.getDownloadUrl())
+                MessageDialogView.newInstance(getString(R.string.big_file), getString(R.string.big_file_description),
+                        false, true, Bundler.start()
+                                .put(BundleConstant.EXTRA, model.getDownloadUrl())
                                 .put(BundleConstant.YES_NO_EXTRA, true)
                                 .end())
                         .show(getChildFragmentManager(), "MessageDialogView");

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -87,7 +87,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getIssue() != null && !InputHelper.isEmpty(getPresenter().getIssue().getTitle()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getIssue().getTitle(), false, true)
+            MessageDialogView.newInstance(String.format("%s/%s", getPresenter().getLogin(), getPresenter().getRepoId()),
+                    getPresenter().getIssue().getTitle(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -99,7 +99,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getPullRequest() != null && !InputHelper.isEmpty(getPresenter().getPullRequest().getTitle()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getPullRequest().getTitle(), false, true)
+            MessageDialogView.newInstance(String.format("%s/%s", getPresenter().getLogin(), getPresenter().getRepoId()),
+                    getPresenter().getPullRequest().getTitle(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeFragment.java
Patch:
@@ -124,7 +124,6 @@ public static SearchCodeFragment newInstance() {
         this.searchQuery = query;
         this.showRepoName = showRepoName;
         getLoadMore().reset();
-        recycler.scrollToPosition(0);
         adapter.clear();
         adapter.showRepoName(showRepoName);
         if (!InputHelper.isEmpty(query)) {

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesFragment.java
Patch:
@@ -122,7 +122,6 @@ public static SearchIssuesFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        recycler.scrollToPosition(0);
         adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposFragment.java
Patch:
@@ -122,7 +122,6 @@ public static SearchReposFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        recycler.scrollToPosition(0);
         adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersFragment.java
Patch:
@@ -120,7 +120,6 @@ public static SearchUsersFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        recycler.scrollToPosition(0);
         adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -106,7 +106,7 @@ public static void scheduleJob(@NonNull Context context, int duration, boolean c
                 .setLifetime(Lifetime.FOREVER)
                 .setRecurring(true)
                 .setConstraints(Constraint.ON_ANY_NETWORK)
-                .setTrigger(Trigger.executionWindow(10, duration))
+                .setTrigger(Trigger.executionWindow(duration / 2, duration))
                 .setService(NotificationSchedulerJobTask.class);
         dispatcher.mustSchedule(builder.build());
     }

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -111,6 +111,7 @@ public static AllNotificationsFragment newInstance() {
     @Override public void hideProgress() {
         refresh.setRefreshing(false);
         stateLayout.hideProgress();
+        stateLayout.showReload(adapter.getItemCount());
     }
 
     @Override public void showErrorMessage(@NonNull String message) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -84,7 +84,7 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/helper/ActivityHelper.java
Patch:
@@ -149,7 +149,7 @@ public static void shareUrl(@NonNull Context context, @NonNull String url) {
         try {
             ShareCompat.IntentBuilder.from(activity)
                     .setChooserTitle(context.getString(R.string.share))
-                    .setType("text/*")
+                    .setType("text/plain")
                     .setText(url)
                     .startChooser();
         } catch (ActivityNotFoundException e) {

File: app/src/main/java/com/fastaccess/helper/ActivityHelper.java
Patch:
@@ -149,7 +149,7 @@ public static void shareUrl(@NonNull Context context, @NonNull String url) {
         try {
             ShareCompat.IntentBuilder.from(activity)
                     .setChooserTitle(context.getString(R.string.share))
-                    .setType("text/*")
+                    .setType("text/plain")
                     .setText(url)
                     .startChooser();
         } catch (ActivityNotFoundException e) {

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -189,7 +189,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
                     ProgressDialogFragment.TAG);
             if (fragment == null) {
                 isProgressShowing = true;
-                fragment = ProgressDialogFragment.newInstance(msg, false);
+                fragment = ProgressDialogFragment.newInstance(msg, true);
                 fragment.show(getSupportFragmentManager(), ProgressDialogFragment.TAG);
             }
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesMvp.java
Patch:
@@ -27,6 +27,8 @@ interface View extends BaseMvp.FAView, OnToggleView, PullRequestFilesMvp.OnPatch
         void onNotifyAdapter(@Nullable List<CommitFileChanges> items);
 
         void onCommentAdded(@NonNull Comment newComment);
+
+        void clearAdapter();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<CommitFileChanges> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -164,6 +164,7 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override public void onPatchClicked(int groupPosition, int childPosition, View v, CommitFileModel commit, CommitLinesModel item) {
+        if (item.getText().startsWith("@@")) return;
         AddReviewDialogFragment.Companion.newInstance(item, Bundler.start().put(BundleConstant.ITEM, commit.getFilename()).end())
                 .show(getChildFragmentManager(), "AddReviewDialogFragment");
     }

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ProgressDialogFragment.java
Patch:
@@ -35,8 +35,9 @@ public class ProgressDialogFragment extends DialogFragment {
     @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
         ProgressDialog progressDialog = new ProgressDialog(getContext());
         progressDialog.setMessage(getArguments().getString("msg"));
-//        progressDialog.setCancelable(getArguments().getBoolean("isCancelable"));
-//        setCancelable(getArguments().getBoolean("isCancelable"));
+        boolean isCancelable = getArguments().getBoolean("isCancelable");
+        progressDialog.setCancelable(isCancelable);
+        setCancelable(isCancelable);
         if (getActivity() != null && !getActivity().isFinishing()) {
             progressDialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(progressDialog, 200));
         }

File: app/src/main/java/com/fastaccess/data/dao/MergeRequestModel.java
Patch:
@@ -18,6 +18,7 @@ public class MergeRequestModel implements Parcelable {
     private String sha;
     private String base;
     private String head;
+    private String mergeMethod = "merge";
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/data/dao/SettingsModel.java
Patch:
@@ -22,14 +22,16 @@
     public static final int CUSTOMIZATION = 3;
     public static final int BACKUP = 4;
     public static final int LANGUAGE = 5;
+    public static final int CODE_THEME = 6;
 
     @IntDef({
             THEME,
             NOTIFICATION,
             CUSTOMIZATION,
             BEHAVIOR,
             BACKUP,
-            LANGUAGE
+            LANGUAGE,
+            CODE_THEME
     })
     @Retention(RetentionPolicy.SOURCE) public @interface SettingsType {}
 

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -73,6 +73,7 @@ Observable<PullRequest> editIssue(@Path("owner") String owner, @Path("repo") Str
                                       @Body IssueRequestModel issue);
 
     @POST("repos/{owner}/{repo}/issues/{number}/assignees")
+    @Headers("Accept: application/vnd.github.VERSION.full+json, application/vnd.github.squirrel-girl-preview")
     Observable<PullRequest> putAssignees(@Path("owner") String owner, @Path("repo") String repo,
                                          @Path("number") int number, @Body AssigneesRequestModel body);
 
@@ -83,5 +84,4 @@ Observable<PullRequest> putAssignees(@Path("owner") String owner, @Path("repo")
     @Headers("Accept: application/vnd.github.black-cat-preview+json")
     Observable<PullRequest> putReviewers(@Path("owner") String owner, @Path("repo") String repo,
                                          @Path("number") int number, @Body AssigneesRequestModel body);
-
 }

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -117,6 +117,7 @@ Observable<Pageable<Comment>> getCommitComments(@NonNull @Path("owner") String o
     Observable<Comment> postCommitComment(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo,
                                           @NonNull @Path("sha") String ref, @Body CommentRequestModel model);
 
+
     @NonNull @PATCH("repos/{owner}/{repo}/comments/{id}")
     @Headers("Accept: application/vnd.github.VERSION.full+json, application/vnd.github.squirrel-girl-preview")
     Observable<Comment> editCommitComment(@Path("owner") String owner, @Path("repo") String repo, @Path("id") long id,

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -28,7 +28,6 @@
 
 public class AppHelper {
 
-
     public static void hideKeyboard(@NonNull View view) {
         InputMethodManager inputManager = (InputMethodManager) view.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
         inputManager.hideSoftInputFromWindow(view.getWindowToken(), 0);

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -11,6 +11,7 @@
 import android.view.WindowManager;
 import android.widget.TextView;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.ViewHelper;
@@ -81,7 +82,7 @@ private static HtmlSpanner initHtml(@NonNull TextView textView) {
         mySpanner.registerHandler("a", new LinkHandler());
         TableHandler tableHandler = new TableHandler();
         tableHandler.setTextColor(ViewHelper.generateTextColor(windowBackground));
-        WindowManager windowManager = (WindowManager) textView.getContext().getSystemService(Context.WINDOW_SERVICE);
+        WindowManager windowManager = (WindowManager) App.getInstance().getSystemService(Context.WINDOW_SERVICE);
         Point point = new Point();
         windowManager.getDefaultDisplay().getRealSize(point);
         tableHandler.setTableWidth((int) (point.x / 1.2));

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -123,8 +123,8 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
         } else {
             quote.setMaxLines(3);
         }
-        quote.setCompoundDrawablesWithIntrinsicBounds(0, 0, quote.getMaxLines() == 3
-                                                            ? R.drawable.ic_arrow_drop_down : R.drawable.ic_arrow_drop_up, 0);
+        quote.setCompoundDrawablesWithIntrinsicBounds(0, 0,
+                quote.getMaxLines() == 3 ? R.drawable.ic_arrow_drop_down : R.drawable.ic_arrow_drop_up, 0);
     }
 
     @OnClick(R.id.view) void onViewMarkDown() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -194,7 +194,7 @@ private void callApi(int navTyp) {
             case RepoPagerMvp.CODE:
                 if (codePagerView == null) {
                     onAddAndHide(fragmentManager, RepoCodePagerFragment.newInstance(repoId(), login(),
-                            getRepo().getUrl(), getRepo().getDefaultBranch()), currentVisible);
+                            getRepo().getHtmlUrl(), getRepo().getUrl(), getRepo().getDefaultBranch()), currentVisible);
                 } else {
                     onShowHideFragment(fragmentManager, codePagerView, currentVisible);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -44,6 +44,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void onReply(User user, String message);
 
         void showReactionsPopup(@NonNull ReactionTypes reactionTypes, @NonNull String login, @NonNull String repoId, long commentId);
+
+        void addComment(@NonNull Comment newComment);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesSingleton.java
Patch:
@@ -22,8 +22,7 @@ static CommitFilesSingleton getInstance() {
 
     private Map<String, CommitFileListModel> files = new Hashtable<>();
 
-    private CommitFilesSingleton() {
-    }
+    private CommitFilesSingleton() {}
 
     void putFiles(@NonNull String id, @NonNull CommitFileListModel commitFiles) {
         files.clear();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -53,7 +53,9 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
         manageDisposable(RxHelper.getObserver(RepoFile.getFiles(login, repoId).toObservable())
                 .flatMap(response -> {
                     if (response != null) {
-                        return Observable.fromIterable(response).sorted((repoFile, repoFile2) -> repoFile2.getType().compareTo(repoFile.getType()));
+                        return Observable.fromIterable(response)
+                                .filter(repoFile -> repoFile != null && repoFile.getType() != null)
+                                .sorted((repoFile, repoFile2) -> repoFile2.getType().compareTo(repoFile.getType()));
                     }
                     return Observable.empty();
                 })

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsDialogFragment.java
Patch:
@@ -92,7 +92,7 @@ public static LabelsDialogFragment newInstance(@NonNull List<LabelModel> models,
         refresh.setEnabled(false);
         stateLayout.setEmptyText(R.string.no_labels);
         recycler.setEmptyView(stateLayout, refresh);
-        recycler.addKeyLineDivider();
+        recycler.addDivider();
         title.setText(R.string.labels);
         add.setVisibility(View.VISIBLE);
         List<LabelModel> list = getArguments().getParcelableArrayList(BundleConstant.ITEM);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -291,7 +291,9 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
             return;
         }
         setCurrentPage(page);
-        loadEverything(login, repoId, number, parameter.getHead().getSha(), parameter.isMergeable(), page);
+        if (parameter.getHead() != null) {
+            loadEverything(login, repoId, number, parameter.getHead().getSha(), parameter.isMergeable(), page);
+        }
     }
 
     private void loadEverything(String login, String repoId, int number, @NonNull String sha, boolean isMergeable, int page) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/merge/MergePullReqeustMvp.java
Patch:
@@ -11,7 +11,7 @@
 public interface MergePullReqeustMvp {
 
     interface MergeCallback {
-        void onMerge(@NonNull String msg);
+        void onMerge(@NonNull String msg, @NonNull String mergeMethod);
     }
 
     interface View extends BaseMvp.FAView {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/merge/MergePullRequestDialogFragment.java
Patch:
@@ -5,6 +5,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.design.widget.TextInputLayout;
+import android.support.v7.widget.AppCompatSpinner;
 import android.view.View;
 
 import com.fastaccess.R;
@@ -24,6 +25,7 @@ public class MergePullRequestDialogFragment extends BaseDialogFragment<MergePull
         implements MergePullReqeustMvp.View {
 
     @BindView(R.id.title) TextInputLayout title;
+    @BindView(R.id.mergeMethod) AppCompatSpinner mergeMethod;
 
     private MergePullReqeustMvp.MergeCallback mergeCallback;
 
@@ -71,7 +73,7 @@ public static MergePullRequestDialogFragment newInstance(@Nullable String title)
             boolean isEmpty = InputHelper.isEmpty(title);
             title.setError(isEmpty ? getString(R.string.required_field) : null);
             if (isEmpty) return;
-            mergeCallback.onMerge(InputHelper.toString(title));
+            mergeCallback.onMerge(InputHelper.toString(title), mergeMethod.getSelectedItem().toString().toLowerCase());
         }
         dismiss();
     }

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ListDialogView.java
Patch:
@@ -51,6 +51,7 @@ public interface onSimpleItemSelection<O extends Parcelable> {
         title.setText(titleText);
         if (objects != null) {
             SimpleListAdapter<O> adapter = new SimpleListAdapter<>(objects, this);
+            recycler.addDivider(true);
             recycler.setAdapter(adapter);
         } else {
             dismiss();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssueActivity.java
Patch:
@@ -215,16 +215,16 @@ public static void startForResult(@NonNull Activity activity, @NonNull Intent in
             }
         }
         if (isFeedback) setTitle(R.string.submit_feedback);
-        if (BuildConfig.DEBUG) {
-            if (isFeedback) new AlertDialog.Builder(this)
+        if (BuildConfig.DEBUG && isFeedback) {
+            new AlertDialog.Builder(this)
                     .setTitle("You are currently using a debug build")
                     .setMessage("If you have found a bug, please report it on slack." + "\n" +
                             "Feature requests can be submitted here." + "\n" + "Happy Testing")
                     .setPositiveButton(android.R.string.ok, (dialogInterface, i) -> {
                         dialogInterface.dismiss();
                     })
                     .show();
-        };
+        }
         if (toolbar != null) toolbar.setSubtitle(login + "/" + repoId);
     }
 

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -13,6 +13,7 @@
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.ui.modules.code.CodeViewerActivity;
 import com.fastaccess.ui.modules.gists.gist.GistActivity;
 import com.fastaccess.ui.modules.repos.RepoPagerActivity;
@@ -107,6 +108,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         } else if (HOST_GISTS_RAW.equalsIgnoreCase(data.getHost())) {
             return getGistFile(context, data);
         } else {
+            if (MarkDownProvider.isArchive(data.toString())) return null;
             String authority = data.getAuthority();
             if (TextUtils.equals(authority, HOST_DEFAULT) || TextUtils.equals(authority, RAW_AUTHORITY) ||
                     TextUtils.equals(authority, API_AUTHORITY)) {

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -29,7 +29,7 @@
  * Created by Kosh on 11 Nov 2016, 12:36 PM
  */
 
-class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Presenter {
+public class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Presenter {
     private ArrayList<Event> eventsModels = new ArrayList<>();
     private int page;
     private int previousTotal;

File: app/src/main/java/com/fastaccess/data/dao/NameParser.java
Patch:
@@ -17,8 +17,8 @@
 @Getter @Setter
 public class NameParser {
 
-    private String name;
-    private String username;
+    public String name;
+    public String username;
 
     public NameParser(@Nullable String url) {
         if (!InputHelper.isEmpty(url)) {

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -14,6 +14,7 @@
 import android.view.View;
 import android.view.inputmethod.InputMethodManager;
 
+import com.fastaccess.App;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 
@@ -54,7 +55,7 @@ public static void copyToClipboard(@NonNull Context context, @NonNull String uri
         ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);
         ClipData clip = ClipData.newPlainText(context.getString(R.string.app_name), uri);
         clipboard.setPrimaryClip(clip);
-        Toasty.success(context, context.getString(R.string.success_copied)).show();
+        Toasty.success(App.getInstance(), context.getString(R.string.success_copied)).show();
     }
 
     public static boolean isNightMode(@NonNull Resources resources) {

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.annotation.Nullable;
 import android.widget.Toast;
 
+import com.fastaccess.App;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.GitHubErrorResponse;
@@ -109,7 +110,7 @@ public static void downloadFile(@NonNull Context context, @NonNull String url) {
         if (!direct.isDirectory() || !direct.exists()) {
             boolean isCreated = direct.mkdirs();
             if (!isCreated) {
-                Toast.makeText(context, "Unable to create directory to download file", Toast.LENGTH_SHORT).show();
+                Toast.makeText(App.getInstance(), "Unable to create directory to download file", Toast.LENGTH_SHORT).show();
                 return;
             }
         }

File: app/src/main/java/com/fastaccess/provider/tasks/slack/SlackInvitationService.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.support.annotation.Nullable;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.SlackInvitePostModel;
 import com.fastaccess.data.dao.model.Login;
@@ -34,9 +35,9 @@ public SlackInvitationService() {
                     .subscribe(response -> {
                         if (response != null) {
                             if (response.isOk()) {
-                                Toasty.success(getApplicationContext(), getString(R.string.successfully_invited)).show();
+                                Toasty.success(App.getInstance(), getString(R.string.successfully_invited)).show();
                             } else {
-                                Toasty.info(getApplicationContext(), response.getError().replaceAll("_", " ")).show();
+                                Toasty.info(App.getInstance(), response.getError().replaceAll("_", " ")).show();
                             }
                         }
                     }, Throwable::printStackTrace);

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -15,6 +15,7 @@
 import com.danielstone.materialaboutlibrary.items.MaterialAboutActionItem;
 import com.danielstone.materialaboutlibrary.model.MaterialAboutCard;
 import com.danielstone.materialaboutlibrary.model.MaterialAboutList;
+import com.fastaccess.App;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 import com.fastaccess.helper.ActivityHelper;
@@ -64,7 +65,7 @@ public class FastHubAboutActivity extends MaterialAboutActivity {
     @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         if (resultCode == RESULT_OK && requestCode == BundleConstant.REQUEST_CODE) {
-            Toasty.success(this, getString(R.string.thank_you_for_feedback), Toast.LENGTH_SHORT).show();
+            Toasty.success(App.getInstance(), getString(R.string.thank_you_for_feedback), Toast.LENGTH_SHORT).show();
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -19,6 +19,7 @@
 import android.widget.ListView;
 
 import com.evernote.android.state.State;
+import com.fastaccess.App;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.EditReviewCommentModel;
@@ -159,7 +160,7 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
             EditorLinkImageDialogFragment.newInstance(false).show(getSupportFragmentManager(), "BannerDialogFragment");
             if (BuildConfig.DEBUG)
                 // Doesn't need a string, will only show up in debug.
-                Toasty.warning(this, "Image upload won't work unless you've entered your Imgur keys. You are on a debug build.").show();
+                Toasty.warning(App.getInstance(), "Image upload won't work unless you've entered your Imgur keys. You are on a debug build.").show();
         } else {
             getPresenter().onActionClicked(editText, v.getId());
         }

File: app/src/main/java/com/fastaccess/ui/modules/editor/popup/EditorLinkImageDialogFragment.java
Patch:
@@ -9,15 +9,14 @@
 import android.support.design.widget.TextInputLayout;
 import android.view.View;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.FileHelper;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.ui.base.BaseDialogFragment;
-import com.fastaccess.ui.modules.profile.banner.BannerInfoActivity;
-import com.fastaccess.ui.modules.profile.banner.BannerInfoMvp;
 import com.fastaccess.ui.widgets.FontButton;
 
 import java.io.File;
@@ -88,7 +87,7 @@ public static EditorLinkImageDialogFragment newInstance(boolean isLink) {
                 if (!InputHelper.isEmpty(path)) {
                     getPresenter().onSubmit(InputHelper.toString(title), new File(path));
                 } else {
-                    Toasty.error(getContext(), getString(R.string.failed_selecting_image)).show();
+                    Toasty.error(App.getInstance(), getString(R.string.failed_selecting_image)).show();
                 }
             }
         }

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/FilterIssuesActivity.java
Patch:
@@ -17,6 +17,7 @@
 import android.widget.Toast;
 
 import com.evernote.android.state.State;
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.LabelModel;
 import com.fastaccess.data.dao.MilestoneModel;
@@ -170,7 +171,7 @@ public static void startActivity(@NonNull Activity context, @NonNull String logi
     }
 
     @OnClick(R.id.author) public void onAuthorClicked() {
-        Toasty.info(this, "GitHub doesn't have this API yet!\nYou can try typing it yourself for example author:k0shk0sh",
+        Toasty.info(App.getInstance(), "GitHub doesn't have this API yet!\nYou can try typing it yourself for example author:k0shk0sh",
                 Toast.LENGTH_LONG).show();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginActivity.java
Patch:
@@ -16,6 +16,7 @@
 import android.widget.RelativeLayout;
 
 import com.evernote.android.state.State;
+import com.fastaccess.App;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
@@ -127,7 +128,7 @@ public static void start(@NonNull Activity activity, boolean isBasicAuth) {
     }
 
     @Override public void onRequire2Fa() {
-        Toasty.warning(this, getString(R.string.two_factors_otp_error)).show();
+        Toasty.warning(App.getInstance(), getString(R.string.two_factors_otp_error)).show();
         if (twoFactor == null) return;
         twoFactor.setVisibility(View.VISIBLE);
         hideProgress();

File: app/src/main/java/com/fastaccess/ui/modules/parser/LinksParserActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.support.annotation.Nullable;
 import android.widget.Toast;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -20,7 +21,7 @@ public class LinksParserActivity extends Activity {
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (Login.getUser() == null) {
-            Toast.makeText(this, R.string.please_login, Toast.LENGTH_SHORT).show();
+            Toast.makeText(App.getInstance(), R.string.please_login, Toast.LENGTH_SHORT).show();
             startActivity(new Intent(this, LoginActivity.class));
             finish();
             return;

File: app/src/main/java/com/fastaccess/ui/modules/profile/banner/BannerInfoActivity.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.annotation.Nullable;
 import android.widget.Button;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
@@ -74,7 +75,7 @@ public class BannerInfoActivity extends BaseActivity<BannerInfoMvp.View, BannerI
                 if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                     showFileChooser();
                 } else {
-                    Toasty.error(this, getString(R.string.permission_failed)).show();
+                    Toasty.error(App.getInstance(), getString(R.string.permission_failed)).show();
                 }
             }
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -353,7 +353,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         }
         long repoSize = repoModel.getSize() > 0 ? (repoModel.getSize() * 1000) : repoModel.getSize();
         date.setText(SpannableBuilder.builder()
-                .append(ParseDateFormat.getTimeAgo(repoModel.getUpdatedAt()))
+                .append(ParseDateFormat.getTimeAgo(repoModel.getPushedAt()))
                 .append(" ,")
                 .append(" ")
                 .append(Formatter.formatFileSize(this, repoSize)));

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -13,6 +13,7 @@
 import android.widget.FrameLayout;
 import android.widget.Toast;
 
+import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.PrefGetter;
@@ -46,7 +47,7 @@ public class AvatarLayout extends FrameLayout implements ImageLoadingListener {
     @OnLongClick(R.id.avatar) boolean onLongClick(@NonNull View view) {
         if (InputHelper.isEmpty(login)) return false;
         if (toast != null) toast.cancel();
-        toast = Toast.makeText(getContext(), view.getContentDescription(), Toast.LENGTH_SHORT);
+        toast = Toast.makeText(App.getInstance(), view.getContentDescription(), Toast.LENGTH_SHORT);
         toast.setGravity(Gravity.CENTER, 0, 0);
         toast.show();
         return true;

File: app/src/main/java/com/fastaccess/ui/widgets/ForegroundImageView.java
Patch:
@@ -8,6 +8,7 @@
 import android.view.Gravity;
 import android.widget.Toast;
 
+import com.fastaccess.App;
 import com.fastaccess.helper.ViewHelper;
 
 
@@ -25,7 +26,7 @@ public ForegroundImageView(@NonNull Context context, AttributeSet attrs) {
             setOnLongClickListener(view -> {
                 if (getContentDescription() != null) {
                     if (toast != null) toast.cancel();
-                    toast = Toast.makeText(getContext(), getContentDescription(), Toast.LENGTH_SHORT);
+                    toast = Toast.makeText(App.getInstance(), getContentDescription(), Toast.LENGTH_SHORT);
                     toast.setGravity(Gravity.CENTER, 0, 0);
                     toast.show();
                     return true;

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -9,7 +9,7 @@
 import com.fastaccess.helper.TypeFaceHelper;
 import com.fastaccess.provider.colors.ColorsProvider;
 import com.fastaccess.provider.emoji.EmojiManager;
-import com.fastaccess.provider.tasks.notification.NotificationJobService;
+import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 import com.fastaccess.provider.uil.UILProvider;
 import com.miguelbcr.io.rx_billing_service.RxBillingService;
 
@@ -55,7 +55,7 @@ private void init() {
         setupPreference();
         UILProvider.initUIL(this);
         TypeFaceHelper.generateTypeface(this);
-        NotificationJobService.scheduleJob(this);
+        NotificationSchedulerJobTask.scheduleJob(this);
         Shortbread.create(this);
         EmojiManager.load();
         ColorsProvider.load();

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -293,9 +293,9 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     }
 
     @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (requestCode == REFRESH_CODE) {
-            if (resultCode == RESULT_OK) {
-                recreate();
+        if (resultCode == RESULT_OK) {
+            if (requestCode == REFRESH_CODE) {
+                onThemeChanged();
             }
         }
         super.onActivityResult(requestCode, resultCode, data);

File: app/src/main/java/com/fastaccess/data/dao/LanguageColorModel.java
Patch:
@@ -12,8 +12,8 @@
  */
 
 @Getter @Setter @ToString public class LanguageColorModel implements Parcelable {
-    private String color;
-    private String url;
+    public String color;
+    public String url;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -65,7 +65,6 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
         }
         if (!filesListModel.isEmpty()) {
             recycler.setAdapter(new GistFilesAdapter(filesListModel, getPresenter()));
-            recycler.addKeyLineDivider();
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssueActivity.java
Patch:
@@ -38,7 +38,6 @@ public class CreateIssueActivity extends BaseActivity<CreateIssueMvp.View, Creat
     @BindView(R.id.title) TextInputLayout title;
     @BindView(R.id.description) FontTextView description;
     @BindView(R.id.submit) View submit;
-
     @State String repoId;
     @State String login;
     @State Issue issue;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -78,7 +78,6 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.SearchCodeModel;
 import com.fastaccess.helper.InputHelper;
@@ -22,7 +23,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 03 Dec 2016, 3:56 PM
@@ -124,9 +124,9 @@ public static SearchCodeFragment newInstance() {
         this.searchQuery = query;
         this.showRepoName = showRepoName;
         getLoadMore().reset();
+        recycler.scrollToPosition(0);
         adapter.clear();
         adapter.showRepoName(showRepoName);
-        recycler.scrollToPosition(0);
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());
             recycler.addOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.helper.InputHelper;
@@ -22,7 +23,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 03 Dec 2016, 3:56 PM
@@ -122,8 +122,8 @@ public static SearchIssuesFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        adapter.clear();
         recycler.scrollToPosition(0);
+        adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());
             recycler.addOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.InputHelper;
@@ -21,7 +22,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 03 Dec 2016, 3:56 PM
@@ -122,8 +122,8 @@ public static SearchReposFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        adapter.clear();
         recycler.scrollToPosition(0);
+        adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());
             recycler.addOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.helper.InputHelper;
@@ -21,7 +22,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 03 Dec 2016, 3:56 PM
@@ -120,8 +120,8 @@ public static SearchUsersFragment newInstance() {
     @Override public void onSetSearchQuery(@NonNull String query) {
         this.searchQuery = query;
         getLoadMore().reset();
-        adapter.clear();
         recycler.scrollToPosition(0);
+        adapter.clear();
         if (!InputHelper.isEmpty(query)) {
             recycler.removeOnScrollListener(getLoadMore());
             recycler.addOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/data/dao/types/StatusStateType.java
Patch:
@@ -11,7 +11,8 @@
 public enum StatusStateType {
     failure(R.drawable.ic_issues_small),
     pending(R.drawable.ic_time_small),
-    success(R.drawable.ic_check_small);
+    success(R.drawable.ic_check_small),
+    error(R.drawable.ic_issues_small);
 
     @DrawableRes private int drawableRes;
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathFragment.java
Patch:
@@ -12,6 +12,7 @@
 import android.widget.Spinner;
 
 import com.annimon.stream.Objects;
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.BranchesModel;
 import com.fastaccess.data.dao.model.RepoFile;
@@ -34,7 +35,6 @@
 import butterknife.OnClick;
 import butterknife.OnItemSelected;
 import butterknife.OnTouch;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 18 Feb 2017, 2:10 AM
@@ -226,6 +226,8 @@ public static RepoFilePathFragment newInstance(@NonNull String login, @NonNull S
         recycler.setAdapter(adapter);
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
+        } else if (getPresenter().getPaths().isEmpty() && !getPresenter().isApiCalled()) {
+            getPresenter().onFragmentCreated(getArguments());
         }
         setBranchesData(getPresenter().getBranches(), false);
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerFragment.java
Patch:
@@ -60,7 +60,6 @@ private static ViewerFragment newInstance(@NonNull Bundle bundle) {
     }
 
     @Override public void onSetImageUrl(@NonNull String url) {
-        onShowMdProgress();
         webView.loadImage(url);
         webView.setOnContentChangedListener(this);
         webView.setVisibility(View.VISIBLE);
@@ -107,7 +106,7 @@ private static ViewerFragment newInstance(@NonNull Bundle bundle) {
     @Override public void hideProgress() {
         loader.setVisibility(View.GONE);
         stateLayout.hideProgress();
-        stateLayout.showReload(getPresenter().downloadedStream() == null ? 0 : 1);
+        if (!getPresenter().isImage()) stateLayout.showReload(getPresenter().downloadedStream() == null ? 0 : 1);
     }
 
     @Override public void showErrorMessage(@NonNull String msgRes) {

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -24,7 +24,7 @@ public class MarkDownProvider {
     private static final String[] IMAGE_EXTENSIONS = {".png", ".jpg", ".jpeg", ".gif", ".svg"};
 
     private static final String[] MARKDOWN_EXTENSIONS = {
-            ".md", ".mkdn", ".mdwn", ".mdown", ".markdown", ".mkd", ".mkdown", ".ron", ".rst"
+            ".md", ".mkdn", ".mdwn", ".mdown", ".markdown", ".mkd", ".mkdown", ".ron", ".rst", "adoc"
     };
 
     private static final String[] ARCHIVE_EXTENSIONS = {

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -64,7 +64,6 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
             if (getIntent() != null && getIntent().getBooleanExtra(SlackBottomSheetDialog.TAG, false)) {
                 new SlackBottomSheetDialog().show(getSupportFragmentManager(), SlackBottomSheetDialog.TAG);
             }
-            checkPurchases(null);
         }
         selectHome(false);
         hideShowShadow(navType == MainMvp.FEEDS);

File: app/src/main/java/com/prettifier/pretty/callback/MarkDownInterceptorInterface.java
Patch:
@@ -18,14 +18,14 @@ public MarkDownInterceptorInterface(PrettifyWebView prettifyWebView) {
     @JavascriptInterface public void startIntercept() {
         if (prettifyWebView != null) {
             prettifyWebView.setInterceptTouch(true);
-            prettifyWebView.setEnableNestedScrolling(false);
+//            prettifyWebView.setEnableNestedScrolling(false);
         }
     }
 
     @JavascriptInterface public void stopIntercept() {
         if (prettifyWebView != null) {
             prettifyWebView.setInterceptTouch(false);
-            prettifyWebView.setEnableNestedScrolling(true);
+//            prettifyWebView.setEnableNestedScrolling(true);
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -65,6 +65,8 @@ interface View extends BaseMvp.FAView, FilterAddChooserListener {
 
 
         boolean hasUserInteractedWithView();
+
+        void disableIssueTab();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSelectionListener {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -268,7 +268,7 @@ private void callApi(int navTyp) {
 
     @Override public void onMenuItemSelect(@IdRes int id, int position, boolean fromUser) {
         if (id == R.id.issues && (getRepo() != null && !getRepo().isHasIssues())) {
-            sendToView(view -> view.showMessage(R.string.error, R.string.repo_issues_is_disabled));
+            sendToView(RepoPagerMvp.View::disableIssueTab);
             return;
         }
         if (getView() != null && isViewAttached() && fromUser) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerFragment.java
Patch:
@@ -101,6 +101,7 @@ private static ViewerFragment newInstance(@NonNull Bundle bundle) {
     @Override public void hideProgress() {
         loader.setVisibility(View.GONE);
         stateLayout.hideProgress();
+        stateLayout.showReload(getPresenter().downloadedStream() == null ? 0 : 1);
     }
 
     @Override public void showErrorMessage(@NonNull String msgRes) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -33,7 +33,9 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
         throwable.printStackTrace();
         int code = RestProvider.getErrorCode(throwable);
         if (code == 404) {
-            sendToView(view -> view.onShowError(isRepo ? R.string.no_readme_found : R.string.no_file_found));
+            if (!isRepo) {
+                sendToView(view -> view.onShowError(R.string.no_file_found));
+            }
         } else {
             if (code == 406) {
                 sendToView(view -> view.openUrl(url));

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -106,6 +106,8 @@ interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSele
         void onDeleteRepo();
 
         void onPinUnpinRepo();
+
+        void updatePinned(int forks, int stars, int watching);
     }
 
     interface TabsBadgeListener {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -75,7 +75,7 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
         filterOptions.setIsPersonalProfile(TextUtils.equals(currentLoggedIn, username));
         makeRestCall(TextUtils.equals(currentLoggedIn, username)
                      ? RestProvider.getUserService().getRepos(filterOptions.getQueryMap(), page)
-                     : RestProvider.getUserService().getRepos(parameter, filterOptions.getQueryMap(),  page),
+                     : RestProvider.getUserService().getRepos(parameter, filterOptions.getQueryMap(), page),
                 repoModelPageable -> {
                     lastPage = repoModelPageable.getLast();
                     if (getCurrentPage() == 1) {
@@ -125,6 +125,6 @@ public void onSortOptionSelected(String selectedSortOption) {
 
     @Override
     public void onSortDirectionSelected(String selectedSortDirection) {
-        filterOptions.setsortDirection(selectedSortDirection);
+        filterOptions.setSortDirection(selectedSortDirection);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -5,6 +5,7 @@
 import android.support.annotation.Nullable;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.CommitFileListModel;
 import com.fastaccess.data.dao.CommitFileModel;
@@ -22,7 +23,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 15 Feb 2017, 10:16 PM
@@ -64,7 +64,6 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
         refresh.setEnabled(false);
         stateLayout.setEmptyText(R.string.no_files);
         recycler.setEmptyView(stateLayout, refresh);
-        recycler.addKeyLineDivider();
         adapter = new CommitFilesAdapter(getPresenter().getFiles(), this);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -120,7 +120,6 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
-        recycler.addKeyLineDivider();
         adapter = new RepoFilesAdapter(getPresenter().getFiles());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -106,6 +106,8 @@ interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSele
         void onDeleteRepo();
 
         void onPinUnpinRepo();
+
+        void updatePinned(int forks, int stars, int watching);
     }
 
     interface TabsBadgeListener {

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -452,7 +452,8 @@ protected void setupNavigationView(@Nullable NavigationView extraNav) {
                         view.findViewById(R.id.email).setVisibility(View.GONE);
                     }
                     view.findViewById(R.id.userHolder).setOnClickListener(v -> UserPagerActivity.startActivity(this, userModel.getLogin()));
-
+                    view.findViewById(R.id.donatedIcon).setVisibility(PrefGetter.isProEnabled() || PrefGetter.isAmlodEnabled()
+                                                                      ? View.VISIBLE : View.GONE);
                 }
             }
         }

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -30,8 +30,8 @@
     @Column(unique = true) String repoFullName;
     @Convert(RepoConverter.class) Repo pinnedRepo;
 
-    public static Single<PinnedRepos> save(@NonNull PinnedRepos entity) {
-        return RxHelper.getSingle(App.getInstance().getDataStore().insert(entity));
+    public static Single<PinnedRepos> update(@NonNull PinnedRepos entity) {
+        return RxHelper.getSingle(App.getInstance().getDataStore().update(entity));
     }
 
     public static boolean pinUpin(@NonNull Repo repo) {

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -85,6 +85,9 @@ Observable<Pageable<Commit>> getCommits(@Path("owner") String owner, @Path("repo
     @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<Pageable<Release>> getReleases(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
+    @NonNull @GET("repos/{owner}/{repo}/releases/latest")
+    Observable<Release> getLatestRelease(@Path("owner") String owner, @Path("repo") String repo);
+
     @NonNull @GET("repos/{owner}/{repo}/tags")
     @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<Pageable<Release>> getTagReleases(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -58,7 +58,8 @@ public static void copyToClipboard(@NonNull Context context, @NonNull String uri
     }
 
     public static boolean isNightMode(@NonNull Resources resources) {
-        return PrefGetter.getThemeType(resources) == PrefGetter.DARK;
+        int themeType = PrefGetter.getThemeType(resources);
+        return themeType == PrefGetter.DARK || themeType == PrefGetter.AMLOD;
     }
 
     @SuppressWarnings("StringBufferReplaceableByString") public static String getFastHubIssueTemplate() {

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.PullsIssuesParser;
 import com.fastaccess.data.dao.model.Issue;
@@ -26,7 +27,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 09 Apr 2017, 7:13 PM
@@ -157,7 +157,6 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (savedInstanceState != null) {

File: app/src/main/java/com/fastaccess/ui/modules/main/donation/DonationActivity.java
Patch:
@@ -6,6 +6,8 @@
 import android.support.design.widget.AppBarLayout;
 import android.view.View;
 
+import com.crashlytics.android.answers.Answers;
+import com.crashlytics.android.answers.PurchaseEvent;
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
 import com.fastaccess.helper.AnimHelper;
@@ -94,6 +96,7 @@ private void onProceed(@NonNull String productKey) {
                 .doFinally(() -> setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_FULL_USER))
                 .subscribe((purchase, throwable) -> {
                     if (throwable == null) {
+                        Answers.getInstance().logPurchase(new PurchaseEvent().putItemName(productKey));
                         showMessage(R.string.success, R.string.success_purchase_message);
                     } else {
                         if (throwable instanceof RxBillingServiceException) {

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.types.IssueState;
@@ -25,7 +26,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 25 Mar 2017, 11:48 PM
@@ -128,12 +128,11 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
-        recycler.addDivider();
         adapter = new IssuesAdapter(getPresenter().getIssues(), false, true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
+        recycler.addDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.data.dao.types.IssueState;
@@ -25,7 +26,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 25 Mar 2017, 11:48 PM
@@ -147,10 +147,9 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
         refresh.setOnRefreshListener(this);
         adapter = new PullRequestAdapter(getPresenter().getPullRequests(), false, true);
         adapter.setListener(getPresenter());
-        recycler.addDivider();
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
+        recycler.addDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getPullRequests().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsFragment.java
Patch:
@@ -80,7 +80,6 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addDivider(NotificationsViewHolder.class);
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersFragment.java
Patch:
@@ -68,7 +68,6 @@ public static ProfileFollowersFragment newInstance(@NonNull String username) {
         adapter = new UsersAdapter(getPresenter().getFollowers());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (getPresenter().getFollowers().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposFragment.java
Patch:
@@ -70,7 +70,6 @@ public static OrgReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposFragment.java
Patch:
@@ -69,7 +69,6 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredFragment.java
Patch:
@@ -86,7 +86,6 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
@@ -33,7 +34,6 @@
 import java.util.List;
 
 import butterknife.BindView;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 11 Nov 2016, 12:36 PM
@@ -68,7 +68,6 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
         stateLayout.setEmptyText(R.string.no_comments);
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setItemViewCacheSize(30);
-        recycler.addKeyLineDivider();
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true, this);

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -155,7 +155,7 @@ private int getLineNo(@Nullable String url) {
 
     public void setGithubContent(@NonNull String source, @Nullable String baseUrl) {
         addJavascriptInterface(new MarkDownInterceptorInterface(this), "Android");
-        String page = GithubHelper.generateContent(source, baseUrl, AppHelper.isNightMode(getResources()));
+        String page = GithubHelper.generateContent(getContext(), source, baseUrl, AppHelper.isNightMode(getResources()));
         post(() -> loadDataWithBaseURL("file:///android_asset/md/", page, "text/html", "utf-8", null));
     }
 

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractGist.java
Patch:
@@ -172,7 +172,7 @@ public static Observable<Gist> getGist(@NonNull String gistId) {
                 if (!files.isEmpty()) {
                     FilesListModel filesListModel = files.get(0);
                     if (!InputHelper.isEmpty(filesListModel.getFilename()) && filesListModel.getFilename().trim().length() > 2) {
-                        spannableBuilder.append(" ").append("/").append(" ")
+                        spannableBuilder.append(" ")
                                 .append(filesListModel.getFilename());
                     }
                 }

File: app/src/main/java/com/prettifier/pretty/NestedWebView.java
Patch:
@@ -42,7 +42,6 @@ public NestedWebView(Context context, AttributeSet attrs, int defStyleAttr, int
 
     @SuppressLint("ClickableViewAccessibility") @Override public boolean onTouchEvent(MotionEvent ev) {
         boolean returnValue;
-
         MotionEvent event = MotionEvent.obtain(ev);
         final int action = MotionEventCompat.getActionMasked(event);
         if (action == MotionEvent.ACTION_DOWN) {
@@ -125,5 +124,7 @@ public NestedWebView(Context context, AttributeSet attrs, int defStyleAttr, int
         return mChildHelper.dispatchNestedPreFling(velocityX, velocityY);
     }
 
+
+
 }
 

File: app/src/main/java/com/prettifier/pretty/callback/MarkDownInterceptorInterface.java
Patch:
@@ -18,12 +18,14 @@ public MarkDownInterceptorInterface(PrettifyWebView prettifyWebView) {
     @JavascriptInterface public void startIntercept() {
         if (prettifyWebView != null) {
             prettifyWebView.setInterceptTouch(true);
+            prettifyWebView.setEnableNestedScrolling(false);
         }
     }
 
     @JavascriptInterface public void stopIntercept() {
         if (prettifyWebView != null) {
             prettifyWebView.setInterceptTouch(false);
+            prettifyWebView.setEnableNestedScrolling(true);
         }
     }
 }

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -163,8 +163,7 @@ public static List<FragmentPagerAdapterModel> buildForNotifications(@NonNull Con
 
     public static List<FragmentPagerAdapterModel> buildForGists(@NonNull Context context) {
 
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.my_gists), ProfileGistsFragment.newInstance(Login.getUser()
-                        .getLogin())),
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.my_gists), ProfileGistsFragment.newInstance(Login.getUser().getLogin())),
                 new FragmentPagerAdapterModel(context.getString(R.string.public_gists), GistsFragment.newInstance()))
                 .collect(Collectors.toList());
     }

File: app/src/main/java/com/fastaccess/data/dao/GitCommitModel.java
Patch:
@@ -49,8 +49,8 @@ protected GitCommitModel(Parcel in) {
         this.committer = in.readParcelable(User.class.getClassLoader());
         this.tree = in.readParcelable(User.class.getClassLoader());
         this.distincted = in.readByte() != 0;
-        in.readList(parents, parents.getClass().getClassLoader());
-        in.readList(this.parents, GitCommitModel.class.getClassLoader());
+        this.parents = new GitCommitListModel();
+        in.readList(this.parents, this.parents.getClass().getClassLoader());
         this.commentCount = in.readInt();
     }
 

File: app/src/main/java/com/fastaccess/helper/ParseDateFormat.java
Patch:
@@ -60,7 +60,7 @@ private ParseDateFormat() {
         return INSTANCE;
     }
 
-    public static String getDateByDays(int days) {
+    private static String getDateByDays(int days) {
         Calendar cal = Calendar.getInstance();
         SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
         cal.add(Calendar.DAY_OF_YEAR, days);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/GistsViewHolder.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Gist;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -26,6 +27,7 @@ public class GistsViewHolder extends BaseViewHolder<Gist> {
     @BindView(R.id.date) FontTextView date;
     private boolean isFromProfile;
 
+
     private GistsViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter, boolean isFromProfile) {
         super(itemView, adapter);
         title.setMaxLines(2);
@@ -40,7 +42,6 @@ public static GistsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullabl
         }
     }
 
-
     @Override public void bind(@NonNull Gist item) {
         if (!isFromProfile) {
             if (avatar != null) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistActivity.java
Patch:
@@ -198,7 +198,6 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
         hideProgress();
         Gist gistsModel = getPresenter().getGist();
         if (gistsModel == null) {
-            finish();
             return;
         }
         String url = gistsModel.getOwner() != null ? gistsModel.getOwner().getAvatarUrl() :

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -41,8 +41,7 @@ public class GistFilesListFragment extends BaseFragment<GistFilesListMvp.View, G
     public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsModel) {
         GistFilesListFragment view = new GistFilesListFragment();
         view.setArguments(Bundler.start()
-                .putParcelableArrayList(BundleConstant.ITEM,
-                        gistsModel.values() != null ? new ArrayList<>(gistsModel.values()) : new ArrayList<FilesListModel>())
+                .putParcelableArrayList(BundleConstant.ITEM, new ArrayList<>(gistsModel.values()))
                 .end());
         return view;
     }

File: app/src/main/java/com/prettifier/pretty/helper/PrettifyHelper.java
Patch:
@@ -8,15 +8,15 @@
 
 public class PrettifyHelper {
 
-    @NonNull private static String getHtmlContent(@NonNull String css, @NonNull String text, @NonNull String wrapStyle) {
+    @NonNull private static String getHtmlContent(@NonNull String css, @NonNull String text, @NonNull String wrapStyle, boolean isDark) {
         return "<!DOCTYPE html>\n" +
                 "<html>\n" +
                 "<head>\n" +
                 "    <meta charset=\"utf-8\">\n" +
                 "    <link rel=\"stylesheet\" href=\"./styles/" + css + "\">\n" +
                 "    " + wrapStyle + "\n" +
                 "</head>\n" +
-                "<body onload=\"" + (textTooLarge(text) ? "" : "prettyPrint()") + "\">\n" +
+                "<body style=\"" + (isDark && textTooLarge(text) ? "color:white;" : "") + "\" onload=\"" + (textTooLarge(text) ? "" : "PR.prettyPrint()") + "\">\n" +
                 "<pre class=\"prettyprint linenums\">" + text + "</pre>\n" +
                 "<script src=\"./js/prettify.js\"></script>\n" +
                 "<script>\n" +
@@ -56,7 +56,7 @@ public class PrettifyHelper {
 
 
     @NonNull public static String generateContent(@NonNull String source, boolean isDark, boolean wrap) {
-        return getHtmlContent(getStyle(isDark), getFormattedSource(source), wrap ? WRAPPED_STYLE : "");
+        return getHtmlContent(getStyle(isDark), getFormattedSource(source), wrap ? WRAPPED_STYLE : "", isDark);
     }
 
     @NonNull private static String getFormattedSource(@NonNull String source) {

File: app/src/main/java/com/fastaccess/ui/widgets/DiffLineSpan.java
Patch:
@@ -82,7 +82,8 @@ private void apply(TextPaint paint) {
                         color = patchDeletionColor;
                     } else if (token.startsWith("@@")) {
                         color = patchRefColor;
-                    } else if (firstChar == '\\') {
+                    }
+                    if (token.startsWith("\\ No")) {
                         token = token.replace("\\ No newline at end of file", "");
                         index = i;
                     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -23,6 +23,7 @@
 import android.widget.LinearLayout.LayoutParams;
 import android.widget.RelativeLayout;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.User;
@@ -52,7 +53,6 @@
 import butterknife.BindView;
 import butterknife.OnClick;
 import es.dmoral.toasty.Toasty;
-import com.evernote.android.state.State;
 
 import static android.view.Gravity.TOP;
 import static android.view.View.GONE;
@@ -178,6 +178,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
             description.setVisibility(GONE);
         }
         avatarLayout.setUrl(userModel.getAvatarUrl(), null);
+        avatarLayout.setOnAvatarClick(v -> userInformation.callOnClick());
         organization.setText(InputHelper.toNA(userModel.getCompany()));
         location.setText(InputHelper.toNA(userModel.getLocation()));
         email.setText(InputHelper.toNA(userModel.getEmail()));

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -74,7 +74,7 @@ private FragmentPagerAdapterModel(String title, Fragment fragment) {
 
     @NonNull public static List<FragmentPagerAdapterModel> buildForProfile(@NonNull Context context, @NonNull String login) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.overview), ProfileOverviewFragment.newInstance(login)),
-                new FragmentPagerAdapterModel(context.getString(R.string.feeds), ProfileEventsFragment.Companion.newInstance(login)),
+                new FragmentPagerAdapterModel(context.getString(R.string.feed), ProfileEventsFragment.Companion.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.repos), ProfileReposFragment.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.starred), ProfileStarredFragment.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.gists), ProfileGistsFragment.newInstance(login)),

File: app/src/main/java/com/fastaccess/data/service/UserRestService.java
Patch:
@@ -47,6 +47,9 @@ Observable<Pageable<Repo>> getRepos(@Path("username") @NonNull String username,
     @GET("users/{username}/starred") Observable<Pageable<Repo>>
     getStarred(@Path("username") @NonNull String username, @Query("page") int page);
 
+    @GET("users/{username}/starred?per_page=1") Observable<Pageable<Repo>>
+    getStarredCount(@Path("username") @NonNull String username);
+
     @GET("users/{username}/following")
     Observable<Pageable<User>> getFollowing(@Path("username") @NonNull String username, @Query("page") int page);
 

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -21,7 +21,6 @@ public static <T> Observable<T> getObserver(@NonNull Observable<T> observable) {
 
     public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
         return getObserver(observable)
-                .onErrorReturn(throwable -> (T) new Object())
                 .doOnError(Throwable::printStackTrace);
     }
 

File: app/src/main/java/com/fastaccess/provider/timeline/handler/ListsHandler.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.annotation.Nullable;
 import android.text.SpannableStringBuilder;
 
-import com.fastaccess.helper.Logger;
 import com.fastaccess.ui.widgets.SpannableBuilder;
 
 import net.nightwhistler.htmlspanner.TagNodeHandler;
@@ -47,7 +46,6 @@ private String getParentName(TagNode node) {
         TodoItems todoItem = null;
         if (node.getChildTags() != null && node.getChildTags().length > 0) {
             for (TagNode tagNode : node.getChildTags()) {
-                Logger.e(tagNode.getName(), tagNode.getAttributes(), tagNode.getText());
                 if (tagNode.getName() != null && tagNode.getName().equals("input")) {
                     todoItem = new TodoItems();
                     todoItem.isChecked = tagNode.getAttributeByName("checked") != null;

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredMvp.java
Patch:
@@ -22,6 +22,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onNotifyAdapter(@Nullable List<Repo> items, int page);
 
         @NonNull OnLoadMore<String> getLoadMore();
+
+        void onUpdateCount(int starredCount);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -116,6 +116,7 @@ public class IssueTimelineFragment extends BaseFragment<IssueTimelineMvp.View, I
         stateLayout.setOnReloadListener(this);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        fastScroller.setOnLoadMore(getLoadMore());
         fastScroller.setVisibility(View.VISIBLE);
         fastScroller.attachRecyclerView(recycler);
         recycler.addDivider(TimelineCommentsViewHolder.class);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -100,6 +100,7 @@ public class PullRequestTimelineFragment extends BaseFragment<PullRequestTimelin
         stateLayout.setOnReloadListener(this);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        fastScroller.setOnLoadMore(getLoadMore());
         fastScroller.setVisibility(View.VISIBLE);
         fastScroller.attachRecyclerView(recycler);
         recycler.addDivider(TimelineCommentsViewHolder.class);

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerMvp.java
Patch:
@@ -4,14 +4,15 @@
 
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.modules.profile.ProfilePagerMvp;
+import com.fastaccess.ui.modules.repos.RepoPagerMvp;
 
 /**
  * Created by Kosh on 04 Dec 2016, 1:11 PM
  */
 
 public interface UserPagerMvp {
 
-    interface View extends BaseMvp.FAView, ProfilePagerMvp.View {
+    interface View extends BaseMvp.FAView, ProfilePagerMvp.View, RepoPagerMvp.TabsBadgeListener {
         void onInitOrg(boolean isMember);
     }
 

File: app/src/main/java/com/fastaccess/data/dao/SimpleUrlsModel.java
Patch:
@@ -14,8 +14,9 @@
 @Getter @Setter
 public class SimpleUrlsModel implements Parcelable {
 
-    private String item;
-    private String url;
+    public String item;
+    public String url;
+
     public SimpleUrlsModel(String item, String url) {
         this.item = item;
         this.url = url;

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -338,7 +338,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
                 if (uri.getQueryParameterNames() != null && !uri.getQueryParameterNames().isEmpty()) {
                     query = uri.getQueryParameter("since");
                 }
-                return TrendingActivity.TrendingIntent.getTrendingIntent(context, lang, query);
+                return TrendingActivity.Companion.getTrendingIntent(context, lang, query);
             }
             return null;
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -139,7 +139,9 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
             if (requestCode == BundleConstant.REQUEST_CODE) {
                 Bundle bundle = data.getExtras();
                 Issue issueModel = bundle.getParcelable(BundleConstant.ITEM);
-                if (issueModel != null) getPresenter().onUpdateIssue(issueModel);
+                if (issueModel != null) {
+                    getPresenter().onUpdateIssue(issueModel);
+                }
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -246,7 +246,9 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
     }
 
     @Override public void onUpdateIssue(@NonNull Issue issue) {
-        this.issueModel = issue;
+        this.issueModel.setBody(issue.getBody());
+        this.issueModel.setBodyHtml(issue.getBodyHtml());
+        this.issueModel.setTitle(issue.getTitle());
         this.issueModel.setLogin(login);
         this.issueModel.setRepoId(repoId);
         manageObservable(issueModel.save(issueModel).toObservable());

File: app/src/main/java/com/fastaccess/data/service/TrendingService.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.data.service;
 
+
 import com.fastaccess.data.dao.TrendingResponse;
 import com.github.florent37.retrojsoup.annotations.Select;
 

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -60,7 +60,7 @@ public class RestProvider {
             .setPrettyPrinting()
             .create();
 
-    public static OkHttpClient provideOkHttpClient(boolean isRawString) {
+    private static OkHttpClient provideOkHttpClient(boolean isRawString) {
         if (okHttpClient == null) {
             OkHttpClient.Builder client = new OkHttpClient.Builder();
             if (BuildConfig.DEBUG) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.view.View;
 import android.widget.CheckBox;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.LicenseModel;
 import com.fastaccess.data.dao.NameParser;
@@ -58,7 +59,6 @@
 import butterknife.OnCheckedChanged;
 import butterknife.OnClick;
 import butterknife.OnLongClick;
-import com.evernote.android.state.State;
 import it.sephiroth.android.library.bottomnavigation.BottomNavigation;
 import uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt;
 
@@ -313,7 +313,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @Override public void onFinishActivity() {
-//        finish();
+        //do nothing here, github might return 404 if even the repo don't have anything but issues.
     }
 
     @Override public void onInitRepo() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssueActivity.java
Patch:
@@ -11,6 +11,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 
+import com.evernote.android.state.State;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.model.PullRequest;
@@ -27,7 +28,6 @@
 import butterknife.BindView;
 import butterknife.OnClick;
 import butterknife.OnTouch;
-import com.evernote.android.state.State;
 
 /**
  * Created by Kosh on 19 Feb 2017, 12:33 PM
@@ -127,7 +127,7 @@ public static void startForResult(@NonNull Activity activity, @NonNull Intent in
 
     @Override public void onSetCode(@NonNull CharSequence charSequence) {
         this.savedText = charSequence;
-        MarkDownProvider.setMdText(description, InputHelper.toString(charSequence));
+        MarkDownProvider.setMdText(description, InputHelper.toString(savedText));
     }
 
     @Override public void onTitleError(boolean isEmptyTitle) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssuePresenter.java
Patch:
@@ -12,6 +12,7 @@
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -26,6 +27,7 @@ public class CreateIssuePresenter extends BasePresenter<CreateIssueMvp.View> imp
             if (intent != null && intent.getExtras() != null) {
                 CharSequence charSequence = intent.getExtras().getCharSequence(BundleConstant.EXTRA);
                 if (!InputHelper.isEmpty(charSequence)) {
+                    Logger.e(charSequence);
                     sendToView(view -> view.onSetCode(charSequence));
                 }
             }
@@ -61,6 +63,7 @@ public class CreateIssuePresenter extends BasePresenter<CreateIssueMvp.View> imp
                     makeRestCall(RestProvider.getIssueService().editIssue(login, repo, number, requestModel),
                             issueModel -> {
                                 if (issueModel != null) {
+                                    Logger.e(issueModel.getBodyHtml());
                                     sendToView(view -> view.onSuccessSubmission(issueModel));
                                 } else {
                                     sendToView(view -> view.showMessage(R.string.error, R.string.error_creating_issue));

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -86,8 +86,7 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
                                                                    @NonNull String login, @NonNull String url,
                                                                    @NonNull String defaultBranch) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.readme), ViewerFragment.newInstance(url, true)),
-                new FragmentPagerAdapterModel(context.getString(R.string.files), RepoFilePathFragment.newInstance(login, repoId, null,
-                        defaultBranch)),
+                new FragmentPagerAdapterModel(context.getString(R.string.files), RepoFilePathFragment.newInstance(login, repoId, null, defaultBranch)),
                 new FragmentPagerAdapterModel(context.getString(R.string.commits), RepoCommitsFragment.newInstance(repoId, login, defaultBranch)),
                 new FragmentPagerAdapterModel(context.getString(R.string.releases), RepoReleasesFragment.newInstance(repoId, login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.contributors), RepoContributorsFragment.newInstance(repoId, login)))

File: app/src/main/java/com/fastaccess/data/dao/Pageable.java
Patch:
@@ -23,7 +23,7 @@ public class Pageable<M extends Parcelable> implements Parcelable {
     private int last;
     private int totalCount;
     private boolean incompleteResults;
-    private List<M> items;
+    public List<M> items;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -21,7 +21,7 @@ public static <T> Observable<T> getObserver(@NonNull Observable<T> observable) {
 
     public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
         return getObserver(observable)
-                .onErrorReturn(throwable -> null)
+                .onErrorReturn(throwable -> (T) new Object())
                 .doOnError(Throwable::printStackTrace);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -145,7 +145,7 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsFragment.java
Patch:
@@ -54,7 +54,7 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.fab_small_grid_refresh_list;
+        return R.layout.fab_micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -116,7 +116,7 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestFragment.java
Patch:
@@ -134,7 +134,7 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -82,7 +82,7 @@ public static AllNotificationsFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsFragment.java
Patch:
@@ -69,7 +69,7 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -55,7 +55,7 @@ public static PinnedReposFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/feeds/OrgFeedsFragment.java
Patch:
@@ -51,7 +51,7 @@ public static OrgFeedsFragment newInstance(@NonNull String org) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposFragment.java
Patch:
@@ -53,7 +53,7 @@ public static OrgReposFragment newInstance(@NonNull String username) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamFragment.java
Patch:
@@ -53,7 +53,7 @@ public static OrgTeamFragment newInstance(@NonNull String username) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/repos/TeamReposFragment.java
Patch:
@@ -53,7 +53,7 @@ public static TeamReposFragment newInstance(long id) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -267,7 +267,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
     }
 
     @Override public void onUserNotFound() {
-        try {if (isSafe()) getActivity().finish();} catch (Exception ignored) {}
+        showMessage(R.string.error, R.string.no_user_found);
     }
 
     @Override public void onImagePosted(@Nullable String link) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposFragment.java
Patch:
@@ -53,7 +53,7 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredFragment.java
Patch:
@@ -53,7 +53,7 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -313,7 +313,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @Override public void onFinishActivity() {
-        finish();
+//        finish();
     }
 
     @Override public void onInitRepo() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -60,7 +60,7 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.fab_small_grid_refresh_list;
+        return R.layout.fab_micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesFragment.java
Patch:
@@ -118,8 +118,7 @@ public void onHidePromptComplete() {
                                 })
                                 .show());
                 adapter.notifyDataSetChanged();// call it notify the adapter to show the guide immediately.
-                ActivityHelper.showDismissHints(getContext(), () -> {
-                });
+                ActivityHelper.showDismissHints(getContext(), () -> {});
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesFragment.java
Patch:
@@ -86,7 +86,7 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -89,7 +89,7 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -225,9 +225,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         menu.findItem(R.id.closeIssue).setVisible(isOwner || isCollaborator);
         menu.findItem(R.id.lockIssue).setVisible(isOwner || isCollaborator);
         menu.findItem(R.id.labels).setVisible(getPresenter().isRepoOwner() || isCollaborator);
-        if (isOwner) {
+        if (isOwner || isCollaborator) {
             if (getPresenter().getIssue() == null) return super.onPrepareOptionsMenu(menu);
-            closeIssue.setTitle(getPresenter().getIssue().getState() == IssueState.closed ? getString(R.string.re_open) : getString(R.string.close));
             lockIssue.setTitle(isLocked ? getString(R.string.unlock_issue) : getString(R.string.lock_issue));
         }
         return super.onPrepareOptionsMenu(menu);
@@ -238,8 +237,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         if (getPresenter().getIssue() == null) {
             return;
         }
-        supportInvalidateOptionsMenu();
         Issue issueModel = getPresenter().getIssue();
+        invalidateOptionsMenu();
         setTitle(String.format("#%s", issueModel.getNumber()));
         User userModel = issueModel.getUser();
         title.setText(issueModel.getTitle());

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -84,7 +84,7 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.fab_small_grid_refresh_list;
+        return R.layout.fab_micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestFragment.java
Patch:
@@ -79,7 +79,7 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsFragment.java
Patch:
@@ -58,7 +58,7 @@ public static PullRequestCommitsFragment newInstance(@NonNull String repoId, @No
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -65,7 +65,7 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.fab_small_grid_refresh_list;
+        return R.layout.fab_micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesFragment.java
Patch:
@@ -72,7 +72,7 @@ public static SearchIssuesFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposFragment.java
Patch:
@@ -71,7 +71,7 @@ public static SearchReposFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.small_grid_refresh_list;
+        return R.layout.micro_grid_refresh_list;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -173,7 +173,9 @@ public static List<FragmentPagerAdapterModel> buildForMyIssues(@NonNull Context
                 new FragmentPagerAdapterModel(context.getString(R.string.assigned),
                         MyIssuesFragment.newInstance(IssueState.open, MyIssuesType.ASSIGNED)),
                 new FragmentPagerAdapterModel(context.getString(R.string.mentioned),
-                        MyIssuesFragment.newInstance(IssueState.open, MyIssuesType.MENTIONED)))
+                        MyIssuesFragment.newInstance(IssueState.open, MyIssuesType.MENTIONED)),
+                new FragmentPagerAdapterModel(context.getString(R.string.participated),
+                        MyIssuesFragment.newInstance(IssueState.open, MyIssuesType.PARTICIPATED)))
                 .collect(Collectors.toList());
     }
 

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -62,6 +62,7 @@ public static boolean pinUpin(@NonNull Repo repo) {
                 .firstOrNull();
     }
 
+
     public static boolean isPinned(@NonNull String repoFullName) {
         return get(repoFullName) != null;
     }

File: app/src/main/java/com/fastaccess/data/dao/types/MyIssuesType.java
Patch:
@@ -8,5 +8,6 @@ public enum MyIssuesType {
     CREATED,
     ASSIGNED,
     MENTIONED,
-    REVIEW
+    REVIEW,
+    PARTICIPATED
 }

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -25,8 +25,8 @@ public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable
                 .doOnError(Throwable::printStackTrace);
     }
 
-    public static <T> Single<T> getSingle(@NonNull Single<T> observable) {
-        return observable
+    public static <T> Single<T> getSingle(@NonNull Single<T> single) {
+        return single
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread());
     }

File: app/src/main/java/com/fastaccess/ui/base/mvp/BaseMvp.java
Patch:
@@ -49,10 +49,12 @@ interface FAPresenter {
 
         void onRestoreInstanceState(Bundle outState);
 
-        void manageSubscription(@Nullable Disposable... disposables);
+        void manageDisposable(@Nullable Disposable... disposables);
 
         <T> void manageObservable(@Nullable Observable<T> observable);
 
+        void manageViewDisposable(@Nullable Disposable... disposables);
+
         boolean isApiCalled();
 
         void onSubscribed();

File: app/src/main/java/com/fastaccess/ui/modules/changelog/ChangelogPresenter.java
Patch:
@@ -15,7 +15,7 @@
     private String html;
 
     @Override public void onLoadChangelog() {
-        manageSubscription(RxHelper.getObserver(ChangelogProvider.getChangelog(App.getInstance()))
+        manageDisposable(RxHelper.getObserver(ChangelogProvider.getChangelog(App.getInstance()))
                 .subscribe(s -> {
                     this.html = s;
                     sendToView(view -> view.onChangelogLoaded(html));

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -69,7 +69,8 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
 
     @Override public void onWorkOffline() {
         if (gistsModels.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Gist.getGists().toObservable()).subscribe(gists -> sendToView(view -> view.onNotifyAdapter(gists, 1))));
+            manageDisposable(RxHelper.getObserver(Gist.getGists().toObservable())
+                    .subscribe(gists -> sendToView(view -> view.onNotifyAdapter(gists, 1))));
         } else {
             sendToView(GistsMvp.View::hideProgress);
         }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistPresenter.java
Patch:
@@ -53,7 +53,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onDeleteGist() {
         if (getGist() == null) return;
-        manageSubscription(RxHelper.getObserver(RestProvider.getGistService().deleteGist(getGist().getGistId()))
+        manageDisposable(RxHelper.getObserver(RestProvider.getGistService().deleteGist(getGist().getGistId()))
                 .doOnSubscribe(disposable -> onSubscribed())
                 .doOnNext(booleanResponse -> {
                     if (booleanResponse.code() == 204) {
@@ -100,7 +100,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onWorkOffline(@NonNull String gistId) {
         if (gist == null) {
-            manageSubscription(RxHelper.getObserver(Gist.getGist(gistId))
+            manageDisposable(RxHelper.getObserver(Gist.getGist(gistId))
                     .subscribe(gistsModel -> {
                         this.gist = gistsModel;
                         sendToView(GistMvp.View::onSetupDetails);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -95,7 +95,7 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String gistId) {
         if (comments.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Comment.getGistComments(gistId).toObservable())
+            manageDisposable(RxHelper.getObserver(Comment.getGistComments(gistId).toObservable())
                     .subscribe(localComments -> sendToView(view -> view.onNotifyAdapter(localComments, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -29,7 +29,7 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
 
 
     MainPresenter() {
-        manageSubscription(RxHelper.getObserver(RestProvider.getUserService().getUser())
+        manageDisposable(RxHelper.getObserver(RestProvider.getUserService().getUser())
                 .flatMap(login -> login.update(login))
                 .subscribe(login -> {
                     if (login != null) {

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -156,6 +156,9 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
                 case MENTIONED:
                     tabsBadgeListener.onSetBadge(2, totalCount);
                     break;
+                case PARTICIPATED:
+                    tabsBadgeListener.onSetBadge(3, totalCount);
+                    break;
             }
         }
     }
@@ -179,7 +182,6 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
         if (recycler != null) recycler.scrollToPosition(0);
     }
 
-
     private MyIssuesType getIssuesType() {
         if (issuesType == null) {
             issuesType = (MyIssuesType) getArguments().getSerializable(BundleConstant.EXTRA_TWO);

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesPresenter.java
Patch:
@@ -95,6 +95,8 @@ public class MyIssuesPresenter extends BasePresenter<MyIssuesMvp.View> implement
                 return RepoQueryProvider.getAssigned(login, parameter, false);
             case MENTIONED:
                 return RepoQueryProvider.getMentioned(login, parameter, false);
+            case PARTICIPATED:
+                return RepoQueryProvider.getParticipated(login, parameter, false);
         }
         return RepoQueryProvider.getMyIssuesPullRequestQuery(login, parameter, false);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/pager/MyIssuesPagerFragment.java
Patch:
@@ -67,7 +67,6 @@ public static MyIssuesPagerFragment newInstance() {
         });
         tabs.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
             @Override public void onTabSelected(TabLayout.Tab tab) {
-                Logger.e(tab.getTag());
                 if (tab.getTag() == null) {
                     int position = tab.getPosition();
                     selectTab(position, false);
@@ -139,6 +138,8 @@ private void updateCount(@NonNull TabsCountStateModel model) {
             case 2:
                 title = getString(R.string.mentioned);
                 break;
+            case 3:
+                title = getString(R.string.participated);
         }
         updateDrawable(model, tv);
         tv.setText(SpannableBuilder.builder()

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsPresenter.java
Patch:
@@ -77,7 +77,7 @@ private void markAsRead(int position, View v, Notification item) {
 
     @Override public void onWorkOffline() {
         if (notifications.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Notification.getAlltNotifications().toObservable())
+            manageDisposable(RxHelper.getObserver(Notification.getAlltNotifications().toObservable())
                     .flatMap(notifications -> Observable.just(GroupedNotificationModel.construct(notifications)))
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models))));
         } else {
@@ -117,7 +117,7 @@ private void markAsRead(int position, View v, Notification item) {
     }
 
     @Override public void onMarkAllAsRead(@NonNull List<GroupedNotificationModel> data) {
-        manageSubscription(RxHelper.getObserver(Observable.fromIterable(data))
+        manageDisposable(RxHelper.getObserver(Observable.fromIterable(data))
                 .filter(group -> group.getType() == GroupedNotificationModel.ROW)
                 .filter(group -> group.getNotification() != null && group.getNotification().isUnread())
                 .map(GroupedNotificationModel::getNotification)
@@ -130,7 +130,7 @@ private void markAsRead(int position, View v, Notification item) {
     }
 
     @Override public void onMarkReadByRepo(@NonNull List<GroupedNotificationModel> data, @NonNull Repo repo) {
-        manageSubscription(RxHelper.getObserver(Observable.fromIterable(data))
+        manageDisposable(RxHelper.getObserver(Observable.fromIterable(data))
                 .filter(group -> group.getType() == GroupedNotificationModel.ROW)
                 .filter(group -> group.getNotification() != null && group.getNotification().isUnread())
                 .filter(group -> group.getNotification().getRepository().getFullName().equalsIgnoreCase(repo.getFullName()))

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsPresenter.java
Patch:
@@ -52,7 +52,7 @@ public class UnreadNotificationsPresenter extends BasePresenter<UnreadNotificati
 
     @Override public void onWorkOffline() {
         if (notifications.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Notification.getUnreadNotifications().toObservable())
+            manageDisposable(RxHelper.getObserver(Notification.getUnreadNotifications().toObservable())
                     .flatMap(notifications -> Observable.just(GroupedNotificationModel.onlyNotifications(notifications)))
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models))));
         } else {
@@ -65,7 +65,7 @@ public class UnreadNotificationsPresenter extends BasePresenter<UnreadNotificati
     }
 
     @Override public void onMarkAllAsRead(@NonNull List<GroupedNotificationModel> data) {
-        manageSubscription(RxHelper.getObserver(Observable.fromIterable(data))
+        manageDisposable(RxHelper.getObserver(Observable.fromIterable(data))
                 .filter(group -> group.getType() == GroupedNotificationModel.ROW)
                 .filter(group -> group.getNotification() != null && group.getNotification().isUnread())
                 .map(GroupedNotificationModel::getNotification)

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposPresenter.java
Patch:
@@ -30,7 +30,7 @@ public class PinnedReposPresenter extends BasePresenter<PinnedReposMvp.View> imp
     }
 
     @Override public void onReload() {
-        manageSubscription(AbstractPinnedRepos.getMyPinnedRepos()
+        manageDisposable(AbstractPinnedRepos.getMyPinnedRepos()
                 .subscribe(repos -> sendToView(view -> view.onNotifyAdapter(repos)), throwable ->
                         sendToView(view -> view.onNotifyAdapter(null))));
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersPresenter.java
Patch:
@@ -76,7 +76,7 @@ class ProfileFollowersPresenter extends BasePresenter<ProfileFollowersMvp.View>
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (users.isEmpty()) {
-            manageSubscription(RxHelper.getSingle(User.getUserFollowerList(login)).subscribe(userModels ->
+            manageDisposable(RxHelper.getSingle(User.getUserFollowerList(login)).subscribe(userModels ->
                     sendToView(view -> view.onNotifyAdapter(userModels, 1))));
         } else {
             sendToView(ProfileFollowersMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingPresenter.java
Patch:
@@ -76,7 +76,7 @@ class ProfileFollowingPresenter extends BasePresenter<ProfileFollowingMvp.View>
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (users.isEmpty()) {
-            manageSubscription(RxHelper.getSingle(User.getUserFollowingList(login)).subscribe(userModels ->
+            manageDisposable(RxHelper.getSingle(User.getUserFollowingList(login)).subscribe(userModels ->
                     sendToView(view -> view.onNotifyAdapter(userModels, 1))));
         } else {
             sendToView(ProfileFollowingMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -75,7 +75,7 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (gistsModels.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Gist.getMyGists(login).toObservable()).subscribe(gistsModels1 ->
+            manageDisposable(RxHelper.getObserver(Gist.getMyGists(login).toObservable()).subscribe(gistsModels1 ->
                     sendToView(view -> view.onNotifyAdapter(gistsModels1, 1))));
         } else {
             sendToView(ProfileGistsMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposPresenter.java
Patch:
@@ -78,7 +78,7 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> view.onNotifyAdapter(repoModels, 1))));
         } else {
             sendToView(OrgReposMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -86,7 +86,7 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObserver(Repo.getMyRepos(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> view.onNotifyAdapter(repoModels, 1))));
         } else {
             sendToView(ProfileReposMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -78,7 +78,7 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Repo.getStarred(login).toObservable()).subscribe(repoModels ->
+            manageDisposable(RxHelper.getObserver(Repo.getStarred(login).toObservable()).subscribe(repoModels ->
                     sendToView(view -> view.onNotifyAdapter(repoModels, 1))));
         } else {
             sendToView(ProfileStarredMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -110,7 +110,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
                         }
                         return branchesModels;
                     }));
-            manageSubscription(observable
+            manageDisposable(observable
                     .doOnSubscribe(disposable -> sendToView(RepoCommitsMvp.View::showBranchesProgress))
                     .doOnNext(branchesModels -> {
                         branches.clear();
@@ -134,7 +134,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
 
     @Override public void onWorkOffline() {
         if (commits.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Commit.getCommits(repoId, login).toObservable())
+            manageDisposable(RxHelper.getObserver(Commit.getCommits(repoId, login).toObservable())
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);
@@ -160,7 +160,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
     @Override public void onItemLongClick(int position, View v, Commit item) {}
 
     private void getCommitCount(@NonNull String branch) {
-        manageSubscription(RxHelper.safeObservable(RxHelper.getObserver(RestProvider.getRepoService()
+        manageDisposable(RxHelper.safeObservable(RxHelper.getObserver(RestProvider.getRepoService()
                 .getCommitCounts(login, repoId, branch)))
                 .subscribe(response -> {
                     if (response != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerPresenter.java
Patch:
@@ -79,7 +79,7 @@ class CommitPagerPresenter extends BasePresenter<CommitPagerMvp.View> implements
     }
 
     @Override public void onWorkOffline(@NonNull String sha, @NonNull String repoId, @NonNull String login) {
-        manageSubscription(RxHelper.getObserver(Commit.getCommit(sha, repoId, login))
+        manageDisposable(RxHelper.getObserver(Commit.getCommit(sha, repoId, login))
                 .subscribe(commit -> {
                     commitModel = commit;
                     sendToView(CommitPagerMvp.View::onSetup);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -102,7 +102,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
 
     @Override public void onWorkOffline() {
         if (comments.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Comment.getCommitComments(repoId(), login(), sha).toObservable())
+            manageDisposable(RxHelper.getObserver(Comment.getCommitComments(repoId(), login(), sha).toObservable())
                     .flatMap(comments -> Observable.just(TimelineModel.construct(comments)))
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models, 1))));
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsPresenter.java
Patch:
@@ -81,7 +81,7 @@ class RepoContributorsPresenter extends BasePresenter<RepoContributorsMvp.View>
 
     @Override public void onWorkOffline() {
         if (users.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(User.getUserContributorList(repoId).toObservable())
+            manageDisposable(RxHelper.getObserver(User.getUserContributorList(repoId).toObservable())
                     .subscribe(userModels -> sendToView(view -> view.onNotifyAdapter(userModels, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -50,7 +50,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
 
     @Override public void onWorkOffline() {
         if ((repoId == null || login == null) || !files.isEmpty()) return;
-        manageSubscription(RxHelper.getObserver(RepoFile.getFiles(login, repoId).toObservable())
+        manageDisposable(RxHelper.getObserver(RepoFile.getFiles(login, repoId).toObservable())
                 .flatMap(response -> {
                     if (response != null) {
                         return Observable.fromIterable(response).sorted((repoFile, repoFile2) -> repoFile2.getType().compareTo(repoFile.getType()));

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathPresenter.java
Patch:
@@ -99,7 +99,7 @@ class RepoFilePathPresenter extends BasePresenter<RepoFilePathMvp.View> implemen
                             }
                             return branchesModels;
                         }));
-                manageSubscription(observable
+                manageDisposable(observable
                         .doOnSubscribe(disposable -> sendToView(view -> view.showProgress(0)))
                         .doOnNext(branchesModels -> {
                             branches.clear();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -70,7 +70,7 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
 
     @Override public void onWorkOffline() {
         if (downloadedStream == null) {
-            manageSubscription(RxHelper.getObserver(ViewerFile.get(url))
+            manageDisposable(RxHelper.getObserver(ViewerFile.get(url))
                     .subscribe(fileModel -> {
                         if (fileModel != null) {
                             isImage = MarkDownProvider.isImage(fileModel.getFullUrl());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesPresenter.java
Patch:
@@ -89,7 +89,7 @@ private void onResponse(Pageable<Release> response) {
 
     @Override public void onWorkOffline() {
         if (releases.isEmpty()) {
-            manageSubscription(RxHelper.getSingle(Release.get(repoId, login))
+            manageDisposable(RxHelper.getSingle(Release.get(repoId, login))
                     .subscribe(releasesModels -> sendToView(view -> view.onNotifyAdapter(releasesModels, 1))));
         } else {
             sendToView(RepoReleasesMvp.View::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -126,7 +126,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         if (savedInstanceState == null) {
             getPresenter().onActivityCreated(getIntent());
         } else {
-            if (getPresenter().isApiCalled()) onSetupIssue();
+            if (getPresenter().getIssue() != null) onSetupIssue();
         }
         startGist.setVisibility(View.GONE);
         forkGist.setVisibility(View.GONE);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -99,7 +99,7 @@ private void setupIssue(Issue issue) {
 
     @Override public void onWorkOffline(long issueNumber, @NonNull String repoId, @NonNull String login) {
         if (issueModel == null) {
-            manageSubscription(RxHelper.getObserver(Issue.getIssueByNumber((int) issueNumber, repoId, login))
+            manageDisposable(RxHelper.getObserver(Issue.getIssueByNumber((int) issueNumber, repoId, login))
                     .subscribe(issueModel1 -> {
                         if (issueModel1 != null) {
                             issueModel = issueModel1;
@@ -154,7 +154,7 @@ private void setupIssue(Issue issue) {
         Issue currentIssue = getIssue();
         if (currentIssue != null) {
             IssueRequestModel requestModel = IssueRequestModel.clone(currentIssue, true);
-            manageSubscription(RxHelper.getObserver(RestProvider.getIssueService().editIssue(login, repoId,
+            manageDisposable(RxHelper.getObserver(RestProvider.getIssueService().editIssue(login, repoId,
                     issueNumber, requestModel))
                     .doOnSubscribe(disposable -> sendToView(view -> view.showProgress(0)))
                     .doOnNext(issue -> {
@@ -192,7 +192,7 @@ private void setupIssue(Issue issue) {
     }
 
     @Override public void onLoadLabels() {
-        manageSubscription(
+        manageDisposable(
                 RxHelper.getObserver(RestProvider.getRepoService().getLabels(login, repoId))
                         .doOnSubscribe(disposable -> onSubscribed())
                         .doOnNext(response -> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -206,7 +206,9 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
     }
 
     @Override public void onSetHeader(@NonNull TimelineModel timelineModel) {
-        adapter.addItem(timelineModel, 0);
+        if (adapter != null && adapter.isEmpty()) {
+            adapter.addItem(timelineModel, 0);
+        }
     }
 
     @Override public void onActivityResult(int requestCode, int resultCode, Intent data) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -60,6 +60,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
         }
         this.issueState = parameter;
         if (page == 1) {
+            onCallCountApi(issueState);
             lastPage = Integer.MAX_VALUE;
             sendToView(view -> view.getLoadMore().reset());
         }
@@ -84,20 +85,19 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
         issueState = (IssueState) bundle.getSerializable(BundleConstant.EXTRA_TWO);
         if (!InputHelper.isEmpty(login) && !InputHelper.isEmpty(repoId)) {
             onCallApi(1, issueState);
-            onCallCountApi(issueState);
         }
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageSubscription(RxHelper.getObserver(RestProvider.getPullRequestService()
+        manageDisposable(RxHelper.getObserver(RestProvider.getPullRequestService()
                 .getPullsWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, true), 0))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));
     }
 
     @Override public void onWorkOffline() {
         if (pullRequests.isEmpty()) {
-            manageSubscription(RxHelper.getSingle(PullRequest.getPullRequests(repoId, login, issueState))
+            manageDisposable(RxHelper.getSingle(PullRequest.getPullRequests(repoId, login, issueState))
                     .subscribe(pulls -> sendToView(view -> {
                         view.onNotifyAdapter(pulls, 1);
                         view.onUpdateCount(pulls.size());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -127,7 +127,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         if (savedInstanceState == null) {
             getPresenter().onActivityCreated(getIntent());
         } else {
-            if (getPresenter().isApiCalled()) onSetupIssue();
+            if (getPresenter().getPullRequest() != null) onSetupIssue();
         }
         startGist.setVisibility(View.GONE);
         forkGist.setVisibility(View.GONE);
@@ -249,8 +249,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         supportInvalidateOptionsMenu();
         PullRequest pullRequest = getPresenter().getPullRequest();
         setTitle(String.format("#%s", pullRequest.getNumber()));
-        boolean isMerge = !InputHelper.isEmpty(pullRequest.getMergedAt());
-        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()) + "\n" + pullRequest.getRepoId());
+        date.setText(String.format("%s\n%s", getPresenter().getMergeBy(pullRequest, getApplicationContext()), pullRequest.getRepoId()));
         size.setVisibility(View.GONE);
         User userModel = pullRequest.getUser();
         if (userModel != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsPresenter.java
Patch:
@@ -86,7 +86,7 @@ class PullRequestCommitsPresenter extends BasePresenter<PullRequestCommitsMvp.Vi
 
     @Override public void onWorkOffline() {
         if (commits.isEmpty()) {
-            manageSubscription(RxHelper.getSingle(Commit.getCommits(repoId, login, number))
+            manageDisposable(RxHelper.getSingle(Commit.getCommits(repoId, login, number))
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models, 1))));
         } else {
             sendToView(BaseMvp.FAView::hideProgress);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -279,7 +279,9 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
     }
 
     @Override public void onSetHeader(@NonNull TimelineModel timelineModel) {
-        adapter.addItem(timelineModel, 0);
+        if (adapter != null && adapter.isEmpty()) {
+            adapter.addItem(timelineModel, 0);
+        }
     }
 
     @Override public void onActivityResult(int requestCode, int resultCode, Intent data) {

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchPresenter.java
Patch:
@@ -27,7 +27,7 @@ class SearchPresenter extends BasePresenter<SearchMvp.View> implements SearchMvp
     @Override protected void onAttachView(@NonNull SearchMvp.View view) {
         super.onAttachView(view);
         if (hints.isEmpty()) {
-            manageSubscription(SearchHistory.getHistory()
+            manageDisposable(SearchHistory.getHistory()
                     .subscribe(strings -> {
                         hints.clear();
                         if (strings != null) hints.addAll(strings);

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -199,7 +199,7 @@ public static int notificationDurationMillis(@NonNull String prefValue) {
                     return (60 * 3) * 60; // 3 hours
             }
         }
-        return 0;
+        return -1;
     }
 
     public static boolean isTwiceBackButtonDisabled() {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -84,7 +84,7 @@ public class NotificationSchedulerJobTask extends JobService {
 
     public static void scheduleJob(@NonNull Context context) {
         int duration = PrefGetter.getNotificationTaskDuration();
-        scheduleJob(context, duration == 0 ? THIRTY_MINUTES : duration, false);
+        scheduleJob(context, duration, false);
     }
 
     public static void scheduleJob(@NonNull Context context, int duration, boolean cancel) {

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -40,7 +40,7 @@ public static boolean pinUpin(@NonNull Repo repo) {
             PinnedRepos pinned = new PinnedRepos();
             pinned.setRepoFullName(repo.getFullName());
             pinned.setPinnedRepo(repo);
-            save(pinned).toObservable().blockingFirst(null);
+            App.getInstance().getDataStore().insert(pinned).blockingGet();
             return true;
         } else {
             delete(pinnedRepos.getId());

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -227,7 +227,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         }
     }
 
-    @OnLongClick({R.id.forkRepoLayout, R.id.starRepoLayout, R.id.watchRepoLayout, R.id.pinLayout}) boolean onLongClick(View view) {
+    @OnLongClick({R.id.forkRepoLayout, R.id.starRepoLayout, R.id.watchRepoLayout}) boolean onLongClick(View view) {
         switch (view.getId()) {
             case R.id.forkRepoLayout:
                 RepoMiscDialogFragment.show(getSupportFragmentManager(), getPresenter().login(), getPresenter().repoId(), RepoMiscMVp.FORKS);

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -75,7 +75,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     @Nullable @BindView(R.id.appbar) public AppBarLayout appbar;
     @Nullable @BindView(R.id.drawer) public DrawerLayout drawer;
     @Nullable @BindView(R.id.extrasNav) public NavigationView extraNav;
-
     @State Bundle presenterStateBundle = new Bundle();
 
     private static int REFRESH_CODE = 64;
@@ -93,8 +92,8 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
 
     @Override protected void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
-        getPresenter().onSaveInstanceState(outState);
-        Icepick.saveInstanceState(this, presenterStateBundle);
+        Icepick.saveInstanceState(this, outState);
+        getPresenter().onSaveInstanceState(presenterStateBundle);
     }
 
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -37,7 +37,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
     }
 
     @Override public void onRestoreInstanceState(Bundle outState) {
-        Icepick.restoreInstanceState(this, outState);
+        if (outState != null) Icepick.restoreInstanceState(this, outState);
     }
 
     @Override public void manageSubscription(@Nullable Disposable... subscription) {

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -310,7 +310,6 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
 
     @Nullable private static Intent getReleases(@NonNull Context context, @NonNull Uri uri) {
         List<String> segments = uri.getPathSegments();
-        Logger.e(segments.size());
         if (segments != null && segments.size() > 2) {
             if (uri.getPathSegments().get(2).equals("releases")) {
                 String owner = segments.get(0);

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -364,7 +364,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
 
     @Nullable private static TaskStackBuilder getReleases(@NonNull Context context, @NonNull Uri uri) {
         List<String> segments = uri.getPathSegments();
-        if (segments != null && segments.size() >= 2) {
+        if (segments != null && segments.size() > 2) {
             if (uri.getPathSegments().get(2).equals("releases")) {
                 String owner = segments.get(0);
                 String repo = segments.get(1);

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.fastaccess.data.dao.model.Models;
 import com.fastaccess.helper.TypeFaceHelper;
+import com.fastaccess.provider.colors.ColorsProvider;
 import com.fastaccess.provider.emoji.EmojiManager;
 import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 import com.fastaccess.provider.uil.UILProvider;
@@ -56,7 +57,6 @@ public class App extends Application {
 //        EmojiCompat.init(config);
         instance = this;
         init();
-        EmojiManager.load();
     }
 
     @NonNull public static App getInstance() {
@@ -71,6 +71,8 @@ private void init() {
         TypeFaceHelper.generateTypeface(this);
         NotificationSchedulerJobTask.scheduleJob(this);
         Shortbread.create(this);
+        EmojiManager.load();
+        ColorsProvider.load();
         googleApiClient = new GoogleApiClient.Builder(this)
                 .addApi(Auth.CREDENTIALS_API)
                 .build();

File: app/src/main/java/com/fastaccess/provider/emoji/EmojiManager.java
Patch:
@@ -48,7 +48,7 @@ public static void load() {
                 EMOJI_TRIE = new EmojiTrie(emojis);
                 stream.close();
             } catch (IOException e) {
-                throw new RuntimeException(e);
+                e.printStackTrace();
             }
             return "";
         })).subscribeOn(Schedulers.io()).subscribe();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -11,11 +11,11 @@
 import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.colors.ColorsProvider;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.LabelSpan;
 import com.fastaccess.ui.widgets.SpannableBuilder;
-import com.fastaccess.ui.widgets.color.ColorGenerator;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -91,7 +91,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
         date.setText(ParseDateFormat.getTimeAgo(repo.getUpdatedAt()));
         if (!InputHelper.isEmpty(repo.getLanguage())) {
             language.setText(repo.getLanguage());
-            language.setTextColor(ColorGenerator.getColor(itemView.getContext(),repo.getLanguage()));
+            language.setTextColor(ColorsProvider.getColorAsColor(repo.getLanguage(), language.getContext()));
             language.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -356,7 +356,7 @@ private void onCreate() {
         if (isLink) {
             MarkDownProvider.addLink(editText, InputHelper.toString(title), InputHelper.toString(link));
         } else {
-            editText.append("\n");
+            editText.setText(String.format("%s\n", editText.getText()));
             MarkDownProvider.addPhoto(editText, InputHelper.toString(title), InputHelper.toString(link));
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -8,7 +8,6 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.AbstractPinnedRepos;
 import com.fastaccess.data.dao.model.PinnedRepos;
-import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.ui.adapter.PinnedReposAdapter;
@@ -60,8 +59,6 @@ public static PinnedReposFragment newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        if (!AbstractPinnedRepos.isPinned("k0shk0sh/FastHub"))
-            Repo.getRepo("FastHub", "k0shk0sh").subscribe(AbstractPinnedRepos::pinUpin);
         adapter = new PinnedReposAdapter(getPresenter().getPinnedRepos(), getPresenter());
         stateLayout.setEmptyText(R.string.empty_pinned_repos);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -11,6 +11,7 @@
 
 import com.fastaccess.data.dao.model.Models;
 import com.fastaccess.helper.TypeFaceHelper;
+import com.fastaccess.provider.emoji.EmojiManager;
 import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 import com.fastaccess.provider.uil.UILProvider;
 import com.google.android.gms.auth.api.Auth;
@@ -60,6 +61,7 @@ public void onFailed(@Nullable Throwable throwable) {
         EmojiCompat.init(config);
         instance = this;
         init();
+        EmojiManager.load();
     }
 
     @NonNull public static App getInstance() {

File: app/src/main/java/com/fastaccess/data/dao/ReactionsModel.java
Patch:
@@ -1,8 +1,9 @@
-package com.fastaccess.data.dao.model;
+package com.fastaccess.data.dao;
 
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import com.fastaccess.data.dao.model.User;
 import com.google.gson.annotations.SerializedName;
 
 import lombok.Getter;

File: app/src/main/java/com/fastaccess/data/dao/ReviewCommentModel.java
Patch:
@@ -3,7 +3,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.fastaccess.data.dao.model.ReactionsModel;
 import com.fastaccess.data.dao.model.User;
 
 import java.util.Date;

File: app/src/main/java/com/fastaccess/data/dao/ReviewModel.java
Patch:
@@ -3,7 +3,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.fastaccess.data.dao.model.ReactionsModel;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.data.dao.types.ReviewStateType;
 import com.google.gson.annotations.SerializedName;

File: app/src/main/java/com/fastaccess/data/dao/converters/ReactionsConverter.java
Patch:
@@ -1,6 +1,6 @@
 package com.fastaccess.data.dao.converters;
 
-import com.fastaccess.data.dao.model.ReactionsModel;
+import com.fastaccess.data.dao.ReactionsModel;
 
 /**
  * Created by Kosh on 06 May 2017, 4:53 PM

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractLogin.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.fastaccess.App;
 import com.fastaccess.helper.PrefGetter;
+import com.fastaccess.helper.RxHelper;
 
 import java.util.Date;
 
@@ -57,8 +58,7 @@
     public Observable<Login> update(Login login) {
         login.setToken(PrefGetter.getToken());
         login.setIsLoggedIn(true);
-        return App.getInstance().getDataStore().update(login)
-                .toObservable();
+        return RxHelper.safeObservable(App.getInstance().getDataStore().update(login).toObservable());
     }
 
     public void save(Login entity) {

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.fastaccess.App;
 import com.fastaccess.data.dao.converters.RepoConverter;
+import com.fastaccess.helper.RxHelper;
 
 import java.util.List;
 
@@ -31,7 +32,7 @@
     @Convert(RepoConverter.class) Repo pinnedRepo;
 
     public static Single<PinnedRepos> save(@NonNull PinnedRepos entity) {
-        return App.getInstance().getDataStore().insert(entity);
+        return RxHelper.getSingle(App.getInstance().getDataStore().insert(entity));
     }
 
     public static boolean pinUpin(@NonNull Repo repo) {

File: app/src/main/java/com/fastaccess/data/service/ReactionsService.java
Patch:
@@ -4,7 +4,7 @@
 
 import com.fastaccess.data.dao.Pageable;
 import com.fastaccess.data.dao.PostReactionModel;
-import com.fastaccess.data.dao.model.ReactionsModel;
+import com.fastaccess.data.dao.ReactionsModel;
 
 import retrofit2.Response;
 import retrofit2.http.Body;

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -20,11 +20,10 @@ public static <T> Observable<T> getObserver(@NonNull Observable<T> observable) {
 
     public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
         return getObserver(observable)
-                .subscribeOn(Schedulers.io())
                 .onErrorReturn(throwable -> null);
     }
 
-    public static <T> Single<T> safeObservable(@NonNull Single<T> observable) {
+    public static <T> Single<T> getSingle(@NonNull Single<T> observable) {
         return observable
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -16,6 +16,7 @@
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.provider.timeline.handler.BetterLinkMovementExtended;
 import com.fastaccess.provider.timeline.handler.DrawableHandler;
+import com.fastaccess.provider.timeline.handler.EmojiHandler;
 import com.fastaccess.provider.timeline.handler.ItalicHandler;
 import com.fastaccess.provider.timeline.handler.LinkHandler;
 import com.fastaccess.provider.timeline.handler.ListsHandler;
@@ -62,7 +63,7 @@ private static HtmlSpanner initHtml(@NonNull TextView textView) {
         mySpanner.registerHandler("pre", new PreTagHandler(windowBackground, true, isDark));
         mySpanner.registerHandler("code", new PreTagHandler(windowBackground, false, isDark));
         mySpanner.registerHandler("img", new DrawableHandler(textView));
-        mySpanner.registerHandler("g-emoji", new DrawableHandler(textView));
+        mySpanner.registerHandler("g-emoji", new EmojiHandler());
         mySpanner.registerHandler("blockquote", new QouteHandler(windowBackground));
         mySpanner.registerHandler("b", new BoldHandler());
         mySpanner.registerHandler("strong", new BoldHandler());

File: app/src/main/java/com/fastaccess/provider/timeline/ReactionsProvider.java
Patch:
@@ -6,7 +6,7 @@
 import android.support.annotation.Nullable;
 
 import com.fastaccess.data.dao.PostReactionModel;
-import com.fastaccess.data.dao.model.ReactionsModel;
+import com.fastaccess.data.dao.ReactionsModel;
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.RxHelper;

File: app/src/main/java/com/fastaccess/provider/timeline/handler/BetterLinkMovementExtended.java
Patch:
@@ -78,7 +78,7 @@ private BetterLinkMovementExtended() {
 
     public void setOnLinkClickListener(OnLinkClickListener onLinkClickListener) {
         if (this == singleInstance) {
-            throw new UnsupportedOperationException("Setting a click listener on the instance returned by getInstance() is not supported. Please " +
+            throw new UnsupportedOperationException("SettingsModel a click listener on the instance returned by getInstance() is not supported. Please " +
                     "use newInstance() or any of the linkify() methods instead.");
         } else {
             this.onLinkClickListener = onLinkClickListener;

File: app/src/main/java/com/fastaccess/provider/timeline/handler/ListsHandler.java
Patch:
@@ -73,7 +73,7 @@ private String getParentName(TagNode node) {
     }
 
     @Override public void handleTagNode(TagNode tagNode, SpannableStringBuilder spannableStringBuilder, int i, int i1) {
-
+        appendNewLine(spannableStringBuilder);
     }
 
     static class TodoItems {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -9,10 +9,10 @@
 import android.widget.TextView;
 
 import com.fastaccess.R;
+import com.fastaccess.data.dao.ReactionsModel;
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.model.PullRequest;
-import com.fastaccess.data.dao.model.ReactionsModel;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
@@ -63,6 +63,7 @@ private IssueDetailsViewHolder(@NonNull View itemView, @NonNull ViewGroup viewGr
         itemView.setOnClickListener(null);
         itemView.setOnLongClickListener(null);
         commentMenu.setOnClickListener(this);
+        toggle.setOnClickListener(this);
         toggleHolder.setOnClickListener(this);
         laugh.setOnClickListener(this);
         sad.setOnClickListener(this);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -40,7 +40,7 @@ public class PinnedReposViewHolder extends BaseViewHolder<PinnedRepos> {
     @BindString(R.string.forked) String forked;
     @BindString(R.string.private_repo) String privateRepo;
     @BindColor(R.color.material_indigo_700) int forkColor;
-    @BindColor(R.color.material_deep_purple_700) int privateColor;
+    @BindColor(R.color.material_grey_700) int privateColor;
 
     private PinnedReposViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewCommentsViewHolder.java
Patch:
@@ -13,7 +13,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.ReviewCommentModel;
-import com.fastaccess.data.dao.model.ReactionsModel;
+import com.fastaccess.data.dao.ReactionsModel;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.provider.timeline.CommentsHelper;
@@ -74,6 +74,7 @@ private ReviewCommentsViewHolder(@NonNull View itemView, ViewGroup viewGroup, @N
         this.reactionsCallback = reactionsCallback;
         itemView.setOnClickListener(null);
         itemView.setOnLongClickListener(null);
+        toggle.setOnClickListener(this);
         commentMenu.setOnClickListener(this);
         toggleHolder.setOnClickListener(this);
         laugh.setOnClickListener(this);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -96,9 +96,7 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
     }
 
     @Override public void showProgress(@StringRes int resId) {
-
         refresh.setRefreshing(true);
-
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/reactions/ReactionsDialogPresenter.java
Patch:
@@ -7,7 +7,7 @@
 import com.annimon.stream.Collectors;
 import com.annimon.stream.Stream;
 import com.fastaccess.data.dao.Pageable;
-import com.fastaccess.data.dao.model.ReactionsModel;
+import com.fastaccess.data.dao.ReactionsModel;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.BundleConstant;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -187,7 +187,6 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
         ActivityHelper.startReveal(this, intent, view, BundleConstant.REVIEW_REQUEST_CODE);
     }
 
-
     @Override public void onRemove(@NonNull TimelineModel timelineModel) {
         hideProgress();
         adapter.removeItem(timelineModel);

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesMvp.java
Patch:
@@ -28,6 +28,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onQueueSearch(@NonNull String query);
 
         @NonNull OnLoadMore<String> getLoadMore();
+
+        void onShowPopupDetails(@NonNull Issue item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesPresenter.java
Patch:
@@ -83,5 +83,7 @@ class SearchIssuesPresenter extends BasePresenter<SearchIssuesMvp.View> implemen
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {}
+    @Override public void onItemLongClick(int position, View v, Issue item) {
+        if (getView() != null) getView().onShowPopupDetails(item);
+    }
 }

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssuePresenter.java
Patch:
@@ -28,7 +28,9 @@ public class FilterIssuePresenter extends BasePresenter<FilterIssuesMvp.View> im
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {}
+    @Override public void onItemLongClick(int position, View v, Issue item) {
+        if (getView() != null) getView().onShowPopupDetails(item);
+    }
 
     @NonNull @Override public ArrayList<Issue> getIssues() {
         return issues;

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssuesMvp.java
Patch:
@@ -31,6 +31,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onSetCount(int totalCount);
 
         void onItemClicked(@NonNull Issue item);
+
+        void onShowPopupDetails(@NonNull Issue item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesMvp.java
Patch:
@@ -28,6 +28,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onSetCount(int totalCount);
 
         void onFilterIssue(@NonNull IssueState issueState);
+
+        void onShowPopupDetails(@NonNull Issue item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesPresenter.java
Patch:
@@ -37,7 +37,9 @@ public class MyIssuesPresenter extends BasePresenter<MyIssuesMvp.View> implement
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {}
+    @Override public void onItemLongClick(int position, View v, Issue item) {
+        if (getView() != null) getView().onShowPopupDetails(item);
+    }
 
     @NonNull @Override public ArrayList<Issue> getIssues() {
         return issues;

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsMvp.java
Patch:
@@ -28,6 +28,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onSetCount(int totalCount);
 
         void onFilterIssue(@NonNull IssueState issueState);
+
+        void onShowPopupDetails(@NonNull PullRequest item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -38,7 +38,9 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, PullRequest item) {}
+    @Override public void onItemLongClick(int position, View v, PullRequest item) {
+        if (getView() != null) getView().onShowPopupDetails(item);
+    }
 
     @NonNull @Override public ArrayList<PullRequest> getPullRequests() {
         return pullRequests;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -35,6 +35,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onOpenIssue(@NonNull PullsIssuesParser parser);
 
         void onRefresh(boolean isLastUpdated);
+
+        void onShowIssuePopup(@NonNull Issue item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -142,5 +142,7 @@ private void onCallCountApi(@NonNull IssueState issueState) {
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {}
+    @Override public void onItemLongClick(int position, View v, Issue item) {
+        if (getView() != null) getView().onShowIssuePopup(item);
+    }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestMvp.java
Patch:
@@ -31,6 +31,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onUpdateCount(int totalCount);
 
         void onOpenPullRequest(@NonNull PullsIssuesParser parser);
+
+        void onShowPullRequestPopup(@NonNull PullRequest item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -122,5 +122,7 @@ private void onCallCountApi(@NonNull IssueState issueState) {
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, PullRequest item) {}
+    @Override public void onItemLongClick(int position, View v, PullRequest item) {
+        if(getView()!=null)getView().onShowPullRequestPopup(item);
+    }
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesFragment.java
Patch:
@@ -80,7 +80,7 @@ public static SearchIssuesFragment newInstance() {
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
-        adapter = new IssuesAdapter(getPresenter().getIssues(), false, true);
+        adapter = new IssuesAdapter(getPresenter().getIssues(), false, true, true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addDivider();
@@ -132,7 +132,7 @@ public static SearchIssuesFragment newInstance() {
 
     @Override public void onQueueSearch(@NonNull String query) {
         this.searchQuery = query;
-        if(getView()!=null)
+        if (getView() != null)
             onSetSearchQuery(query);
     }
 
@@ -145,7 +145,7 @@ public static SearchIssuesFragment newInstance() {
     }
 
     @Override public void onRefresh() {
-        if(searchQuery.length()==0){
+        if (searchQuery.length() == 0) {
             refresh.setRefreshing(false);
             return;
         }

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -272,8 +272,8 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         List<String> segments = uri.getPathSegments();
         if (segments == null || segments.size() < 4) return null;
         String segmentTwo = segments.get(2);
-        if (MimeTypeMap.getFileExtensionFromUrl(uri.toString()) == null) {
-            Uri urlBuilder = getBlobBuilder(uri);
+        if (InputHelper.isEmpty(MimeTypeMap.getFileExtensionFromUrl(uri.toString()))) {
+            Uri urlBuilder = LinkParserHelper.getBlobBuilder(uri);
             return RepoFilesActivity.getIntent(context, urlBuilder.toString());
         }
         if (segmentTwo.equals("blob") || segmentTwo.equals("tree")) {

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -303,8 +303,8 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
         String segmentTwo = segments.get(2);
         String owner = segments.get(0);
         String repo = segments.get(1);
-        if (MimeTypeMap.getFileExtensionFromUrl(uri.toString()) == null) {
-            Uri urlBuilder = getBlobBuilder(uri);
+        if (InputHelper.isEmpty(MimeTypeMap.getFileExtensionFromUrl(uri.toString()))) {
+            Uri urlBuilder = LinkParserHelper.getBlobBuilder(uri);
             return TaskStackBuilder.create(context)
                     .addParentStack(MainActivity.class)
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))

File: app/src/main/java/com/fastaccess/data/service/ReviewService.java
Patch:
@@ -15,6 +15,7 @@
 import retrofit2.http.PATCH;
 import retrofit2.http.POST;
 import retrofit2.http.Path;
+import retrofit2.http.Query;
 import rx.Observable;
 
 /**
@@ -33,7 +34,8 @@ Observable<ReviewModel> getReview(@Path("owner") String owner, @Path("repo") Str
     @Headers("Accept: application/vnd.github.black-cat-preview+json, application/vnd.github.VERSION.html")
     @NonNull
     Observable<Pageable<ReviewModel>> getReviews(@Path("owner") String owner, @Path("repo") String repo,
-                                                 @Path("number") long number);
+                                                 @Path("number") long number,
+                                                 @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/pulls/{number}/reviews/{id}/comments")
     @Headers("Accept: application/vnd.github.black-cat-preview+json, application/vnd.github.VERSION.html")

File: app/src/main/java/com/fastaccess/provider/timeline/handler/ListsHandler.java
Patch:
@@ -72,7 +72,9 @@ private String getParentName(TagNode node) {
         }
     }
 
-    public void handleTagNode(TagNode node, SpannableStringBuilder builder, int start, int end) {}
+    @Override public void handleTagNode(TagNode tagNode, SpannableStringBuilder spannableStringBuilder, int i, int i1) {
+
+    }
 
     static class TodoItems {
         boolean isChecked;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/NotificationsHeaderViewHolder.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v7.widget.AppCompatImageButton;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -21,9 +22,11 @@
 public class NotificationsHeaderViewHolder extends BaseViewHolder<GroupedNotificationModel> {
 
     @Nullable @BindView(R.id.headerTitle) FontTextView headerTitle;
+    @BindView(R.id.markAsRead) AppCompatImageButton markAsRead;
 
     private NotificationsHeaderViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);
+        markAsRead.setOnClickListener(this);
     }
 
     public static NotificationsHeaderViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable BaseRecyclerAdapter adapter) {

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssuePresenter.java
Patch:
@@ -28,9 +28,7 @@ public class FilterIssuePresenter extends BasePresenter<FilterIssuesMvp.View> im
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Issue item) {}
 
     @NonNull @Override public ArrayList<Issue> getIssues() {
         return issues;

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -79,7 +79,5 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
         v.getContext().startActivity(GistActivity.createIntent(v.getContext(), item.getGistId()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Gist item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Gist item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListPresenter.java
Patch:
@@ -17,7 +17,5 @@ class GistFilesListPresenter extends BasePresenter<GistFilesListMvp.View> implem
         if (getView() != null) getView().onOpenFile(item);
     }
 
-    @Override public void onItemLongClick(int position, View v, FilesListModel item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, FilesListModel item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesPresenter.java
Patch:
@@ -37,9 +37,7 @@ public class MyIssuesPresenter extends BasePresenter<MyIssuesMvp.View> implement
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Issue item) {}
 
     @NonNull @Override public ArrayList<Issue> getIssues() {
         return issues;

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -38,9 +38,7 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, PullRequest item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, PullRequest item) {}
 
     @NonNull @Override public ArrayList<PullRequest> getPullRequests() {
         return pullRequests;

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -65,7 +65,7 @@ public static AllNotificationsFragment newInstance() {
             return;
         }
         adapter.insertItems(items);
-        if (isSafe()) getActivity().supportInvalidateOptionsMenu();
+        if (isSafe()) getActivity().invalidateOptionsMenu();
     }
 
     @Override public void onClick(@NonNull String url) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -86,7 +86,5 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
         if (getView() != null) getView().onStartGistView(item.getGistId());
     }
 
-    @Override public void onItemLongClick(int position, View v, Gist item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Gist item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposPresenter.java
Patch:
@@ -89,7 +89,5 @@ class OrgReposPresenter extends BasePresenter<OrgReposMvp.View> implements OrgRe
         RepoPagerActivity.startRepoPager(v.getContext(), new NameParser(item.getHtmlUrl()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Repo item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Repo item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamPresenter.java
Patch:
@@ -74,7 +74,5 @@ class OrgTeamPresenter extends BasePresenter<OrgTeamMvp.View> implements OrgTeam
         TeamPagerActivity.startActivity(v.getContext(), item.getId(), item.getName());
     }
 
-    @Override public void onItemLongClick(int position, View v, TeamsModel item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, TeamsModel item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/repos/TeamReposPresenter.java
Patch:
@@ -74,7 +74,5 @@ class TeamReposPresenter extends BasePresenter<TeamReposMvp.View> implements Tea
         RepoPagerActivity.startRepoPager(v.getContext(), new NameParser(item.getHtmlUrl()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Repo item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Repo item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -30,6 +30,8 @@ interface View extends BaseMvp.FAView {
         void onHeaderLoaded(@Nullable Bitmap bitmap);
 
         void onUserNotFound();
+
+        void onImagePosted(@Nullable String link);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {
@@ -54,6 +56,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         @NonNull String getLogin();
 
-        @Nullable String getHeaderUrl();
+        void onPostImage(@NonNull String path);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -97,7 +97,5 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
         RepoPagerActivity.startRepoPager(v.getContext(), new NameParser(item.getHtmlUrl()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Repo item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Repo item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -89,7 +89,5 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
         RepoPagerActivity.startRepoPager(v.getContext(), new NameParser(item.getHtmlUrl()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Repo item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Repo item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -161,9 +161,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
         CommitPagerActivity.createIntentForOffline(v.getContext(), item);
     }
 
-    @Override public void onItemLongClick(int position, View v, Commit item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Commit item) {}
 
     private void getCommitCount(@NonNull String branch) {
         manageSubscription(RxHelper.safeObservable(RxHelper.getObserver(RestProvider.getRepoService()

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -37,9 +37,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, RepoFile item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, RepoFile item) {}
 
     @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathPresenter.java
Patch:
@@ -38,9 +38,7 @@ class RepoFilePathPresenter extends BasePresenter<RepoFilePathMvp.View> implemen
         if (!item.getPath().equalsIgnoreCase(path)) if (getView() != null) getView().onItemClicked(item, position);
     }
 
-    @Override public void onItemLongClick(int position, View v, RepoFile item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, RepoFile item) {}
 
     @Override public void onFragmentCreated(@Nullable Bundle bundle) {
         if (bundle != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesPresenter.java
Patch:
@@ -109,7 +109,5 @@ private void onResponse(Pageable<Release> response) {
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Release item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Release item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/create/CreateLabelPresenter.java
Patch:
@@ -19,9 +19,7 @@ public class CreateLabelPresenter extends BasePresenter<CreateLabelMvp.View> imp
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, String item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, String item) {}
 
     @Override public void onSubmitLabel(@NonNull String name, @NonNull String color, @NonNull String repo, @NonNull String login) {
         LabelModel labelModel = new LabelModel();

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestonePresenter.java
Patch:
@@ -21,9 +21,7 @@ public class MilestonePresenter extends BasePresenter<MilestoneMvp.View> impleme
         if (getView() != null) getView().onMilestoneSelected(item);
     }
 
-    @Override public void onItemLongClick(int position, View v, MilestoneModel item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, MilestoneModel item) {}
 
     @Override public void onLoadMilestones(@NonNull String login, @NonNull String repo) {
         makeRestCall(RestProvider.getRepoService().getMilestones(login, repo),

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -142,7 +142,5 @@ private void onCallCountApi(@NonNull IssueState issueState) {
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, Issue item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Issue item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -122,7 +122,5 @@ private void onCallCountApi(@NonNull IssueState issueState) {
         }
     }
 
-    @Override public void onItemLongClick(int position, View v, PullRequest item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, PullRequest item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsPresenter.java
Patch:
@@ -97,7 +97,5 @@ class PullRequestCommitsPresenter extends BasePresenter<PullRequestCommitsMvp.Vi
         CommitPagerActivity.createIntentForOffline(v.getContext(), item);
     }
 
-    @Override public void onItemLongClick(int position, View v, Commit item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Commit item) {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposPresenter.java
Patch:
@@ -70,7 +70,5 @@ class SearchReposPresenter extends BasePresenter<SearchReposMvp.View> implements
         RepoPagerActivity.startRepoPager(v.getContext(), new NameParser(item.getHtmlUrl()));
     }
 
-    @Override public void onItemLongClick(int position, View v, Repo item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, Repo item) {}
 }

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ListDialogView.java
Patch:
@@ -82,9 +82,7 @@ public interface onSimpleItemSelection<O extends Parcelable> {
         dismiss();
     }
 
-    @Override public void onItemLongClick(int position, View v, O item) {
-        onItemClick(position, v, item);
-    }
+    @Override public void onItemLongClick(int position, View v, O item) {}
 
     public void initArguments(@NonNull String title, @NonNull ArrayList<O> objects) {
         setArguments(Bundler.start()

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -137,6 +137,7 @@ public void swapItem(@NonNull M model, int position) {
     }
 
     public void subList(int fromPosition, int toPosition) {
+        if (data.isEmpty()) return;
         data.subList(fromPosition, toPosition).clear();
         notifyItemRangeRemoved(fromPosition, toPosition);
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -54,6 +54,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         @NonNull String getLogin();
 
-        @Nullable Bitmap getHeader();
+        @Nullable String getHeaderUrl();
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -54,6 +54,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         @NonNull String getLogin();
 
-        @Nullable Bitmap getHeader();
+        @Nullable String getHeaderUrl();
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -3,7 +3,6 @@
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.text.Html;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -77,7 +76,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
             spannableBuilder.bold(action != null ? action.toLowerCase() : "")
                     .append(eventsModel.getPayload() != null && eventsModel.getPayload().getAction() != null ? " " : "");
             if (type != EventsType.WatchEvent) {
-                if (type == EventsType.CreateEvent && !InputHelper.isEmpty(eventsModel.getPayload().getRefType())) {
+                if (type == EventsType.CreateEvent && !InputHelper.isEmpty(eventsModel.getPayload().getRef())) {
                     spannableBuilder
                             .bold(itemView.getResources().getString(type.getType()).toLowerCase())
                             .append(" ")

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -8,7 +8,6 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
-import com.fastaccess.App;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
@@ -113,7 +112,8 @@ public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGrou
         }
         name.setText(commentsModel.getUser() != null ? commentsModel.getUser().getLogin() : "Anonymous");
         if (commentsModel.getCreatedAt().before(commentsModel.getUpdatedAt())) {
-            date.setText(ParseDateFormat.getTimeAgo(commentsModel.getCreatedAt()) + " " + App.getInstance().getResources().getString(R.string.edited));
+            date.setText(String.format("%s %s", ParseDateFormat.getTimeAgo(commentsModel.getCreatedAt()), itemView
+                    .getResources().getString(R.string.edited)));
         } else {
             date.setText(ParseDateFormat.getTimeAgo(commentsModel.getCreatedAt()));
         }
@@ -135,6 +135,7 @@ private void addReactionCount(View v) {
             if (comment != null) {
                 boolean isReacted = reactionsCallback == null || reactionsCallback.isPreviouslyReacted(comment.getId(), v.getId());
                 boolean isCallingApi = reactionsCallback != null && reactionsCallback.isCallingApi(comment.getId(), v.getId());
+//                if (isCallingApi) return;
                 ReactionsModel reactionsModel = comment.getReactions() != null ? comment.getReactions() : new ReactionsModel();
                 switch (v.getId()) {
                     case R.id.heart:

File: app/src/main/java/com/fastaccess/ui/base/BaseDialogFragment.java
Patch:
@@ -153,4 +153,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onDestroyView();
         if (unbinder != null) unbinder.unbind();
     }
+
+    @Override public void onScrollTop(int index) {}
 }

File: app/src/main/java/com/fastaccess/ui/base/BaseFragment.java
Patch:
@@ -134,6 +134,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         callback.onOpenSettings();
     }
 
+    @Override public void onScrollTop(int index) {}
+
     protected boolean isSafe() {
         return getView() != null && getActivity() != null && !getActivity().isFinishing();
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -25,6 +25,8 @@ interface View extends BaseMvp.FAView {
         void onInitContributions(@Nullable List<ContributionsDay> items);
 
         void onInitOrgs(@Nullable List<User> orgs);
+
+        void onUserNotFound();
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -208,7 +208,7 @@ public class IssueTimelinePresenter extends BasePresenter<IssueTimelineMvp.View>
         return getReactionsProvider().isCallingApi(id, vId);
     }
 
-    private ReactionsProvider getReactionsProvider() {
+    @NonNull private ReactionsProvider getReactionsProvider() {
         if (reactionsProvider == null) {
             reactionsProvider = new ReactionsProvider();
         }

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -95,7 +95,7 @@ public void insertItems(@NonNull List<M> items) {
 
     public void addItem(M item, int position) {
         data.add(position, item);
-        notifyItemInserted(data.size() - 1);
+        notifyItemInserted(position);
     }
 
     public void addItem(M item) {

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -138,7 +138,7 @@ public static FeedsFragment newInstance() {
     @Override public void onShowGuide(@NonNull View itemView, @NonNull Event model) {
         if (!PrefGetter.isUserIconGuideShowed()) {
             final boolean[] dismissed = {false};
-            new MaterialTapTargetPrompt.Builder(getActivity())
+            /*new MaterialTapTargetPrompt.Builder(getActivity())
                     .setTarget(itemView.findViewById(R.id.avatarLayout))
                     .setPrimaryText(R.string.users)
                     .setSecondaryText(R.string.avatar_click_hint)
@@ -172,7 +172,7 @@ public void onHidePromptComplete() {
                         }
                     })
                     .setCaptureTouchEventOutsidePrompt(true)
-                    .show();
+                    .show();*/
             ActivityHelper.showDismissHints(getContext(), () -> dismissed[0] = true);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistActivity.java
Patch:
@@ -72,7 +72,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getGist() != null && !InputHelper.isEmpty(getPresenter().getGist().getDescription()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getGist().getDescription())
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getGist().getDescription(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -73,7 +73,7 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
     @Override public void onOpenFile(@NonNull FilesListModel item) {
         if (item.getRawUrl() != null) {
             if (item.getSize() > FileHelper.ONE_MB && !MarkDownProvider.isImage(item.getRawUrl())) {
-                MessageDialogView.newInstance(getString(R.string.big_file), getString(R.string.big_file_description),
+                MessageDialogView.newInstance(getString(R.string.big_file), getString(R.string.big_file_description), false, true,
                         Bundler.start().put(BundleConstant.YES_NO_EXTRA, true).put(BundleConstant.EXTRA, item.getRawUrl()).end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogFragment.java
Patch:
@@ -56,7 +56,7 @@ public static OrgListDialogFragment newInstance() {
         toolbar.getMenu().findItem(R.id.add).setIcon(R.drawable.ic_info_outline)
                 .setTitle(R.string.no_orgs);
         toolbar.setOnMenuItemClickListener(item -> {
-            MessageDialogView.newInstance(getString(R.string.no_orgs), getString(R.string.no_orgs_description))
+            MessageDialogView.newInstance(getString(R.string.no_orgs), getString(R.string.no_orgs_description), false, true)
                     .show(getChildFragmentManager(), MessageDialogView.TAG);
             return true;
         });
@@ -76,7 +76,7 @@ public static OrgListDialogFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
-refresh.setRefreshing(true);
+        refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -16,7 +16,6 @@
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.adapter.ProfileOrgsAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -59,6 +58,7 @@ public class ProfileOverviewFragment extends BaseFragment<ProfileOverviewMvp.Vie
     @BindView(R.id.parentView) NestedScrollView parentView;
     @BindView(R.id.contributionView) GitHubContributionsView contributionView;
     @BindView(R.id.contributionCard) CardView contributionCard;
+    @State boolean contributionIsShowing;
     private ProfilePagerMvp.View profileCallback;
 
     public static ProfileOverviewFragment newInstance(@NonNull String login) {
@@ -98,6 +98,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         onInitOrgs(getPresenter().getOrgs());
+        contributionCard.setVisibility(contributionIsShowing ? View.VISIBLE : View.GONE);
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
         } else {
@@ -152,7 +153,7 @@ public static ProfileOverviewFragment newInstance(@NonNull String login) {
 
     @Override public void onInitContributions(@Nullable List<ContributionsDay> items) {
         if (items != null && !items.isEmpty()) {
-            Logger.e(items);
+            contributionIsShowing = true;
             contributionView.onResponse(items);
             contributionCard.setVisibility(View.VISIBLE);
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerActivity.java
Patch:
@@ -187,7 +187,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         Repo repoModel = getPresenter().getRepo();
         if (repoModel != null && !InputHelper.isEmpty(repoModel.getDescription())) {
-            MessageDialogView.newInstance(getString(R.string.details), repoModel.getDescription())
+            MessageDialogView.newInstance(getString(R.string.details), repoModel.getDescription(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -80,7 +80,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getCommit() != null && !InputHelper.isEmpty(getPresenter().getCommit().getGitCommit().getMessage()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getCommit().getGitCommit().getMessage(), true)
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getCommit().getGitCommit().getMessage(), true, false)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -87,7 +87,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getIssue() != null && !InputHelper.isEmpty(getPresenter().getIssue().getTitle()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getIssue().getTitle())
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getIssue().getTitle(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -88,7 +88,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.detailsIcon) void onTitleClick() {
         if (getPresenter().getPullRequest() != null && !InputHelper.isEmpty(getPresenter().getPullRequest().getTitle()))
-            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getPullRequest().getTitle())
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getPullRequest().getTitle(), false, true)
                     .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 
@@ -248,7 +248,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         PullRequest pullRequest = getPresenter().getPullRequest();
         setTitle(String.format("#%s", pullRequest.getNumber()));
         boolean isMerge = !InputHelper.isEmpty(pullRequest.getMergedAt());
-        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext())+"\n"+pullRequest.getRepoId());
+        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()) + "\n" + pullRequest.getRepoId());
         size.setVisibility(View.GONE);
         User userModel = pullRequest.getUser();
         if (userModel != null) {

File: app/src/main/java/com/fastaccess/helper/GithubConfigHelper.java
Patch:
@@ -7,7 +7,7 @@
  */
 
 public class GithubConfigHelper {
-    private static final String REDIRECT_URL = "https://fast-for-github.firebaseapp.com/__/auth/handler";
+    private static final String REDIRECT_URL = "fasthub://login";
 
     private static final String GITHUB_FDROID_CLIENT_ID = "290c67ea4022804763e0";
     private static final String GITHUB_FDROID_SECRET = "02c6a47c2cc25a95f0d58eba90ea1078f74e5740";

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -101,7 +101,7 @@ public LoginPresenter() {
         if (userModel != null) {
             userModel.setToken(PrefGetter.getToken());
             userModel.save(userModel);
-            if(getView()!=null)
+            if (getView() != null)
                 getView().onSuccessfullyLoggedIn(userModel);
             else
                 sendToView(LoginMvp.View::onSuccessfullyLoggedIn);
@@ -115,8 +115,8 @@ public LoginPresenter() {
         boolean usernameIsEmpty = InputHelper.isEmpty(username);
         boolean passwordIsEmpty = InputHelper.isEmpty(password);
         if (getView() == null) return;
-        getView().onEmptyUserName(!ignore&&usernameIsEmpty);
-        getView().onEmptyPassword(!ignore&&passwordIsEmpty);
+        getView().onEmptyUserName(!ignore && usernameIsEmpty);
+        getView().onEmptyPassword(!ignore && passwordIsEmpty);
         if ((!usernameIsEmpty && !passwordIsEmpty) || ignore) {
             String authToken = Credentials.basic(username, password);
             if (isBasicAuth) {

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -311,7 +311,8 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         if ("issues".equals(segments.get(2))) {
             String owner = segments.get(0);
             String repo = segments.get(1);
-            return CreateIssueActivity.getIntent(context, owner, repo);
+            boolean isFeedback = "k0shk0sh/FastHub".equalsIgnoreCase(owner + "/" + repo);
+            return CreateIssueActivity.getIntent(context, owner, repo, isFeedback);
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -333,11 +333,12 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
         if ("issues".equals(segments.get(2))) {
             String owner = segments.get(0);
             String repo = segments.get(1);
+            boolean isFeedback = "k0shk0sh/FastHub".equalsIgnoreCase(owner + "/" + repo);
             return TaskStackBuilder.create(context)
                     .addParentStack(MainActivity.class)
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                     .addNextIntentWithParentStack(RepoPagerActivity.createIntent(context, repo, owner, RepoPagerMvp.ISSUES))
-                    .addNextIntent(CreateIssueActivity.getIntent(context, owner, repo));
+                    .addNextIntent(CreateIssueActivity.getIntent(context, owner, repo, isFeedback));
         }
         return null;
     }

File: app/src/fdroid/java/com/fastaccess/ui/base/AdActivity.java
Patch:
@@ -1,11 +1,9 @@
 package com.fastaccess.ui.base;
 
 import android.support.annotation.Nullable;
-import android.view.View;
 import android.widget.TextView;
 
 import com.fastaccess.R;
-import com.fastaccess.helper.PrefGetter;
 
 import net.grandcentrix.thirtyinch.TiActivity;
 import net.grandcentrix.thirtyinch.TiPresenter;

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -23,6 +23,8 @@ interface View extends BaseMvp.FAView {
 
         void onEmptyPassword(boolean isEmpty);
 
+        void onSuccessfullyLoggedIn(Login userModel);
+
         void onSuccessfullyLoggedIn();
     }
 
@@ -36,6 +38,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onUserResponse(@Nullable Login response);
 
-        void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode, boolean isBasicAuth);
+        void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode, boolean isBasicAuth, @Nullable boolean ignore);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -23,6 +23,8 @@ interface View extends BaseMvp.FAView {
 
         void onEmptyPassword(boolean isEmpty);
 
+        void onSuccessfullyLoggedIn(Login userModel);
+
         void onSuccessfullyLoggedIn();
     }
 
@@ -36,6 +38,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onUserResponse(@Nullable Login response);
 
-        void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode, boolean isBasicAuth);
+        void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode, boolean isBasicAuth, @Nullable boolean ignore);
     }
 }

File: app/src/fdroid/java/com/fastaccess/ui/base/AdActivity.java
Patch:
@@ -1,11 +1,9 @@
 package com.fastaccess.ui.base;
 
 import android.support.annotation.Nullable;
-import android.view.View;
 import android.widget.TextView;
 
 import com.fastaccess.R;
-import com.fastaccess.helper.PrefGetter;
 
 import net.grandcentrix.thirtyinch.TiActivity;
 import net.grandcentrix.thirtyinch.TiPresenter;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -125,7 +125,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
         }
         if (eventsModel.getPayload() != null) {
             if (eventsModel.getPayload().getComment() != null) {
-                MarkDownProvider.setMdText(description, eventsModel.getPayload().getComment().getBody());
+                MarkDownProvider.stripMdText(description, eventsModel.getPayload().getComment().getBody());
                 description.setVisibility(View.VISIBLE);
                 if (eventsModel.getPayload().getIssue() != null) {
                     number = "#" + eventsModel.getPayload().getIssue().getNumber();

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -249,6 +249,8 @@ public void onHidePromptComplete() {
             editText.setText(editText.getText().toString().replace(sentFromFastHub, ""));
             sentVia.setChecked(true);
         }
+
+        editText.requestFocus();
     }
 
     @Override public void onSendResultAndFinish(@NonNull Comment commentModel, boolean isNew) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -125,7 +125,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
         }
         if (eventsModel.getPayload() != null) {
             if (eventsModel.getPayload().getComment() != null) {
-                MarkDownProvider.setMdText(description, eventsModel.getPayload().getComment().getBody());
+                MarkDownProvider.stripMdText(description, eventsModel.getPayload().getComment().getBody());
                 description.setVisibility(View.VISIBLE);
                 if (eventsModel.getPayload().getIssue() != null) {
                     number = "#" + eventsModel.getPayload().getIssue().getNumber();

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -249,6 +249,8 @@ public void onHidePromptComplete() {
             editText.setText(editText.getText().toString().replace(sentFromFastHub, ""));
             sentVia.setChecked(true);
         }
+
+        editText.requestFocus();
     }
 
     @Override public void onSendResultAndFinish(@NonNull Comment commentModel, boolean isNew) {

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -61,7 +61,6 @@ public static FeedsFragment newInstance() {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
-        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/settings/LanguageBottomSheetDialog.java
Patch:
@@ -76,8 +76,8 @@ public interface LanguageDialogListener {
         super.onViewCreated(view, savedInstanceState);
         int selected = Arrays.asList(values).indexOf(PrefHelper.getString("app_language"));
         String language = PrefHelper.getString("app_language");
-        cancel.setText(R.string.no);
-        ok.setText(R.string.yes);
+        cancel.setText(R.string.cancel);
+        ok.setText(R.string.ok);
 
         for (int i = 0; i < names.length; i++) {
             RadioButton radioButtonView = new RadioButton(getContext());

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryFragment.java
Patch:
@@ -267,7 +267,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
 
                     PrefHelper.set("backed_up", new SimpleDateFormat("MM/dd").format(new Date()));
                     findPreference("backup").setSummary(getString(R.string.backup_summary, getString(R.string.now)));
-                    Toasty.success(getContext(), getString(R.string.backed_up));
+                    Toasty.success(getContext(), getString(R.string.backed_up)).show();
                 } else {
                     Toasty.error(getContext(), getString(R.string.permission_failed)).show();
                 }

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsActivity.java
Patch:
@@ -43,7 +43,7 @@ public class SettingsActivity extends BaseActivity {
             case 1:
                 ActivityHelper.startReveal(this, intent, settingsList, THEME_CHANGE);
                 break;
-            case 4:
+            case 5:
                 showLanguageList();
                 break;
             default:
@@ -78,6 +78,7 @@ public class SettingsActivity extends BaseActivity {
                 Setting.newInstance(R.drawable.ic_settings, getString(R.string.behavior), ""),
                 Setting.newInstance(R.drawable.ic_brush, getString(R.string.customization), ""),
                 Setting.newInstance(R.drawable.ic_info, getString(R.string.about), ""),
+                Setting.newInstance(R.drawable.ic_backup, getString(R.string.backup), ""),
                 Setting.newInstance(R.drawable.ic_language, getString(R.string.app_language), "")
         };
 

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsActivity.java
Patch:
@@ -43,7 +43,7 @@ public class SettingsActivity extends BaseActivity {
             case 1:
                 ActivityHelper.startReveal(this, intent, settingsList, THEME_CHANGE);
                 break;
-            case 4:
+            case 5:
                 showLanguageList();
                 break;
             default:
@@ -78,6 +78,7 @@ public class SettingsActivity extends BaseActivity {
                 Setting.newInstance(R.drawable.ic_settings, getString(R.string.behavior), ""),
                 Setting.newInstance(R.drawable.ic_brush, getString(R.string.customization), ""),
                 Setting.newInstance(R.drawable.ic_info, getString(R.string.about), ""),
+                Setting.newInstance(R.drawable.ic_backup, getString(R.string.backup), ""),
                 Setting.newInstance(R.drawable.ic_language, getString(R.string.app_language), "")
         };
 

File: app/src/main/java/com/fastaccess/helper/ViewHelper.java
Patch:
@@ -150,7 +150,6 @@ public static ColorStateList textSelector(int normalColor, int pressedColor) {
 
     public static boolean isTablet(@NonNull Activity activity) {
         DisplayMetrics metrics = new DisplayMetrics();
-        activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);
 
         float yInches = metrics.heightPixels / metrics.ydpi;
         float xInches = metrics.widthPixels / metrics.xdpi;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -3,6 +3,7 @@
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.Html;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -13,6 +14,7 @@
 import com.fastaccess.data.dao.types.EventsType;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.SpannableBuilder;
@@ -123,7 +125,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
         }
         if (eventsModel.getPayload() != null) {
             if (eventsModel.getPayload().getComment() != null) {
-                description.setText(eventsModel.getPayload().getComment().getBody());
+                MarkDownProvider.setMdText(description, eventsModel.getPayload().getComment().getBody());
                 description.setVisibility(View.VISIBLE);
                 if (eventsModel.getPayload().getIssue() != null) {
                     number = "#" + eventsModel.getPayload().getIssue().getNumber();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -41,7 +41,7 @@ public class ReposViewHolder extends BaseViewHolder<Repo> {
     @BindString(R.string.forked) String forked;
     @BindString(R.string.private_repo) String privateRepo;
     @BindColor(R.color.material_indigo_700) int forkColor;
-    @BindColor(R.color.material_deep_purple_700) int privateColor;
+    @BindColor(R.color.material_grey_700) int privateColor;
     private boolean isStarred;
     private boolean withImage;
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsMvp.java
Patch:
@@ -36,6 +36,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
         void onShowDeleteMsg(long id);
 
         void onTagUser(@NonNull User user);
+
+        void onReply(User user, String message);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -115,7 +115,7 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
                 if (item1.getItemId() == R.id.delete) {
                     getView().onShowDeleteMsg(item.getId());
                 } else if (item1.getItemId() == R.id.reply) {
-                    getView().onTagUser(item.getUser());
+                    getView().onReply(item.getUser(), item.getBody());
                 } else if (item1.getItemId() == R.id.edit) {
                     getView().onEditComment(item);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.AbstractPinnedRepos;
 import com.fastaccess.data.dao.model.PinnedRepos;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.ui.adapter.PinnedReposAdapter;
@@ -59,6 +60,8 @@ public static PinnedReposFragment newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        if(!AbstractPinnedRepos.isPinned("k0shk0sh/FastHub"))
+            Repo.getRepo("FastHub", "k0shk0sh").subscribe(AbstractPinnedRepos::pinUpin);
         adapter = new PinnedReposAdapter(getPresenter().getPinnedRepos(), getPresenter());
         stateLayout.setEmptyText(R.string.empty_pinned_repos);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposPresenter.java
Patch:
@@ -39,6 +39,9 @@ public class PinnedReposPresenter extends BasePresenter<PinnedReposMvp.View> imp
     }
 
     @Override public void onItemLongClick(int position, View v, PinnedRepos item) {
+        if (item!=null)
+            if (item.getRepoFullName().equalsIgnoreCase("k0shk0sh/FastHub"))
+                return;
         if (getView() != null) {
             getView().onDeletePinnedRepo(item.getId(), position);
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -41,6 +41,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
 
         void onTagUser(@Nullable User user);
 
+        void onReply(User user, String message);
+
         void showReactionsPopup(@NonNull ReactionTypes reactionTypes, @NonNull String login, @NonNull String repoId, long commentId);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -145,7 +145,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
                     if (item1.getItemId() == R.id.delete) {
                         getView().onShowDeleteMsg(item.getId());
                     } else if (item1.getItemId() == R.id.reply) {
-                        getView().onTagUser(item.getUser());
+                        getView().onReply(item.getUser(), item.getBody());
                     } else if (item1.getItemId() == R.id.edit) {
                         getView().onEditComment(item);
                     } else if (item1.getItemId() == R.id.share) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -261,7 +261,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
                     .append(" ")
                     .append(getString(issueModel.getState().getStatus()))
                     .append(" ").append(getString(R.string.by)).append(" ").append(username).append(" ")
-                    .append(parsedDate));
+                    .append(parsedDate).append("\n").append(issueModel.getRepoId()));
             avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());
         }
         pager.setAdapter(new FragmentsPagerAdapter(getSupportFragmentManager(), FragmentPagerAdapterModel.buildForIssues(this, issueModel)));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -40,6 +40,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onTagUser(@Nullable User user);
 
+        void onReply(User user, String message);
+
         void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long idOrNumber, boolean isHeadre);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -79,7 +79,7 @@ public class IssueTimelinePresenter extends BasePresenter<IssueTimelineMvp.View>
                         if (item1.getItemId() == R.id.delete) {
                             getView().onShowDeleteMsg(item.getComment().getId());
                         } else if (item1.getItemId() == R.id.reply) {
-                            getView().onTagUser(item.getComment().getUser());
+                            getView().onReply(item.getComment().getUser(), item.getComment().getBody());
                         } else if (item1.getItemId() == R.id.edit) {
                             getView().onEditComment(item.getComment());
                         } else if (item1.getItemId() == R.id.share) {
@@ -106,7 +106,7 @@ public class IssueTimelinePresenter extends BasePresenter<IssueTimelineMvp.View>
                     popupMenu.setOnMenuItemClickListener(item1 -> {
                         if (getView() == null) return false;
                         if (item1.getItemId() == R.id.reply) {
-                            getView().onTagUser(item.getIssue().getUser());
+                            getView().onReply(item.getIssue().getUser(), item.getIssue().getBody());
                         } else if (item1.getItemId() == R.id.edit) {
                             Activity activity = ActivityHelper.getActivity(v.getContext());
                             if (activity == null) return false;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -248,7 +248,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         PullRequest pullRequest = getPresenter().getPullRequest();
         setTitle(String.format("#%s", pullRequest.getNumber()));
         boolean isMerge = !InputHelper.isEmpty(pullRequest.getMergedAt());
-        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()));
+        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext())+"\n"+pullRequest.getRepoId());
         size.setVisibility(View.GONE);
         User userModel = pullRequest.getUser();
         if (userModel != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -48,6 +48,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onTagUser(@Nullable User user);
 
+        void onReply(User user, String message);
+
         void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long idOrNumber, @ReactionsProvider
                 .ReactionType int reactionType);
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -57,7 +57,7 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                         if (item1.getItemId() == R.id.delete) {
                             getView().onShowDeleteMsg(item.getComment().getId(), false);
                         } else if (item1.getItemId() == R.id.reply) {
-                            getView().onTagUser(item.getComment().getUser());
+                            getView().onReply(item.getComment().getUser(), item.getComment().getBody());
                         } else if (item1.getItemId() == R.id.edit) {
                             getView().onEditComment(item.getComment());
                         } else if (item1.getItemId() == R.id.share) {
@@ -85,7 +85,7 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                     popupMenu.setOnMenuItemClickListener(item1 -> {
                         if (getView() == null) return false;
                         if (item1.getItemId() == R.id.reply) {
-                            getView().onTagUser(item.getPullRequest().getUser());
+                            getView().onReply(item.getPullRequest().getUser(), item.getPullRequest().getBody());
                         } else if (item1.getItemId() == R.id.edit) {
                             Activity activity = ActivityHelper.getActivity(v.getContext());
                             if (activity == null) return false;
@@ -254,7 +254,7 @@ private void loadEverything(String login, String repoId, int number, @NonNull St
                 if (item1.getItemId() == R.id.delete) {
                     getView().onShowDeleteMsg(comment.getId(), true);
                 } else if (item1.getItemId() == R.id.reply) {
-                    getView().onTagUser(comment.getUser());
+                    getView().onReply(comment.getUser(), comment.getBodyHtml());
                 } else if (item1.getItemId() == R.id.edit) {
                     getView().onEditReviewComment(comment);
                 } else if (item1.getItemId() == R.id.share) {

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchActivity.java
Patch:
@@ -109,6 +109,7 @@ void onTextChange(Editable s) {
         if(getIntent().hasExtra("search")){
             searchEditText.setText(getIntent().getStringExtra("search"));
             onTextChange(searchEditText.getEditableText());
+            getPresenter().onSearchClicked(pager, searchEditText);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesMvp.java
Patch:
@@ -25,6 +25,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onSetSearchQuery(@NonNull String query);
 
+        void onQueueSearch(@NonNull String query);
+
         @NonNull OnLoadMore<String> getLoadMore();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposMvp.java
Patch:
@@ -25,6 +25,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onSetSearchQuery(@NonNull String query);
 
+        void onQueueSearch(@NonNull String query);
+
         @NonNull OnLoadMore<String> getLoadMore();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersMvp.java
Patch:
@@ -25,6 +25,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onSetSearchQuery(@NonNull String query);
 
+        void onQueueSearch(@NonNull String query);
+
         @NonNull OnLoadMore<String> getLoadMore();
     }
 

File: app/src/main/java/com/zzhoujay/markdown/MarkDown.java
Patch:
@@ -1,7 +1,9 @@
 package com.zzhoujay.markdown;
 
 import android.text.Html;
+import android.text.Spannable;
 import android.text.Spanned;
+import android.text.style.CharacterStyle;
 import android.widget.TextView;
 
 import com.zzhoujay.markdown.parser.StyleBuilderImpl;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -261,7 +261,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
                     .append(" ")
                     .append(getString(issueModel.getState().getStatus()))
                     .append(" ").append(getString(R.string.by)).append(" ").append(username).append(" ")
-                    .append(parsedDate));
+                    .append(parsedDate).append("\n").append(issueModel.getRepoId()));
             avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());
         }
         pager.setAdapter(new FragmentsPagerAdapter(getSupportFragmentManager(), FragmentPagerAdapterModel.buildForIssues(this, issueModel)));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -79,8 +79,6 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
         participants.clear();
         participants.addAll(hashSet);
 
-        System.out.println("READ THIS: " + participants);
-
         if (items == null || items.isEmpty()) {
             adapter.clear();
             return;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -248,7 +248,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         PullRequest pullRequest = getPresenter().getPullRequest();
         setTitle(String.format("#%s", pullRequest.getNumber()));
         boolean isMerge = !InputHelper.isEmpty(pullRequest.getMergedAt());
-        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()));
+        date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext())+"\n"+pullRequest.getRepoId());
         size.setVisibility(View.GONE);
         User userModel = pullRequest.getUser();
         if (userModel != null) {

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -212,8 +212,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
             if (isFinishing()) return;
             if (item.getItemId() == R.id.navToRepo) {
                 onNavToRepoClicked();
-            } else if (item.getItemId() == R.id.fhRepo) {
-                startActivity(RepoPagerActivity.createIntent(this, "FastHub", "k0shk0sh"));
             } else if (item.getItemId() == R.id.supportDev) {
                 startActivity(new Intent(this, DonationActivity.class));
             } else if (item.getItemId() == R.id.gists) {

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.AbstractPinnedRepos;
 import com.fastaccess.data.dao.model.PinnedRepos;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.ui.adapter.PinnedReposAdapter;
@@ -59,6 +60,8 @@ public static PinnedReposFragment newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        if(!AbstractPinnedRepos.isPinned("k0shk0sh/FastHub"))
+            Repo.getRepo("FastHub", "k0shk0sh").subscribe(AbstractPinnedRepos::pinUpin);
         adapter = new PinnedReposAdapter(getPresenter().getPinnedRepos(), getPresenter());
         stateLayout.setEmptyText(R.string.empty_pinned_repos);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposPresenter.java
Patch:
@@ -39,6 +39,9 @@ public class PinnedReposPresenter extends BasePresenter<PinnedReposMvp.View> imp
     }
 
     @Override public void onItemLongClick(int position, View v, PinnedRepos item) {
+        if (item!=null)
+            if (item.getRepoFullName().equalsIgnoreCase("k0shk0sh/FastHub"))
+                return;
         if (getView() != null) {
             getView().onDeletePinnedRepo(item.getId(), position);
         }

File: app/src/main/java/com/fastaccess/helper/ViewHelper.java
Patch:
@@ -150,7 +150,6 @@ public static ColorStateList textSelector(int normalColor, int pressedColor) {
 
     public static boolean isTablet(@NonNull Activity activity) {
         DisplayMetrics metrics = new DisplayMetrics();
-        activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);
 
         float yInches = metrics.heightPixels / metrics.ydpi;
         float xInches = metrics.widthPixels / metrics.xdpi;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -3,6 +3,7 @@
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.Html;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -13,6 +14,7 @@
 import com.fastaccess.data.dao.types.EventsType;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
+import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.SpannableBuilder;
@@ -123,7 +125,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
         }
         if (eventsModel.getPayload() != null) {
             if (eventsModel.getPayload().getComment() != null) {
-                description.setText(eventsModel.getPayload().getComment().getBody());
+                MarkDownProvider.setMdText(description, eventsModel.getPayload().getComment().getBody());
                 description.setVisibility(View.VISIBLE);
                 if (eventsModel.getPayload().getIssue() != null) {
                     number = "#" + eventsModel.getPayload().getIssue().getNumber();

File: app/src/main/java/com/zzhoujay/markdown/MarkDown.java
Patch:
@@ -1,7 +1,9 @@
 package com.zzhoujay.markdown;
 
 import android.text.Html;
+import android.text.Spannable;
 import android.text.Spanned;
+import android.text.style.CharacterStyle;
 import android.widget.TextView;
 
 import com.zzhoujay.markdown.parser.StyleBuilderImpl;

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -45,7 +45,6 @@
 import com.fastaccess.ui.modules.pinned.PinnedReposActivity;
 import com.fastaccess.ui.modules.repos.RepoPagerActivity;
 import com.fastaccess.ui.modules.settings.SettingsActivity;
-import com.fastaccess.ui.modules.settings.SettingsBottomSheetDialog;
 import com.fastaccess.ui.modules.user.UserPagerActivity;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.dialog.MessageDialogView;

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -61,6 +61,7 @@ public static FeedsFragment newInstance() {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
@@ -85,6 +86,8 @@ public static FeedsFragment newInstance() {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -98,6 +98,8 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 
@@ -154,6 +156,7 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (savedInstanceState != null) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsFragment.java
Patch:
@@ -51,6 +51,7 @@ public static GistsFragment newInstance() {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getGists().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
@@ -76,6 +77,8 @@ public static GistsFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsFragment.java
Patch:
@@ -68,6 +68,7 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addNormalSpacingDivider();
         if (getPresenter().getComments().isEmpty() && !getPresenter().isApiCalled()) {
@@ -106,6 +107,8 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -66,6 +66,7 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
         }
         if (!filesListModel.isEmpty()) {
             recycler.setAdapter(new GistFilesAdapter(filesListModel, getPresenter()));
+            recycler.addKeyLineDivider();
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -22,11 +22,13 @@ interface MainMvp {
     int FEEDS = 0;
     int ISSUES = 1;
     int PULL_REQUESTS = 2;
+    int PROFILE = 3;
 
     @IntDef({
             FEEDS,
             ISSUES,
-            PULL_REQUESTS
+            PULL_REQUESTS,
+            PROFILE
     })
     @Retention(RetentionPolicy.SOURCE) @interface NavigationType {}
 

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -91,6 +91,8 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 
@@ -130,6 +132,7 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogFragment.java
Patch:
@@ -68,12 +68,15 @@ public static OrgListDialogFragment newInstance() {
         recycler.setEmptyView(stateLayout, refresh);
         adapter = new UsersAdapter(getPresenter().getOrgs());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         if (savedInstanceState == null) {
             getPresenter().onLoadOrgs();
         }
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestFragment.java
Patch:
@@ -91,6 +91,8 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 
@@ -156,6 +158,7 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
         recycler.addDivider();
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getPullRequests().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -93,6 +93,7 @@ public static AllNotificationsFragment newInstance() {
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addDivider(NotificationsViewHolder.class);
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();
@@ -104,6 +105,7 @@ public static AllNotificationsFragment newInstance() {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+        refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsFragment.java
Patch:
@@ -80,6 +80,7 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addDivider(NotificationsViewHolder.class);
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();
@@ -92,6 +93,8 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -63,6 +63,7 @@ public static PinnedReposFragment newInstance() {
         stateLayout.setEmptyText(R.string.empty_pinned_repos);
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         refresh.setOnRefreshListener(() -> getPresenter().onReload());
         stateLayout.setOnReloadListener(v -> getPresenter().onReload());
         if (savedInstanceState == null) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileFollowersFragment newInstance(@NonNull String username) {
         adapter = new UsersAdapter(getPresenter().getFollowers());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (getPresenter().getFollowers().isEmpty() && !getPresenter().isApiCalled()) {
@@ -81,6 +82,8 @@ public static ProfileFollowersFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingFragment.java
Patch:
@@ -81,6 +81,8 @@ public static ProfileFollowingFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsFragment.java
Patch:
@@ -59,6 +59,7 @@ public static ProfileGistsFragment newInstance(@NonNull String login) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getGists().isEmpty() && !getPresenter().isApiCalled()) {
@@ -85,6 +86,8 @@ public static ProfileGistsFragment newInstance(@NonNull String login) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/feeds/OrgFeedsFragment.java
Patch:
@@ -65,6 +65,7 @@ public static OrgFeedsFragment newInstance(@NonNull String org) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
@@ -90,6 +91,8 @@ public static OrgFeedsFragment newInstance(@NonNull String org) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/members/OrgMembersFragment.java
Patch:
@@ -80,6 +80,8 @@ public static OrgMembersFragment newInstance(@NonNull String username) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposFragment.java
Patch:
@@ -68,6 +68,7 @@ public static OrgReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
@@ -81,6 +82,8 @@ public static OrgReposFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamFragment.java
Patch:
@@ -80,6 +80,8 @@ public static OrgTeamFragment newInstance(@NonNull String username) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/members/TeamMembersFragment.java
Patch:
@@ -80,6 +80,8 @@ public static TeamMembersFragment newInstance(@NonNull Long id) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/repos/TeamReposFragment.java
Patch:
@@ -81,6 +81,8 @@ public static TeamReposFragment newInstance(long id) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
@@ -81,6 +82,8 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
@@ -81,6 +82,8 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -24,11 +24,13 @@ public interface RepoPagerMvp {
     int CODE = 0;
     int ISSUES = 1;
     int PULL_REQUEST = 2;
+    int PROFILE = 3;
 
     @IntDef({
             CODE,
             ISSUES,
             PULL_REQUEST,
+            PROFILE
     })
     @Retention(RetentionPolicy.SOURCE) @interface RepoNavigationType {}
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsFragment.java
Patch:
@@ -105,6 +105,7 @@ public static RepoCommitsFragment newInstance(@NonNull String repoId, @NonNull S
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new CommitsAdapter(getPresenter().getCommits());
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
@@ -124,6 +125,8 @@ public static RepoCommitsFragment newInstance(@NonNull String repoId, @NonNull S
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -66,6 +66,7 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
         stateLayout.setEmptyText(R.string.no_comments);
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setItemViewCacheSize(30);
+        recycler.addKeyLineDivider();
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true, this);
@@ -110,6 +111,8 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -63,6 +63,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
         refresh.setEnabled(false);
         stateLayout.setEmptyText(R.string.no_files);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new CommitFilesAdapter(getPresenter().getFiles(), this);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsFragment.java
Patch:
@@ -67,6 +67,7 @@ public static RepoContributorsFragment newInstance(@NonNull String repoId, @NonN
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new UsersAdapter(getPresenter().getUsers(), true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
@@ -85,6 +86,8 @@ public static RepoContributorsFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -121,6 +121,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new RepoFilesAdapter(getPresenter().getFiles());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
@@ -159,6 +160,8 @@ public void onHidePromptComplete() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesFragment.java
Patch:
@@ -137,6 +137,8 @@ public void onHidePromptComplete() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsDialogFragment.java
Patch:
@@ -89,6 +89,7 @@ public static LabelsDialogFragment newInstance(@NonNull List<LabelModel> models,
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         stateLayout.setEmptyText(R.string.no_labels);
         recycler.setEmptyView(stateLayout);
+        recycler.addKeyLineDivider();
         title.setText(R.string.labels);
         add.setVisibility(View.VISIBLE);
         List<LabelModel> list = getArguments().getParcelableArrayList(BundleConstant.ITEM);

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/create/CreateLabelDialogFragment.java
Patch:
@@ -79,6 +79,7 @@ public static CreateLabelDialogFragment newInstance(@NonNull String login, @NonN
         }
         ;
         recycler.setAdapter(new LabelColorsAdapter(Arrays.asList(getResources().getStringArray(R.array.label_colors)), getPresenter()));
+        recycler.addKeyLineDivider();
         toolbar.setTitle(R.string.create_label);
         toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(item -> dismiss());

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneDialogFragment.java
Patch:
@@ -102,6 +102,7 @@ public static MilestoneDialogFragment newInstance(@NonNull String login, @NonNul
         adapter.setListener(getPresenter());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         if (savedInstanceState == null || (getPresenter().getMilestones().isEmpty() && !getPresenter().isApiCalled())) {
             getPresenter().onLoadMilestones(login, repo);
         }
@@ -110,6 +111,8 @@ public static MilestoneDialogFragment newInstance(@NonNull String login, @NonNul
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/misc/RepoMiscDialogFragment.java
Patch:
@@ -104,6 +104,8 @@ public static void show(@NonNull FragmentManager fragmentManager, @NonNull Strin
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesFragment.java
Patch:
@@ -100,6 +100,7 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments(), IssueState.closed);
@@ -134,6 +135,8 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -103,6 +103,7 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments(), IssueState.open);
@@ -142,6 +143,8 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -96,6 +96,8 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestFragment.java
Patch:
@@ -92,6 +92,7 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
@@ -126,6 +127,8 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsFragment.java
Patch:
@@ -73,6 +73,7 @@ public static PullRequestCommitsFragment newInstance(@NonNull String repoId, @No
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
@@ -87,6 +88,8 @@ public static PullRequestCommitsFragment newInstance(@NonNull String repoId, @No
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -77,6 +77,7 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
@@ -91,6 +92,8 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -99,6 +99,8 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/reactions/ReactionsDialogFragment.java
Patch:
@@ -93,6 +93,8 @@ public static ReactionsDialogFragment newInstance(@NonNull String login, @NonNul
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/MessageDialogView.java
Patch:
@@ -87,6 +87,9 @@ public interface MessageDialogViewActionCallback {
             if (yesNo) {
                 ok.setText(R.string.yes);
                 cancel.setText(R.string.no);
+            } else if (!bundle.getBundle("bundle").getString("primary_extra", "").isEmpty()){
+                ok.setText(bundle.getBundle("bundle").getString("primary_extra", ""));
+                cancel.setText(bundle.getBundle("bundle").getString("secondary_extra", ""));
             }
         }
         message.setText(msg);

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -61,6 +61,7 @@ public static FeedsFragment newInstance() {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -156,6 +156,7 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (savedInstanceState != null) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsFragment.java
Patch:
@@ -51,6 +51,7 @@ public static GistsFragment newInstance() {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getGists().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsFragment.java
Patch:
@@ -68,6 +68,7 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addNormalSpacingDivider();
         if (getPresenter().getComments().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -66,6 +66,7 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
         }
         if (!filesListModel.isEmpty()) {
             recycler.setAdapter(new GistFilesAdapter(filesListModel, getPresenter()));
+            recycler.addKeyLineDivider();
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -132,6 +132,7 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogFragment.java
Patch:
@@ -68,6 +68,7 @@ public static OrgListDialogFragment newInstance() {
         recycler.setEmptyView(stateLayout, refresh);
         adapter = new UsersAdapter(getPresenter().getOrgs());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         if (savedInstanceState == null) {
             getPresenter().onLoadOrgs();
         }

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestFragment.java
Patch:
@@ -158,6 +158,7 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
         recycler.addDivider();
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null || (getPresenter().getPullRequests().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -93,6 +93,7 @@ public static AllNotificationsFragment newInstance() {
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addDivider(NotificationsViewHolder.class);
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsFragment.java
Patch:
@@ -80,6 +80,7 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addDivider(NotificationsViewHolder.class);
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposFragment.java
Patch:
@@ -63,6 +63,7 @@ public static PinnedReposFragment newInstance() {
         stateLayout.setEmptyText(R.string.empty_pinned_repos);
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         refresh.setOnRefreshListener(() -> getPresenter().onReload());
         stateLayout.setOnReloadListener(v -> getPresenter().onReload());
         if (savedInstanceState == null) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileFollowersFragment newInstance(@NonNull String username) {
         adapter = new UsersAdapter(getPresenter().getFollowers());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addKeyLineDivider();
         if (getPresenter().getFollowers().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsFragment.java
Patch:
@@ -59,6 +59,7 @@ public static ProfileGistsFragment newInstance(@NonNull String login) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getGists().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/feeds/OrgFeedsFragment.java
Patch:
@@ -65,6 +65,7 @@ public static OrgFeedsFragment newInstance(@NonNull String org) {
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (getPresenter().getEvents().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposFragment.java
Patch:
@@ -68,6 +68,7 @@ public static OrgReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), false);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredFragment.java
Patch:
@@ -68,6 +68,7 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
         adapter = new ReposAdapter(getPresenter().getRepos(), true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsFragment.java
Patch:
@@ -105,6 +105,7 @@ public static RepoCommitsFragment newInstance(@NonNull String repoId, @NonNull S
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new CommitsAdapter(getPresenter().getCommits());
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -66,6 +66,7 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
         stateLayout.setEmptyText(R.string.no_comments);
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setItemViewCacheSize(30);
+        recycler.addKeyLineDivider();
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new IssuePullsTimelineAdapter(getPresenter().getComments(), this, true, this);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -63,6 +63,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
         refresh.setEnabled(false);
         stateLayout.setEmptyText(R.string.no_files);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new CommitFilesAdapter(getPresenter().getFiles(), this);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsFragment.java
Patch:
@@ -67,6 +67,7 @@ public static RepoContributorsFragment newInstance(@NonNull String repoId, @NonN
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new UsersAdapter(getPresenter().getUsers(), true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -121,6 +121,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(v -> onRefresh());
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addKeyLineDivider();
         adapter = new RepoFilesAdapter(getPresenter().getFiles());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsDialogFragment.java
Patch:
@@ -89,6 +89,7 @@ public static LabelsDialogFragment newInstance(@NonNull List<LabelModel> models,
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         stateLayout.setEmptyText(R.string.no_labels);
         recycler.setEmptyView(stateLayout);
+        recycler.addKeyLineDivider();
         title.setText(R.string.labels);
         add.setVisibility(View.VISIBLE);
         List<LabelModel> list = getArguments().getParcelableArrayList(BundleConstant.ITEM);

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/create/CreateLabelDialogFragment.java
Patch:
@@ -79,6 +79,7 @@ public static CreateLabelDialogFragment newInstance(@NonNull String login, @NonN
         }
         ;
         recycler.setAdapter(new LabelColorsAdapter(Arrays.asList(getResources().getStringArray(R.array.label_colors)), getPresenter()));
+        recycler.addKeyLineDivider();
         toolbar.setTitle(R.string.create_label);
         toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(item -> dismiss());

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneDialogFragment.java
Patch:
@@ -102,6 +102,7 @@ public static MilestoneDialogFragment newInstance(@NonNull String login, @NonNul
         adapter.setListener(getPresenter());
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         if (savedInstanceState == null || (getPresenter().getMilestones().isEmpty() && !getPresenter().isApiCalled())) {
             getPresenter().onLoadMilestones(login, repo);
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesFragment.java
Patch:
@@ -100,6 +100,7 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments(), IssueState.closed);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -103,6 +103,7 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments(), IssueState.open);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestFragment.java
Patch:
@@ -92,6 +92,7 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsFragment.java
Patch:
@@ -73,6 +73,7 @@ public static PullRequestCommitsFragment newInstance(@NonNull String repoId, @No
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -77,6 +77,7 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -22,11 +22,13 @@ interface MainMvp {
     int FEEDS = 0;
     int ISSUES = 1;
     int PULL_REQUESTS = 2;
+    int PROFILE = 3;
 
     @IntDef({
             FEEDS,
             ISSUES,
-            PULL_REQUESTS
+            PULL_REQUESTS,
+            PROFILE
     })
     @Retention(RetentionPolicy.SOURCE) @interface NavigationType {}
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -24,11 +24,13 @@ public interface RepoPagerMvp {
     int CODE = 0;
     int ISSUES = 1;
     int PULL_REQUEST = 2;
+    int PROFILE = 3;
 
     @IntDef({
             CODE,
             ISSUES,
             PULL_REQUEST,
+            PROFILE
     })
     @Retention(RetentionPolicy.SOURCE) @interface RepoNavigationType {}
 

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -228,8 +228,8 @@ public void onHidePromptComplete() {
         } else {
             ViewHelper.hideKeyboard(editText);
             MessageDialogView.newInstance(getString(R.string.close), getString(R.string.unsaved_data_warning),
-                    Bundler.start().put(BundleConstant.YES_NO_EXTRA, true).put(BundleConstant.EXTRA, true).end())
-                    .show(getSupportFragmentManager(), MessageDialogView.TAG);
+                    Bundler.start().put("primary_extra", getString(R.string.discard)).put("secondary_extra", getString(R.string.cancel))
+                    .put(BundleConstant.EXTRA, true).end()).show(getSupportFragmentManager(), MessageDialogView.TAG);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/MessageDialogView.java
Patch:
@@ -87,6 +87,9 @@ public interface MessageDialogViewActionCallback {
             if (yesNo) {
                 ok.setText(R.string.yes);
                 cancel.setText(R.string.no);
+            } else if (!bundle.getBundle("bundle").getString("primary_extra", "").isEmpty()){
+                ok.setText(bundle.getBundle("bundle").getString("primary_extra", ""));
+                cancel.setText(bundle.getBundle("bundle").getString("secondary_extra", ""));
             }
         }
         message.setText(msg);

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsFragment.java
Patch:
@@ -85,6 +85,8 @@ public static FeedsFragment newInstance() {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssueFragment.java
Patch:
@@ -98,6 +98,8 @@ public class FilterIssueFragment extends BaseFragment<FilterIssuesMvp.View, Filt
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsFragment.java
Patch:
@@ -76,6 +76,8 @@ public static GistsFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsFragment.java
Patch:
@@ -106,6 +106,8 @@ public static GistCommentsFragment newInstance(@NonNull String gistId) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesFragment.java
Patch:
@@ -91,6 +91,8 @@ public static MyIssuesFragment newInstance(@NonNull IssueState issueState, @NonN
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/orgs/OrgListDialogFragment.java
Patch:
@@ -74,6 +74,8 @@ public static OrgListDialogFragment newInstance() {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestFragment.java
Patch:
@@ -91,6 +91,8 @@ public static MyPullRequestFragment newInstance(@NonNull IssueState issueState,
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -105,6 +105,8 @@ public static AllNotificationsFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+        refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/unread/UnreadNotificationsFragment.java
Patch:
@@ -92,6 +92,8 @@ public class UnreadNotificationsFragment extends BaseFragment<UnreadNotification
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersFragment.java
Patch:
@@ -81,6 +81,8 @@ public static ProfileFollowersFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingFragment.java
Patch:
@@ -81,6 +81,8 @@ public static ProfileFollowingFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsFragment.java
Patch:
@@ -85,6 +85,8 @@ public static ProfileGistsFragment newInstance(@NonNull String login) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/feeds/OrgFeedsFragment.java
Patch:
@@ -90,6 +90,8 @@ public static OrgFeedsFragment newInstance(@NonNull String org) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/members/OrgMembersFragment.java
Patch:
@@ -80,6 +80,8 @@ public static OrgMembersFragment newInstance(@NonNull String username) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/repos/OrgReposFragment.java
Patch:
@@ -81,6 +81,8 @@ public static OrgReposFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamFragment.java
Patch:
@@ -80,6 +80,8 @@ public static OrgTeamFragment newInstance(@NonNull String username) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/members/TeamMembersFragment.java
Patch:
@@ -80,6 +80,8 @@ public static TeamMembersFragment newInstance(@NonNull Long id) {
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/repos/TeamReposFragment.java
Patch:
@@ -81,6 +81,8 @@ public static TeamReposFragment newInstance(long id) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposFragment.java
Patch:
@@ -81,6 +81,8 @@ public static ProfileReposFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredFragment.java
Patch:
@@ -81,6 +81,8 @@ public static ProfileStarredFragment newInstance(@NonNull String username) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsFragment.java
Patch:
@@ -124,6 +124,8 @@ public static RepoCommitsFragment newInstance(@NonNull String repoId, @NonNull S
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -110,6 +110,8 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsFragment.java
Patch:
@@ -85,6 +85,8 @@ public static RepoContributorsFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -159,6 +159,8 @@ public void onHidePromptComplete() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesFragment.java
Patch:
@@ -137,6 +137,8 @@ public void onHidePromptComplete() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneDialogFragment.java
Patch:
@@ -110,6 +110,8 @@ public static MilestoneDialogFragment newInstance(@NonNull String login, @NonNul
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/misc/RepoMiscDialogFragment.java
Patch:
@@ -104,6 +104,8 @@ public static void show(@NonNull FragmentManager fragmentManager, @NonNull Strin
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesFragment.java
Patch:
@@ -134,6 +134,8 @@ public static RepoClosedIssuesFragment newInstance(@NonNull String repoId, @NonN
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesFragment.java
Patch:
@@ -142,6 +142,8 @@ public static RepoOpenedIssuesFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -96,6 +96,8 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestFragment.java
Patch:
@@ -126,6 +126,8 @@ public static RepoPullRequestFragment newInstance(@NonNull String repoId, @NonNu
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsFragment.java
Patch:
@@ -87,6 +87,8 @@ public static PullRequestCommitsFragment newInstance(@NonNull String repoId, @No
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -91,6 +91,8 @@ public static PullRequestFilesFragment newInstance(@NonNull String repoId, @NonN
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -99,6 +99,8 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest pullR
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/reactions/ReactionsDialogFragment.java
Patch:
@@ -93,6 +93,8 @@ public static ReactionsDialogFragment newInstance(@NonNull String login, @NonNul
     }
 
     @Override public void showProgress(@StringRes int resId) {
+
+refresh.setRefreshing(true);
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeFragment.java
Patch:
@@ -107,6 +107,8 @@ public static SearchCodeFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesFragment.java
Patch:
@@ -103,6 +103,8 @@ public static SearchIssuesFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+        refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposFragment.java
Patch:
@@ -106,6 +106,8 @@ public static SearchReposFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersFragment.java
Patch:
@@ -104,6 +104,8 @@ public static SearchUsersFragment newInstance() {
 
     @Override public void showProgress(@StringRes int resId) {
 
+        refresh.setRefreshing(true);
+
         stateLayout.showProgress();
     }
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -45,7 +45,6 @@
 import com.fastaccess.ui.modules.pinned.PinnedReposActivity;
 import com.fastaccess.ui.modules.repos.RepoPagerActivity;
 import com.fastaccess.ui.modules.settings.SettingsActivity;
-import com.fastaccess.ui.modules.settings.SettingsBottomSheetDialog;
 import com.fastaccess.ui.modules.user.UserPagerActivity;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.dialog.MessageDialogView;

File: app/src/main/java/com/fastaccess/ui/modules/settings/LanguageBottomSheetDialog.java
Patch:
@@ -7,6 +7,7 @@
 import android.support.annotation.Nullable;
 import android.view.Gravity;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.RadioButton;
 import android.widget.RadioGroup;
 
@@ -85,6 +86,8 @@ public interface LanguageDialogListener {
 
 		for (int i = 0; i < names.length; i++) {
 			RadioButton radioButtonView = new RadioButton(getContext());
+			RadioGroup.LayoutParams params = new RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+			radioButtonView.setLayoutParams(params);
 			radioButtonView.setText(names[i]);
 			radioButtonView.setId(i);
 			radioButtonView.setGravity(Gravity.CENTER_VERTICAL);

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPullRequest.java
Patch:
@@ -157,7 +157,7 @@ public static Observable<PullRequest> getPullRequestByNumber(int number, @NonNul
                             .append("/")
                             .bold(parser.getRepoId())
                             .append(" ")
-                            .append("#").append(String.valueOf(pullRequest.getNumber()))
+                            .bold("#").bold(String.valueOf(pullRequest.getNumber()))
                             .append(" ");
             } else {
                 builder.bold("#" + pullRequest.getNumber())
@@ -187,7 +187,7 @@ public static Observable<PullRequest> getPullRequestByNumber(int number, @NonNul
                             .append("/")
                             .bold(parser.getRepoId())
                             .append(" ")
-                            .append("#").append(String.valueOf(pullRequest.getNumber()))
+                            .bold("#").bold(String.valueOf(pullRequest.getNumber()))
                             .append(" ");
                 }
             } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitFilesViewHolder.java
Patch:
@@ -33,7 +33,7 @@ public class CommitFilesViewHolder extends BaseViewHolder<CommitFileModel> {
     @BindView(R.id.open) View open;
     @BindString(R.string.changes) String changesText;
     @BindString(R.string.addition) String additionText;
-    @BindString(R.string.delete) String deletionText;
+    @BindString(R.string.deletion) String deletionText;
     @BindString(R.string.status) String statusText;
     private final int patchAdditionColor;
     private final int patchDeletionColor;

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/viewer/FullCommitFileActivity.java
Patch:
@@ -44,7 +44,7 @@ public class FullCommitFileActivity extends BaseActivity {
     @BindView(R.id.status) FontTextView status;
     @BindString(R.string.changes) String changesText;
     @BindString(R.string.addition) String additionText;
-    @BindString(R.string.delete) String deletionText;
+    @BindString(R.string.deletion) String deletionText;
     @BindString(R.string.status) String statusText;
 
     public static void start(@NonNull Context context, @NonNull CommitFileModel fileModel) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -60,6 +60,8 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
                 if (parser != null) builder.bold(parser.getLogin())
                         .append("/")
                         .bold(parser.getRepoId())
+                        .append("#")
+                        .append(String.valueOf(issueModel.getNumber())).append(" ")
                         .append(" ");
             }
             if (!showRepoName) {

File: app/src/main/java/com/fastaccess/ui/modules/settings/category/SettingsCategoryPresenter.java
Patch:
@@ -6,5 +6,4 @@
  * Created by JediB on 5/12/2017.
  */
 
-class SettingsCategoryPresenter extends BasePresenter implements SettingsCategoryMvp.Presenter{
-}
\ No newline at end of file
+class SettingsCategoryPresenter extends BasePresenter implements SettingsCategoryMvp.Presenter{}
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/adapter/NotificationsAdapter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.support.annotation.NonNull;
 import android.support.v7.widget.StaggeredGridLayoutManager;
+import android.view.View;
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
@@ -47,8 +48,7 @@ public NotificationsAdapter(@NonNull ArrayList<GroupedNotificationModel> eventsM
             ((NotificationsHeaderViewHolder) holder).bind(getItem(position));
             if(hideClear)
                 if(getItem(Math.min(position+1, getItemCount()-1)).getNotification().isUnread())
-                    ((FontTextView)((NotificationsHeaderViewHolder) holder).itemView).
-                            setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_clear_all, 0);
+                    (((NotificationsHeaderViewHolder) holder).itemView).findViewById(R.id.markAsRead).setVisibility(View.VISIBLE);
         } else {
             ((NotificationsViewHolder) holder).bind(getItem(position));
         }

File: app/src/main/java/com/fastaccess/ui/base/BaseBottomSheetDialog.java
Patch:
@@ -98,7 +98,7 @@
     @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
         final Dialog dialog = super.onCreateDialog(savedInstanceState);
         dialog.setOnShowListener(dialogInterface -> {
-            if (ViewHelper.isTablet(getContext())) {
+            if (ViewHelper.isTablet(getActivity())) {
                 if (dialog.getWindow() != null) {
                     dialog.getWindow().setLayout(
                             ViewGroup.LayoutParams.WRAP_CONTENT,

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -86,7 +86,7 @@ public static AllNotificationsFragment newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        adapter = new NotificationsAdapter(getPresenter().getNotifications(),true);
+        adapter = new NotificationsAdapter(getPresenter().getNotifications(),true, true);
         adapter.setListener(getPresenter());
         refresh.setOnRefreshListener(this);
         stateLayout.setEmptyText(R.string.no_notifications);

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -31,7 +31,8 @@ public interface IssueService {
 
     @GET("repos/{owner}/{repo}/issues")
     Observable<Pageable<Issue>> getRepositoryIssues(@Path("owner") String owner, @Path("repo") String repo,
-                                                    @Query("state") String state, @Query("page") int page);
+                                                    @Query("state") String state, @Query("sort") String sortBy,
+                                                    @Query("page") int page);
 
     @GET("search/issues") Observable<Pageable<Issue>> getIssuesWithCount(@NonNull @Query(value = "q", encoded = true) String query,
                                                                          @Query("page") int page);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -16,6 +16,8 @@ interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {
 
         void setCurrentItem(int index, boolean refresh);
 
+        void onChangeIssueSort(boolean isLastUpdated);
+
         @IntRange(from = 0, to = 1) int getCurrentItem();
     }
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -70,7 +70,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     @Nullable @BindView(R.id.toolbar) Toolbar toolbar;
     @Nullable @BindView(R.id.appbar) public AppBarLayout appbar;
     @Nullable @BindView(R.id.drawer) public DrawerLayout drawer;
-    @Nullable @BindView(R.id.extrasNav) NavigationView extraNav;
+    @Nullable @BindView(R.id.extrasNav) public NavigationView extraNav;
 
     private long backPressTimer;
     private Toast toast;

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -33,6 +33,8 @@ interface MainMvp {
     interface View extends BaseMvp.FAView {
 
         void onNavigationChanged(@NavigationType int navType);
+
+        void onUpdateDrawerMenuHeader();
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsFragment.java
Patch:
@@ -86,7 +86,7 @@ public static AllNotificationsFragment newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        adapter = new NotificationsAdapter(getPresenter().getNotifications(),true);
+        adapter = new NotificationsAdapter(getPresenter().getNotifications(),true, true);
         adapter.setListener(getPresenter());
         refresh.setOnRefreshListener(this);
         stateLayout.setEmptyText(R.string.no_notifications);

File: app/src/main/java/com/fastaccess/ui/base/BaseBottomSheetDialog.java
Patch:
@@ -98,7 +98,7 @@
     @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
         final Dialog dialog = super.onCreateDialog(savedInstanceState);
         dialog.setOnShowListener(dialogInterface -> {
-            if (ViewHelper.isTablet(getContext())) {
+            if (ViewHelper.isTablet(getActivity())) {
                 if (dialog.getWindow() != null) {
                     dialog.getWindow().setLayout(
                             ViewGroup.LayoutParams.WRAP_CONTENT,

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -115,6 +115,7 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
 
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        setToolbarIcon(R.drawable.ic_clear);
         sentVia.setChecked(PrefGetter.isSentViaEnabled());
         sentVia.setText(getString(R.string.sent_from_fasthub, AppHelper.getDeviceName(), getString(R.string.app_name)));
         if (savedInstanceState == null) {

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -180,7 +180,7 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
         if (item.getItemId() == R.id.submit) {
             if (sentVia.isChecked()) {
                 String temp = savedText.toString();
-                if (!temp.contains(sentFromFastHub)) {
+                if (!temp.contains(sentFromFastHub) && !InputHelper.isEmpty(savedText)) {
                     savedText = savedText + sentFromFastHub;
                 }
             }

File: app/src/main/java/com/fastaccess/ui/modules/splash/SplashActivity.java
Patch:
@@ -12,8 +12,7 @@
 
 public class SplashActivity extends AppCompatActivity {
 
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
+    @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         if (PrefGetter.getThemeType(this) == PrefGetter.DARK) {
             PackageManager p = getPackageManager();

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -95,6 +95,7 @@ public AvatarLayout(@NonNull Context context, @Nullable AttributeSet attrs, @Att
     }
 
     @Override public void onLoadingCancelled(String imageUri, View view) {}
+
     public void setUrl(@Nullable String url, @Nullable String login) {
         setUrl(url, login, false);
     }

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -3,6 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.webkit.MimeTypeMap;
+import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.TextView;
 

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -16,6 +16,7 @@
 import com.fastaccess.provider.timeline.handler.BetterLinkMovementExtended;
 import com.fastaccess.provider.timeline.handler.DrawableHandler;
 import com.fastaccess.provider.timeline.handler.ItalicHandler;
+import com.fastaccess.provider.timeline.handler.LinkHandler;
 import com.fastaccess.provider.timeline.handler.ListsHandler;
 import com.fastaccess.provider.timeline.handler.MarginHandler;
 import com.fastaccess.provider.timeline.handler.PreTagHandler;
@@ -73,6 +74,7 @@ private static HtmlSpanner initHtml(@NonNull TextView textView) {
         mySpanner.registerHandler("del", new StrikethroughHandler());
         mySpanner.registerHandler("sub", new SubScriptHandler());
         mySpanner.registerHandler("sup", new SuperScriptHandler());
+        mySpanner.registerHandler("a", new LinkHandler());
         TableHandler tableHandler = new TableHandler();
         tableHandler.setTextColor(ViewHelper.generateTextColor(windowBackground));
         WindowManager windowManager = (WindowManager) textView.getContext().getSystemService(Context.WINDOW_SERVICE);

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -95,7 +95,6 @@ public AvatarLayout(@NonNull Context context, @Nullable AttributeSet attrs, @Att
     }
 
     @Override public void onLoadingCancelled(String imageUri, View view) {}
-
     public void setUrl(@Nullable String url, @Nullable String login) {
         setUrl(url, login, false);
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -11,6 +11,7 @@
 import com.fastaccess.data.dao.PayloadModel;
 import com.fastaccess.data.dao.model.Event;
 import com.fastaccess.data.dao.types.EventsType;
+import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -74,14 +75,13 @@ public static View getView(@NonNull ViewGroup viewGroup) {
             spannableBuilder.bold(action != null ? action.toLowerCase() : "")
                     .append(eventsModel.getPayload() != null && eventsModel.getPayload().getAction() != null ? " " : "");
             if (type != EventsType.WatchEvent) {
-                if (type == EventsType.CreateEvent && eventsModel.getPayload()
-                        .getRefType().equalsIgnoreCase("branch")) {
+                if (type == EventsType.CreateEvent && !InputHelper.isEmpty(eventsModel.getPayload().getRefType())) {
                     spannableBuilder
                             .bold(itemView.getResources().getString(type.getType()).toLowerCase())
                             .append(" ")
                             .bold(eventsModel.getPayload().getRefType())
                             .append(" ")
-                            .append(to)
+                            .append(in)
                             .append(" ");
                 } else if ((type == EventsType.PushEvent || type == EventsType.DeleteEvent) && eventsModel.getPayload() != null) {
                     spannableBuilder

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorPresenter.java
Patch:
@@ -179,7 +179,7 @@ class EditorPresenter extends BasePresenter<EditorMvp.View> implements EditorMvp
             CommentRequestModel requestModel = new CommentRequestModel();
             requestModel.setBody(savedText.toString());
             makeRestCall(RestProvider.getRepoService().editCommitComment(login, itemId, id, requestModel),
-                    comment -> sendToView(view -> view.onSendResultAndFinish(comment, true)));
+                    comment -> sendToView(view -> view.onSendResultAndFinish(comment, false)));
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -143,7 +143,7 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
                 .put(BundleConstant.EXTRA_THREE, getPresenter().sha())
                 .put(BundleConstant.EXTRA_FOUR, item.getId())
                 .put(BundleConstant.EXTRA, item.getBody())
-                .put(BundleConstant.EXTRA_TYPE, BundleConstant.ExtraTYpe.EDIT_COMMIT_COMMENT_EXTRA)
+                .put(BundleConstant.EXTRA_TYPE, BundleConstant.ExtraTYpe.EDIT_ISSUE_COMMENT_EXTRA)
                 .end());
         View view = getActivity() != null && getActivity().findViewById(R.id.fab) != null ? getActivity().findViewById(R.id.fab) : recycler;
         ActivityHelper.startReveal(this, intent, view, BundleConstant.REQUEST_CODE);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsFragments.java
Patch:
@@ -202,11 +202,12 @@ public static CommitCommentsFragments newInstance(@NonNull String login, @NonNul
                 if (bundle != null) {
                     boolean isNew = bundle.getBoolean(BundleConstant.EXTRA);
                     Comment commentsModel = bundle.getParcelable(BundleConstant.ITEM);
-                    getSparseBooleanArray().clear();
                     if (commentsModel == null) {
-                        onRefresh(); // bundle size is too large? refresh the api
+                        onRefresh(); // shit happens, refresh()?
                         return;
                     }
+                    getSparseBooleanArray().clear();
+                    adapter.notifyDataSetChanged();
                     if (isNew) {
                         adapter.addItem(TimelineModel.constructComment(commentsModel));
                         recycler.smoothScrollToPosition(adapter.getItemCount());

File: app/src/main/java/com/zzhoujay/markdown/parser/TagHandlerImpl.java
Patch:
@@ -575,6 +575,9 @@ public boolean emItalic(Line line) {
     public boolean code(Line line) {
         line = line.get();
         SpannableStringBuilder builder = (SpannableStringBuilder) line.getStyle();
+        if (builder.toString().endsWith("```") || builder.toString().startsWith("```")) {
+            return codeBlock2(line);
+        }
         Matcher matcher = obtain(Tag.CODE, builder);
         if (matcher.find()) {
             String content = matcher.group(3);

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -51,7 +51,7 @@ private void init() {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 8);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 9);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -52,6 +52,7 @@
     private PullRequestStatusModel status;
     private ReviewModel review;
     private GroupedReviewModel groupedReview;
+    private ReviewCommentModel reviewComment;
     private Date sortedDate;
 
     private TimelineModel(Issue issue) {

File: app/src/main/java/com/fastaccess/data/dao/model/ReactionsModel.java
Patch:
@@ -25,6 +25,7 @@
     private int heart;
     private String content;
     private User user;
+    private boolean isCallingApi;
 
     public ReactionsModel() {}
 
@@ -56,6 +57,7 @@ public ReactionsModel() {}
         dest.writeInt(this.heart);
         dest.writeString(this.content);
         dest.writeParcelable(this.user, flags);
+        dest.writeByte(this.isCallingApi ? (byte) 1 : (byte) 0);
     }
 
     protected ReactionsModel(Parcel in) {
@@ -70,6 +72,7 @@ protected ReactionsModel(Parcel in) {
         this.heart = in.readInt();
         this.content = in.readString();
         this.user = in.readParcelable(User.class.getClassLoader());
+        this.isCallingApi = in.readByte() != 0;
     }
 
     public static final Creator<ReactionsModel> CREATOR = new Creator<ReactionsModel>() {

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -46,7 +46,8 @@ public interface RepoService {
     @NonNull @POST("markdown")
     Observable<String> convertReadmeToHtml(@Body MarkdownModel model);
 
-    @NonNull @GET("repos/{login}/{repoId}") @Headers({"Accept: application/vnd.github.drax-preview+json"})
+    @NonNull @GET("repos/{login}/{repoId}")
+    @Headers({"Accept: application/vnd.github.drax-preview+json, application/vnd.github.mercy-preview+json"})
     Observable<Repo> getRepo(@Path("login") String login, @Path("repoId") String repoId);
 
     @NonNull @DELETE("repos/{login}/{repoId}")

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -24,7 +24,6 @@
 import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.RxHelper;
@@ -150,7 +149,6 @@ private void onNotifyUser(@NonNull List<Notification> notificationThreadModels,
     private void finishJob(JobParameters job) {
         long duration = PrefGetter.getNotificationTaskDuration(getApplicationContext());
         boolean reschedule = Build.VERSION.SDK_INT >= Build.VERSION_CODES.N && duration < JobInfo.getMinPeriodMillis();
-        Logger.e(reschedule);
         if (reschedule) {
             scheduleJob(getApplicationContext());
         }

File: app/src/main/java/com/fastaccess/ui/adapter/callback/ReactionsCallback.java
Patch:
@@ -6,4 +6,6 @@
 
 public interface ReactionsCallback {
     boolean isPreviouslyReacted(long id, int vId);
+
+    boolean isCallingApi(long id, int vId);
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -119,6 +119,7 @@ private void addReactionCount(View v) {
             }
             if (reactionsModel == null) reactionsModel = new ReactionsModel();
             boolean isReacted = reactionsCallback == null || reactionsCallback.isPreviouslyReacted(number, v.getId());
+            boolean isCallingApi = reactionsCallback != null && reactionsCallback.isCallingApi(number, v.getId());
             switch (v.getId()) {
                 case R.id.heart:
                     reactionsModel.setHeart(!isReacted ? reactionsModel.getHeart() + 1 : reactionsModel.getHeart() - 1);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -65,7 +65,7 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
             if (!showRepoName) {
                 builder.append("#")
                         .append(String.valueOf(issueModel.getNumber())).append(" ")
-                        .append(issueModel.getUser().getLogin())
+                        .append(issueModel.getClosedBy() != null ? issueModel.getClosedBy().getLogin() : issueModel.getUser().getLogin())
                         .append(" ");
             }
             details.setText(builder

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -126,6 +126,7 @@ private void addReactionCount(View v) {
             Comment comment = timelineModel.getComment();
             if (comment != null) {
                 boolean isReacted = reactionsCallback == null || reactionsCallback.isPreviouslyReacted(comment.getId(), v.getId());
+                boolean isCallingApi = reactionsCallback != null && reactionsCallback.isCallingApi(comment.getId(), v.getId());
                 ReactionsModel reactionsModel = comment.getReactions() != null ? comment.getReactions() : new ReactionsModel();
                 switch (v.getId()) {
                     case R.id.heart:

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -62,6 +62,8 @@ interface Presenter extends BaseMvp.FAPresenter,
         String sha();
 
         boolean isPreviouslyReacted(long commentId, int vId);
+
+        boolean isCallingApi(long id, int vId);
     }
 
 

File: app/src/main/java/com/zzhoujay/markdown/parser/StyleBuilderImpl.java
Patch:
@@ -106,6 +106,7 @@ public SpannableStringBuilder email(CharSequence charSequence) {
 
     @Override
     public SpannableStringBuilder code(CharSequence charSequence) {
+        Log.e("Char", charSequence.toString());
         SpannableStringBuilder builder = SpannableStringBuilder.valueOf(charSequence);
         CodeSpan span = new CodeSpan(code_color);
         builder.setSpan(span, 0, charSequence.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);

File: app/src/test/java/com/fastaccess/login/LoginPresenterTest.java
Patch:
@@ -27,9 +27,7 @@ public class LoginPresenterTest {
         instructor.attachView(view);
     }
 
-    @Test public void onTokenResponse() throws Exception {
-
-    }
+    @Test public void onTokenResponse() throws Exception {}
 
     @Test public void onHandleAuthIntent() throws Exception {
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerActivity.java
Patch:
@@ -189,7 +189,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
                     .show(getSupportFragmentManager(), "MilestoneDialogFragment");
             return true;
         } else if (item.getItemId() == R.id.assignees) {
-            AssigneesDialogFragment.newInstance(getPresenter().getLogin(), getPresenter().getLogin(), true)
+            AssigneesDialogFragment.newInstance(getPresenter().getLogin(), getPresenter().getRepoId(), true)
                     .show(getSupportFragmentManager(), "AssigneesDialogFragment");
             return true;
         } else if (item.getItemId() == R.id.subscribe) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewsViewHolder.java
Patch:
@@ -30,7 +30,6 @@ public class ReviewsViewHolder extends BaseViewHolder<TimelineModel> {
     @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
     @BindView(R.id.stateText) FontTextView stateText;
     @BindView(R.id.body) FontTextView body;
-    @BindView(R.id.seeMore) View seeMore;
 
     private ReviewsViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);
@@ -63,9 +62,7 @@ public static ReviewsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
             if (!InputHelper.isEmpty(review.getBody())) {
                 body.setVisibility(View.VISIBLE);
                 HtmlHelper.htmlIntoTextView(body, review.getBody());
-                seeMore.setVisibility(View.GONE);
             } else {
-                seeMore.setVisibility(View.VISIBLE);
                 body.setVisibility(View.GONE);
             }
         }

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -53,7 +53,7 @@ Observable<Issue> createIssue(@Path("owner") String owner, @Path("repo") String
                                   @Body IssueRequestModel issue);
 
     @PATCH("repos/{owner}/{repo}/issues/{number}")
-    @Headers("Accept: application/vnd.github.VERSION.full+json")
+    @Headers("Accept: application/vnd.github.VERSION.full+json, application/vnd.github.squirrel-girl-preview")
     Observable<Issue> editIssue(@Path("owner") String owner, @Path("repo") String repo,
                                 @Path("number") int number,
                                 @Body IssueRequestModel issue);

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -63,13 +63,13 @@ Observable<Response<Boolean>> hasPullRequestBeenMerged(@Path("owner") String own
                                                            @Path("number") long number);
 
     @PATCH("repos/{owner}/{repo}/pulls/{number}")
-    @Headers("Accept: application/vnd.github.VERSION.html")
+    @Headers("Accept: application/vnd.github.VERSION.full+json, application/vnd.github.squirrel-girl-preview")
     Observable<PullRequest> editPullRequest(@Path("owner") String owner, @Path("repo") String repo,
                                             @Path("number") int number,
                                             @Body IssueRequestModel issue);
 
     @PATCH("repos/{owner}/{repo}/issues/{number}")
-    @Headers("Accept: application/vnd.github.VERSION.html")
+    @Headers("Accept: application/vnd.github.VERSION.full+json, application/vnd.github.squirrel-girl-preview")
     Observable<PullRequest> editIssue(@Path("owner") String owner, @Path("repo") String repo,
                                       @Path("number") int number,
                                       @Body IssueRequestModel issue);

File: app/src/main/java/com/fastaccess/ui/modules/parser/LinksParserActivity.java
Patch:
@@ -33,7 +33,7 @@ public class LinksParserActivity extends Activity {
         setVisible(true);
     }
 
-    private void onCreate(Intent intent) {
+    private void onCreate(@Nullable Intent intent) {
         if (intent == null || intent.getAction() == null) {
             finish();
             return;

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.fastaccess.BuildConfig;
 import com.fastaccess.R;
+import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 import com.fastaccess.ui.base.mvp.BaseMvp;
@@ -22,7 +23,6 @@
 
 public class SettingsFragment extends PreferenceFragmentCompat implements Preference.OnPreferenceChangeListener {
 
-
     private BaseMvp.FAView callback;
 
     @Override public void onAttach(Context context) {
@@ -49,7 +49,7 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
             return true;
         });
         findPreference("joinSlack").setOnPreferenceClickListener(preference -> {
-            new SlackBottomSheetDialog().show(getChildFragmentManager(), "SlackBottomSheetDialog");
+            ActivityHelper.startCustomTab(getActivity(), "http://rebrand.ly/fasthub");
             return true;
         });
         findPreference("currentVersion").setSummary(SpannableBuilder.builder()

File: app/src/main/java/com/fastaccess/ui/modules/settings/SlackBottomSheetDialog.java
Patch:
@@ -7,7 +7,6 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.ui.base.BaseBottomSheetDialog;
 import com.fastaccess.ui.widgets.FontButton;
@@ -65,7 +64,7 @@ public interface SlackDialogListener {
         cancel.setText(R.string.no);
         ok.setText(R.string.yes);
         title.setText(R.string.join_slack);
-        message.setText(getString(R.string.join_slack_message, Login.getUser().getEmail()));
+        message.setText(getString(R.string.join_slack_message, ""));
     }
 
     @Override protected void onHidden() {

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -93,5 +93,6 @@ Observable<Pageable<ReviewCommentModel>> getReviewComments(@Path("owner") String
     @POST("repos/{owner}/{repo}/pulls/{number}/requested_reviewers")
     @Headers("Accept: application/vnd.github.black-cat-preview+json")
     Observable<PullRequest> putReviewers(@Path("owner") String owner, @Path("repo") String repo,
-                                               @Path("number") int number, @Body AssigneesRequestModel body);
+                                         @Path("number") int number, @Body AssigneesRequestModel body);
+
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -76,7 +76,7 @@ private IssueDetailsViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAda
 
     public static IssueDetailsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable BaseRecyclerAdapter adapter,
                                                      @NonNull OnToggleView onToggleView, @NonNull ReactionsCallback reactionsCallback) {
-        return new IssueDetailsViewHolder(getView(viewGroup, R.layout.comments_row_item), adapter, onToggleView, reactionsCallback);
+        return new IssueDetailsViewHolder(getView(viewGroup, R.layout.issue_detail_header_row_item), adapter, onToggleView, reactionsCallback);
     }
 
     @Override public void bind(@NonNull TimelineModel timelineModel) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsMvp.java
Patch:
@@ -8,7 +8,6 @@
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
-import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -22,7 +21,7 @@
 interface GistCommentsMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
-            android.view.View.OnClickListener, OnToggleView {
+            android.view.View.OnClickListener {
 
         void onNotifyAdapter(@Nullable List<Comment> items, int page);
 

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -51,7 +51,7 @@ private void init() {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 7);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 8);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/AssigneesRequestModel.java
Patch:
@@ -13,4 +13,5 @@
 @Getter @Setter @NoArgsConstructor
 public class AssigneesRequestModel {
     private List<String> assignees;
+    private List<String> reviewers;
 }

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -62,7 +62,7 @@ private TimelineModel(PullRequest pullRequest) {
     private TimelineModel(Comment comment) {
         this.type = COMMENT;
         this.comment = comment;
-        this.sortedDate = comment.getCreatedAt();
+        this.sortedDate = comment.getCreatedAt() == null ? new Date() : comment.getCreatedAt();
     }
 
     private TimelineModel(IssueEvent event) {
@@ -219,7 +219,7 @@ private TimelineModel(ReviewModel review) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
         TimelineModel model = (TimelineModel) o;
-        return comment != null && model.getComment() != null && comment.getId() == model.comment.getId();
+        return (comment != null && model.getComment() != null) && (comment.getId() == model.comment.getId());
     }
 
     @Override public int hashCode() {

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractComment.java
Patch:
@@ -5,6 +5,7 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.App;
+import com.fastaccess.data.dao.converters.ReactionsConverter;
 import com.fastaccess.data.dao.converters.UserConverter;
 import com.fastaccess.helper.RxHelper;
 
@@ -51,7 +52,7 @@
     String gistId;
     String issueId;
     String pullRequestId;
-    ReactionsModel reactions;
+    @Convert(ReactionsConverter.class) ReactionsModel reactions;
 
     public Single save(Comment modelEntity) {
         return App.getInstance().getDataStore()

File: app/src/main/java/com/fastaccess/provider/tasks/git/ReactionService.java
Patch:
@@ -67,7 +67,7 @@ public ReactionService() {
 
     private void post(@NonNull ReactionTypes reactionType, @NonNull String login, @NonNull String repo, long commentId) {
         RxHelper.safeObservable(RestProvider.getReactionsService()
-                .postIssueReaction(new PostReactionModel(reactionType.getContent()), login, repo, commentId))
+                .postIssueCommentReaction(new PostReactionModel(reactionType.getContent()), login, repo, commentId))
                 .doOnSubscribe(() -> showNotificatin(getNotification(reactionType), (int) commentId))
                 .subscribe(response -> hideNotificat((int) commentId), throwable -> hideNotificat((int) commentId));
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.modules.repos.issues.issue.details.timeline;
 
 import android.os.Bundle;
+import android.support.annotation.IdRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.widget.SwipeRefreshLayout;
@@ -38,7 +39,7 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onTagUser(@Nullable User user);
 
-        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long id);
+        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long idOrNumber, boolean isHeadre);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel> {
@@ -61,6 +62,6 @@ interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListe
 
         int number();
 
-        void onHandleReaction(int id, long commentId);
+        void onHandleReaction(@IdRes int viewId, long id, boolean isHeader);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.modules.repos.pull_requests.pull_request.details.timeline.timeline;
 
 import android.os.Bundle;
+import android.support.annotation.IdRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.widget.SwipeRefreshLayout;
@@ -37,7 +38,7 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
 
         void onTagUser(@Nullable User user);
 
-        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long id);
+        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long idOrNumber, boolean isHeader);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel> {
@@ -61,7 +62,7 @@ interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListe
 
         boolean isPreviouslyReacted(long commentId, int vId);
 
-        void onHandleReaction(int id, long commentId);
+        void onHandleReaction(@IdRes int vId, long idOrNumber, boolean isHeader);
 
         boolean isMerged();
     }

File: app/src/main/java/com/fastaccess/data/dao/SimpleUrlsModel.java
Patch:
@@ -16,7 +16,6 @@ public class SimpleUrlsModel implements Parcelable {
 
     private String item;
     private String url;
-
     public SimpleUrlsModel(String item, String url) {
         this.item = item;
         this.url = url;

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPinnedRepos.java
Patch:
@@ -15,8 +15,8 @@
 import io.requery.Generated;
 import io.requery.Key;
 import lombok.NoArgsConstructor;
-import rx.Completable;
 import rx.Observable;
+import rx.Single;
 
 import static com.fastaccess.data.dao.model.PinnedRepos.ID;
 import static com.fastaccess.data.dao.model.PinnedRepos.REPO_FULL_NAME;
@@ -30,8 +30,8 @@
     @Column(unique = true) String repoFullName;
     @Convert(RepoConverter.class) Repo pinnedRepo;
 
-    public static Completable save(@NonNull PinnedRepos entity) {
-        return App.getInstance().getDataStore().insert(entity).toCompletable();
+    public static Single<PinnedRepos> save(@NonNull PinnedRepos entity) {
+        return App.getInstance().getDataStore().insert(entity);
     }
 
     public static boolean pinUpin(@NonNull Repo repo) {

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -15,6 +15,7 @@
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.provider.timeline.handler.BetterLinkMovementExtended;
 import com.fastaccess.provider.timeline.handler.DrawableHandler;
+import com.fastaccess.provider.timeline.handler.ItalicHandler;
 import com.fastaccess.provider.timeline.handler.ListsHandler;
 import com.fastaccess.provider.timeline.handler.MarginHandler;
 import com.fastaccess.provider.timeline.handler.PreTagHandler;
@@ -61,6 +62,8 @@ private static HtmlSpanner initHtml(@NonNull TextView textView) {
         mySpanner.registerHandler("blockquote", new QouteHandler(windowBackground));
         mySpanner.registerHandler("b", new BoldHandler());
         mySpanner.registerHandler("strong", new BoldHandler());
+        mySpanner.registerHandler("i", new ItalicHandler());
+        mySpanner.registerHandler("em", new ItalicHandler());
         mySpanner.registerHandler("ul", new MarginHandler());
         mySpanner.registerHandler("ol", new MarginHandler());
         mySpanner.registerHandler("li", new ListsHandler());

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 
-import com.annimon.stream.Stream;
 import com.fastaccess.R;
 import com.fastaccess.data.dao.GitHubErrorResponse;
 import com.fastaccess.helper.RxHelper;
@@ -32,7 +31,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
 
     @Override public void manageSubscription(@Nullable Subscription... subscription) {
         if (subscription != null) {
-            Stream.of(subscription).forEach(subscriptionHandler::manageSubscription);
+            subscriptionHandler.manageSubscriptions(subscription);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewFragment.java
Patch:
@@ -158,7 +158,7 @@ private void onHideProgress() {
     }
 
     private boolean isMeOrOrganization() {
-        return Login.getUser().getLogin().equalsIgnoreCase(getPresenter().getLogin()) ||
+        return Login.getUser() != null && Login.getUser().getLogin().equalsIgnoreCase(getPresenter().getLogin()) ||
                 (userModel != null && userModel.getType() != null && !userModel.getType().equalsIgnoreCase("user"));
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -85,6 +85,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
     }
 
     @OnClick(R.id.fab) void onAddComment() {
+        if (pager == null || pager.getAdapter() == null) return;
         CommitCommentsFragments view = (CommitCommentsFragments) pager.getAdapter().instantiateItem(pager, 1);
         if (view != null) {
             view.onStartNewComment();

File: app/src/main/java/com/fastaccess/ui/modules/settings/SlackBottomSheetDialog.java
Patch:
@@ -1,15 +1,14 @@
 package com.fastaccess.ui.modules.settings;
 
 import android.content.Context;
-import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
-import com.fastaccess.provider.tasks.slack.SlackInvitationService;
+import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.ui.base.BaseBottomSheetDialog;
 import com.fastaccess.ui.widgets.FontButton;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -52,7 +51,8 @@ public interface SlackDialogListener {
     @OnClick({R.id.cancel, R.id.ok}) public void onViewClicked(View view) {
         switch (view.getId()) {
             case R.id.ok:
-                view.getContext().startService(new Intent(getContext().getApplicationContext(), SlackInvitationService.class));
+//                view.getContext().startService(new Intent(getContext().getApplicationContext(), SlackInvitationService.class));
+                ActivityHelper.startCustomTab(getActivity(), "http://rebrand.ly/fasthub");
                 break;
         }
         if (listener != null) listener.onDismissed();

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -150,9 +150,8 @@ private TimelineModel(ReviewModel review) {
     @NonNull private static List<TimelineModel> constructLabels(@NonNull List<IssueEvent> eventList) {
         List<TimelineModel> models = new ArrayList<>();
         Map<String, List<IssueEvent>> issueEventMap = Stream.of(eventList)
-                .filter(value -> value.getEvent() != null)
-                .filter(value -> value.getEvent() != IssueEventType.subscribed && value.getEvent() != IssueEventType.unsubscribed
-                        && value.getEvent() != IssueEventType.mentioned)
+                .filter(value -> value.getEvent() != null && value.getEvent() != IssueEventType.subscribed &&
+                        value.getEvent() != IssueEventType.unsubscribed && value.getEvent() != IssueEventType.mentioned)
                 .collect(Collectors.groupingBy(issueEvent -> {
                     if (issueEvent.getAssigner() != null && issueEvent.getAssignee() != null) {
                         return issueEvent.getAssigner().getLogin();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineFragment.java
Patch:
@@ -71,6 +71,7 @@ public static IssueTimelineFragment newInstance(@NonNull Issue issueModel) {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        recycler.setVerticalScrollBarEnabled(false);
         stateLayout.setEmptyText(R.string.no_events);
         recycler.setEmptyView(stateLayout, refresh);
         refresh.setOnRefreshListener(this);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineFragment.java
Patch:
@@ -72,6 +72,7 @@ public static PullRequestTimelineFragment newInstance(@NonNull PullRequest issue
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        recycler.setVerticalScrollBarEnabled(false);
         if (savedInstanceState == null) {
             getPresenter().onFragmentCreated(getArguments());
         } else if (getPresenter().getEvents().size() == 1 && !getPresenter().isApiCalled()) {

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -181,7 +181,8 @@ private TimelineModel(ReviewModel review) {
                             } else if (event == IssueEventType.assigned || event == IssueEventType.unassigned) {
                                 spannableBuilder.append(" ")
                                         .bold(issueEventModel.getAssignee() != null ? issueEventModel.getAssignee().getLogin() : "",
-                                                new LabelSpan(Color.TRANSPARENT));
+                                                new LabelSpan(Color.TRANSPARENT))
+                                        .append(" ");
                             }
                         } else {
                             models.add(new TimelineModel(issueEventModel));

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -271,11 +271,11 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         String segmentTwo = segments.get(2);
         if (segmentTwo.equals("blob") || segmentTwo.equals("tree")) {
             Uri urlBuilder = getBlobBuilder(uri);
-            return CodeViewerActivity.createIntent(context, urlBuilder.toString());
+            return CodeViewerActivity.createIntent(context, urlBuilder.toString(), uri.toString());
         } else {
             String authority = uri.getAuthority();
             if (TextUtils.equals(authority, RAW_AUTHORITY)) {
-                return CodeViewerActivity.createIntent(context, uri.toString());
+                return CodeViewerActivity.createIntent(context, uri.toString(), uri.toString());
             }
         }
         return null;
@@ -318,7 +318,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
 
     @Nullable private static Intent getGistFile(@NonNull Context context, @NonNull Uri uri) {
         if (uri.getHost().equalsIgnoreCase(HOST_GISTS_RAW)) {
-            return CodeViewerActivity.createIntent(context, uri.toString());
+            return CodeViewerActivity.createIntent(context, uri.toString(), uri.toString());
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -308,7 +308,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                     .addNextIntentWithParentStack(RepoPagerActivity.createIntent(context, repo, owner))
                     .addNextIntentWithParentStack(RepoFilesActivity.getIntent(context, urlBuilder.toString()))
-                    .addNextIntent(CodeViewerActivity.createIntent(context, urlBuilder.toString()));
+                    .addNextIntent(CodeViewerActivity.createIntent(context, urlBuilder.toString(), uri.toString()));
         } else {
             String authority = uri.getAuthority();
             if (TextUtils.equals(authority, RAW_AUTHORITY)) {
@@ -319,7 +319,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                         .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                         .addNextIntentWithParentStack(RepoPagerActivity.createIntent(context, repo, owner))
                         .addNextIntentWithParentStack(RepoFilesActivity.getIntent(context, uri.toString()))
-                        .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString()));
+                        .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString(), uri.toString()));
             }
         }
         return null;
@@ -348,7 +348,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                     .addParentStack(MainActivity.class)
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                     .addNextIntentWithParentStack(GistActivity.createIntent(context, uri.getPathSegments().get(1)))
-                    .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString()));
+                    .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString(), uri.toString()));
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -83,7 +83,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
                             .append(" ")
                             .append(to)
                             .append(" ");
-                } else if (type == EventsType.PushEvent && eventsModel.getPayload() != null) {
+                } else if ((type == EventsType.PushEvent || type == EventsType.DeleteEvent) && eventsModel.getPayload() != null) {
                     spannableBuilder
                             .bold(itemView.getResources().getString(type.getType()).toLowerCase())
                             .append(" ")
@@ -93,8 +93,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
                             .append(" ");
                 } else {
                     spannableBuilder.bold(itemView.getResources().getString(type
-                            .getType())
-                            .toLowerCase())
+                            .getType()).toLowerCase())
                             .append(" ");
                     if (eventsModel.getPayload() != null) {
                         PayloadModel payloadModel = eventsModel.getPayload();

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -76,7 +76,7 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
                         Bundler.start().put(BundleConstant.YES_NO_EXTRA, true).put(BundleConstant.EXTRA, item.getRawUrl()).end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {
-                CodeViewerActivity.startActivity(getContext(), item.getRawUrl());
+                CodeViewerActivity.startActivity(getContext(), item.getRawUrl(), item.getRawUrl());
             }
         } else {
             showErrorMessage(getString(R.string.no_url));

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -14,7 +14,7 @@
  * Created by Kosh on 09 Nov 2016, 9:41 PM
  */
 
-interface LoginMvp {
+public interface LoginMvp {
 
     interface View extends BaseMvp.FAView, SlackBottomSheetDialog.SlackDialogListener {
 

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -27,7 +27,7 @@
  * Created by Kosh on 09 Nov 2016, 9:43 PM
  */
 
-class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Presenter {
+public class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Presenter {
 
     @Override public void onError(@NonNull Throwable throwable) {
         if (RestProvider.getErrorCode(throwable) == 401 && throwable instanceof HttpException) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationActivity.java
Patch:
@@ -50,6 +50,7 @@ public class NotificationActivity extends BaseActivity {
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         AppHelper.cancelNotification(this);
+        onSelectNotifications();
         setupTabs(savedInstanceState);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/viewer/FullCommitFileActivity.java
Patch:
@@ -115,7 +115,7 @@ public static void start(@NonNull Context context, @NonNull CommitFileModel file
     @Override public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.open:
-                startActivity(CodeViewerActivity.createIntent(this, commitFileModel.getContentsUrl()));
+                startActivity(CodeViewerActivity.createIntent(this, commitFileModel.getContentsUrl(), commitFileModel.getBlobUrl()));
                 return true;
             case R.id.share:
                 ActivityHelper.shareUrl(this, commitFileModel.getBlobUrl());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -66,7 +66,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
                                 .end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {
-                CodeViewerActivity.startActivity(getContext(), url);
+                CodeViewerActivity.startActivity(getContext(), url, model.getHtmlUrl());
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -62,5 +62,7 @@ interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListe
         boolean isPreviouslyReacted(long commentId, int vId);
 
         void onHandleReaction(int id, long commentId);
+
+        boolean isMerged();
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeFragment.java
Patch:
@@ -144,7 +144,7 @@ public static SearchCodeFragment newInstance() {
 
     @Override public void onItemClicked(@NonNull SearchCodeModel item) {
         if (item.getUrl() != null) {
-            CodeViewerActivity.startActivity(getContext(), item.getUrl());
+            CodeViewerActivity.startActivity(getContext(), item.getUrl(), item.getHtmlUrl());
         } else {
             showErrorMessage(getString(R.string.no_url));
         }

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -57,6 +57,9 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
                 .append("(")
                 .bold(BuildConfig.VERSION_NAME)
                 .append(")"));
+        if (BuildConfig.FDROID) {
+            findPreference("enable_ads").setVisible(false);
+        }
     }
 
     @Override public boolean onPreferenceChange(Preference preference, Object newValue) {

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -188,7 +188,7 @@ private void startActivity(@Nullable Uri url) {
         if (url == null) return;
         Logger.e(url);
         if (MarkDownProvider.isImage(url.toString())) {
-            CodeViewerActivity.startActivity(getContext(), url.toString());
+            CodeViewerActivity.startActivity(getContext(), url.toString(), url.toString());
         } else {
             String lastSegment = url.getEncodedFragment();
             if (lastSegment != null || url.toString().startsWith("#") || url.toString().indexOf('#') != -1) {

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -181,7 +181,8 @@ private TimelineModel(ReviewModel review) {
                             } else if (event == IssueEventType.assigned || event == IssueEventType.unassigned) {
                                 spannableBuilder.append(" ")
                                         .bold(issueEventModel.getAssignee() != null ? issueEventModel.getAssignee().getLogin() : "",
-                                                new LabelSpan(Color.TRANSPARENT));
+                                                new LabelSpan(Color.TRANSPARENT))
+                                        .append(" ");
                             }
                         } else {
                             models.add(new TimelineModel(issueEventModel));

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -271,11 +271,11 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         String segmentTwo = segments.get(2);
         if (segmentTwo.equals("blob") || segmentTwo.equals("tree")) {
             Uri urlBuilder = getBlobBuilder(uri);
-            return CodeViewerActivity.createIntent(context, urlBuilder.toString());
+            return CodeViewerActivity.createIntent(context, urlBuilder.toString(), uri.toString());
         } else {
             String authority = uri.getAuthority();
             if (TextUtils.equals(authority, RAW_AUTHORITY)) {
-                return CodeViewerActivity.createIntent(context, uri.toString());
+                return CodeViewerActivity.createIntent(context, uri.toString(), uri.toString());
             }
         }
         return null;
@@ -318,7 +318,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
 
     @Nullable private static Intent getGistFile(@NonNull Context context, @NonNull Uri uri) {
         if (uri.getHost().equalsIgnoreCase(HOST_GISTS_RAW)) {
-            return CodeViewerActivity.createIntent(context, uri.toString());
+            return CodeViewerActivity.createIntent(context, uri.toString(), uri.toString());
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -308,7 +308,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                     .addNextIntentWithParentStack(RepoPagerActivity.createIntent(context, repo, owner))
                     .addNextIntentWithParentStack(RepoFilesActivity.getIntent(context, urlBuilder.toString()))
-                    .addNextIntent(CodeViewerActivity.createIntent(context, urlBuilder.toString()));
+                    .addNextIntent(CodeViewerActivity.createIntent(context, urlBuilder.toString(), uri.toString()));
         } else {
             String authority = uri.getAuthority();
             if (TextUtils.equals(authority, RAW_AUTHORITY)) {
@@ -319,7 +319,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                         .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                         .addNextIntentWithParentStack(RepoPagerActivity.createIntent(context, repo, owner))
                         .addNextIntentWithParentStack(RepoFilesActivity.getIntent(context, uri.toString()))
-                        .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString()));
+                        .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString(), uri.toString()));
             }
         }
         return null;
@@ -348,7 +348,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                     .addParentStack(MainActivity.class)
                     .addNextIntentWithParentStack(new Intent(context, MainActivity.class))
                     .addNextIntentWithParentStack(GistActivity.createIntent(context, uri.getPathSegments().get(1)))
-                    .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString()));
+                    .addNextIntent(CodeViewerActivity.createIntent(context, uri.toString(), uri.toString()));
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -83,7 +83,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
                             .append(" ")
                             .append(to)
                             .append(" ");
-                } else if (type == EventsType.PushEvent && eventsModel.getPayload() != null) {
+                } else if ((type == EventsType.PushEvent || type == EventsType.DeleteEvent) && eventsModel.getPayload() != null) {
                     spannableBuilder
                             .bold(itemView.getResources().getString(type.getType()).toLowerCase())
                             .append(" ")
@@ -93,8 +93,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
                             .append(" ");
                 } else {
                     spannableBuilder.bold(itemView.getResources().getString(type
-                            .getType())
-                            .toLowerCase())
+                            .getType()).toLowerCase())
                             .append(" ");
                     if (eventsModel.getPayload() != null) {
                         PayloadModel payloadModel = eventsModel.getPayload();

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/files/GistFilesListFragment.java
Patch:
@@ -76,7 +76,7 @@ public static GistFilesListFragment newInstance(@NonNull GithubFileModel gistsMo
                         Bundler.start().put(BundleConstant.YES_NO_EXTRA, true).put(BundleConstant.EXTRA, item.getRawUrl()).end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {
-                CodeViewerActivity.startActivity(getContext(), item.getRawUrl());
+                CodeViewerActivity.startActivity(getContext(), item.getRawUrl(), item.getRawUrl());
             }
         } else {
             showErrorMessage(getString(R.string.no_url));

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -14,7 +14,7 @@
  * Created by Kosh on 09 Nov 2016, 9:41 PM
  */
 
-interface LoginMvp {
+public interface LoginMvp {
 
     interface View extends BaseMvp.FAView, SlackBottomSheetDialog.SlackDialogListener {
 

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -27,7 +27,7 @@
  * Created by Kosh on 09 Nov 2016, 9:43 PM
  */
 
-class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Presenter {
+public class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Presenter {
 
     @Override public void onError(@NonNull Throwable throwable) {
         if (RestProvider.getErrorCode(throwable) == 401 && throwable instanceof HttpException) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationActivity.java
Patch:
@@ -50,6 +50,7 @@ public class NotificationActivity extends BaseActivity {
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         AppHelper.cancelNotification(this);
+        onSelectNotifications();
         setupTabs(savedInstanceState);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/viewer/FullCommitFileActivity.java
Patch:
@@ -115,7 +115,7 @@ public static void start(@NonNull Context context, @NonNull CommitFileModel file
     @Override public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.open:
-                startActivity(CodeViewerActivity.createIntent(this, commitFileModel.getContentsUrl()));
+                startActivity(CodeViewerActivity.createIntent(this, commitFileModel.getContentsUrl(), commitFileModel.getBlobUrl()));
                 return true;
             case R.id.share:
                 ActivityHelper.shareUrl(this, commitFileModel.getBlobUrl());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesFragment.java
Patch:
@@ -66,7 +66,7 @@ public class RepoFilesFragment extends BaseFragment<RepoFilesMvp.View, RepoFiles
                                 .end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {
-                CodeViewerActivity.startActivity(getContext(), url);
+                CodeViewerActivity.startActivity(getContext(), url, model.getHtmlUrl());
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -62,5 +62,7 @@ interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListe
         boolean isPreviouslyReacted(long commentId, int vId);
 
         void onHandleReaction(int id, long commentId);
+
+        boolean isMerged();
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeFragment.java
Patch:
@@ -144,7 +144,7 @@ public static SearchCodeFragment newInstance() {
 
     @Override public void onItemClicked(@NonNull SearchCodeModel item) {
         if (item.getUrl() != null) {
-            CodeViewerActivity.startActivity(getContext(), item.getUrl());
+            CodeViewerActivity.startActivity(getContext(), item.getUrl(), item.getHtmlUrl());
         } else {
             showErrorMessage(getString(R.string.no_url));
         }

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -57,6 +57,9 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
                 .append("(")
                 .bold(BuildConfig.VERSION_NAME)
                 .append(")"));
+        if (BuildConfig.FDROID) {
+            findPreference("enable_ads").setVisible(false);
+        }
     }
 
     @Override public boolean onPreferenceChange(Preference preference, Object newValue) {

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -188,7 +188,7 @@ private void startActivity(@Nullable Uri url) {
         if (url == null) return;
         Logger.e(url);
         if (MarkDownProvider.isImage(url.toString())) {
-            CodeViewerActivity.startActivity(getContext(), url.toString());
+            CodeViewerActivity.startActivity(getContext(), url.toString(), url.toString());
         } else {
             String lastSegment = url.getEncodedFragment();
             if (lastSegment != null || url.toString().startsWith("#") || url.toString().indexOf('#') != -1) {

File: app/src/main/java/com/fastaccess/ui/modules/filter/issues/fragment/FilterIssuesMvp.java
Patch:
@@ -29,6 +29,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         @NonNull OnLoadMore<String> getLoadMore();
 
         void onSetCount(int totalCount);
+
+        void onItemClicked(@NonNull Issue item);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/helper/Bundler.java
Patch:
@@ -194,7 +194,7 @@ public Bundle get() {
         bundle.writeToParcel(parcel, 0);
         int size = parcel.dataSize();
         Logger.e(size);
-        if (size > 800000) {
+        if (size > 500000) {
             bundle.clear();
         }
         return get();

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -23,7 +23,6 @@
 import com.fastaccess.data.service.SlackService;
 import com.fastaccess.data.service.UserRestService;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.converters.GithubResponseConverter;
 import com.fastaccess.provider.rest.interceptors.AuthenticationInterceptor;
@@ -88,7 +87,6 @@ private static OkHttpClient provideOkHttpClient(boolean isRawString) {
                 Request request = requestBuilder.build();
                 return chain.proceed(request);
             }
-            Logger.e(original.url());
             return chain.proceed(original);
         });
         return client.build();

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -124,8 +124,8 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
                 }
                 commentId = bundle.getLong(BundleConstant.EXTRA_FOUR);
                 String textToUpdate = bundle.getString(BundleConstant.EXTRA);
-                editText.setText(textToUpdate);
                 if (!InputHelper.isEmpty(textToUpdate)) {
+                    editText.setText(String.format("%s ", textToUpdate));
                     editText.setSelection(InputHelper.toString(editText).length());
                 }
             }

File: app/src/main/java/com/fastaccess/ui/modules/editor/popup/EditorLinkImageDialogFragment.java
Patch:
@@ -22,6 +22,7 @@
 
 import butterknife.BindView;
 import butterknife.OnClick;
+import es.dmoral.toasty.Toasty;
 
 /**
  * Created by Kosh on 15 Apr 2017, 9:14 PM
@@ -84,6 +85,8 @@ public static EditorLinkImageDialogFragment newInstance(boolean isLink) {
                 String path = FileHelper.getPath(getContext(), data.getData());
                 if (!InputHelper.isEmpty(path)) {
                     getPresenter().onSubmit(InputHelper.toString(title), new File(path));
+                } else {
+                    Toasty.error(getContext(), getString(R.string.failed_selecting_image)).show();
                 }
             }
         }

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ProgressDialogFragment.java
Patch:
@@ -38,8 +38,7 @@ public class ProgressDialogFragment extends DialogFragment {
         progressDialog.setCancelable(getArguments().getBoolean("isCancelable"));
         setCancelable(getArguments().getBoolean("isCancelable"));
         if (getActivity() != null && !getActivity().isFinishing()) {
-            progressDialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(progressDialog,
-                    getResources().getInteger(android.R.integer.config_shortAnimTime)));
+            progressDialog.setOnShowListener(dialogInterface -> AnimHelper.revealDialog(progressDialog, 200));
         }
         return progressDialog;
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsListActivity.java
Patch:
@@ -68,6 +68,7 @@ public static void startActivity(@NonNull Context context, boolean myGists) {
                                                              : GistsFragment.newInstance(), GistsFragment.TAG)
                     .commit();
         }
+        selectGists(!myGists);
         setTitle(myGists ? R.string.my_gists : R.string.public_gists);
         fab.show();
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -59,7 +59,7 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
 
     @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        hideHome();
+        selectHome(false);
         hideShowShadow(navType == MainMvp.FEEDS);
         setToolbarIcon(R.drawable.ic_menu);
         onInit(savedInstanceState);

File: app/src/main/java/com/fastaccess/ui/modules/pinned/PinnedReposActivity.java
Patch:
@@ -48,6 +48,7 @@ public static void startActivity(@NonNull Context context) {
 
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        selectPinned();
         if (savedInstanceState == null) {
             getSupportFragmentManager()
                     .beginTransaction()

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -78,7 +78,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         if (adapter.getItem(position).getPatch() == null) {
-            ActivityHelper.openChooser(getContext(), adapter.getItem(position).getBlobUrl());
+            ActivityHelper.openChooser(getContext(), adapter.getItem(position).getRawUrl());
         }
         getSparseBooleanArray().put(position, isCollapsed);
     }

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerActivity.java
Patch:
@@ -94,7 +94,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String logi
         }
         setTitle(login);
         if (login.equalsIgnoreCase(Login.getUser().getLogin())) {
-            hideProfileMenuItem();
+            selectProfile();
         }
         if (!isOrg) {
             FragmentsPagerAdapter adapter = new FragmentsPagerAdapter(getSupportFragmentManager(),

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -69,7 +69,7 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
                         .append(" ");
             }
             details.setText(builder
-                    .append(itemView.getResources().getString(issueModel.getState().getStatus()))
+                    .append(itemView.getResources().getString(issueModel.getState().getStatus()).toLowerCase())
                     .append(" ")
                     .append(data));
             if (issueModel.getComments() > 0) {

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -40,6 +40,9 @@ public interface RepoService {
     @NonNull @GET @Headers("Accept: application/vnd.github.VERSION.raw")
     Observable<String> getFileAsStream(@Url String url);
 
+    @NonNull @GET @Headers("Accept: application/vnd.github.html")
+    Observable<String> getFileAsHtmlStream(@Url String url);
+
     @NonNull @POST("markdown")
     Observable<String> convertReadmeToHtml(@Body MarkdownModel model);
 

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -227,8 +227,9 @@ public static boolean isMarkdown(@Nullable String name) {
         name = name.toLowerCase();
         for (String value : MARKDOWN_EXTENSIONS) {
             String extension = MimeTypeMap.getFileExtensionFromUrl(name);
-            if ((extension != null && value.replace(".", "").equals(extension)) || name.equalsIgnoreCase("README") ||
-                    name.endsWith(value)) return true;
+            if ((extension != null && value.replace(".", "").equals(extension)) ||
+                    name.equalsIgnoreCase("README") || name.endsWith(value))
+                return true;
         }
         return false;
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/pager/MyIssuesPagerFragment.java
Patch:
@@ -45,7 +45,7 @@ public static MyIssuesPagerFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.centered_tabbed_viewpager;
+        return R.layout.tabbed_viewpager;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/pager/MyPullsPagerFragment.java
Patch:
@@ -45,7 +45,7 @@ public static MyPullsPagerFragment newInstance() {
     }
 
     @Override protected int fragmentLayout() {
-        return R.layout.centered_tabbed_viewpager;
+        return R.layout.tabbed_viewpager;
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {

File: app/src/main/java/com/prettifier/pretty/helper/GithubHelper.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.fastaccess.data.dao.NameParser;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -19,6 +20,7 @@ public class GithubHelper {
     private static Pattern IMAGE_TAG_MATCHER = Pattern.compile("src=\"(.*?)\"");
 
     @NonNull public static String generateContent(@NonNull String source, @Nullable String baseUrl, boolean wrap, boolean dark) {
+        Logger.e(baseUrl);
         if (baseUrl == null) {
             return mergeContent(source, wrap, dark);
         } else {

File: app/src/main/java/com/fastaccess/data/service/UserRestService.java
Patch:
@@ -29,10 +29,11 @@ public interface UserRestService {
     @GET("users/{username}/received_events")
     Observable<Pageable<Event>> getReceivedEvents(@NonNull @Path("username") String userName, @Query("page") int page);
 
-    @GET("users/{username}/repos?sort=pushed&direction=desc")
+    @GET("users/{username}/repos?affiliation=owner,collaborator&sort=pushed&direction=desc")
     Observable<Pageable<Repo>> getRepos(@Path("username") @NonNull String username, @Query("page") int page);
 
-    @GET("/user/repos?sort=pushed&direction=desc") Observable<Pageable<Repo>> getRepos(@Query("page") int page);
+    @GET("/user/repos?affiliation=owner,collaborator&sort=pushed&direction=desc")
+    Observable<Pageable<Repo>> getRepos(@Query("page") int page);
 
     @GET("users/{username}/starred") Observable<Pageable<Repo>>
     getStarred(@Path("username") @NonNull String username, @Query("page") int page);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathMvp.java
Patch:
@@ -25,6 +25,8 @@ interface View extends BaseMvp.FAView {
 
         void onAppendPath(@NonNull RepoFile model);
 
+        void onAppenedtab(@Nullable RepoFile repoFile);
+
         void onSendData();
 
         boolean canPressBack();

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -46,7 +46,7 @@ public class NotificationSchedulerJobTask extends JobService {
     private static final String NOTIFICATION_GROUP_ID = "FastHub";
 
     @Override public boolean onStartJob(JobParameters job) {
-        if (PrefGetter.getNotificationTaskDuration(this) != -1) {
+        if (PrefGetter.getNotificationTaskDuration(this) == -1) {
             scheduleJob(this, -1, false);
             finishJob(job);
             return true;

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPullRequest.java
Patch:
@@ -150,8 +150,7 @@ public static Observable<PullRequest> getPullRequestByNumber(int number, @NonNul
                 .toObservable();
     }
 
-    @NonNull public static SpannableBuilder getMergeBy(@NonNull PullRequest pullRequest, @NonNull Context context,
-                                                       boolean showRepoName) {
+    @NonNull public static SpannableBuilder getMergeBy(@NonNull PullRequest pullRequest, @NonNull Context context, boolean showRepoName) {
         boolean isMerge = pullRequest.isMerged() || !InputHelper.isEmpty(pullRequest.mergedAt);
         if (isMerge) {
             User merger = pullRequest.getMergedBy();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -51,7 +51,7 @@ private void bind(@NonNull Issue issueModel) {
         name.setText(issueModel.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(issueModel.getCreatedAt()));
         if (!InputHelper.isEmpty(issueModel.getBodyHtml())) {
-            HtmlHelper.parseHtmlIntoTextView(description, issueModel.getBodyHtml());
+            HtmlHelper.htmlIntoTextView(description, issueModel.getBodyHtml());
         } else {
             description.setText(R.string.no_description_provided);
         }
@@ -62,7 +62,7 @@ private void bind(@NonNull PullRequest pullRequest) {
         name.setText(pullRequest.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(pullRequest.getCreatedAt()));
         if (!InputHelper.isEmpty(pullRequest.getBodyHtml())) {
-            HtmlHelper.parseHtmlIntoTextView(description, pullRequest.getBodyHtml());
+            HtmlHelper.htmlIntoTextView(description, pullRequest.getBodyHtml());
         } else {
             description.setText(R.string.no_description_provided);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewsViewHolder.java
Patch:
@@ -61,7 +61,7 @@ public static ReviewsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
             }
             if (!InputHelper.isEmpty(review.getBody())) {
                 body.setVisibility(View.VISIBLE);
-                HtmlHelper.parseHtmlIntoTextView(body, review.getBody());
+                HtmlHelper.htmlIntoTextView(body, review.getBody());
             } else {
                 body.setVisibility(View.GONE);
             }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -149,7 +149,7 @@ public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGrou
             avatar.setUrl(null, null);
         }
         if (!InputHelper.isEmpty(commentsModel.getBodyHtml())) {
-            HtmlHelper.parseHtmlIntoTextView(comment, commentsModel.getBodyHtml());
+            HtmlHelper.htmlIntoTextView(comment, commentsModel.getBodyHtml());
         } else {
             comment.setText("");
         }

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsListActivity.java
Patch:
@@ -43,7 +43,7 @@ public static void startActivity(@NonNull Context context, boolean myGists) {
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -151,7 +151,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
         String login = commit.getAuthor() != null ? commit.getAuthor().getLogin() : commit.getGitCommit().getAuthor().getName();
         String avatar = commit.getAuthor() != null ? commit.getAuthor().getAvatarUrl() : null;
         Date dateValue = commit.getGitCommit().getAuthor().getDate();
-        HtmlHelper.parseHtmlIntoTextView(title, commit.getGitCommit().getMessage());
+        HtmlHelper.htmlIntoTextView(title, commit.getGitCommit().getMessage());
         detailsIcon.setVisibility(View.VISIBLE);
         size.setVisibility(View.GONE);
         date.setText(ParseDateFormat.getTimeAgo(dateValue));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerActivity.java
Patch:
@@ -92,6 +92,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @OnClick(R.id.fab) void onAddComment() {
+        if (pager == null || pager.getAdapter() == null) return;
         PullRequestTimelineFragment view = (PullRequestTimelineFragment) pager.getAdapter().instantiateItem(pager, 0);
         if (view != null) {
             view.onStartNewComment();

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -14,7 +14,7 @@
 import com.fastaccess.data.dao.types.IssueState;
 import com.fastaccess.ui.modules.gists.gist.comments.GistCommentsFragment;
 import com.fastaccess.ui.modules.gists.gist.files.GistFilesListFragment;
-import com.fastaccess.ui.modules.main.issues.MyIssuesView;
+import com.fastaccess.ui.modules.main.issues.MyIssuesFragment;
 import com.fastaccess.ui.modules.main.pullrequests.MyPullRequestFragment;
 import com.fastaccess.ui.modules.profile.followers.ProfileFollowersFragment;
 import com.fastaccess.ui.modules.profile.following.ProfileFollowingFragment;
@@ -149,8 +149,8 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
     }
 
     public static List<FragmentPagerAdapterModel> buildForMyIssues(@NonNull Context context) {
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.open), MyIssuesView.newInstance(IssueState.open))
-                , new FragmentPagerAdapterModel(context.getString(R.string.closed), MyIssuesView.newInstance(IssueState.closed)))
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.open), MyIssuesFragment.newInstance(IssueState.open))
+                , new FragmentPagerAdapterModel(context.getString(R.string.closed), MyIssuesFragment.newInstance(IssueState.closed)))
                 .collect(Collectors.toList());
     }
 

File: app/src/main/java/com/fastaccess/provider/timeline/handler/CodeBackgroundRoundedSpan.java
Patch:
@@ -12,7 +12,6 @@
 
 public class CodeBackgroundRoundedSpan extends MetricAffectingSpan implements LeadingMarginSpan, LineBackgroundSpan {
     private final int color;
-    private final int padding = 30;
 
     private final RectF rect = new RectF();
 
@@ -45,7 +44,7 @@ private void apply(TextPaint paint) {
     }
 
     @Override public int getLeadingMargin(boolean first) {
-        return padding;
+        return 30;
     }
 
     @Override public void drawLeadingMargin(Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom,

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -10,7 +10,7 @@
 import com.fastaccess.R;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.feeds.FeedsFragment;
-import com.fastaccess.ui.modules.main.issues.pager.MyIssuesPagerView;
+import com.fastaccess.ui.modules.main.issues.pager.MyIssuesPagerFragment;
 import com.fastaccess.ui.modules.main.pullrequests.pager.MyPullsPagerFragment;
 
 import static com.fastaccess.helper.ActivityHelper.getVisibleFragment;
@@ -31,7 +31,7 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
         Fragment currentVisible = getVisibleFragment(fragmentManager);
         FeedsFragment homeView = (FeedsFragment) getFragmentByTag(fragmentManager, FeedsFragment.TAG);
         MyPullsPagerFragment pullRequestView = (MyPullsPagerFragment) getFragmentByTag(fragmentManager, MyPullsPagerFragment.TAG);
-        MyIssuesPagerView issuesView = (MyIssuesPagerView) getFragmentByTag(fragmentManager, MyIssuesPagerView.TAG);
+        MyIssuesPagerFragment issuesView = (MyIssuesPagerFragment) getFragmentByTag(fragmentManager, MyIssuesPagerFragment.TAG);
         switch (type) {
             case MainMvp.FEEDS:
                 if (homeView == null) {
@@ -49,7 +49,7 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
                 break;
             case MainMvp.ISSUES:
                 if (issuesView == null) {
-                    onAddAndHide(fragmentManager, MyIssuesPagerView.newInstance(), currentVisible);
+                    onAddAndHide(fragmentManager, MyIssuesPagerFragment.newInstance(), currentVisible);
                 } else {
                     onShowHideFragment(fragmentManager, issuesView, currentVisible);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -72,7 +72,7 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
             return;
         }
         setCurrentPage(page);
-        makeRestCall(RestProvider.getPullRequestSerice().getPullsWithCount(RepoQueryProvider.getMyIssuesPullRequestQuery(Login.getUser().getLogin(),
+        makeRestCall(RestProvider.getPullRequestService().getPullsWithCount(RepoQueryProvider.getMyIssuesPullRequestQuery(Login.getUser().getLogin(),
                 parameter, true), page),
                 response -> {
                     lastPage = response.getLast();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -97,8 +97,8 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
             sendToView(view -> view.onSetImageUrl(url));
             return;
         }
-        makeRestCall(isRepo ? RestProvider.getRepoService().getReadmeHtml(url)
-                            : RestProvider.getRepoService().getFileAsStream(url), content -> {
+        makeRestCall(isRepo ? RestProvider.getRepoService(true).getReadmeHtml(url)
+                            : RestProvider.getRepoService(true).getFileAsStream(url), content -> {
             downloadedStream = content;
             ViewerFile fileModel = new ViewerFile();
             fileModel.setContent(downloadedStream);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssuePresenter.java
Patch:
@@ -72,7 +72,7 @@ public class CreateIssuePresenter extends BasePresenter<CreateIssueMvp.View> imp
                     pullRequestModel.setBody(InputHelper.toString(description));
                     pullRequestModel.setTitle(title);
                     IssueRequestModel requestModel = IssueRequestModel.clone(pullRequestModel, false);
-                    makeRestCall(RestProvider.getPullRequestSerice().editPullRequest(login, repo, number, requestModel),
+                    makeRestCall(RestProvider.getPullRequestService().editPullRequest(login, repo, number, requestModel),
                             pr -> {
                                 if (pr != null) {
                                     sendToView(view -> view.onSuccessSubmission(pr));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -69,7 +69,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestSerice().getPullRequests(login, repoId, parameter.name(), page), response -> {
+        makeRestCall(RestProvider.getPullRequestService().getPullRequests(login, repoId, parameter.name(), page), response -> {
             lastPage = response.getLast();
             if (getCurrentPage() == 1) {
                 manageSubscription(PullRequest.save(response.getItems(), login, repoId).subscribe());
@@ -89,7 +89,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
     }
 
     private void onCallCountApi(@NonNull IssueState issueState) {
-        manageSubscription(RxHelper.getObserver(RestProvider.getPullRequestSerice()
+        manageSubscription(RxHelper.getObserver(RestProvider.getPullRequestService()
                 .getPullsWithCount(RepoQueryProvider.getIssuesPullRequestQuery(login, repoId, issueState, true), 0))
                 .subscribe(pullRequestPageable -> sendToView(view -> view.onUpdateCount(pullRequestPageable.getTotalCount())),
                         Throwable::printStackTrace));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsPresenter.java
Patch:
@@ -62,7 +62,7 @@ class PullRequestCommitsPresenter extends BasePresenter<PullRequestCommitsMvp.Vi
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestSerice().getPullRequestCommits(login, repoId, number, page),
+        makeRestCall(RestProvider.getPullRequestService().getPullRequestCommits(login, repoId, number, page),
                 response -> {
                     lastPage = response.getLast();
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesPresenter.java
Patch:
@@ -69,7 +69,7 @@ class PullRequestFilesPresenter extends BasePresenter<PullRequestFilesMvp.View>
             return;
         }
         if (repoId == null || login == null) return;
-        makeRestCall(RestProvider.getPullRequestSerice().getPullRequestFiles(login, repoId, number, page),
+        makeRestCall(RestProvider.getPullRequestService().getPullRequestFiles(login, repoId, number, page),
                 response -> {
                     lastPage = response.getLast();
                     sendToView(view -> view.onNotifyAdapter(response.getItems(), page));

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -89,8 +89,8 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
         int number = getHeader().getNumber();
         Observable<List<TimelineModel>> observable = Observable.zip(RestProvider.getIssueService().getTimeline(login, repoId, number),
                 RestProvider.getIssueService().getIssueComments(login, repoId, number),
-                RestProvider.getPullRequestSerice().getPullStatus(login, repoId, getHeader().getHead().getSha()),
-                RestProvider.getPullRequestSerice().getReviews(login, repoId, number),
+                RestProvider.getPullRequestService().getPullStatus(login, repoId, getHeader().getHead().getSha()),
+                RestProvider.getPullRequestService().getReviews(login, repoId, number),
                 (issueEventPageable, commentPageable, statuses, reviews) -> {
                     if (statuses != null) {
                         statuses.setMergable(getHeader().isMergeable());

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -20,13 +20,13 @@
 interface MainMvp {
 
     int FEEDS = 0;
-    int PULL_REQUESTS = 1;
-    int ISSUES = 2;
+    int ISSUES = 1;
+    int PULL_REQUESTS = 2;
 
     @IntDef({
             FEEDS,
-            PULL_REQUESTS,
             ISSUES,
+            PULL_REQUESTS
     })
     @Retention(RetentionPolicy.SOURCE) @interface NavigationType {}
 

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchMvp.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.ui.modules.search;
 
+import android.support.annotation.IntRange;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.view.ViewPager;
@@ -14,12 +15,12 @@
  * Created by Kosh on 08 Dec 2016, 8:19 PM
  */
 
-interface SearchMvp {
+public interface SearchMvp {
 
     interface View extends BaseMvp.FAView {
         void onNotifyAdapter(@Nullable SearchHistory query);
 
-        void onSetCount(int count, int index);
+        void onSetCount(int count, @IntRange(from = 0, to = 3) int index);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeMvp.java
Patch:
@@ -21,6 +21,8 @@ interface SearchCodeMvp {
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<SearchCodeModel> items, int page);
 
+        void onSetTabCount(int count);
+
         void onSetSearchQuery(@NonNull String query, boolean showRepoName);
 
         @NonNull OnLoadMore<String> getLoadMore();

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesMvp.java
Patch:
@@ -21,6 +21,8 @@ interface SearchIssuesMvp {
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<Issue> items, int page);
 
+        void onSetTabCount(int count);
+
         void onSetSearchQuery(@NonNull String query);
 
         @NonNull OnLoadMore<String> getLoadMore();

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposMvp.java
Patch:
@@ -21,6 +21,7 @@ interface SearchReposMvp {
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<Repo> items, int page);
 
+        void onSetTabCount(int count);
 
         void onSetSearchQuery(@NonNull String query);
 

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersMvp.java
Patch:
@@ -21,6 +21,8 @@ interface SearchUsersMvp {
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<User> items, int page);
 
+        void onSetTabCount(int count);
+
         void onSetSearchQuery(@NonNull String query);
 
         @NonNull OnLoadMore<String> getLoadMore();

File: app/src/main/java/com/fastaccess/data/dao/MarkdownModel.java
Patch:
@@ -15,7 +15,7 @@
 public class MarkdownModel implements Parcelable {
     private String text;
     private String mode = "gfm";
-    private String context = "markdown";
+    private String context;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/data/dao/SearchCodeModel.java
Patch:
@@ -21,6 +21,7 @@ public class SearchCodeModel implements Parcelable {
     private String gitUrl;
     private Repo repository;
     private double score;
+    private String htmlUrl;
 
 
     public SearchCodeModel() {}

File: app/src/main/java/com/fastaccess/provider/scheme/LinkParserHelper.java
Patch:
@@ -23,7 +23,7 @@ class LinkParserHelper {
     static final String API_AUTHORITY = "api.github.com";
     static final String PROTOCOL_HTTPS = "https";
     static final ArrayList<String> IGNORED_LIST = Stream.of("notifications", "settings", "blog", "explore",
-            "dashboard", "repositories", "site", "security", "contact", "about", "logos", "")
+            "dashboard", "repositories", "logout", "sessions", "site", "security", "contact", "about", "logos", "login", "")
             .collect(Collectors.toCollection(ArrayList::new));
 
 

File: app/src/main/java/com/fastaccess/provider/timeline/handler/PreTagHandler.java
Patch:
@@ -53,7 +53,7 @@ private void getPlainText(StringBuffer buffer, Object node) {
             builder.append(InputHelper.SPACE);
             builder.append(text);
             builder.append(InputHelper.SPACE);
-            builder.setSpan(new BackgroundColorSpan(color), start + 1, builder.length() - 1, SPAN_EXCLUSIVE_EXCLUSIVE);
+            builder.setSpan(new BackgroundColorSpan(color), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -135,7 +135,7 @@ public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Null
             avatar.setUrl(null, null);
         }
         if (!InputHelper.isEmpty(commentsModel.getBodyHtml())) {
-            HtmlHelper.getComment(comment, commentsModel.getBodyHtml());
+            HtmlHelper.parseHtmlIntoTextView(comment, commentsModel.getBodyHtml());
         } else {
             comment.setText("");
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -51,7 +51,7 @@ private void bind(@NonNull Issue issueModel) {
         name.setText(issueModel.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(issueModel.getCreatedAt()));
         if (!InputHelper.isEmpty(issueModel.getBodyHtml())) {
-            HtmlHelper.getComment(description, issueModel.getBodyHtml());
+            HtmlHelper.parseHtmlIntoTextView(description, issueModel.getBodyHtml());
         } else {
             description.setText(R.string.no_description_provided);
         }
@@ -62,7 +62,7 @@ private void bind(@NonNull PullRequest pullRequest) {
         name.setText(pullRequest.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(pullRequest.getCreatedAt()));
         if (!InputHelper.isEmpty(pullRequest.getBodyHtml())) {
-            HtmlHelper.getComment(description, pullRequest.getBodyHtml());
+            HtmlHelper.parseHtmlIntoTextView(description, pullRequest.getBodyHtml());
         } else {
             description.setText(R.string.no_description_provided);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReviewsViewHolder.java
Patch:
@@ -61,7 +61,7 @@ public static ReviewsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
             }
             if (!InputHelper.isEmpty(review.getBody())) {
                 body.setVisibility(View.VISIBLE);
-                HtmlHelper.getComment(body, review.getBody());
+                HtmlHelper.parseHtmlIntoTextView(body, review.getBody());
             } else {
                 body.setVisibility(View.GONE);
             }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -149,7 +149,7 @@ public static TimelineCommentsViewHolder newInstance(@NonNull ViewGroup viewGrou
             avatar.setUrl(null, null);
         }
         if (!InputHelper.isEmpty(commentsModel.getBodyHtml())) {
-            HtmlHelper.getComment(comment, commentsModel.getBodyHtml());
+            HtmlHelper.parseHtmlIntoTextView(comment, commentsModel.getBodyHtml());
         } else {
             comment.setText("");
         }

File: app/src/main/java/com/fastaccess/ui/modules/code/CodeViewerActivity.java
Patch:
@@ -20,6 +20,7 @@
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.gists.gist.GistActivity;
+import com.fastaccess.ui.modules.repos.code.files.activity.RepoFilesActivity;
 import com.fastaccess.ui.modules.repos.code.prettifier.ViewerFragment;
 
 import net.grandcentrix.thirtyinch.TiPresenter;
@@ -108,6 +109,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String url)
                 if (uri.getPathSegments() != null && !uri.getPathSegments().isEmpty() && uri.getPathSegments().size() >= 1) {
                     GistActivity.createIntent(this, uri.getPathSegments().get(1));
                 }
+            } else {
+                RepoFilesActivity.startActivity(this, url);
             }
             finish();
             return true;

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathFragment.java
Patch:
@@ -1,7 +1,6 @@
 package com.fastaccess.ui.modules.repos.code.files.paths;
 
 import android.content.Context;
-import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
@@ -26,7 +25,7 @@
 import com.fastaccess.ui.adapter.RepoFilePathsAdapter;
 import com.fastaccess.ui.base.BaseFragment;
 import com.fastaccess.ui.modules.repos.code.files.RepoFilesFragment;
-import com.fastaccess.ui.modules.search.files.SearchFileActivity;
+import com.fastaccess.ui.modules.search.repos.files.SearchFileActivity;
 
 import java.util.List;
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -117,6 +117,8 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
                     NameParser parser = new NameParser(url);
                     if (parser.getUsername() != null && parser.getName() != null) {
                         model.setContext(parser.getUsername() + "/" + parser.getName());
+                    } else {
+                        model.setContext("");
                     }
                     Logger.e(model.getContext());
                     makeRestCall(RestProvider.getRepoService().convertReadmeToHtml(model), string -> {

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchMvp.java
Patch:
@@ -18,6 +18,8 @@ interface SearchMvp {
 
     interface View extends BaseMvp.FAView {
         void onNotifyAdapter(@Nullable SearchHistory query);
+
+        void onSetCount(int count, int index);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchPresenter.java
Patch:
@@ -54,7 +54,7 @@ class SearchPresenter extends BasePresenter<SearchMvp.View> implements SearchMvp
             repos.onSetSearchQuery(query);
             users.onSetSearchQuery(query);
             issues.onSetSearchQuery(query);
-            code.onSetSearchQuery(query);
+            code.onSetSearchQuery(query, true);
             boolean noneMatch = Stream.of(hints).noneMatch(value -> value.getText().equalsIgnoreCase(query));
             if (noneMatch) {
                 SearchHistory searchHistory = new SearchHistory(query);

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeMvp.java
Patch:
@@ -21,7 +21,7 @@ interface SearchCodeMvp {
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
         void onNotifyAdapter(@Nullable List<SearchCodeModel> items, int page);
 
-        void onSetSearchQuery(@NonNull String query);
+        void onSetSearchQuery(@NonNull String query, boolean showRepoName);
 
         @NonNull OnLoadMore<String> getLoadMore();
 

File: app/src/main/java/com/fastaccess/ui/widgets/FontTextView.java
Patch:
@@ -69,6 +69,7 @@ private void init(@NonNull Context context, @Nullable AttributeSet attributeSet)
             }
         }
         if (isInEditMode()) return;
+        setFreezesText(true);
         TypeFaceHelper.applyTypeface(this);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/code/CodeViewerActivity.java
Patch:
@@ -20,7 +20,6 @@
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.gists.gist.GistActivity;
-import com.fastaccess.ui.modules.repos.code.files.activity.RepoFilesActivity;
 import com.fastaccess.ui.modules.repos.code.prettifier.ViewerFragment;
 
 import net.grandcentrix.thirtyinch.TiPresenter;
@@ -109,8 +108,6 @@ public static Intent createIntent(@NonNull Context context, @NonNull String url)
                 if (uri.getPathSegments() != null && !uri.getPathSegments().isEmpty() && uri.getPathSegments().size() >= 1) {
                     GistActivity.createIntent(this, uri.getPathSegments().get(1));
                 }
-            } else {
-                RepoFilesActivity.startActivity(this, url);
             }
             finish();
             return true;

File: app/src/main/java/com/fastaccess/ui/modules/code/CodeViewerActivity.java
Patch:
@@ -20,7 +20,6 @@
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.gists.gist.GistActivity;
-import com.fastaccess.ui.modules.repos.code.files.activity.RepoFilesActivity;
 import com.fastaccess.ui.modules.repos.code.prettifier.ViewerFragment;
 
 import net.grandcentrix.thirtyinch.TiPresenter;
@@ -109,8 +108,6 @@ public static Intent createIntent(@NonNull Context context, @NonNull String url)
                 if (uri.getPathSegments() != null && !uri.getPathSegments().isEmpty() && uri.getPathSegments().size() >= 1) {
                     GistActivity.createIntent(this, uri.getPathSegments().get(1));
                 }
-            } else {
-                RepoFilesActivity.startActivity(this, url);
             }
             finish();
             return true;

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -131,6 +131,9 @@ private void markMultiAsRead(@Nullable long[] ids) {
     }
 
     private void markSingleAsRead(long id) {
+        com.fastaccess.data.dao.model.Notification.markAsRead(id)
+                .onErrorComplete()
+                .subscribe();
         RestProvider.getNotificationService()
                 .markAsRead(String.valueOf(id))
                 .doOnSubscribe(() -> notify(id, getNotification().build()))

File: app/src/main/java/com/fastaccess/ui/modules/code/CodeViewerActivity.java
Patch:
@@ -52,7 +52,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String url)
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {
@@ -95,7 +95,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String url)
             }
             return true;
         } else if (item.getItemId() == R.id.browser) {
-            ActivityHelper.forceOpenInBrowser(this, url);
+            ActivityHelper.openChooser(this, url);
             return true;
         } else if (item.getItemId() == R.id.copy) {
             AppHelper.copyToClipboard(this, url);

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginActivity.java
Patch:
@@ -43,7 +43,7 @@ public class LoginActivity extends BaseActivity<LoginMvp.View, LoginPresenter> i
 
     @OnClick(R.id.browserLogin) void onOpenBrowser() {
         Uri uri = getPresenter().getAuthorizationUrl();
-        ActivityHelper.forceOpenInBrowser(this, uri);
+        ActivityHelper.openChooser(this, uri);
         Toasty.info(this, getString(R.string.open_in_browser)).show();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsMvp.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.notification;
+package com.fastaccess.ui.modules.notification.all;
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -19,7 +19,7 @@
  * Created by Kosh on 19 Feb 2017, 7:53 PM
  */
 
-public interface NotificationsMvp {
+public interface AllNotificationsMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener {
 

File: app/src/main/java/com/fastaccess/ui/modules/notification/all/AllNotificationsPresenter.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.notification;
+package com.fastaccess.ui.modules.notification.all;
 
 import android.support.annotation.NonNull;
 import android.view.View;
@@ -24,7 +24,7 @@
  * Created by Kosh on 20 Feb 2017, 8:46 PM
  */
 
-public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View> implements NotificationsMvp.Presenter {
+public class AllNotificationsPresenter extends BasePresenter<AllNotificationsMvp.View> implements AllNotificationsMvp.Presenter {
     private ArrayList<GroupedNotificationModel> notifications = new ArrayList<>();
 
     @Override public void onItemClick(int position, View v, GroupedNotificationModel model) {
@@ -71,7 +71,7 @@ private void markAsRead(int position, View v, Notification item) {
 
     @Override public void onWorkOffline() {
         if (notifications.isEmpty()) {
-            manageSubscription(RxHelper.getObserver(Notification.getNotifications())
+            manageSubscription(RxHelper.getObserver(Notification.getAlltNotifications())
                     .flatMap(notifications -> Observable.from(GroupedNotificationModel.construct(notifications)).toList())
                     .subscribe(models -> sendToView(view -> view.onNotifyAdapter(models))));
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -78,7 +78,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         if (adapter.getItem(position).getPatch() == null) {
-            ActivityHelper.forceOpenInBrowser(getContext(), adapter.getItem(position).getBlobUrl());
+            ActivityHelper.openChooser(getContext(), adapter.getItem(position).getBlobUrl());
         }
         getSparseBooleanArray().put(position, isCollapsed);
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/files/PullRequestFilesFragment.java
Patch:
@@ -131,7 +131,7 @@ private void showReload() {
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         if (adapter.getItem(position).getPatch() == null) {
-            ActivityHelper.forceOpenInBrowser(getContext(), adapter.getItem(position).getBlobUrl());
+            ActivityHelper.openChooser(getContext(), adapter.getItem(position).getBlobUrl());
         }
         getSparseBooleanArray().put(position, isCollapsed);
     }

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -9,6 +9,7 @@
 import com.annimon.stream.IntStream;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ViewHelper;
+import com.fastaccess.provider.timeline.handler.DrawableGetter;
 import com.zzhoujay.markdown.MarkDown;
 
 /**
@@ -33,7 +34,8 @@ public static void setMdText(@NonNull TextView textView, @NonNull String value)
         try {
             textView.setText(MarkDown.fromMarkdown(value, textView,
                     ViewHelper.getCardBackground(textView.getContext()),
-                    ViewHelper.getPrimaryTextColor(textView.getContext())));
+                    ViewHelper.getPrimaryTextColor(textView.getContext()),
+                    new DrawableGetter(textView)));
         } catch (IndexOutOfBoundsException exception) {
             exception.printStackTrace();
             textView.setText(value);

File: app/src/main/java/com/fastaccess/provider/timeline/handler/DrawableGetter.java
Patch:
@@ -28,7 +28,7 @@ public class DrawableGetter implements Html.ImageGetter {
         return container != null ? container.get() : null;
     }
 
-    DrawableGetter(TextView t) {
+    public DrawableGetter(TextView t) {
         this.container = new WeakReference<>(t);
     }
 

File: markdown/src/main/java/com/zzhoujay/markdown/MarkDown.java
Patch:
@@ -24,8 +24,8 @@ public static Spanned fromMarkdown(String source, Html.ImageGetter imageGetter,
         return null;
     }
 
-    public static Spanned fromMarkdown(String source, TextView textView, int codeColor, int headerColor) {
-        MarkDownParser parser = new MarkDownParser(source, new StyleBuilderImpl(textView, codeColor, headerColor));
+    public static Spanned fromMarkdown(String source, TextView textView, int codeColor, int headerColor, Html.ImageGetter imageGetter) {
+        MarkDownParser parser = new MarkDownParser(source, new StyleBuilderImpl(textView, codeColor, headerColor, imageGetter));
         try {
             return parser.parse();
         } catch (IOException e) {

File: markdown/src/main/java/com/zzhoujay/markdown/parser/StyleBuilderImpl.java
Patch:
@@ -50,10 +50,11 @@ public class StyleBuilderImpl implements StyleBuilder {
     private WeakReference<TextView> textViewWeakReference;
     private Html.ImageGetter imageGetter;
 
-    public StyleBuilderImpl(TextView textView, int codeColor, int h1_color) {
+    public StyleBuilderImpl(TextView textView, int codeColor, int h1_color, Html.ImageGetter imageGetter) {
         this.textViewWeakReference = new WeakReference<>(textView);
         this.code_color = codeColor;
         this.h1_color = h1_color;
+        this.imageGetter = imageGetter;
     }
 
     public StyleBuilderImpl(TextView textView, Html.ImageGetter imageGetter) {

File: app/src/main/java/com/fastaccess/data/service/OrganizationService.java
Patch:
@@ -24,7 +24,7 @@ public interface OrganizationService {
 
     @GET("orgs/{org}") Observable<User> getOrganization(@NonNull @Path("org") String org);
 
-    @GET("user/orgs") Observable<Pageable<User>> getMyOrganizations();
+    @GET("user/orgs?per_page=200") Observable<Pageable<User>> getMyOrganizations();
 
     @GET("users/{user}/orgs") Observable<Pageable<User>> getMyOrganizations(@NonNull @Path("user") String user);
 

File: app/src/main/java/com/fastaccess/helper/FileHelper.java
Patch:
@@ -9,7 +9,7 @@
 import android.support.annotation.Nullable;
 
 /**
- * Created by kosh20111 on 10/7/2015. CopyRights @ Innov8tif
+ * Created by kosh20111 on 10/7/2015. CopyRights @
  */
 public class FileHelper {
     public static final long ONE_MB = 1048576L;

File: app/src/main/java/com/fastaccess/helper/InputHelper.java
Patch:
@@ -8,7 +8,7 @@
 import android.widget.TextView;
 
 /**
- * Created by kosh20111 on 3/11/2015. CopyRights @ Innov8tif
+ * Created by kosh20111 on 3/11/2015. CopyRights @
  * <p>
  * Input Helper to validate stuff related to input fields.
  */

File: app/src/main/java/com/fastaccess/helper/Logger.java
Patch:
@@ -10,7 +10,7 @@
 import java.util.List;
 
 /**
- * Created by Kosh on 04/12/15 11:52 PM. copyrights @ Innov8tif
+ * Created by Kosh on 04/12/15 11:52 PM. copyrights @
  */
 public class Logger {
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -65,7 +65,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
 
     @State boolean isProgressShowing;
     @Nullable @BindView(R.id.toolbar) Toolbar toolbar;
-    @Nullable @BindView(R.id.appbar) AppBarLayout shadowView;
+    @Nullable @BindView(R.id.appbar) public AppBarLayout appbar;
     @Nullable @BindView(R.id.drawer) public DrawerLayout drawer;
     @Nullable @BindView(R.id.extrasNav) NavigationView extraNav;
 
@@ -321,8 +321,8 @@ protected void setToolbarIcon(@DrawableRes int res) {
     }
 
     protected void hideShowShadow(boolean show) {
-        if (shadowView != null) {
-            shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0.0f);
+        if (appbar != null) {
+            appbar.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0.0f);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/AppbarRefreshLayout.java
Patch:
@@ -9,7 +9,7 @@
 
 
 /**
- * Created by kosh on 7/30/2015. CopyRights @ Innov8tif
+ * Created by kosh on 7/30/2015. CopyRights @
  */
 public class AppbarRefreshLayout extends SwipeRefreshLayout {
 

File: app/src/main/java/com/fastaccess/ui/widgets/FontTextView.java
Patch:
@@ -28,7 +28,6 @@
 public class FontTextView extends AppCompatTextView {
 
     @State int tintColor = -1;
-
     @State boolean selected;
 
     public FontTextView(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/scroll/InfiniteScroll.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.v7.widget.RecyclerView;
 
 /**
- * Created by Kosh on 8/2/2015. copyrights are reserved @Innov8tif
+ * Created by Kosh on 8/2/2015. copyrights are reserved @
  */
 @SuppressWarnings("FieldCanBeLocal") public abstract class InfiniteScroll extends RecyclerView.OnScrollListener {
     private int previousTotal = 0;

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/scroll/RecyclerViewPositionHelper.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 
 /**
- * Created by Kosh on 8/2/2015. copyrights are reserved @Innov8tif
+ * Created by Kosh on 8/2/2015. copyrights are reserved @
  */
 class RecyclerViewPositionHelper {
     @NonNull private final RecyclerView recyclerView;

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -45,7 +45,7 @@ public class App extends Application {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 6);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 7);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -23,6 +23,7 @@ public class HtmlHelper {
 
     public static void getComment(@NonNull TextView textView, @NonNull String html) {
         HtmlSpanner mySpanner = new HtmlSpanner();
+        mySpanner.setStripExtraWhiteSpace(true);
         BetterLinkMovementExtended betterLinkMovementMethod = BetterLinkMovementExtended.linkifyHtml(textView);
         betterLinkMovementMethod.setOnLinkClickListener((view, url) -> {
             SchemeParser.launchUri(view.getContext(), Uri.parse(url));
@@ -38,4 +39,5 @@ public static void getComment(@NonNull TextView textView, @NonNull String html)
         mySpanner.registerHandler("strong", new BoldHandler());
         textView.setText(mySpanner.fromHtml(html));
     }
+
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitsViewHolder.java
Patch:
@@ -28,6 +28,7 @@ public class CommitsViewHolder extends BaseViewHolder<Commit> {
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
     @BindView(R.id.details) FontTextView details;
+    @BindView(R.id.commentsNo) FontTextView commentsNo;
 
     private CommitsViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);
@@ -48,5 +49,6 @@ public static CommitsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
                 .append(ParseDateFormat.getTimeAgo(date)));
         avatarLayout.setUrl(avatar, login);
         avatarLayout.setVisibility(View.VISIBLE);
+        commentsNo.setText(String.valueOf(commit.getGitCommit() != null ? commit.getGitCommit().getCommentCount() : 0));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/NotificationsViewHolder.java
Patch:
@@ -50,6 +50,7 @@ public static NotificationsViewHolder newInstance(@NonNull ViewGroup viewGroup,
             int cardBackground = ViewHelper.getCardBackground(itemView.getContext());
             int color;
             markAsRead.setVisibility(thread.isUnread() ? View.VISIBLE : View.GONE);
+//            unSubscribe.setImageResource(thread.isIsSubscribed() ? R.drawable.ic_unsubscribe : R.drawable.ic_subscribe);
             if (thread.getSubject().getType() != null) {
                 notificationType.setImageResource(thread.getSubject().getType().getDrawableRes());
                 notificationType.setContentDescription(thread.getSubject().getType().name());

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestViewHolder.java
Patch:
@@ -24,6 +24,7 @@ public class PullRequestViewHolder extends BaseViewHolder<PullRequest> {
     @BindView(R.id.title) FontTextView title;
     @Nullable @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
     @BindView(R.id.details) FontTextView details;
+    @BindView(R.id.commentsNo) FontTextView commentsNo;
     @BindString(R.string.by) String by;
     private boolean withAvatar;
     private boolean showRepoName;
@@ -45,6 +46,7 @@ public static PullRequestViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
     @Override public void bind(@NonNull PullRequest pullRequest) {
         title.setText(pullRequest.getTitle());
         details.setText(PullRequest.getMergeBy(pullRequest, details.getContext(), showRepoName));
+        commentsNo.setText(String.valueOf(pullRequest.getComments()));
         if (withAvatar && avatarLayout != null) {
             avatarLayout.setUrl(pullRequest.getUser().getAvatarUrl(), pullRequest.getUser().getLogin());
             avatarLayout.setVisibility(View.VISIBLE);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/SearchCodeViewHolder.java
Patch:
@@ -21,6 +21,7 @@ public class SearchCodeViewHolder extends BaseViewHolder<SearchCodeModel> {
 
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.details) FontTextView details;
+    @BindView(R.id.commentsNo) View commentsNo;
 
     private SearchCodeViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);
@@ -33,5 +34,6 @@ public static SearchCodeViewHolder newInstance(ViewGroup viewGroup, BaseRecycler
     @Override public void bind(@NonNull SearchCodeModel codeMode) {
         title.setText(codeMode.getRepository() != null ? codeMode.getRepository().getFullName() : "N/A");
         details.setText(codeMode.getName());
+        commentsNo.setVisibility(View.GONE);
     }
-}
+}
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesMvp.java
Patch:
@@ -24,8 +24,7 @@ interface View extends BaseMvp.FAView, OnToggleView {
 
     }
 
-    interface Presenter extends BaseMvp.FAPresenter,
-            BaseMvp.PaginationListener<String>, BaseViewHolder.OnItemClickListener<CommitFileModel> {
+    interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<CommitFileModel> {
 
         void onFragmentCreated(@Nullable Bundle bundle);
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathFragment.java
Patch:
@@ -127,6 +127,7 @@ public static RepoFilePathFragment newInstance(@NonNull String login, @NonNull S
         } else {
             adapter.addItems(items);
         }
+        recycler.smoothScrollToPosition(adapter.getItemCount() - 1);
     }
 
     @Override public void onItemClicked(@NonNull RepoFile model, int position) {

File: app/src/main/java/com/fastaccess/ui/widgets/color/ColorGenerator.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.widgets.color;
 
 import android.content.Context;
+import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -31,7 +32,7 @@ public class ColorGenerator {
         MATERIAL_DARK = create(Arrays.asList(
                 0xffffc107,
                 0xffffc400,
-                -14575885,
+                0xff2196f3,
                 0xff2979ff,
                 0xffa1887f,
                 0xff4dd0e1,
@@ -57,7 +58,7 @@ private int getColor(@Nullable Object key) {
         return colors.get(Math.abs(key.hashCode()) % colors.size());
     }
 
-    public static int getColor(@NonNull Context context, @Nullable Object object) {
+    @ColorInt public static int getColor(@NonNull Context context, @Nullable Object object) {
         if (AppHelper.isNightMode(context.getResources())) {
             return MATERIAL_DARK.getColor(object);
         } else {

File: app/src/main/java/com/fastaccess/provider/timeline/HtmlHelper.java
Patch:
@@ -12,6 +12,7 @@
 import com.fastaccess.provider.timeline.handler.QouteHandler;
 
 import net.nightwhistler.htmlspanner.HtmlSpanner;
+import net.nightwhistler.htmlspanner.handlers.BoldHandler;
 
 /**
  * Created by Kosh on 21 Apr 2017, 11:24 PM
@@ -33,6 +34,8 @@ public static void getComment(@NonNull TextView textView, @NonNull String html)
         mySpanner.registerHandler("g-emoji", new DrawableHandler(textView));
         mySpanner.registerHandler("code", new PreTagHandler(windowBackground, false));
         mySpanner.registerHandler("blockquote", new QouteHandler(windowBackground));
+        mySpanner.registerHandler("b", new BoldHandler());
+        mySpanner.registerHandler("strong", new BoldHandler());
         textView.setText(mySpanner.fromHtml(html));
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerActivity.java
Patch:
@@ -115,9 +115,9 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
         super.onCreate(savedInstanceState);
         setTitle("");
         if (savedInstanceState == null) {
-            if (getPresenter().isApiCalled()) getPresenter().onActivityCreated(getIntent());
+            getPresenter().onActivityCreated(getIntent());
         } else {
-            onSetup();
+            if (getPresenter().isApiCalled()) onSetup();
         }
         if (getPresenter().showToRepoBtn()) showNavToRepoItem();
     }

File: app/src/main/java/com/fastaccess/provider/timeline/handler/DrawableHandler.java
Patch:
@@ -21,7 +21,6 @@
 @AllArgsConstructor public class DrawableHandler extends TagNodeHandler {
 
     private TextView textView;
-    private boolean fullWidth;
 
     @SuppressWarnings("ConstantConditions") private boolean isNull() {
         return textView == null;
@@ -35,7 +34,7 @@
         if (InputHelper.isEmpty(src)) return;
         builder.append("￼");
         if (isNull()) return;
-        DrawableGetter imageGetter = new DrawableGetter(textView, null, fullWidth);
+        DrawableGetter imageGetter = new DrawableGetter(textView);
         builder.setSpan(new ImageSpan(imageGetter.getDrawable(src)), start, builder.length(), SPAN_EXCLUSIVE_EXCLUSIVE);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitFilesViewHolder.java
Patch:
@@ -52,6 +52,8 @@ public class CommitFilesViewHolder extends BaseViewHolder<CommitFileModel> {
             int position = getAdapterPosition();
             onToggleView.onToggle(position, !onToggleView.isCollapsed(position));
             onToggle(onToggleView.isCollapsed(position));
+        } else {
+            super.onClick(v);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -44,6 +44,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
     }
 
     @Override public void onError(@NonNull Throwable throwable) {
+        apiCalled = true;
         throwable.printStackTrace();
         if (RestProvider.getErrorCode(throwable) == 401) {
             sendToView(BaseMvp.FAView::onRequireLogin);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerMvp.java
Patch:
@@ -16,6 +16,8 @@ interface CommitPagerMvp {
     interface View extends BaseMvp.FAView {
 
         void onSetup();
+
+        void onFinishActivity();
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesFragment.java
Patch:
@@ -64,6 +64,7 @@ public static CommitFilesFragment newInstance(@NonNull String sha, @Nullable Com
         stateLayout.setEmptyText(R.string.no_files);
         recycler.setEmptyView(stateLayout, refresh);
         adapter = new CommitFilesAdapter(getPresenter().getFiles(), this);
+        adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         if (savedInstanceState == null) {
             sparseBooleanArray = new SparseBooleanArrayParcelable();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesPresenter.java
Patch:
@@ -11,6 +11,7 @@
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
+import com.fastaccess.ui.modules.code.CodeViewerActivity;
 
 import java.util.ArrayList;
 
@@ -24,7 +25,7 @@ class CommitFilesPresenter extends BasePresenter<CommitFilesMvp.View> implements
 
     @Override public void onItemClick(int position, View v, CommitFileModel item) {
         if (v.getId() == R.id.open) {
-
+            v.getContext().startActivity(CodeViewerActivity.createIntent(v.getContext(), item.getContentsUrl()));
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesSingleton.java
Patch:
@@ -10,6 +10,7 @@
 
 /**
  * Created by Kosh on 27 Mar 2017, 7:28 PM
+ * Commits files could be so freaking large, so having this will avoid transactionToLargeException.
  */
 
 class CommitFilesSingleton {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerMvp.java
Patch:
@@ -43,6 +43,8 @@ interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
         void onShowAssignees(@NonNull List<User> items);
 
         void onMileStoneSelected(@NonNull MilestoneModel milestoneModel);
+
+        void onFinishActivity();
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/widgets/StateLayout.java
Patch:
@@ -28,7 +28,7 @@ public class StateLayout extends NestedScrollView {
     private static final int SHOW_RELOAD_STATE = 4;
     private static final int SHOW_EMPTY_STATE = 7;
     private static final int HIDDEN = 5;
-    private static final int SHOWEN = 6;
+    private static final int SHOWN = 6;
     private OnClickListener onReloadListener;
 
     @BindView(R.id.empty_text) FontTextView emptyText;
@@ -117,7 +117,7 @@ public void setOnReloadListener(OnClickListener onReloadListener) {
         if (visibility == GONE || visibility == INVISIBLE) {
             layoutState = HIDDEN;
         } else {
-            layoutState = SHOWEN;
+            layoutState = SHOWN;
         }
     }
 
@@ -165,7 +165,7 @@ private void onHandleLayoutState() {
             case SHOW_EMPTY_STATE:
                 showEmptyState();
                 break;
-            case SHOWEN:
+            case SHOWN:
                 setVisibility(VISIBLE);
                 showReload(adapterSize);
                 break;

File: app/src/main/java/com/fastaccess/ui/widgets/StateLayout.java
Patch:
@@ -28,7 +28,7 @@ public class StateLayout extends NestedScrollView {
     private static final int SHOW_RELOAD_STATE = 4;
     private static final int SHOW_EMPTY_STATE = 7;
     private static final int HIDDEN = 5;
-    private static final int SHOWEN = 6;
+    private static final int SHOWN = 6;
     private OnClickListener onReloadListener;
 
     @BindView(R.id.empty_text) FontTextView emptyText;
@@ -117,7 +117,7 @@ public void setOnReloadListener(OnClickListener onReloadListener) {
         if (visibility == GONE || visibility == INVISIBLE) {
             layoutState = HIDDEN;
         } else {
-            layoutState = SHOWEN;
+            layoutState = SHOWN;
         }
     }
 
@@ -165,7 +165,7 @@ private void onHandleLayoutState() {
             case SHOW_EMPTY_STATE:
                 showEmptyState();
                 break;
-            case SHOWEN:
+            case SHOWN:
                 setVisibility(VISIBLE);
                 showReload(adapterSize);
                 break;

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -135,7 +135,7 @@ public static long getNotificationTaskDuration(@NonNull Context context) {
         if (prefValue != null) {
             return notificationDurationMillis(context, prefValue);
         }
-        return 0;
+        return -1;
     }
 
     public static long notificationDurationMillis(@NonNull Context context, @NonNull String prefValue) {

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -168,7 +168,8 @@ private void startActivity(@Nullable Uri url) {
         if (MarkDownProvider.isImage(url.toString())) {
             CodeViewerActivity.startActivity(getContext(), url.toString());
         } else {
-            if (url.toString().startsWith("#")) {
+            String lastSegment = url.getEncodedFragment();
+            if (lastSegment != null || url.toString().startsWith("#") || url.toString().indexOf('#') != -1) {
                 return;
             }
             SchemeParser.launchUri(getContext(), url, true);

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -106,15 +106,15 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
     }
 
     @Override public void onBackPressed() {
-        boolean clickTwichToExit = !PrefGetter.isTwiceBackButtonDisabled();
+        boolean clickTwiceToExit = !PrefGetter.isTwiceBackButtonDisabled();
         if (drawerLayout != null) {
             if (getPresenter().canBackPress(drawerLayout)) {
-                superOnBackPressed(clickTwichToExit);
+                superOnBackPressed(clickTwiceToExit);
             } else {
                 drawerLayout.closeDrawer(GravityCompat.START);
             }
         } else {
-            superOnBackPressed(clickTwichToExit);
+            superOnBackPressed(clickTwiceToExit);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/MainActivity.java
Patch:
@@ -106,15 +106,15 @@ public class MainActivity extends BaseActivity<MainMvp.View, MainPresenter> impl
     }
 
     @Override public void onBackPressed() {
-        boolean clickTwichToExit = !PrefGetter.isTwiceBackButtonDisabled();
+        boolean clickTwiceToExit = !PrefGetter.isTwiceBackButtonDisabled();
         if (drawerLayout != null) {
             if (getPresenter().canBackPress(drawerLayout)) {
-                superOnBackPressed(clickTwichToExit);
+                superOnBackPressed(clickTwiceToExit);
             } else {
                 drawerLayout.closeDrawer(GravityCompat.START);
             }
         } else {
-            superOnBackPressed(clickTwichToExit);
+            superOnBackPressed(clickTwiceToExit);
         }
     }
 

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -45,7 +45,7 @@ public class App extends Application {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 5);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 6);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractIssueEvent.java
Patch:
@@ -49,6 +49,7 @@
     @Convert(UserConverter.class) User actor;
     @Convert(UserConverter.class) User assigner;
     @Convert(UserConverter.class) User assignee;
+    @Convert(UserConverter.class) User requestedReviewer;
     @Convert(MilestoneConverter.class) MilestoneModel milestone;
     @Convert(RenameConverter.class) RenameModel rename;
     @Convert(IssueConverter.class) Issue source;
@@ -117,6 +118,7 @@ public static Observable<List<IssueEvent>> get(@NonNull String repoId, @NonNull
         dest.writeParcelable(this.actor, flags);
         dest.writeParcelable(this.assigner, flags);
         dest.writeParcelable(this.assignee, flags);
+        dest.writeParcelable(this.requestedReviewer, flags);
         dest.writeParcelable(this.milestone, flags);
         dest.writeParcelable(this.rename, flags);
         dest.writeParcelable(this.source, flags);
@@ -138,6 +140,7 @@ protected AbstractIssueEvent(Parcel in) {
         this.actor = in.readParcelable(User.class.getClassLoader());
         this.assigner = in.readParcelable(User.class.getClassLoader());
         this.assignee = in.readParcelable(User.class.getClassLoader());
+        this.requestedReviewer = in.readParcelable(User.class.getClassLoader());
         this.milestone = in.readParcelable(MilestoneModel.class.getClassLoader());
         this.rename = in.readParcelable(RenameModel.class.getClassLoader());
         this.source = in.readParcelable(Issue.class.getClassLoader());

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -19,11 +19,11 @@ public enum IssueEventType {
     referenced(R.drawable.ic_format_quote),
     renamed(R.drawable.ic_edit),
     reopened(R.drawable.ic_issue_opened),
-    subscribed(R.drawable.ic_announcement),
+    subscribed(R.drawable.ic_subscribe),
     unassigned(R.drawable.ic_announcement),
     unlabeled(R.drawable.ic_label),
-    unlocked(R.drawable.ic_unlock),
-    unsubscribed(R.drawable.ic_announcement),
+    unlocked(R.drawable.ic_unsubscribe),
+    unsubscribed(R.drawable.ic_eye_off),
     review_requested(R.drawable.ic_eye),
     review_request_removed(R.drawable.ic_eye_off),
     @SerializedName("cross-referenced")crossReferenced(R.drawable.ic_format_quote);

File: app/src/main/java/com/fastaccess/helper/InputHelper.java
Patch:
@@ -14,6 +14,7 @@
  */
 public class InputHelper {
 
+    public static final String SPACE = "\u202F\u202F";
 
     private static boolean isWhiteSpaces(@Nullable String s) {
         return s != null && s.matches("\\s+");

File: app/src/main/java/com/fastaccess/helper/ObjectsCompat.java
Patch:
@@ -1,12 +1,14 @@
 package com.fastaccess.helper;
 
+import android.support.annotation.Nullable;
+
 /**
  * Created by Kosh on 18 Apr 2017, 10:57 PM
  */
 
 public class ObjectsCompat {
 
-    public static boolean nonNull(Object obj) {
+    public static boolean nonNull(@Nullable Object obj) {
         return obj != null;
     }
 }

File: app/src/main/java/com/fastaccess/provider/timeline/CommentsHelper.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.provider.comments;
+package com.fastaccess.provider.timeline;
 
 import android.content.Context;
 import android.support.annotation.IdRes;

File: app/src/main/java/com/fastaccess/provider/timeline/ReactionsProvider.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.provider.comments;
+package com.fastaccess.provider.timeline;
 
 import android.support.annotation.IdRes;
 import android.support.annotation.NonNull;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -13,7 +13,7 @@
 import com.fastaccess.data.dao.model.ReactionsModel;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
-import com.fastaccess.provider.comments.CommentsHelper;
+import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -14,7 +14,7 @@
 import com.fastaccess.data.dao.model.ReactionsModel;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
-import com.fastaccess.provider.comments.CommentsHelper;
+import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.ui.adapter.IssuePullsTimelineAdapter;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.adapter.callback.ReactionsCallback;

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -10,7 +10,7 @@
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.RxHelper;
-import com.fastaccess.provider.comments.CommentsHelper;
+import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -15,7 +15,7 @@
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.provider.comments.ReactionsProvider;
+import com.fastaccess.provider.timeline.ReactionsProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.BaseMvp;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -15,7 +15,7 @@
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.provider.comments.ReactionsProvider;
+import com.fastaccess.provider.timeline.ReactionsProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.BaseMvp;

File: app/src/main/java/com/fastaccess/ui/modules/repos/reactions/ReactionsDialogFragment.java
Patch:
@@ -13,7 +13,7 @@
 import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.provider.comments.CommentsHelper;
+import com.fastaccess.provider.timeline.CommentsHelper;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.UsersAdapter;
 import com.fastaccess.ui.base.BaseDialogFragment;

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -31,6 +31,7 @@ public class App extends Application {
         super.onCreate();
         instance = this;
         deleteDatabase("database.db");
+        getDataStore();//init requery before anything.
         PreferenceManager.setDefaultValues(this, R.xml.fasthub_settings, false);
         UILProvider.initUIL(this);
         TypeFaceHelper.generateTypeface(this);
@@ -44,7 +45,7 @@ public class App extends Application {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 4);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 5);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/service/NotificationService.java
Patch:
@@ -4,6 +4,7 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.data.dao.Pageable;
+import com.fastaccess.data.dao.RepoSubscriptionModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.Notification;
 
@@ -30,5 +31,7 @@ public interface NotificationService {
 
     @GET() Observable<Comment> getComment(@Url @NonNull String commentUrl);
 
+    @GET("notifications/threads/{id}/subscription") Observable<RepoSubscriptionModel> isSubscribed(@Path("id") long id);
+
     @DELETE("notifications/threads/{id}/subscription") Observable<Response<Boolean>> unSubscribe(@Path("id") long id);
 }

File: app/src/main/java/com/fastaccess/provider/rest/interceptors/AuthenticationInterceptor.java
Patch:
@@ -1,7 +1,6 @@
 package com.fastaccess.provider.rest.interceptors;
 
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 
 import java.io.IOException;
 
@@ -25,7 +24,6 @@ public class AuthenticationInterceptor implements Interceptor {
         if (!InputHelper.isEmpty(otp)) {
             builder.addHeader("X-GitHub-OTP", otp.trim());
         }
-        Logger.e(authToken, otp);
         Request request = builder.build();
         return chain.proceed(request);
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/NotificationsHeaderViewHolder.java
Patch:
@@ -33,7 +33,7 @@ public static NotificationsHeaderViewHolder newInstance(@NonNull ViewGroup viewG
     @Override public void bind(@NonNull GroupedNotificationModel model) {
         Repo repo = model.getRepo();
         if (repo != null && headerTitle != null) {
-            headerTitle.setText(repo.getName());
+            headerTitle.setText(repo.getFullName());
         }
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ProgressDialogFragment.java
Patch:
@@ -35,7 +35,7 @@ public class ProgressDialogFragment extends DialogFragment {
     }
 
     @Override public void dismiss() {
-        AnimHelper.dismissDialog(this, 100, new AnimatorListenerAdapter() {
+        AnimHelper.dismissDialog(this, 40, new AnimatorListenerAdapter() {
             @Override public void onAnimationEnd(Animator animation) {
                 super.onAnimationEnd(animation);
                 ProgressDialogFragment.super.dismiss();

File: app/src/main/java/com/fastaccess/provider/scheme/LinkParserHelper.java
Patch:
@@ -5,6 +5,7 @@
 import com.annimon.stream.Collectors;
 import com.annimon.stream.Optional;
 import com.annimon.stream.Stream;
+import com.fastaccess.helper.ObjectsCompat;
 
 import java.util.ArrayList;
 
@@ -25,6 +26,6 @@ class LinkParserHelper {
 
 
     @SafeVarargs static <T> Optional<T> returnNonNull(@NonNull T... t) {
-        return Stream.of(t).filter(value -> value != null).findFirst();
+        return Stream.of(t).filter(ObjectsCompat::nonNull).findFirst();
     }
 }

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -48,7 +48,7 @@ public class NotificationSchedulerJobTask extends JobService {
     @Override public boolean onStartJob(JobParameters job) {
         if (Login.getUser() != null && PrefGetter.getNotificationTaskDuration(this) != -1) {
             RestProvider.getNotificationService()
-                    .getNotifications(ParseDateFormat.getLastWeekDate(), 0)
+                    .getNotifications(ParseDateFormat.getLastWeekDate())
                     .subscribeOn(Schedulers.io())
                     .subscribe(item -> {
                         AppHelper.cancelAllNotifications(getApplicationContext());

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/MilestonesViewHolder.java
Patch:
@@ -29,7 +29,7 @@ private MilestonesViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapt
     }
 
     public static MilestonesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullable BaseRecyclerAdapter adapter) {
-        return new MilestonesViewHolder(getView(viewGroup, R.layout.notifications_row_item), adapter);
+        return new MilestonesViewHolder(getView(viewGroup, R.layout.milestone_row_item), adapter);
     }
 
     @Override public void bind(@NonNull MilestoneModel milestoneModel) {

File: app/src/main/java/com/fastaccess/provider/rest/converters/GithubResponseConverter.java
Patch:
@@ -38,6 +38,4 @@ private static class StringResponseConverter implements Converter<ResponseBody,
             return value.string();
         }
     }
-
-
 }

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -221,15 +221,15 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
 
     @Nullable private static TaskStackBuilder getCommits(@NonNull Context context, @NonNull Uri uri) {
         List<String> segments = uri.getPathSegments();
-        if (segments == null || segments.isEmpty() || segments.size() < 3) return null;
+        if (segments == null || segments.isEmpty()) return null;
         String login = null;
         String repoId = null;
         String sha = null;
         if (segments.size() > 3 && segments.get(3).equals("commits")) {
             login = segments.get(1);
             repoId = segments.get(2);
             sha = segments.get(4);
-        } else if (segments.get(2).equals("commits")) {
+        } else if (segments.size() > 2 && segments.get(2).equals("commits")) {
             login = segments.get(0);
             repoId = segments.get(1);
             sha = uri.getLastPathSegment();

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -92,7 +92,7 @@ private void openNotification(long id, @Nullable String url, boolean readOnly) {
             if (!PrefGetter.isMarkAsReadEnabled() || readOnly) {
                 markSingleAsRead(id);
             }
-            if (!readOnly) SchemeParser.launchUri(getApplicationContext(), Uri.parse(url), true);
+            if (!readOnly) SchemeParser.launchUri(getApplicationContext(), Uri.parse(url), true, true);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/IssuePullsTimelineAdapter.java
Patch:
@@ -69,7 +69,7 @@ public IssuePullsTimelineAdapter(@NonNull List<TimelineModel> data, OnToggleView
         } else {
             if (model.getStatus() != null) ((PullStatusViewHolder) holder).bind(model.getStatus());
         }
-        if (model.getType() == TimelineModel.HEADER || model.getType() == TimelineModel.STATUS) {
+        if (model.getType() != TimelineModel.COMMENT) {
             StaggeredGridLayoutManager.LayoutParams layoutParams = (StaggeredGridLayoutManager.LayoutParams) holder.itemView.getLayoutParams();
             layoutParams.setFullSpan(true);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/LabelsViewHolder.java
Patch:
@@ -60,6 +60,8 @@ public static LabelsViewHolder newInstance(@NonNull ViewGroup parent, @Nullable
                 }
                 itemView.setBackgroundColor(onSelectLabel.isLabelSelected(getAdapterPosition()) ? color : 0);
             }
+        } else {
+            colorImage.setBackgroundColor(0);
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsFragment.java
Patch:
@@ -149,7 +149,7 @@ public static RepoCommitsFragment newInstance(@NonNull String repoId, @NonNull S
     @Override public void setBranchesData(@Nullable List<BranchesModel> branchesData, boolean firstTime) {
         branchesProgress.setVisibility(View.GONE);
         if (branchesData != null) {
-            branches.setAdapter(new BranchesAdapter(branchesData));
+            branches.setAdapter(new BranchesAdapter(getContext(), branchesData));
             if (firstTime) {
                 if (!InputHelper.isEmpty(getPresenter().getDefaultBranch())) {
                     int index = -1;

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathFragment.java
Patch:
@@ -51,7 +51,8 @@ public class RepoFilePathFragment extends BaseFragment<RepoFilePathMvp.View, Rep
     private RepoFilesFragment repoFilesView;
     private boolean canSelectSpinner;
 
-    public static RepoFilePathFragment newInstance(@NonNull String login, @NonNull String repoId, @Nullable String path, @NonNull String defaultBranch) {
+    public static RepoFilePathFragment newInstance(@NonNull String login, @NonNull String repoId, @Nullable String path, @NonNull String
+            defaultBranch) {
         return newInstance(login, repoId, path, defaultBranch, false);
     }
 
@@ -179,7 +180,7 @@ public static RepoFilePathFragment newInstance(@NonNull String login, @NonNull S
     @Override public void setBranchesData(@Nullable List<BranchesModel> branchesData, boolean firstTime) {
         branchesProgress.setVisibility(View.GONE);
         if (branchesData != null) {
-            branches.setAdapter(new BranchesAdapter(branchesData));
+            branches.setAdapter(new BranchesAdapter(getContext(), branchesData));
             if (firstTime) {
                 if (!InputHelper.isEmpty(getPresenter().getDefaultBranch())) {
                     int index = -1;

File: app/src/main/java/com/fastaccess/ui/widgets/RoundBackgroundSpan.java
Patch:
@@ -30,10 +30,9 @@ public int getSize(@NonNull Paint paint, CharSequence charSequence, int start, i
     public void draw(@NonNull Canvas canvas, @NonNull CharSequence charSequence,
                      int start, int end, float x, int top, int y, int bottom, @NonNull Paint paint) {
         paint.setColor(color);
-        rectF.set(x, top, width + x, bottom - 10);
+        rectF.set(x, top, width + x, bottom - 8);
         canvas.drawRoundRect(rectF, 5, 5, paint);
         paint.setColor(ViewHelper.generateTextColor(color));
-        canvas.drawText(charSequence, start, end, x + (5 * 2.0f), (float) y, paint);
-
+        canvas.drawText(charSequence, start, end, x, y, paint);
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/widgets/RoundBackgroundSpan.java
Patch:
@@ -30,10 +30,10 @@ public int getSize(@NonNull Paint paint, CharSequence charSequence, int start, i
     public void draw(@NonNull Canvas canvas, @NonNull CharSequence charSequence,
                      int start, int end, float x, int top, int y, int bottom, @NonNull Paint paint) {
         paint.setColor(color);
-        rectF.set(x, top, width + x, bottom - 20);
+        rectF.set(x, top, width + x, bottom - 10);
         canvas.drawRoundRect(rectF, 5, 5, paint);
         paint.setColor(ViewHelper.generateTextColor(color));
-        canvas.drawText(charSequence, start, end, x + (5 * 2.0f), (float) y - 5, paint);
+        canvas.drawText(charSequence, start, end, x + (5 * 2.0f), (float) y, paint);
 
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -65,7 +65,7 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
     @Override public boolean onPreferenceChange(Preference preference, Object newValue) {
         if (preference.getKey().equalsIgnoreCase("notificationTime")) {
             NotificationSchedulerJobTask.scheduleJob(getActivity().getApplicationContext(),
-                    PrefGetter.getNotificationTaskDuration(getActivity().getApplicationContext()), true);
+                    PrefGetter.notificationDurationMillis(getActivity().getApplicationContext(), (String) newValue), true);
             return true;
         } else if (preference.getKey().equalsIgnoreCase("recylerViewAnimation")) {
             restartActivity();

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -65,7 +65,7 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
     @Override public boolean onPreferenceChange(Preference preference, Object newValue) {
         if (preference.getKey().equalsIgnoreCase("notificationTime")) {
             NotificationSchedulerJobTask.scheduleJob(getActivity().getApplicationContext(),
-                    PrefGetter.getNotificationTaskDuration(getActivity().getApplicationContext()), true);
+                    PrefGetter.notificationDurationMillis(getActivity().getApplicationContext(), (String) newValue), true);
             return true;
         } else if (preference.getKey().equalsIgnoreCase("recylerViewAnimation")) {
             restartActivity();

File: app/src/main/java/com/fastaccess/data/service/LoginRestService.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.fastaccess.data.dao.AccessTokenModel;
 import com.fastaccess.data.dao.AuthModel;
+import com.fastaccess.data.dao.model.Login;
 
 import retrofit2.http.Body;
 import retrofit2.http.Field;
@@ -23,4 +24,6 @@ Observable<AccessTokenModel> getAccessToken(@NonNull @Field("code") String code,
                                                 @NonNull @Field("client_secret") String clientSecret,
                                                 @NonNull @Field("state") String state,
                                                 @NonNull @Field("redirect_uri") String redirectUrl);
+
+    @POST("user") @Headers("Accept: application/json") Observable<Login> loginAndGetUser(@NonNull @Body AuthModel authModel);
 }

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -38,7 +38,8 @@ public static void cancelNotification(@NonNull Context context) {
     }
 
     public static void cancelNotification(@NonNull Context context, int id) {
-        ((NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE)).cancel(id);
+        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        notificationManager.cancel(id);
     }
 
     public static void cancelAllNotifications(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/provider/rest/LoginProvider.java
Patch:
@@ -35,7 +35,9 @@ private static OkHttpClient provideOkHttpClient(@Nullable String authToken, @Nul
         OkHttpClient.Builder client = new OkHttpClient.Builder();
         if (BuildConfig.DEBUG) {
             client.addInterceptor(new HttpLoggingInterceptor()
-                    .setLevel(HttpLoggingInterceptor.Level.BODY));
+                    .setLevel(HttpLoggingInterceptor.Level.BODY))
+                    .addInterceptor(new HttpLoggingInterceptor()
+                            .setLevel(HttpLoggingInterceptor.Level.HEADERS));
         }
         client.addInterceptor(new AuthenticationInterceptor(authToken, otp));
         return client.build();

File: app/src/main/java/com/fastaccess/provider/rest/interceptors/AuthenticationInterceptor.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.provider.rest.interceptors;
 
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.Logger;
 
 import java.io.IOException;
 
@@ -19,11 +20,12 @@ public class AuthenticationInterceptor implements Interceptor {
         Request original = chain.request();
         Request.Builder builder = original.newBuilder();
         if (!InputHelper.isEmpty(authToken)) {
-            builder.header("Authorization", authToken);
+            builder.header("Authorization", authToken.startsWith("Basic") ? authToken : "token " + authToken);
         }
         if (!InputHelper.isEmpty(otp)) {
             builder.addHeader("X-GitHub-OTP", otp.trim());
         }
+        Logger.e(authToken, otp);
         Request request = builder.build();
         return chain.proceed(request);
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -78,7 +78,7 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         date.setText(ParseDateFormat.getTimeAgo(repo.getUpdatedAt()));
         if (!InputHelper.isEmpty(repo.getLanguage())) {
             language.setText(repo.getLanguage());
-            language.setTextColor(ColorGenerator.MATERIAL.getColor(repo.getLanguage()));
+            language.setTextColor(ColorGenerator.getColor(itemView.getContext(), repo.getLanguage()));
             language.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -90,7 +90,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
         date.setText(ParseDateFormat.getTimeAgo(repo.getUpdatedAt()));
         if (!InputHelper.isEmpty(repo.getLanguage())) {
             language.setText(repo.getLanguage());
-            language.setTextColor(ColorGenerator.MATERIAL.getColor(repo.getLanguage()));
+            language.setTextColor(ColorGenerator.getColor(itemView.getContext(),repo.getLanguage()));
             language.setVisibility(View.VISIBLE);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorActivity.java
Patch:
@@ -36,7 +36,7 @@
 
 public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter> implements EditorMvp.View {
 
-    private CharSequence savedText;
+    private CharSequence savedText = "";
     @BindView(R.id.view) ForegroundImageView viewCode;
     @BindView(R.id.editText) FontEditText editText;
     @BindView(R.id.editorIconsHolder) View editorIconsHolder;
@@ -75,8 +75,7 @@ public class EditorActivity extends BaseActivity<EditorMvp.View, EditorPresenter
     }
 
     @OnClick(R.id.view) void onViewMarkDown() {
-        if (InputHelper.isEmpty(editText)) return;
-        if (editText.isEnabled()) {
+        if (editText.isEnabled() && !InputHelper.isEmpty(editText)) {
             editText.setEnabled(false);
             MarkDownProvider.setMdText(editText, InputHelper.toString(editText));
             ViewHelper.hideKeyboard(editText);

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorPresenter.java
Patch:
@@ -75,7 +75,7 @@ class EditorPresenter extends BasePresenter<EditorMvp.View> implements EditorMvp
                 MarkDownProvider.addList(editText, "- [x]");
                 break;
             case R.id.unCheckbox:
-                MarkDownProvider.addList(editText, "- []");
+                MarkDownProvider.addList(editText, "- [ ]");
                 break;
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginActivity.java
Patch:
@@ -129,7 +129,6 @@ public class LoginActivity extends BaseActivity<LoginMvp.View, LoginPresenter> i
 
     @Override public void showProgress(@StringRes int resId) {
         login.hide();
-
         InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
         imm.hideSoftInputFromWindow(login.getWindowToken(), 0);
 
@@ -156,7 +155,8 @@ public class LoginActivity extends BaseActivity<LoginMvp.View, LoginPresenter> i
     private void doLogin() {
         if (progress.getVisibility() == View.GONE) {
             getPresenter().login(InputHelper.toString(username),
-                    InputHelper.toString(password), InputHelper.toString(twoFactor));
+                    InputHelper.toString(password),
+                    InputHelper.toString(twoFactor));
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -82,7 +82,7 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
         if (getView() != null) {
             getView().onCloseDrawer();
             if (item.getItemId() == R.id.logout) {
-                getView().onLogout();
+                getView().onLogoutPressed();
                 return true;
             } else if (item.getItemId() == R.id.fhRepo) {
                 getView().openFasHubRepo();

File: markdown/src/main/java/com/zzhoujay/markdown/parser/TagHandlerImpl.java
Patch:
@@ -30,7 +30,7 @@ public class TagHandlerImpl implements TagHandler {
     private static final Matcher matcherQuota = Pattern.compile("^\\s{0,3}>\\s(.*)").matcher("");
     private static final Matcher matcherUl = Pattern.compile("^\\s*[*+-]\\s+(.*)").matcher("");
     private static final Matcher matcherOl = Pattern.compile("^\\s*\\d+\\.\\s+(.*)").matcher("");
-    private static final Matcher matcherUnChecked = Pattern.compile("-\\s\\[]+(.*)").matcher("");
+    private static final Matcher matcherUnChecked = Pattern.compile("-\\s\\[ ]+(.*)").matcher("");
     private static final Matcher matcherChecked = Pattern.compile("-\\s\\[x]+(.*)").matcher("");
     private static final Matcher matcherItalic = Pattern.compile("[^*_]*(([*_])([^*_].*?)\\2)").matcher("");
     private static final Matcher matcherEm = Pattern.compile("[^*_]*(([*_])\\2([^*_].*?)\\2\\2)").matcher("");
@@ -250,7 +250,7 @@ public boolean ul(Line line) {
     }
 
     private boolean ul(Line line, int level) {
-        if (line.getSource() != null && (line.getSource().startsWith("- []") || line.getSource().startsWith("- [x]"))) {
+        if (line.getSource() != null && (line.getSource().startsWith("- [ ]") || line.getSource().startsWith("- [x]"))) {
             if (line.getSource().startsWith("- [x]")) {
                 return todoChecked(line);
             } else {
@@ -374,7 +374,7 @@ public boolean ol(Line line) {
     }
 
     private boolean ol(Line line, int level) {
-        if (line.getSource() != null && (line.getSource().startsWith("- []") || line.getSource().startsWith("- [x]"))) {
+        if (line.getSource() != null && (line.getSource().startsWith("- [ ]") || line.getSource().startsWith("- [x]"))) {
             if (line.getSource().startsWith("- [x]")) {
                 return todoChecked(line);
             } else {

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -37,6 +37,7 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
             new LibsBuilder()
                     .withActivityStyle(AppHelper.isNightMode(getResources()) ? Libs.ActivityStyle.DARK :
                                        Libs.ActivityStyle.LIGHT)
+                    .withFields(R.string.class.getFields())
                     .withAutoDetect(true)
                     .withAboutIconShown(true)
                     .withAboutVersionShown(true)

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -37,6 +37,7 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
             new LibsBuilder()
                     .withActivityStyle(AppHelper.isNightMode(getResources()) ? Libs.ActivityStyle.DARK :
                                        Libs.ActivityStyle.LIGHT)
+                    .withFields(R.string.class.getFields())
                     .withAutoDetect(true)
                     .withAboutIconShown(true)
                     .withAboutVersionShown(true)

File: app/src/main/java/com/fastaccess/data/dao/types/EventsType.java
Patch:
@@ -45,10 +45,10 @@ public enum EventsType {
     }
 
     @DrawableRes public int getDrawableRes() {
-        return drawableRes;
+        return drawableRes > 0 ? drawableRes : R.drawable.ic_info_outline;
     }
 
     @StringRes public int getType() {
-        return type;
+        return type > 0 ? type : R.string.unknown;
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesMvp.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by Kosh on 20 Nov 2016, 11:10 AM
@@ -40,7 +41,7 @@ interface Presenter extends BaseMvp.FAPresenter,
         void onInitDataAndRequest(@NonNull String login, @NonNull String repoId, @NonNull String path,
                                   @NonNull String ref, boolean clear);
 
-        @Nullable ArrayList<RepoFile> getCachedFiles(@NonNull String url, @NonNull String ref);
+        @Nullable List<RepoFile> getCachedFiles(@NonNull String url, @NonNull String ref);
     }
 
 

File: app/src/main/java/com/prettifier/pretty/helper/PrettifyHelper.java
Patch:
@@ -30,7 +30,6 @@ public class PrettifyHelper {
             "    white-space: -pre-wrap !important;\n" +
             "    white-space: -o-pre-wrap !important;\n" +
             "    word-wrap: break-word !important;\n" +
-            "    margin: 4px 0px 4px 0px !important;\n" +
             "}\n" +
             "pre code {\n" +
             "    word-wrap: break-all !important;\n" +
@@ -50,7 +49,6 @@ public class PrettifyHelper {
             "    white-space: -pre-wrap !important;\n" +
             "    white-space: -o-pre-wrap !important;\n" +
             "    word-wrap: break-word !important;\n" +
-            "    margin: 4px 0px 4px 0px !important;\n" +
             "}\n" +
             "</style>";
 

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeView.java
Patch:
@@ -47,9 +47,6 @@ public static SearchCodeView newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        if (savedInstanceState == null) {
-            stateLayout.hideProgress();
-        }
         stateLayout.setEmptyText(R.string.no_search_results);
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         stateLayout.setOnReloadListener(this);
@@ -62,6 +59,9 @@ public static SearchCodeView newInstance() {
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getCodes().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
+        if (InputHelper.isEmpty(searchQuery)) {
+            stateLayout.showEmptyState();
+        }
     }
 
     @NonNull @Override public SearchCodePresenter providePresenter() {

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesView.java
Patch:
@@ -45,9 +45,6 @@ public static SearchIssuesView newInstance() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        if (savedInstanceState == null) {
-            stateLayout.hideProgress();
-        }
         stateLayout.setEmptyText(R.string.no_search_results);
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         stateLayout.setOnReloadListener(this);
@@ -60,6 +57,9 @@ public static SearchIssuesView newInstance() {
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
+        if (InputHelper.isEmpty(searchQuery)) {
+            stateLayout.showEmptyState();
+        }
     }
 
     @NonNull @Override public SearchIssuesPresenter providePresenter() {

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposView.java
Patch:
@@ -60,6 +60,9 @@ public static SearchReposView newInstance() {
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
+        if (InputHelper.isEmpty(searchQuery)) {
+            stateLayout.showEmptyState();
+        }
     }
 
     @NonNull @Override public SearchReposPresenter providePresenter() {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -15,6 +15,7 @@
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -87,7 +88,7 @@ public ReadNotificationService() {
 
     private void openNotification(long id, @Nullable String url, boolean readOnly) {
         if (id > 0 && url != null) {
-            AppHelper.cancelNotification(this, (int) id);
+            AppHelper.cancelNotification(this, InputHelper.getSafeIntId(id));
             if (!PrefGetter.isMarkAsReadEnabled() || readOnly) {
                 markSingleAsRead(id);
             }
@@ -104,7 +105,7 @@ private void markMultiAsRead(@Nullable long[] ids) {
     private void markSingleAsRead(long id) {
         RestProvider.getNotificationService()
                 .markAsRead(String.valueOf(id))
-                .doOnSubscribe(() -> getNotificationManager().notify((int) id, getNotification().build()))
+                .doOnSubscribe(() -> getNotificationManager().notify(InputHelper.getSafeIntId(id), getNotification().build()))
                 .subscribeOn(Schedulers.io())
                 .subscribe(booleanResponse -> {
                 }, Throwable::printStackTrace, () -> getNotificationManager().cancel((int) id));

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsView.java
Patch:
@@ -205,7 +205,6 @@ public static CommitCommentsView newInstance(@NonNull String login, @NonNull Str
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         getSparseBooleanArray().put(position, isCollapsed);
-        adapter.notifyItemChanged(position);
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -34,8 +34,8 @@ public class SettingsFragment extends PreferenceFragmentCompat implements Prefer
 
     @Override public boolean onPreferenceChange(Preference preference, Object newValue) {
         if (preference.getKey().equalsIgnoreCase("notificationTime")) {
-            NotificationSchedulerJobTask.scheduleJob(getActivity().getApplicationContext(), PrefGetter.getNotificationTaskDuration(getActivity()
-                    .getApplicationContext()), true);
+            NotificationSchedulerJobTask.scheduleJob(getActivity().getApplicationContext(),
+                    PrefGetter.getNotificationTaskDuration(getActivity().getApplicationContext()), true);
             return true;
         } else if (preference.getKey().equalsIgnoreCase("recylerViewAnimation")) {
             restartActivity();

File: app/src/main/java/com/fastaccess/data/dao/types/ReactionTypes.java
Patch:
@@ -30,8 +30,8 @@ public String getContent() {
         return content;
     }
 
-    public void setvId(int vId) {
-        this.vId = vId;
+    @IdRes public int getvId() {
+        return vId;
     }
 
     @Nullable public static ReactionTypes get(@IdRes int vId) {

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -221,7 +221,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
         String login = null;
         String repoId = null;
         String sha = null;
-        if (segments.get(3).equals("commits")) {
+        if (segments.size() > 3 && segments.get(3).equals("commits")) {
             login = segments.get(1);
             repoId = segments.get(2);
             sha = segments.get(4);

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -91,7 +91,7 @@ private void openNotification(long id, @Nullable String url, boolean readOnly) {
             if (!PrefGetter.isMarkAsReadEnabled() || readOnly) {
                 markSingleAsRead(id);
             }
-            if (!readOnly) SchemeParser.launchUri(getBaseContext(), Uri.parse(url), true);
+            if (!readOnly) SchemeParser.launchUri(this, Uri.parse(url), true);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsView.java
Patch:
@@ -12,7 +12,6 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.SimpleUrlsModel;
 import com.fastaccess.data.dao.model.Event;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -75,7 +74,6 @@ public static FeedsView newInstance() {
     }
 
     @Override public void showProgress(@StringRes int resId) {
-
         stateLayout.showProgress();
     }
 
@@ -100,7 +98,6 @@ private void showReload() {
     }
 
     @Override public void onOpenRepoChooser(@NonNull ArrayList<SimpleUrlsModel> models) {
-        Logger.e(models);
         ListDialogView<SimpleUrlsModel> dialogView = new ListDialogView<>();
         dialogView.initArguments(getString(R.string.repo_chooser), models);
         dialogView.show(getChildFragmentManager(), "ListDialogView");

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
+import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.adapter.callback.ReactionsCallback;
@@ -36,6 +37,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onShowDeleteMsg(long id);
 
         void onTagUser(@Nullable User user);
+
+        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long id);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
+import com.fastaccess.data.dao.types.ReactionTypes;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.adapter.callback.ReactionsCallback;
@@ -36,6 +37,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onShowDeleteMsg(long id);
 
         void onTagUser(@Nullable User user);
+
+        void showReactionsPopup(@NonNull ReactionTypes type, @NonNull String login, @NonNull String repoId, long id);
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -242,7 +242,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
 
     @Nullable private static TaskStackBuilder getCommit(@NonNull Context context, @NonNull Uri uri) {
         List<String> segments = uri.getPathSegments();
-        if (segments == null || segments.size() < 2 || !"commit".equals(segments.get(2))) return null;
+        if (segments == null || segments.size() < 3 || !"commit".equals(segments.get(2))) return null;
         String login = segments.get(0);
         String repoId = segments.get(1);
         String sha = segments.get(3);

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRelease.java
Patch:
@@ -25,6 +25,7 @@
 import rx.Completable;
 import rx.Observable;
 
+import static com.fastaccess.data.dao.model.Release.CREATED_AT;
 import static com.fastaccess.data.dao.model.Release.ID;
 import static com.fastaccess.data.dao.model.Release.LOGIN;
 import static com.fastaccess.data.dao.model.Release.REPO_ID;
@@ -109,6 +110,7 @@ public static Observable<List<Release>> get(@NonNull String repoId, @NonNull Str
                 .select(Release.class)
                 .where(REPO_ID.eq(repoId)
                         .and(LOGIN.eq(login)))
+                .orderBy(CREATED_AT.desc())
                 .get()
                 .toObservable()
                 .toList();

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -41,7 +41,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
 
     @Override public void bind(@NonNull Event eventsModel) {
         if (eventsModel.getActor() != null) {
-            avatar.setUrl(eventsModel.getActor().getAvatarUrl(), eventsModel.getActor().getLogin());
+            avatar.setUrl(eventsModel.getActor().getAvatarUrl(), eventsModel.getActor().getLogin(), eventsModel.getActor().isOrganizationType());
         } else {
             avatar.setUrl(null, null);
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -67,9 +67,10 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         }
         String avatar = repo.getOwner() != null ? repo.getOwner().getAvatarUrl() : null;
         String login = repo.getOwner() != null ? repo.getOwner().getLogin() : null;
+        boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
         if (avatarLayout != null) {
             avatarLayout.setVisibility(View.VISIBLE);
-            avatarLayout.setUrl(avatar, login);
+            avatarLayout.setUrl(avatar, login, isOrg);
         }
         NumberFormat numberFormat = NumberFormat.getNumberInstance();
         stars.setText(numberFormat.format(repo.getStargazersCount()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -76,9 +76,10 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
         if (withImage) {
             String avatar = repo.getOwner() != null ? repo.getOwner().getAvatarUrl() : null;
             String login = repo.getOwner() != null ? repo.getOwner().getLogin() : null;
+            boolean isOrg = repo.getOwner() != null && repo.getOwner().isOrganizationType();
             if (avatarLayout != null) {
                 avatarLayout.setVisibility(View.VISIBLE);
-                avatarLayout.setUrl(avatar, login);
+                avatarLayout.setUrl(avatar, login, isOrg);
             }
         }
         long repoSize = repo.getSize() > 0 ? (repo.getSize() * 1000) : repo.getSize();

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -108,6 +108,7 @@ public void setUrl(@Nullable String url, @Nullable String login, boolean isOrg)
             ImageLoader.getInstance().displayImage(url, avatar, this);
         } else {
             ImageLoader.getInstance().displayImage(null, avatar);
+            avatar.setImageResource(R.drawable.ic_github_dark);
         }
     }
 

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -53,4 +53,4 @@ public SingleEntityStore<Persistable> getDataStore() {
         }
         return dataStore;
     }
-}
+}
\ No newline at end of file

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -140,6 +140,4 @@ Observable<MilestoneModel> createMilestone(@Path("owner") String owner, @Path("r
     @NonNull @GET("repos/{owner}/{repo}/assignees")
     Observable<Pageable<User>> getAssignees(@Path("owner") String owner, @Path("repo") String repo);
 
-    @NonNull @GET("repos/{owner}/{repo}/commits?per_page=1")
-    Observable<Pageable<Commit>> getCommitCounts(@Path("owner") String owner, @Path("repo") String repo, @Query("ref") String ref);
 }

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -144,7 +144,8 @@ public static boolean isMarkAsReadEnabled() {
     }
 
     public static boolean isPopupAnimationEnabled() {
-        return PrefHelper.getBoolean(POPUP_ANIMATION);
+//        return PrefHelper.getBoolean(POPUP_ANIMATION);
+        return true;
     }
 
     @ThemeType public static int getThemeType(@NonNull Context context) {

File: app/src/main/java/com/fastaccess/ui/adapter/AssigneesAdapter.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.adapter;
 
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 
 import com.fastaccess.data.dao.model.User;
@@ -24,13 +25,13 @@ public interface OnSelectAssignee {
 
     private final OnSelectAssignee onSelectAssignee;
 
-    public AssigneesAdapter(@NonNull List<User> data, OnSelectAssignee onSelectAssignee) {
+    public AssigneesAdapter(@NonNull List<User> data, @Nullable OnSelectAssignee onSelectAssignee) {
         super(data);
         this.onSelectAssignee = onSelectAssignee;
     }
 
     @Override protected AssigneesViewHolder viewHolder(ViewGroup parent, int viewType) {
-        return AssigneesViewHolder.newInstance(parent, onSelectAssignee);
+        return AssigneesViewHolder.newInstance(parent, onSelectAssignee, this);
     }
 
     @Override protected void onBindView(AssigneesViewHolder holder, int position) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueTimelineViewHolder.java
Patch:
@@ -69,7 +69,7 @@ public static IssueTimelineViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
             if (event != null) {
                 spannableBuilder
                         .append(" ")
-                        .append(event.name());
+                        .append(event.name().replaceAll("_", " "));
                 if (event == IssueEventType.labeled || event == IssueEventType.unlabeled) {
                     LabelModel labelModel = issueEventModel.getLabel();
                     int color = Color.parseColor("#" + labelModel.getColor());
@@ -111,5 +111,4 @@ public static IssueTimelineViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
         itemView.setEnabled(!InputHelper.isEmpty(issueEventModel.getCommitUrl()));
     }
 
-
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/MilestonesViewHolder.java
Patch:
@@ -37,7 +37,7 @@ public static MilestonesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nu
         notificationTitle.setText(milestoneModel.getDescription());
         if (milestoneModel.getDueOn() != null) {
             date.setText(ParseDateFormat.getTimeAgo(milestoneModel.getDueOn()));
-        } else {
+        } else if (milestoneModel.getCreatedAt() != null) {
             date.setText(ParseDateFormat.getTimeAgo(milestoneModel.getCreatedAt()));
         }
     }

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -283,9 +283,8 @@ private void setupToolbarAndStatusBar(@Nullable Toolbar toolbar) {
                             }
                             navIcon.setOnLongClickListener(v -> {
                                 Intent intent = new Intent(this, MainView.class);
-                                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
                                 startActivity(intent);
-                                finishAffinity();
+                                finish();
                                 return true;
                             });
                         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.ui.base.mvp.BaseMvp;
+import com.fastaccess.ui.modules.filter.chooser.FilterAddChooserListener;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -32,7 +33,7 @@ public interface RepoPagerMvp {
     @Retention(RetentionPolicy.SOURCE) @interface RepoNavigationType {}
 
 
-    interface View extends BaseMvp.FAView {
+    interface View extends BaseMvp.FAView, FilterAddChooserListener {
 
         void onNavigationChanged(@RepoNavigationType int navType);
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -113,9 +113,10 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
         int number = getHeader().getNumber();
         Observable<List<TimelineModel>> observable = Observable.zip(RestProvider.getIssueService().getTimeline(login, repoID, number, page),
                 RestProvider.getIssueService().getIssueComments(login, repoID, number, page),
-                (issueEventPageable, commentPageable) -> {
+                RestProvider.getPullRequestSerice().getPullStatus(login, repoID, getHeader().getHead().getSha()),
+                (issueEventPageable, commentPageable, statuses) -> {
                     lastPage = issueEventPageable.getLast() > commentPageable.getLast() ? issueEventPageable.getLast() : commentPageable.getLast();
-                    return TimelineModel.construct(commentPageable.getItems(), issueEventPageable.getItems());
+                    return TimelineModel.construct(commentPageable.getItems(), issueEventPageable.getItems(), statuses);
                 });
         makeRestCall(observable, models -> {
             if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -238,7 +238,6 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
             return true;
         } else if (item.getItemId() == R.id.mainView) {
             Intent intent = new Intent(this, MainView.class);
-            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             startActivity(intent);
             finish();
         }

File: app/src/main/java/com/fastaccess/ui/base/BaseBottomSheetDialog.java
Patch:
@@ -128,10 +128,10 @@ protected void onHidden() {
         try {
             dismiss();
         } catch (IllegalStateException ignored) {} //FML FIXME
-    }//helper method to notify dialogs
+    }
 
-    protected void onDismissedByScrolling() {}//helper method to notify dialogs
+    protected void onDismissedByScrolling() {}
 
-    protected void onDialogIsShowing() {}//helper method to notify dialogs
+    protected void onDialogIsShowing() {}
 
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsListActivity.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
+import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.ui.base.BaseActivity;
@@ -72,6 +73,6 @@ public static void startActivity(@NonNull Context context, boolean myGists) {
     }
 
     @OnClick(R.id.fab) public void onViewClicked() {
-        startActivity(new Intent(this, CreateGistView.class));
+        ActivityHelper.startReveal(this, new Intent(this, CreateGistView.class), fab);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistView.java
Patch:
@@ -10,6 +10,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Gist;
+import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
@@ -92,7 +93,7 @@ public class CreateGistView extends BaseActivity<CreateGistMvp.View, CreateGistP
                     .put(BundleConstant.EXTRA, InputHelper.toString(savedText))
                     .put(BundleConstant.EXTRA_TYPE, BundleConstant.ExtraTYpe.FOR_RESULT_EXTRA)
                     .end());
-            startActivityForResult(intent, BundleConstant.REQUEST_CODE);
+            ActivityHelper.startReveal(this, intent, fileContent, BundleConstant.REQUEST_CODE);
             return true;
         }
         return false;

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -6,6 +6,7 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 import android.support.design.widget.AppBarLayout;
+import android.support.v4.app.DialogFragment;
 import android.support.v7.widget.Toolbar;
 import android.view.View;
 
@@ -89,7 +90,7 @@ public static MilestoneView newInstance(@NonNull String login, @NonNull String r
         toolbar.setOnMenuItemClickListener(item -> onAddMilestone());
         toolbar.inflateMenu(R.menu.add_menu);
         toolbar.setNavigationIcon(R.drawable.ic_clear);
-        toolbar.setNavigationOnClickListener(v -> getActivity().finish());
+        toolbar.setNavigationOnClickListener(v -> ((DialogFragment) getParentFragment()).dismiss());
         recycler.addDivider();
         adapter = new MilestonesAdapter(getPresenter().getMilestones());
         adapter.setListener(getPresenter());

File: app/src/main/java/com/fastaccess/ui/widgets/FontTextView.java
Patch:
@@ -77,14 +77,14 @@ public void tintDrawables(@ColorInt int color) {
         }
     }
 
-    public void setSmallLeftDrawable(@DrawableRes int drawableRes) {
+    public void setEventsIcon(@DrawableRes int drawableRes) {
         Drawable drawable = ContextCompat.getDrawable(getContext(), drawableRes);
         int width = drawable.getIntrinsicWidth();
         int height = drawable.getIntrinsicHeight();
         drawable.setBounds(0, 0, width / 2, height / 2);
         ScaleDrawable sd = new ScaleDrawable(drawable, Gravity.CENTER, 0.6f, 0.6f);
         sd.setLevel(8000);
-        ViewHelper.tintDrawable(drawable, ViewHelper.getSecondaryTextColor(getContext()));
+        ViewHelper.tintDrawable(drawable, ViewHelper.getTertiaryTextColor(getContext()));
         setCompoundDrawablesWithIntrinsicBounds(sd, null, null, null);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestView.java
Patch:
@@ -109,7 +109,6 @@ private void showReload() {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        stateLayout.setEmptyText(R.string.no_issues);
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
@@ -122,6 +121,7 @@ private void showReload() {
         if (savedInstanceState == null || (getPresenter().getPullRequests().isEmpty() && !getPresenter().isApiCalled())) {
             onRefresh();
         }
+        stateLayout.setEmptyText(getIssueState() == IssueState.open ? R.string.no_open_pull_requests : R.string.no_closed_pull_request);
     }
 
     @NonNull @Override public MyPullRequestsPresenter providePresenter() {

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -41,6 +41,7 @@
 import com.fastaccess.ui.modules.repos.issues.issue.details.timeline.IssueTimelineView;
 import com.fastaccess.ui.modules.repos.pull_requests.pull_request.RepoPullRequestView;
 import com.fastaccess.ui.modules.repos.pull_requests.pull_request.details.commits.PullRequestCommitsView;
+import com.fastaccess.ui.modules.repos.pull_requests.pull_request.details.files.PullRequestFilesView;
 import com.fastaccess.ui.modules.repos.pull_requests.pull_request.details.timeline.timeline.PullRequestTimelineView;
 import com.fastaccess.ui.modules.search.code.SearchCodeView;
 import com.fastaccess.ui.modules.search.issues.SearchIssuesView;
@@ -106,7 +107,8 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
         String repoId = pullRequest.getRepoId();
         int number = pullRequest.getNumber();
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.details), PullRequestTimelineView.newInstance(pullRequest)),
-                new FragmentPagerAdapterModel(context.getString(R.string.commits), PullRequestCommitsView.newInstance(repoId, login, number)))
+                new FragmentPagerAdapterModel(context.getString(R.string.commits), PullRequestCommitsView.newInstance(repoId, login, number)),
+                new FragmentPagerAdapterModel(context.getString(R.string.files), PullRequestFilesView.newInstance(repoId, login, number)))
                 .collect(Collectors.toList());
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsView.java
Patch:
@@ -58,7 +58,7 @@ public static GistCommentsView newInstance(@NonNull String gistId) {
         recycler.setEmptyView(stateLayout, refresh);
         if (gistId == null) return;
         stateLayout.setEmptyText(R.string.no_comments);
-        recycler.setItemViewCacheSize(10);
+        recycler.setItemViewCacheSize(30);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new CommentsAdapter(getPresenter().getComments(), this, false);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsView.java
Patch:
@@ -58,7 +58,7 @@ public static CommitCommentsView newInstance(@NonNull String login, @NonNull Str
         if (savedInstanceState == null) getPresenter().onFragmentCreated(getArguments());
         stateLayout.setEmptyText(R.string.no_comments);
         recycler.setEmptyView(stateLayout, refresh);
-        recycler.setItemViewCacheSize(10);
+        recycler.setItemViewCacheSize(30);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new CommentsAdapter(getPresenter().getComments(), this, true);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineView.java
Patch:
@@ -65,6 +65,7 @@ public static IssueTimelineView newInstance(@NonNull Issue issueModel) {
         stateLayout.setEmptyText(R.string.no_events);
         recycler.setEmptyView(stateLayout, refresh);
         refresh.setOnRefreshListener(this);
+        recycler.setItemViewCacheSize(30);
         stateLayout.setOnReloadListener(this);
         adapter = new IssuePullsTimelineAdapter(getPresenter().getEvents(), this, true, this);
         adapter.setListener(getPresenter());

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseViewHolder.java
Patch:
@@ -39,15 +39,15 @@ public BaseViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adap
         itemView.setOnLongClickListener(this);
     }
 
-    @SuppressWarnings("unchecked") @Override public void onClick(View v) {
+    @Override public void onClick(View v) {
         if (adapter != null && adapter.getListener() != null) {
             int position = getAdapterPosition();
             if (position != RecyclerView.NO_POSITION && position < adapter.getItemCount())
                 adapter.getListener().onItemClick(position, v, adapter.getItem(position));
         }
     }
 
-    @SuppressWarnings("unchecked") @Override public boolean onLongClick(View v) {
+    @Override public boolean onLongClick(View v) {
         if (adapter != null && adapter.getListener() != null) {
             int position = getAdapterPosition();
             if (position != RecyclerView.NO_POSITION && position < adapter.getItemCount())
@@ -57,4 +57,5 @@ public BaseViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adap
     }
 
     public abstract void bind(@NonNull T t);
+
 }

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -15,7 +15,6 @@
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -48,7 +47,6 @@ public static Intent start(@NonNull Context context, long id, @NonNull String ur
     }
 
     public static Intent start(@NonNull Context context, long id, @NonNull String url, boolean onlyRead) {
-        Logger.e(onlyRead);
         Intent intent = new Intent(context.getApplicationContext(), ReadNotificationService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.EXTRA_TYPE, OPEN_NOTIFICATIO)

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -25,6 +25,7 @@
 public class FeedsViewHolder extends BaseViewHolder<Event> {
 
     @BindView(R.id.avatarLayout) AvatarLayout avatar;
+    @BindView(R.id.description) FontTextView description;
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.date) FontTextView date;
     @BindString(R.string.to) String to;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/TimelineCommentsViewHolder.java
Patch:
@@ -237,4 +237,6 @@ private void onToggle(boolean expanded) {
         }
     }
 
+
+
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesView.java
Patch:
@@ -110,7 +110,7 @@ private void showReload() {
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.addDivider();
-        adapter = new IssuesAdapter(getPresenter().getIssues());
+        adapter = new IssuesAdapter(getPresenter().getIssues(), false, true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestView.java
Patch:
@@ -113,7 +113,7 @@ private void showReload() {
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
-        adapter = new PullRequestAdapter(getPresenter().getPullRequests());
+        adapter = new PullRequestAdapter(getPresenter().getPullRequests(), false, true);
         adapter.setListener(getPresenter());
         recycler.addDivider();
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerPresenter.java
Patch:
@@ -177,7 +177,7 @@ class PullRequestPagerPresenter extends BasePresenter<PullRequestPagerMvp.View>
     }
 
     @NonNull @Override public SpannableBuilder getMergeBy(@NonNull PullRequest pullRequest, @NonNull Context context) {
-        return PullRequest.getMergeBy(pullRequest, context);
+        return PullRequest.getMergeBy(pullRequest, context, false);
     }
 
     @Override public void onLoadLabels() {

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesView.java
Patch:
@@ -53,7 +53,7 @@ public static SearchIssuesView newInstance() {
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
-        adapter = new IssuesAdapter(getPresenter().getIssues());
+        adapter = new IssuesAdapter(getPresenter().getIssues(), false, true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addDivider();

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposView.java
Patch:
@@ -53,7 +53,7 @@ public static SearchReposView newInstance() {
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
-        adapter = new ReposAdapter(getPresenter().getRepos(), false, true);
+        adapter = new ReposAdapter(getPresenter().getRepos(), true, true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addKeyLineDivider();

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -51,8 +51,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         Intent intent = convert(context, data, showRepoBtn);
         if (intent != null) {
             if (context instanceof Service || context instanceof Application) {
-                Logger.e("instanceof");
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             }
             context.startActivity(intent);
         } else {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -189,7 +189,7 @@ private void showNotification(int id, android.app.Notification notification) {
 
     private PendingIntent getReadOnlyPendingIntent(long id, @NonNull String url) {
         Intent intent = ReadNotificationService.start(this, id, url, true);
-        return PendingIntent.getService(this, (int) id, intent,
+        return PendingIntent.getService(this, (int) (id / 2), intent,
                 PendingIntent.FLAG_UPDATE_CURRENT);
     }
 

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -15,6 +15,7 @@
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -47,6 +48,7 @@ public static Intent start(@NonNull Context context, long id, @NonNull String ur
     }
 
     public static Intent start(@NonNull Context context, long id, @NonNull String url, boolean onlyRead) {
+        Logger.e(onlyRead);
         Intent intent = new Intent(context.getApplicationContext(), ReadNotificationService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.EXTRA_TYPE, OPEN_NOTIFICATIO)
@@ -91,7 +93,7 @@ private void openNotification(long id, @Nullable String url, boolean readOnly) {
             if (!PrefGetter.isMarkAsReadEnabled() || readOnly) {
                 markSingleAsRead(id);
             }
-            if (!readOnly) SchemeParser.launchUri(this, Uri.parse(url), true);
+            if (!readOnly) SchemeParser.launchUri(getBaseContext(), Uri.parse(url), true);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -238,9 +238,9 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
             return true;
         } else if (item.getItemId() == R.id.mainView) {
             Intent intent = new Intent(this, MainView.class);
-            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             startActivity(intent);
-            finishAffinity();
+            finish();
         }
         return false;
     }
@@ -402,6 +402,7 @@ private void setupDrawer() {
                                 drawerView.postDelayed(() -> {
                                     if (drawer != null) {
                                         drawer.closeDrawer(GravityCompat.START);
+                                        drawer.removeDrawerListener(this);
                                     }
                                 }, 1000);
                             }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -37,7 +37,6 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
     @BindView(R.id.bottomNavigation) BottomNavigation bottomNavigation;
     @BindView(R.id.navigation) NavigationView navigationView;
     @BindView(R.id.drawerLayout) DrawerLayout drawerLayout;
-
     private long backPressTimer;
 
     @NonNull @Override public MainPresenter providePresenter() {

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -161,8 +161,7 @@ private void startActivity(@Nullable Uri url) {
         if (MarkDownProvider.isImage(url.toString())) {
             CodeViewerView.startActivity(getContext(), url.toString());
         } else {
-            String anchorLink = url.getEncodedFragment();
-            if (anchorLink != null && anchorLink.startsWith("#")) {
+            if (url.toString().startsWith("#")) {
                 return;
             }
             SchemeParser.launchUri(getContext(), url, true);

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationActivityView.java
Patch:
@@ -30,7 +30,7 @@ public class NotificationActivityView extends BaseActivity {
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -68,7 +68,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
         makeRestCall(RestProvider.getRepoService()
                         .getCommits(login, repoId, branch, page),
                 response -> {
-                    if (response != null) {
+                    if (response != null && response.getItems() != null) {
                         lastPage = response.getLast();
                         if (getCurrentPage() == 1) {
                             getCommits().clear();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerView.java
Patch:
@@ -128,7 +128,9 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
     }
 
     @Override public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.getItemId() == R.id.share) {
+        if (item.getItemId() == android.R.id.home) {
+            onNavToRepoClicked();
+        } else if (item.getItemId() == R.id.share) {
             if (getPresenter().getCommit() != null) ActivityHelper.shareUrl(this, getPresenter().getCommit().getHtmlUrl());
             return true;
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathPresenter.java
Patch:
@@ -62,7 +62,9 @@ class RepoFilePathPresenter extends BasePresenter<RepoFilePathMvp.View> implemen
                         .flatMap(branchesModelPageable -> RxHelper.safeObservable(RxHelper.getObserver(RestProvider.getRepoService()
                                 .getTags(login, repoId))))
                         .doOnNext(response -> {
-                            branches.addAll(response.getItems());
+                            if (response != null && response.getItems() != null) {
+                                branches.addAll(response.getItems());
+                            }
                             sendToView(view -> {
                                 view.setBranchesData(branches, true);
                                 view.hideProgress();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -12,7 +12,7 @@ public interface RepoIssuesPagerMvp {
     interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {
         void onAddIssue();
 
-        void setCurrentItem(int index);
+        void setCurrentItem(int index, boolean refresh);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}

File: app/src/main/java/com/fastaccess/ui/modules/user/UserPagerView.java
Patch:
@@ -56,7 +56,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String logi
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -81,7 +81,8 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
                 avatarLayout.setUrl(avatar, login);
             }
         }
-        size.setText(Formatter.formatFileSize(size.getContext(), repo.getSize()));
+        long repoSize = repo.getSize() > 0 ? (repo.getSize() * 1000) : repo.getSize();
+        size.setText(Formatter.formatFileSize(size.getContext(), repoSize));
         NumberFormat numberFormat = NumberFormat.getNumberInstance();
         stars.setText(numberFormat.format(repo.getStargazersCount()));
         forks.setText(numberFormat.format(repo.getForks()));

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerView.java
Patch:
@@ -248,11 +248,12 @@ void onClick(View view) {
         } else if (repoModel.getOrganization() != null) {
             avatarLayout.setUrl(repoModel.getOrganization().getAvatarUrl(), repoModel.getOrganization().getLogin());
         }
+        long repoSize = repoModel.getSize() > 0 ? (repoModel.getSize() * 1000) : repoModel.getSize();
         date.setText(SpannableBuilder.builder()
                 .append(ParseDateFormat.getTimeAgo(repoModel.getUpdatedAt()))
                 .append(" ,")
                 .append(" ")
-                .append(Formatter.formatFileSize(this, repoModel.getSize())));
+                .append(Formatter.formatFileSize(this, repoSize)));
         size.setVisibility(View.GONE);
         title.setText(repoModel.getFullName());
         TextViewCompat.setTextAppearance(title, R.style.TextAppearance_AppCompat_Medium);
@@ -443,6 +444,4 @@ private void showHideFab() {
             fab.hide();
         }
     }
-
-    @OnClick(R.id.pinLayout) public void onViewClicked() {}
 }

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -22,6 +22,7 @@
 import com.fastaccess.ui.modules.profile.org.OrgProfileOverviewView;
 import com.fastaccess.ui.modules.profile.org.feeds.OrgFeedsView;
 import com.fastaccess.ui.modules.profile.org.members.OrgMembersView;
+import com.fastaccess.ui.modules.profile.org.repos.OrgReposView;
 import com.fastaccess.ui.modules.profile.org.teams.OrgTeamView;
 import com.fastaccess.ui.modules.profile.org.teams.details.members.TeamMembersView;
 import com.fastaccess.ui.modules.profile.org.teams.details.repos.TeamReposView;
@@ -161,7 +162,7 @@ public static List<FragmentPagerAdapterModel> buildForOrg(@NonNull Context conte
         return Stream.of(
                 new FragmentPagerAdapterModel(context.getString(R.string.feeds), isMember ? OrgFeedsView.newInstance(login) : null),
                 new FragmentPagerAdapterModel(context.getString(R.string.overview), OrgProfileOverviewView.newInstance(login)),
-                new FragmentPagerAdapterModel(context.getString(R.string.repos), ProfileReposView.newInstance(login)),
+                new FragmentPagerAdapterModel(context.getString(R.string.repos), OrgReposView.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.people), OrgMembersView.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.teams), isMember ? OrgTeamView.newInstance(login) : null))
                 .filter(fragmentPagerAdapterModel -> fragmentPagerAdapterModel.getFragment() != null)

File: app/src/main/java/com/fastaccess/data/service/OrganizationService.java
Patch:
@@ -39,4 +39,7 @@ public interface OrganizationService {
     @GET("orgs/{username}/events")
     Observable<Pageable<Event>> getReceivedEvents(@NonNull @Path("username") String userName, @Query("page") int page);
 
+    @GET("orgs/{org}/repos")
+    Observable<Pageable<Repo>> getOrgRepos(@NonNull @Path("org") String org, @Query("page") int page);
+
 }

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -44,7 +44,7 @@ public class App extends MultiDexApplication {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 3);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 4);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
                 source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -19,6 +19,7 @@
 import com.fastaccess.ui.modules.profile.followers.ProfileFollowersView;
 import com.fastaccess.ui.modules.profile.following.ProfileFollowingView;
 import com.fastaccess.ui.modules.profile.gists.ProfileGistsView;
+import com.fastaccess.ui.modules.profile.org.OrgProfileOverviewView;
 import com.fastaccess.ui.modules.profile.org.members.OrgMembersView;
 import com.fastaccess.ui.modules.profile.org.teams.OrgTeamView;
 import com.fastaccess.ui.modules.profile.org.teams.details.members.TeamMembersView;
@@ -156,7 +157,7 @@ public static List<FragmentPagerAdapterModel> buildForMyPulls(@NonNull Context c
     }
 
     public static List<FragmentPagerAdapterModel> buildForOrg(@NonNull Context context, @NonNull String login, boolean isMember) {
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.overview), ProfileOverviewView.newInstance(login)),
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.overview), OrgProfileOverviewView.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.repos), ProfileReposView.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.people), OrgMembersView.newInstance(login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.teams), isMember ? OrgTeamView.newInstance(login) : null))

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractComment.java
Patch:
@@ -65,7 +65,7 @@ public Completable save(Comment modelEntity) {
     }
 
     public static Observable saveForGist(@NonNull List<Comment> models, @NonNull String gistId) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Comment.class)
@@ -83,7 +83,7 @@ public static Observable saveForGist(@NonNull List<Comment> models, @NonNull Str
 
     public static Observable saveForCommits(@NonNull List<Comment> models, @NonNull String repoId,
                                             @NonNull String login, @NonNull String commitId) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Comment.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractCommit.java
Patch:
@@ -66,7 +66,7 @@ public Completable save(Commit modelEntity) {
     }
 
     public static Observable save(@NonNull List<Commit> models, @NonNull String repoId, @NonNull String login) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Commit.class)
@@ -85,7 +85,7 @@ public static Observable save(@NonNull List<Commit> models, @NonNull String repo
     }
 
     public static Observable save(@NonNull List<Commit> models, @NonNull String repoId, @NonNull String login, long number) {
-        return RxHelper.getObserver(Observable.create(subscriber -> {
+        return RxHelper.safeObservable(Observable.create(subscriber -> {
             SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
             singleEntityStore.delete(Commit.class)
                     .where(REPO_ID.eq(repoId)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractGist.java
Patch:
@@ -80,7 +80,7 @@ public static Completable save(@NonNull List<Gist> gists) {
     }
 
     public static Observable save(@NonNull List<Gist> gists, @NonNull String ownerName) {
-        return RxHelper.getObserver(Observable.create(subscriber -> {
+        return RxHelper.safeObservable(Observable.create(subscriber -> {
             SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
             singleEntityStore.delete(Gist.class)
                     .where(Gist.OWNER_NAME.equal(ownerName))

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractIssue.java
Patch:
@@ -80,7 +80,7 @@ public Completable save(Issue entity) {
     }
 
     public static Observable save(@NonNull List<Issue> models, @NonNull String repoId, @NonNull String login) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Issue.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractIssueEvent.java
Patch:
@@ -75,7 +75,7 @@ public Completable save(IssueEvent entity) {
 
     public static Observable save(@NonNull List<IssueEvent> models, @NonNull String repoId,
                                   @NonNull String login, @NonNull String issueId) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(IssueEvent.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractNotification.java
Patch:
@@ -51,7 +51,7 @@ public Completable save(Notification notification) {
     }
 
     public static Observable<Object> save(@NonNull List<Notification> models) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> dataSource = App.getInstance().getDataStore();
                     dataSource.delete(Notification.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractPullRequest.java
Patch:
@@ -100,7 +100,7 @@ public Completable save(PullRequest entity) {
     }
 
     public static Observable save(@NonNull List<PullRequest> models, @NonNull String repoId, @NonNull String login) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(PullRequest.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRelease.java
Patch:
@@ -68,7 +68,7 @@ public Completable save(Release entity) {
     }
 
     public static Observable save(@NonNull List<Release> models, @NonNull String repoId, @NonNull String login) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Release.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRepo.java
Patch:
@@ -142,7 +142,7 @@ public static Repo getRepo(long id) {
     }
 
     public static Observable saveStarred(@NonNull List<Repo> models, @NonNull String starredUser) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Repo.class)
@@ -159,7 +159,7 @@ public static Observable saveStarred(@NonNull List<Repo> models, @NonNull String
     }
 
     public static Observable saveMyRepos(@NonNull List<Repo> models, @NonNull String reposOwner) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(Repo.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRepoFile.java
Patch:
@@ -51,7 +51,7 @@ public Completable save(RepoFile entity) {
     }
 
     public static Observable save(@NonNull List<RepoFile> models, @NonNull String login, @NonNull String repoId) {
-        return RxHelper.getObserver(
+        return RxHelper.safeObservable(
                 Observable.create(subscriber -> {
                     SingleEntityStore<Persistable> singleEntityStore = App.getInstance().getDataStore();
                     singleEntityStore.delete(RepoFile.class)

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -24,6 +24,8 @@ public static <T> Observable<T> getObserverComputation(@NonNull Observable<T> ob
     }
 
     public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
-        return getObserver(observable).onErrorReturn(throwable -> null);
+        return getObserver(observable)
+                .subscribeOn(Schedulers.io())
+                .onErrorReturn(throwable -> null);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/members/OrgMembersView.java
Patch:
@@ -49,7 +49,7 @@ public static OrgMembersView newInstance(@NonNull String username) {
         if (getArguments() == null) {
             throw new NullPointerException("Bundle is null, username is required");
         }
-        stateLayout.setEmptyText(R.string.no_followers);
+        stateLayout.setEmptyText(R.string.no_members);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamView.java
Patch:
@@ -49,7 +49,7 @@ public static OrgTeamView newInstance(@NonNull String username) {
         if (getArguments() == null) {
             throw new NullPointerException("Bundle is null, username is required");
         }
-        stateLayout.setEmptyText(R.string.no_followers);
+        stateLayout.setEmptyText(R.string.no_teams);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/details/members/TeamMembersView.java
Patch:
@@ -49,7 +49,7 @@ public static TeamMembersView newInstance(@NonNull Long id) {
         if (getArguments() == null) {
             throw new NullPointerException("Bundle is null, username is required");
         }
-        stateLayout.setEmptyText(R.string.no_followers);
+        stateLayout.setEmptyText(R.string.no_members);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -166,7 +166,7 @@ public static List<FragmentPagerAdapterModel> buildForOrg(@NonNull Context conte
 
     public static List<FragmentPagerAdapterModel> buildForTeam(@NonNull Context context, long id) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.members), TeamMembersView.newInstance(id)),
-                new FragmentPagerAdapterModel(context.getString(R.string.members), TeamReposView.newInstance(id)))
+                new FragmentPagerAdapterModel(context.getString(R.string.repos), TeamReposView.newInstance(id)))
                 .collect(Collectors.toList());
     }
 }

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -51,7 +51,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         Intent intent = convert(context, data, showRepoBtn);
         if (intent != null) {
             if (context instanceof Service || context instanceof Application) {
-                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             }
             context.startActivity(intent);
         } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/LabelColorsViewHolder.java
Patch:
@@ -33,7 +33,7 @@ public static LabelColorsViewHolder newInstance(ViewGroup parent, BaseRecyclerAd
     @Override public void bind(@NonNull String labelModel) {
         int labelColor = Color.parseColor(labelModel);
         itemView.setBackgroundColor(labelColor);
-        color.setTextColor(ViewHelper.generateTextColor(labelColor));
+        color.setTextColor(ViewHelper.generateTextColor(Color.WHITE, labelColor));
         color.setText(labelModel);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/LabelsViewHolder.java
Patch:
@@ -45,7 +45,7 @@ public static LabelsViewHolder newInstance(@NonNull ViewGroup parent, @NonNull L
         colorImage.setBackgroundColor(color);
         name.setText(labelModel.getName());
         if (onSelectLabel.isLabelSelected(getAdapterPosition())) {
-            name.setTextColor(ViewHelper.generateTextColor(color));
+            name.setTextColor(ViewHelper.generateTextColor(Color.WHITE, color));
         } else {
             name.setTextColor(ViewHelper.getPrimaryTextColor(itemView.getContext()));
         }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistView.java
Patch:
@@ -101,7 +101,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/profile/org/teams/OrgTeamPresenter.java
Patch:
@@ -7,6 +7,7 @@
 import com.fastaccess.data.dao.TeamsModel;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
+import com.fastaccess.ui.modules.profile.org.teams.details.TeamPagerView;
 
 import java.util.ArrayList;
 
@@ -79,7 +80,7 @@ class OrgTeamPresenter extends BasePresenter<OrgTeamMvp.View> implements OrgTeam
     }
 
     @Override public void onItemClick(int position, View v, TeamsModel item) {
-        //TODO
+        TeamPagerView.startActivity(v.getContext(), item.getId(), item.getName());
     }
 
     @Override public void onItemLongClick(int position, View v, TeamsModel item) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerView.java
Patch:
@@ -169,7 +169,7 @@ void onClick(View view) {
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerView.java
Patch:
@@ -96,7 +96,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerView.java
Patch:
@@ -101,7 +101,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerView.java
Patch:
@@ -100,7 +100,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @Override protected boolean isTransparent() {
-        return false;
+        return true;
     }
 
     @Override protected boolean canBack() {

File: app/src/main/java/com/fastaccess/ui/widgets/RoundBackgroundSpan.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.widgets;
 
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Paint.FontMetricsInt;
 import android.graphics.RectF;
@@ -29,7 +30,7 @@ public int getSize(@NonNull Paint paint, CharSequence charSequence, int start, i
         final float width = paint.measureText(charSequence.subSequence(start, end).toString());
         RectF rectF = new RectF(x, top + 10, x + width + 2 * 10, bottom + 5);
         canvas.drawRoundRect(rectF, this.radius, this.radius, this.paint);
-        paint.setColor(ViewHelper.generateTextColor(this.paint.getColor()));
+        paint.setColor(ViewHelper.generateTextColor(Color.WHITE, this.paint.getColor()));
         canvas.drawText(charSequence, start, end, x + 10, y + 5, paint);
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractComment.java
Patch:
@@ -192,6 +192,7 @@ public static Observable<List<Comment>> getPullRequestComments(@NonNull String r
                 .toList();
     }
 
+
     @Override public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;

File: app/src/main/java/com/fastaccess/provider/comments/CommentsHelper.java
Patch:
@@ -22,7 +22,7 @@ public class CommentsHelper {
     private static final int HEART = 0x2764;
 
     public static void handleReactions(@NonNull Context context, @NonNull String login, @NonNull String repoId,
-                                       @IdRes int id, long commentId, boolean isCommit) {
+                                       @IdRes int id, long commentId, boolean commit, boolean isDelete) {
         ReactionTypes type = null;
         switch (id) {
             case R.id.heart:
@@ -45,7 +45,7 @@ public static void handleReactions(@NonNull Context context, @NonNull String log
                 break;
         }
         if (type != null) {
-            ReactionService.start(context, login, repoId, commentId, type, isCommit);
+            ReactionService.start(context, login, repoId, commentId, type, commit, isDelete);
         }
     }
 

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -40,7 +40,7 @@ public class SchemeParser {
     private static final String PROTOCOL_HTTPS = "https";
 
     static final ArrayList<String> IGNORED_LIST = Stream.of("notifications", "settings", "blog", "explore",
-            "dashboard", "repositories", "site", "security", "contact", "about", "orgs", "")
+            "dashboard", "repositories", "site", "security", "contact", "about", "")
             .collect(Collectors.toCollection(ArrayList::new));
 
     public static void launchUri(@NonNull Context context, @NonNull Uri data) {
@@ -233,6 +233,8 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data, boolea
         List<String> segments = uri.getPathSegments();
         if (segments != null && !segments.isEmpty() && segments.size() == 1) {
             return UserPagerView.createIntent(context, segments.get(0));
+        } else if (segments != null && !segments.isEmpty() && segments.size() > 1 && segments.get(0).equalsIgnoreCase("orgs")) {
+            return UserPagerView.createIntent(context, segments.get(1), true);
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/provider/tasks/git/ReactionService.java
Patch:
@@ -28,12 +28,13 @@ public class ReactionService extends IntentService {
     private NotificationManager notificationManager;
 
     public static void start(@NonNull Context context, @NonNull String login, @NonNull String repo,
-                             long commentId, ReactionTypes reactionType, boolean isCommit) {
+                             long commentId, ReactionTypes reactionType, boolean isCommit, boolean isDelete) {
         Intent intent = new Intent(context, ReactionService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.EXTRA, isCommit)
                 .put(BundleConstant.EXTRA_TWO, login)
                 .put(BundleConstant.EXTRA_THREE, repo)
+                .put(BundleConstant.EXTRA_FOUR, isDelete)
                 .put(BundleConstant.ID, commentId)
                 .put(BundleConstant.EXTRA_TYPE, reactionType)
                 .end());

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -159,7 +159,7 @@ private void onNotifyUser(@NonNull List<Notification> notificationThreadModels)
 
     private NotificationCompat.Builder getNotification(@NonNull String title, @NonNull String message) {
         return new NotificationCompat.Builder(this)
-                .setSmallIcon(R.drawable.ic_announcement)
+                .setSmallIcon(R.drawable.ic_notification)
                 .setContentTitle(title)
                 .setContentText(message);
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -42,7 +42,7 @@ public static AssigneesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Non
     }
 
     @Override public void bind(@NonNull User user) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin());
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType());
         title.setText(user.getLogin());
         date.setVisibility(View.GONE);
         itemView.setBackgroundColor(onSelectAssignee.isAssigneeSelected(getAdapterPosition()) ? lightGray : ViewHelper.getWindowBackground(itemView

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -125,7 +125,7 @@ public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Null
 
     @Override public void bind(@NonNull Comment commentsModel) {
         if (commentsModel.getUser() != null) {
-            avatar.setUrl(commentsModel.getUser().getAvatarUrl(), commentsModel.getUser().getLogin());
+            avatar.setUrl(commentsModel.getUser().getAvatarUrl(), commentsModel.getUser().getLogin(), commentsModel.getUser().isOrganizationType());
             delete.setVisibility(TextUtils.equals(commentsModel.getUser().getLogin(), login) ? View.VISIBLE : View.GONE);
             edit.setVisibility(TextUtils.equals(commentsModel.getUser().getLogin(), login) ? View.VISIBLE : View.GONE);
         } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/UsersViewHolder.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
@@ -39,7 +40,8 @@ public static View getView(@NonNull ViewGroup viewGroup) {
     @Override public void bind(@NonNull User user) {}
 
     public void bind(@NonNull User user, boolean isContributor) {
-        avatar.setUrl(user.getAvatarUrl(), user.getLogin());
+        Logger.e(user.isOrganizationType(), user.getType());
+        avatar.setUrl(user.getAvatarUrl(), user.getLogin(), user.isOrganizationType());
         title.setText(user.getLogin());
         date.setVisibility(!isContributor ? View.GONE : View.VISIBLE);
         if (isContributor) {

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -66,7 +66,7 @@ class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Pr
                 .appendPath("authorize")
                 .appendQueryParameter("client_id", BuildConfig.GITHUB_CLIENT_ID)
                 .appendQueryParameter("redirect_uri", BuildConfig.REDIRECT_URL)
-                .appendQueryParameter("scope", "user,repo,gist,notifications")
+                .appendQueryParameter("scope", "user,repo,gist,notifications,read:org")
                 .appendQueryParameter("state", BuildConfig.APPLICATION_ID)
                 .build();
     }
@@ -107,7 +107,7 @@ class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Pr
         if (!usernameIsEmpty && !passwordIsEmpty) {
             String authToken = Credentials.basic(username, password);
             AuthModel authModel = new AuthModel();
-            authModel.setScopes(Arrays.asList("user", "repo", "gist", "notifications"));
+            authModel.setScopes(Arrays.asList("user", "repo", "gist", "notifications", "read:org"));
             authModel.setNote(BuildConfig.APPLICATION_ID);
             authModel.setClientSecret(BuildConfig.GITHUB_SECRET);
             authModel.setClientId(BuildConfig.GITHUB_CLIENT_ID);

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewView.java
Patch:
@@ -43,12 +43,11 @@ public class ProfileOverviewView extends BaseFragment<ProfileOverviewMvp.View, P
     @BindView(R.id.followers) FontTextView followers;
     @BindView(R.id.progress) View progress;
     @BindView(R.id.followBtn) Button followBtn;
-
     @State User userModel;
 
     private ProfilePagerMvp.View profileCallback;
 
-    public static ProfileOverviewView newInstance(String login) {
+    public static ProfileOverviewView newInstance(@NonNull String login) {
         ProfileOverviewView view = new ProfileOverviewView();
         view.setArguments(Bundler.start().put(BundleConstant.EXTRA, login).end());
         return view;

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerView.java
Patch:
@@ -301,6 +301,9 @@ void onClick(View view) {
                         }
                     }).show();
         }
+        onRepoWatched(getPresenter().isWatched());
+        onRepoStarred(getPresenter().isStarred());
+        onRepoForked(getPresenter().isForked());
     }
 
     @Override public void onRepoWatched(boolean isWatched) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -137,7 +137,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
                     getView().onEditComment(item);
                 }
             } else {
-                CommentsHelper.handleReactions(v.getContext(), login, repoId, v.getId(), item.getId(), true);
+                CommentsHelper.handleReactions(v.getContext(), login, repoId, v.getId(), item.getId(), false, false);
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -4,10 +4,11 @@
 import android.support.annotation.Nullable;
 import android.view.View;
 
+import com.annimon.stream.Collectors;
 import com.annimon.stream.Stream;
 import com.fastaccess.R;
-import com.fastaccess.data.dao.model.RepoFile;
 import com.fastaccess.data.dao.RepoPathsManager;
+import com.fastaccess.data.dao.model.RepoFile;
 import com.fastaccess.data.dao.types.FilesType;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
@@ -66,7 +67,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
                     files.clear();
                     ArrayList<RepoFile> repoFilesModels = Stream.of(response.getItems())
                             .sortBy(model -> model.getType() == FilesType.file)
-                            .collect(com.annimon.stream.Collectors.toCollection(ArrayList::new));
+                            .collect(Collectors.toCollection(ArrayList::new));
                     manageSubscription(RepoFile.save(repoFilesModels, login, repoId).subscribe());
                     pathsModel.setFiles(ref, path, repoFilesModels);
                     files.addAll(repoFilesModels);

File: app/src/main/java/com/fastaccess/data/dao/types/IssueEventType.java
Patch:
@@ -24,6 +24,8 @@ public enum IssueEventType {
     unlabeled(R.drawable.ic_label),
     unlocked(R.drawable.ic_unlock),
     unsubscribed(R.drawable.ic_announcement),
+    review_requested(R.drawable.ic_eye),
+    review_request_removed(R.drawable.ic_eye_off),
     @SerializedName("cross-referenced")crossReferenced(R.drawable.ic_format_quote);
 
     int iconResId;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PinnedReposViewHolder.java
Patch:
@@ -54,12 +54,12 @@ public static PinnedReposViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
         if (repo == null) return;
         if (repo.isFork()) {
             title.setText(SpannableBuilder.builder()
-                    .append(" " + forked + " ", new RoundBackgroundSpan(forkColor, 5))
+                    .append(" " + forked + " ", new RoundBackgroundSpan(forkColor))
                     .append(" ")
                     .append(repo.getName()));
         } else if (repo.isPrivateX()) {
             title.setText(SpannableBuilder.builder()
-                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(privateColor, 5))
+                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(privateColor))
                     .append(" ")
                     .append(repo.getName()));
         } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -60,12 +60,12 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
     @Override public void bind(@NonNull Repo repo) {
         if (repo.isFork() && !isStarred) {
             title.setText(SpannableBuilder.builder()
-                    .append(" " + forked + " ", new RoundBackgroundSpan(forkColor, 5))
+                    .append(" " + forked + " ", new RoundBackgroundSpan(forkColor))
                     .append(" ")
                     .append(repo.getName()));
         } else if (repo.isPrivateX()) {
             title.setText(SpannableBuilder.builder()
-                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(privateColor, 5))
+                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(privateColor))
                     .append(" ")
                     .append(repo.getName()));
         } else {

File: app/src/main/java/com/fastaccess/data/dao/TimelineModel.java
Patch:
@@ -91,7 +91,7 @@ private TimelineModel(IssueEvent event) {
             } else if (o1.getComment() != null && o2.getEvent() != null) {
                 return o1.getComment().getCreatedAt().compareTo(o2.getEvent().getCreatedAt());
             } else {
-                return Integer.valueOf(o1.type).compareTo(o2.getType());
+                return Integer.valueOf(o1.getType()).compareTo(o2.getType());
             }
         }).collect(Collectors.toList());
     }

File: app/src/main/java/com/fastaccess/data/dao/converters/BaseConverter.java
Patch:
@@ -1,6 +1,5 @@
 package com.fastaccess.data.dao.converters;
 
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RestProvider;
 
 import io.requery.Converter;
@@ -30,7 +29,6 @@ public abstract class BaseConverter<C> implements Converter<C, String> {
     }
 
     @Override public C convertToMapped(Class<? extends C> type, String value) {
-        Logger.e(type.getSimpleName(), value);
         return RestProvider.gson.fromJson(value, type);
     }
 }

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -113,6 +113,9 @@ Observable<Pageable<RepoFile>> getRepoFiles(@NonNull @Path("owner") String owner
     @NonNull @GET("repos/{owner}/{repo}/labels")
     Observable<Pageable<LabelModel>> getLabels(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo);
 
+    @NonNull @POST("repos/{owner}/{repo}/labels")
+    Observable<LabelModel> addLabel(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo, @Body LabelModel body);
+
     @NonNull @GET("repos/{owner}/{repo}/collaborators/{username}")
     Observable<Response<Boolean>> isCollaborator(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo,
                                                  @NonNull @Path("username") String username);

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -39,7 +39,7 @@ public class SchemeParser {
     private static final String API_AUTHORITY = "api.github.com";
     private static final String PROTOCOL_HTTPS = "https";
 
-    static final ArrayList<String> IGNORED_LIST = Stream.of("notifications", "/settings", "blog", "explore",
+    static final ArrayList<String> IGNORED_LIST = Stream.of("notifications", "settings", "blog", "explore",
             "dashboard", "repositories", "site", "security", "contact", "about", "orgs", "")
             .collect(Collectors.toCollection(ArrayList::new));
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsMvp.java
Patch:
@@ -18,7 +18,9 @@ interface SelectedLabelsListener {
         void onSelectedLabels(@NonNull ArrayList<LabelModel> labels);
     }
 
-    interface View extends BaseMvp.FAView, LabelsAdapter.OnSelectLabel {}
+    interface View extends BaseMvp.FAView, LabelsAdapter.OnSelectLabel {
+        void onLabelAdded(@NonNull LabelModel labelModel);
+    }
 
     interface Presenter {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/create/CreateMilestoneView.java
Patch:
@@ -35,7 +35,7 @@ public class CreateMilestoneView extends BaseDialogFragment<CreateMilestoneMvp.V
     @BindView(R.id.toolbar) Toolbar toolbar;
     @BindView(R.id.title) TextInputLayout title;
     @BindView(R.id.dueOnEditText) TextInputEditText dueOnEditText;
-    @BindView(R.id.description) TextInputEditText description;
+    @BindView(R.id.description) TextInputLayout description;
 
     private CreateMilestoneMvp.OnMilestoneAdded onMilestoneAdded;
 
@@ -70,7 +70,6 @@ public static CreateMilestoneView newInstance(@NonNull String login, @NonNull St
         String login = getArguments().getString(BundleConstant.EXTRA);
         String repo = getArguments().getString(BundleConstant.ID);
         if (login == null || repo == null) {
-            dismiss();
             return;
         }
         toolbar.setTitle(R.string.create_milestone);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerMvp.java
Patch:
@@ -20,7 +20,7 @@
  * Created by Kosh on 10 Dec 2016, 9:21 AM
  */
 
-interface IssuePagerMvp {
+public interface IssuePagerMvp {
 
     interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
             AssigneesMvp.SelectedAssigneesListener {
@@ -37,6 +37,8 @@ interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
         void onUpdateMenu();
 
         void onShowAssignees(@NonNull List<User> items);
+
+        void onMileStoneSelected(@NonNull MilestoneModel milestoneModel);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerMvp.java
Patch:
@@ -23,7 +23,7 @@
  * Created by Kosh on 10 Dec 2016, 9:21 AM
  */
 
-interface PullRequestPagerMvp {
+public interface PullRequestPagerMvp {
 
     interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
             AssigneesMvp.SelectedAssigneesListener, MergePullReqeustMvp.MergeCallback {
@@ -41,6 +41,8 @@ interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener,
         void onUpdateTimeline();
 
         void onShowAssignees(@NonNull List<User> items);
+
+        void onMileStoneSelected(@NonNull MilestoneModel milestoneModel);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -17,12 +17,10 @@
 
 public class PrefGetter {
 
-    public static final int AUTO = 0;
     public static final int LIGHT = 1;
     public static final int DARK = 2;
 
     @IntDef({
-            AUTO,
             LIGHT,
             DARK,
     })
@@ -145,7 +143,7 @@ public static boolean isMarkAsReadEnabled() {
         String appTheme = PrefHelper.getString("appTheme");
         if (!InputHelper.isEmpty(appTheme)) {
             if (appTheme.equalsIgnoreCase(resources.getString(R.string.auto_theme_mode))) {
-                return AUTO;
+                return LIGHT;
             } else if (appTheme.equalsIgnoreCase(resources.getString(R.string.dark_theme_mode))) {
                 return DARK;
             } else if (appTheme.equalsIgnoreCase(resources.getString(R.string.light_theme_mode))) {

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -73,7 +73,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
     }
 
     @Override public void onRequire2Fa() {
-        showMessage(R.string.error, R.string.two_factors_otp_error);
+        Toasty.warning(this, getString(R.string.two_factors_otp_error)).show();
         twoFactor.setVisibility(View.VISIBLE);
         hideProgress();
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -66,7 +66,6 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
     }
 
     @Override protected void onCreate(Bundle savedInstanceState) {
-        setTheme(R.style.AppTheme);
         super.onCreate(savedInstanceState);
         navigationView.getMenu().findItem(R.id.enableAds).setChecked(PrefGetter.isAdsEnabled());
         hideShowShadow(navType == MainMvp.FEEDS);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -10,7 +10,7 @@
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.RxHelper;
-import com.fastaccess.provider.comments.CommentsHandler;
+import com.fastaccess.provider.comments.CommentsHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -137,7 +137,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
                     getView().onEditComment(item);
                 }
             } else {
-                CommentsHandler.handleReactions(v.getContext(), login, repoId, v.getId(), item.getId(), true);
+                CommentsHelper.handleReactions(v.getContext(), login, repoId, v.getId(), item.getId(), true);
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelinePresenter.java
Patch:
@@ -13,7 +13,7 @@
 import com.fastaccess.data.dao.model.IssueEvent;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.helper.BundleConstant;
-import com.fastaccess.provider.comments.CommentsHandler;
+import com.fastaccess.provider.comments.CommentsHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -49,7 +49,7 @@ public class IssueTimelinePresenter extends BasePresenter<IssueTimelineMvp.View>
                     }
                 } else {
                     if (login() != null && repoId() != null) {
-                        CommentsHandler.handleReactions(v.getContext(), login(), repoId(), v.getId(), item.getComment().getId(), false);
+                        CommentsHelper.handleReactions(v.getContext(), login(), repoId(), v.getId(), item.getComment().getId(), false);
                     }
                 }
             }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineView.java
Patch:
@@ -9,8 +9,8 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.SparseBooleanArrayParcelable;
+import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.model.User;
@@ -194,8 +194,9 @@ public static IssueTimelineView newInstance(@NonNull Issue issueModel) {
     }
 
     @Override public void onToggle(int position, boolean isCollapsed) {
+        getSparseBooleanArray().clear();
         getSparseBooleanArray().put(position, isCollapsed);
-
+        adapter.notifyDataSetChanged();
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelinePresenter.java
Patch:
@@ -13,7 +13,7 @@
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.helper.BundleConstant;
-import com.fastaccess.provider.comments.CommentsHandler;
+import com.fastaccess.provider.comments.CommentsHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -49,7 +49,7 @@ public class PullRequestTimelinePresenter extends BasePresenter<PullRequestTimel
                     }
                 } else {
                     if (login() != null && repoId() != null) {
-                        CommentsHandler.handleReactions(v.getContext(), login(), repoId(), v.getId(), item.getComment().getId(), false);
+                        CommentsHelper.handleReactions(v.getContext(), login(), repoId(), v.getId(), item.getComment().getId(), false);
                     }
                 }
             }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineView.java
Patch:
@@ -117,8 +117,9 @@ public static PullRequestTimelineView newInstance(@NonNull PullRequest issueMode
     }
 
     @Override public void onToggle(int position, boolean isCollapsed) {
+        getSparseBooleanArray().clear();
         getSparseBooleanArray().put(position, isCollapsed);
-
+        adapter.notifyDataSetChanged();
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsListActivity.java
Patch:
@@ -25,10 +25,10 @@
  * Created by Kosh on 25 Mar 2017, 11:28 PM
  */
 
-public class PublicGistsActivity extends BaseActivity {
+public class GistsListActivity extends BaseActivity {
 
     public static void startActivity(@NonNull Context context, boolean myGists) {
-        Intent intent = new Intent(context, PublicGistsActivity.class);
+        Intent intent = new Intent(context, GistsListActivity.class);
         intent.putExtras(Bundler.start().put(BundleConstant.EXTRA, myGists).end());
         context.startActivity(intent);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -23,7 +23,7 @@
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.modules.feeds.FeedsView;
-import com.fastaccess.ui.modules.gists.PublicGistsActivity;
+import com.fastaccess.ui.modules.gists.GistsListActivity;
 import com.fastaccess.ui.modules.main.donation.DonationView;
 import com.fastaccess.ui.modules.notification.NotificationActivityView;
 import com.fastaccess.ui.modules.pinned.PinnedReposActivity;
@@ -157,7 +157,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
     }
 
     @Override public void onOpenGists(boolean myGists) {
-        PublicGistsActivity.startActivity(this, myGists);
+        GistsListActivity.startActivity(this, myGists);
     }
 
     @Override public void onOpenPinnedRepos() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -35,8 +35,6 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
     private Repo repo;
     private int navTyp;
 
-    RepoPagerPresenter() {}
-
     private void callApi(int navTyp) {
         if (InputHelper.isEmpty(login) || InputHelper.isEmpty(repoId)) return;
         makeRestCall(RestProvider.getRepoService().getRepo(login(), repoId()),
@@ -262,7 +260,7 @@ private void callApi(int navTyp) {
         if (id == R.id.issues && (getRepo() != null && !getRepo().isHasIssues())) {
             return;
         }
-        if (getView() != null && isViewAttached()) {
+        if (getView() != null && isViewAttached() && fromUser) {
             getView().onNavigationChanged(position);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/timeline/IssueTimelineMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.annotation.Nullable;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.CommentsLabelsModel;
+import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
@@ -37,10 +37,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onTagUser(@Nullable User user);
     }
 
-    interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<CommentsLabelsModel>,
+    interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,
             BaseMvp.PaginationListener {
 
-        @NonNull ArrayList<CommentsLabelsModel> getEvents();
+        @NonNull ArrayList<TimelineModel> getEvents();
 
         void onFragmentCreated(@Nullable Bundle bundle);
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/timeline/timeline/PullRequestTimelineMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.annotation.Nullable;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.CommentsLabelsModel;
+import com.fastaccess.data.dao.TimelineModel;
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
@@ -37,10 +37,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onTagUser(@Nullable User user);
     }
 
-    interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<CommentsLabelsModel>,
+    interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<TimelineModel>,
             BaseMvp.PaginationListener {
 
-        @NonNull ArrayList<CommentsLabelsModel> getEvents();
+        @NonNull ArrayList<TimelineModel> getEvents();
 
         void onFragmentCreated(@Nullable Bundle bundle);
 

File: app/src/main/java/com/fastaccess/helper/ViewHelper.java
Patch:
@@ -122,8 +122,8 @@ private static boolean isTablet(@NonNull Resources resources) {
         return (resources.getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;
     }
 
-    public static boolean isTablet(@NonNull Context context) {
-        return isTablet(context.getResources());
+    @SuppressWarnings("ConstantConditions") public static boolean isTablet(@NonNull Context context) {
+        return context != null && isTablet(context.getResources());
     }
 
     public static boolean isLandscape(@NonNull Resources resources) {

File: app/src/main/java/com/fastaccess/ui/base/BaseBottomSheetDialog.java
Patch:
@@ -125,7 +125,9 @@
     }
 
     protected void onHidden() {
-        dismiss();
+        try {
+            dismiss();
+        } catch (IllegalStateException ignored) {} //FML FIXME
     }//helper method to notify dialogs
 
     protected void onDismissedByScrolling() {}//helper method to notify dialogs

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -95,10 +95,11 @@ Observable<Comment> editIssueComment(@Path("owner") String owner, @Path("repo")
     @POST("repos/{owner}/{repo}/issues")
     Observable<Issue> createIssue(@Path("owner") String owner, @Path("repo") String repo, @NonNull @Body CreateIssueModel body);
 
-    @POST("repos/{owner}/{repo}/issues/{number}/labels")
+    @PUT("repos/{owner}/{repo}/issues/{number}/labels")
     Observable<Pageable<LabelModel>> putLabels(@Path("owner") String owner, @Path("repo") String repo,
                                                @Path("number") int number, @Body @NonNull List<String> labels);
 
+
     @POST("repos/{owner}/{repo}/issues/{number}/assignees")
     Observable<Issue> putAssignees(@Path("owner") String owner, @Path("repo") String repo,
                                    @Path("number") int number, @Body AssigneesRequestModel body);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerView.java
Patch:
@@ -24,7 +24,6 @@
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.ui.adapter.FragmentsPagerAdapter;
@@ -289,7 +288,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @Override public void onLabelsRetrieved(@NonNull List<LabelModel> items) {
         hideProgress();
-        LabelsView.newInstance(items)
+        LabelsView.newInstance(items, getPresenter().getIssue() != null ? getPresenter().getIssue().getLabels() : null)
                 .show(getSupportFragmentManager(), "LabelsView");
     }
 
@@ -319,7 +318,6 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
     }
 
     @Override public void onSelectedLabels(@NonNull ArrayList<LabelModel> labels) {
-        Logger.e(labels, labels.size());
         getPresenter().onPutLabels(labels);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerView.java
Patch:
@@ -275,7 +275,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @Override public void onLabelsRetrieved(@NonNull List<LabelModel> items) {
         hideProgress();
-        LabelsView.newInstance(items)
+        LabelsView.newInstance(items, getPresenter().getPullRequest() != null ? getPresenter().getPullRequest().getLabels() : null)
                 .show(getSupportFragmentManager(), "LabelsView");
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitFilesViewHolder.java
Patch:
@@ -49,6 +49,7 @@ public class CommitFilesViewHolder extends BaseViewHolder<CommitFileModel> {
     @Override public void onClick(View v) {
         int position = getAdapterPosition();
         onToggleView.onToggle(position, !onToggleView.isCollapsed(position));
+        onToggle(onToggleView.isCollapsed(position));
     }
 
     private void onToggle(boolean expanded) {
@@ -93,7 +94,6 @@ public static CommitFilesViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
                 .append(statusText)
                 .append("\n")
                 .bold(String.valueOf(commit.getStatus())));
-
         onToggle(onToggleView.isCollapsed(getAdapterPosition()));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsView.java
Patch:
@@ -61,7 +61,7 @@ public static GistCommentsView newInstance(@NonNull String gistId) {
         recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
-        adapter = new CommentsAdapter(getPresenter().getComments(), this);
+        adapter = new CommentsAdapter(getPresenter().getComments(), this, false);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
@@ -179,6 +179,7 @@ private void showReload() {
                 if (bundle != null) {
                     boolean isNew = bundle.getBoolean(BundleConstant.EXTRA);
                     Comment commentsModel = bundle.getParcelable(BundleConstant.ITEM);
+                    getSparseBooleanArray().clear();
                     if (isNew) {
                         getPresenter().getComments().add(commentsModel);
                         adapter.notifyDataSetChanged();
@@ -209,7 +210,6 @@ private void showReload() {
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         getSparseBooleanArray().put(position, isCollapsed);
-        adapter.notifyItemChanged(position);
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsView.java
Patch:
@@ -61,7 +61,7 @@ public static CommitCommentsView newInstance(@NonNull String login, @NonNull Str
         recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
-        adapter = new CommentsAdapter(getPresenter().getComments(), this);
+        adapter = new CommentsAdapter(getPresenter().getComments(), this, true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
@@ -171,6 +171,7 @@ public static CommitCommentsView newInstance(@NonNull String login, @NonNull Str
                 if (bundle != null) {
                     boolean isNew = bundle.getBoolean(BundleConstant.EXTRA);
                     Comment commentsModel = bundle.getParcelable(BundleConstant.ITEM);
+                    getSparseBooleanArray().clear();
                     if (isNew) {
                         getPresenter().getComments().add(commentsModel);
                         adapter.notifyDataSetChanged();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesView.java
Patch:
@@ -73,7 +73,6 @@ public static CommitFilesView newInstance(@NonNull String sha, @Nullable CommitF
             ActivityHelper.forceOpenInBrowser(getContext(), adapter.getItem(position).getBlobUrl());
         }
         getSparseBooleanArray().put(position, isCollapsed);
-        adapter.notifyItemChanged(position);
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsView.java
Patch:
@@ -65,7 +65,7 @@ public static IssueCommentsView newInstance(@NonNull String login, @NonNull Stri
         recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
-        adapter = new CommentsAdapter(getPresenter().getComments(), this);
+        adapter = new CommentsAdapter(getPresenter().getComments(), this, true);
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
@@ -173,6 +173,7 @@ public static IssueCommentsView newInstance(@NonNull String login, @NonNull Stri
                 if (bundle != null) {
                     boolean isNew = bundle.getBoolean(BundleConstant.EXTRA);
                     Comment commentsModel = bundle.getParcelable(BundleConstant.ITEM);
+                    getSparseBooleanArray().clear();
                     if (isNew) {
                         getPresenter().getComments().add(commentsModel);
                         adapter.notifyDataSetChanged();
@@ -219,7 +220,7 @@ public static IssueCommentsView newInstance(@NonNull String login, @NonNull Stri
 
     @Override public void onToggle(int position, boolean isCollapsed) {
         getSparseBooleanArray().put(position, isCollapsed);
-        adapter.notifyItemChanged(position);
+
     }
 
     @Override public boolean isCollapsed(int position) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -155,10 +155,10 @@ private void handleReactions(@IdRes int id, long commentId, @NonNull Context con
                 type = ReactionTypes.CONFUSED;
                 break;
             case R.id.thumbsDown:
-                type = ReactionTypes.PLUS_ONE;
+                type = ReactionTypes.MINUS_ONE;
                 break;
             case R.id.thumbsUp:
-                type = ReactionTypes.MINUS_ONE;
+                type = ReactionTypes.PLUS_ONE;
                 break;
             case R.id.laugh:
                 type = ReactionTypes.LAUGH;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsPresenter.java
Patch:
@@ -162,10 +162,10 @@ private void handleReactions(@IdRes int id, long commentId, @NonNull Context con
                 type = ReactionTypes.CONFUSED;
                 break;
             case R.id.thumbsDown:
-                type = ReactionTypes.PLUS_ONE;
+                type = ReactionTypes.MINUS_ONE;
                 break;
             case R.id.thumbsUp:
-                type = ReactionTypes.MINUS_ONE;
+                type = ReactionTypes.PLUS_ONE;
                 break;
             case R.id.laugh:
                 type = ReactionTypes.LAUGH;

File: app/src/main/java/com/fastaccess/helper/RxHelper.java
Patch:
@@ -23,7 +23,7 @@ public static <T> Observable<T> getObserverComputation(@NonNull Observable<T> ob
                 .observeOn(AndroidSchedulers.mainThread());
     }
 
-    public static <T> Observable<T> saveObserable(@NonNull Observable<T> observable) {
+    public static <T> Observable<T> safeObservable(@NonNull Observable<T> observable) {
         return getObserver(observable).onErrorReturn(throwable -> null);
     }
 }

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -91,7 +91,7 @@ public static void scheduleJob(@NonNull Context context, int duration, boolean c
 
     private void onSave(@Nullable List<Notification> notificationThreadModels) {
         if (notificationThreadModels != null) {
-            RxHelper.saveObserable(Notification.save(notificationThreadModels)).subscribe();
+            RxHelper.safeObservable(Notification.save(notificationThreadModels)).subscribe();
             onNotifyUser(notificationThreadModels);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsMvp.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
+import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -20,7 +21,7 @@
 interface GistCommentsMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
-            android.view.View.OnClickListener {
+            android.view.View.OnClickListener, OnToggleView {
 
         void onNotifyAdapter();
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -76,7 +76,6 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
         return comments;
     }
 
-
     @Override public void onHandleDeletion(@Nullable Bundle bundle) {
         if (bundle != null) {
             long commId = bundle.getLong(BundleConstant.EXTRA, 0);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsMvp.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
+import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -20,7 +21,7 @@
 interface CommitCommentsMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
-            android.view.View.OnClickListener {
+            android.view.View.OnClickListener, OnToggleView {
 
         void onNotifyAdapter();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/files/CommitFilesMvp.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.fastaccess.data.dao.CommitFileListModel;
 import com.fastaccess.data.dao.CommitFileModel;
-import com.fastaccess.ui.adapter.CommitFilesAdapter;
+import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -16,7 +16,7 @@
 
 interface CommitFilesMvp {
 
-    interface View extends BaseMvp.FAView, CommitFilesAdapter.OnTogglePatch {
+    interface View extends BaseMvp.FAView, OnToggleView {
 
         void onNotifyAdapter();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsMvp.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
+import com.fastaccess.ui.adapter.callback.OnToggleView;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
@@ -20,7 +21,7 @@
 interface IssueCommentsMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener,
-            android.view.View.OnClickListener {
+            android.view.View.OnClickListener, OnToggleView {
 
         void onNotifyAdapter();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/create/CreateMilestoneMvp.java
Patch:
@@ -23,7 +23,7 @@ interface View extends BaseMvp.FAView {
     }
 
     interface Presenter {
-        void onSubmit(@Nullable String title, @Nullable String dueOn,
+        void onSubmit(@Nullable String title, @Nullable String dueOn, @Nullable String description,
                       @NonNull String login, @NonNull String repo);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/create/CreateMilestoneView.java
Patch:
@@ -35,6 +35,7 @@ public class CreateMilestoneView extends BaseDialogFragment<CreateMilestoneMvp.V
     @BindView(R.id.toolbar) Toolbar toolbar;
     @BindView(R.id.title) TextInputLayout title;
     @BindView(R.id.dueOnEditText) TextInputEditText dueOnEditText;
+    @BindView(R.id.description) TextInputEditText description;
 
     private CreateMilestoneMvp.OnMilestoneAdded onMilestoneAdded;
 
@@ -77,7 +78,7 @@ public static CreateMilestoneView newInstance(@NonNull String login, @NonNull St
         toolbar.setNavigationOnClickListener(item -> dismiss());
         toolbar.inflateMenu(R.menu.add_menu);
         toolbar.setOnMenuItemClickListener(item -> {
-            getPresenter().onSubmit(InputHelper.toString(title), InputHelper.toString(dueOnEditText), login, repo);
+            getPresenter().onSubmit(InputHelper.toString(title), InputHelper.toString(dueOnEditText), InputHelper.toString(description), login, repo);
             return true;
         });
     }

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -133,7 +133,8 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
         String login = commitModel.getLogin();
         String repoId = commitModel.getRepoId();
         String sha = commitModel.getSha();
-        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.commits), CommitFilesView.newInstance(commitModel.getFiles()))
+        return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.commits), CommitFilesView.newInstance(commitModel.getSha(),
+                commitModel.getFiles()))
                 , new FragmentPagerAdapterModel(context.getString(R.string.comments), CommitCommentsView.newInstance(login, repoId, sha)))
                 .collect(Collectors.toList());
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/GistsViewHolder.java
Patch:
@@ -43,9 +43,9 @@ public static GistsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullabl
 
     @Override public void bind(@NonNull Gist item) {
         if (!isFromProfile) {
-            String url = item.getOwner() != null ? item.getOwner().getAvatarUrl() : item.getUser() != null ? item.getUser().getAvatarUrl() : null;
-            String login = item.getOwner() != null ? item.getOwner().getLogin() : item.getUser() != null ? item.getUser().getLogin() : null;
             if (avatar != null) {
+                String url = item.getOwner() != null ? item.getOwner().getAvatarUrl() : item.getUser() != null ? item.getUser().getAvatarUrl() : null;
+                String login = item.getOwner() != null ? item.getOwner().getLogin() : item.getUser() != null ? item.getUser().getLogin() : null;
                 avatar.setUrl(url, login);
             }
         }

File: app/src/main/java/com/fastaccess/ui/modules/changelog/ChangelogView.java
Patch:
@@ -1,6 +1,5 @@
 package com.fastaccess.ui.modules.changelog;
 
-import android.graphics.Color;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -47,7 +46,6 @@ public class ChangelogView extends BaseBottomSheetDialog {
 
     @Override public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
-        messageLayout.setBackgroundColor(Color.WHITE);
         if (savedInstanceState == null) {
             PrefGetter.setWhatsNewVersion();
         }

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorView.java
Patch:
@@ -138,7 +138,7 @@ public class EditorView extends BaseActivity<EditorMvp.View, EditorPresenter> im
         hideProgress();
         Intent intent = new Intent();
         intent.putExtras(Bundler.start()
-                .put(BundleConstant.ITEM, commentModel)
+//                .put(BundleConstant.ITEM, commentModel)
                 .put(BundleConstant.EXTRA, isNew)
                 .end());
         setResult(RESULT_OK, intent);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistView.java
Patch:
@@ -200,7 +200,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
         String login = gistsModel.getOwner() != null ? gistsModel.getOwner().getLogin() :
                        gistsModel.getUser() != null ? gistsModel.getUser().getLogin() : "";
         avatarLayout.setUrl(url, login);
-        title.setText(gistsModel.getDisplayTitle(false));
+        title.setText(gistsModel.getDisplayTitle(false, true));
         detailsIcon.setVisibility(InputHelper.isEmpty(gistsModel.getDescription()) || !ViewHelper.isEllipsed(title) ? View.GONE : View.VISIBLE);
         date.setText(ParseDateFormat.getTimeAgo(gistsModel.getCreatedAt()));
         size.setText(Formatter.formatFileSize(this, gistsModel.getSize()));

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesPresenter.java
Patch:
@@ -8,8 +8,6 @@
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.types.IssueState;
-import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RepoQueryProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -29,7 +27,6 @@ public class MyIssuesPresenter extends BasePresenter<MyIssuesMvp.View> implement
     private int lastPage = Integer.MAX_VALUE;
 
     @Override public void onItemClick(int position, View v, Issue item) {
-        Logger.e(Bundler.start().put("item", item).end().size());
         PullsIssuesParser parser = PullsIssuesParser.getForIssue(item.getHtmlUrl());
         if (parser != null) {
             v.getContext().startActivity(IssuePagerView.createIntent(v.getContext(), parser.getRepoId(),

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -9,8 +9,6 @@
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.data.dao.types.IssueState;
-import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RepoQueryProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -30,7 +28,6 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
     private int lastPage = Integer.MAX_VALUE;
 
     @Override public void onItemClick(int position, View v, PullRequest item) {
-        Logger.e(Bundler.start().put("item", item).end().size());
         PullsIssuesParser parser = PullsIssuesParser.getForPullRequest(item.getHtmlUrl());
         if (parser != null) {
             Intent intent = PullRequestPagerView.createIntent(v.getContext(), parser.getRepoId(), parser.getLogin(), parser.getNumber(), true);

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -66,6 +66,8 @@ interface View extends BaseMvp.FAView {
 
     interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSelectionListener {
 
+        void onActivityCreate(@NonNull String repoId, @NonNull String login, @RepoPagerMvp.RepoNavigationType int navTyp);
+
         @NonNull String repoId();
 
         @NonNull String login();

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/create/CreateIssueView.java
Patch:
@@ -62,7 +62,7 @@ public static void startForResult(@NonNull Activity activity, @NonNull String lo
             intent.putExtras(Bundler.start()
                     .put(BundleConstant.EXTRA, login)
                     .put(BundleConstant.ID, repoId)
-                    .put(BundleConstant.ITEM, issueModel)
+                    .put(BundleConstant.ITEM, issueModel)//TODO remove this pass only required data.
                     .end());
             activity.startActivityForResult(intent, BundleConstant.REQUEST_CODE);
         }
@@ -75,7 +75,7 @@ public static void startForResult(@NonNull Activity activity, @NonNull String lo
             intent.putExtras(Bundler.start()
                     .put(BundleConstant.EXTRA, login)
                     .put(BundleConstant.ID, repoId)
-                    .put(BundleConstant.ITEM, pullRequestModel)
+                    .put(BundleConstant.ITEM, pullRequestModel)//TODO remove this, pass only required data
                     .end());
             activity.startActivityForResult(intent, BundleConstant.REQUEST_CODE);
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -19,11 +19,13 @@
 interface RepoIssuesMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
-        void onNotifyAdapter(int totalCount);
+        void onNotifyAdapter();
 
         @NonNull OnLoadMore<IssueState> getLoadMore();
 
         void onAddIssue();
+
+        void onUpdateCount(int totalCount);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/events/IssueDetailsView.java
Patch:
@@ -32,7 +32,7 @@ public class IssueDetailsView extends BaseFragment<IssueDetailsMvp.View, IssueDe
 
     public static IssueDetailsView newInstance(@NonNull Issue issueModel) {
         IssueDetailsView view = new IssueDetailsView();
-        view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());
+        view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());//TODO fix this
         return view;
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestMvp.java
Patch:
@@ -19,9 +19,11 @@
 interface RepoPullRequestMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
-        void onNotifyAdapter(int totalCount);
+        void onNotifyAdapter();
 
         @NonNull OnLoadMore<IssueState> getLoadMore();
+
+        void onUpdateCount(int totalCount);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/events/PullRequestDetailsView.java
Patch:
@@ -33,7 +33,7 @@ public class PullRequestDetailsView extends BaseFragment<PullRequestDetailsMvp.V
 
     public static PullRequestDetailsView newInstance(@NonNull PullRequest issueModel) {
         PullRequestDetailsView view = new PullRequestDetailsView();
-        view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());
+        view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());//TODO fix this
         return view;
     }
 

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -162,9 +162,7 @@ private void startActivity(@Nullable Uri url) {
             CodeViewerView.startActivity(getContext(), url.toString());
         } else {
             String anchorLink = url.getEncodedFragment();
-            Logger.e(anchorLink);
-            if (anchorLink != null) {
-                loadUrl("javascript:scrollTo(\"" + anchorLink + "\")");
+            if (anchorLink != null && anchorLink.startsWith("#")) {
                 return;
             }
             SchemeParser.launchUri(getContext(), url, true);

File: app/src/main/java/com/fastaccess/ui/adapter/PullRequestAdapter.java
Patch:
@@ -29,10 +29,10 @@ public PullRequestAdapter(@NonNull List<PullRequest> data, boolean withAvatar) {
     }
 
     @Override protected PullRequestViewHolder viewHolder(ViewGroup parent, int viewType) {
-        return PullRequestViewHolder.newInstance(parent, this);
+        return PullRequestViewHolder.newInstance(parent, this, withAvatar);
     }
 
     @Override protected void onBindView(PullRequestViewHolder holder, int position) {
-        holder.bind(getItem(position), withAvatar);
+        holder.bind(getItem(position));
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -49,7 +49,7 @@ interface View extends BaseMvp.FAView {
 
         void onEnableAds();
 
-        void onOpenGists();
+        void onOpenGists(boolean myGists);
 
         void onOpenPinnedRepos();
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -17,7 +17,6 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.data.dao.model.Notification;
-import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.TypeFaceHelper;
@@ -157,8 +156,8 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
         navigationView.getMenu().findItem(R.id.enableAds).setChecked(isEnabled);
     }
 
-    @Override public void onOpenGists() {
-        PublicGistsActivity.startActivity(this);
+    @Override public void onOpenGists(boolean myGists) {
+        PublicGistsActivity.startActivity(this, myGists);
     }
 
     @Override public void onOpenPinnedRepos() {

File: app/src/main/java/com/fastaccess/ui/modules/main/donation/DonationView.java
Patch:
@@ -12,7 +12,6 @@
 import com.fastaccess.ui.widgets.recyclerview.DynamicRecyclerView;
 
 import java.util.Arrays;
-import java.util.UUID;
 
 import butterknife.BindView;
 import io.octo.bear.pago.Pago;
@@ -67,7 +66,7 @@ public class DonationView extends BaseDialogFragment<DonationMvp.View, DonationP
             default:
                 productKey = getString(R.string.donation_product_1);
         }
-        subscription = getPago().purchaseProduct(productKey, UUID.randomUUID().toString())
+        subscription = getPago().purchaseProduct(productKey, item)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(order -> {

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesPresenter.java
Patch:
@@ -33,7 +33,7 @@ public class MyIssuesPresenter extends BasePresenter<MyIssuesMvp.View> implement
         PullsIssuesParser parser = PullsIssuesParser.getForIssue(item.getHtmlUrl());
         if (parser != null) {
             v.getContext().startActivity(IssuePagerView.createIntent(v.getContext(), parser.getRepoId(),
-                    parser.getLogin(), parser.getNumber()));
+                    parser.getLogin(), parser.getNumber(), true));
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/issues/MyIssuesView.java
Patch:
@@ -109,7 +109,8 @@ private void showReload() {
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
-        adapter = new IssuesAdapter(getPresenter().getIssues(), true);
+        recycler.addDivider();
+        adapter = new IssuesAdapter(getPresenter().getIssues());
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestView.java
Patch:
@@ -113,8 +113,9 @@ private void showReload() {
         recycler.setEmptyView(stateLayout, refresh);
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
-        adapter = new PullRequestAdapter(getPresenter().getPullRequests(), true);
+        adapter = new PullRequestAdapter(getPresenter().getPullRequests());
         adapter.setListener(getPresenter());
+        recycler.addDivider();
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());

File: app/src/main/java/com/fastaccess/ui/modules/main/pullrequests/MyPullRequestsPresenter.java
Patch:
@@ -33,7 +33,7 @@ public class MyPullRequestsPresenter extends BasePresenter<MyPullRequestsMvp.Vie
         Logger.e(Bundler.start().put("item", item).end().size());
         PullsIssuesParser parser = PullsIssuesParser.getForPullRequest(item.getHtmlUrl());
         if (parser != null) {
-            Intent intent = PullRequestPagerView.createIntent(v.getContext(), parser.getRepoId(), parser.getLogin(), parser.getNumber());
+            Intent intent = PullRequestPagerView.createIntent(v.getContext(), parser.getRepoId(), parser.getLogin(), parser.getNumber(), true);
             v.getContext().startActivity(intent);
         }
     }

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -107,7 +107,7 @@ private void onNotifyUser(@NonNull List<Notification> notificationThreadModels)
         Bitmap largeIcon = BitmapFactory.decodeResource(context.getResources(),
                 R.mipmap.ic_launcher);
         int primaryColor = ViewHelper.getPrimaryColor(context);
-        android.app.Notification grouped = getNotification(getString(R.string.notifications), getString(R.string.no_unread_notifications))
+        android.app.Notification grouped = getNotification(getString(R.string.notifications), getString(R.string.unread_notification))
                 .setLargeIcon(largeIcon)
                 .setGroup(NOTIFICATION_GROUP_ID)
                 .setGroupSummary(true)

File: app/src/main/java/com/fastaccess/helper/BundleConstant.java
Patch:
@@ -22,6 +22,7 @@ public class BundleConstant {
     public static final String EXTRA_FOUR = "extra3_id";
     public static final String EXTRA_TYPE = "extra_type";
     public static final String YES_NO_EXTRA = "yes_no_extra";
+    public static final String NOTIFICATION_ID = "notification_id";
     public static final int REQUEST_CODE = 2016;
 
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -248,6 +248,5 @@ private void setupTheme() {
             mode = AppCompatDelegate.MODE_NIGHT_YES;
         }
         AppCompatDelegate.setDefaultNightMode(mode);
-        setTheme(R.style.AppTheme);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -67,12 +67,12 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
     }
 
     @Override protected void onCreate(Bundle savedInstanceState) {
+        setTheme(R.style.AppTheme);
         super.onCreate(savedInstanceState);
         navigationView.getMenu().findItem(R.id.enableAds).setChecked(PrefGetter.isAdsEnabled());
         hideShowShadow(navType == MainMvp.FEEDS);
         setToolbarIcon(R.drawable.ic_menu);
         onInit(savedInstanceState);
-        AppHelper.cancelNotification(this);
     }
 
     @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {
@@ -98,7 +98,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
             startActivity(new Intent(this, SearchView.class));
             return true;
         } else if (item.getItemId() == R.id.notifications) {
-            item.setIcon(R.drawable.ic_notifications_none);
+            ViewHelper.tintDrawable(item.setIcon(R.drawable.ic_notifications_none).getIcon(), ViewHelper.getIconColor(this));
             startActivity(new Intent(this, NotificationActivityView.class));
             return true;
         }

File: app/src/main/java/com/fastaccess/data/dao/types/IssueState.java
Patch:
@@ -6,7 +6,8 @@
 
 public enum IssueState {
     open(R.string.opened),
-    closed(R.string.closed);
+    closed(R.string.closed),
+    all(R.string.all);
 
     int status;
 

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -36,6 +36,9 @@ Observable<Pageable<Issue>> getRepositoryIssues(@Path("owner") String owner, @Pa
     @GET("search/issues") Observable<Pageable<Issue>> getIssuesWithCount(@NonNull @Query(value = "q", encoded = true) String query,
                                                                          @Query("page") int page);
 
+    @GET("user/issues")
+    Observable<Pageable<Issue>> getUserIssues(@Query("page") int page, @Query("state") @NonNull String state);
+
     @GET("repos/{owner}/{repo}/issues/{number}")
     @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<Issue> getIssue(@Path("owner") String owner, @Path("repo") String repo,

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -36,6 +36,9 @@ Observable<Pageable<PullRequest>> getPullRequests(@Path("owner") String owner, @
     Observable<Pageable<PullRequest>> getPullsWithCount(@NonNull @Query(value = "q", encoded = true) String query,
                                                         @Query("page") int page);
 
+    @GET("user/issues")
+    Observable<Pageable<PullRequest>> getUserPullRequests(@Query("page") int page, @Query("state") @NonNull String state);
+
     @GET("repos/{owner}/{repo}/pulls/{number}")
     @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<PullRequest> getPullRequest(@Path("owner") String owner, @Path("repo") String repo, @Path("number") long number);

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -81,8 +81,8 @@ public static void scheduleJob(@NonNull Context context, int duration, boolean c
 
     private void onSave(@Nullable List<Notification> notificationThreadModels) {
         if (notificationThreadModels != null) {
-            Notification.save(notificationThreadModels)
-                    .subscribe(o -> onNotifyUser(notificationThreadModels));
+            Notification.save(notificationThreadModels).subscribe();
+            onNotifyUser(notificationThreadModels);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReleasesViewHolder.java
Patch:
@@ -51,7 +51,5 @@ public static ReleasesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAd
                 .append(item.isDraft() ? drafted : released)
                 .append(" ")
                 .append(ParseDateFormat.getTimeAgo(item.getCreatedAt())));
-        avatarLayout.setUrl(item.getAuthor().getAvatarUrl(), item.getAuthor().getLogin());
-        avatarLayout.setVisibility(View.VISIBLE);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/main/donation/DonationView.java
Patch:
@@ -12,6 +12,7 @@
 import com.fastaccess.ui.widgets.recyclerview.DynamicRecyclerView;
 
 import java.util.Arrays;
+import java.util.UUID;
 
 import butterknife.BindView;
 import io.octo.bear.pago.Pago;
@@ -65,7 +66,7 @@ public class DonationView extends BaseDialogFragment<DonationMvp.View, DonationP
                 productKey = getString(R.string.donation_product_1);
         }
         getPresenter().manageSubscription(getPago()
-                .purchaseProduct(productKey, productKey)
+                .purchaseProduct(productKey, UUID.randomUUID().toString())
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(order -> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesView.java
Patch:
@@ -69,6 +69,7 @@ public static RepoReleasesView newInstance(@NonNull String repoId, @NonNull Stri
         stateLayout.setOnReloadListener(this);
         refresh.setOnRefreshListener(this);
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.addDivider();
         adapter = new ReleasesAdapter(getPresenter().getReleases());
         adapter.setListener(getPresenter());
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractGist.java
Patch:
@@ -3,7 +3,6 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 
 import com.annimon.stream.LongStream;
 import com.annimon.stream.Stream;
@@ -112,7 +111,7 @@ public static Observable save(@NonNull List<Gist> gists, @NonNull String ownerNa
                 .toList();
     }
 
-    @Nullable public static Observable<Gist> getGist(@NonNull String gistId) {
+    public static Observable<Gist> getGist(@NonNull String gistId) {
         return App.getInstance()
                 .getDataStore()
                 .select(Gist.class)

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRepo.java
Patch:
@@ -27,8 +27,8 @@
 import rx.Completable;
 import rx.Observable;
 
+import static com.fastaccess.data.dao.model.Repo.FULL_NAME;
 import static com.fastaccess.data.dao.model.Repo.ID;
-import static com.fastaccess.data.dao.model.Repo.NAME;
 import static com.fastaccess.data.dao.model.Repo.REPOS_OWNER;
 import static com.fastaccess.data.dao.model.Repo.STARRED_USER;
 import static com.fastaccess.data.dao.model.Repo.UPDATED_AT;
@@ -124,10 +124,10 @@ public Completable save(@NonNull Repo entity) {
                 .andThen(App.getInstance().getDataStore().insert(entity).toCompletable());
     }
 
-    public static Observable<Repo> getRepo(@NonNull String name) {
+    public static Observable<Repo> getRepo(@NonNull String name, @NonNull String login) {
         return App.getInstance().getDataStore()
                 .select(Repo.class)
-                .where(NAME.eq(name))
+                .where(FULL_NAME.eq(login + "/" + name))
                 .get()
                 .toObservable();
     }

File: app/src/main/java/com/fastaccess/helper/Bundler.java
Patch:
@@ -15,7 +15,7 @@
 
 public class Bundler {
 
-    private Bundle bundle;
+    private final Bundle bundle;
 
     private Bundler() {
         bundle = new Bundle();

File: app/src/main/java/com/fastaccess/helper/Logger.java
Patch:
@@ -69,7 +69,7 @@ private static String getCurrentMethodName() {
     private static String getCurrentClassName() {
         try {
             String className = Thread.currentThread().getStackTrace()[4].getClassName();
-            String[] temp = className.split("[\\.]");
+            String[] temp = className.split("[.]");
             className = temp[temp.length - 1];
             return className;
         } catch (Exception ignored) {}

File: app/src/main/java/com/fastaccess/ui/AssigneesAdapter.java
Patch:
@@ -22,7 +22,7 @@ public interface OnSelectAssignee {
         void onToggleSelection(int position, boolean select);
     }
 
-    private OnSelectAssignee onSelectAssignee;
+    private final OnSelectAssignee onSelectAssignee;
 
     public AssigneesAdapter(@NonNull List<User> data, OnSelectAssignee onSelectAssignee) {
         super(data);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -25,7 +25,7 @@ public class AssigneesViewHolder extends BaseViewHolder<User> {
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.date) FontTextView date;
     @BindColor(R.color.light_gray) int lightGray;
-    private AssigneesAdapter.OnSelectAssignee onSelectAssignee;
+    private final AssigneesAdapter.OnSelectAssignee onSelectAssignee;
 
     @Override public void onClick(View v) {
         int position = getAdapterPosition();

File: app/src/main/java/com/fastaccess/ui/base/BaseBottomSheetDialog.java
Patch:
@@ -29,7 +29,7 @@
 @SuppressWarnings("RestrictedApi") public abstract class BaseBottomSheetDialog extends BottomSheetDialogFragment {
 
     protected BottomSheetBehavior<View> bottomSheetBehavior;
-    private BottomSheetBehavior.BottomSheetCallback bottomSheetCallback = new BottomSheetBehavior.BottomSheetCallback() {
+    private final BottomSheetBehavior.BottomSheetCallback bottomSheetCallback = new BottomSheetBehavior.BottomSheetCallback() {
         @Override public void onStateChanged(@NonNull View bottomSheet, int newState) {
             if (newState == BottomSheetBehavior.STATE_HIDDEN) {
                 isAlreadyHidden = true;

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -27,7 +27,7 @@
 
 public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> implements BaseMvp.FAPresenter {
     private boolean apiCalled;
-    private RxTiPresenterSubscriptionHandler subscriptionHandler = new RxTiPresenterSubscriptionHandler(this);
+    private final RxTiPresenterSubscriptionHandler subscriptionHandler = new RxTiPresenterSubscriptionHandler(this);
 
     @Override public void manageSubscription(@Nullable Subscription... subscription) {
         if (subscription != null) {

File: app/src/main/java/com/fastaccess/ui/modules/about/FastHubAboutActivity.java
Patch:
@@ -74,7 +74,7 @@ public class FastHubAboutActivity extends MaterialAboutActivity {
                 .setOnClickListener(b -> ActivityHelper.startCustomTab(this, "https://twitter.com/kevttob"))
                 .build());
         logoAuthor.addItem(new MaterialAboutActionItem.Builder()
-                .text("221 Pixels")
+                .text(R.string.website)
                 .icon(ContextCompat.getDrawable(context, R.drawable.ic_brower))
                 .setOnClickListener(b -> ActivityHelper.startCustomTab(this, "https://www.221pixels.com/"))
                 .build());

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -12,8 +12,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 11 Nov 2016, 12:36 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistView.java
Patch:
@@ -16,7 +16,6 @@
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.ui.base.BaseActivity;
 import com.fastaccess.ui.modules.editor.EditorView;
-import com.fastaccess.ui.widgets.FontButton;
 
 import butterknife.BindView;
 import butterknife.OnClick;

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -91,6 +91,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
     }
 
     @Override protected void onCreate(Bundle savedInstanceState) {
+        setTheme(R.style.LoginTheme);
         super.onCreate(savedInstanceState);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/MainMvp.java
Patch:
@@ -48,6 +48,8 @@ interface View extends BaseMvp.FAView {
         void openFasHubRepo();
 
         void onOpenSettings();
+
+        void onSupportDevelopment();
     }
 
     interface Presenter extends BaseMvp.FAPresenter, NavigationView.OnNavigationItemSelectedListener,

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -92,6 +92,8 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
                 getView().openFasHubRepo();
             } else if (item.getItemId() == R.id.settings) {
                 getView().onOpenSettings();
+            } else if (item.getItemId() == R.id.supportDev) {
+                getView().onSupportDevelopment();
             }
         }
         return false;

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsMvp.java
Patch:
@@ -3,7 +3,6 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -11,8 +11,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 11 Nov 2016, 12:36 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -15,8 +15,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 03 Dec 2016, 3:48 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -14,8 +14,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 03 Dec 2016, 3:48 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -164,7 +164,7 @@ private void callApi(int navTyp) {
     @Override public void onWorkOffline() {
         if (!InputHelper.isEmpty(login()) && !InputHelper.isEmpty(repoId())) {
             Logger.e(login, repoId);
-            manageSubscription(RxHelper.getObserver(Repo.getRepo(repoId))
+            manageSubscription(RxHelper.getObserver(Repo.getRepo(repoId, login))
                     .subscribe(repoModel -> {
                         repo = repoModel;
                         if (repo != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -15,8 +15,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 15 Feb 2017, 10:10 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesPresenter.java
Patch:
@@ -15,8 +15,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 03 Dec 2016, 3:48 PM
  */

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposPresenter.java
Patch:
@@ -6,7 +6,6 @@
 
 import com.fastaccess.data.dao.NameParser;
 import com.fastaccess.data.dao.model.Repo;
-import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.repos.RepoPagerView;

File: app/src/main/java/com/fastaccess/ui/widgets/AppbarRefreshLayout.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.widgets;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.util.AttributeSet;
 
@@ -12,11 +13,11 @@
  */
 public class AppbarRefreshLayout extends SwipeRefreshLayout {
 
-    public AppbarRefreshLayout(Context context) {
+    public AppbarRefreshLayout(@NonNull Context context) {
         super(context, null);
     }
 
-    public AppbarRefreshLayout(Context context, AttributeSet attrs) {
+    public AppbarRefreshLayout(@NonNull Context context, AttributeSet attrs) {
         super(context, attrs);
         setColorSchemeResources(R.color.material_amber_700, R.color.material_blue_700, R.color.material_purple_700, R.color.material_lime_700);
     }

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -34,15 +34,15 @@
 public class AvatarLayout extends FrameLayout implements ImageLoadingListener {
 
     @BindView(R.id.avatar) ShapedImageView avatar;
-    private String login;
+    @Nullable private String login;
     private Toast toast;
 
-    @OnClick(R.id.avatar) void onClick(View view) {
+    @OnClick(R.id.avatar) void onClick(@NonNull View view) {
         if (InputHelper.isEmpty(login)) return;
         UserPagerView.startActivity(view.getContext(), login);
     }
 
-    @OnLongClick(R.id.avatar) boolean onLongClick(View view) {
+    @OnLongClick(R.id.avatar) boolean onLongClick(@NonNull View view) {
         if (InputHelper.isEmpty(login)) return false;
         if (toast != null) toast.cancel();
         toast = Toast.makeText(getContext(), view.getContentDescription(), Toast.LENGTH_SHORT);

File: app/src/main/java/com/fastaccess/ui/widgets/FloatingActionButtonBehavior.java
Patch:
@@ -42,7 +42,9 @@ public FloatingActionButtonBehavior(Context context, AttributeSet attrs) {
         return super.layoutDependsOn(parent, child, dependency);
     }
 
-    @Override public boolean onDependentViewChanged(final CoordinatorLayout parent, final FloatingActionButton child, final View dependency) {
+    @Override public boolean onDependentViewChanged(@NonNull
+                                                    final CoordinatorLayout parent, @NonNull
+                                                    final FloatingActionButton child, final View dependency) {
         log(TAG, INFO, "onDependentViewChanged: " + dependency);
         final List<View> list = parent.getDependencies(child);
         ViewGroup.MarginLayoutParams params = ((ViewGroup.MarginLayoutParams) child.getLayoutParams());

File: app/src/main/java/com/fastaccess/ui/widgets/RoundBackgroundSpan.java
Patch:
@@ -10,8 +10,7 @@
 import com.fastaccess.helper.ViewHelper;
 
 public class RoundBackgroundSpan extends ReplacementSpan {
-    private Paint paint = new Paint();
-    private Paint empty = new Paint();
+    @NonNull private Paint paint = new Paint();
     private float radius;
     private int width = -1;
 
@@ -27,7 +26,8 @@ public int getSize(@NonNull Paint paint, CharSequence charSequence, int i, int i
         return this.width;
     }
 
-    public void draw(@NonNull Canvas canvas, CharSequence charSequence, int i, int i2, float f, int i3, int i4, int i5, @NonNull Paint paint) {
+    public void draw(@NonNull Canvas canvas, @NonNull CharSequence charSequence, int i, int i2, float f, int i3, int i4, int i5, @NonNull Paint
+            paint) {
         canvas.drawRoundRect(new RectF(f, (float) i3, ((float) this.width) + f, (float) i5), this.radius, this.radius, this.paint);
         paint.setColor(ViewHelper.generateTextColor(this.paint.getColor()));
         canvas.drawText(charSequence, i, i2, f + (this.radius * 2.0f), (float) i4, paint);

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ListDialogView.java
Patch:
@@ -39,7 +39,7 @@ public interface onSimpleItemSelection<O extends Parcelable> {
         void onItemSelected(O item);
     }
 
-    private onSimpleItemSelection onSimpleItemSelection;
+    @Nullable private onSimpleItemSelection onSimpleItemSelection;
 
     @Override protected int fragmentLayout() {
         return R.layout.simple_list_dialog;

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/MessageDialogView.java
Patch:
@@ -51,7 +51,7 @@ public interface MessageDialogViewActionCallback {
         callback = null;
     }
 
-    @OnClick({R.id.cancel, R.id.ok}) public void onClick(View view) {
+    @OnClick({R.id.cancel, R.id.ok}) public void onClick(@NonNull View view) {
         if (callback != null) {
             isAlreadyHidden = true;
             callback.onMessageDialogActionClicked(view.getId() == R.id.ok, getArguments().getBundle("bundle"));

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/ProgressDialogFragment.java
Patch:
@@ -18,11 +18,11 @@ public class ProgressDialogFragment extends DialogFragment {
 
     public static final String TAG = ProgressDialogFragment.class.getSimpleName();
 
-    public static ProgressDialogFragment newInstance(@NonNull Resources resources, @StringRes int msgId, boolean isCancelable) {
+    @NonNull public static ProgressDialogFragment newInstance(@NonNull Resources resources, @StringRes int msgId, boolean isCancelable) {
         return newInstance(resources.getString(msgId), isCancelable);
     }
 
-    public static ProgressDialogFragment newInstance(@NonNull String msg, boolean isCancelable) {
+    @NonNull public static ProgressDialogFragment newInstance(@NonNull String msg, boolean isCancelable) {
         ProgressDialogFragment fragment = new ProgressDialogFragment();
         fragment.setArguments(Bundler.start()
                 .put("msg", msg)

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BottomPaddingDecoration.java
Patch:
@@ -13,7 +13,7 @@
 import com.fastaccess.helper.ViewHelper;
 
 class BottomPaddingDecoration extends RecyclerView.ItemDecoration {
-    private int bottomPadding;
+    private final int bottomPadding;
 
     private BottomPaddingDecoration(int bottomOffset) {
         bottomPadding = bottomOffset;
@@ -31,7 +31,7 @@ public static BottomPaddingDecoration with(@NonNull Context context) {
         return new BottomPaddingDecoration(context);
     }
 
-    @Override public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+    @Override public void getItemOffsets(@NonNull Rect outRect, View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         super.getItemOffsets(outRect, view, parent, state);
         int dataSize = state.getItemCount();
         int position = parent.getChildAdapterPosition(view);

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/DynamicRecyclerView.java
Patch:
@@ -40,15 +40,15 @@ public class DynamicRecyclerView extends RecyclerView {
         }
     };
 
-    public DynamicRecyclerView(Context context) {
+    public DynamicRecyclerView(@NonNull Context context) {
         this(context, null);
     }
 
-    public DynamicRecyclerView(Context context, AttributeSet attrs) {
+    public DynamicRecyclerView(@NonNull Context context, AttributeSet attrs) {
         this(context, attrs, 0);
     }
 
-    public DynamicRecyclerView(Context context, AttributeSet attrs, int defStyle) {
+    public DynamicRecyclerView(@NonNull Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
         if (isInEditMode()) return;
         addItemDecoration(BottomPaddingDecoration.with(context));

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/InsetDividerDecoration.java
Patch:
@@ -4,6 +4,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.support.annotation.ColorInt;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 import android.view.View;
 
@@ -14,7 +15,7 @@
  */
 class InsetDividerDecoration extends RecyclerView.ItemDecoration {
 
-    private final Paint paint;
+    @NonNull private final Paint paint;
     private final int inset;
     private final int height;
 
@@ -27,7 +28,7 @@ class InsetDividerDecoration extends RecyclerView.ItemDecoration {
         paint.setStrokeWidth(divider);
     }
 
-    @Override public void onDrawOver(Canvas canvas, RecyclerView parent, RecyclerView.State state) {
+    @Override public void onDrawOver(@NonNull Canvas canvas, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         int childCount = parent.getChildCount();
         if (childCount < 2) return;
         RecyclerView.LayoutManager lm = parent.getLayoutManager();

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/scroll/InfiniteScroll.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.ui.widgets.recyclerview.scroll;
 
+import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 
 /**
@@ -20,7 +21,7 @@
 
     public InfiniteScroll() {}
 
-    @Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
+    @Override public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {
         super.onScrollStateChanged(recyclerView, newState);
         mRecyclerViewHelper = RecyclerViewPositionHelper.createHelper(recyclerView);
         visibleItemCount = recyclerView.getChildCount();

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -65,6 +65,7 @@ public PrettifyWebView(Context context, AttributeSet attrs, int defStyleAttr) {
     @SuppressLint("SetJavaScriptEnabled") private void initView() {
         if (isInEditMode()) return;
         if (AppHelper.isNightMode(getResources())) {
+            Logger.e(ViewHelper.getWindowBackground(getContext()));
             setBackgroundColor(ViewHelper.getWindowBackground(getContext()));
         }
         setWebChromeClient(new ChromeClient());

File: app/src/main/java/com/prettifier/pretty/callback/MarkDownInterceptorInterface.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.webkit.JavascriptInterface;
 
-import com.fastaccess.helper.Logger;
 import com.prettifier.pretty.PrettifyWebView;
 
 /**

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitFilesViewHolder.java
Patch:
@@ -1,6 +1,7 @@
 package com.fastaccess.ui.adapter.viewholder;
 
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.SpannableString;
@@ -27,8 +28,6 @@
  */
 
 public class CommitFilesViewHolder extends BaseViewHolder<CommitFileModel> {
-
-
     @BindView(R.id.name) FontTextView name;
     @BindView(R.id.patch) FontTextView patch;
     @BindView(R.id.changes) FontTextView changes;
@@ -94,6 +93,7 @@ public static CommitFilesViewHolder newInstance(ViewGroup viewGroup, BaseRecycle
                 .append(statusText)
                 .append("\n")
                 .bold(String.valueOf(commit.getStatus())));
+
         onToggle(onTogglePatch.isCollapsed(getAdapterPosition()));
     }
 
@@ -124,6 +124,7 @@ private void setPatchText(@NonNull String text) {
                     }
                     builder.append(spannableDiff);
                 }
+                patch.setTypeface(Typeface.MONOSPACE, Typeface.NORMAL);
                 patch.setText(builder);
             }
         }

File: app/src/main/java/com/fastaccess/helper/ActivityHelper.java
Patch:
@@ -14,7 +14,6 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.ShareCompat;
-import android.support.v4.content.ContextCompat;
 import android.support.v4.util.Pair;
 import android.view.View;
 
@@ -36,7 +35,7 @@ public class ActivityHelper {
 
     public static void startCustomTab(@NonNull Activity context, @NonNull Uri url) {
         CustomTabsIntent.Builder builder = new CustomTabsIntent.Builder();
-        builder.setToolbarColor(ContextCompat.getColor(context, R.color.primary));
+        builder.setToolbarColor(ViewHelper.getPrimaryColor(context));
         builder.setShowTitle(false);
         CustomTabsIntent tabsIntent = builder.build();
         tabsIntent.launchUrl(context, url);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.model.User;
+import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.ui.AssigneesAdapter;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -23,7 +24,6 @@ public class AssigneesViewHolder extends BaseViewHolder<User> {
     @BindView(R.id.avatarLayout) AvatarLayout avatar;
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.date) FontTextView date;
-    @BindColor(R.color.windowBackground) int windowBackground;
     @BindColor(R.color.light_gray) int lightGray;
     private AssigneesAdapter.OnSelectAssignee onSelectAssignee;
 
@@ -45,6 +45,7 @@ public static AssigneesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Non
         avatar.setUrl(user.getAvatarUrl(), user.getLogin());
         title.setText(user.getLogin());
         date.setVisibility(View.GONE);
-        itemView.setBackgroundColor(onSelectAssignee.isAssigneeSelected(getAdapterPosition()) ? lightGray : windowBackground);
+        itemView.setBackgroundColor(onSelectAssignee.isAssigneeSelected(getAdapterPosition()) ? lightGray : ViewHelper.getWindowBackground(itemView
+                .getContext()));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/LabelsViewHolder.java
Patch:
@@ -13,7 +13,6 @@
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
-import butterknife.BindColor;
 import butterknife.BindView;
 
 /**
@@ -25,7 +24,6 @@ public class LabelsViewHolder extends BaseViewHolder<LabelModel> {
 
     @BindView(R.id.colorImage) AppCompatImageView colorImage;
     @BindView(R.id.name) FontTextView name;
-    @BindColor(R.color.primary_text) int primaryTextColor;
     private LabelsAdapter.OnSelectLabel onSelectLabel;
 
     @Override public void onClick(View v) {
@@ -49,7 +47,7 @@ public static LabelsViewHolder newInstance(@NonNull ViewGroup parent, @NonNull L
         if (onSelectLabel.isLabelSelected(getAdapterPosition())) {
             name.setTextColor(ViewHelper.generateTextColor(color));
         } else {
-            name.setTextColor(primaryTextColor);
+            name.setTextColor(ViewHelper.getPrimaryTextColor(itemView.getContext()));
         }
         itemView.setBackgroundColor(onSelectLabel.isLabelSelected(getAdapterPosition()) ? color : 0);
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -7,7 +7,6 @@
 import android.support.annotation.Nullable;
 import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.NavigationView;
-import android.support.v4.content.ContextCompat;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.widget.DrawerLayout;
 import android.view.Menu;
@@ -111,7 +110,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
     @Override public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.search_menu, menu);
         if (isLoggedIn() && Notification.hasUnreadNotifications()) {
-            ViewHelper.tintDrawable(menu.findItem(R.id.notifications).getIcon(), ContextCompat.getColor(this, R.color.accent));
+            ViewHelper.tintDrawable(menu.findItem(R.id.notifications).getIcon(), ViewHelper.getAccentColor(this));
         }
         return super.onCreateOptionsMenu(menu);
     }
@@ -124,7 +123,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
             startActivity(new Intent(this, SearchView.class));
             return true;
         } else if (item.getItemId() == R.id.notifications) {
-            ViewHelper.tintDrawable(item.getIcon(), ContextCompat.getColor(this, R.color.primary_text));
+            ViewHelper.tintDrawable(item.getIcon(), ViewHelper.getPrimaryTextColor(this));
             startActivity(new Intent(this, NotificationActivityView.class));
             return true;
         }

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationActivityView.java
Patch:
@@ -25,7 +25,6 @@ public class NotificationActivityView extends BaseActivity {
     private NotificationsView notificationsView;
     private boolean userSelectedSpinner = false;
 
-
     @Override protected int layout() {
         return R.layout.notification_activity_layout;
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/assignees/AssigneesView.java
Patch:
@@ -67,6 +67,7 @@ public static AssigneesView newInstance(@NonNull List<User> models) {
     }
 
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        recycler.addKeyLineDivider();
         title.setText(R.string.assignees);
         List<User> list = getArguments().getParcelableArrayList(BundleConstant.ITEM);
         if (list != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -89,6 +89,7 @@ public static MilestoneView newInstance(@NonNull String login, @NonNull String r
         toolbar.inflateMenu(R.menu.add_menu);
         toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(v -> getActivity().finish());
+        recycler.addDivider();
         adapter = new MilestonesAdapter(getPresenter().getMilestones());
         adapter.setListener(getPresenter());
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -6,7 +6,6 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.support.v4.content.ContextCompat;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
@@ -16,10 +15,10 @@
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
-import com.fastaccess.R;
 import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.helper.ViewHelper;
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.modules.code.CodeViewerView;
@@ -66,7 +65,7 @@ public PrettifyWebView(Context context, AttributeSet attrs, int defStyleAttr) {
     @SuppressLint("SetJavaScriptEnabled") private void initView() {
         if (isInEditMode()) return;
         if (AppHelper.isNightMode(getResources())) {
-            setBackgroundColor(ContextCompat.getColor(getContext(), R.color.windowBackground));
+            setBackgroundColor(ViewHelper.getWindowBackground(getContext()));
         }
         setWebChromeClient(new ChromeClient());
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -47,7 +47,7 @@ public SingleEntityStore<Persistable> getDataStore() {
             DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 1);
             Configuration configuration = source.getConfiguration();
             if (BuildConfig.DEBUG) {
-                source.setTableCreationMode(TableCreationMode.DROP_CREATE);
+                source.setTableCreationMode(TableCreationMode.CREATE_NOT_EXISTS);
             }
             dataStore = RxSupport.toReactiveStore(new EntityDataStore<Persistable>(configuration));
         }

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractRepo.java
Patch:
@@ -41,7 +41,7 @@
     @Key long id;
     String name;
     String fullName;
-    boolean privateX;
+    @SerializedName("private") boolean privateX;
     String htmlUrl;
     String description;
     boolean fork;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -65,7 +65,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
                     .append(repo.getName()));
         } else if (repo.isPrivateX()) {
             title.setText(SpannableBuilder.builder()
-                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(forkColor, 5))
+                    .append(" " + privateRepo + " ", new RoundBackgroundSpan(privateColor, 5))
                     .append(" ")
                     .append(repo.getName()));
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -10,7 +10,6 @@
 import android.support.v4.content.ContextCompat;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.widget.DrawerLayout;
-import android.support.v7.app.AppCompatDelegate;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -1,18 +1,20 @@
 package com.fastaccess.ui.modules.repos.issues;
 
 import com.fastaccess.ui.base.mvp.BaseMvp;
+import com.fastaccess.ui.modules.repos.RepoPagerMvp;
 
 /**
  * Created by Kosh on 31 Dec 2016, 1:35 AM
  */
 
 public interface RepoIssuesPagerMvp {
 
-    interface View extends BaseMvp.FAView {
+    interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {
         void onAddIssue();
 
         void setCurrentItem(int index);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}
+
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -19,7 +19,7 @@
 interface RepoIssuesMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
-        void onNotifyAdapter();
+        void onNotifyAdapter(int totalCount);
 
         @NonNull OnLoadMore<IssueState> getLoadMore();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/RepoPullRequestPagerMvp.java
Patch:
@@ -1,14 +1,15 @@
 package com.fastaccess.ui.modules.repos.pull_requests;
 
 import com.fastaccess.ui.base.mvp.BaseMvp;
+import com.fastaccess.ui.modules.repos.RepoPagerMvp;
 
 /**
  * Created by Kosh on 31 Dec 2016, 1:35 AM
  */
 
 interface RepoPullRequestPagerMvp {
 
-    interface View extends BaseMvp.FAView {}
+    interface View extends BaseMvp.FAView, RepoPagerMvp.TabsBadgeListener {}
 
     interface Presenter extends BaseMvp.FAPresenter {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestMvp.java
Patch:
@@ -19,7 +19,7 @@
 interface RepoPullRequestMvp {
 
     interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, android.view.View.OnClickListener {
-        void onNotifyAdapter();
+        void onNotifyAdapter(int totalCount);
 
         @NonNull OnLoadMore<IssueState> getLoadMore();
     }
@@ -32,5 +32,7 @@ interface Presenter extends BaseMvp.FAPresenter,
         void onWorkOffline();
 
         @NonNull ArrayList<PullRequest> getPullRequests();
+
+        @NonNull IssueState getIssueState();
     }
 }

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -36,7 +36,7 @@
 
 public class NotificationSchedulerJobTask extends JobService {
     private final static String EVERY_30_MINS = "every_30_mins";
-    private final static int THIRTY_MINUTES = 30 * 60;
+    private final static int THIRTY_MINUTES = 30 * 60;//in seconds
 
     @Override public boolean onStartJob(JobParameters job) {
         if (Login.getUser() != null) {

File: app/src/main/java/com/fastaccess/helper/AppHelper.java
Patch:
@@ -46,6 +46,6 @@ public static void copyToClipboard(@NonNull Context context, @NonNull String uri
 
     public static boolean isNightMode(@NonNull Resources resources) {
         int currentNightMode = resources.getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK;
-        return currentNightMode == Configuration.UI_MODE_NIGHT_YES;
+        return currentNightMode == Configuration.UI_MODE_NIGHT_YES || PrefGetter.getThemeType(resources) == PrefGetter.DARK;
     }
 }

File: app/src/main/java/com/prettifier/pretty/helper/PrettifyHelper.java
Patch:
@@ -31,7 +31,7 @@ public class PrettifyHelper {
     }
 
     @NonNull private static String getStyle(boolean isDark) {
-        return !isDark ? "prettify.css" : "prettify_darkG.css";
+        return !isDark ? "prettify.css" : "prettify_dark.css";
     }
 
 }

File: app/src/main/java/com/prettifier/pretty/helper/PrettifyHelper.java
Patch:
@@ -31,7 +31,7 @@ public class PrettifyHelper {
     }
 
     @NonNull private static String getStyle(boolean isDark) {
-        return !isDark ? "prettify.css" : "prettify_dark.css";
+        return !isDark ? "prettify.css" : "prettify_darkG.css";
     }
 
 }

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.fastaccess.data.dao.Pageable;
 import com.fastaccess.data.dao.model.Notification;
+import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.tasks.notification.ReadNotificationService;
@@ -28,7 +29,7 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
     private ArrayList<Notification> notifications = new ArrayList<>();
 
     @Override public void onItemClick(int position, View v, Notification item) {
-        if (item.isUnread()) {
+        if (item.isUnread() && !PrefGetter.isMarkAsReadEnabled()) {
             ReadNotificationService.start(v.getContext(), item.getId());
             notifications.remove(position);
             sendToView(NotificationsMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -76,7 +76,7 @@ public AvatarLayout(@NonNull Context context, @Nullable AttributeSet attrs, @Att
         inflate(getContext(), R.layout.avatar_layout, this);
         if (isInEditMode()) return;
         ButterKnife.bind(this);
-        if (PrefGetter.isRectdAvatar()) {
+        if (PrefGetter.isRectAvatar()) {
             avatar.setShape(ShapedImageView.SHAPE_MODE_ROUND_RECT, 15);
         }
     }
@@ -109,7 +109,7 @@ private void setBackground(boolean clear) {
         if (clear) {
             setBackgroundColor(Color.TRANSPARENT);
         } else {
-            if (PrefGetter.isRectdAvatar()) {
+            if (PrefGetter.isRectAvatar()) {
                 setBackgroundResource(R.drawable.rect_shape);
             } else {
                 setBackgroundResource(R.drawable.circle_shape);

File: app/src/main/java/com/prettifier/pretty/helper/GithubHelper.java
Patch:
@@ -20,8 +20,8 @@ public class GithubHelper {
     private static Pattern IMAGE_TAG_MATCHER = Pattern.compile("src=\"(.*?)\"");
     private final static String HASH_LINK_SCRIPT = "<script>\n" +
             "function scrollTo(hash) {\n" +
-            "    var element = document.getElementById('user-content-'+hash);\n" +
-            "    element.scrollIntoView();\n" +
+            "var element = document.getElementById(\"user-content-\" + hash);\n" +
+            "element.scrollIntoView();\n" +
             "}" +
             "</script>";
 
@@ -88,7 +88,7 @@ private static String mergeContent(@NonNull String source, boolean wrap) {
                 "\n" +
                 "<body>\n" +
                 source +
-                "\n<script src=\"" + (!wrap ? "./intercept-touch.js" : "") + "\"></script>\n" +
+                (!wrap ? "\n<script src=\"./intercept-touch.js\"></script>\n" : "") +
                 HASH_LINK_SCRIPT + "\n" +
                 "</body>\n" +
                 "\n" +

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistView.java
Patch:
@@ -173,7 +173,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
 
     @Override public void onGistStarred(boolean isStarred) {
         startGist.setImageResource(isStarred ? R.drawable.ic_star_filled : R.drawable.ic_star);
-        startGist.tintDrawable(R.color.accent);
+        startGist.tintDrawable(isStarred ? R.color.accent : R.color.primary_text);
         startGist.setEnabled(true);
     }
 

File: app/src/main/java/com/fastaccess/data/dao/PayloadModel.java
Patch:
@@ -3,6 +3,7 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.data.dao.model.Repo;
@@ -26,6 +27,7 @@ public class PayloadModel implements Parcelable {
     private PullRequest pullRequest;
     private String ref;
     private String refType;
+    private Comment comment;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoClosedIssuesView.java
Patch:
@@ -30,7 +30,6 @@ public class RepoClosedIssuesView extends BaseFragment<RepoIssuesMvp.View, RepoI
     @BindView(R.id.stateLayout) StateLayout stateLayout;
     private OnLoadMore<IssueState> onLoadMore;
     private IssuesAdapter adapter;
-    private final IssueState issueState = IssueState.closed;
 
     public static RepoClosedIssuesView newInstance(@NonNull String repoId, @NonNull String login) {
         RepoClosedIssuesView view = new RepoClosedIssuesView();
@@ -64,7 +63,7 @@ public static RepoClosedIssuesView newInstance(@NonNull String repoId, @NonNull
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
-            getPresenter().onFragmentCreated(getArguments(), issueState);
+            getPresenter().onFragmentCreated(getArguments(), IssueState.closed);
         } else if (getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
@@ -93,7 +92,7 @@ public static RepoClosedIssuesView newInstance(@NonNull String repoId, @NonNull
         if (onLoadMore == null) {
             onLoadMore = new OnLoadMore<>(getPresenter());
         }
-        onLoadMore.setParameter(issueState);
+        onLoadMore.setParameter(IssueState.closed);
         return onLoadMore;
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -30,7 +30,7 @@ interface Presenter extends BaseMvp.FAPresenter,
             BaseViewHolder.OnItemClickListener<Issue>,
             BaseMvp.PaginationListener<IssueState> {
 
-        void onFragmentCreated(@NonNull Bundle bundle, IssueState issueState);
+        void onFragmentCreated(@NonNull Bundle bundle, @NonNull IssueState issueState);
 
         void onWorkOffline();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoOpenedIssuesView.java
Patch:
@@ -35,7 +35,6 @@ public class RepoOpenedIssuesView extends BaseFragment<RepoIssuesMvp.View, RepoI
     @BindView(R.id.stateLayout) StateLayout stateLayout;
     private OnLoadMore<IssueState> onLoadMore;
     private IssuesAdapter adapter;
-    private final IssueState issueState = IssueState.open;
     private RepoIssuesPagerMvp.View pagerCallback;
 
     public static RepoOpenedIssuesView newInstance(@NonNull String repoId, @NonNull String login) {
@@ -84,7 +83,7 @@ public static RepoOpenedIssuesView newInstance(@NonNull String repoId, @NonNull
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
         if (savedInstanceState == null) {
-            getPresenter().onFragmentCreated(getArguments(), issueState);
+            getPresenter().onFragmentCreated(getArguments(), IssueState.open);
         } else if (getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }
@@ -122,7 +121,7 @@ public static RepoOpenedIssuesView newInstance(@NonNull String repoId, @NonNull
         if (onLoadMore == null) {
             onLoadMore = new OnLoadMore<>(getPresenter());
         }
-        onLoadMore.setParameter(issueState);
+        onLoadMore.setParameter(IssueState.open);
         return onLoadMore;
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -50,7 +50,7 @@ public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Null
         }
         if (!InputHelper.isEmpty(commentsModel.getBodyHtml())) {
             comment.setNestedScrollingEnabled(false);
-            comment.setGithubContent(commentsModel.getBodyHtml(), commentsModel.getHtmlUrl(), true);
+            comment.setGithubContent(commentsModel.getBodyHtml(), null, true);
         }
         name.setText(commentsModel.getUser() != null ? commentsModel.getUser().getLogin() : "Anonymous");
         date.setText(ParseDateFormat.getTimeAgo(commentsModel.getCreatedAt()));

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -39,7 +39,7 @@ class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Pr
                 }
             }
         }
-        super.onError(throwable);
+        sendToView(view -> view.showErrorMessage(throwable.getMessage()));
     }
 
     @Override public void onTokenResponse(@Nullable AccessTokenModel modelResponse) {

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -45,7 +45,7 @@ public class App extends MultiDexApplication {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 2);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 1);
             Configuration configuration = new ConfigurationBuilder(source, model)
                     .useDefaultLogging()
                     .build();

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -147,10 +147,9 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
         hideProgress();
         if (toast != null) toast.cancel();
         toast = titleRes.equals(getString(R.string.error))
-                ? Toasty.warning(getApplicationContext(), msgRes, Toast.LENGTH_LONG)
+                ? Toasty.error(getApplicationContext(), msgRes, Toast.LENGTH_LONG)
                 : Toasty.info(getApplicationContext(), msgRes, Toast.LENGTH_LONG);
         toast.show();
-
     }
 
     @Override public void showErrorMessage(@NonNull String msgRes) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerView.java
Patch:
@@ -211,8 +211,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         Repo repoModel = getPresenter().getRepo();
         hideProgress();
         detailsIcon.setVisibility(InputHelper.isEmpty(repoModel.getDescription()) ? View.GONE : View.VISIBLE);
-        language.setVisibility(View.VISIBLE);
-        language.setText(InputHelper.toNA(repoModel.getLanguage()));
+        language.setVisibility(InputHelper.isEmpty(repoModel.getLanguage()) ? View.GONE : View.VISIBLE);
+        if (!InputHelper.isEmpty(repoModel.getLanguage())) language.setText(repoModel.getLanguage());
         language.setTextColor(ColorGenerator.MATERIAL.getColor(repoModel.getId()));
         forkRepo.setText(numberFormat.format(repoModel.getForksCount()));
         starRepo.setText(numberFormat.format(repoModel.getStargazersCount()));

File: app/src/main/java/com/fastaccess/ui/widgets/color/ColorGenerator.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.annotation.Nullable;
 
+import com.annimon.stream.Objects;
+
 import java.util.Arrays;
 import java.util.List;
 
@@ -35,9 +37,7 @@ private ColorGenerator(List<Integer> colorList) {
     }
 
     public int getColor(@Nullable Object key) {
-        if (key == null) {
-            key = "default";
-        }
+        key = Objects.toString(key, "default");
         return colors.get(Math.abs(key.hashCode()) % colors.size());
     }
 }
\ No newline at end of file

File: app/src/main/java/com/fastaccess/data/dao/model/AbstractGist.java
Patch:
@@ -73,7 +73,8 @@ public static Completable save(@NonNull List<Gist> gists) {
                 .get()
                 .toSingle()
                 .toCompletable()
-                .andThen(singleEntityStore.insert(gists))
+                .andThen(Observable.from(gists)
+                        .map(gist -> gist.save(gist)))
                 .toCompletable();
     }
 

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -221,7 +221,7 @@ protected void setToolbarIcon(@DrawableRes int res) {
 
     protected void hideShowShadow(boolean show) {
         if (shadowView != null) {
-            shadowView.post(() -> shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0));
+            shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0.0f);
         }
     }
 

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -45,7 +45,7 @@ public class App extends MultiDexApplication {
     public SingleEntityStore<Persistable> getDataStore() {
         if (dataStore == null) {
             EntityModel model = Models.DEFAULT;
-            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 1);
+            DatabaseSource source = new DatabaseSource(this, model, "FastHub-DB", 2);
             Configuration configuration = new ConfigurationBuilder(source, model)
                     .useDefaultLogging()
                     .build();

File: app/src/main/java/com/fastaccess/data/dao/converters/BaseConverter.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.data.dao.converters;
 
+import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.RestProvider;
 
 import io.requery.Converter;
@@ -29,6 +30,7 @@ public abstract class BaseConverter<C> implements Converter<C, String> {
     }
 
     @Override public C convertToMapped(Class<? extends C> type, String value) {
+        Logger.e(type.getSimpleName(), value);
         return RestProvider.gson.fromJson(value, type);
     }
 }

File: app/src/main/java/com/fastaccess/data/dao/types/EventsType.java
Patch:
@@ -33,6 +33,7 @@ public enum EventsType {
     ProjectCardEvent(R.string.card_event),
     ProjectColumnEvent(R.string.project_event),
     ProjectEvent(R.string.project_event);
+
     @StringRes int type;
 
     EventsType(@StringRes int type) {

File: app/src/main/java/com/fastaccess/helper/ActivityHelper.java
Patch:
@@ -96,7 +96,6 @@ public static void shareUrl(@NonNull Context context, @NonNull String url) {
                 .setType("text/*")
                 .setText(url)
                 .startChooser();
-
     }
 
     @SuppressWarnings("RestrictedApi")

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -220,7 +220,9 @@ protected void setToolbarIcon(@DrawableRes int res) {
     }
 
     protected void hideShowShadow(boolean show) {
-        if (shadowView != null) shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0);
+        if (shadowView != null) {
+            shadowView.post(() -> shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0));
+        }
     }
 
     protected void changeStatusBarColor(boolean isTransparent) {

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -45,7 +45,7 @@
 
 public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implements MainMvp.View {
 
-    @MainMvp.NavigationType @State int navType = MainMvp.FEEDS;
+    @State @MainMvp.NavigationType int navType = MainMvp.FEEDS;
 
     @BindView(R.id.fab) FloatingActionButton fab;
     @BindView(R.id.bottomNavigation) BottomNavigation bottomNavigation;
@@ -93,9 +93,9 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
         setToolbarIcon(R.drawable.ic_menu);
         onInit(savedInstanceState);
         onHideShowFab();
-        hideShowShadow(navType != MainMvp.PROFILE);
         enableAds.setChecked(PrefGetter.isAdsEnabled());
         AppHelper.cancelNotification(this);
+        hideShowShadow(navType != MainMvp.PROFILE);
     }
 
     @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {
@@ -152,9 +152,9 @@ private void superOnBackPressed(boolean clickTwichToExit) {
     }
 
     @Override public void onNavigationChanged(@MainMvp.NavigationType int navType) {
+        this.navType = navType;
         //noinspection WrongConstant
         if (bottomNavigation.getSelectedIndex() != navType) bottomNavigation.setSelectedIndex(navType, true);
-        this.navType = navType;
         hideShowShadow(navType != MainMvp.PROFILE);
         onHideShowFab();
         getPresenter().onModuleChanged(getSupportFragmentManager(), navType);

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -81,10 +81,8 @@ private void initView() {
             WebView.HitTestResult result = getHitTestResult();
             if (hitLinkResult(result) && !InputHelper.isEmpty(result.getExtra())) {
                 AppHelper.copyToClipboard(getContext(), result.getExtra());
-            } else {
                 return true;
             }
-
             return false;
         });
     }

File: app/src/main/java/com/fastaccess/data/dao/CommitListModel.java
Patch:
@@ -1,9 +1,11 @@
 package com.fastaccess.data.dao;
 
+import com.fastaccess.data.dao.model.Commit;
+
 import java.util.ArrayList;
 
 /**
  * Created by Kosh on 12 Feb 2017, 12:10 AM
  */
 
-public class CommitListModel extends ArrayList<CommitModel> {}
+public class CommitListModel extends ArrayList<Commit> {}

File: app/src/main/java/com/fastaccess/data/dao/UsersListModel.java
Patch:
@@ -1,9 +1,11 @@
 package com.fastaccess.data.dao;
 
+import com.fastaccess.data.dao.model.User;
+
 import java.util.ArrayList;
 
 /**
  * Created by Kosh on 12 Feb 2017, 1:33 PM
  */
 
-public class UsersListModel extends ArrayList<UserModel> {}
+public class UsersListModel extends ArrayList<User> {}

File: app/src/main/java/com/fastaccess/helper/ActivityHelper.java
Patch:
@@ -90,7 +90,7 @@ public static void startReveal(Activity activity, Intent intent, View sharedElem
 
     public static void shareUrl(@NonNull Context context, @NonNull String url) {
         Activity activity = getActivity(context);
-        if (activity == null) throw new IllegalArgumentException("Context give is not an instance of activity " + context.getClass().getName());
+        if (activity == null) throw new IllegalArgumentException("Context given is not an instance of activity " + context.getClass().getName());
         ShareCompat.IntentBuilder.from(activity)
                 .setChooserTitle(context.getString(R.string.share))
                 .setType("text/*")

File: app/src/main/java/com/fastaccess/provider/rest/LoginProvider.java
Patch:
@@ -3,8 +3,7 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.BuildConfig;
-import com.fastaccess.data.LoginRestService;
-import com.fastaccess.data.service.UserRestService;
+import com.fastaccess.data.service.LoginRestService;
 import com.fastaccess.provider.rest.converters.GithubResponseConverter;
 import com.fastaccess.provider.rest.interceptors.AuthenticationInterceptor;
 import com.google.gson.FieldNamingPolicy;

File: app/src/main/java/com/fastaccess/ui/AssigneesAdapter.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.view.ViewGroup;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.ui.adapter.viewholder.AssigneesViewHolder;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -14,7 +14,7 @@
  * Created by Kosh on 11 Nov 2016, 2:07 PM
  */
 
-public class AssigneesAdapter extends BaseRecyclerAdapter<UserModel, AssigneesViewHolder, BaseViewHolder.OnItemClickListener<UserModel>> {
+public class AssigneesAdapter extends BaseRecyclerAdapter<User, AssigneesViewHolder, BaseViewHolder.OnItemClickListener<User>> {
 
     public interface OnSelectAssignee {
         boolean isAssigneeSelected(int position);
@@ -24,7 +24,7 @@ public interface OnSelectAssignee {
 
     private OnSelectAssignee onSelectAssignee;
 
-    public AssigneesAdapter(@NonNull List<UserModel> data, OnSelectAssignee onSelectAssignee) {
+    public AssigneesAdapter(@NonNull List<User> data, OnSelectAssignee onSelectAssignee) {
         super(data);
         this.onSelectAssignee = onSelectAssignee;
     }

File: app/src/main/java/com/fastaccess/ui/adapter/CommentsAdapter.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.view.ViewGroup;
 
-import com.fastaccess.data.dao.CommentsModel;
+import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.ui.adapter.viewholder.CommentsViewHolder;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -14,9 +14,9 @@
  * Created by Kosh on 11 Nov 2016, 2:07 PM
  */
 
-public class CommentsAdapter extends BaseRecyclerAdapter<CommentsModel, CommentsViewHolder, BaseViewHolder.OnItemClickListener<CommentsModel>> {
+public class CommentsAdapter extends BaseRecyclerAdapter<Comment, CommentsViewHolder, BaseViewHolder.OnItemClickListener<Comment>> {
 
-    public CommentsAdapter(@NonNull ArrayList<CommentsModel> eventsModels) {
+    public CommentsAdapter(@NonNull ArrayList<Comment> eventsModels) {
         super(eventsModels);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/CommitsAdapter.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.view.ViewGroup;
 
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.ui.adapter.viewholder.CommitsViewHolder;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -14,9 +14,9 @@
  * Created by Kosh on 11 Nov 2016, 2:07 PM
  */
 
-public class CommitsAdapter extends BaseRecyclerAdapter<CommitModel, CommitsViewHolder, BaseViewHolder.OnItemClickListener<CommitModel>> {
+public class CommitsAdapter extends BaseRecyclerAdapter<Commit, CommitsViewHolder, BaseViewHolder.OnItemClickListener<Commit>> {
 
-    public CommitsAdapter(@NonNull List<CommitModel> data) {
+    public CommitsAdapter(@NonNull List<Commit> data) {
         super(data);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/ReleasesAdapter.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.view.ViewGroup;
 
-import com.fastaccess.data.dao.ReleasesModel;
+import com.fastaccess.data.dao.model.Release;
 import com.fastaccess.ui.adapter.viewholder.ReleasesViewHolder;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -14,9 +14,9 @@
  * Created by Kosh on 11 Nov 2016, 2:07 PM
  */
 
-public class ReleasesAdapter extends BaseRecyclerAdapter<ReleasesModel, ReleasesViewHolder, BaseViewHolder.OnItemClickListener<ReleasesModel>> {
+public class ReleasesAdapter extends BaseRecyclerAdapter<Release, ReleasesViewHolder, BaseViewHolder.OnItemClickListener<Release>> {
 
-    public ReleasesAdapter(@NonNull List<ReleasesModel> data) {
+    public ReleasesAdapter(@NonNull List<Release> data) {
         super(data);
     }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/AssigneesViewHolder.java
Patch:
@@ -5,7 +5,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.ui.AssigneesAdapter;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -18,7 +18,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class AssigneesViewHolder extends BaseViewHolder<UserModel> {
+public class AssigneesViewHolder extends BaseViewHolder<User> {
 
     @BindView(R.id.avatarLayout) AvatarLayout avatar;
     @BindView(R.id.title) FontTextView title;
@@ -41,7 +41,7 @@ public static AssigneesViewHolder newInstance(@NonNull ViewGroup viewGroup, @Non
         return new AssigneesViewHolder(getView(viewGroup, R.layout.feeds_row_item), onSelectAssignee);
     }
 
-    @Override public void bind(@NonNull UserModel user) {
+    @Override public void bind(@NonNull User user) {
         avatar.setUrl(user.getAvatarUrl(), user.getLogin());
         title.setText(user.getLogin());
         date.setVisibility(View.GONE);

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommentsViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.CommentsModel;
+import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -21,7 +21,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class CommentsViewHolder extends BaseViewHolder<CommentsModel> {
+public class CommentsViewHolder extends BaseViewHolder<Comment> {
 
     @BindView(R.id.avatarView) AvatarLayout avatar;
     @BindView(R.id.date) FontTextView date;
@@ -42,7 +42,7 @@ public static CommentsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Null
         return new CommentsViewHolder(getView(viewGroup, R.layout.comments_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull CommentsModel commentsModel) {
+    @Override public void bind(@NonNull Comment commentsModel) {
         if (commentsModel.getUser() != null) {
             avatar.setUrl(commentsModel.getUser().getAvatarUrl(), commentsModel.getUser().getLogin());
         } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/CommitsViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -23,7 +23,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class CommitsViewHolder extends BaseViewHolder<CommitModel> {
+public class CommitsViewHolder extends BaseViewHolder<Commit> {
 
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
@@ -37,7 +37,7 @@ public static CommitsViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAda
         return new CommitsViewHolder(getView(viewGroup, R.layout.issue_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull CommitModel commit) {
+    @Override public void bind(@NonNull Commit commit) {
         title.setText(commit.getGitCommit().getMessage());
         String login = commit.getAuthor() != null ? commit.getAuthor().getLogin() : commit.getGitCommit().getAuthor().getName();
         String avatar = commit.getAuthor() != null ? commit.getAuthor().getAvatarUrl() : null;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/FeedsViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.EventsModel;
+import com.fastaccess.data.dao.model.Event;
 import com.fastaccess.data.dao.types.EventsType;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -21,7 +21,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class FeedsViewHolder extends BaseViewHolder<EventsModel> {
+public class FeedsViewHolder extends BaseViewHolder<Event> {
 
     @BindView(R.id.avatarLayout) AvatarLayout avatar;
     @BindView(R.id.title) FontTextView title;
@@ -35,7 +35,7 @@ public static View getView(@NonNull ViewGroup viewGroup) {
         return getView(viewGroup, R.layout.feeds_row_item);
     }
 
-    @Override public void bind(@NonNull EventsModel eventsModel) {
+    @Override public void bind(@NonNull Event eventsModel) {
         if (eventsModel.getActor() != null) {
             avatar.setUrl(eventsModel.getActor().getAvatarUrl(), eventsModel.getActor().getLogin());
         } else {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/GistsViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -19,7 +19,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class GistsViewHolder extends BaseViewHolder<GistsModel> {
+public class GistsViewHolder extends BaseViewHolder<Gist> {
 
     @Nullable @BindView(R.id.avatarLayout) AvatarLayout avatar;
     @BindView(R.id.title) FontTextView title;
@@ -41,7 +41,7 @@ public static GistsViewHolder newInstance(@NonNull ViewGroup viewGroup, @Nullabl
     }
 
 
-    @Override public void bind(@NonNull GistsModel item) {
+    @Override public void bind(@NonNull Gist item) {
         if (!isFromProfile) {
             String url = item.getOwner() != null ? item.getOwner().getAvatarUrl() : item.getUser() != null ? item.getUser().getAvatarUrl() : null;
             String login = item.getOwner() != null ? item.getOwner().getLogin() : item.getUser() != null ? item.getUser().getLogin() : null;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -7,7 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.IssueEventAdapterModel;
-import com.fastaccess.data.dao.IssueModel;
+import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -38,7 +38,7 @@ public static IssueDetailsViewHolder newInstance(ViewGroup viewGroup, BaseRecycl
     }
 
     @Override public void bind(@NonNull IssueEventAdapterModel model) {
-        IssueModel issueModel = model.getIssueModel();
+        Issue issueModel = model.getIssueModel();
         avatarView.setUrl(issueModel.getUser().getAvatarUrl(), issueModel.getUser().getLogin());
         name.setText(issueModel.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(issueModel.getCreatedAt()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueTimelineViewHolder.java
Patch:
@@ -8,7 +8,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.IssueEventAdapterModel;
-import com.fastaccess.data.dao.IssueEventModel;
+import com.fastaccess.data.dao.model.IssueEvent;
 import com.fastaccess.data.dao.LabelModel;
 import com.fastaccess.data.dao.types.IssueEventType;
 import com.fastaccess.helper.InputHelper;
@@ -44,7 +44,7 @@ public static IssueTimelineViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
     }
 
     @Override public void bind(@NonNull IssueEventAdapterModel model) {
-        IssueEventModel issueEventModel = model.getIssueEvent();
+        IssueEvent issueEventModel = model.getIssueEvent();
         IssueEventType event = issueEventModel.getEvent();
         SpannableBuilder spannableBuilder = SpannableBuilder.builder()
                 .bold(issueEventModel.getActor().getLogin());

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.IssueModel;
+import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.types.IssueState;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -22,7 +22,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class IssuesViewHolder extends BaseViewHolder<IssueModel> {
+public class IssuesViewHolder extends BaseViewHolder<Issue> {
 
     @BindView(R.id.title) FontTextView title;
     @Nullable @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
@@ -44,7 +44,7 @@ public static IssuesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdap
         }
     }
 
-    @Override public void bind(@NonNull IssueModel issueModel) {
+    @Override public void bind(@NonNull Issue issueModel) {
         title.setText(issueModel.getTitle());
         if (issueModel.getState() != null) {
             CharSequence data = ParseDateFormat.getTimeAgo(issueModel.getState() == IssueState.open

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/NotificationsViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.NotificationThreadModel;
+import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
@@ -18,7 +18,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class NotificationsViewHolder extends BaseViewHolder<NotificationThreadModel> {
+public class NotificationsViewHolder extends BaseViewHolder<Notification> {
 
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.date) FontTextView date;
@@ -32,7 +32,7 @@ public static NotificationsViewHolder newInstance(@NonNull ViewGroup viewGroup,
         return new NotificationsViewHolder(getView(viewGroup, R.layout.notifications_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull NotificationThreadModel thread) {
+    @Override public void bind(@NonNull Notification thread) {
         if (thread.getSubject() != null) {
             notificationTitle.setText(thread.getSubject().getTitle());
         }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestDetailsViewHolder.java
Patch:
@@ -7,7 +7,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.PullRequestAdapterModel;
-import com.fastaccess.data.dao.PullRequestModel;
+import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -38,7 +38,7 @@ public static PullRequestDetailsViewHolder newInstance(ViewGroup viewGroup, Base
     }
 
     @Override public void bind(@NonNull PullRequestAdapterModel model) {
-        PullRequestModel issueModel = model.getPullRequest();
+        PullRequest issueModel = model.getPullRequest();
         avatarView.setUrl(issueModel.getUser().getAvatarUrl(), issueModel.getUser().getLogin());
         name.setText(issueModel.getUser().getLogin());
         date.setText(ParseDateFormat.getTimeAgo(issueModel.getCreatedAt()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestTimelineViewHolder.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.IssueEventModel;
+import com.fastaccess.data.dao.model.IssueEvent;
 import com.fastaccess.data.dao.LabelModel;
 import com.fastaccess.data.dao.PullRequestAdapterModel;
 import com.fastaccess.data.dao.types.IssueEventType;
@@ -44,7 +44,7 @@ public static PullRequestTimelineViewHolder newInstance(ViewGroup viewGroup, Bas
     }
 
     @Override public void bind(@NonNull PullRequestAdapterModel model) {
-        IssueEventModel issueEventModel = model.getIssueEvent();
+        IssueEvent issueEventModel = model.getIssueEvent();
         IssueEventType event = issueEventModel.getEvent();
         SpannableBuilder spannableBuilder = SpannableBuilder.builder()
                 .bold(issueEventModel.getActor().getLogin());

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReleasesViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.ReleasesModel;
+import com.fastaccess.data.dao.model.Release;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
@@ -23,7 +23,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class ReleasesViewHolder extends BaseViewHolder<ReleasesModel> {
+public class ReleasesViewHolder extends BaseViewHolder<Release> {
 
 
     @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
@@ -43,7 +43,7 @@ public static ReleasesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAd
         return new ReleasesViewHolder(getView(viewGroup, R.layout.releases_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull ReleasesModel item) {
+    @Override public void bind(@NonNull Release item) {
         title.setText(SpannableBuilder.builder().bold(!InputHelper.isEmpty(item.getName()) ? item.getName() : item.getTagName()));
         details.setText(SpannableBuilder.builder()
                 .append(item.getAuthor().getLogin())

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/RepoFilePathsViewHolder.java
Patch:
@@ -5,7 +5,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.RepoFilesModel;
+import com.fastaccess.data.dao.model.RepoFile;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
@@ -17,7 +17,7 @@
  * Created by Kosh on 18 Feb 2017, 2:53 AM
  */
 
-public class RepoFilePathsViewHolder extends BaseViewHolder<RepoFilesModel> {
+public class RepoFilePathsViewHolder extends BaseViewHolder<RepoFile> {
 
     @BindView(R.id.pathName) FontTextView pathName;
 
@@ -29,7 +29,7 @@ public static RepoFilePathsViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
         return new RepoFilePathsViewHolder(getView(viewGroup, R.layout.file_path_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull RepoFilesModel filesModel) {
+    @Override public void bind(@NonNull RepoFile filesModel) {
         Logger.e(filesModel.getPath());
         pathName.setText(filesModel.getName());
     }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/RepoFilesViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.RepoFilesModel;
+import com.fastaccess.data.dao.model.RepoFile;
 import com.fastaccess.data.dao.types.FilesType;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.ForegroundImageView;
@@ -20,7 +20,7 @@
  * Created by Kosh on 15 Feb 2017, 10:29 PM
  */
 
-public class RepoFilesViewHolder extends BaseViewHolder<RepoFilesModel> {
+public class RepoFilesViewHolder extends BaseViewHolder<RepoFile> {
 
     @BindView(R.id.contentTypeImage) ForegroundImageView contentTypeImage;
     @BindView(R.id.title) FontTextView title;
@@ -37,7 +37,7 @@ public static RepoFilesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerA
         return new RepoFilesViewHolder(getView(viewGroup, R.layout.repo_files_row_item), adapter);
     }
 
-    @Override public void bind(@NonNull RepoFilesModel filesModel) {
+    @Override public void bind(@NonNull RepoFile filesModel) {
         contentTypeImage.setContentDescription(String.format("%s %s", filesModel.getName(), file));
         title.setText(filesModel.getName());
         if (filesModel.getType() != null && filesModel.getType().getIcon() != 0) {

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/ReposViewHolder.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.ViewGroup;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
@@ -25,7 +25,7 @@
  * Created by Kosh on 11 Nov 2016, 2:08 PM
  */
 
-public class ReposViewHolder extends BaseViewHolder<RepoModel> {
+public class ReposViewHolder extends BaseViewHolder<Repo> {
 
     @BindView(R.id.title) FontTextView title;
     @BindView(R.id.date) FontTextView date;
@@ -54,7 +54,7 @@ public static ReposViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapt
 
     }
 
-    @Override public void bind(@NonNull RepoModel repo) {
+    @Override public void bind(@NonNull Repo repo) {
         if (repo.isFork() && !isStarred) {
             title.setText(SpannableBuilder.builder()
                     .append(" " + forked + " ", new RoundBackgroundSpan(forkColor, 5))

File: app/src/main/java/com/fastaccess/ui/base/BaseFragment.java
Patch:
@@ -10,7 +10,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.fastaccess.data.dao.LoginModel;
+import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -69,7 +69,7 @@ public abstract class BaseFragment<V extends BaseMvp.FAView, P extends BasePrese
 
     @Override public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
-        if (LoginModel.getUser() != null) {
+        if (Login.getUser() != null) {
             onFragmentCreated(view, savedInstanceState);
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.annotation.Nullable;
 import android.widget.EditText;
 
-import com.fastaccess.data.dao.CommentsModel;
+import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
@@ -16,7 +16,7 @@
 interface EditorMvp {
 
     interface View extends BaseMvp.FAView {
-        void onSendResultAndFinish(@NonNull CommentsModel commentModel, boolean isNew);
+        void onSendResultAndFinish(@NonNull Comment commentModel, boolean isNew);
 
         void onSendMarkDownResult();
     }

File: app/src/main/java/com/fastaccess/ui/modules/editor/EditorView.java
Patch:
@@ -11,7 +11,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.CommentsModel;
+import com.fastaccess.data.dao.model.Comment;
 import com.fastaccess.helper.AnimHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
@@ -134,7 +134,7 @@ public class EditorView extends BaseActivity<EditorMvp.View, EditorPresenter> im
         }
     }
 
-    @Override public void onSendResultAndFinish(@NonNull CommentsModel commentModel, boolean isNew) {
+    @Override public void onSendResultAndFinish(@NonNull Comment commentModel, boolean isNew) {
         hideProgress();
         Intent intent = new Intent();
         intent.putExtras(Bundler.start()

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsView.java
Patch:
@@ -10,7 +10,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.EventsModel;
+import com.fastaccess.data.dao.model.Event;
 import com.fastaccess.data.dao.SimpleUrlsModel;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.PrefGetter;
@@ -119,7 +119,7 @@ public static FeedsView newInstance() {
         SchemeParser.launchUri(getContext(), Uri.parse(item.getItem()));
     }
 
-    @Override public void onShowGuide(@NonNull View itemView, @NonNull EventsModel model) {
+    @Override public void onShowGuide(@NonNull View itemView, @NonNull Event model) {
         if (!PrefGetter.isUserIconGuideShowed()) {
             new MaterialTapTargetPrompt.Builder(getActivity())
                     .setTarget(itemView.findViewById(R.id.avatarLayout))

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -23,10 +23,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<GistsModel>,
+            BaseViewHolder.OnItemClickListener<Gist>,
             BaseMvp.PaginationListener {
 
-        @NonNull ArrayList<GistsModel> getGists();
+        @NonNull ArrayList<Gist> getGists();
 
         void onWorkOffline();
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.design.widget.TextInputLayout;
 
 import com.fastaccess.data.dao.CreateGistModel;
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 /**
@@ -23,7 +23,7 @@ interface View extends BaseMvp.FAView {
 
         void onFileContentError(boolean isEmptyDesc);
 
-        void onSuccessSubmission(GistsModel gistsModel);
+        void onSuccessSubmission(Gist gistsModel);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/gists/create/CreateGistView.java
Patch:
@@ -9,7 +9,7 @@
 import android.widget.TextView;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
@@ -51,7 +51,7 @@ public class CreateGistView extends BaseActivity<CreateGistMvp.View, CreateGistP
         fileContent.setError(isEmptyDesc ? getString(R.string.required_field) : null);
     }
 
-    @Override public void onSuccessSubmission(GistsModel gistsModel) {
+    @Override public void onSuccessSubmission(Gist gistsModel) {
         hideProgress();
         finish();
         showMessage(R.string.success, R.string.successfully_submitted);

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 /**
@@ -27,7 +27,7 @@ interface View extends BaseMvp.FAView {
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-        @Nullable GistsModel getGist();
+        @Nullable Gist getGist();
 
         @NonNull String gistId();
 

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistView.java
Patch:
@@ -15,7 +15,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.FragmentPagerAdapterModel;
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
@@ -157,7 +157,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
         hideProgress();
         if (getPresenter().getGist() != null) {
             Intent intent = new Intent();
-            GistsModel gistsModel = new GistsModel();
+            Gist gistsModel = new Gist();
             gistsModel.setUrl(getPresenter().getGist().getUrl());
             intent.putExtras(Bundler.start().put(BundleConstant.ITEM, gistsModel).end());
             setResult(RESULT_OK, intent);
@@ -183,7 +183,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
 
     @Override public void onSetupDetails() {
         hideProgress();
-        GistsModel gistsModel = getPresenter().getGist();
+        Gist gistsModel = getPresenter().getGist();
         if (gistsModel == null) {
             finish();
             return;

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.Nullable;
 
 import com.fastaccess.data.dao.AccessTokenModel;
-import com.fastaccess.data.dao.LoginModel;
+import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 /**
@@ -28,7 +28,7 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onTokenResponse(@Nullable AccessTokenModel response);
 
-        void onUserResponse(@Nullable LoginModel response);
+        void onUserResponse(@Nullable Login response);
 
         void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode);
     }

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -8,7 +8,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.AccessTokenModel;
 import com.fastaccess.data.dao.AuthModel;
-import com.fastaccess.data.dao.LoginModel;
+import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.provider.rest.LoginProvider;
@@ -40,10 +40,10 @@ class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Pr
         sendToView(view -> view.showMessage(R.string.error, R.string.failed_login));
     }
 
-    @Override public void onUserResponse(@Nullable LoginModel userModel) {
+    @Override public void onUserResponse(@Nullable Login userModel) {
         if (userModel != null) {
             userModel.setToken(PrefGetter.getToken());
-            userModel.save();
+            userModel.save(userModel);
             sendToView(LoginMvp.View::onSuccessfullyLoggedIn);
             return;
         }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainPresenter.java
Patch:
@@ -9,7 +9,7 @@
 import android.view.MenuItem;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.LoginModel;
+import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.feeds.FeedsView;
 import com.fastaccess.ui.modules.gists.GistsView;
@@ -51,7 +51,7 @@ class MainPresenter extends BasePresenter<MainMvp.View> implements MainMvp.Prese
                 break;
             case MainMvp.PROFILE:
                 if (profileView == null) {
-                    onAddAndHide(fragmentManager, ProfilePagerView.newInstance(LoginModel.getUser().getLogin()), currentVisible);
+                    onAddAndHide(fragmentManager, ProfilePagerView.newInstance(Login.getUser().getLogin()), currentVisible);
                 } else {
                     onShowHideFragment(fragmentManager, profileView, currentVisible);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsView.java
Patch:
@@ -12,7 +12,7 @@
 
 import com.annimon.stream.Stream;
 import com.fastaccess.R;
-import com.fastaccess.data.dao.NotificationThreadModel;
+import com.fastaccess.data.dao.model.Notification;
 import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.provider.scheme.SchemeParser;
@@ -127,8 +127,8 @@ public static NotificationsView newInstance() {
         if (item.getItemId() == R.id.readAll) {
             if (!getPresenter().getNotifications().isEmpty()) {
                 long[] ids = Stream.of(getPresenter().getNotifications())
-                        .filter(NotificationThreadModel::isUnread)
-                        .mapToLong(NotificationThreadModel::getId)
+                        .filter(Notification::isUnread)
+                        .mapToLong(Notification::getId)
                         .toArray();
                 if (ids != null && ids.length > 0) {
                     getPresenter().getNotifications().clear();

File: app/src/main/java/com/fastaccess/ui/modules/parser/LinksParserActivity.java
Patch:
@@ -7,7 +7,7 @@
 import android.widget.Toast;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.LoginModel;
+import com.fastaccess.data.dao.model.Login;
 import com.fastaccess.provider.scheme.StackBuilderSchemeParser;
 import com.fastaccess.ui.modules.login.LoginView;
 
@@ -19,7 +19,7 @@ public class LinksParserActivity extends Activity {
 
     @Override protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        if (LoginModel.getUser() == null) {
+        if (Login.getUser() == null) {
             Toast.makeText(this, R.string.please_login, Toast.LENGTH_SHORT).show();
             startActivity(new Intent(this, LoginView.class));
             finish();

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -24,10 +24,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<UserModel>,
+            BaseViewHolder.OnItemClickListener<User>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<UserModel> getFollowers();
+        @NonNull ArrayList<User> getFollowers();
 
         void onWorkOffline(@NonNull String login);
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -24,10 +24,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<UserModel>,
+            BaseViewHolder.OnItemClickListener<User>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<UserModel> getFollowing();
+        @NonNull ArrayList<User> getFollowing();
 
         void onWorkOffline(@NonNull String login);
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -25,10 +25,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<GistsModel>,
+            BaseViewHolder.OnItemClickListener<Gist>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<GistsModel> getGists();
+        @NonNull ArrayList<Gist> getGists();
 
         void onWorkOffline(@NonNull String login);
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsView.java
Patch:
@@ -10,7 +10,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.data.dao.model.Gist;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
@@ -108,7 +108,7 @@ public static ProfileGistsView newInstance(@NonNull String login) {
         super.onActivityResult(requestCode, resultCode, data);
         if (resultCode == Activity.RESULT_OK && requestCode == BundleConstant.REQUEST_CODE) {
             if (data != null && data.getExtras() != null) {
-                GistsModel gistsModel = data.getExtras().getParcelable(BundleConstant.ITEM);
+                Gist gistsModel = data.getExtras().getParcelable(BundleConstant.ITEM);
                 if (gistsModel != null && adapter != null) {
                     adapter.removeItem(gistsModel);
                 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 /**
@@ -14,7 +14,7 @@
 interface ProfileOverviewMvp {
 
     interface View extends BaseMvp.FAView {
-        void onInitViews(@Nullable UserModel userModel);
+        void onInitViews(@Nullable User userModel);
 
         void onInvalidateMenuItem();
     }
@@ -33,7 +33,7 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onFollowButtonClicked(@NonNull String login);
 
-        void onSendUserToView(@Nullable UserModel userModel);
+        void onSendUserToView(@Nullable User userModel);
 
         @NonNull String getLogin();
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -23,10 +23,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<RepoModel>,
+            BaseViewHolder.OnItemClickListener<Repo>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<RepoModel> getRepos();
+        @NonNull ArrayList<Repo> getRepos();
 
         void onWorkOffline(@NonNull String login);
     }

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -23,10 +23,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<RepoModel>,
+            BaseViewHolder.OnItemClickListener<Repo>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<RepoModel> getRepos();
+        @NonNull ArrayList<Repo> getRepos();
 
         void onWorkOffline(@NonNull String login);
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -7,7 +7,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 
-import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 import java.lang.annotation.Retention;
@@ -68,7 +68,7 @@ interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSele
 
         @NonNull String login();
 
-        @Nullable RepoModel getRepo();
+        @Nullable Repo getRepo();
 
         boolean isWatched();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 
 import com.fastaccess.data.dao.BranchesModel;
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -32,11 +32,11 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<CommitModel>,
+            BaseViewHolder.OnItemClickListener<Commit>,
             BaseMvp.PaginationListener {
         void onFragmentCreated(@NonNull Bundle bundle);
 
-        @NonNull ArrayList<CommitModel> getCommits();
+        @NonNull ArrayList<Commit> getCommits();
 
         @NonNull ArrayList<BranchesModel> getBranches();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 /**
@@ -20,7 +20,7 @@ interface View extends BaseMvp.FAView {
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-        @Nullable CommitModel getCommit();
+        @Nullable Commit getCommit();
 
         void onActivityCreated(@Nullable Intent intent);
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerView.java
Patch:
@@ -14,7 +14,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.data.dao.FragmentPagerAdapterModel;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
@@ -64,7 +64,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     }
 
-    public static void createIntentForOffline(@NonNull Context context, @NonNull CommitModel commitModel) {
+    public static void createIntentForOffline(@NonNull Context context, @NonNull Commit commitModel) {
         SchemeParser.launchUri(context, Uri.parse(commitModel.getHtmlUrl()));
     }
 
@@ -130,7 +130,7 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
             return;
         }
         supportInvalidateOptionsMenu();
-        CommitModel commit = getPresenter().getCommit();
+        Commit commit = getPresenter().getCommit();
         String login = commit.getAuthor() != null ? commit.getAuthor().getLogin() : commit.getGitCommit().getAuthor().getName();
         String avatar = commit.getAuthor() != null ? commit.getAuthor().getAvatarUrl() : null;
         Date dateValue = commit.getGitCommit().getAuthor().getDate();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -24,13 +24,13 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<UserModel>,
+            BaseViewHolder.OnItemClickListener<User>,
             BaseMvp.PaginationListener {
 
         void onFragmentCreated(@NonNull Bundle bundle);
 
         void onWorkOffline();
 
-        @NonNull ArrayList<UserModel> getUsers();
+        @NonNull ArrayList<User> getUsers();
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesView.java
Patch:
@@ -9,7 +9,7 @@
 import android.widget.PopupMenu;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.RepoFilesModel;
+import com.fastaccess.data.dao.model.RepoFile;
 import com.fastaccess.data.dao.types.FilesType;
 import com.fastaccess.helper.ActivityHelper;
 import com.fastaccess.helper.BundleConstant;
@@ -49,7 +49,7 @@ public class RepoFilesView extends BaseFragment<RepoFilesMvp.View, RepoFilesPres
         adapter.notifyDataSetChanged();
     }
 
-    @Override public void onItemClicked(@NonNull RepoFilesModel model) {
+    @Override public void onItemClicked(@NonNull RepoFile model) {
         if (refresh.isRefreshing()) return;
         if (model.getType() == FilesType.dir) {
             if (getParent() != null) {
@@ -68,7 +68,7 @@ public class RepoFilesView extends BaseFragment<RepoFilesMvp.View, RepoFilesPres
         }
     }
 
-    @Override public void onMenuClicked(@NonNull RepoFilesModel item, View v) {
+    @Override public void onMenuClicked(@NonNull RepoFile item, View v) {
         if (refresh.isRefreshing()) return;
         PopupMenu popup = new PopupMenu(getContext(), v);
         MenuInflater inflater = popup.getMenuInflater();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesView.java
Patch:
@@ -10,7 +10,7 @@
 import com.annimon.stream.Collectors;
 import com.annimon.stream.Stream;
 import com.fastaccess.R;
-import com.fastaccess.data.dao.ReleasesModel;
+import com.fastaccess.data.dao.model.Release;
 import com.fastaccess.data.dao.SimpleUrlsModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
@@ -122,7 +122,7 @@ public static RepoReleasesView newInstance(@NonNull String repoId, @NonNull Stri
         super.showErrorMessage(msgRes);
     }
 
-    @Override public void onDownload(@NonNull ReleasesModel item) {
+    @Override public void onDownload(@NonNull Release item) {
         ArrayList<SimpleUrlsModel> models = new ArrayList<>();
         if (!InputHelper.isEmpty(item.getZipBallUrl())) {
             models.add(new SimpleUrlsModel(getString(R.string.download_as_zip), item.getZipBallUrl()));
@@ -144,7 +144,7 @@ public static RepoReleasesView newInstance(@NonNull String repoId, @NonNull Stri
         dialogView.show(getChildFragmentManager(), "ListDialogView");
     }
 
-    @Override public void onShowDetails(@NonNull ReleasesModel item) {
+    @Override public void onShowDetails(@NonNull Release item) {
         if (!InputHelper.isEmpty(item.getBody())) {
             MessageDialogView.newInstance(!InputHelper.isEmpty(item.getName()) ? item.getName() : item.getTagName(),
                     item.getBody(), true).show(getChildFragmentManager(), MessageDialogView.TAG);

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/assignees/AssigneesMvp.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.support.annotation.NonNull;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.ui.AssigneesAdapter;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
@@ -15,7 +15,7 @@
 public interface AssigneesMvp {
 
     interface SelectedAssigneesListener {
-        void onSelectedAssignees(@NonNull ArrayList<UserModel> users);
+        void onSelectedAssignees(@NonNull ArrayList<User> users);
     }
 
     interface View extends BaseMvp.FAView, AssigneesAdapter.OnSelectAssignee {}

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.IssueModel;
+import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.data.dao.types.IssueState;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
@@ -27,14 +27,14 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<IssueModel>,
+            BaseViewHolder.OnItemClickListener<Issue>,
             BaseMvp.PaginationListener<IssueState> {
 
         void onFragmentCreated(@NonNull Bundle bundle, IssueState issueState);
 
         void onWorkOffline();
 
-        @NonNull ArrayList<IssueModel> getIssues();
+        @NonNull ArrayList<Issue> getIssues();
 
         @NonNull String repoId();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/events/IssueDetailsView.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.IssueModel;
+import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
@@ -30,7 +30,7 @@ public class IssueDetailsView extends BaseFragment<IssueDetailsMvp.View, IssueDe
     private IssueTimelineAdapter adapter;
     private OnLoadMore onLoadMore;
 
-    public static IssueDetailsView newInstance(@NonNull IssueModel issueModel) {
+    public static IssueDetailsView newInstance(@NonNull Issue issueModel) {
         IssueDetailsView view = new IssueDetailsView();
         view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());
         return view;

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.PullRequestModel;
+import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.data.dao.types.IssueState;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
@@ -25,12 +25,12 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<PullRequestModel>,
+            BaseViewHolder.OnItemClickListener<PullRequest>,
             BaseMvp.PaginationListener<IssueState> {
         void onFragmentCreated(@NonNull Bundle bundle);
 
         void onWorkOffline();
 
-        @NonNull ArrayList<PullRequestModel> getPullRequests();
+        @NonNull ArrayList<PullRequest> getPullRequests();
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsMvp.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.CommitModel;
+import com.fastaccess.data.dao.model.Commit;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -24,11 +24,11 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<CommitModel>,
+            BaseViewHolder.OnItemClickListener<Commit>,
             BaseMvp.PaginationListener {
         void onFragmentCreated(@NonNull Bundle bundle);
 
-        @NonNull ArrayList<CommitModel> getCommits();
+        @NonNull ArrayList<Commit> getCommits();
 
         void onWorkOffline();
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/events/PullRequestDetailsView.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 
 import com.fastaccess.R;
-import com.fastaccess.data.dao.PullRequestModel;
+import com.fastaccess.data.dao.model.PullRequest;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
@@ -31,7 +31,7 @@ public class PullRequestDetailsView extends BaseFragment<PullRequestDetailsMvp.V
     private PullRequestTimelineAdapter adapter;
     private OnLoadMore onLoadMore;
 
-    public static PullRequestDetailsView newInstance(@NonNull PullRequestModel issueModel) {
+    public static PullRequestDetailsView newInstance(@NonNull PullRequest issueModel) {
         PullRequestDetailsView view = new PullRequestDetailsView();
         view.setArguments(Bundler.start().put(BundleConstant.ITEM, issueModel).end());
         return view;

File: app/src/main/java/com/fastaccess/ui/modules/search/SearchMvp.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.v4.view.ViewPager;
 import android.widget.AutoCompleteTextView;
 
-import com.fastaccess.data.dao.SearchHistoryModel;
+import com.fastaccess.data.dao.model.SearchHistory;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 
 import java.util.ArrayList;
@@ -17,12 +17,12 @@
 interface SearchMvp {
 
     interface View extends BaseMvp.FAView {
-        void onNotifyAdapter(@Nullable SearchHistoryModel query);
+        void onNotifyAdapter(@Nullable SearchHistory query);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-        @NonNull ArrayList<SearchHistoryModel> getHints();
+        @NonNull ArrayList<SearchHistory> getHints();
 
         void onSearchClicked(@NonNull ViewPager viewPager, @NonNull AutoCompleteTextView editText);
 

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.IssueModel;
+import com.fastaccess.data.dao.model.Issue;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -25,10 +25,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<IssueModel>,
+            BaseViewHolder.OnItemClickListener<Issue>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<IssueModel> getIssues();
+        @NonNull ArrayList<Issue> getIssues();
 
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.model.Repo;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -26,10 +26,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<RepoModel>,
+            BaseViewHolder.OnItemClickListener<Repo>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<RepoModel> getRepos();
+        @NonNull ArrayList<Repo> getRepos();
 
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersMvp.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.widget.SwipeRefreshLayout;
 
-import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.data.dao.model.User;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -25,10 +25,10 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
-            BaseViewHolder.OnItemClickListener<UserModel>,
+            BaseViewHolder.OnItemClickListener<User>,
             BaseMvp.PaginationListener<String> {
 
-        @NonNull ArrayList<UserModel> getUsers();
+        @NonNull ArrayList<User> getUsers();
 
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewMvp.java
Patch:
@@ -15,12 +15,12 @@ interface ProfileOverviewMvp {
 
     interface View extends BaseMvp.FAView {
         void onInitViews(@Nullable UserModel userModel);
+
         void onInvalidateMenuItem();
     }
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-
         void onFragmentCreated(@Nullable Bundle bundle);
 
         void onWorkOffline(@NonNull String login);

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewPresenter.java
Patch:
@@ -22,7 +22,6 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
     private boolean isFollowing;
     private String login;
 
-
     @Override public void onCheckFollowStatus(@NonNull String login) {
         if (!TextUtils.equals(login, LoginModel.getUser().getLogin()))
             makeRestCall(RestProvider.getUserService().getFollowStatus(login),
@@ -69,9 +68,11 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
             makeRestCall(RestProvider.getUserService().getUser(login),
                     userModel -> {
                         onSendUserToView(userModel);
-                        onCheckFollowStatus(login);
                         if (userModel != null) {
                             userModel.save();
+                            if (userModel.getType() != null && userModel.getType().equals("user")) {
+                                onCheckFollowStatus(login);
+                            }
                         }
                     });
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewView.java
Patch:
@@ -90,8 +90,8 @@ public static ProfileOverviewView newInstance(String login) {
             getPresenter().onFragmentCreated(getArguments());
         } else {
             if (userModel != null) {
-                onInitViews(userModel);
                 onInvalidateMenuItem();
+                onInitViews(userModel);
             } else {
                 getPresenter().onFragmentCreated(getArguments());
             }
@@ -109,6 +109,7 @@ public static ProfileOverviewView newInstance(String login) {
         progress.setVisibility(View.GONE);
         if (userModel == null) return;
         this.userModel = userModel;
+        followBtn.setVisibility(!InputHelper.isEmpty(userModel.getType()) && userModel.getType().equalsIgnoreCase("user") ? View.VISIBLE : View.GONE);
         username.setText(userModel.getLogin());
         description.setText(userModel.getBio());
         avatarLayout.setUrl(userModel.getAvatarUrl(), null);

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -14,6 +14,7 @@
 import com.fastaccess.data.dao.ReleasesModel;
 import com.fastaccess.data.dao.RepoFilesModel;
 import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.data.dao.RepoSubscriptionModel;
 import com.fastaccess.data.dao.UserModel;
 
 import retrofit2.Response;
@@ -62,8 +63,8 @@ public interface RepoService {
     @NonNull @POST("/repos/{owner}/{repo}/forks")
     Observable<RepoModel> forkRepo(@NonNull @Path("owner") String login, @NonNull @Path("repo") String repoId);
 
-    @NonNull @GET("user/subscriptions/{owner}/{repo}")
-    Observable<Response<Boolean>> isWatchingRepo(@Path("owner") String owner, @Path("repo") String repo);
+    @NonNull @GET("repos/{owner}/{repo}/subscription")
+    Observable<RepoSubscriptionModel> isWatchingRepo(@Path("owner") String owner, @Path("repo") String repo);
 
     @NonNull @PUT("user/subscriptions/{owner}/{repo}")
     Observable<Response<Boolean>> watchRepo(@Path("owner") String owner, @Path("repo") String repo);

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -125,7 +125,7 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
             String name = repoId();
             manageSubscription(RxHelper.getObserver(RestProvider.getRepoService().isWatchingRepo(login, name))
                     .doOnSubscribe(() -> sendToView(view -> view.onEnableDisableWatch(false)))
-                    .doOnNext(subscriptionModel -> sendToView(view -> view.onRepoWatched(isWatched = subscriptionModel.code() == 204)))
+                    .doOnNext(subscriptionModel -> sendToView(view -> view.onRepoWatched(isWatched = subscriptionModel.isSubscribed())))
                     .onErrorReturn(throwable -> {
                         isWatched = false;
                         sendToView(view -> view.onRepoWatched(isWatched));

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -37,6 +37,7 @@
 
 public class NotificationSchedulerJobTask extends JobService {
     private final static String EVERY_30_MINS = "every_30_mins";
+    private final static int THIRTY_MINUTES = 30 * 60;
 
     @Override public boolean onStartJob(JobParameters job) {
         if (LoginModel.getUser() != null) {
@@ -56,7 +57,7 @@ public class NotificationSchedulerJobTask extends JobService {
 
     public static void scheduleJob(@NonNull Context context) {
         int duration = PrefGetter.getNotificationTaskDuration(context);
-        scheduleJob(context, duration == 0 ? (30 * 60) : duration, false);
+        scheduleJob(context, duration == 0 ? THIRTY_MINUTES : duration, false);
     }
 
     public static void scheduleJob(@NonNull Context context, int duration, boolean cancel) {
@@ -66,6 +67,7 @@ public static void scheduleJob(@NonNull Context context, int duration, boolean c
             dispatcher.cancel(EVERY_30_MINS);
             return;
         }
+        duration = duration <= 0 ? THIRTY_MINUTES : duration;
         Job.Builder builder = dispatcher
                 .newJobBuilder()
                 .setTag(EVERY_30_MINS)

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginPresenter.java
Patch:
@@ -1,5 +1,6 @@
 package com.fastaccess.ui.modules.login;
 
+import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -59,10 +60,10 @@ class LoginPresenter extends BasePresenter<LoginMvp.View> implements LoginMvp.Pr
             String authToken = Credentials.basic(username, password);
             AuthModel authModel = new AuthModel();
             authModel.setScopes(Arrays.asList("user", "repo", "gist", "notifications"));
-            authModel.setNote(BuildConfig.APPLICATION_ID + "-" + authToken);//make it unique to FastHub.
+            authModel.setNote(BuildConfig.APPLICATION_ID + "-" + authToken + "-" + Build.MODEL);//make it unique to FastHub.
             authModel.setClientSecret(BuildConfig.GITHUB_SECRET);
             UUID uuid = UUID.randomUUID();
-            String fingerprint = BuildConfig.APPLICATION_ID + " - " + uuid;
+            String fingerprint = BuildConfig.APPLICATION_ID + " - " + uuid + "-" + Build.MODEL;
             Observable<AccessTokenModel> loginCall = LoginProvider.getLoginRestService(authToken)
                     .login(BuildConfig.GITHUB_CLIENT_ID, fingerprint, authModel);
             if (!InputHelper.isEmpty(twoFactorCode)) {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -97,7 +97,7 @@ private void onNotifyUser(@NonNull List<NotificationThreadModel> notificationThr
                     PendingIntent.FLAG_CANCEL_CURRENT);
             Notification notification = new NotificationCompat.Builder(context)
                     .setSmallIcon(R.drawable.ic_announcement)
-                    .setContentTitle(context.getString(R.string.notifictions))
+                    .setContentTitle(context.getString(R.string.notifications))
                     .setContentText(context.getString(R.string.unread_notification) + " (" + count + ")")
                     .setContentIntent(pendingIntent)
                     .setNumber((int) count)

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -64,7 +64,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
     }
 
     @Override public void onRequire2Fa() {
-        showMessage(R.string.error, R.string.two_fectors_otp_error);
+        showMessage(R.string.error, R.string.two_factors_otp_error);
         twoFactor.setVisibility(View.VISIBLE);
         hideProgress();
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -86,7 +86,7 @@ public static MilestoneView newInstance(@NonNull String login, @NonNull String r
         }
         toolbar.setTitle(R.string.milestone);
         toolbar.setOnMenuItemClickListener(item -> onAddMilestone());
-        toolbar.inflateMenu(R.menu.done_menu);
+        toolbar.inflateMenu(R.menu.add_menu);
         toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(v -> getActivity().finish());
         adapter = new MilestonesAdapter(getPresenter().getMilestones());

File: app/src/main/java/com/fastaccess/ui/modules/search/repos/SearchReposView.java
Patch:
@@ -55,6 +55,7 @@ public static SearchReposView newInstance() {
         adapter = new ReposAdapter(getPresenter().getRepos(), false, true);
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addKeyLineDivider();
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersView.java
Patch:
@@ -54,7 +54,7 @@ public static SearchUsersView newInstance() {
         adapter = new UsersAdapter(getPresenter().getUsers());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
-        recycler.addDivider();
+        recycler.addKeyLineDivider();
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getUsers().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -108,9 +108,9 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
     @NonNull public static List<FragmentPagerAdapterModel> buildForRepoIssue(@NonNull Context context, @NonNull String login,
                                                                              @NonNull String repoId) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.opened),
-                        RepoOpenedIssuesView.newInstance(repoId, login, IssueState.open)),
+                        RepoOpenedIssuesView.newInstance(repoId, login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.closed),
-                        RepoClosedIssuesView.newInstance(repoId, login, IssueState.closed)))
+                        RepoClosedIssuesView.newInstance(repoId, login)))
                 .collect(Collectors.toList());
     }
 

File: app/src/main/java/com/fastaccess/provider/tasks/git/GithubActionService.java
Patch:
@@ -46,7 +46,7 @@ public class GithubActionService extends IntentService {
 
 
     public static void startForRepo(@NonNull Context context, @NonNull String login, @NonNull String repo, @GitActionType int type) {
-        Intent intent = new Intent(context, GithubActionService.class);
+        Intent intent = new Intent(context.getApplicationContext(), GithubActionService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.ID, repo)
                 .put(BundleConstant.EXTRA, login)
@@ -56,7 +56,7 @@ public static void startForRepo(@NonNull Context context, @NonNull String login,
     }
 
     public static void startForGist(@NonNull Context context, @NonNull String id, @GitActionType int type) {
-        Intent intent = new Intent(context, GithubActionService.class);
+        Intent intent = new Intent(context.getApplicationContext(), GithubActionService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.ID, id)
                 .put(BundleConstant.EXTRA_TYPE, type)

File: app/src/main/java/com/fastaccess/provider/tasks/notification/ReadNotificationService.java
Patch:
@@ -24,7 +24,7 @@ public class ReadNotificationService extends IntentService {
     public static final int READ_ALL = 2;
 
     public static void start(@NonNull Context context, long id) {
-        Intent intent = new Intent(context, ReadNotificationService.class);
+        Intent intent = new Intent(context.getApplicationContext(), ReadNotificationService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.EXTRA_TYPE, READ_SINGLE)
                 .put(BundleConstant.ID, id)
@@ -33,7 +33,7 @@ public static void start(@NonNull Context context, long id) {
     }
 
     public static void start(@NonNull Context context, @NonNull long[] ids) {
-        Intent intent = new Intent(context, ReadNotificationService.class);
+        Intent intent = new Intent(context.getApplicationContext(), ReadNotificationService.class);
         intent.putExtras(Bundler.start()
                 .put(BundleConstant.EXTRA_TYPE, READ_ALL)
                 .put(BundleConstant.ID, ids)

File: app/src/main/java/com/fastaccess/data/dao/AuthModel.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.Parcelable;
 
 import com.google.gson.annotations.SerializedName;
+
 import java.util.List;
 
 import lombok.Getter;
@@ -23,8 +24,7 @@ public class AuthModel implements Parcelable {
     private List<String> scopes;
     private String state;
     private String note;
-    @SerializedName("X-GitHub-OTP")
-    private String otpCode;
+    @SerializedName("X-GitHub-OTP") private String otpCode;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -83,9 +83,11 @@ Observable<Pageable<CommitModel>> getCommits(@Path("owner") String owner, @Path(
     Observable<Pageable<UserModel>> getContributors(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
     @NonNull @GET("repos/{owner}/{repo}/commits/{sha}")
+    @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<CommitModel> getCommit(@Path("owner") String owner, @Path("repo") String repo, @Path("sha") String sha);
 
     @NonNull @GET("repos/{owner}/{repo}/commits/{sha}/comments")
+    @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<Pageable<CommentsModel>> getCommitComments(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo,
                                                           @NonNull @Path("sha") String ref, @Query("page") int page);
 

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -26,8 +26,6 @@ interface View extends BaseMvp.FAView {
 
     interface Presenter extends BaseMvp.FAPresenter {
 
-        void onGetToken(@NonNull String code);
-
         void onTokenResponse(@Nullable AccessTokenModel response);
 
         void onUserResponse(@Nullable LoginModel response);

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -101,7 +101,6 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
                 showAll ? RestProvider.getNotificationService().getAllNotifications(page)
                         : RestProvider.getNotificationService().getNotifications(page);
         makeRestCall(observable, response -> {
-            notifications.clear();
             if (response.getItems() != null) {
                 lastPage = response.getLast();
                 if (page == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesMvp.java
Patch:
@@ -30,7 +30,7 @@ interface Presenter extends BaseMvp.FAPresenter,
             BaseViewHolder.OnItemClickListener<IssueModel>,
             BaseMvp.PaginationListener<IssueState> {
 
-        void onFragmentCreated(@NonNull Bundle bundle);
+        void onFragmentCreated(@NonNull Bundle bundle, IssueState issueState);
 
         void onWorkOffline();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -80,10 +80,10 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
                 });
     }
 
-    @Override public void onFragmentCreated(@NonNull Bundle bundle) {
+    @Override public void onFragmentCreated(@NonNull Bundle bundle, IssueState issueState) {
         repoId = bundle.getString(BundleConstant.ID);
         login = bundle.getString(BundleConstant.EXTRA);
-        issueState = (IssueState) bundle.getSerializable(BundleConstant.EXTRA_TWO);
+        this.issueState = issueState;
         if (!InputHelper.isEmpty(login) && !InputHelper.isEmpty(repoId)) {
             onCallApi(1, null);
         }

File: app/src/main/java/com/fastaccess/data/dao/AuthModel.java
Patch:
@@ -3,6 +3,7 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import com.google.gson.annotations.SerializedName;
 import java.util.List;
 
 import lombok.Getter;
@@ -22,6 +23,8 @@ public class AuthModel implements Parcelable {
     private List<String> scopes;
     private String state;
     private String note;
+    @SerializedName("X-GitHub-OTP")
+    private String otpCode;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/provider/rest/LoginProvider.java
Patch:
@@ -3,6 +3,7 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.BuildConfig;
+import com.fastaccess.data.LoginRestService;
 import com.fastaccess.data.service.UserRestService;
 import com.fastaccess.provider.rest.converters.GithubResponseConverter;
 import com.fastaccess.provider.rest.interceptors.AuthenticationInterceptor;
@@ -49,7 +50,7 @@ private static Retrofit provideRetrofit(@NonNull String authToken) {
                 .build();
     }
 
-    @NonNull public static UserRestService getLoginRestService(@NonNull String authToken) {
-        return provideRetrofit(authToken).create(UserRestService.class);
+    @NonNull public static LoginRestService getLoginRestService(@NonNull String authToken) {
+        return provideRetrofit(authToken).create(LoginRestService.class);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginMvp.java
Patch:
@@ -15,6 +15,8 @@ interface LoginMvp {
 
     interface View extends BaseMvp.FAView {
 
+        void onRequire2Fa();
+
         void onEmptyUserName(boolean isEmpty);
 
         void onEmptyPassword(boolean isEmpty);
@@ -30,7 +32,6 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onUserResponse(@Nullable LoginModel response);
 
-
-        void login(@NonNull String username, @NonNull String password);
+        void login(@NonNull String username, @NonNull String password, @Nullable String twoFactorCode);
     }
 }

File: app/src/main/java/com/fastaccess/provider/rest/LoginProvider.java
Patch:
@@ -3,6 +3,7 @@
 import android.support.annotation.NonNull;
 
 import com.fastaccess.BuildConfig;
+import com.fastaccess.data.LoginRestService;
 import com.fastaccess.data.service.UserRestService;
 import com.fastaccess.provider.rest.converters.GithubResponseConverter;
 import com.fastaccess.provider.rest.interceptors.AuthenticationInterceptor;
@@ -49,7 +50,7 @@ private static Retrofit provideRetrofit(@NonNull String authToken) {
                 .build();
     }
 
-    @NonNull public static UserRestService getLoginRestService(@NonNull String authToken) {
-        return provideRetrofit(authToken).create(UserRestService.class);
+    @NonNull public static LoginRestService getLoginRestService(@NonNull String authToken) {
+        return provideRetrofit(authToken).create(LoginRestService.class);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -6,10 +6,12 @@
  * Created by Kosh on 31 Dec 2016, 1:35 AM
  */
 
-interface RepoIssuesPagerMvp {
+public interface RepoIssuesPagerMvp {
 
     interface View extends BaseMvp.FAView {
         void onAddIssue();
+
+        void setCurrentItem(int index);
     }
 
     interface Presenter extends BaseMvp.FAPresenter {}

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -58,6 +58,7 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
     }
 
     @Override public void onCallApi(int page, @Nullable IssueState parameter) {
+        Logger.e(page, page, login, repoId);
         if (page == 1) {
             lastPage = Integer.MAX_VALUE;
             sendToView(view -> view.getLoadMore().reset());
@@ -66,10 +67,10 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
             sendToView(RepoIssuesMvp.View::hideProgress);
             return;
         }
-        if (repoId == null || login == null) return;
         setCurrentPage(page);
         makeRestCall(RestProvider.getIssueService().getRepositoryIssues(login, repoId, issueState.name(), page),
                 issues -> {
+                    lastPage = issues.getLast();
                     if (getCurrentPage() == 1) {
                         getIssues().clear();
                         manageSubscription(IssueModel.save(issues.getItems(), repoId, login).subscribe());

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -100,10 +100,12 @@ public void setGithubContent(@NonNull String source, @Nullable String baseUrl) {
         setGithubContent(source, baseUrl, false);
     }
 
-    public void setGithubContent(@NonNull String source, @Nullable String baseUrl, boolean wrap) {
+    @SuppressLint("SetJavaScriptEnabled") public void setGithubContent(@NonNull String source, @Nullable String baseUrl, boolean wrap) {
         if (wrap) {
             setScrollbarFadingEnabled(false);
             setVerticalScrollBarEnabled(false);
+        } else {
+            getSettings().setJavaScriptEnabled(true);
         }
         if (!InputHelper.isEmpty(source)) {
             if (!wrap) addJavascriptInterface(new MarkDownInterceptorInterface(this), "Android");

File: app/src/main/java/com/fastaccess/ui/adapter/IssuesAdapter.java
Patch:
@@ -28,10 +28,10 @@ public IssuesAdapter(@NonNull List<IssueModel> data, boolean withAvatar) {
     }
 
     @Override protected IssuesViewHolder viewHolder(ViewGroup parent, int viewType) {
-        return IssuesViewHolder.newInstance(parent, this);
+        return IssuesViewHolder.newInstance(parent, this, withAvatar);
     }
 
     @Override protected void onBindView(IssuesViewHolder holder, int position) {
-        holder.bind(getItem(position), withAvatar);
+        holder.bind(getItem(position));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/SearchCodeViewHolder.java
Patch:
@@ -7,7 +7,6 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.SearchCodeModel;
-import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.recyclerview.BaseRecyclerAdapter;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
@@ -21,15 +20,14 @@
 public class SearchCodeViewHolder extends BaseViewHolder<SearchCodeModel> {
 
     @BindView(R.id.title) FontTextView title;
-    @BindView(R.id.avatarLayout) AvatarLayout avatarLayout;
     @BindView(R.id.details) FontTextView details;
 
     private SearchCodeViewHolder(@NonNull View itemView, @Nullable BaseRecyclerAdapter adapter) {
         super(itemView, adapter);
     }
 
     public static SearchCodeViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerAdapter adapter) {
-        return new SearchCodeViewHolder(getView(viewGroup, R.layout.issue_row_item), adapter);
+        return new SearchCodeViewHolder(getView(viewGroup, R.layout.issue_no_image_row_item), adapter);
     }
 
     @Override public void bind(@NonNull SearchCodeModel codeMode) {

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -186,6 +186,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
     }
 
     @Override public void onRequireLogin() {
+        Toasty.warning(this, getString(R.string.unauthorized_user), Toast.LENGTH_LONG).show();
         CookieManager.getInstance().removeAllCookies(null);
         PrefGetter.clear();
         LoginModel.deleteTable().execute();

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -77,7 +77,7 @@ public AvatarLayout(@NonNull Context context, @Nullable AttributeSet attrs, @Att
         if (isInEditMode()) return;
         ButterKnife.bind(this);
         if (PrefGetter.isRectdAvatar()) {
-            avatar.setShape(ShapedImageView.SHAPE_MODE_ROUND_RECT, 20);
+            avatar.setShape(ShapedImageView.SHAPE_MODE_ROUND_RECT, 15);
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/DynamicRecyclerView.java
Patch:
@@ -111,7 +111,7 @@ public void addKeyLineDivider() {
         if (!ViewHelper.isTablet(getContext())) {
             Resources resources = getResources();
             addItemDecoration(new InsetDividerDecoration(resources.getDimensionPixelSize(R.dimen.divider_height),
-                    resources.getDimensionPixelSize(R.dimen.keyline_1), ContextCompat.getColor(getContext(), R.color.divider)));
+                    resources.getDimensionPixelSize(R.dimen.keyline_2), ContextCompat.getColor(getContext(), R.color.divider)));
         }
     }
 

File: app/src/main/java/com/fastaccess/provider/scheme/StackBuilderSchemeParser.java
Patch:
@@ -16,6 +16,7 @@
 import com.fastaccess.ui.modules.code.CodeViewerView;
 import com.fastaccess.ui.modules.gists.gist.GistView;
 import com.fastaccess.ui.modules.main.MainView;
+import com.fastaccess.ui.modules.repos.RepoPagerMvp;
 import com.fastaccess.ui.modules.repos.RepoPagerView;
 import com.fastaccess.ui.modules.repos.code.commit.details.CommitPagerView;
 import com.fastaccess.ui.modules.repos.issues.issue.details.IssuePagerView;
@@ -146,7 +147,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
         }
         if (issueNumber < 1) return null;
         return TaskStackBuilder.create(context)
-                .addNextIntentWithParentStack(RepoPagerView.createIntent(context, repo, owner))
+                .addNextIntentWithParentStack(RepoPagerView.createIntent(context, repo, owner, RepoPagerMvp.PULL_REQUEST))
                 .addNextIntent(PullRequestPagerView.createIntent(context, repo, owner, issueNumber));
     }
 
@@ -177,7 +178,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
         }
         if (issueNumber < 1) return null;
         return TaskStackBuilder.create(context)
-                .addNextIntentWithParentStack(RepoPagerView.createIntent(context, repo, owner))
+                .addNextIntentWithParentStack(RepoPagerView.createIntent(context, repo, owner, RepoPagerMvp.ISSUES))
                 .addNextIntent(IssuePagerView.createIntent(context, repo, owner, issueNumber));
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -35,7 +35,7 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
     private final String repoId;
     private RepoModel repo;
 
-    RepoPagerPresenter(final String repoId, final String login) {
+    RepoPagerPresenter(final String repoId, final String login, int navTyp) {
         if (!InputHelper.isEmpty(login) && !InputHelper.isEmpty(repoId())) {
             throw new IllegalArgumentException("arguments cannot be empty");
         }
@@ -47,7 +47,7 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
                     manageSubscription(this.repo.persist().observe().subscribe());
                     sendToView(view -> {
                         view.onInitRepo();
-                        view.onNavigationChanged(RepoPagerMvp.CODE);
+                        view.onNavigationChanged(navTyp);
                     });
                     onCheckStarring();
                     onCheckWatching();

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathView.java
Patch:
@@ -76,7 +76,6 @@ public static RepoFilePathView newInstance(@NonNull String login, @NonNull Strin
             onBackClicked();
             if (codePagerCallback != null) {
                 codePagerCallback.onBranchChanged(ref);
-                showMessage(R.string.commits, R.string.commits_reflected);
             }
         }
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -86,8 +86,8 @@ public static MilestoneView newInstance(@NonNull String login, @NonNull String r
         }
         toolbar.setTitle(R.string.milestone);
         toolbar.setOnMenuItemClickListener(item -> onAddMilestone());
-        toolbar.inflateMenu(R.menu.add_menu);
-        toolbar.setNavigationIcon(R.drawable.ic_back);
+        toolbar.inflateMenu(R.menu.done_menu);
+        toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(v -> getActivity().finish());
         adapter = new MilestonesAdapter(getPresenter().getMilestones());
         adapter.setListener(getPresenter());

File: app/src/main/java/com/fastaccess/ui/base/BaseActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
+import android.support.design.widget.AppBarLayout;
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -45,7 +46,7 @@ public abstract class BaseActivity<V extends BaseMvp.FAView, P extends BasePrese
 
     @State boolean isProgressShowing;
     @Nullable @BindView(R.id.toolbar) Toolbar toolbar;
-    @Nullable @BindView(R.id.toolbarShadow) View shadowView;
+    @Nullable @BindView(R.id.appbar) AppBarLayout shadowView;
     @Nullable @BindView(R.id.adView) AdView adView;
     private Toast toast;
 
@@ -204,7 +205,7 @@ protected void setToolbarIcon(@DrawableRes int res) {
     }
 
     protected void hideShowShadow(boolean show) {
-        if (shadowView != null) shadowView.setVisibility(show ? View.VISIBLE : View.GONE);
+        if (shadowView != null) shadowView.setElevation(show ? getResources().getDimension(R.dimen.spacing_micro) : 0);
     }
 
     protected void changeStatusBarColor(boolean isTransparent) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsView.java
Patch:
@@ -56,6 +56,7 @@ public static GistCommentsView newInstance(@NonNull String gistId) {
         gistId = getArguments().getString("gistId");
         recycler.setEmptyView(stateLayout, refresh);
         if (gistId == null) return;
+        recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new CommentsAdapter(getPresenter().getComments());

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -60,6 +60,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
         super.onCreate(savedInstanceState);
         refresh.setOnRefreshListener(this);
         webView.getSettings().setSaveFormData(false);
+        webView.getSettings().setJavaScriptEnabled(true);
         webView.setWebChromeClient(new WebChromeClient() {
             @Override public void onProgressChanged(WebView view, int progress) {
                 super.onProgressChanged(view, progress);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsView.java
Patch:
@@ -54,6 +54,7 @@ public static CommitCommentsView newInstance(@NonNull String login, @NonNull Str
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         if (savedInstanceState == null) getPresenter().onFragmentCreated(getArguments());
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new CommentsAdapter(getPresenter().getComments());

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -30,7 +30,6 @@ public class MilestoneView extends BaseFragment<MilestoneMvp.View, MilestonePres
     public static final String TAG = MilestoneView.class.getSimpleName();
 
     @BindView(R.id.toolbar) Toolbar toolbar;
-    @BindView(R.id.toolbarShadow) View toolbarShadow;
     @BindView(R.id.appbar) AppBarLayout appbar;
     @BindView(R.id.recycler) DynamicRecyclerView recycler;
     @BindView(R.id.refresh) AppbarRefreshLayout refresh;

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsView.java
Patch:
@@ -56,6 +56,7 @@ public static IssueCommentsView newInstance(@NonNull String login, @NonNull Stri
     @Override protected void onFragmentCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         if (savedInstanceState == null) getPresenter().onFragmentCreated(getArguments());
         recycler.setEmptyView(stateLayout, refresh);
+        recycler.setItemViewCacheSize(10);
         refresh.setOnRefreshListener(this);
         stateLayout.setOnReloadListener(this);
         adapter = new CommentsAdapter(getPresenter().getComments());

File: app/src/main/java/com/fastaccess/ui/widgets/dialog/MessageDialogView.java
Patch:
@@ -72,8 +72,8 @@ public interface MessageDialogViewActionCallback {
             if (msg != null) {
                 message.setVisibility(View.GONE);
                 prettifyWebView.setVisibility(View.VISIBLE);
-                prettifyWebView.setNestedScrollingEnabled(false);
                 prettifyWebView.setGithubContent(msg, null, true);
+                prettifyWebView.setNestedScrollingEnabled(false);
                 return;
             }
         }

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/InsetDividerDecoration.java
Patch:
@@ -29,8 +29,7 @@ class InsetDividerDecoration extends RecyclerView.ItemDecoration {
 
     @Override public void onDrawOver(Canvas canvas, RecyclerView parent, RecyclerView.State state) {
         int childCount = parent.getChildCount();
-        if (childCount <= 2) return;
-
+        if (childCount < 2) return;
         RecyclerView.LayoutManager lm = parent.getLayoutManager();
         float[] lines = new float[childCount * 4];
         boolean hasDividers = false;

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -71,9 +71,9 @@ public interface RepoService {
     @NonNull @DELETE("user/subscriptions/{owner}/{repo}")
     Observable<Response<Boolean>> unwatchRepo(@Path("owner") String owner, @Path("repo") String repo);
 
-    @NonNull @GET("repos/{owner}/{repo}/commits/{branch}")
+    @NonNull @GET("repos/{owner}/{repo}/commits")
     Observable<Pageable<CommitModel>> getCommits(@Path("owner") String owner, @Path("repo") String repo,
-                                                 @NonNull @Path("branch") String branch, @Query("page") int page);
+                                                 @NonNull @Query("sha") String branch, @Query("page") int page);
 
     @NonNull @GET("repos/{owner}/{repo}/releases")
     @Headers("Accept: application/vnd.github.VERSION.full+json")

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -69,7 +69,7 @@ public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context
                                                                    @NonNull String defaultBranch) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.readme), ViewerView.newInstance(url, true)),
                 new FragmentPagerAdapterModel(context.getString(R.string.files), RepoFilePathView.newInstance(login, repoId, null, defaultBranch)),
-                new FragmentPagerAdapterModel(context.getString(R.string.commits), RepoCommitsView.newInstance(repoId, login)),
+                new FragmentPagerAdapterModel(context.getString(R.string.commits), RepoCommitsView.newInstance(repoId, login, defaultBranch)),
                 new FragmentPagerAdapterModel(context.getString(R.string.releases), RepoReleasesView.newInstance(repoId, login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.contributors), RepoContributorsView.newInstance(repoId, login)))
                 .collect(Collectors.toList());

File: app/src/main/java/com/fastaccess/data/dao/PullRequestModel.java
Patch:
@@ -125,7 +125,9 @@ public static Observable<PullRequestModel> getPullRequest(int number, @NonNull S
         UserModel merger = (isMerge && pullRequest.getMergedBy() != null) ? pullRequest.getMergedBy() : pullRequest.getUser();
         String status = !isMerge ? context.getString(pullRequest.getState().getStatus()) : context.getString(R.string.merged);
         SpannableBuilder builder = SpannableBuilder.builder();
-        builder.append(merger.getLogin())
+        builder.bold("#" + pullRequest.getNumber())
+                .append(" ")
+                .append(merger.getLogin())
                 .append(" ")
                 .append(status)
                 .append(" ");

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -54,16 +54,18 @@ Observable<Response<Boolean>> hasPullRequestBeenMerged(@Path("owner") String own
                                                            @Path("number") long number);
 
     @PATCH("repos/{owner}/{repo}/pulls/{number}")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<PullRequestModel> editPullRequest(@Path("owner") String owner, @Path("repo") String repo,
                                                  @Path("number") int number,
                                                  @Body IssueRequestModel issue);
 
     @PATCH("repos/{owner}/{repo}/issues/{number}")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<PullRequestModel> editIssue(@Path("owner") String owner, @Path("repo") String repo,
                                            @Path("number") int number,
                                            @Body IssueRequestModel issue);
 
     @POST("repos/{owner}/{repo}/issues/{number}/assignees")
     Observable<PullRequestModel> putAssignees(@Path("owner") String owner, @Path("repo") String repo,
-                                        @Path("number") int number, @Body AssigneesRequestModel body);
+                                              @Path("number") int number, @Body AssigneesRequestModel body);
 }

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -75,7 +75,7 @@ public interface RepoService {
     Observable<Pageable<CommitModel>> getCommits(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/releases")
-    @Headers("Accept: application/vnd.github.VERSION.html")
+    @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<Pageable<ReleasesModel>> getReleases(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/contributors")
@@ -89,10 +89,12 @@ Observable<Pageable<CommentsModel>> getCommitComments(@NonNull @Path("owner") St
                                                           @NonNull @Path("sha") String ref, @Query("page") int page);
 
     @POST("repos/{owner}/{repo}/commits/{sha}/comments")
+    @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<CommentsModel> postCommitComment(@NonNull @Path("owner") String owner, @NonNull @Path("repo") String repo,
                                                 @NonNull @Path("sha") String ref, @Body CommentRequestModel model);
 
     @PATCH("repos/{owner}/{repo}/comments/{id}")
+    @Headers("Accept: application/vnd.github.VERSION.full+json")
     Observable<CommentsModel> editCommitComment(@Path("owner") String owner, @Path("repo") String repo, @Path("id") long id,
                                                 @Body CommentRequestModel body);
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -43,6 +43,8 @@ public void bind(@NonNull IssueModel issueModel, boolean withAvatar) {
             CharSequence data = ParseDateFormat.getTimeAgo(issueModel.getState() == IssueState.open
                                                            ? issueModel.getCreatedAt() : issueModel.getClosedAt());
             details.setText(SpannableBuilder.builder()
+                    .bold("#" + issueModel.getNumber())
+                    .append(" ")
                     .append(itemView.getResources().getString(issueModel.getState().getStatus()))
                     .append(" ")
                     .append(data));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -22,8 +22,6 @@
 
 import java.util.ArrayList;
 
-import rx.Observable;
-
 /**
  * Created by Kosh on 03 Dec 2016, 3:48 PM
  */
@@ -64,12 +62,12 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
             lastPage = Integer.MAX_VALUE;
             sendToView(view -> view.getLoadMore().reset());
         }
-        setCurrentPage(page);
         if (page > lastPage || lastPage == 0) {
             sendToView(RepoIssuesMvp.View::hideProgress);
             return;
         }
         if (repoId == null || login == null) return;
+        setCurrentPage(page);
         makeRestCall(RestProvider.getIssueService().getRepositoryIssues(login, repoId, issueState.name(), page),
                 issues -> {
                     if (getCurrentPage() == 1) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesView.java
Patch:
@@ -110,6 +110,7 @@ public static RepoIssuesView newInstance(@NonNull String repoId, @NonNull String
     @NonNull @Override public OnLoadMore<IssueState> getLoadMore() {
         if (onLoadMore == null) {
             onLoadMore = new OnLoadMore<>(getPresenter());
+            onLoadMore.setParameter(((IssueState) getArguments().getSerializable(BundleConstant.EXTRA_TWO)));
         }
         return onLoadMore;
     }

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -5,7 +5,7 @@
 import android.support.v7.preference.PreferenceManager;
 
 import com.fastaccess.helper.TypeFaceHelper;
-import com.fastaccess.provider.tasks.NotificationJobTask;
+import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 import com.fastaccess.provider.uil.UILProvider;
 import com.siimkinks.sqlitemagic.SqliteMagic;
 
@@ -25,7 +25,7 @@ public class App extends Application {
         SqliteMagic.init(this);
         UILProvider.initUIL(this);
         TypeFaceHelper.generateTypeface(this);
-        NotificationJobTask.scheduleJob(this);//schedule the job for the notifications
+        NotificationSchedulerJobTask.scheduleJob(this);//schedule the job for the notifications
     }
 
     @NonNull public static App getInstance() {

File: app/src/main/java/com/fastaccess/provider/tasks/notification/NotificationSchedulerJobTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.provider.tasks;
+package com.fastaccess.provider.tasks.notification;
 
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -35,7 +35,7 @@
  * Created by Kosh on 19 Feb 2017, 6:32 PM
  */
 
-public class NotificationJobTask extends JobService {
+public class NotificationSchedulerJobTask extends JobService {
     private final static String EVERY_30_MINS = "every_30_mins";
 
     @Override public boolean onStartJob(JobParameters job) {
@@ -74,7 +74,7 @@ public static void scheduleJob(@NonNull Context context, int duration, boolean c
                 .setRecurring(true)
                 .setConstraints(Constraint.ON_ANY_NETWORK)
                 .setTrigger(Trigger.executionWindow(10, duration))
-                .setService(NotificationJobTask.class);
+                .setService(NotificationSchedulerJobTask.class);
         dispatcher.mustSchedule(builder.build());
     }
 

File: app/src/main/java/com/fastaccess/ui/base/mvp/BaseMvp.java
Patch:
@@ -34,7 +34,7 @@ interface FAView extends TiView, MessageDialogView.MessageDialogViewActionCallba
     }
 
     interface FAPresenter {
-        void manageSubscription(@Nullable Subscription subscription);
+        void manageSubscription(@Nullable Subscription... subscription);
 
         boolean isApiCalled();
 

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -25,7 +25,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
     private boolean apiCalled;
     private RxTiPresenterSubscriptionHandler subscriptionHandler = new RxTiPresenterSubscriptionHandler(this);
 
-    @Override public void manageSubscription(@Nullable Subscription subscription) {
+    @Override public void manageSubscription(@Nullable Subscription... subscription) {
         if (subscription != null) {
             subscriptionHandler.manageSubscription(subscription);
         }
@@ -54,7 +54,6 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
         manageSubscription(
                 RxHelper.getObserver(observable)
                         .doOnSubscribe(this::onSubscribed)
-                        .doOnNext(onNext)
                         .subscribe(onNext, this::onError, () -> apiCalled = true)
         );
     }

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -123,7 +123,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
             return true;
         } else if (item.getItemId() == R.id.notifications) {
             ViewHelper.tintDrawable(item.getIcon(), ContextCompat.getColor(this, R.color.primary_text));
-            startActivity(new Intent(this,NotificationActivityView.class));
+            startActivity(new Intent(this, NotificationActivityView.class));
             return true;
         }
         return super.onOptionsItemSelected(item);
@@ -206,7 +206,6 @@ private void onInit(@Nullable Bundle savedInstanceState) {
                         .beginTransaction()
                         .replace(R.id.container, FeedsView.newInstance(), FeedsView.TAG)
                         .commit();
-                bottomNavigation.setDefaultSelectedIndex(0);
             }
             LoginModel userModel = LoginModel.getUser();
             if (userModel != null) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsMvp.java
Patch:
@@ -36,8 +36,6 @@ interface Presenter extends BaseViewHolder.OnItemClickListener<NotificationThrea
 
         @NonNull ArrayList<NotificationThreadModel> getNotifications();
 
-        void onReadAll();
-
         void showAllNotifications(boolean showAll);
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsFragment.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.helper.PrefGetter;
-import com.fastaccess.provider.tasks.NotificationJobTask;
+import com.fastaccess.provider.tasks.notification.NotificationSchedulerJobTask;
 
 /**
  * Created by Kosh on 02 Mar 2017, 7:51 PM
@@ -16,7 +16,7 @@ public class SettingsFragment extends PreferenceFragmentCompat {
     @Override public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         addPreferencesFromResource(R.xml.fasthub_settings);
         findPreference("notificationTime").setOnPreferenceChangeListener((preference, newValue) -> {
-            NotificationJobTask.scheduleJob(getActivity().getApplicationContext(), PrefGetter.getNotificationTaskDuration(getActivity()
+            NotificationSchedulerJobTask.scheduleJob(getActivity().getApplicationContext(), PrefGetter.getNotificationTaskDuration(getActivity()
                     .getApplicationContext()), true);
             return true;
         });

File: app/src/main/java/com/fastaccess/data/dao/PayloadModel.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.siimkinks.sqlitemagic.annotation.Column;
 import com.siimkinks.sqlitemagic.annotation.Id;
+import com.siimkinks.sqlitemagic.annotation.IgnoreColumn;
 import com.siimkinks.sqlitemagic.annotation.Table;
 
 import lombok.Getter;
@@ -24,6 +25,7 @@ public class PayloadModel implements Parcelable {
     @Column String action;
     @Column(onDeleteCascade = true, handleRecursively = false) RepoModel forkee;
     @Column(onDeleteCascade = true, handleRecursively = false) IssueModel issue;
+    @IgnoreColumn private PullRequestModel pullRequest;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueDetailsViewHolder.java
Patch:
@@ -45,6 +45,8 @@ public static IssueDetailsViewHolder newInstance(ViewGroup viewGroup, BaseRecycl
         if (!InputHelper.isEmpty(issueModel.getBodyHtml())) {
             description.setNestedScrollingEnabled(false);
             description.setGithubContent(issueModel.getBodyHtml(), issueModel.getHtmlUrl(), true);
+        } else {
+            description.setGithubContent(itemView.getResources().getString(R.string.no_description_provided), null, true);
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestDetailsViewHolder.java
Patch:
@@ -45,6 +45,8 @@ public static PullRequestDetailsViewHolder newInstance(ViewGroup viewGroup, Base
         if (!InputHelper.isEmpty(issueModel.getBodyHtml())) {
             description.setNestedScrollingEnabled(false);
             description.setGithubContent(issueModel.getBodyHtml(), issueModel.getHtmlUrl(), true);
+        } else {
+            description.setGithubContent(itemView.getResources().getString(R.string.no_description_provided), null, true);
         }
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -108,6 +108,8 @@ class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Pr
         } else {
             if (item.getPayload() != null && item.getPayload().getIssue() != null) {
                 SchemeParser.launchUri(v.getContext(), Uri.parse(item.getPayload().getIssue().getHtmlUrl()));
+            } else if (item.getPayload() != null && item.getPayload().getPullRequest() != null) {
+                SchemeParser.launchUri(v.getContext(), Uri.parse(item.getPayload().getPullRequest().getHtmlUrl()));
             } else {
                 RepoModel repoModel = item.getRepo();
                 String name = InputHelper.isEmpty(repoModel.getName()) ? repoModel.getFullName() : repoModel.getName();

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerMvp.java
Patch:
@@ -63,7 +63,6 @@ interface View extends BaseMvp.FAView {
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BottomNavigation.OnMenuItemSelectionListener {
-        void onActivityCreated(@Nullable Intent intent);
 
         @NonNull String repoId();
 

File: app/src/main/java/com/fastaccess/provider/tasks/NotificationJobTask.java
Patch:
@@ -94,7 +94,7 @@ private void onNotifyUser(@NonNull List<NotificationThreadModel> notificationThr
             Intent intent = new Intent(this, NotificationActivityView.class);
             intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent,
-                    PendingIntent.FLAG_UPDATE_CURRENT);
+                    PendingIntent.FLAG_CANCEL_CURRENT);
             Notification notification = new NotificationCompat.Builder(context)
                     .setSmallIcon(R.drawable.ic_announcement)
                     .setContentTitle(context.getString(R.string.notifictions))

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssueTimelineViewHolder.java
Patch:
@@ -60,7 +60,7 @@ public static IssueTimelineViewHolder newInstance(ViewGroup viewGroup, BaseRecyc
                 spannableBuilder
                         .append(" ")
                         .background(SpannableBuilder.builder()
-                                .append("   " + labelModel.getName() + "    ",
+                                .append("  " + labelModel.getName() + "  ",
                                         new RoundBackgroundSpan(color, 4)), color);
             } else if (event == IssueEventType.assigned || event == IssueEventType.unassigned) {
                 spannableBuilder

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/PullRequestTimelineViewHolder.java
Patch:
@@ -60,7 +60,7 @@ public static PullRequestTimelineViewHolder newInstance(ViewGroup viewGroup, Bas
                 spannableBuilder
                         .append(" ")
                         .background(SpannableBuilder.builder()
-                                .append("   " + labelModel.getName() + "    ",
+                                .append("  " + labelModel.getName() + "  ",
                                         new RoundBackgroundSpan(color, 4)), color);
             } else if (event == IssueEventType.assigned || event == IssueEventType.unassigned) {
                 spannableBuilder

File: app/src/main/java/com/fastaccess/ui/base/mvp/BaseMvp.java
Patch:
@@ -40,7 +40,7 @@ interface FAPresenter {
 
         void onSubscribed();
 
-        <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable);
+        void onError(@NonNull Throwable throwable);
 
         <T> void makeRestCall(@NonNull Observable<T> observable, @NonNull Action1<T> onNext);
     }

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -40,9 +40,9 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable Object parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/comments/GistCommentsPresenter.java
Patch:
@@ -45,10 +45,10 @@ class GistCommentsPresenter extends BasePresenter<GistCommentsMvp.View> implemen
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         //noinspection ConstantConditions
         sendToView(view -> onWorkOffline(view.getLoadMore().getParameter()));
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -46,9 +46,9 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
         onItemClick(position, v, item);
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onWorkOffline() {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsView.java
Patch:
@@ -89,6 +89,7 @@ public static NotificationsView newInstance() {
         recycler.setEmptyView(stateLayout, refresh);
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addDivider();
         if (savedInstanceState == null || !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersPresenter.java
Patch:
@@ -40,13 +40,13 @@ class ProfileFollowersPresenter extends BasePresenter<ProfileFollowersMvp.View>
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         sendToView(view -> {
             if (view.getLoadMore().getParameter() != null) {
                 onWorkOffline(view.getLoadMore().getParameter());
             }
         });
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersView.java
Patch:
@@ -10,7 +10,6 @@
 import com.fastaccess.R;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.UsersAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -59,6 +58,7 @@ public static ProfileFollowersView newInstance(@NonNull String username) {
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addKeyLineDivider();
         if (getPresenter().getFollowers().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingView.java
Patch:
@@ -10,7 +10,6 @@
 import com.fastaccess.R;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.UsersAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -59,6 +58,7 @@ public static ProfileFollowingView newInstance(@NonNull String username) {
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addKeyLineDivider();
         if (getPresenter().getFollowing().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -39,13 +39,13 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         sendToView(view -> {
             if (view.getLoadMore().getParameter() != null) {
                 onWorkOffline(view.getLoadMore().getParameter());
             }
         });
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsView.java
Patch:
@@ -57,6 +57,7 @@ public static ProfileGistsView newInstance(@NonNull String login) {
         getLoadMore().setCurrent_page(getPresenter().getCurrentPage(), getPresenter().getPreviousTotal());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addDivider();
         if (getPresenter().getGists().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/overview/ProfileOverviewPresenter.java
Patch:
@@ -20,11 +20,11 @@ class ProfileOverviewPresenter extends BasePresenter<ProfileOverviewMvp.View> im
 
     private String login;
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         if (!InputHelper.isEmpty(login)) {
             onWorkOffline(login);
         }
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onFragmentCreated(@Nullable Bundle bundle) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -45,13 +45,13 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         sendToView(view -> {
             if (view.getLoadMore().getParameter() != null) {
                 onWorkOffline(view.getLoadMore().getParameter());
             }
         });
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposView.java
Patch:
@@ -10,7 +10,6 @@
 import com.fastaccess.R;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.ReposAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -59,6 +58,7 @@ public static ProfileReposView newInstance(@NonNull String username) {
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -43,13 +43,13 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         sendToView(view -> {
             if (view.getLoadMore().getParameter() != null) {
                 onWorkOffline(view.getLoadMore().getParameter());
             }
         });
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredView.java
Patch:
@@ -10,7 +10,6 @@
 import com.fastaccess.R;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.Bundler;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.rest.loadmore.OnLoadMore;
 import com.fastaccess.ui.adapter.ReposAdapter;
 import com.fastaccess.ui.base.BaseFragment;
@@ -59,6 +58,7 @@ public static ProfileStarredView newInstance(@NonNull String username) {
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
         recycler.addOnScrollListener(getLoadMore());
+        recycler.addDivider();
         if (getPresenter().getRepos().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -38,9 +38,9 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
     private String repoId;
     private RepoModel repo;
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onActivityCreated(@Nullable Intent intent) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -47,9 +47,9 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable Object parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerPresenter.java
Patch:
@@ -27,9 +27,9 @@ class CommitPagerPresenter extends BasePresenter<CommitPagerMvp.View> implements
         return commitModel;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline(sha, repoId, login);
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onActivityCreated(@Nullable Intent intent) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -42,9 +42,9 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
         onItemClick(position, v, item);
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @NonNull @Override public ArrayList<RepoFilesModel> getFiles() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesPresenter.java
Patch:
@@ -46,9 +46,9 @@ class RepoReleasesPresenter extends BasePresenter<RepoReleasesMvp.View> implemen
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable Object parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -54,9 +54,9 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable IssueState parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -48,9 +48,9 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
         return issueModel;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline(issueNumber, login, repoId);
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onActivityCreated(@Nullable Intent intent) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsPresenter.java
Patch:
@@ -48,9 +48,9 @@ class IssueCommentsPresenter extends BasePresenter<IssueCommentsMvp.View> implem
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
 
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable String parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/events/IssueDetailsPresenter.java
Patch:
@@ -39,9 +39,9 @@ class IssueDetailsPresenter extends BasePresenter<IssueDetailsMvp.View> implemen
         }
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onWorkOffline() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -53,9 +53,9 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
         this.previousTotal = previousTotal;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onCallApi(int page, @Nullable IssueState parameter) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerPresenter.java
Patch:
@@ -50,9 +50,9 @@ class PullRequestPagerPresenter extends BasePresenter<PullRequestPagerMvp.View>
         return pullRequest;
     }
 
-    @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
+    @Override public void onError(@NonNull Throwable throwable) {
         onWorkOffline();
-        return super.onError(throwable, observable);
+        super.onError(throwable);
     }
 
     @Override public void onActivityCreated(@Nullable Intent intent) {

File: app/src/main/java/com/fastaccess/ui/modules/search/code/SearchCodeView.java
Patch:
@@ -57,6 +57,7 @@ public static SearchCodeView newInstance() {
         adapter = new SearchCodeAdapter(getPresenter().getCodes());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addDivider();
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getCodes().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/search/issues/SearchIssuesView.java
Patch:
@@ -55,6 +55,7 @@ public static SearchIssuesView newInstance() {
         adapter = new IssuesAdapter(getPresenter().getIssues());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addDivider();
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getIssues().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/fastaccess/ui/modules/search/users/SearchUsersView.java
Patch:
@@ -54,6 +54,7 @@ public static SearchUsersView newInstance() {
         adapter = new UsersAdapter(getPresenter().getUsers());
         adapter.setListener(getPresenter());
         recycler.setAdapter(adapter);
+        recycler.addDivider();
         if (!InputHelper.isEmpty(searchQuery) && getPresenter().getUsers().isEmpty() && !getPresenter().isApiCalled()) {
             onRefresh();
         }

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -100,7 +100,7 @@ public void setSource(@NonNull String source) {
     }
 
     public void setGithubContent(@NonNull String source, @Nullable String baseUrl) {
-        setGithubContent(source, baseUrl, true);
+        setGithubContent(source, baseUrl, false);
     }
 
     public void setGithubContent(@NonNull String source, @Nullable String baseUrl, boolean wrap) {

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.annimon.stream.IntStream;
 import com.fastaccess.helper.InputHelper;
+import com.zzhoujay.markdown.MarkDown;
 
 /**
  * Created by Kosh on 24 Nov 2016, 7:43 PM
@@ -28,7 +29,7 @@ public class MarkDownProvider {
     private MarkDownProvider() {}
 
     public static void setMdText(@NonNull TextView textView, @NonNull String value) {
-        textView.setText(value);
+        textView.setText(MarkDown.fromMarkdown(value, null, textView));
     }
 
     public static void addList(@NonNull EditText editText, @NonNull String list) {

File: app/src/main/java/com/fastaccess/ui/widgets/AvatarLayout.java
Patch:
@@ -85,6 +85,7 @@ public AvatarLayout(@NonNull Context context, @Nullable AttributeSet attrs, @Att
 
     @Override public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
         avatar.setImageResource(R.drawable.ic_github_black);
+        setBackgroundColor(Color.TRANSPARENT);
     }
 
     @Override public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/create/CreateMilestoneView.java
Patch:
@@ -73,7 +73,7 @@ public static CreateMilestoneView newInstance(@NonNull String login, @NonNull St
             return;
         }
         toolbar.setTitle(R.string.create_milestone);
-        toolbar.setNavigationIcon(R.drawable.ic_back);
+        toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setOnMenuItemClickListener(item -> {
             dismiss();
             return true;

File: app/src/main/java/com/fastaccess/ui/modules/settings/SettingsBottomSheetDialog.java
Patch:
@@ -33,7 +33,7 @@ public static void show(@NonNull FragmentManager fragmentManager) {
     @Override public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         toolbar.setTitle(R.string.settings);
-        toolbar.setNavigationIcon(R.drawable.ic_arrow_drop_down);
+        toolbar.setNavigationIcon(R.drawable.ic_clear);
         toolbar.setNavigationOnClickListener(v -> dismiss());
         if (savedInstanceState == null) {
             getChildFragmentManager()

File: app/src/main/java/com/fastaccess/data/dao/ReleasesModel.java
Patch:
@@ -39,7 +39,7 @@ public class ReleasesModel implements Parcelable {
     @Column String tagName;
     @Column String targetCommitish;
     @Column String name;
-    @Column String body;
+    @SerializedName("body_html") @Column String body;
     @Column boolean draft;
     @Column boolean preRelease;
     @Column Date createdAt;

File: app/src/main/java/com/fastaccess/data/service/IssueService.java
Patch:
@@ -34,7 +34,7 @@ Observable<Pageable<IssueModel>> getRepositoryIssues(@Path("owner") String owner
                                                          @Query("state") String state, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/issues/{number}")
-//    @Headers("Accept: application/vnd.github.VERSION.html")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<IssueModel> getIssue(@Path("owner") String owner, @Path("repo") String repo,
                                     @Path("number") int number);
 
@@ -61,7 +61,7 @@ Observable<IssueModel> editIssue(@Path("owner") String owner, @Path("repo") Stri
 
 
     @GET("repos/{owner}/{repo}/issues/{number}/comments")
-//    @Headers("Accept: application/vnd.github.VERSION.html")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<Pageable<CommentsModel>> getIssueComments(@Path("owner") String owner,
                                                          @Path("repo") String repo,
                                                          @Path("number") int number,

File: app/src/main/java/com/fastaccess/data/service/PullRequestService.java
Patch:
@@ -12,6 +12,7 @@
 import retrofit2.Response;
 import retrofit2.http.Body;
 import retrofit2.http.GET;
+import retrofit2.http.Headers;
 import retrofit2.http.PATCH;
 import retrofit2.http.POST;
 import retrofit2.http.PUT;
@@ -30,6 +31,7 @@ Observable<Pageable<PullRequestModel>> getPullRequests(@Path("owner") String own
                                                            @Query("state") String state, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/pulls/{number}")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<PullRequestModel> getPullRequest(@Path("owner") String owner, @Path("repo") String repo, @Path("number") long number);
 
     @PUT("repos/{owner}/{repo}/pulls/{number}/merge")

File: app/src/main/java/com/fastaccess/data/service/RepoService.java
Patch:
@@ -75,6 +75,7 @@ public interface RepoService {
     Observable<Pageable<CommitModel>> getCommits(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/releases")
+    @Headers("Accept: application/vnd.github.VERSION.html")
     Observable<Pageable<ReleasesModel>> getReleases(@Path("owner") String owner, @Path("repo") String repo, @Query("page") int page);
 
     @GET("repos/{owner}/{repo}/contributors")

File: app/src/main/java/com/fastaccess/provider/uil/UILImageGetter.java
Patch:
@@ -6,6 +6,7 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.support.v4.content.ContextCompat;
+import android.text.Html;
 import android.view.View;
 import android.widget.TextView;
 
@@ -15,9 +16,7 @@
 
 import java.io.InputStream;
 
-import in.uncod.android.bypass.Bypass;
-
-public class UILImageGetter implements Bypass.ImageGetter {
+public class UILImageGetter implements Html.ImageGetter {
     private TextView container;
 
     public UILImageGetter(TextView view) {

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -44,6 +44,7 @@ class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Pr
             return;
         }
         setCurrentPage(page);
+        if (LoginModel.getUser() == null) return;// I can't understand how this could possibly be reached lol.
         makeRestCall(RestProvider.getUserService().getReceivedEvents(LoginModel.getUser().getLogin(), page),
                 response -> {
                     lastPage = response.getLast();

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsMvp.java
Patch:
@@ -8,6 +8,8 @@
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.widgets.recyclerview.BaseViewHolder;
 
+import net.grandcentrix.thirtyinch.callonmainthread.CallOnMainThread;
+
 import java.util.ArrayList;
 
 /**
@@ -20,7 +22,7 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener {
 
         @NonNull OnLoadMore getLoadMore();
 
-        void onNotifyAdapter();
+      @CallOnMainThread void onNotifyAdapter();
 
         void onTypeChanged(boolean unread);
 

File: app/src/main/java/com/fastaccess/data/dao/ReleasesAssetsModel.java
Patch:
@@ -12,7 +12,7 @@
  * Created by Kosh on 31 Dec 2016, 1:28 PM
  */
 
-@Getter @Setter class ReleasesAssetsModel implements Parcelable {
+@Getter @Setter public class ReleasesAssetsModel implements Parcelable {
     private String url;
     private String browserDownloadUrl;
     private long id;

File: app/src/main/java/com/fastaccess/data/dao/ReleasesModel.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.Parcelable;
 import android.support.annotation.NonNull;
 
+import com.google.gson.annotations.SerializedName;
 import com.siimkinks.sqlitemagic.Delete;
 import com.siimkinks.sqlitemagic.ReleasesModelTable;
 import com.siimkinks.sqlitemagic.Select;
@@ -32,8 +33,8 @@ public class ReleasesModel implements Parcelable {
     @Column String htmlUrl;
     @Column String assetsUrl;
     @Column String uploadUrl;
-    @Column String tarballUrl;
-    @Column String zipBallUrl;
+    @SerializedName("tarball_url") @Column String tarballUrl;
+    @SerializedName("zipball_url") @Column String zipBallUrl;
     @Column @Id(autoIncrement = false) long id;
     @Column String tagName;
     @Column String targetCommitish;

File: app/src/main/java/com/fastaccess/data/dao/FragmentPagerAdapterModel.java
Patch:
@@ -65,9 +65,10 @@ private FragmentPagerAdapterModel(String title, Fragment fragment) {
     }
 
     public static List<FragmentPagerAdapterModel> buildForRepoCode(@NonNull Context context, @NonNull String repoId,
-                                                                   @NonNull String login, @NonNull String url) {
+                                                                   @NonNull String login, @NonNull String url,
+                                                                   @NonNull String defaultBranch) {
         return Stream.of(new FragmentPagerAdapterModel(context.getString(R.string.readme), ViewerView.newInstance(url, true)),
-                new FragmentPagerAdapterModel(context.getString(R.string.files), RepoFilePathView.newInstance(login, repoId, null)),
+                new FragmentPagerAdapterModel(context.getString(R.string.files), RepoFilePathView.newInstance(login, repoId, null, defaultBranch)),
                 new FragmentPagerAdapterModel(context.getString(R.string.commits), RepoCommitsView.newInstance(repoId, login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.releases), RepoReleasesView.newInstance(repoId, login)),
                 new FragmentPagerAdapterModel(context.getString(R.string.contributors), RepoContributorsView.newInstance(repoId, login)))

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesMvp.java
Patch:
@@ -37,7 +37,8 @@ interface Presenter extends BaseMvp.FAPresenter,
 
         void onCallApi();
 
-        void onInitDataAndRequest(@NonNull String login, @NonNull String repoId, @NonNull String path, @NonNull String ref, boolean clear);
+        void onInitDataAndRequest(@NonNull String login, @NonNull String repoId, @NonNull String path,
+                                  @NonNull String ref, boolean clear);
 
         @Nullable ArrayList<RepoFilesModel> getCachedFiles(@NonNull String url, @NonNull String ref);
     }

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesView.java
Patch:
@@ -87,7 +87,8 @@ public class RepoFilesView extends BaseFragment<RepoFilesMvp.View, RepoFilesPres
         popup.show();
     }
 
-    @Override public void onSetData(@NonNull String login, @NonNull String repoId, @NonNull String path, @NonNull String ref, boolean clear) {
+    @Override public void onSetData(@NonNull String login, @NonNull String repoId, @NonNull String path,
+                                    @NonNull String ref, boolean clear) {
         getPresenter().onInitDataAndRequest(login, repoId, path, ref, clear);
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/paths/RepoFilePathMvp.java
Patch:
@@ -31,7 +31,7 @@ interface View extends BaseMvp.FAView {
 
         void onBackPressed();
 
-        void setBranchesData(@NonNull List<BranchesModel> branches);
+        void setBranchesData(@NonNull List<BranchesModel> branches, boolean firstTime);
     }
 
     interface Presenter extends BaseMvp.FAPresenter,
@@ -48,6 +48,8 @@ interface Presenter extends BaseMvp.FAPresenter,
         @NonNull ArrayList<RepoFilesModel> getPaths();
 
         @NonNull ArrayList<BranchesModel> getBranches();
+
+        String getDefaultBranch();
     }
 
 

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -50,7 +50,7 @@ public class RestProvider {
     private final static Gson gson = new GsonBuilder()
             .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)
             .excludeFieldsWithModifiers(Modifier.FINAL, Modifier.TRANSIENT, Modifier.STATIC)
-            .setDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
+            .setDateFormat("yyyy-MM-dd HH:mm:ss")
             .setPrettyPrinting()
             .create();
 

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -14,6 +14,7 @@
 import com.fastaccess.data.dao.SimpleUrlsModel;
 import com.fastaccess.data.dao.types.EventsType;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -90,7 +91,7 @@ class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Pr
 
     @Override public void onWorkOffline() {
         if (eventsModels.isEmpty()) {
-            manageSubscription(EventsModel.getEvents().subscribe(modelList -> {
+            manageSubscription(RxHelper.getObserver(EventsModel.getEvents()).subscribe(modelList -> {
                 if (modelList != null) {
                     eventsModels.addAll(modelList);
                     sendToView(FeedsMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/gists/GistsPresenter.java
Patch:
@@ -5,6 +5,7 @@
 import android.view.View;
 
 import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.gists.gist.GistView;
@@ -72,7 +73,7 @@ class GistsPresenter extends BasePresenter<GistsMvp.View> implements GistsMvp.Pr
 
     @Override public void onWorkOffline() {
         if (gistsModels.isEmpty()) {
-            manageSubscription(GistsModel.getGists().subscribe(gistsModels1 -> {
+            manageSubscription(RxHelper.getObserver(GistsModel.getGists()).subscribe(gistsModels1 -> {
                 gistsModels.addAll(gistsModels1);
                 sendToView(GistsMvp.View::onNotifyAdapter);
             }));

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistPresenter.java
Patch:
@@ -121,7 +121,7 @@ class GistPresenter extends BasePresenter<GistMvp.View> implements GistMvp.Prese
 
     @Override public void onWorkOffline(@NonNull String gistId) {
         if (gist == null) {
-            manageSubscription(GistsModel.getGist(gistId)
+            manageSubscription(RxHelper.getObserver(GistsModel.getGist(gistId))
                     .subscribe(gistsModel -> {
                         this.gist = gistsModel;
                         sendToView(GistMvp.View::onSetupDetails);

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -55,7 +55,7 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
 
     @Override public void onWorkOffline() {
         if (notifications.isEmpty()) {
-            manageSubscription(NotificationThreadModel.getNotifications()
+            manageSubscription(RxHelper.getObserver(NotificationThreadModel.getNotifications())
                     .subscribe(models -> {
                         if (models != null) {
                             notifications.addAll(models);

File: app/src/main/java/com/fastaccess/ui/modules/profile/followers/ProfileFollowersPresenter.java
Patch:
@@ -5,6 +5,7 @@
 import android.view.View;
 
 import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -79,7 +80,7 @@ class ProfileFollowersPresenter extends BasePresenter<ProfileFollowersMvp.View>
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (users.isEmpty()) {
-            manageSubscription(UserModel.getFollowers(login).subscribe(userModels -> {
+            manageSubscription(RxHelper.getObserver(UserModel.getFollowers(login)).subscribe(userModels -> {
                 users.addAll(userModels);
                 sendToView(ProfileFollowersMvp.View::onNotifyAdapter);
             }));

File: app/src/main/java/com/fastaccess/ui/modules/profile/following/ProfileFollowingPresenter.java
Patch:
@@ -5,6 +5,7 @@
 import android.view.View;
 
 import com.fastaccess.data.dao.UserModel;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -79,7 +80,7 @@ class ProfileFollowingPresenter extends BasePresenter<ProfileFollowingMvp.View>
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (users.isEmpty()) {
-            manageSubscription(UserModel.getFollowing(login).subscribe(userModels -> {
+            manageSubscription(RxHelper.getObserver(UserModel.getFollowing(login)).subscribe(userModels -> {
                 users.addAll(userModels);
                 sendToView(ProfileFollowingMvp.View::onNotifyAdapter);
             }));

File: app/src/main/java/com/fastaccess/ui/modules/profile/gists/ProfileGistsPresenter.java
Patch:
@@ -5,6 +5,7 @@
 import android.view.View;
 
 import com.fastaccess.data.dao.GistsModel;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -78,7 +79,7 @@ class ProfileGistsPresenter extends BasePresenter<ProfileGistsMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (gistsModels.isEmpty()) {
-            manageSubscription(GistsModel.getMyGists(login).subscribe(gistsModels1 -> {
+            manageSubscription(RxHelper.getObserver(GistsModel.getMyGists(login)).subscribe(gistsModels1 -> {
                 gistsModels.addAll(gistsModels1);
                 sendToView(ProfileGistsMvp.View::onNotifyAdapter);
             }));

File: app/src/main/java/com/fastaccess/ui/modules/profile/repos/ProfileReposPresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.LoginModel;
 import com.fastaccess.data.dao.NameParser;
 import com.fastaccess.data.dao.RepoModel;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.repos.RepoPagerView;
@@ -89,7 +90,7 @@ class ProfileReposPresenter extends BasePresenter<ProfileReposMvp.View> implemen
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageSubscription(RepoModel.getMyRepos(login).subscribe(repoModels -> {
+            manageSubscription(RxHelper.getObserver(RepoModel.getMyRepos(login)).subscribe(repoModels -> {
                 repos.addAll(repoModels);
                 sendToView(ProfileReposMvp.View::onNotifyAdapter);
             }));

File: app/src/main/java/com/fastaccess/ui/modules/profile/starred/ProfileStarredPresenter.java
Patch:
@@ -7,6 +7,7 @@
 import com.fastaccess.data.dao.NameParser;
 import com.fastaccess.data.dao.RepoModel;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 import com.fastaccess.ui.modules.repos.RepoPagerView;
@@ -82,7 +83,7 @@ class ProfileStarredPresenter extends BasePresenter<ProfileStarredMvp.View> impl
 
     @Override public void onWorkOffline(@NonNull String login) {
         if (repos.isEmpty()) {
-            manageSubscription(RepoModel.getStarred(login).subscribe(repoModels -> {
+            manageSubscription(RxHelper.getObserver(RepoModel.getStarred(login)).subscribe(repoModels -> {
                 repos.addAll(repoModels);
                 Logger.e(repoModels);
                 sendToView(ProfileStarredMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/RepoPagerPresenter.java
Patch:
@@ -200,7 +200,7 @@ class RepoPagerPresenter extends BasePresenter<RepoPagerMvp.View> implements Rep
 
     @Override public void onWorkOffline() {
         if (!InputHelper.isEmpty(login()) && !InputHelper.isEmpty(repoId())) {
-            manageSubscription(RepoModel.getRepo(repoId)
+            manageSubscription(RxHelper.getObserver(RepoModel.getRepo(repoId))
                     .subscribe(repoModel -> {
                         repo = repoModel;
                         sendToView(view -> {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/RepoCommitsPresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.CommitModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -88,7 +89,7 @@ class RepoCommitsPresenter extends BasePresenter<RepoCommitsMvp.View> implements
 
     @Override public void onWorkOffline() {
         if (commits.isEmpty()) {
-            manageSubscription(CommitModel.getCommits(repoId, login)
+            manageSubscription(RxHelper.getObserver(CommitModel.getCommits(repoId, login))
                     .subscribe(models -> {
                         commits.addAll(models);
                         sendToView(RepoCommitsMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerPresenter.java
Patch:
@@ -7,6 +7,7 @@
 import com.fastaccess.data.dao.CommitModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -55,7 +56,7 @@ class CommitPagerPresenter extends BasePresenter<CommitPagerMvp.View> implements
     }
 
     @Override public void onWorkOffline(@NonNull String sha, @NonNull String repoId, @NonNull String login) {
-        manageSubscription(CommitModel.getCommit(sha, repoId, login)
+        manageSubscription(RxHelper.getObserver(CommitModel.getCommit(sha, repoId, login))
                 .subscribe(commit -> {
                     commitModel = commit;
                     sendToView(CommitPagerMvp.View::onSetup);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/comments/CommitCommentsPresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.data.dao.CommentsModel;
 import com.fastaccess.data.dao.LoginModel;
 import com.fastaccess.helper.BundleConstant;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -88,7 +89,7 @@ class CommitCommentsPresenter extends BasePresenter<CommitCommentsMvp.View> impl
 
     @Override public void onWorkOffline() {
         if (comments.isEmpty()) {
-            manageSubscription(CommentsModel.getCommitComments(repoId(), login(), sha)
+            manageSubscription(RxHelper.getObserver(CommentsModel.getCommitComments(repoId(), login(), sha))
                     .subscribe(models -> {
                         if (models != null) {
                             comments.addAll(models);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/contributors/RepoContributorsPresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.UserModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -75,7 +76,7 @@ class RepoContributorsPresenter extends BasePresenter<RepoContributorsMvp.View>
 
     @Override public void onWorkOffline() {
         if (users.isEmpty()) {
-            manageSubscription(UserModel.getContributors(repoId)
+            manageSubscription(RxHelper.getObserver(UserModel.getContributors(repoId))
                     .subscribe(userModels -> {
                         users.addAll(userModels);
                         sendToView(RepoContributorsMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesPresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.data.dao.RepoFilesModel;
 import com.fastaccess.data.dao.RepoPathsManager;
 import com.fastaccess.data.dao.types.FilesType;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -52,7 +53,7 @@ class RepoFilesPresenter extends BasePresenter<RepoFilesMvp.View> implements Rep
 
     @Override public void onWorkOffline() {
         if ((repoId == null || login == null) || !files.isEmpty()) return;
-        manageSubscription(RepoFilesModel.getFiles(login, repoId).subscribe(
+        manageSubscription(RxHelper.getObserver(RepoFilesModel.getFiles(login, repoId)).subscribe(
                 models -> {
                     files.addAll(models);
                     sendToView(RepoFilesMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.data.dao.MarkdownModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -69,7 +70,7 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
 
     @Override public void onWorkOffline() {
         if (downloadedStream == null) {
-            manageSubscription(FileModel.get(url)
+            manageSubscription(RxHelper.getObserver(FileModel.get(url))
                     .subscribe(fileModel -> {
                         if (fileModel != null) {
                             isImage = MarkDownProvider.isImage(fileModel.getFullUrl());

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesPresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.data.dao.ReleasesModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -84,7 +85,7 @@ class RepoReleasesPresenter extends BasePresenter<RepoReleasesMvp.View> implemen
 
     @Override public void onWorkOffline() {
         if (releases.isEmpty()) {
-            manageSubscription(ReleasesModel.get(repoId, login)
+            manageSubscription(RxHelper.getObserver(ReleasesModel.get(repoId, login))
                     .subscribe(releasesModels -> {
                         releases.addAll(releasesModels);
                         sendToView(RepoReleasesMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/RepoIssuesPresenter.java
Patch:
@@ -14,6 +14,7 @@
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -91,7 +92,7 @@ class RepoIssuesPresenter extends BasePresenter<RepoIssuesMvp.View> implements R
 
     @Override public void onWorkOffline() {
         if (issues.isEmpty()) {
-            manageSubscription(IssueModel.getIssues(repoId, login, issueState)
+            manageSubscription(RxHelper.getObserver(IssueModel.getIssues(repoId, login, issueState))
                     .subscribe(issueModel -> {
                         issues.addAll(issueModel);
                         sendToView(RepoIssuesMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/comments/IssueCommentsPresenter.java
Patch:
@@ -9,6 +9,7 @@
 import com.fastaccess.data.dao.CommentsModel;
 import com.fastaccess.data.dao.LoginModel;
 import com.fastaccess.helper.BundleConstant;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -88,7 +89,7 @@ class IssueCommentsPresenter extends BasePresenter<IssueCommentsMvp.View> implem
 
     @Override public void onWorkOffline() {
         if (comments.isEmpty()) {
-            manageSubscription(CommentsModel.getIssueComments(repoId(), login(), String.valueOf(number))
+            manageSubscription(RxHelper.getObserver(CommentsModel.getIssueComments(repoId(), login(), String.valueOf(number)))
                     .subscribe(models -> {
                         if (models != null) {
                             comments.addAll(models);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/events/IssueDetailsPresenter.java
Patch:
@@ -10,6 +10,7 @@
 import com.fastaccess.data.dao.IssueEventModel;
 import com.fastaccess.data.dao.IssueModel;
 import com.fastaccess.helper.BundleConstant;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -45,7 +46,8 @@ class IssueDetailsPresenter extends BasePresenter<IssueDetailsMvp.View> implemen
 
     @Override public void onWorkOffline() {
         if (events.isEmpty() || events.size() == 1) {
-            manageSubscription(IssueEventModel.get(issueModel.getRepoId(), issueModel.getLogin(), String.valueOf(issueModel.getNumber()))
+            manageSubscription(RxHelper.getObserver(IssueEventModel.get(issueModel.getRepoId(),
+                    issueModel.getLogin(), String.valueOf(issueModel.getNumber())))
                     .subscribe(
                             models -> {
                                 if (models != null) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/RepoPullRequestPresenter.java
Patch:
@@ -13,6 +13,7 @@
 import com.fastaccess.helper.Bundler;
 import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.Logger;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -91,7 +92,7 @@ class RepoPullRequestPresenter extends BasePresenter<RepoPullRequestMvp.View> im
 
     @Override public void onWorkOffline() {
         if (pullRequests.isEmpty()) {
-            manageSubscription(PullRequestModel.getPullRequests(repoId, login, issueState)
+            manageSubscription(RxHelper.getObserver(PullRequestModel.getPullRequests(repoId, login, issueState))
                     .subscribe(pulls -> {
                         pullRequests.addAll(pulls);
                         sendToView(RepoPullRequestMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/commits/PullRequestCommitsPresenter.java
Patch:
@@ -8,6 +8,7 @@
 import com.fastaccess.data.dao.CommitModel;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
@@ -90,7 +91,7 @@ class PullRequestCommitsPresenter extends BasePresenter<PullRequestCommitsMvp.Vi
 
     @Override public void onWorkOffline() {
         if (commits.isEmpty()) {
-            manageSubscription(CommitModel.getCommits(repoId, login, number)
+            manageSubscription(RxHelper.getObserver(CommitModel.getCommits(repoId, login, number))
                     .subscribe(models -> {
                         commits.addAll(models);
                         sendToView(PullRequestCommitsMvp.View::onNotifyAdapter);

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -66,7 +66,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
                 if (progress == 100) {
                     refresh.setRefreshing(false);
                 } else if (progress < 100) {
-
+                    refresh.setRefreshing(true);
                 }
             }
         });

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsMvp.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.repos.labels;
+package com.fastaccess.ui.modules.repos.extras.labels;
 
 import android.support.annotation.NonNull;
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/labels/LabelsView.java
Patch:
@@ -1,4 +1,4 @@
-package com.fastaccess.ui.modules.repos.labels;
+package com.fastaccess.ui.modules.repos.extras.labels;
 
 import android.content.Context;
 import android.os.Bundle;
@@ -89,7 +89,7 @@ public static LabelsView newInstance(@NonNull List<LabelModel> models) {
         } else {
             getSelectionMap().remove(position);
         }
-        adapter.notifyItemChanged(position);
+        adapter.notifyDataSetChanged();
     }
 
     @OnClick({R.id.cancel, R.id.ok}) public void onClick(View view) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/extras/milestone/MilestoneView.java
Patch:
@@ -88,6 +88,8 @@ public static MilestoneView newInstance(@NonNull String login, @NonNull String r
         toolbar.setTitle(R.string.milestone);
         toolbar.setOnMenuItemClickListener(item -> onAddMilestone());
         toolbar.inflateMenu(R.menu.add_menu);
+        toolbar.setNavigationIcon(R.drawable.ic_back);
+        toolbar.setNavigationOnClickListener(v -> getActivity().finish());
         adapter = new MilestonesAdapter(getPresenter().getMilestones());
         adapter.setListener(getPresenter());
         recycler.setEmptyView(stateLayout, refresh);

File: app/src/main/java/com/fastaccess/helper/PrefGetter.java
Patch:
@@ -92,6 +92,8 @@ public static int getNotificationTaskDuration(@NonNull Context context) {
                 return 5 * 60;
             } else if (s.equals(context.getString(R.string.one_minute))) {
                 return 60;
+            } else if (s.equals(context.getString(R.string.turn_off))) {
+                return -1;
             }
         }
         return 0;

File: app/src/main/java/com/fastaccess/ui/base/BaseDialogFragment.java
Patch:
@@ -52,7 +52,6 @@ public abstract class BaseDialogFragment<V extends BaseMvp.FAView, P extends Bas
 
     @Override public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setStyle(STYLE_NO_TITLE, 0);
         if (savedInstanceState != null && !savedInstanceState.isEmpty()) {
             Icepick.restoreInstanceState(this, savedInstanceState);
         }

File: app/src/main/java/com/fastaccess/data/dao/CommitModel.java
Patch:
@@ -139,8 +139,10 @@ protected CommitModel(Parcel in) {
         this.author = in.readParcelable(UserModel.class.getClassLoader());
         this.committer = in.readParcelable(UserModel.class.getClassLoader());
         this.user = in.readParcelable(UserModel.class.getClassLoader());
+        parents = new CommitListModel();
         in.readList(this.parents, this.parents.getClass().getClassLoader());
         this.stats = in.readParcelable(GithubState.class.getClassLoader());
+        files = new CommitFileListModel();
         in.readList(this.files, this.files.getClass().getClassLoader());
         this.htmlUrl = in.readString();
         this.login = in.readString();

File: app/src/main/java/com/fastaccess/data/dao/PullRequestModel.java
Patch:
@@ -7,7 +7,6 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.types.IssueState;
-import com.fastaccess.helper.InputHelper;
 import com.fastaccess.helper.ParseDateFormat;
 import com.fastaccess.ui.widgets.SpannableBuilder;
 import com.siimkinks.sqlitemagic.Delete;
@@ -120,8 +119,8 @@ public static Observable<PullRequestModel> getPullRequest(int number, @NonNull S
     }
 
     @NonNull public static SpannableBuilder getMergeBy(@NonNull PullRequestModel pullRequest, @NonNull Context context) {
-        UserModel merger = pullRequest.getMergedBy() != null ? pullRequest.getMergedBy() : pullRequest.getBase().getUser();
-        boolean isMerge = pullRequest.isMerged() || !InputHelper.isEmpty(pullRequest.getMergedAt());
+        boolean isMerge = pullRequest.isMerged();
+        UserModel merger = (isMerge && pullRequest.getMergedBy() != null) ? pullRequest.getMergedBy() : pullRequest.getUser();
         String status = !isMerge ? context.getString(pullRequest.getState().getStatus()) : context.getString(R.string.merged);
         SpannableBuilder builder = SpannableBuilder.builder();
         builder.append(merger.getLogin())

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsMvp.java
Patch:
@@ -23,6 +23,8 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener {
         void onNotifyAdapter();
 
         void onTypeChanged(boolean unread);
+
+        void onClick(@NonNull String url);
     }
 
     interface Presenter extends BaseViewHolder.OnItemClickListener<NotificationThreadModel>,

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -1,6 +1,5 @@
 package com.fastaccess.ui.modules.notification;
 
-import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
@@ -9,7 +8,6 @@
 import com.fastaccess.data.dao.Pageable;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
-import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.base.mvp.BaseMvp;
 import com.fastaccess.ui.base.mvp.presenter.BasePresenter;
 
@@ -42,7 +40,7 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
                     });
         }
         if (item.getSubject() != null && item.getSubject().getUrl() != null) {
-            SchemeParser.launchUri(v.getContext(), Uri.parse(item.getSubject().getUrl()));
+            if (getView() != null) getView().onClick(item.getSubject().getUrl());
         }
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerMvp.java
Patch:
@@ -62,6 +62,8 @@ interface Presenter extends BaseMvp.FAPresenter {
         String getLogin();
 
         String getRepoId();
+
+        void onUpdateIssue(@NonNull IssueModel issueModel);
     }
 
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/events/IssueDetailsMvp.java
Patch:
@@ -23,6 +23,7 @@ interface View extends BaseMvp.FAView, SwipeRefreshLayout.OnRefreshListener, and
         void onNotifyAdapter();
 
         @NonNull OnLoadMore getLoadMore();
+
     }
 
     interface Presenter extends BaseMvp.FAPresenter, BaseViewHolder.OnItemClickListener<IssueEventAdapterModel>,

File: app/src/main/java/com/fastaccess/helper/InputHelper.java
Patch:
@@ -62,7 +62,7 @@ public static String toNA(@Nullable String value) {
     public static long toLong(TextView textView) {
         if (!isEmpty(textView)) {
             try {
-                return Long.valueOf(toString(textView));
+                return Long.valueOf(toString(textView).replace(".", "").replaceAll(",", ""));
             } catch (NumberFormatException ignored) {}
         }
         return 0;

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/RepoFilesViewHolder.java
Patch:
@@ -40,7 +40,7 @@ public static RepoFilesViewHolder newInstance(ViewGroup viewGroup, BaseRecyclerA
     @Override public void bind(@NonNull RepoFilesModel filesModel) {
         contentTypeImage.setContentDescription(String.format("%s %s", filesModel.getName(), file));
         title.setText(filesModel.getName());
-        if (filesModel.getType() != null) {
+        if (filesModel.getType() != null && filesModel.getType().getIcon() != 0) {
             contentTypeImage.setImageResource(filesModel.getType().getIcon());
             if (filesModel.getType() == FilesType.file) {
                 size.setText(Formatter.formatFileSize(size.getContext(), filesModel.getSize()));

File: app/src/main/java/com/fastaccess/ui/adapter/viewholder/IssuesViewHolder.java
Patch:
@@ -44,9 +44,7 @@ public void bind(@NonNull IssueModel issueModel, boolean withAvatar) {
                                                            ? issueModel.getCreatedAt() : issueModel.getClosedAt());
             details.setText(SpannableBuilder.builder()
                     .append(itemView.getResources().getString(issueModel.getState().getStatus()))
-                    .append(" ").append(by).append(" ")
-                    .append(issueModel.getState() == IssueState.closed
-                            ? issueModel.getClosedBy().getLogin() : issueModel.getUser().getLogin()).append(" ")
+                    .append(" ")
                     .append(data));
         }
         if (withAvatar) {

File: app/src/main/java/com/fastaccess/ui/base/BaseFragment.java
Patch:
@@ -55,7 +55,6 @@ public abstract class BaseFragment<V extends BaseMvp.FAView, P extends BasePrese
         if (savedInstanceState != null && !savedInstanceState.isEmpty()) {
             Icepick.restoreInstanceState(this, savedInstanceState);
         }
-        setHasOptionsMenu(true);
     }
 
     @Nullable @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsPresenter.java
Patch:
@@ -36,7 +36,7 @@ public class NotificationsPresenter extends BasePresenter<NotificationsMvp.View>
                             .markAsRead(String.valueOf(item.getId())),
                     booleanResponse -> {
                         item.setUnread(booleanResponse.code() == 205);
-                        manageSubscription(item.save().subscribe());
+                        item.persist().execute();
                         notifications.remove(position);
                         sendToView(NotificationsMvp.View::onNotifyAdapter);
                     });

File: app/src/main/java/com/fastaccess/ui/modules/parser/LinksParserActivity.java
Patch:
@@ -8,7 +8,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.LoginModel;
-import com.fastaccess.provider.scheme.SchemeParser;
+import com.fastaccess.provider.scheme.StackBuilderSchemeParser;
 import com.fastaccess.ui.modules.login.LoginView;
 
 /**
@@ -46,7 +46,7 @@ private void onCreate(Intent intent) {
     }
 
     private void onUriReceived() {
-        SchemeParser.launchUri(this, getIntent());
+        StackBuilderSchemeParser.launchUri(this, getIntent());
         finish();
     }
 }

File: app/src/main/java/com/fastaccess/App.java
Patch:
@@ -17,7 +17,6 @@
 
 public class App extends Application {
     private static App instance;
-
     private AndDown andDown;
 
     @Override public void onCreate() {

File: app/src/main/java/com/fastaccess/helper/ParseDateFormat.java
Patch:
@@ -36,7 +36,6 @@ public String format(Date date) {
     public static CharSequence getTimeAgo(@Nullable Date parsedDate) {
         if (parsedDate != null) {
             long toLocalTime = parsedDate.getTime() + getInstance().timeZone.getRawOffset() + getInstance().timeZone.getDSTSavings();
-            Logger.e(INSTANCE.timeZone.getID());
             if (INSTANCE.timeZone.getID().equalsIgnoreCase("UTC")) {
                 toLocalTime = parsedDate.getTime();
             }

File: app/src/main/java/com/fastaccess/provider/markdown/MarkDownProvider.java
Patch:
@@ -11,6 +11,7 @@
 import com.commonsware.cwac.anddown.AndDown;
 import com.fastaccess.App;
 import com.fastaccess.helper.InputHelper;
+import com.fastaccess.provider.uil.UILImageGetter;
 
 /**
  * Created by Kosh on 24 Nov 2016, 7:43 PM
@@ -42,7 +43,7 @@ public static void setMdText(@NonNull TextView textView, @NonNull String value)
                         AndDown.HOEDOWN_EXT_SUPERSCRIPT |
                         AndDown.HOEDOWN_EXT_DISABLE_INDENTED_CODE, 0);
         //noinspection deprecation
-        textView.setText(Html.fromHtml(text));
+        textView.setText(Html.fromHtml(text, new UILImageGetter(textView), null));
     }
 
 //    public static RichText convertTextToMarkDown(@NonNull TextView textView, @NonNull String text) {

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -56,7 +56,7 @@ public class RestProvider {
 
     private static Cache provideCache() {
         if (cache == null) {
-            int cacheSize = 20 * 1024 * 1024;
+            int cacheSize = 20 * 1024 * 1024; //20MB
             cache = new Cache(App.getInstance().getCacheDir(), cacheSize);
         }
         return cache;
@@ -86,7 +86,7 @@ private static OkHttpClient provideOkHttpClient(boolean forLogin) {
                     Request request = requestBuilder.build();
                     return chain.proceed(request);
                 });
-//        client.cache(provideCache());//disable cache, since we are going offline.
+        client.cache(provideCache());//disable cache, since we are going offline.
         return client.build();
     }
 

File: app/src/main/java/com/fastaccess/ui/modules/main/MainView.java
Patch:
@@ -1,7 +1,5 @@
 package com.fastaccess.ui.modules.main;
 
-import android.app.NotificationManager;
-import android.content.Context;
 import android.content.Intent;
 import android.graphics.Typeface;
 import android.os.Bundle;
@@ -23,6 +21,7 @@
 import com.fastaccess.R;
 import com.fastaccess.data.dao.LoginModel;
 import com.fastaccess.data.dao.NotificationThreadModel;
+import com.fastaccess.helper.AppHelper;
 import com.fastaccess.helper.BundleConstant;
 import com.fastaccess.helper.PrefGetter;
 import com.fastaccess.helper.TypeFaceHelper;
@@ -96,7 +95,7 @@ public class MainView extends BaseActivity<MainMvp.View, MainPresenter> implemen
         onHideShowFab();
         hideShowShadow(navType != MainMvp.PROFILE);
         enableAds.setChecked(PrefGetter.isAdsEnabled());
-        ((NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE)).cancel(BundleConstant.REQUEST_CODE);//cancel notification if any.
+        AppHelper.cancelNotification(this);
     }
 
     @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {

File: app/src/main/java/com/fastaccess/ui/modules/notification/NotificationsBottomSheet.java
Patch:
@@ -30,6 +30,7 @@ public static NotificationsBottomSheet newInstance() {
     @Override public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         toolbar.setNavigationIcon(R.drawable.ic_arrow_drop_down);
+        toolbar.setNavigationContentDescription(getString(R.string.back));
         toolbar.setTitle(R.string.notifictions);
         toolbar.setNavigationOnClickListener(v -> dismiss());
         if (savedInstanceState == null) {

File: app/src/main/java/com/fastaccess/ui/adapter/GistsAdapter.java
Patch:
@@ -28,10 +28,10 @@ public GistsAdapter(@NonNull ArrayList<GistsModel> gistsModels, boolean isForPro
     }
 
     @Override protected GistsViewHolder viewHolder(ViewGroup parent, int viewType) {
-        return new GistsViewHolder(GistsViewHolder.getView(parent), this);
+        return GistsViewHolder.newInstance(parent, this, isForProfile);
     }
 
     @Override protected void onBindView(GistsViewHolder holder, int position) {
-        holder.bind(getItem(position), isForProfile);
+        holder.bind(getItem(position));
     }
 }

File: app/src/main/java/com/fastaccess/ui/adapter/ReposAdapter.java
Patch:
@@ -29,10 +29,10 @@ public ReposAdapter(@NonNull List<RepoModel> data, boolean isStarred, boolean wi
     }
 
     @Override protected ReposViewHolder viewHolder(ViewGroup parent, int viewType) {
-        return ReposViewHolder.newInstance(parent, this);
+        return ReposViewHolder.newInstance(parent, this, isStarred, withImage);
     }
 
     @Override protected void onBindView(ReposViewHolder holder, int position) {
-        holder.bind(getItem(position), isStarred, withImage);
+        holder.bind(getItem(position));
     }
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -120,8 +120,8 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
         IssueModel currentIssue = getIssue();
         if (currentIssue != null) {
             IssueRequestModel requestModel = IssueRequestModel.clone(currentIssue);
-            manageSubscription(RxHelper.getObserver(RestProvider.getIssueService().editIssue(currentIssue.getUser().getLogin(),
-                    currentIssue.getRepoId(), currentIssue.getNumber(), requestModel))
+            manageSubscription(RxHelper.getObserver(RestProvider.getIssueService().editIssue(login, repoId,
+                    issueNumber, requestModel))
                     .doOnSubscribe(() -> sendToView(view -> view.showProgress(0)))
                     .doOnNext(issue -> {
                         if (issue != null) {

File: app/src/main/java/com/fastaccess/data/dao/RepoModel.java
Patch:
@@ -5,6 +5,7 @@
 import android.support.annotation.NonNull;
 
 import com.annimon.stream.Stream;
+import com.google.gson.annotations.SerializedName;
 import com.siimkinks.sqlitemagic.Delete;
 import com.siimkinks.sqlitemagic.RepoModelTable;
 import com.siimkinks.sqlitemagic.Select;
@@ -101,7 +102,7 @@ public class RepoModel implements Parcelable {
     @Column(onDeleteCascade = true, handleRecursively = false) RepoModel source;
     @Column(onDeleteCascade = true) LicenseModel license;
     @Column int networkCount;
-    @Column int subsCount;
+    @SerializedName("subscribers_count") @Column int subsCount;
     @Column String starredUser;
     @Column String reposOwner;
 

File: app/src/main/java/com/fastaccess/helper/InputHelper.java
Patch:
@@ -20,11 +20,11 @@ private static boolean isWhiteSpaces(String s) {
     }
 
     public static boolean isEmpty(String text) {
-        return text == null || TextUtils.isEmpty(text) || isWhiteSpaces(text);
+        return text == null || TextUtils.isEmpty(text) || isWhiteSpaces(text) || text.equalsIgnoreCase("null");
     }
 
     public static boolean isEmpty(Object text) {
-        return text == null || TextUtils.isEmpty(text.toString()) || isWhiteSpaces(text.toString());
+        return text == null || isEmpty(text.toString());
     }
 
     public static boolean isEmpty(EditText text) {

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -198,7 +198,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
                 fullUrl = "https://raw.githubusercontent.com/" + segments.get(0) + "/" + segments.get(1) + "/" +
                         segments.get(segments.size() - 2) + "/" + uri.getLastPathSegment();
             }
-            return CodeViewerView.createIntent(context, fullUrl);
+            if (fullUrl != null) return CodeViewerView.createIntent(context, fullUrl);
         }
         return null;
     }

File: app/src/main/java/com/fastaccess/ui/modules/code/CodeViewerView.java
Patch:
@@ -32,7 +32,7 @@ public class CodeViewerView extends BaseActivity {
     @State String url;
 
     public static void startActivity(@NonNull Context context, @NonNull String url) {
-        context.startActivity(createIntent(context, url));
+        if (!InputHelper.isEmpty(url)) context.startActivity(createIntent(context, url));
     }
 
     public static Intent createIntent(@NonNull Context context, @NonNull String url) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/files/RepoFilesView.java
Patch:
@@ -56,12 +56,13 @@ public class RepoFilesView extends BaseFragment<RepoFilesMvp.View, RepoFilesPres
                 getParent().onAppendPath(model);
             }
         } else {
-            if (model.getSize() > FileHelper.ONE_MB && !MarkDownProvider.isImage(model.getDownloadUrl())) {
+            String url = InputHelper.isEmpty(model.getDownloadUrl()) ? model.getUrl() : model.getDownloadUrl();
+            if (model.getSize() > FileHelper.ONE_MB && !MarkDownProvider.isImage(url)) {
                 MessageDialogView.newInstance(getString(R.string.big_file), getString(R.string.big_file_description),
                         Bundler.start().put(BundleConstant.EXTRA, model.getDownloadUrl()).end())
                         .show(getChildFragmentManager(), "MessageDialogView");
             } else {
-                CodeViewerView.startActivity(getContext(), model.getDownloadUrl());
+                CodeViewerView.startActivity(getContext(), url);
             }
         }
     }

File: app/src/main/java/com/prettifier/pretty/PrettifyWebView.java
Patch:
@@ -17,7 +17,6 @@
 import android.webkit.WebViewClient;
 
 import com.fastaccess.helper.InputHelper;
-import com.fastaccess.helper.Logger;
 import com.fastaccess.provider.markdown.MarkDownProvider;
 import com.fastaccess.provider.scheme.SchemeParser;
 import com.fastaccess.ui.modules.code.CodeViewerView;
@@ -148,7 +147,7 @@ private class WebClient extends WebViewClient {
     }
 
     private void startActivity(Uri url) {
-        Logger.e(url);
+        if (url == null) return;
         if (MarkDownProvider.isImage(url.toString())) {
             CodeViewerView.startActivity(getContext(), url.toString());
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/gists/gist/GistView.java
Patch:
@@ -65,7 +65,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String gist
 
     @OnClick(R.id.headerTitle) void onTitleClick() {
         if (getPresenter().getGist() != null && !InputHelper.isEmpty(getPresenter().getGist().getDescription()))
-            showMessage(getString(R.string.details), getPresenter().getGist().getDescription());
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getGist().getDescription())
+                    .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 
     @OnClick({R.id.startGist, R.id.forkGist}) public void onGistActions(View view) {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/commit/details/CommitPagerView.java
Patch:
@@ -28,6 +28,7 @@
 import com.fastaccess.ui.widgets.AvatarLayout;
 import com.fastaccess.ui.widgets.FontTextView;
 import com.fastaccess.ui.widgets.ViewPagerView;
+import com.fastaccess.ui.widgets.dialog.MessageDialogView;
 
 import java.util.Date;
 
@@ -69,7 +70,8 @@ public static void createIntentForOffline(@NonNull Context context, @NonNull Com
 
     @OnClick(R.id.headerTitle) void onTitleClick() {
         if (getPresenter().getCommit() != null && !InputHelper.isEmpty(getPresenter().getCommit().getGitCommit().getMessage()))
-            showMessage(getString(R.string.details), getPresenter().getCommit().getGitCommit().getMessage());
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getCommit().getGitCommit().getMessage())
+                    .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 
     @OnClick(R.id.fab) void onAddComment() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/releases/RepoReleasesView.java
Patch:
@@ -119,7 +119,7 @@ public static RepoReleasesView newInstance(@NonNull String repoId, @NonNull Stri
     @Override public void onShowDetails(@NonNull ReleasesModel item) {
         if (!InputHelper.isEmpty(item.getBody())) {
             MessageDialogView.newInstance(!InputHelper.isEmpty(item.getName()) ? item.getName() : item.getTagName(),
-                    item.getBody(), true).show(getChildFragmentManager(), "MessageDialogView");
+                    item.getBody(), true).show(getChildFragmentManager(), MessageDialogView.TAG);
         } else {
             showErrorMessage(getString(R.string.no_body));
         }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerView.java
Patch:
@@ -71,7 +71,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.headerTitle) void onTitleClick() {
         if (getPresenter().getIssue() != null && !InputHelper.isEmpty(getPresenter().getIssue().getTitle()))
-            showMessage(getString(R.string.details), getPresenter().getIssue().getTitle());
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getIssue().getTitle())
+                    .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 
     @OnClick(R.id.fab) void onAddComment() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerView.java
Patch:
@@ -68,7 +68,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
 
     @OnClick(R.id.headerTitle) void onTitleClick() {
         if (getPresenter().getPullRequest() != null && !InputHelper.isEmpty(getPresenter().getPullRequest().getTitle()))
-            showMessage(getString(R.string.details), getPresenter().getPullRequest().getTitle());
+            MessageDialogView.newInstance(getString(R.string.details), getPresenter().getPullRequest().getTitle())
+                    .show(getSupportFragmentManager(), MessageDialogView.TAG);
     }
 
     @OnClick(R.id.fab) void onAddComment() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerMvp.java
Patch:
@@ -41,6 +41,8 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         boolean isOwner();
 
+        boolean isRepoOwner();
+
         boolean isLocked();
 
         void onHandleConfirmDialog(@Nullable Bundle bundle);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerView.java
Patch:
@@ -116,7 +116,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         getMenuInflater().inflate(R.menu.issue_menu, menu);
         menu.findItem(R.id.closeIssue).setVisible(getPresenter().isOwner());
         menu.findItem(R.id.lockIssue).setVisible(getPresenter().isOwner());
-        menu.findItem(R.id.labels).setVisible(getPresenter().isOwner());
+        menu.findItem(R.id.labels).setVisible(getPresenter().isRepoOwner());
         return super.onCreateOptionsMenu(menu);
     }
 
@@ -154,7 +154,7 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         Logger.e(isOwner);
         menu.findItem(R.id.closeIssue).setVisible(isOwner);
         menu.findItem(R.id.lockIssue).setVisible(isOwner);
-        menu.findItem(R.id.labels).setVisible(isOwner);
+        menu.findItem(R.id.labels).setVisible(getPresenter().isRepoOwner());
         if (isOwner) {
             //noinspection ConstantConditions ( getIssue at this stage is not null but AS doesn't know. )
             closeIssue.setTitle(getPresenter().getIssue().getState() == IssueState.closed ? getString(R.string.re_open) : getString(R.string.close));

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerMvp.java
Patch:
@@ -27,6 +27,8 @@ interface View extends BaseMvp.FAView, LabelsMvp.SelectedLabelsListener {
         void showErrorIssueActionMsg(boolean isClose);
 
         void onLabelsRetrieved(@NonNull List<LabelModel> items);
+
+        void onLabelsAdded();
     }
 
     interface Presenter extends BaseMvp.FAPresenter {

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -176,6 +176,6 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
         makeRestCall(RestProvider.getIssueService().putLabels(login, repoId, issueNumber,
                 Stream.of(labels).filter(value -> value != null && value.getName() != null)
                         .map(LabelModel::getName).collect(Collectors.toList())),
-                labelModels -> sendToView(view -> view.showMessage(R.string.success, R.string.labels_added_successfully)));
+                labelModels -> sendToView(view -> view.onLabelsAdded()));
     }
 }

File: app/src/main/java/com/fastaccess/provider/scheme/SchemeParser.java
Patch:
@@ -95,7 +95,7 @@ public static void launchUri(@NonNull Context context, @NonNull Uri data) {
             if (gist != null) {
                 return GistView.createIntent(context, gist);
             }
-        } else if (HOST_DEFAULT.equals(data.getHost())) {
+        } else {
             Intent userIntent = getUser(context, data);
             Intent pullRequestIntent = getPullRequestIntent(context, data);
             Intent issueIntent = getIssueIntent(context, data);

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -67,9 +67,7 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
         if (downloadedStream == null) {
             manageSubscription(FileModel.get(url)
                     .subscribe(fileModel -> {
-                        if (fileModel == null) {
-                            onWorkOnline();
-                        } else {
+                        if (fileModel != null) {
                             isImage = MarkDownProvider.isImage(fileModel.getFullUrl());
                             if (isImage) {
                                 sendToView(view -> view.onSetImageUrl(fileModel.getFullUrl()));

File: app/src/main/java/com/fastaccess/data/dao/NameParser.java
Patch:
@@ -27,8 +27,9 @@ public NameParser(@Nullable String url) {
             if (segments == null || segments.size() < 2) {
                 return;
             }
-            this.name = segments.get(1);
-            this.username = segments.get(0);
+            boolean isFirstPathIsRepo = (segments.get(0).equalsIgnoreCase("repos") || segments.get(0).equalsIgnoreCase("repo"));
+            this.username = isFirstPathIsRepo ? segments.get(1) : segments.get(0);
+            this.name = isFirstPathIsRepo ? segments.get(2) : segments.get(1);
         }
     }
 

File: app/src/main/java/com/fastaccess/provider/tasks/NotificationJobTask.java
Patch:
@@ -84,7 +84,7 @@ private void onNotifyUser(@NonNull List<NotificationThreadModel> notificationThr
             Notification notification = new NotificationCompat.Builder(context)
                     .setSmallIcon(R.drawable.ic_announcement)
                     .setContentTitle(context.getString(R.string.notifictions))
-                    .setContentText(context.getString(R.string.unread_notification))
+                    .setContentText(context.getString(R.string.unread_notification) + " (" + count + ")")
                     .setNumber((int) count)
                     .addAction(R.drawable.ic_github, context.getString(R.string.open), PendingIntent.getActivity(context, 0, new Intent(),
                             PendingIntent.FLAG_UPDATE_CURRENT))

File: app/src/main/java/com/fastaccess/ui/modules/login/LoginView.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.webkit.CookieManager;
 import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
@@ -58,6 +59,7 @@ public class LoginView extends BaseActivity<LoginMvp.View, LoginPresenter> imple
     @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         refresh.setOnRefreshListener(this);
+        webView.getSettings().setSaveFormData(false);
         webView.setWebChromeClient(new WebChromeClient() {
             @Override public void onProgressChanged(WebView view, int progress) {
                 super.onProgressChanged(view, progress);

File: app/src/main/java/com/fastaccess/data/dao/PayloadModel.java
Patch:
@@ -23,7 +23,7 @@ public class PayloadModel implements Parcelable {
     @Id @Column long id;
     @Column String action;
     @Column(onDeleteCascade = true, handleRecursively = false) RepoModel forkee;
-    @Column(onDeleteCascade = true, handleRecursively = false) IssueModel issueModel;
+    @Column(onDeleteCascade = true, handleRecursively = false) IssueModel issue;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/provider/rest/RestProvider.java
Patch:
@@ -172,7 +172,8 @@ public static int getErrorCode(Throwable throwable) {
             ResponseBody body = ((HttpException) throwable).response().errorBody();
             if (body != null) {
                 try {
-                    return gson.fromJson(body.toString(), GitHubErrorResponse.class);
+                    Logger.e(body.string());
+                    return new Gson().fromJson(body.toString(), GitHubErrorResponse.class);
                 } catch (Exception ignored) {}
             }
         }

File: app/src/main/java/com/fastaccess/ui/base/mvp/presenter/BasePresenter.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.fastaccess.R;
 import com.fastaccess.data.dao.GitHubErrorResponse;
+import com.fastaccess.helper.Logger;
 import com.fastaccess.helper.RxHelper;
 import com.fastaccess.provider.rest.RestProvider;
 import com.fastaccess.ui.base.mvp.BaseMvp;
@@ -41,6 +42,7 @@ public class BasePresenter<V extends BaseMvp.FAView> extends TiPresenter<V> impl
     @Override public <T> T onError(@NonNull Throwable throwable, @NonNull Observable<T> observable) {
         throwable.printStackTrace();
         GitHubErrorResponse errorResponse = RestProvider.getErrorResponse(throwable);
+        Logger.e(errorResponse);
         if (errorResponse != null && errorResponse.getMessage() != null) {
             sendToView(v -> v.showErrorMessage(errorResponse.getMessage()));
         } else {

File: app/src/main/java/com/fastaccess/ui/modules/feeds/FeedsPresenter.java
Patch:
@@ -103,8 +103,8 @@ class FeedsPresenter extends BasePresenter<FeedsMvp.View> implements FeedsMvp.Pr
             NameParser parser = new NameParser(item.getPayload().getForkee().getHtmlUrl());
             RepoPagerView.startRepoPager(v.getContext(), parser);
         } else {
-            if (item.getPayload().getIssueModel() != null) {
-                SchemeParser.launchUri(v.getContext(), Uri.parse(item.getPayload().getIssueModel().getHtmlUrl()));
+            if (item.getPayload().getIssue() != null) {
+                SchemeParser.launchUri(v.getContext(), Uri.parse(item.getPayload().getIssue().getHtmlUrl()));
             } else {
                 SchemeParser.launchUri(v.getContext(), Uri.parse(item.getRepo().getName()));
             }

File: app/src/main/java/com/fastaccess/data/dao/PayloadModel.java
Patch:
@@ -23,6 +23,7 @@ public class PayloadModel implements Parcelable {
     @Id @Column long id;
     @Column String action;
     @Column(onDeleteCascade = true, handleRecursively = false) RepoModel forkee;
+    @Column(onDeleteCascade = true, handleRecursively = false) IssueModel issueModel;
 
     @Override public int describeContents() { return 0; }
 

File: app/src/main/java/com/fastaccess/data/service/NotificationService.java
Patch:
@@ -15,7 +15,8 @@
 
 public interface NotificationService {
 
-    @GET("notifications") Observable<Pageable<NotificationThreadModel>> getNotifications();
+    @GET("notifications")
+    Observable<Pageable<NotificationThreadModel>> getNotifications();
 
     @GET("/notifications/threads/{id}")
     Observable<NotificationThreadModel> getNotification(@Path("id") String id);

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerPresenter.java
Patch:
@@ -93,9 +93,9 @@ class IssuePagerPresenter extends BasePresenter<IssuePagerMvp.View> implements I
 
     @Override public void onHandleConfirmDialog(@Nullable Bundle bundle) {
         if (bundle != null) {
-            boolean proceed = bundle.getBoolean(BundleConstant.EXTRA);
+            boolean proceedCloseIssue = bundle.getBoolean(BundleConstant.EXTRA);
             boolean proceedLockUnlock = bundle.getBoolean(BundleConstant.EXTRA_TWO);
-            if (proceed) {
+            if (proceedCloseIssue) {
                 onOpenCloseIssue();
             } else if (proceedLockUnlock) {
                 onLockUnlockIssue();

File: app/src/main/java/com/fastaccess/ui/widgets/StateLayout.java
Patch:
@@ -4,8 +4,8 @@
 import android.os.Parcelable;
 import android.support.annotation.NonNull;
 import android.support.annotation.StringRes;
+import android.support.v4.widget.NestedScrollView;
 import android.util.AttributeSet;
-import android.widget.FrameLayout;
 import android.widget.ProgressBar;
 
 import com.fastaccess.R;
@@ -19,7 +19,7 @@
 /**
  * Created by Kosh on 20 Nov 2016, 12:21 AM
  */
-public class StateLayout extends FrameLayout {
+public class StateLayout extends NestedScrollView {
 
     private static final int SHOW_PROGRESS_STATE = 1;
     private static final int HIDE_PROGRESS_STATE = 2;
@@ -117,7 +117,6 @@ public void setOnReloadListener(OnClickListener onReloadListener) {
         if (isInEditMode()) return;
         ButterKnife.bind(this);
         emptyText.setFreezesText(true);
-        setNestedScrollingEnabled(true);
     }
 
     @Override protected void onDetachedFromWindow() {

File: app/src/main/java/com/fastaccess/ui/modules/repos/code/prettifier/ViewerPresenter.java
Patch:
@@ -32,10 +32,10 @@ class ViewerPresenter extends BasePresenter<ViewerMvp.View> implements ViewerMvp
         if (code == 404) {
             sendToView(view -> view.onShowError(isRepo ? R.string.no_readme_found : R.string.no_file_found));
         } else {
-            sendToView(view -> view.onShowError(throwable.getMessage()));
+            onWorkOffline();
+            return super.onError(throwable, observable);
         }
-        onWorkOffline();
-        return super.onError(throwable, observable);
+        return null;
     }
 
     @Override public void onHandleIntent(@Nullable Bundle intent) {

File: app/src/main/java/com/fastaccess/ui/widgets/recyclerview/BaseRecyclerAdapter.java
Patch:
@@ -55,16 +55,15 @@ public int getItem(M t) {
     }
 
     @Override public void onBindViewHolder(VH holder, int position) {
-        animate(holder);
+        animate(holder, position);
         onBindView(holder, position);
     }
 
     @Override public int getItemCount() {
         return data.size();
     }
 
-    private void animate(VH holder) {
-        int position = holder.getLayoutPosition();
+    private void animate(VH holder, int position) {
         if (isEnableAnimation() && position > lastKnowingPosition) {
             AnimHelper.startBeatsAnimation(holder.itemView);
             lastKnowingPosition = position;

File: app/src/main/java/com/fastaccess/data/dao/IssueModel.java
Patch:
@@ -141,7 +141,7 @@ protected IssueModel(Parcel in) {
         this.user = in.readParcelable(UserModel.class.getClassLoader());
         this.assignee = in.readParcelable(UserModel.class.getClassLoader());
         this.assignees = new UsersListModel();
-        in.readList(this.assignees, this.assignee.getClass().getClassLoader());
+        in.readList(this.assignees, this.assignees.getClass().getClassLoader());
         this.labels = new LabelListModel();
         in.readList(this.labels, this.labels.getClass().getClassLoader());
         this.milestone = in.readParcelable(MilestoneModel.class.getClassLoader());

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/RepoIssuesPagerMvp.java
Patch:
@@ -8,7 +8,9 @@
 
 interface RepoIssuesPagerMvp {
 
-    interface View extends BaseMvp.FAView {}
+    interface View extends BaseMvp.FAView {
+        void onAddIssue();
+    }
 
     interface Presenter extends BaseMvp.FAPresenter {}
 }

File: app/src/main/java/com/fastaccess/ui/modules/repos/issues/issue/details/IssuePagerView.java
Patch:
@@ -164,8 +164,8 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         UserModel userModel = issueModel.getUser();
         title.setText(issueModel.getTitle());
         if (userModel != null) {
-            date.setVisibility(View.GONE);
-            size.setText(SpannableBuilder.builder().append(getString(issueModel.getState().getStatus()))
+            size.setVisibility(View.GONE);
+            date.setText(SpannableBuilder.builder().append(getString(issueModel.getState().getStatus()))
                     .append(" ").append(getString(R.string.by)).append(" ").append(userModel.getLogin()).append(" ")
                     .append(ParseDateFormat.getTimeAgo(issueModel.getCreatedAt())));
             avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerMvp.java
Patch:
@@ -31,7 +31,7 @@ interface Presenter extends BaseMvp.FAPresenter {
 
         void onActivityCreated(@Nullable Intent intent);
 
-        void onWorkOffline(long issueNumber, @NonNull String repoId, @NonNull String login);
+        void onWorkOffline();
 
         boolean isOwner();
 

File: app/src/main/java/com/fastaccess/ui/modules/repos/pull_requests/pull_request/details/PullRequestPagerView.java
Patch:
@@ -153,10 +153,10 @@ public static Intent createIntent(@NonNull Context context, @NonNull String repo
         UserModel userModel = pullRequest.getUser();
         if (userModel != null) {
             title.setText(SpannableBuilder.builder().append(userModel.getLogin()).append("/").append(pullRequest.getTitle()));
-            date.setVisibility(View.GONE);
+            size.setVisibility(View.GONE);
             boolean isMerge = !InputHelper.isEmpty(pullRequest.getMergedAt());
             int status = !isMerge ? pullRequest.getState().getStatus() : R.string.merged;
-            size.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()));
+            date.setText(getPresenter().getMergeBy(pullRequest, getApplicationContext()));
             avatarLayout.setUrl(userModel.getAvatarUrl(), userModel.getLogin());
         } else {
             title.setText(SpannableBuilder.builder().append(pullRequest.getTitle()));

