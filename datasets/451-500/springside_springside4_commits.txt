File: examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java
Patch:
@@ -42,7 +42,7 @@ public class BookEndpoint {
 	public List<BookDto> listAllBook(Pageable pageable) {
 		Iterable<Book> books = adminService.findAll(pageable);
 
-		return BeanMapper.mapList(books, Book.class,BookDto.class);
+		return BeanMapper.mapList(books, BookDto.class);
 	}
 
 	@RequestMapping(value = "/api/books/{id}", produces = MediaTypes.JSON_UTF_8)
@@ -127,7 +127,7 @@ public List<BookDto> listMyBook(@RequestParam(value = "token", required = false)
 		checkToken(token);
 		Account currentUser = accountService.getLoginUser(token);
 		List<Book> books = adminService.listMyBook(currentUser.id, pageable);
-		return BeanMapper.mapList(books, Book.class, BookDto.class);
+		return BeanMapper.mapList(books, BookDto.class);
 	}
 
 	@RequestMapping(value = "/api/myborrowedbook", produces = MediaTypes.JSON_UTF_8)
@@ -136,7 +136,7 @@ public List<BookDto> listMyBorrowedBook(@RequestParam(value = "token", required
 		checkToken(token);
 		Account currentUser = accountService.getLoginUser(token);
 		List<Book> books = borrowService.listMyBorrowedBook(currentUser.id, pageable);
-		return BeanMapper.mapList(books, Book.class, BookDto.class);
+		return BeanMapper.mapList(books, BookDto.class);
 	}
 
 	private void checkToken(String token) {

File: modules/utils/src/main/java/org/springside/modules/utils/base/annotation/NotNull.java
Patch:
@@ -1,5 +1,8 @@
 package org.springside.modules.utils.base.annotation;
 
+/**
+ * 标注参数不可为Null
+ */
 public @interface NotNull {
 
 }

File: modules/utils/src/main/java/org/springside/modules/utils/base/annotation/Nullable.java
Patch:
@@ -1,5 +1,8 @@
 package org.springside.modules.utils.base.annotation;
 
+/**
+ * 标注参数可为Null
+ */
 public @interface Nullable {
 
 }

File: modules/utils/src/main/java/org/springside/modules/utils/base/type/Pair.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.modules.utils.collection.type;
+package org.springside.modules.utils.base.type;
 
 import org.springside.modules.utils.base.annotation.Nullable;
 

File: modules/utils/src/main/java/org/springside/modules/utils/collection/type/ConcurrentHashSet.java
Patch:
@@ -5,8 +5,7 @@
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
-
-import org.springside.modules.utils.collection.MapUtil;
+import java.util.concurrent.ConcurrentHashMap;
 
 /**
  * JDK并没有提供ConcurrenHashSet，考虑到JDK的HashSet也是基于HashMap实现的，因此ConcurrenHashSet也由ConcurrenHashMap完成。
@@ -24,7 +23,7 @@ public class ConcurrentHashSet<E> extends AbstractSet<E> implements Set<E>, java
 	private transient Set<E> s; // Its keySet
 
 	public ConcurrentHashSet() {
-		m = MapUtil.newConcurrentHashMap();
+		m = new ConcurrentHashMap<E, Boolean>();
 		s = m.keySet();
 	}
 

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/Sampler.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.modules.utils.concurrent.throttle;
+package org.springside.modules.utils.concurrent;
 
 import org.apache.commons.lang3.Validate;
 import org.springside.modules.utils.number.RandomUtil;
@@ -8,7 +8,6 @@
  * 
  * from Twitter Common, 优化使用ThreadLocalRandom
  * 
- * @author calvin
  */
 public class Sampler {
 

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/ThreadDumpper.java
Patch:
@@ -13,17 +13,17 @@
  * 因为ThreadDump本身会造成JVM停顿，所以加上了开关和最少间隔时间的选项(默认不限制)
  * 
  * 因为ThreadInfo的toString()最多只会打印8层的StackTrace，所以加上了最大打印层数的选项.(默认为8)
- * 
- * @author calvin
  */
 public class ThreadDumpper {
 
 	private static final int DEFAULT_MAX_STACK_LEVEL = 8;
 
+	private static final int DEFAULT_MIN_INTERVAL = 1000 * 60 * 1; //1分钟
+
 	private static Logger logger = LoggerFactory.getLogger(ThreadDumpper.class);
 
 	private boolean enable = true; // 快速关闭该功能
-	private long leastIntervalMills = 0; // 每次打印ThreadDump的最小时间间隔，单位为毫秒
+	private long leastIntervalMills = DEFAULT_MIN_INTERVAL; // 每次打印ThreadDump的最小时间间隔，单位为毫秒
 	private int maxStackLevel = DEFAULT_MAX_STACK_LEVEL; // 打印StackTrace的最大深度
 
 	private volatile Long lastThreadDumpTime = 0L;

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/type/BasicFuture.java
Patch:
@@ -16,7 +16,7 @@
  * Foundation. For more information on the Apache Software Foundation, please see <http://www.apache.org/>.
  *
  */
-package org.springside.modules.utils.concurrent;
+package org.springside.modules.utils.concurrent.type;
 
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
@@ -86,7 +86,7 @@ private T getResult() throws ExecutionException {
 		return this.result;
 	}
 
-	public boolean completed(final T result) {
+	public boolean complete(final T result) {
 		synchronized (this) {
 			if (this.completed) {
 				return false;
@@ -100,7 +100,7 @@ public boolean completed(final T result) {
 		return true;
 	}
 
-	public boolean failed(final Exception exception) {
+	public boolean fail(final Exception exception) {
 		synchronized (this) {
 			if (this.completed) {
 				return false;

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/type/ThreadLocalContext.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.modules.utils.concurrent;
+package org.springside.modules.utils.concurrent.type;
 
 import java.util.HashMap;
 import java.util.Map;

File: modules/utils/src/main/java/org/springside/modules/utils/io/FilePathUtil.java
Patch:
@@ -8,8 +8,6 @@
 
 /**
  * 关于文件路径的工具集
- * 
- * @author calvin
  */
 public class FilePathUtil {
 

File: modules/utils/src/main/java/org/springside/modules/utils/io/FileTreeWalker.java
Patch:
@@ -48,7 +48,7 @@ public static List<File> listFileWithWildcardFileName(final File rootDir, final
 	/**
 	 * 前序递归列出所有文件, 列出文件名匹配正则表达式的文件
 	 * 
-	 * 如 ("/a/b/hello.txt", "he.*\.text") 将被返回
+	 * 如 ("/a/b/hello.txt", "he.*\.txt") 将被返回
 	 */
 	public static List<File> listFileWithRegexFileName(final File rootDir, final String regexFileNamePattern) {
 		return Files.fileTreeTraverser().preOrderTraversal(rootDir)
@@ -58,7 +58,7 @@ public static List<File> listFileWithRegexFileName(final File rootDir, final Str
 	/**
 	 * 前序递归列出所有文件, 列出符合ant path风格表达式的文件
 	 * 
-	 * 如 ("/a/b/hello.txt", "he.*\.text") 将被返回
+	 * 如 ("/a/b/hello.txt", "he.*\.txt") 将被返回
 	 */
 	public static List<File> listFileWithAntPath(final File rootDir, final String antPathPattern) {
 		return Files.fileTreeTraverser().preOrderTraversal(rootDir)

File: modules/utils/src/main/java/org/springside/modules/utils/io/IOUtil.java
Patch:
@@ -31,8 +31,6 @@
  * 
  * 4. InputStream/Reader与OutputStream/Writer之间复制的copy(from Commons IO)
  * 
- * 
- * @author calvin
  */
 public class IOUtil {
 	private static final Logger logger = LoggerFactory.getLogger(IOUtil.class);

File: modules/utils/src/main/java/org/springside/modules/utils/io/URLResourceUtil.java
Patch:
@@ -16,8 +16,6 @@
  * 兼容url为无前缀，file://与classpath:// 三种情况的工具集
  * 
  * 参考Spring ResourceUtils
- * 
- * @author calvin
  */
 public class URLResourceUtil {
 
@@ -70,7 +68,7 @@ private static File getFileByURL(URL fileUrl) throws FileNotFoundException {
 		}
 		try {
 			return new File(toURI(fileUrl.toString()).getSchemeSpecificPart());
-		} catch (URISyntaxException ex) {
+		} catch (URISyntaxException ex) { // NOSONAR
 			// Fallback for URLs that are not valid URIs (should hardly ever happen).
 			return new File(fileUrl.getFile());
 		}

File: modules/utils/src/main/java/org/springside/modules/utils/net/IPUtil.java
Patch:
@@ -18,8 +18,6 @@
  * 先将字符串传换为byte[]再用InetAddress.getByAddress(byte[])，避免了InetAddress.getByName(ip)可能引起的DNS访问.
  * 
  * InetAddress与String的转换其实消耗不小，如果是有限的地址，建议进行缓存.
- * 
- * @author calvin
  */
 public class IPUtil {
 
@@ -41,7 +39,7 @@ public static int toInt(InetAddress address) {
 	 * 
 	 * @see com.google.common.net.InetAddresses#toAddrString(InetAddress)
 	 */
-	public static String toString(InetAddress address) {
+	public static String toIpString(InetAddress address) {
 		return InetAddresses.toAddrString(address);
 	}
 

File: modules/utils/src/main/java/org/springside/modules/utils/text/CsvUtil.java
Patch:
@@ -109,7 +109,7 @@ public static String[] fromCsvString(String line) {
 			} else if (c == FIELD_QUOTE) {
 				if (inQuotedField) {
 					if (i + 1 == len || line.charAt(i + 1) == FIELD_SEPARATOR) { // we are already quoting - peek to see
-																					// if this is the end of the field
+						// if this is the end of the field
 						addField(row, line, fieldStart, i, inQuotedField);
 						fieldStart = i + 2;
 						i++; // and skip the comma

File: modules/utils/src/main/java/org/springside/modules/utils/text/TextValidator.java
Patch:
@@ -6,11 +6,9 @@
 import org.springside.modules.utils.base.annotation.Nullable;
 
 /**
- * 通过正则表达判断是否正确的手机号，固定电话，身份证，邮箱等.
+ * 通过正则表达判断是否正确的URL， 邮箱，手机号，固定电话，身份证，邮箱等.
  * 
  * 从AndroidUtilCode的RegexUtils移植, 性能优化将正则表达式为预编译, 并修改了TEL的正则表达式.
- * 
- * @author calvin
  */
 public class TextValidator {
 

File: modules/utils/src/main/java/org/springside/modules/utils/time/CachingDateFormatter.java
Patch:
@@ -9,12 +9,14 @@
  * 
  * From Log4j2 DatePatternConverter，进行了优化，根据输出格式是否毫秒级，决定缓存在秒级还是毫秒级.
  * 
+ * 注意如果输出格式为毫秒级的话，根据QPS决定性价比
+ * 
  * @author calvin
  */
 public class CachingDateFormatter {
 	private FastDateFormat fastDateFormat;
 	private AtomicReference<CachedTime> cachedTime;
-	private boolean onSecond;// 根据时间格式，决定缓存在
+	private boolean onSecond;// 根据时间格式，决定缓存在秒级还是毫秒级
 
 	public CachingDateFormatter(String pattern) {
 		this(FastDateFormat.getInstance(pattern));

File: modules/utils/src/main/java/org/springside/modules/utils/time/ClockUtil.java
Patch:
@@ -6,8 +6,6 @@
  * 日期提供者, 使用它而不是直接取得系统时间, 方便测试.
  * 
  * 平时使用DEFAULT，测试时替换为DummyClock，可准确控制时间变化而不用Thread.sleep()等待时间流逝.
- * 
- * @author calvin
  */
 public class ClockUtil {
 

File: modules/utils/src/test/java/org/springside/modules/utils/collection/QueueUtilTest.java
Patch:
@@ -34,8 +34,8 @@ public void guavaBuildSet() {
 	@Test
 	public void stack() {
 
-		Queue<String> stack = QueueUtil.createStack(10);
-		Queue<String> stack2 = QueueUtil.createConcurrentStack();
+		Queue<String> stack = ExQueues.createStack(10);
+		Queue<String> stack2 = ExQueues.createConcurrentStack();
 
 		stack.offer("1");
 		stack.offer("2");

File: modules/utils/src/test/java/org/springside/modules/utils/collection/type/PairTest.java
Patch:
@@ -3,6 +3,7 @@
 import static org.assertj.core.api.Assertions.*;
 
 import org.junit.Test;
+import org.springside.modules.utils.base.type.Pair;
 
 public class PairTest {
 	

File: modules/utils/src/test/java/org/springside/modules/utils/collection/type/SortedArrayListTest.java
Patch:
@@ -3,6 +3,7 @@
 import static org.assertj.core.api.Assertions.*;
 
 import org.junit.Test;
+import org.springside.modules.utils.collection.ExLists;
 import org.springside.modules.utils.collection.ListUtil;
 
 import com.google.common.collect.Ordering;
@@ -11,7 +12,7 @@ public class SortedArrayListTest {
 
 	@Test
 	public void sortedArrayList() {
-		SortedArrayList<String> list = ListUtil.createSortedArrayList();
+		SortedArrayList<String> list = ExLists.createSortedArrayList();
 		list.add("9");
 		list.add("1");
 		list.add("6");
@@ -40,7 +41,7 @@ public void sortedArrayList() {
 			assertThat(t).isInstanceOf(UnsupportedOperationException.class);
 		}
 
-		SortedArrayList<String> list2 = ListUtil.createSortedArrayList(Ordering.natural());
+		SortedArrayList<String> list2 = ExLists.createSortedArrayList(Ordering.natural());
 		list2.addAll(ListUtil.newArrayList("3", "1", "2"));
 		assertThat(list2).containsExactly("1", "2", "3");
 	}

File: modules/utils/src/test/java/org/springside/modules/utils/concurrent/BasicFutureTest.java
Patch:
@@ -8,6 +8,7 @@
 
 import org.junit.Test;
 import org.springside.modules.utils.base.ExceptionUtil;
+import org.springside.modules.utils.concurrent.type.BasicFuture;
 
 public class BasicFutureTest {
 
@@ -32,11 +33,11 @@ protected void onCancelled() {
 	private static class Tasks {
 
 		public static void success(MyFuture<String> future) {
-			future.completed("haha");
+			future.complete("haha");
 		}
 
 		public static void fail(MyFuture<String> future) {
-			future.failed(new RuntimeException("wuwu"));
+			future.fail(new RuntimeException("wuwu"));
 		}
 
 		public static void cancel(MyFuture<String> future) {

File: modules/utils/src/test/java/org/springside/modules/utils/concurrent/ConcurrentsTest.java
Patch:
@@ -5,11 +5,11 @@
 import org.junit.Test;
 import org.springside.modules.utils.concurrent.jsr166e.LongAdder;
 
-public class ConcurrentToolsTest {
+public class ConcurrentsTest {
 
 	@Test
 	public void longAdder() {
-		LongAdder counter = ConcurrentTools.longAdder();
+		LongAdder counter = Concurrents.longAdder();
 		counter.increment();
 		counter.add(2);
 		assertThat(counter.longValue()).isEqualTo(3L);

File: modules/utils/src/test/java/org/springside/modules/utils/concurrent/ThreadDumpperTest.java
Patch:
@@ -28,7 +28,7 @@ public void run() {
 	@Test
 	public void test() throws InterruptedException {
 		ExecutorService executor = ThreadPoolBuilder.fixedPool().setPoolSize(10).build();
-		CountDownLatch countDownLatch= ConcurrentTools.countDownLatch(10);
+		CountDownLatch countDownLatch= Concurrents.countDownLatch(10);
 		for(int i=0;i<10;i++){
 			executor.execute(new LongRunTask(countDownLatch));
 		}

File: modules/utils/src/test/java/org/springside/modules/utils/concurrent/ThreadLocalContextTest.java
Patch:
@@ -4,15 +4,16 @@
 import java.util.concurrent.CyclicBarrier;
 
 import org.junit.Test;
+import org.springside.modules.utils.concurrent.type.ThreadLocalContext;
 import org.springside.modules.utils.number.RandomUtil;
 
 public class ThreadLocalContextTest {
 
 	@Test
 	public void test() throws InterruptedException {
 
-		final CountDownLatch countdown = ConcurrentTools.countDownLatch(10);
-		final CyclicBarrier barrier = ConcurrentTools.cyclicBarrier(10);
+		final CountDownLatch countdown = Concurrents.countDownLatch(10);
+		final CyclicBarrier barrier = Concurrents.cyclicBarrier(10);
 
 		Runnable runnable = new Runnable() {
 			@Override

File: modules/utils/src/test/java/org/springside/modules/utils/io/ResourceUtilTest.java
Patch:
@@ -24,11 +24,11 @@ public void test() throws IOException {
 		assertThat(ResourceUtil.toString("META-INF/MANIFEST.MF")).contains("Manifest");
 
 		// getResources
-		assertThat(ResourceUtil.getResources("META-INF/MANIFEST.MF").size()).isGreaterThan(1);
+		assertThat(ResourceUtil.getResourcesQuietly("META-INF/MANIFEST.MF").size()).isGreaterThan(1);
 
-		System.out.println(ResourceUtil.getResources("META-INF/MANIFEST.MF"));
+		System.out.println(ResourceUtil.getResourcesQuietly("META-INF/MANIFEST.MF"));
 
-		assertThat(ResourceUtil.getResources("META-INF/MANIFEST.MF", ResourceUtilTest.class.getClassLoader()).size())
+		assertThat(ResourceUtil.getResourcesQuietly("META-INF/MANIFEST.MF", ResourceUtilTest.class.getClassLoader()).size())
 				.isGreaterThan(1);
 
 	}

File: modules/utils/src/test/java/org/springside/modules/utils/io/URLResourceTest.java
Patch:
@@ -37,7 +37,7 @@ public void resource() throws IOException {
 
 	@Test
 	public void file() throws IOException {
-		File file = FileUtil.createTempFile();
+		File file = FileUtil.createTempFile().toFile();
 		FileUtil.write("haha", file);
 		try {
 			File file2 = URLResourceUtil.asFile("file://" + file.getAbsolutePath());

File: modules/utils/src/test/java/org/springside/modules/utils/misc/SamplerTest.java
Patch:
@@ -3,9 +3,9 @@
 import static org.assertj.core.api.Assertions.*;
 
 import org.junit.Test;
-import org.springside.modules.utils.concurrent.throttle.Sampler;
-import org.springside.modules.utils.concurrent.throttle.Sampler.AlwaysSampler;
-import org.springside.modules.utils.concurrent.throttle.Sampler.NeverSampler;
+import org.springside.modules.utils.concurrent.Sampler;
+import org.springside.modules.utils.concurrent.Sampler.AlwaysSampler;
+import org.springside.modules.utils.concurrent.Sampler.NeverSampler;
 
 public class SamplerTest {
 

File: modules/utils/src/main/java/org/springside/modules/utils/io/URLResourceUtil.java
Patch:
@@ -27,6 +27,8 @@ public class URLResourceUtil {
 
 	/**
 	 * 兼容无前缀, classpath://, file:// 的情况获取文件
+	 * 
+	 * 如果以classpath:// 定义的文件不存在会抛出IllegalArgumentException异常，以file://定义的则不会
 	 */
 	public static File asFile(String generalPath) throws IOException {
 		if (StringUtils.startsWith(generalPath, CLASSPATH_PREFIX)) {

File: modules/utils/src/main/java/org/springside/modules/utils/io/FileTreeWalker.java
Patch:
@@ -61,7 +61,7 @@ public static List<File> listFileWithRegexFileName(final File rootDir, final Str
 	 * 如 ("/a/b/hello.txt", "he.*\.text") 将被返回
 	 */
 	public static List<File> listFileWithAntPath(final File rootDir, final String antPathPattern) {
-		return Files.fileTreeTraverser().preOrderTraversal(rootDir).filter(new AntPathFilter(antPathPattern)).toList();
+		return Files.fileTreeTraverser().preOrderTraversal(rootDir).filter(new AntPathFilter(FilePathUtil.contact(rootDir.getAbsolutePath(), antPathPattern))).toList();
 	}
 
 	/**
@@ -139,7 +139,7 @@ private AntPathFilter(String pattern) {
 
 		@Override
 		public boolean apply(File input) {
-			return input.isFile() && WildcardMatcher.matchPath(input.getName(), pattern);
+			return input.isFile() && WildcardMatcher.matchPath(input.getAbsolutePath(), pattern);
 		}
 	}
 }

File: modules/utils/src/main/java/org/springside/modules/utils/text/WildcardMatcher.java
Patch:
@@ -29,6 +29,9 @@
 import org.springside.modules.utils.base.Platforms;
 
 /**
+ * 
+ * 从Jodd移植，匹配以通配符比较字符串（比正则表达式简单），以及Ant Path风格如比较目录Path
+ * 
  * Checks whether a string or path matches a given wildcard pattern. Possible patterns allow to match single characters
  * ('?') or any count of characters ('*'). Wildcard characters can be escaped (by an '\'). When matching path, deep tree
  * wildcard also can be used ('**').

File: modules/utils/src/test/java/org/springside/modules/utils/time/DateFormatUtilTest.java
Patch:
@@ -12,8 +12,8 @@ public class DateFormatUtilTest {
 	@Test
 	public void isoDateFormat() {
 		Date date = new Date(116, 10, 1, 12, 23, 44);
-		assertThat(DateFormatUtil.ISO_FORMAT.format(date)).isEqualTo("2016-11-01T12:23:44.000+08:00");
-		assertThat(DateFormatUtil.ISO_ON_SECOND_FORMAT.format(date)).isEqualTo("2016-11-01T12:23:44+08:00");
+		assertThat(DateFormatUtil.ISO_FORMAT.format(date)).contains("2016-11-01T12:23:44.000");
+		assertThat(DateFormatUtil.ISO_ON_SECOND_FORMAT.format(date)).contains("2016-11-01T12:23:44");
 		assertThat(DateFormatUtil.ISO_ON_DATE_FORMAT.format(date)).isEqualTo("2016-11-01");
 	}
 

File: modules/utils/src/test/java/org/springside/modules/utils/misc/SamplerTest.java
Patch:
@@ -22,7 +22,7 @@ public void test() {
 
 		assertThat(hits).isBetween(900, 1200);
 		//////////
-		Sampler sampler2 = new Sampler(0.5);
+		Sampler sampler2 = Sampler.create(0.5);
 
 		hits = 0;
 		for (int i = 0; i < 10000; i++) {

File: modules/utils/src/test/java/org/springside/modules/utils/reflect/ReflectionUtilTest.java
Patch:
@@ -10,6 +10,7 @@
 import java.lang.reflect.InvocationTargetException;
 
 import org.junit.Test;
+import org.springside.modules.utils.base.ExceptionUtil.UncheckedException;
 
 public class ReflectionUtilTest {
 
@@ -134,7 +135,7 @@ public void convertReflectionExceptionToUnchecked() {
 
 		// Unexcepted Checked exception.
 		e = ReflectionUtil.convertReflectionExceptionToUnchecked(ex);
-		assertThat(e).hasMessage("Unexpected Checked Exception.");
+		assertThat(e).isInstanceOf(UncheckedException.class);
 	}
 
 	public static class ParentBean<T, ID> {

File: modules/utils/src/test/java/org/springside/modules/utils/text/HashUtilTest.java
Patch:
@@ -7,14 +7,12 @@
 
 import org.junit.Test;
 import org.springside.modules.utils.base.ObjectUtil;
-import org.springside.modules.utils.collection.ListUtil;
 import org.springside.modules.utils.io.ResourceUtil;
 
 public class HashUtilTest {
 	@Test
 	public void hashCodeTest() {
 		assertThat(ObjectUtil.hashCode("a", "b") - ObjectUtil.hashCode("a", "a")).isEqualTo(1);
-		assertThat(ObjectUtil.hashCode("a", "b")).isEqualTo(ObjectUtil.hashCode(ListUtil.newArrayList("a", "b")));
 	}
 
 	@Test

File: modules/utils/src/test/java/org/springside/modules/utils/number/MathUtilTest.java
Patch:
@@ -39,8 +39,9 @@ public void power2() {
 		assertThat(MathUtil.modByPowerOfTwo(1, 16)).isEqualTo(1);
 		assertThat(MathUtil.modByPowerOfTwo(31, 16)).isEqualTo(15);
 		assertThat(MathUtil.modByPowerOfTwo(32, 16)).isEqualTo(0);
+		assertThat(MathUtil.modByPowerOfTwo(65, 16)).isEqualTo(1);
 		assertThat(MathUtil.modByPowerOfTwo(-1, 16)).isEqualTo(15);
-
+		
 	}
 
 	@Test

File: modules/utils/src/test/java/org/springside/modules/utils/text/HashUtilTest.java
Patch:
@@ -14,7 +14,7 @@ public class HashUtilTest {
 	@Test
 	public void hashCodeTest() {
 		assertThat(ObjectUtil.hashCode("a", "b") - ObjectUtil.hashCode("a", "a")).isEqualTo(1);
-		assertThat(ObjectUtil.hashCode("a", "b")).isEqualTo(HashUtil.hashCode(ListUtil.newArrayList("a", "b")));
+		assertThat(ObjectUtil.hashCode("a", "b")).isEqualTo(ObjectUtil.hashCode(ListUtil.newArrayList("a", "b")));
 	}
 
 	@Test

File: modules/utils/src/main/java/org/springside/modules/utils/collection/SetUtil.java
Patch:
@@ -17,7 +17,7 @@
  * 
  * 1. 各种Set的创建函数, 包括ConcurrentHashSet
  * 
- * 2. 集合运算函数(交集，并集等)
+ * 2. 集合运算函数(交集，并集等,from guava)
  */
 public abstract class SetUtil {
 

File: modules/utils/src/main/java/org/springside/modules/utils/number/NumberUtil.java
Patch:
@@ -11,11 +11,11 @@
 /**
  * 数字的工具类.
  * 
- * 1.原始类型数字与byte[]的转换(via Guava)
+ * 1.原始类型数字与byte[]的双向转换(via Guava)
  * 
  * 2.判断字符串是否数字, 是否16进制字符串(via Common Lang)
  * 
- * 3.将10机制/16进制字符串安全的转化为原始类型数字/数字对象(参考Common Lang自写)
+ * 3.10机制/16进制字符串 与 原始类型数字/数字对象 的双向转换(参考Common Lang自写)
  */
 public abstract class NumberUtil {
 

File: modules/utils/src/test/java/org/springside/modules/utils/collection/MapUtilTest.java
Patch:
@@ -57,7 +57,7 @@ public Integer get() {
 	public void guavaBuildMap() {
 		HashMap<String, Integer> map1 = MapUtil.newHashMap();
 
-		HashMap<String, Integer> map2 = MapUtil.newHashMapWithCapacity(10);
+		HashMap<String, Integer> map2 = MapUtil.newHashMapWithCapacity(10, 0.5f);
 		map2 = MapUtil.newHashMapWithCapacity(10, 0.5f);
 
 		HashMap<String, Integer> map3 = MapUtil.newHashMap("1", 1);

File: modules/utils/src/test/java/org/springside/modules/utils/collection/QueueUtilTest.java
Patch:
@@ -34,8 +34,8 @@ public void guavaBuildSet() {
 	@Test
 	public void stack() {
 
-		Queue<String> stack = QueueUtil.newStack(10);
-		Queue<String> stack2 = QueueUtil.newConcurrentStack();
+		Queue<String> stack = QueueUtil.createStack(10);
+		Queue<String> stack2 = QueueUtil.createConcurrentStack();
 
 		stack.offer("1");
 		stack.offer("2");

File: modules/utils/src/main/java/org/springside/modules/utils/base/PropertiesUtil.java
Patch:
@@ -186,6 +186,7 @@ public void register(PropertiesListener listener) {
 			listeners.add(listener);
 		}
 
+		@Override
 		public synchronized Object setProperty(String key, String value) {
 			Object result = put(key, value);
 			for (PropertiesListener listener : listeners) {
@@ -201,7 +202,7 @@ public synchronized Object setProperty(String key, String value) {
 	/**
 	 * 获取所关心的Properties变更的Listener基类.
 	 */
-	public abstract class PropertiesListener {
+	public static abstract class PropertiesListener {
 
 		protected String propertyName;
 

File: modules/utils/src/main/java/org/springside/modules/utils/net/NetUtil.java
Patch:
@@ -72,7 +72,7 @@ public static int findRandomAvailablePort(int minPort, int maxPort) {
 	 * 从某个端口开始，递增找一个空闲端口.
 	 */
 	public static int findAvailablePortFrom(int minPort) {
-		for (int port = minPort; port < PORT_RANGE_MAX; minPort++) {
+		for (int port = minPort; port < PORT_RANGE_MAX; port++) {
 			if (isPortAvailable(port)) {
 				return port;
 			}

File: modules/utils/src/main/java/org/springside/modules/utils/base/Numbers.java
Patch:
@@ -50,8 +50,8 @@ public static boolean isNumber(String str) {
 	 * 判断字符串是否16进制
 	 */
 	public static boolean isHexNumber(String value) {
-		int index = (value.startsWith("-") ? 1 : 0);
-		return (value.startsWith("0x", index) || value.startsWith("0X", index) || value.startsWith("#", index));
+		int index = value.startsWith("-") ? 1 : 0;
+		return value.startsWith("0x", index) || value.startsWith("0X", index) || value.startsWith("#", index);
 	}
 
 	/////////// 将字符串安全的转化为原始类型数字/////////

File: modules/utils/src/main/java/org/springside/modules/utils/base/PropertiesUtil.java
Patch:
@@ -9,7 +9,7 @@
  * 
  * @author calvin
  */
-public class Properties {
+public class PropertiesUtil {
 
 	/////////// Boolean.readBoolean()扩展 ///////////////
 
@@ -21,7 +21,7 @@ public static Boolean readBoolean(String name) {
 		if (stringResult != null) {
 			return Boolean.valueOf(stringResult);
 		}
-		return null;
+		return null; //NOSONAR
 	}
 
 	/**

File: modules/utils/src/main/java/org/springside/modules/utils/collection/Lists.java
Patch:
@@ -131,7 +131,7 @@ public static <T> CopyOnWriteArrayList<T> newCopyOnWriteArrayList(T... elements)
 	 * @see java.util.Collections#emptyList()
 	 */
 	public static final <T> List<T> emptyList() {
-		return Collections.EMPTY_LIST;
+		return (List<T>)Collections.EMPTY_LIST;
 	}
 
 	/**
@@ -165,7 +165,7 @@ public static <T> List<T> unmodifiableList(List<? extends T> list) {
 	 * @see java.util.Collections#sort(List)
 	 */
 	public static <T extends Comparable<? super T>> void sort(List<T> list) {
-		list.sort(null);
+		Collections.sort(list);
 	}
 
 	/**
@@ -174,7 +174,7 @@ public static <T extends Comparable<? super T>> void sort(List<T> list) {
 	 * @see java.util.Collections#sort(List, Comparator)
 	 */
 	public static <T> void sort(List<T> list, Comparator<? super T> c) {
-		list.sort(c);
+		Collections.sort(list, c);
 	}
 
 	/**

File: modules/utils/src/main/java/org/springside/modules/utils/collection/Maps.java
Patch:
@@ -143,7 +143,7 @@ public static <K extends Comparable, V> TreeMap<K, V> newTreeMap() {
 	 * @see java.util.Collections#emptyMap()
 	 */
 	public static final <K, V> Map<K, V> emptyMap() {
-		return Collections.EMPTY_MAP;
+		return  (Map<K, V>) Collections.EMPTY_MAP;
 	}
 
 	/**

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/BasicFuture.java
Patch:
@@ -30,7 +30,7 @@
  */
 public abstract class BasicFuture<T> implements Future<T> {
 
-	protected volatile boolean completed;
+	private volatile boolean completed;
 	private volatile boolean cancelled;
 	private volatile T result;
 	private volatile Exception ex;

File: modules/utils/src/main/java/org/springside/modules/utils/concurrent/jsr166e/ThreadLocalRandom.java
Patch:
@@ -14,6 +14,8 @@
 /**
  * 从JDK8u102移植，去除Streaming部分.
  * 
+ * Random 有全局锁，ThreadLocalRandom通过ThreadLocal化避免了这个锁
+ * 
  * JDK7版的ThreadLocalRandom只是单纯的将Random放入ThreadLocal中.
  * 
  * JDK8的实现更好的初始化seed 并使用了UNSAFE.

File: modules/utils/src/main/java/org/springside/modules/utils/reflect/Reflections.java
Patch:
@@ -53,7 +53,7 @@ public static Object getFieldValue(final Object obj, final String fieldName) {
 		Field field = getAccessibleField(obj, fieldName);
 
 		if (field == null) {
-			throw new IllegalArgumentException("Could not find field [" + fieldName + "] on target [" + obj + "]");
+			throw new IllegalArgumentException("Could not find field [" + fieldName + "] on target [" + obj + ']');
 		}
 
 		Object result = null;
@@ -72,7 +72,7 @@ public static void setFieldValue(final Object obj, final String fieldName, final
 		Field field = getAccessibleField(obj, fieldName);
 
 		if (field == null) {
-			throw new IllegalArgumentException("Could not find field [" + fieldName + "] on target [" + obj + "]");
+			throw new IllegalArgumentException("Could not find field [" + fieldName + "] on target [" + obj + ']');
 		}
 
 		try {
@@ -106,7 +106,7 @@ public static Object invokeMethod(final Object obj, final String methodName, fin
 	public static Object invokeMethodByName(final Object obj, final String methodName, final Object[] args) {
 		Method method = getAccessibleMethodByName(obj, methodName);
 		if (method == null) {
-			throw new IllegalArgumentException("Could not find method [" + methodName + "] on target [" + obj + "]");
+			throw new IllegalArgumentException("Could not find method [" + methodName + "] on target [" + obj + ']');
 		}
 
 		try {

File: modules/utils/src/main/java/org/springside/modules/utils/time/Clock.java
Patch:
@@ -14,7 +14,7 @@
  */
 public interface Clock {
 
-	static final Clock DEFAULT = new DefaultClock();
+	Clock DEFAULT = new DefaultClock();
 
 	Date getCurrentDate();
 
@@ -23,7 +23,7 @@ public interface Clock {
 	/**
 	 * 默认时间提供者，返回当前的时间，线程安全。
 	 */
-	public static class DefaultClock implements Clock {
+	class DefaultClock implements Clock {
 
 		@Override
 		public Date getCurrentDate() {
@@ -39,7 +39,7 @@ public long getCurrentTimeInMillis() {
 	/**
 	 * 可配置的时间提供者，用于测试.
 	 */
-	public static class DummyClock implements Clock {
+	class DummyClock implements Clock {
 
 		private long time;
 

File: modules/metrics/src/main/java/org/springside/modules/metrics/CounterMetric.java
Patch:
@@ -7,9 +7,9 @@
 
 public class CounterMetric {
 	public long totalCount;
-	public double meanRate;
+	public long meanRate;
 	public long lastCount;
-	public double lastRate;
+	public long lastRate;
 
 	@Override
 	public String toString() {

File: modules/metrics/src/main/java/org/springside/modules/metrics/reporter/ConsoleReporter.java
Patch:
@@ -98,8 +98,8 @@ private void printHistogram(HistogramMetric histogram) {
 
 	private void printTimer(TimerMetric timer) {
 		output.printf("             count = %d%n", timer.counterMetric.totalCount);
-		output.printf("         last rate = %2.2f/s%n", timer.counterMetric.lastRate);
-		output.printf("         mean rate = %2.2f/s%n", timer.counterMetric.meanRate);
+		output.printf("         last rate = %d%n", timer.counterMetric.lastRate);
+		output.printf("         mean rate = %d%n", timer.counterMetric.meanRate);
 		output.printf("               min = %d ms%n", timer.histogramMetric.min);
 		output.printf("               max = %d ms%n", timer.histogramMetric.max);
 		output.printf("              mean = %2.2f ms%n", timer.histogramMetric.mean);

File: modules/metrics/src/main/java/org/springside/modules/metrics/reporter/ConsoleReporter.java
Patch:
@@ -83,8 +83,8 @@ private void printGauge(Gauge gauge) {
 	private void printCounter(CounterMetric counter) {
 		output.printf("        last count = %d%n", counter.lastCount);
 		output.printf("       total count = %d%n", counter.totalCount);
-		output.printf("         last rate = %2.2f/s%n", counter.lastRate);
-		output.printf("         mean rate = %2.2f/s%n", counter.meanRate);
+		output.printf("         last rate = %d%n", counter.lastRate);
+		output.printf("         mean rate = %d%n", counter.meanRate);
 	}
 
 	private void printHistogram(HistogramMetric histogram) {

File: modules/metrics/src/main/java/org/springside/modules/metrics/CounterMetric.java
Patch:
@@ -7,9 +7,9 @@
 
 public class CounterMetric {
 	public long totalCount;
-	public double meanRate;
+	public long meanRate;
 	public long lastCount;
-	public double lastRate;
+	public long lastRate;
 
 	@Override
 	public String toString() {

File: modules/metrics/src/main/java/org/springside/modules/metrics/report/ConsoleReporter.java
Patch:
@@ -66,6 +66,7 @@ private void printWithBanner(String s, char c) {
 	private void printCounter(CounterMetric counter) {
 		output.printf("             count = %d%n", counter.totalCount);
 		output.printf("         last rate = %2.2f/s%n", counter.lastRate);
+		output.printf("         mean rate = %2.2f/s%n", counter.meanRate);
 	}
 
 	private void printHistogram(HistogramMetric histogram) {
@@ -80,6 +81,7 @@ private void printHistogram(HistogramMetric histogram) {
 	private void printExecution(ExecutionMetric execution) {
 		output.printf("             count = %d%n", execution.counterMetric.totalCount);
 		output.printf("         last rate = %2.2f/s%n", execution.counterMetric.lastRate);
+		output.printf("         mean rate = %2.2f/s%n", execution.counterMetric.meanRate);
 		output.printf("               min = %d ms%n", execution.histogramMetric.min);
 		output.printf("               max = %d ms%n", execution.histogramMetric.max);
 		output.printf("              mean = %2.2f ms%n", execution.histogramMetric.mean);

File: modules/extension/src/main/java/org/springside/modules/nosql/redis/elector/MasterElector.java
Patch:
@@ -23,7 +23,7 @@
 import org.springside.modules.utils.Threads.WrapExceptionRunnable;
 
 import redis.clients.jedis.Jedis;
-import redis.clients.jedis.JedisPool;
+import redis.clients.util.Pool;
 
 /**
  * Master选举实现, 基于setNx()与expire()两大API.
@@ -53,7 +53,7 @@ public class MasterElector implements Runnable {
 	private String masterKey = DEFAULT_MASTER_KEY;
 	private AtomicBoolean master = new AtomicBoolean(false);
 
-	public MasterElector(JedisPool jedisPool, int intervalSecs) {
+	public MasterElector(Pool<Jedis> jedisPool, int intervalSecs) {
 		this.jedisTemplate = new JedisTemplate(jedisPool);
 		this.intervalSecs = intervalSecs;
 		this.expireSecs = intervalSecs + (intervalSecs / 2);

File: modules/extension/src/main/java/org/springside/modules/nosql/redis/pool/JedisDirectPool.java
Patch:
@@ -17,7 +17,8 @@ public JedisDirectPool(ConnectionInfo connectionInfo, JedisPoolConfig config) {
 		this.connectionInfo = connectionInfo;
 
 		JedisFactory factory = new JedisFactory(connectionInfo.getHost(), connectionInfo.getPort(),
-				connectionInfo.getTimeout(), connectionInfo.getPassword(), connectionInfo.getDatabase());
+				connectionInfo.getTimeout(), connectionInfo.getPassword(), connectionInfo.getDatabase(),
+				connectionInfo.getClientName());
 
 		internalPool = new GenericObjectPool(factory, config);
 	}

File: modules/core/src/main/java/org/springside/modules/beanvalidator/BeanValidators.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.beanvalidator;
 
 import java.util.List;

File: modules/core/src/main/java/org/springside/modules/mapper/BeanMapper.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.mapper;
 
 import java.util.Collection;

File: modules/core/src/main/java/org/springside/modules/mapper/JaxbMapper.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.mapper;
 
 import java.io.StringReader;

File: modules/core/src/main/java/org/springside/modules/mapper/JsonMapper.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.mapper;
 
 import java.io.IOException;

File: modules/core/src/main/java/org/springside/modules/security/utils/Cryptos.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.security.utils;
 
 import java.security.GeneralSecurityException;

File: modules/core/src/main/java/org/springside/modules/security/utils/Digests.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.security.utils;
 
 import java.io.IOException;

File: modules/core/src/main/java/org/springside/modules/utils/Collections3.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.util.ArrayList;

File: modules/core/src/main/java/org/springside/modules/utils/Encodes.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.io.UnsupportedEncodingException;

File: modules/core/src/main/java/org/springside/modules/utils/Exceptions.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.io.PrintWriter;

File: modules/core/src/main/java/org/springside/modules/utils/Identities.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.security.SecureRandom;

File: modules/core/src/main/java/org/springside/modules/utils/Reflections.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.lang.reflect.Field;

File: modules/core/src/main/java/org/springside/modules/utils/Threads.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.utils;
 
 import java.util.concurrent.ExecutorService;

File: modules/core/src/main/java/org/springside/modules/web/Servlets.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.web;
 
 import java.io.UnsupportedEncodingException;

File: modules/core/src/test/java/org/springside/modules/test/data/RandomData.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.data;
 
 import java.util.Collections;

File: modules/core/src/test/java/org/springside/modules/test/jetty/JettyFactory.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.jetty;
 
 import java.util.List;

File: modules/core/src/test/java/org/springside/modules/test/log/LogbackListAppender.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.log;
 
 import java.util.List;

File: modules/core/src/test/java/org/springside/modules/test/security/shiro/ShiroTestUtils.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.security.shiro;
 
 import org.apache.shiro.subject.Subject;

File: modules/core/src/test/java/org/springside/modules/test/selenium/Selenium2.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.selenium;
 
 import java.io.File;

File: modules/core/src/test/java/org/springside/modules/test/selenium/WebDriverFactory.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.selenium;
 
 import java.net.MalformedURLException;

File: modules/core/src/test/java/org/springside/modules/test/spring/SpringContextTestCase.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.spring;
 
 import org.springframework.test.context.ActiveProfiles;

File: modules/core/src/test/java/org/springside/modules/test/spring/SpringTransactionalTestCase.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.spring;
 
 import javax.sql.DataSource;

File: modules/extension/src/main/java/org/springside/modules/cache/memcached/SpyMemcachedClient.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.cache.memcached;
 
 import java.util.Collection;

File: modules/extension/src/test/java/org/springside/modules/test/cache/memcached/MemcachedSimulator.java
Patch:
@@ -1,8 +1,8 @@
-/**
- * Copyright (c) 2005-2012 springside.org.cn
+/*******************************************************************************
+ * Copyright (c) 2005, 2014 springside.github.io
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
- */
+ *******************************************************************************/
 package org.springside.modules.test.cache.memcached;
 
 import net.spy.memcached.AddrUtil;

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/schedule/QuartzClusterableJob.java
Patch:
@@ -20,7 +20,8 @@
  */
 public class QuartzClusterableJob extends QuartzJobBean {
 
-	private static Logger logger = LoggerFactory.getLogger(QuartzClusterableJob.class);
+	private static Logger logger = LoggerFactory
+			.getLogger(QuartzClusterableJob.class.getName() + ".quartz cluster job");
 
 	private ApplicationContext applicationContext;
 
@@ -42,6 +43,6 @@ protected void executeInternal(JobExecutionContext ctx) throws JobExecutionExcep
 		long userCount = accountService.getUserCount();
 		String nodeName = (String) config.get("nodeName");
 
-		logger.info("There are {} user in database, printed by quartz cluster job on node {}.", userCount, nodeName);
+		logger.info("There are {} user in database, on node {}.", userCount, nodeName);
 	}
 }

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/schedule/UserCountScanner.java
Patch:
@@ -14,8 +14,6 @@
 @Component
 public class UserCountScanner {
 
-	private static Logger logger = LoggerFactory.getLogger(UserCountScanner.class);
-
 	@Autowired
 	private AccountService accountService;
 
@@ -46,7 +44,8 @@ public void executeBySpringTimerByXml() {
 	 * 定时打印当前用户数到日志.
 	 */
 	private void execute(String by) {
+		Logger logger = LoggerFactory.getLogger(UserCountScanner.class.getName() + "." + by);
 		long userCount = accountService.getUserCount();
-		logger.info("There are {} user in database, printed by {}.", userCount, by);
+		logger.info("There are {} user in database.", userCount);
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/demos/schedule/JdkTimerJobTest.java
Patch:
@@ -24,7 +24,7 @@ public class JdkTimerJobTest extends SpringTransactionalTestCase {
 	public static void initLogger() {
 		// 加载测试用logger appender
 		appender = new LogbackListAppender();
-		appender.addToLogger(UserCountScanner.class);
+		appender.addToLogger(UserCountScanner.class.getName() + ".jdk timer job");
 	}
 
 	@AfterClass
@@ -39,6 +39,6 @@ public void scheduleJob() throws Exception {
 
 		// 验证任务已执行
 		assertEquals(1, appender.getLogsCount());
-		assertEquals("There are 6 user in database, printed by jdk timer job.", appender.getFirstMessage());
+		assertEquals("There are 6 user in database.", appender.getFirstMessage());
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/demos/schedule/QuartzTimerClusterJobTest.java
Patch:
@@ -29,7 +29,7 @@ public class QuartzTimerClusterJobTest extends SpringTransactionalTestCase {
 	public static void initLogger() {
 		// 加载测试用logger appender
 		appender = new LogbackListAppender();
-		appender.addToLogger(QuartzClusterableJob.class);
+		appender.addToLogger(QuartzClusterableJob.class.getName() + ".quartz cluster job");
 	}
 
 	@AfterClass
@@ -45,7 +45,6 @@ public void scheduleJob() throws Exception {
 		// 验证任务已执行
 		assertEquals(1, appender.getLogsCount());
 
-		assertEquals("There are 6 user in database, printed by quartz cluster job on node default.",
-				appender.getFirstMessage());
+		assertEquals("There are 6 user in database, on node default.", appender.getFirstMessage());
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/demos/schedule/SpringTimerJobTest.java
Patch:
@@ -24,7 +24,7 @@ public class SpringTimerJobTest extends SpringTransactionalTestCase {
 	public static void initLogger() {
 		// 加载测试用logger appender
 		appender = new LogbackListAppender();
-		appender.addToLogger(UserCountScanner.class);
+		appender.addToLogger(UserCountScanner.class.getName() + ".spring timer job by xml");
 	}
 
 	@AfterClass
@@ -39,6 +39,6 @@ public void scheduleJob() throws Exception {
 
 		// 验证任务已执行
 		assertEquals(1, appender.getLogsCount());
-		assertEquals("There are 6 user in database, printed by spring timer job by xml.", appender.getFirstMessage());
+		assertEquals("There are 6 user in database.", appender.getFirstMessage());
 	}
 }

File: modules/extension/src/test/java/org/springside/modules/nosql/redis/JedisTemplateTest.java
Patch:
@@ -54,7 +54,7 @@ public void stringActions() {
 
 	@Test
 	public void listActions() {
-		String key = "test.string.key";
+		String key = "test.list.key";
 		String value = "123";
 		String value2 = "456";
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/service/account/AccountServiceTest.java
Patch:
@@ -20,7 +20,7 @@
 import ${package}.service.ServiceException;
 import ${package}.service.account.ShiroDbRealm.ShiroUser;
 import org.springside.modules.test.security.shiro.ShiroTestUtils;
-import org.springside.modules.utils.DateProvider.ConfigurableDateProvider;
+import org.springside.modules.utils.Clock.MockClock;
 
 /**
  * AccountService的测试用例, 测试Service层的业务逻辑.
@@ -48,7 +48,7 @@ public void setUp() {
 	public void registerUser() {
 		User user = UserData.randomNewUser();
 		Date currentTime = new Date();
-		accountService.setDateProvider(new ConfigurableDateProvider(currentTime));
+		accountService.setClock(new MockClock(currentTime));
 
 		accountService.registerUser(user);
 

File: modules/metrics/src/test/java/org/springside/modules/metrics/ExecutionTest.java
Patch:
@@ -11,7 +11,9 @@ public class ExecutionTest {
 	@Test
 	public void normal() {
 		MockedClock clock = new MockedClock();
-		Execution execution = new Execution(clock, new Double[] { 90d });
+		Execution.clock = clock;
+		Counter.clock = clock;
+		Execution execution = new Execution(new Double[] { 90d });
 
 		ExecutionTimer timer = execution.start();
 		clock.increaseTime(200);

File: modules/metrics/src/test/java/org/springside/modules/metrics/ReporterTest.java
Patch:
@@ -42,7 +42,8 @@ public void schedulerStartStop() throws InterruptedException {
 	private void runReport(Reporter reporter) {
 		MetricRegistry metricRegistry = new MetricRegistry();
 		MockedClock clock = new MockedClock();
-		metricRegistry.setDefaultClock(clock);
+		Counter.clock = clock;
+		Execution.clock = clock;
 
 		// counter
 		Counter counter = metricRegistry.counter(MetricRegistry.name("UserService", "getUser.counter"));

File: modules/metrics/src/main/java/org/springside/modules/metrics/Histogram.java
Patch:
@@ -55,7 +55,7 @@ public HistogramMetric getMetric() {
 
 	public Long getPercent(List<Long> snapshotList, int count, double pct) {
 
-		final double pos = pct * (count + 1);
+		final double pos = (pct * (count + 1)) / 100;
 
 		if (pos < 1) {
 			return snapshotList.get(0);

File: modules/metrics/src/main/java/org/springside/modules/metrics/MetricRegistry.java
Patch:
@@ -15,7 +15,7 @@ public class MetricRegistry {
 
 	private Clock defaultClock = Clock.DEFAULT;
 
-	private Double[] defaultPcts = new Double[] { 0.9 };
+	private Double[] defaultPcts = new Double[] { 90d };
 
 	private ConcurrentMap<String, Object> metrics = new ConcurrentHashMap<String, Object>();
 

File: modules/metrics/src/main/java/org/springside/modules/metrics/report/ConsoleReporter.java
Patch:
@@ -69,7 +69,7 @@ private void printHistogram(HistogramMetric histogram) {
 		output.printf("               max = %d%n", histogram.max);
 		output.printf("              mean = %2.2f%n", histogram.mean);
 		for (Entry<Double, Long> pct : histogram.pcts.entrySet()) {
-			output.printf("           %2.2f%% <= %d %n", pct.getKey() * 100, pct.getValue());
+			output.printf("           %2.2f%% <= %d %n", pct.getKey(), pct.getValue());
 		}
 	}
 
@@ -81,7 +81,7 @@ private void printExecution(ExecutionMetric execution) {
 		output.printf("               max = %d ms%n", execution.histogram.max);
 		output.printf("              mean = %2.2f ms%n", execution.histogram.mean);
 		for (Entry<Double, Long> pct : execution.histogram.pcts.entrySet()) {
-			output.printf("           %2.2f%% <= %d ms%n", pct.getKey() * 100, pct.getValue());
+			output.printf("           %2.2f%% <= %d ms%n", pct.getKey(), pct.getValue());
 		}
 	}
 }

File: modules/metrics/src/main/java/org/springside/modules/metrics/report/Slf4jReporter.java
Patch:
@@ -58,7 +58,7 @@ private String buildPcts(Map<Double, Long> pcts) {
 		StringBuilder builder = new StringBuilder();
 
 		for (Entry<Double, Long> entry : pcts.entrySet()) {
-			builder.append(", p").append(entry.getKey() * 100).append("=").append(entry.getValue());
+			builder.append(", p").append(entry.getKey()).append("=").append(entry.getValue());
 		}
 
 		return builder.toString();

File: modules/metrics/src/test/java/org/springside/modules/metrics/ExecutionTest.java
Patch:
@@ -11,7 +11,7 @@ public class ExecutionTest {
 	@Test
 	public void normal() {
 		MockedClock clock = new MockedClock();
-		Execution execution = new Execution(clock, new Double[] { 0.9 });
+		Execution execution = new Execution(clock, new Double[] { 90d });
 
 		ExecutionTimer timer = execution.start();
 		clock.incrementTime(200);
@@ -29,6 +29,6 @@ public void normal() {
 
 		assertEquals(200, metric.histogram.min);
 		assertEquals(250, metric.histogram.mean, 0);
-		assertEquals(300, metric.histogram.pcts.get(0.9), 0);
+		assertEquals(300, metric.histogram.pcts.get(90d), 0);
 	}
 }

File: modules/metrics/src/test/java/org/springside/modules/metrics/MetricRegistryTest.java
Patch:
@@ -75,7 +75,7 @@ public void updateDefault() {
 		assertEquals(2000, counter.getMetric().lastRate, 1);
 
 		// default pcts
-		metricRegistry.setDefaultPcts(new Double[] { 0.5 });
+		metricRegistry.setDefaultPcts(new Double[] { 50d });
 		Histogram histogram = metricRegistry.histogram(MetricRegistry.name("UserService", "getUser.new.histogram"));
 
 		for (int i = 1; i <= 100; i++) {
@@ -84,7 +84,7 @@ public void updateDefault() {
 
 		HistogramMetric metric = histogram.getMetric();
 
-		assertEquals(50, metric.pcts.get(0.5), 0);
-		assertNull(metric.pcts.get(0.9));
+		assertEquals(50, metric.pcts.get(50d), 0);
+		assertNull(metric.pcts.get(90d));
 	}
 }

File: examples/quickstart/src/test/java/org/springside/examples/quickstart/service/account/AccountServiceTest.java
Patch:
@@ -17,7 +17,7 @@
 import org.springside.examples.quickstart.service.ServiceException;
 import org.springside.examples.quickstart.service.account.ShiroDbRealm.ShiroUser;
 import org.springside.modules.test.security.shiro.ShiroTestUtils;
-import org.springside.modules.utils.DateProvider.MockedDateProvider;
+import org.springside.modules.utils.Clock.MockedClock;
 
 /**
  * AccountService的测试用例, 测试Service层的业务逻辑.
@@ -45,7 +45,7 @@ public void setUp() {
 	public void registerUser() {
 		User user = UserData.randomNewUser();
 		Date currentTime = new Date();
-		accountService.setDateProvider(new MockedDateProvider(currentTime));
+		accountService.setClock(new MockedClock(currentTime));
 
 		accountService.registerUser(user);
 

File: modules/metrics/src/main/java/org/springside/modules/metrics/HistogramMetric.java
Patch:
@@ -1,10 +1,11 @@
 package org.springside.modules.metrics;
 
+import java.util.LinkedHashMap;
 import java.util.Map;
 
 public class HistogramMetric {
 	public long min;
 	public long max;
 	public double mean;
-	public Map<Double, Long> pcts;
+	public Map<Double, Long> pcts = new LinkedHashMap<Double, Long>();
 }

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/hystrix/web/HystrixDemoController.java
Patch:
@@ -3,7 +3,6 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpStatus;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -28,8 +27,9 @@ public UserDTO getUser(@PathVariable("id") Long id) {
 		try {
 			return userService.getUser(id);
 		} catch (Exception e) {
+			// 化简异常处理，正式项目应区分错误类型.
 			logger.error(e.getMessage(), e);
-			throw new RestException(HttpStatus.SERVICE_UNAVAILABLE);
+			throw new RestException();
 		}
 	}
 }

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/service/account/ShiroDbRealm.java
Patch:
@@ -36,7 +36,6 @@
 import org.apache.shiro.realm.AuthorizingRealm;
 import org.apache.shiro.subject.PrincipalCollection;
 import org.apache.shiro.util.ByteSource;
-import org.springframework.beans.factory.annotation.Autowired;
 import ${package}.entity.User;
 import org.springside.modules.utils.Encodes;
 
@@ -85,7 +84,6 @@ public void initCredentialsMatcher() {
 		setCredentialsMatcher(matcher);
 	}
 
-	@Autowired
 	public void setAccountService(AccountService accountService) {
 		this.accountService = accountService;
 	}

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -36,8 +36,6 @@ public class BaseFunctionalTestCase {
 	@BeforeClass
 	public static void initFunctionalTestEnv() throws Exception {
 
-		System.out.println("[HINT] Don't forget to set -XX:MaxPermSize=128m");
-
 		baseUrl = propertiesLoader.getProperty("baseUrl");
 
 		Boolean isEmbedded = new URL(baseUrl).getHost().equals("localhost")
@@ -56,6 +54,8 @@ public static void initFunctionalTestEnv() throws Exception {
 	 */
 	protected static void startJettyOnce() throws Exception {
 		if (jettyServer == null) {
+			System.out.println("[HINT] Don't forget to set -XX:MaxPermSize=128m");
+
 			// 设定Spring的profile
 			Profiles.setProfileAsSystemProperty(Profiles.FUNCTIONAL_TEST);
 

File: examples/showcase/src/test/java/org/springside/examples/showcase/service/AccountServiceTest.java
Patch:
@@ -22,6 +22,9 @@ public class AccountServiceTest {
 	@Mock
 	private UserDao mockUserDao;
 
+	@Mock
+	private BusinessLogger businessLogger;
+
 	@Before
 	public void setUp() {
 		MockitoAnnotations.initMocks(this);

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/web/MashupServerController.java
Patch:
@@ -8,6 +8,7 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springside.modules.mapper.JsonMapper;
+import org.springside.modules.web.MediaTypes;
 
 /**
  * 输出JsonP格式的Mashup 服务端, 支持被跨域调用.
@@ -21,7 +22,7 @@ public class MashupServerController {
 
 	private JsonMapper mapper = new JsonMapper();
 
-	@RequestMapping(value = "/web/mashup", produces = "applicaiton/javascript")
+	@RequestMapping(value = "/web/mashup", produces = MediaTypes.JAVASCRIPT_UTF_8)
 	@ResponseBody
 	public String execute(@RequestParam(DEFAULT_JQUERY_JSONP_CALLBACK_PARM_NAME) String callbackName) {
 

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/rest/UserRestFT.java
Patch:
@@ -47,7 +47,7 @@ public class UserRestFT extends BaseFunctionalTestCase {
 
 	@BeforeClass
 	public static void initUrl() {
-		resoureUrl = baseUrl + "/api/v1/user";
+		resoureUrl = baseUrl + "/api/secure/v1/user";
 	}
 
 	@Before
@@ -86,6 +86,7 @@ public void getUserAsXML() {
 		// 设置Http Basic参数
 		HttpHeaders requestHeaders = new HttpHeaders();
 		requestHeaders.set(com.google.common.net.HttpHeaders.AUTHORIZATION, Servlets.encodeHttpBasic("admin", "admin"));
+		System.out.println("Http header is" + requestHeaders);
 		HttpEntity<?> requestEntity = new HttpEntity(requestHeaders);
 
 		HttpEntity<UserDTO> response = jdkTemplate.exchange(resoureUrl + "/{id}.xml", HttpMethod.GET, requestEntity,

File: modules/extension/src/main/java/org/springside/modules/nosql/redis/scheduler/JobDispatcher.java
Patch:
@@ -110,7 +110,8 @@ public void stop() {
 	public void run() {
 		long currTime = System.currentTimeMillis();
 		List<String> args = Lists.newArrayList(String.valueOf(currTime));
-		scriptExecutor.execute(scriptHash, keys, args);
+		Long count = (Long) scriptExecutor.execute(scriptHash, keys, args);
+		logger.debug("{} Job dispatched", count != null ? count : 0);
 	}
 
 	/**

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/entity/IdEntity.java
Patch:
@@ -16,7 +16,7 @@
  * 
  * @author calvin
  */
-//JPA 基类的标识
+// JPA 基类的标识
 @MappedSuperclass
 public abstract class IdEntity {
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/service/task/TaskService.java
Patch:
@@ -23,7 +23,7 @@
 //Spring Bean的标识.
 @Component
 // 默认将类中的所有public函数纳入事务管理.
-@Transactional(readOnly = true)
+@Transactional
 public class TaskService {
 
 	private TaskDao taskDao;
@@ -32,12 +32,10 @@ public Task getTask(Long id) {
 		return taskDao.findOne(id);
 	}
 
-	@Transactional(readOnly = false)
 	public void saveTask(Task entity) {
 		taskDao.save(entity);
 	}
 
-	@Transactional(readOnly = false)
 	public void deleteTask(Long id) {
 		taskDao.delete(id);
 	}

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/web/account/LoginController.java
Patch:
@@ -12,7 +12,7 @@
 
 /**
  * LoginController负责打开登录页面(GET请求)和登录出错页面(POST请求)，
-
+ * 
  * 真正登录的POST请求由Filter完成,
  * 
  * @author calvin

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/functional/gui/SecurityFT.java
Patch:
@@ -23,11 +23,11 @@ public class SecurityFT extends BaseSeleniumTestCase {
 	public void anonymousUserAccessSystem() {
 		//访问退出登录页面,退出之前的登录
 		s.open("/logout");
-		assertEquals("QuickStart示例:登录页", s.getTitle());
+		s.waitForTitleContains("登录页");
 
 		//访问任意页面会跳转到登录界面
 		s.open("/task");
-		assertEquals("QuickStart示例:登录页", s.getTitle());
+		s.waitForTitleContains("登录页");
 	}
 
 	/**
@@ -51,7 +51,7 @@ public void loginWithWrongPassword() {
 		s.check(By.name("rememberMe"));
 		s.click(By.id("submit_btn"));
 
-		assertEquals("QuickStart示例:登录页", s.getTitle());
+		s.waitForTitleContains("登录页");
 		assertTrue(s.isTextPresent("登录失败，请重试."));
 	}
 }

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/repository/JpaMappingTest.java
Patch:
@@ -27,7 +27,7 @@ public class JpaMappingTest extends SpringTransactionalTestCase {
 	@Test
 	public void allClassMapping() throws Exception {
 		Metamodel model = em.getEntityManagerFactory().getMetamodel();
-		
+
 		assertTrue("No entity mapping found", model.getEntities().size() > 0);
 
 		for (EntityType entityType : model.getEntities()) {

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/cache/guava/GuavaCacheDemo.java
Patch:
@@ -47,7 +47,8 @@ public User load(Long key) throws Exception {
 				});
 
 		// 初始化数据
-		DataFixtures.executeScript(dataSource, "classpath:data/cleanup-data.sql", "classpath:data/import-data.sql");
+		DataFixtures.executeScript(dataSource, "classpath:data/h2/cleanup-data.sql",
+				"classpath:data/h2/import-data.sql");
 
 		// 插入appender用于assert。
 		LogbackListAppender appender = new LogbackListAppender();

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/rest/UserJaxRsFT.java
Patch:
@@ -26,12 +26,12 @@ public static void initUrl() {
 
 	@Test
 	public void getUser() {
-		UserDTO user = restTemplate.getForObject(resoureUrl + "/{id}.json", UserDTO.class, 1L);
+		UserDTO user = restTemplate.getForObject(resoureUrl + "/{id}.xml", UserDTO.class, 1L);
 		assertEquals("admin", user.getLoginName());
 		assertEquals("管理员", user.getName());
 		assertEquals(new Long(1), user.getTeamId());
 
-		user = restTemplate.getForObject(resoureUrl + "/{id}.xml", UserDTO.class, 1L);
+		user = restTemplate.getForObject(resoureUrl + "/{id}.json", UserDTO.class, 1L);
 		assertEquals("admin", user.getLoginName());
 		assertEquals("管理员", user.getName());
 		assertEquals(new Long(1), user.getTeamId());

File: examples/quickstart/src/test/functional/org/springside/examples/quickstart/functional/rest/TaskRestFT.java
Patch:
@@ -109,7 +109,7 @@ public void invalidInput() {
 			assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());
 			Map messages = jsonMapper.fromJson(e.getResponseBodyAsString(), Map.class);
 			assertEquals(1, messages.size());
-			assertEquals("may not be empty", messages.get("title"));
+			assertTrue(messages.get("title").equals("may not be empty") || messages.get("title").equals("不能为空"));
 		}
 
 		// update
@@ -121,7 +121,7 @@ public void invalidInput() {
 			assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());
 			Map messages = jsonMapper.fromJson(e.getResponseBodyAsString(), Map.class);
 			assertEquals(1, messages.size());
-			assertEquals("may not be empty", messages.get("title"));
+			assertTrue(messages.get("title").equals("may not be empty") || messages.get("title").equals("不能为空"));
 		}
 	}
 }

File: examples/showcase/src/main/java/org/springside/examples/showcase/webservice/soap/AccountSoapServiceImpl.java
Patch:
@@ -11,6 +11,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.dao.DuplicateKeyException;
 import org.springside.examples.showcase.entity.Team;
 import org.springside.examples.showcase.entity.User;
 import org.springside.examples.showcase.service.AccountEffectiveService;
@@ -131,7 +132,7 @@ public IdResult createUser(UserDTO user) {
 			String message = StringUtils.join(BeanValidators.extractPropertyAndMessageAsList(e, " "), "\n");
 			return handleParameterError(result, e, message);
 		} catch (RuntimeException e) {
-			if (Exceptions.isCausedBy(e, org.hibernate.exception.ConstraintViolationException.class)) {
+			if (Exceptions.isCausedBy(e, DuplicateKeyException.class)) {
 				String message = "新建用户参数存在唯一性冲突(用户:" + user + ")";
 				return handleParameterError(result, e, message);
 			} else {

File: modules/core/src/main/java/org/springside/modules/utils/Exceptions.java
Patch:
@@ -39,7 +39,7 @@ public static String getStackTraceAsString(Exception e) {
 	 * 判断异常是否由某些底层的异常引起.
 	 */
 	public static boolean isCausedBy(Exception ex, Class<? extends Exception>... causeExceptionClasses) {
-		Throwable cause = ex.getCause();
+		Throwable cause = ex;
 		while (cause != null) {
 			for (Class<? extends Exception> causeClass : causeExceptionClasses) {
 				if (causeClass.isInstance(cause)) {

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/web/account/ProfileController.java
Patch:
@@ -45,8 +45,8 @@ public String update(@Valid @ModelAttribute("user") User user) {
 	 * 因为仅update()方法的form中有id属性，因此仅在update时实际执行.
 	 */
 	@ModelAttribute
-	public void getUser(@RequestParam(value = "id", required = false) Long id, Model model) {
-		if (id != null) {
+	public void getUser(@RequestParam(value = "id", defaultValue = "-1") Long id, Model model) {
+		if (id != -1) {
 			model.addAttribute("user", accountService.getUser(id));
 		}
 	}

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/web/account/UserAdminController.java
Patch:
@@ -62,8 +62,8 @@ public String delete(@PathVariable("id") Long id, RedirectAttributes redirectAtt
 	 * 因为仅update()方法的form中有id属性，因此仅在update时实际执行.
 	 */
 	@ModelAttribute
-	public void getUser(@RequestParam(value = "id", required = false) Long id, Model model) {
-		if (id != null) {
+	public void getUser(@RequestParam(value = "id", defaultValue = "-1") Long id, Model model) {
+		if (id != -1) {
 			model.addAttribute("user", accountService.getUser(id));
 		}
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/web/UserController.java
Patch:
@@ -103,8 +103,8 @@ public String checkLoginName(@RequestParam("oldLoginName") String oldLoginName,
 	 * 因为仅update()方法的form中有id属性，因此仅在update时实际执行.
 	 */
 	@ModelAttribute
-	public void getUser(@RequestParam(value = "id", required = false) Long id, Model model) {
-		if (id != null) {
+	public void getUser(@RequestParam(value = "id", defaultValue = "-1") Long id, Model model) {
+		if (id != -1) {
 			model.addAttribute("user", accountService.getUser(id));
 		}
 	}

File: examples/quickstart/src/test/functional/org/springside/examples/quickstart/functional/BaseFunctionalTestCase.java
Patch:
@@ -8,6 +8,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.jdbc.datasource.SimpleDriverDataSource;
+import org.springside.examples.quickstart.QuickStartServer;
 import org.springside.modules.test.data.DataFixtures;
 import org.springside.modules.test.jetty.JettyFactory;
 import org.springside.modules.test.selenium.Selenium2;

File: examples/quickstart/src/test/java/org/springside/examples/quickstart/QuickStartServer.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.examples.quickstart.functional;
+package org.springside.examples.quickstart;
 
 import org.eclipse.jetty.server.Server;
 import org.springside.modules.test.jetty.JettyFactory;

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -8,6 +8,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.jdbc.datasource.SimpleDriverDataSource;
+import org.springside.examples.showcase.ShowcaseServer;
 import org.springside.modules.test.data.DataFixtures;
 import org.springside.modules.test.jetty.JettyFactory;
 import org.springside.modules.utils.PropertiesLoader;

File: examples/showcase/src/test/java/org/springside/examples/showcase/ShowcaseServer.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.examples.showcase.functional;
+package org.springside.examples.showcase;
 
 import org.eclipse.jetty.server.Server;
 import org.springside.modules.test.jetty.JettyFactory;

File: modules/core/src/test/java/org/springside/modules/security/utils/DigestsTest.java
Patch:
@@ -27,7 +27,7 @@ public void digestString() {
 
 	@Test
 	public void digestFile() throws IOException {
-		Resource resource = new ClassPathResource("/log4j.properties");
+		Resource resource = new ClassPathResource("/logback.xml");
 		byte[] md5result = Digests.md5(resource.getInputStream());
 		byte[] sha1result = Digests.sha1(resource.getInputStream());
 		System.out.println("md5: " + Encodes.encodeHex(md5result));

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/web/MashupServerController.java
Patch:
@@ -21,7 +21,7 @@ public class MashupServerController {
 
 	private final JsonMapper mapper = new JsonMapper();
 
-	@RequestMapping(value = "/web/mashup")
+	@RequestMapping(value = "/web/mashup", produces = "applicaiton/javascript")
 	@ResponseBody
 	public String execute(@RequestParam(DEFAULT_JQUERY_JSONP_CALLBACK_PARM_NAME) String callbackName) {
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/entity/IdEntity.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.entity;
+package ${package}.entity;
 
 import javax.persistence.GeneratedValue;
 import javax.persistence.GenerationType;

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/entity/Task.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.entity;
+package ${package}.entity;
 
 import javax.persistence.Entity;
 import javax.persistence.JoinColumn;

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/entity/User.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.entity;
+package ${package}.entity;
 
 import java.util.Date;
 import java.util.List;

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/repository/TaskDao.java
Patch:
@@ -1,15 +1,15 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.repository;
+package ${package}.repository;
 
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.Pageable;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 import org.springframework.data.jpa.repository.Modifying;
 import org.springframework.data.jpa.repository.Query;
 import org.springframework.data.repository.PagingAndSortingRepository;
-import ${groupId}.${artifactId}.entity.Task;
+import ${package}.entity.Task;
 
 public interface TaskDao extends PagingAndSortingRepository<Task, Long>, JpaSpecificationExecutor<Task> {
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/repository/UserDao.java
Patch:
@@ -1,10 +1,10 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.repository;
+package ${package}.repository;
 
 import org.springframework.data.repository.PagingAndSortingRepository;
-import ${groupId}.${artifactId}.entity.User;
+import ${package}.entity.User;
 
 public interface UserDao extends PagingAndSortingRepository<User, Long> {
 	User findByLoginName(String loginName);

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/rest/TaskRestController.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.rest;
+package ${package}.rest;
 
 import java.net.URI;
 import java.util.List;
@@ -23,8 +23,8 @@
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.ResponseStatus;
 import org.springframework.web.util.UriComponentsBuilder;
-import ${groupId}.${artifactId}.entity.Task;
-import ${groupId}.${artifactId}.service.task.TaskService;
+import ${package}.entity.Task;
+import ${package}.service.task.TaskService;
 import org.springside.modules.beanvalidator.BeanValidators;
 
 /**

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/service/ServiceException.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.service;
+package ${package}.service;
 
 /**
  * Service层公用的Exception.

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/web/account/LoginController.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.web.account;
+package ${package}.web.account;
 
 import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;
 import org.springframework.stereotype.Controller;

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/web/account/RegisterController.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.web.account;
+package ${package}.web.account;
 
 import javax.validation.Valid;
 
@@ -12,8 +12,8 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.servlet.mvc.support.RedirectAttributes;
-import ${groupId}.${artifactId}.entity.User;
-import ${groupId}.${artifactId}.service.account.AccountService;
+import ${package}.entity.User;
+import ${package}.service.account.AccountService;
 
 /**
  * 用户注册的Controller.

File: support/maven-archetype/src/main/resources/archetype-resources/src/main/java/web/account/UserAdminController.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.web.account;
+package ${package}.web.account;
 
 import java.util.List;
 
@@ -16,8 +16,8 @@
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.servlet.mvc.support.RedirectAttributes;
-import ${groupId}.${artifactId}.entity.User;
-import ${groupId}.${artifactId}.service.account.AccountService;
+import ${package}.entity.User;
+import ${package}.service.account.AccountService;
 
 /**
  * 管理员管理用户的Controller.

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/BaseFunctionalTestCase.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.functional;
+package ${package}.functional;
 
 import java.net.URL;
 import java.sql.Driver;

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/BaseSeleniumTestCase.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.functional;
+package ${package}.functional;
 
 import static org.junit.Assert.*;
 
@@ -49,12 +49,12 @@ protected static void createSeleniumOnce() throws Exception {
 	protected static void loginAsUserIfNecessary() {
 		s.open("/task");
 
-		if ("${projectName}示例:登录页".equals(s.getTitle())) {
+		if ("QuickStart示例:登录页".equals(s.getTitle())) {
 			s.type(By.name("username"), "user");
 			s.type(By.name("password"), "user");
 			s.check(By.name("rememberMe"));
 			s.click(By.id("submit_btn"));
-			assertEquals("${projectName}示例:任务管理", s.getTitle());
+			assertEquals("QuickStart示例:任务管理", s.getTitle());
 		}
 	}
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/QuickStartServer.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.functional;
+package ${package}.functional;
 
 import org.eclipse.jetty.server.Server;
 import org.springside.modules.test.jetty.JettyFactory;

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/gui/ProfileFT.java
Patch:
@@ -1,13 +1,13 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.functional.gui;
+package ${package}.functional.gui;
 
 import static org.junit.Assert.*;
 
 import org.junit.Test;
 import org.openqa.selenium.By;
-import ${groupId}.${artifactId}.functional.BaseSeleniumTestCase;
+import ${package}.functional.BaseSeleniumTestCase;
 
 public class ProfileFT extends BaseSeleniumTestCase {
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/functional/gui/UserAdminFT.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.functional.gui;
+package ${package}.functional.gui;
 
 import static org.junit.Assert.*;
 
@@ -11,7 +11,7 @@
 import org.junit.experimental.categories.Category;
 import org.openqa.selenium.By;
 import org.openqa.selenium.WebElement;
-import ${groupId}.${artifactId}.functional.BaseSeleniumTestCase;
+import ${package}.functional.BaseSeleniumTestCase;
 import org.springside.modules.test.category.Smoke;
 
 public class UserAdminFT extends BaseSeleniumTestCase {

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/data/TaskData.java
Patch:
@@ -1,10 +1,10 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.data;
+package ${package}.data;
 
-import ${groupId}.${artifactId}.entity.Task;
-import ${groupId}.${artifactId}.entity.User;
+import ${package}.entity.Task;
+import ${package}.entity.User;
 import org.springside.modules.test.data.RandomData;
 
 /**

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/data/UserData.java
Patch:
@@ -1,9 +1,9 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.data;
+package ${package}.data;
 
-import ${groupId}.${artifactId}.entity.User;
+import ${package}.entity.User;
 import org.springside.modules.test.data.RandomData;
 
 public class UserData {

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/repository/JpaMappingTest.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.repository;
+package ${package}.repository;
 
 import static org.junit.Assert.*;
 

File: support/maven-archetype/src/main/resources/archetype-resources/src/test/java/repository/TaskDaoTest.java
Patch:
@@ -1,7 +1,7 @@
 #set( $symbol_pound = '#' )
 #set( $symbol_dollar = '$' )
 #set( $symbol_escape = '\' )
-package ${groupId}.${artifactId}.repository;
+package ${package}.repository;
 
 import static org.junit.Assert.*;
 
@@ -11,7 +11,7 @@
 import org.springframework.data.domain.PageRequest;
 import org.springframework.data.domain.Sort.Direction;
 import org.springframework.test.context.ContextConfiguration;
-import ${groupId}.${artifactId}.entity.Task;
+import ${package}.entity.Task;
 import org.springside.modules.test.spring.SpringTransactionalTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/web/task/TaskController.java
Patch:
@@ -54,14 +54,15 @@ public class TaskController {
 	@RequestMapping(value = "")
 	public String list(@RequestParam(value = "sortType", defaultValue = "auto") String sortType,
 			@RequestParam(value = "page", defaultValue = "1") int pageNumber, Model model, ServletRequest request) {
-
 		Map<String, Object> searchParams = Servlets.getParametersStartingWith(request, "search_");
 		Long userId = getCurrentUserId();
 
 		Page<Task> tasks = taskService.getUserTask(userId, searchParams, pageNumber, PAGE_SIZE, sortType);
+
 		model.addAttribute("tasks", tasks);
 		model.addAttribute("sortType", sortType);
 		model.addAttribute("sortTypes", sortTypes);
+		// 将搜索条件编码成字符串，用于排序，分页的URL
 		model.addAttribute("searchParams", Servlets.encodeParameterStringWithPrefix(searchParams, "search_"));
 
 		return "task/taskList";

File: modules/core/src/main/java/org/springside/modules/persistence/DynamicSpecifications.java
Patch:
@@ -28,7 +28,6 @@ public Predicate toPredicate(Root<T> root, CriteriaQuery<?> query, CriteriaBuild
 
 					List<Predicate> predicates = Lists.newArrayList();
 					for (SearchFilter filter : filters) {
-
 						// nested path translate, 如Task的名为"user.name"的filedName, 转换为Task.user.name属性
 						String[] names = StringUtils.split(filter.fieldName, ".");
 						Path expression = root.get(names[0]);

File: modules/core/src/main/java/org/springside/modules/web/Servlets.java
Patch:
@@ -161,7 +161,7 @@ public static Map<String, Object> getParametersStartingWith(ServletRequest reque
 	}
 
 	/**
-	 * 组合Parameters生成Query String的Parameter部分,并在paramter name上加上prefix.
+	 * 组合Parameters生成Query String的Parameter部分, 并在paramter name上加上prefix.
 	 * 
 	 * @see #getParametersStartingWith
 	 */

File: modules/core/src/main/java/org/springside/modules/persistence/SearchFilter.java
Patch:
@@ -3,7 +3,7 @@
 public class SearchFilter {
 
 	public enum Operator {
-		EQ, LIKE
+		EQ, LIKE, GT, LT, GTE, LTE
 	}
 
 	public String fieldName;

File: examples/quickstart/src/test/functional/org/springside/examples/quickstart/functional/gui/RegisterFT.java
Patch:
@@ -29,6 +29,9 @@ public void register() {
 
 		//登陆成功
 		assertEquals("QuickStart示例:任务管理", s.getTitle());
+
+		//退出用户
+		s.open("/logout");
 	}
 
 	@Test

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/service/account/AccountService.java
Patch:
@@ -49,6 +49,7 @@ public User findUserByLoginName(String loginName) {
 	@Transactional(readOnly = false)
 	public void registerUser(User user) {
 		entryptPassword(user);
+		user.setRoles("user");
 		userDao.save(user);
 	}
 

File: modules/core/src/main/java/org/springside/modules/security/utils/Digests.java
Patch:
@@ -11,7 +11,7 @@
 import java.security.MessageDigest;
 import java.security.SecureRandom;
 
-import org.apache.commons.lang.Validate;
+import org.apache.commons.lang3.Validate;
 import org.springside.modules.utils.Exceptions;
 
 /**

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/entity/Task.java
Patch:
@@ -4,7 +4,6 @@
 import javax.persistence.JoinColumn;
 import javax.persistence.ManyToOne;
 import javax.persistence.Table;
-import javax.validation.constraints.NotNull;
 
 import org.hibernate.validator.constraints.NotBlank;
 
@@ -35,7 +34,6 @@ public void setDescription(String description) {
 		this.description = description;
 	}
 
-	@NotNull
 	@ManyToOne
 	@JoinColumn(name = "USER_ID")
 	public User getUser() {

File: examples/showcase/src/main/java/org/springside/examples/showcase/entity/User.java
Patch:
@@ -18,7 +18,6 @@
 import org.hibernate.annotations.FetchMode;
 import org.hibernate.validator.constraints.Email;
 import org.hibernate.validator.constraints.NotBlank;
-import org.hibernate.validator.constraints.NotEmpty;
 import org.springside.modules.utils.Collections3;
 
 import com.fasterxml.jackson.annotation.JsonIgnore;
@@ -106,8 +105,6 @@ public void setStatus(String status) {
 		this.status = status;
 	}
 
-	//JSR303规则
-	@NotEmpty
 	//多对多定义
 	@ManyToMany
 	@JoinTable(name = "SS_USER_ROLE", joinColumns = { @JoinColumn(name = "USER_ID") }, inverseJoinColumns = { @JoinColumn(name = "ROLE_ID") })

File: examples/showcase/src/test/java/org/springside/examples/showcase/service/AccountServiceTest.java
Patch:
@@ -5,6 +5,7 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+import org.mockito.InjectMocks;
 import org.mockito.Mock;
 import org.mockito.Mockito;
 import org.mockito.MockitoAnnotations;
@@ -15,7 +16,9 @@
 
 public class AccountServiceTest {
 
+	@InjectMocks
 	private AccountService accountService;
+
 	@Mock
 	private UserDao mockUserDao;
 
@@ -24,8 +27,6 @@ public void setUp() {
 		MockitoAnnotations.initMocks(this);
 		ShiroTestUtils.mockSubject(new ShiroUser("foo", "Foo"));
 
-		accountService = new AccountService();
-		accountService.setUserDao(mockUserDao);
 	}
 
 	@After

File: modules/core/src/test/java/org/springside/modules/persistence/HibernatesTest.java
Patch:
@@ -9,15 +9,13 @@
 import javax.sql.DataSource;
 
 import org.hibernate.dialect.H2Dialect;
-import org.hibernate.dialect.MySQL5Dialect;
 import org.hibernate.dialect.MySQL5InnoDBDialect;
 import org.hibernate.dialect.Oracle10gDialect;
 import org.junit.Test;
 import org.mockito.Mockito;
-import org.springside.modules.persistence.Hibernates;
 
 public class HibernatesTest {
-	
+
 	@Test
 	public void testGetDialect() throws SQLException {
 		DataSource mockDataSource = Mockito.mock(DataSource.class);

File: examples/quickstart/src/main/java/org/springside/examples/quickstart/web/task/TaskController.java
Patch:
@@ -38,9 +38,6 @@
 @RequestMapping(value = "/task")
 public class TaskController {
 
-	@Autowired
-	private TaskService taskService;
-
 	private static final int PAGE_SIZE = 3;
 
 	private static Map<String, String> sortTypes = Maps.newLinkedHashMap();
@@ -49,6 +46,9 @@ public class TaskController {
 		sortTypes.put("title", "标题");
 	}
 
+	@Autowired
+	private TaskService taskService;
+
 	@RequestMapping(method = RequestMethod.GET)
 	public String list(@RequestParam(value = "sortType", defaultValue = "auto") String sortType,
 			@RequestParam(value = "page", defaultValue = "1") int pageNumber, Model model) {

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/utilities/collection/AdvancedMapDemo.java
Patch:
@@ -43,13 +43,13 @@ public void multiMap() {
 	 * Guava的BiMap，可随时调转Key与Value.
 	 */
 	@Test
-	public void BiMap() {
+	public void biMap() {
 		BiMap<Integer, String> bimap = HashBiMap.create();
 		bimap.put(1, "a");
 		bimap.put(2, "b");
 
 		BiMap<String, Integer> bimap2 = bimap.inverse();
-		assertEquals(new Integer(2), bimap2.get("b"));
+		assertEquals(Integer.valueOf(2), bimap2.get("b"));
 	}
 
 	/*

File: examples/showcase/src/main/java/org/springside/examples/showcase/demos/utilities/dozer/DozerDemo.java
Patch:
@@ -35,7 +35,7 @@ public void map() {
 
 		assertEquals("car", product.getProductName());
 		//原来的字符串被Map成Double。
-		assertEquals(new Double(200), product.getPrice());
+		assertEquals(Double.valueOf(200), product.getPrice());
 		//原来的PartDTO同样被Map成Part ,Array被Map成List
 		assertEquals("door", product.getParts().get(0).getName());
 		//Part中循环依赖的Product同样被赋值。
@@ -73,9 +73,9 @@ public void copy() {
 		//原来的horse，被替换成car
 		assertEquals("car", product.getProductName());
 		//原来的20的属性被覆盖成200，同样被从字符串被专为Double。
-		assertEquals(new Double(200), product.getPrice());
+		assertEquals(Double.valueOf(200), product.getPrice());
 		//DTO中没有的属性值,在Product中被保留
-		assertEquals(new Double(20), product.getWeight());
+		assertEquals(Double.valueOf(20), product.getWeight());
 		//Part中循环依赖的Product同样被赋值。
 		assertEquals("car", product.getParts().get(0).getProduct().getProductName());
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/repository/mybatis/TeamMybatisDao.java
Patch:
@@ -11,5 +11,5 @@
 @MyBatisRepository
 public interface TeamMybatisDao {
 
-	public Team getWithDetail(Long id);
+	Team getWithDetail(Long id);
 }

File: examples/showcase/src/main/java/org/springside/examples/showcase/web/UserController.java
Patch:
@@ -30,16 +30,16 @@
 @RequestMapping(value = "/account/user")
 public class UserController {
 
-	@Autowired
-	private AccountService accountService;
-
 	private static Map<String, String> allStatus = Maps.newHashMap();
 
 	static {
 		allStatus.put("enabled", "有效");
 		allStatus.put("disabled", "无效");
 	}
 
+	@Autowired
+	private AccountService accountService;
+
 	//特别设定多个ReuireRoles之间为Or关系，而不是默认的And.
 	@RequiresRoles(value = { "Admin", "User" }, logical = Logical.OR)
 	@RequestMapping(value = "")

File: modules/core/src/main/java/org/springside/modules/mapper/JaxbMapper.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class JaxbMapper {
 
-	private static final ConcurrentMap<Class, JAXBContext> jaxbContexts = new ConcurrentHashMap<Class, JAXBContext>();
+	private static ConcurrentMap<Class, JAXBContext> jaxbContexts = new ConcurrentHashMap<Class, JAXBContext>();
 
 	/**
 	 * Java Object->Xml without encoding.

File: modules/core/src/main/java/org/springside/modules/security/shiro/HasAnyPermissionsTag.java
Patch:
@@ -10,6 +10,7 @@
  */
 public class HasAnyPermissionsTag extends PermissionTag {
 
+	private static final long serialVersionUID = -4786931833148680306L;
 	private static final String PERMISSION_NAMES_DELIMETER = ",";
 
 	@Override

File: modules/core/src/main/java/org/springside/modules/utils/Reflections.java
Patch:
@@ -30,8 +30,7 @@ public class Reflections {
 
 	private static final String GETTER_PREFIX = "get";
 
-	/** The CGLIB class separator character "$$" */
-	public static final String CGLIB_CLASS_SEPARATOR = "$$";
+	private static final String CGLIB_CLASS_SEPARATOR = "$$";
 
 	private static Logger logger = LoggerFactory.getLogger(Reflections.class);
 
@@ -45,7 +44,6 @@ public static Object invokeGetter(Object obj, String propertyName) {
 
 	/**
 	 * 调用Setter方法, 仅匹配方法名。
-	 * 
 	 */
 	public static void invokeSetter(Object obj, String propertyName, Object value) {
 		String setterMethodName = SETTER_PREFIX + StringUtils.capitalize(propertyName);

File: modules/core/src/main/java/org/springside/modules/web/taglib/BSCheckboxesTag.java
Patch:
@@ -7,6 +7,8 @@
 
 public class BSCheckboxesTag extends BSAbstractMultiCheckedElementTag {
 
+	private static final long serialVersionUID = 4310358928301706621L;
+
 	@Override
 	protected int writeTagContent(TagWriter tagWriter) throws JspException {
 		super.writeTagContent(tagWriter);

File: modules/core/src/main/java/org/springside/modules/web/taglib/BSRadioButtonsTag.java
Patch:
@@ -1,6 +1,8 @@
 package org.springside.modules.web.taglib;
 
 public class BSRadioButtonsTag extends BSAbstractMultiCheckedElementTag {
+	private static final long serialVersionUID = 6257615872362092808L;
+
 	@Override
 	protected String getInputType() {
 		return "radio";

File: examples/quickstart/src/test/functional/org/springside/examples/quickstart/functional/gui/TaskGuiFT.java
Patch:
@@ -62,6 +62,6 @@ public void inputInValidateValue() {
 		s.click(By.linkText("创建任务"));
 		s.click(By.id("submit_btn"));
 
-		assertEquals("必选字段", s.getText(By.xpath("//fieldset/div/div/label")));
+		assertEquals("必选字段", s.getText(By.xpath("//fieldset/div/div/span")));
 	}
 }

File: examples/quickstart/src/test/java/org/springside/examples/quickstart/repository/TaskDaoTest.java
Patch:
@@ -20,7 +20,7 @@ public class TaskDaoTest extends SpringTransactionalTestCase {
 
 	@Test
 	public void findTasksByUserId() throws Exception {
-		List<Task> tasks = taskDao.findByUserId(1L, new Sort(Direction.ASC, "id"));
+		List<Task> tasks = taskDao.findByUserId(2L, new Sort(Direction.ASC, "id"));
 		assertEquals(5, tasks.size());
 		assertEquals(new Long(1), tasks.get(0).getId());
 

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/account/UserManagerFT.java
Patch:
@@ -19,7 +19,7 @@ public class UserManagerFT extends BaseSeleniumTestCase {
 	@Category(Smoke.class)
 	public void list() {
 		s.open("/");
-		s.click(By.linkText("综合演示"));
+		s.click(By.linkText("帐号管理"));
 		assertEquals("Showcase示例:综合演示用例", s.getTitle());
 	}
 

File: examples/showcase/src/main/java/org/springside/examples/showcase/entity/Team.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.List;
 
 import javax.persistence.Entity;
+import javax.persistence.JoinColumn;
 import javax.persistence.OneToMany;
 import javax.persistence.OneToOne;
 import javax.persistence.Table;
@@ -31,6 +32,7 @@ public void setName(String name) {
 	}
 
 	@OneToOne
+	@JoinColumn(name = "MASTER_ID")
 	public User getMaster() {
 		return master;
 	}
@@ -39,7 +41,7 @@ public void setMaster(User master) {
 		this.master = master;
 	}
 
-	@OneToMany
+	@OneToMany(mappedBy = "team")
 	public List<User> getUserList() {
 		return userList;
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/entity/User.java
Patch:
@@ -117,6 +117,7 @@ public void setRoleList(List<Role> roleList) {
 	}
 
 	@ManyToOne
+	@JoinColumn(name = "TEAM_ID")
 	public Team getTeam() {
 		return team;
 	}

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/account/UserManagerFT.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.examples.showcase.functional.common;
+package org.springside.examples.showcase.functional.account;
 
 import static org.junit.Assert.*;
 

File: examples/showcase/src/main/java/org/springside/examples/showcase/web/StaticContentServlet.java
Patch:
@@ -15,6 +15,7 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.context.ApplicationContext;
+import org.springframework.http.MediaType;
 import org.springframework.web.context.support.WebApplicationContextUtils;
 import org.springside.modules.web.Servlets;
 
@@ -35,8 +36,8 @@ public class StaticContentServlet extends HttpServlet {
 	private static final long serialVersionUID = -1855617048198368534L;
 
 	/** 需要被Gzip压缩的Mime类型. */
-	private static final String[] GZIP_MIME_TYPES = { "text/html", "text/xml", "text/plain", "text/css",
-			"text/javascript", "application/xml", "application/xhtml+xml", "application/x-javascript" };
+	private static final String[] GZIP_MIME_TYPES = { MediaType.TEXT_HTML_VALUE, MediaType.APPLICATION_XHTML_XML_VALUE,
+			MediaType.TEXT_PLAIN_VALUE, "text/css", "text/javascript", "application/x-javascript" };
 
 	/** 需要被Gzip压缩的最小文件大小. */
 	private static final int GZIP_MINI_LENGTH = 512;

File: examples/mini-web/src/main/java/org/springside/examples/miniweb/web/IndexController.java
Patch:
@@ -12,9 +12,10 @@ public String index() {
 		return "redirect:/task";
 	}
 
-	@RequestMapping(value = "/healthcheck", produces = "plain/text")
+	@RequestMapping(value = "/healthcheck", produces = "text/plain")
 	public @ResponseBody
 	String healthCheck() {
-		return "ok";
+
+		return "ok222222";
 	}
 }

File: examples/mini-service/src/main/java/org/springside/examples/miniservice/webservice/dto/DepartmentDTO.java
Patch:
@@ -4,13 +4,15 @@
 
 import javax.xml.bind.annotation.XmlElement;
 import javax.xml.bind.annotation.XmlElementWrapper;
+import javax.xml.bind.annotation.XmlRootElement;
 import javax.xml.bind.annotation.XmlType;
 
 import org.apache.commons.lang3.builder.ToStringBuilder;
 import org.springside.examples.miniservice.webservice.WsConstants;
 
 import com.google.common.collect.Lists;
 
+@XmlRootElement
 @XmlType(name = "Department", namespace = WsConstants.NS)
 public class DepartmentDTO {
 

File: examples/mini-service/src/main/java/org/springside/examples/miniservice/webservice/dto/UserDTO.java
Patch:
@@ -1,5 +1,6 @@
 package org.springside.examples.miniservice.webservice.dto;
 
+import javax.xml.bind.annotation.XmlRootElement;
 import javax.xml.bind.annotation.XmlType;
 
 import org.apache.commons.lang3.builder.ToStringBuilder;
@@ -12,6 +13,7 @@
  * 
  * @author calvin
  */
+@XmlRootElement
 @XmlType(name = "User", namespace = WsConstants.NS)
 public class UserDTO {
 

File: examples/mini-service/src/main/java/org/springside/examples/miniservice/webservice/rs/client/AccountResourceClient.java
Patch:
@@ -26,7 +26,7 @@ public class AccountResourceClient {
 
 	private WebResource client;
 
-	private GenericType<List<UserDTO>> userListType = new GenericType<List<UserDTO>>() {
+	private final GenericType<List<UserDTO>> userListType = new GenericType<List<UserDTO>>() {
 	};
 
 	@Required
@@ -38,7 +38,7 @@ public void setBaseUrl(String baseUrl) {
 	 * 获取部门.
 	 */
 	public DepartmentDTO getDepartmentDetail(Long id) {
-		return client.path("/departments/" + id).accept(MediaType.APPLICATION_JSON).get(DepartmentDTO.class);
+		return client.path("/departments/" + id).accept(MediaType.APPLICATION_XML).get(DepartmentDTO.class);
 	}
 
 	/**

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzTimerClusterJobTest.java
Patch:
@@ -30,7 +30,7 @@ public void scheduleJob() throws Exception {
 		Log4jMockAppender appender = new Log4jMockAppender();
 		appender.addToLogger(QuartzClusterableJob.class);
 
-		//等待任务延时2秒启动
+		//等待任务延时启动
 		Threads.sleep(3000);
 
 		//验证任务已执行

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkTimerJobTest.java
Patch:
@@ -30,6 +30,6 @@ public void scheduleJob() throws Exception {
 
 		//验证任务已执行
 		assertEquals(1, appender.getLogsCount());
-		assertEquals("There are 6 user in database, print by jdk timer job.", appender.getFirstMessage());
+		assertEquals("There are 6 user in database, printed by jdk timer job.", appender.getFirstMessage());
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzTimerClusterJobTest.java
Patch:
@@ -30,8 +30,8 @@ public void scheduleJob() throws Exception {
 		Log4jMockAppender appender = new Log4jMockAppender();
 		appender.addToLogger(QuartzClusterableJob.class);
 
-		//等待任务启动
-		Threads.sleep(2000);
+		//等待任务延时2秒启动
+		Threads.sleep(3000);
 
 		//验证任务已执行
 		assertEquals(1, appender.getLogsCount());

File: examples/mini-web/src/test/functional/org/springside/examples/miniweb/functional/account/GroupManagerIT.java
Patch:
@@ -26,7 +26,7 @@ public class GroupManagerIT extends BaseFunctionalTestCase {
 	 */
 	@Test
 	public void viewGroupList() {
-		s.click(By.linkText(Gui.MENU_GROUP));
+		s.click(Gui.MENU_GROUP);
 		WebElement table = s.findElement(By.xpath("//table[@id='contentTable']"));
 		assertEquals("管理员", s.getTable(table, 1, GroupColumn.NAME.ordinal()));
 		assertEquals("查看用戶,修改用户,查看权限组,修改权限组", s.getTable(table, 1, GroupColumn.PERMISSIONS.ordinal()));
@@ -37,7 +37,7 @@ public void viewGroupList() {
 	 */
 	@Test
 	public void createGroup() {
-		s.click(By.linkText(Gui.MENU_GROUP));
+		s.click(Gui.MENU_GROUP);
 		s.click(By.linkText("创建权限组"));
 
 		//生成测试数据
@@ -63,7 +63,7 @@ public void createGroup() {
 	}
 
 	private void verifyGroup(Group group) {
-		s.click(By.linkText(Gui.MENU_GROUP));
+		s.click(Gui.MENU_GROUP);
 		s.click(By.id("editLink-" + group.getName()));
 		assertEquals(group.getName(), s.getValue(By.id("name")));
 

File: examples/mini-web/src/test/functional/org/springside/examples/miniweb/functional/account/SecurityIT.java
Patch:
@@ -44,7 +44,7 @@ public void checkUserPermission() {
 		s.click(By.id("submit"));
 
 		//校验用户权限组的操作单元格只有查看
-		s.click(By.linkText(Gui.MENU_USER));
+		s.click(Gui.MENU_USER);
 		assertEquals("", s.getTable(By.id("contentTable"), 1, UserColumn.OPERATIONS.ordinal()));
 
 		//强行访问无权限的url

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkTimerJobTest.java
Patch:
@@ -26,7 +26,7 @@ public void scheduleJob() throws Exception {
 		appender.addToLogger(JdkExecutorJob.class);
 
 		//等待任务启动
-		Threads.sleep(3000);
+		Threads.sleep(2000);
 
 		//验证任务已执行
 		assertEquals(1, appender.getLogsCount());

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzTimerClusterJobTest.java
Patch:
@@ -31,7 +31,7 @@ public void scheduleJob() throws Exception {
 		appender.addToLogger(QuartzClusterableJob.class);
 
 		//等待任务启动
-		Threads.sleep(3000);
+		Threads.sleep(2000);
 
 		//验证任务已执行
 		assertEquals(1, appender.getLogsCount());

File: modules/extension/src/test/java/org/springside/modules/memcached/SpyMemcachedClientTest.java
Patch:
@@ -25,12 +25,12 @@ public void normal() {
 		String value = "admin";
 
 		spyMemcachedClient.set(key, 60 * 60 * 1, value);
-		Threads.sleep(2000);
+		Threads.sleep(1000);
 		String result = spyMemcachedClient.get(key);
 		assertEquals(value, result);
 
 		spyMemcachedClient.delete(key);
-		Threads.sleep(2000);
+		Threads.sleep(1000);
 		result = spyMemcachedClient.get(key);
 		assertNull(result);
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/utilities/email/MimeMailService.java
Patch:
@@ -48,7 +48,7 @@ public void sendNotificationMail(String userName) {
 
 			helper.setTo("springside3.demo@gmail.com");
 			helper.setFrom("springside3.demo@gmail.com");
-			helper.setSubject("User Changed");
+			helper.setSubject("用户修改通知");
 
 			String content = generateContent(userName);
 			helper.setText(content, true);

File: examples/showcase/src/main/java/org/springside/examples/showcase/utilities/email/SimpleMailService.java
Patch:
@@ -26,7 +26,7 @@ public void sendNotificationMail(String userName) {
 		SimpleMailMessage msg = new SimpleMailMessage();
 		msg.setFrom("springside3.demo@gmail.com");
 		msg.setTo("springside3.demo@gmail.com");
-		msg.setSubject("User Changed");
+		msg.setSubject("用户修改通知");
 
 		//将用户名与当期日期格式化到邮件内容的字符串模板
 		String content = String.format(textTemplate, userName, new Date());

File: examples/showcase/src/test/java/org/springside/examples/showcase/mail/MailServiceTest.java
Patch:
@@ -44,7 +44,7 @@ public void sendSimpleMail() throws MessagingException, InterruptedException, IO
 		MimeMessage message = messages[messages.length - 1];
 
 		assertEquals("springside3.demo@gmail.com", message.getFrom()[0].toString());
-		assertEquals("User Changed", message.getSubject());
+		assertEquals("用户修改通知", message.getSubject());
 		//text格式内容
 		System.out.println(message.getContent());
 		assertTrue(((String) message.getContent()).contains("被修改"));
@@ -60,7 +60,7 @@ public void sendMimeMail() throws InterruptedException, MessagingException, IOEx
 		MimeMessage message = messages[messages.length - 1];
 
 		assertEquals("springside3.demo@gmail.com", message.getFrom()[0].toString());
-		assertEquals("User Changed", message.getSubject());
+		assertEquals("用户修改通知", message.getSubject());
 
 		MimeMultipart mimeMultipart = (MimeMultipart) message.getContent();
 

File: examples/showcase/src/main/java/org/springside/examples/showcase/utilities/email/MimeMailService.java
Patch:
@@ -48,7 +48,7 @@ public void sendNotificationMail(String userName) {
 
 			helper.setTo("springside3.demo@gmail.com");
 			helper.setFrom("springside3.demo@gmail.com");
-			helper.setSubject("用户修改通知");
+			helper.setSubject("User Changed");
 
 			String content = generateContent(userName);
 			helper.setText(content, true);

File: examples/showcase/src/main/java/org/springside/examples/showcase/utilities/email/SimpleMailService.java
Patch:
@@ -26,7 +26,7 @@ public void sendNotificationMail(String userName) {
 		SimpleMailMessage msg = new SimpleMailMessage();
 		msg.setFrom("springside3.demo@gmail.com");
 		msg.setTo("springside3.demo@gmail.com");
-		msg.setSubject("用户修改通知");
+		msg.setSubject("User Changed");
 
 		//将用户名与当期日期格式化到邮件内容的字符串模板
 		String content = String.format(textTemplate, userName, new Date());

File: examples/mini-service/src/test/functional/org/springside/examples/miniservice/functional/BaseFunctionalTestCase.java
Patch:
@@ -30,7 +30,7 @@ public class BaseFunctionalTestCase {
 
 	protected static SimpleDriverDataSource dataSource;
 
-	protected static PropertiesLoader propertiesLoader = new PropertiesLoader(
+	protected static PropertiesLoader propertiesLoader = new PropertiesLoader("classpath:/application.properties",
 			"classpath:/application.functional.properties", "classpath:/application.functional-local.properties");
 
 	private static Logger logger = LoggerFactory.getLogger(BaseFunctionalTestCase.class);

File: examples/mini-web/src/test/functional/org/springside/examples/miniweb/functional/BaseFunctionalTestCase.java
Patch:
@@ -38,7 +38,7 @@ public class BaseFunctionalTestCase {
 
 	protected static Selenium2 s;
 
-	protected static PropertiesLoader propertiesLoader = new PropertiesLoader(
+	protected static PropertiesLoader propertiesLoader = new PropertiesLoader("classpath:/application.properties",
 			"classpath:/application.functional.properties", "classpath:/application.functional-local.properties");
 
 	private static Logger logger = LoggerFactory.getLogger(BaseFunctionalTestCase.class);

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -28,7 +28,7 @@ public class BaseFunctionalTestCase {
 
 	protected static SimpleDriverDataSource dataSource;
 
-	protected static PropertiesLoader propertiesLoader = new PropertiesLoader(
+	protected static PropertiesLoader propertiesLoader = new PropertiesLoader("classpath:/application.properties",
 			"classpath:/application.functional.properties", "classpath:/application.functional-local.properties");
 
 	private static Logger logger = LoggerFactory.getLogger(BaseFunctionalTestCase.class);

File: examples/showcase/src/main/java/org/springside/examples/showcase/common/service/AccountManager.java
Patch:
@@ -87,7 +87,7 @@ public void saveUser(User user) {
 	public List<User> getAllUser() {
 
 		if (applicationStatistics != null) {
-			applicationStatistics.incrUpdateUserTimes();
+			applicationStatistics.incrListUserTimes();
 		}
 		return (List<User>) userJpaDao.findAll();
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/common/service/AccountManager.java
Patch:
@@ -136,8 +136,9 @@ private User getUserFromMemcached(Long id) {
 	 */
 	public User findUserByNameInitialized(String name) {
 		User user = userJpaDao.findByName(name);
-		Jpas.initLazyProperty(user.getRoleList());
-
+		if (user != null) {
+			Jpas.initLazyProperty(user.getRoleList());
+		}
 		return user;
 	}
 

File: modules/core/src/main/java/org/springside/modules/security/utils/Digests.java
Patch:
@@ -108,9 +108,7 @@ private static byte[] digest(InputStream input, String algorithm) throws IOExcep
 				read = input.read(buffer, 0, bufferLength);
 			}
 
-			byte[] result = messageDigest.digest();
-			return result;
-
+			return messageDigest.digest();
 		} catch (GeneralSecurityException e) {
 			throw Exceptions.unchecked(e);
 		}

File: modules/core/src/main/java/org/springside/modules/test/functional/WebDriverFactory.java
Patch:
@@ -45,9 +45,7 @@ public static WebDriver createDriver(String driverName) {
 		} else if (BrowserType.chrome.name().equals(driverName)) {
 			driver = new ChromeDriver();
 		} else if (BrowserType.htmlunit.name().equals(driverName)) {
-			driver = new HtmlUnitDriver();
-			//支持Javascript
-			((HtmlUnitDriver) driver).setJavascriptEnabled(true);
+			driver = new HtmlUnitDriver(true);
 		} else if (driverName.startsWith(BrowserType.remote.name())) {
 			String[] params = driverName.split(":");
 			Assert.isTrue(params.length == 4,

File: modules/core/src/test/java/org/springside/modules/test/functional/WebDriverFactoryTest.java
Patch:
@@ -50,14 +50,14 @@ public void buildWebDriver() throws Exception {
 		driver = WebDriverFactory.createDriver("chrome");
 		assertTrue(driver instanceof ChromeDriver);
 
-		PowerMockito.whenNew(HtmlUnitDriver.class).withNoArguments().thenReturn(htmlUnitDriver);
+		PowerMockito.whenNew(HtmlUnitDriver.class).withArguments(true).thenReturn(htmlUnitDriver);
 		driver = WebDriverFactory.createDriver("htmlunit");
 		assertTrue(driver instanceof HtmlUnitDriver);
 
 		PowerMockito.whenNew(RemoteWebDriver.class)
-				.withArguments(new URL("http://localhost:3000/wd"), DesiredCapabilities.firefox())
+				.withArguments(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.firefox())
 				.thenReturn(remoteWebDriver);
-		driver = WebDriverFactory.createDriver("remote:localhost:3000:firefox");
+		driver = WebDriverFactory.createDriver("remote:localhost:4444:firefox");
 		assertTrue(driver instanceof RemoteWebDriver);
 	}
 }

File: examples/mini-web/src/test/functional/org/springside/examples/miniweb/functional/BaseFunctionalTestCase.java
Patch:
@@ -23,9 +23,9 @@
 /**
  * 功能测试基类.
  * 
- * 在整个测试期间启动一次Jetty Server, 并在每个TestCase Class执行前重新载入默认数据.
- * 在每个TestCase Class执行前创建WebDriver，并在每个TestCase执行后关闭WebDriver.
- * 
+ * 在整个测试期间启动一次Jetty Server和 Selenium，在JVM退出时关闭两者。 
+ * 在每个TestCase Class执行前重新载入默认数据.
+ *  
  * @author calvin
  */
 @Ignore

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -16,7 +16,7 @@
 /**
  * 功能测试基类.
  * 
- * 在整个测试期间启动一次Jetty Server, 并在每个TestCase执行前中重新载入默认数据.
+ * 在整个测试期间启动一次Jetty Server, 并在每个TestCase Class执行前中重新载入默认数据.
  * 
  * @author calvin
  */

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseSeleniumTestCase.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * 功能测试基类.
  * 
- * 在BaseFunctionalTestCase的基础上，加入对Selenium WebDriver的启动和关闭.
+ * 在BaseFunctionalTestCase的基础上，在整个测试期间启动一次Selenium.
  * 
  * @author calvin
  */

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/common/UserManagerIT.java
Patch:
@@ -23,6 +23,7 @@ public void list() {
 		assertEquals("Showcase示例:综合演示用例", s.getTitle());
 	}
 
+	@Category(Smoke.class)
 	public void editUser() {
 		s.open("/");
 		s.click(By.linkText("综合演示"));

File: modules/core/src/main/java/org/springside/modules/test/functional/WebDriverFactory.java
Patch:
@@ -45,8 +45,9 @@ public static WebDriver createDriver(String driverName) {
 		} else if (BrowserType.chrome.name().equals(driverName)) {
 			driver = new ChromeDriver();
 		} else if (BrowserType.htmlunit.name().equals(driverName)) {
-			//尝试支持Javascript
-			driver = new HtmlUnitDriver(true);
+			driver = new HtmlUnitDriver();
+			//支持Javascript
+			((HtmlUnitDriver) driver).setJavascriptEnabled(true);
 		} else if (driverName.startsWith(BrowserType.remote.name())) {
 			String[] params = driverName.split(":");
 			Assert.isTrue(params.length == 4,

File: examples/mini-service/src/test/functional/org/springside/examples/miniservice/functional/Start.java
Patch:
@@ -15,7 +15,7 @@ public class Start {
 	public static final String BASE_URL = "http://localhost:8080/mini-service";
 
 	public static void main(String[] args) throws Exception {
-		Server server = JettyFactory.buildNormalServer(PORT, CONTEXT);
+		Server server = JettyFactory.createServer(PORT, CONTEXT);
 		server.start();
 
 		System.out.println("Server running at " + BASE_URL);

File: examples/mini-web/src/test/functional/org/springside/examples/miniweb/functional/Start.java
Patch:
@@ -11,13 +11,11 @@
 public class Start {
 
 	public static final int PORT = 8080;
-	public static final int TEST_PORT = 8082;
 	public static final String CONTEXT = "/mini-web";
 	public static final String BASE_URL = "http://localhost:8080/mini-web";
-	public static final String TEST_BASE_URL = "http://localhost:8082/mini-web";
 
 	public static void main(String[] args) throws Exception {
-		Server server = JettyFactory.buildNormalServer(PORT, CONTEXT);
+		Server server = JettyFactory.createServer(PORT, CONTEXT);
 		server.start();
 
 		System.out.println("Server running at " + BASE_URL);

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/Start.java
Patch:
@@ -11,13 +11,11 @@
 public class Start {
 
 	public static final int PORT = 8080;
-	public static final int TEST_PORT = 8083;
 	public static final String CONTEXT = "/showcase";
 	public static final String BASE_URL = "http://localhost:8080/showcase";
-	public static final String TEST_BASE_URL = "http://localhost:8083/showcase";
 
 	public static void main(String[] args) throws Exception {
-		Server server = JettyFactory.buildNormalServer(PORT, CONTEXT);
+		Server server = JettyFactory.createServer(PORT, CONTEXT);
 		server.start();
 
 		System.out.println("Server running at " + BASE_URL);

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/webservice/rs/UserResourceServiceIT.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
 import org.springside.examples.showcase.functional.BaseFunctionalTestCase;
-import org.springside.examples.showcase.functional.Start;
 import org.springside.examples.showcase.functional.category.Smoke;
 import org.springside.examples.showcase.webservice.rs.client.UserResourceClient;
 import org.springside.examples.showcase.webservice.rs.dto.UserDTO;
@@ -22,7 +21,7 @@ public class UserResourceServiceIT extends BaseFunctionalTestCase {
 	@BeforeClass
 	public static void setUpClient() {
 		client = new UserResourceClient();
-		client.setBaseUrl(Start.TEST_BASE_URL + "/rs");
+		client.setBaseUrl(baseUrl + "/rs");
 	}
 
 	/**

File: examples/mini-service/src/test/functional/org/springside/examples/miniservice/functional/Start.java
Patch:
@@ -11,10 +11,8 @@
 public class Start {
 
 	public static final int PORT = 8080;
-	public static final int TEST_PORT = 8084;
 	public static final String CONTEXT = "/mini-service";
 	public static final String BASE_URL = "http://localhost:8080/mini-service";
-	public static final String TEST_BASE_URL = "http://localhost:8084/mini-service";
 
 	public static void main(String[] args) throws Exception {
 		Server server = JettyFactory.buildNormalServer(PORT, CONTEXT);

File: examples/mini-service/src/test/functional/org/springside/examples/miniservice/functional/rs/AccountResourceServiceIT.java
Patch:
@@ -12,7 +12,6 @@
 import org.springside.examples.miniservice.data.AccountData;
 import org.springside.examples.miniservice.entity.User;
 import org.springside.examples.miniservice.functional.BaseFunctionalTestCase;
-import org.springside.examples.miniservice.functional.Start;
 import org.springside.examples.miniservice.functional.category.Smoke;
 import org.springside.examples.miniservice.webservice.dto.DepartmentDTO;
 import org.springside.examples.miniservice.webservice.dto.UserDTO;
@@ -27,7 +26,7 @@ public class AccountResourceServiceIT extends BaseFunctionalTestCase {
 	@BeforeClass
 	public static void setUpClient() throws Exception {
 		client = new AccountResourceClient();
-		client.setBaseUrl(Start.TEST_BASE_URL + "/rs");
+		client.setBaseUrl(baseUrl + "/rs");
 	}
 
 	@Test

File: examples/mini-service/src/test/functional/org/springside/examples/miniservice/functional/ws/AccountWebServiceWithDynamicCreateClientIT.java
Patch:
@@ -12,7 +12,6 @@
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
 import org.springside.examples.miniservice.functional.BaseFunctionalTestCase;
-import org.springside.examples.miniservice.functional.Start;
 import org.springside.examples.miniservice.functional.category.Smoke;
 import org.springside.examples.miniservice.webservice.ws.AccountWebService;
 import org.springside.examples.miniservice.webservice.ws.result.UserListResult;
@@ -27,7 +26,7 @@
 public class AccountWebServiceWithDynamicCreateClientIT extends BaseFunctionalTestCase {
 
 	public AccountWebService creatClient() {
-		String address = Start.TEST_BASE_URL + "/ws/accountservice";
+		String address = baseUrl + "/ws/accountservice";
 
 		JaxWsProxyFactoryBean proxyFactory = new JaxWsProxyFactoryBean();
 		proxyFactory.setAddress(address);

File: examples/mini-service/src/test/java/org/springside/examples/miniservice/dao/AccountDaoTest.java
Patch:
@@ -12,7 +12,7 @@
 import org.springside.examples.miniservice.data.AccountData;
 import org.springside.examples.miniservice.entity.Department;
 import org.springside.examples.miniservice.entity.User;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 import com.google.common.collect.Maps;
@@ -35,7 +35,7 @@ public class AccountDaoTest extends SpringTxTestCase {
 	 */
 	@Before
 	public void reloadSampleData() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 	}
 
 	@Test

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/JpaMappingTest.java
Patch:
@@ -10,7 +10,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
@@ -24,7 +24,7 @@ public class JpaMappingTest extends SpringTxTestCase {
 
 	@Test
 	public void allClassMapping() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 		Metamodel model = em.getEntityManagerFactory().getMetamodel();
 		for (EntityType entityType : model.getEntities()) {
 			String entityName = entityType.getName();

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/account/GroupDaoTest.java
Patch:
@@ -13,7 +13,7 @@
 import org.springside.examples.miniweb.data.AccountData;
 import org.springside.examples.miniweb.entity.account.Group;
 import org.springside.examples.miniweb.entity.account.User;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 /**
@@ -39,7 +39,7 @@ public class GroupDaoTest extends SpringTxTestCase {
 	 */
 	@Before
 	public void reloadSampleData() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 	}
 
 	/**

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/account/UserDaoTest.java
Patch:
@@ -11,7 +11,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springside.examples.miniweb.data.AccountData;
 import org.springside.examples.miniweb.entity.account.User;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 /**
@@ -31,7 +31,7 @@ public class UserDaoTest extends SpringTxTestCase {
 
 	@Before
 	public void reloadSampleData() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 	}
 
 	@Test

File: examples/showcase/src/main/java/org/springside/examples/showcase/cache/guava/GuavaCacheDemo.java
Patch:
@@ -13,7 +13,7 @@
 import org.springside.examples.showcase.common.entity.User;
 import org.springside.examples.showcase.common.service.AccountManager;
 import org.springside.modules.log.MockLog4jAppender;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
@@ -49,7 +49,7 @@ public User load(Long key) throws Exception {
 				});
 
 		//初始化数据
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 
 		//插入appender用于assert。
 		MockLog4jAppender appender = new MockLog4jAppender();

File: examples/showcase/src/test/functional/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -5,7 +5,7 @@
 import org.eclipse.jetty.server.Server;
 import org.junit.BeforeClass;
 import org.junit.Ignore;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.functional.JettyFactory;
 import org.springside.modules.test.spring.SpringContextHolder;
 
@@ -44,6 +44,6 @@ protected static void startJetty() throws Exception {
 	 * 载入默认数据.
 	 */
 	protected static void reloadSampleData() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/JpaMappingTest.java
Patch:
@@ -10,11 +10,11 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
-@TransactionConfiguration(transactionManager="defaultTransactionManager")
+@TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class JpaMappingTest extends SpringTxTestCase {
 
 	private static Logger logger = LoggerFactory.getLogger(JpaMappingTest.class);
@@ -24,7 +24,7 @@ public class JpaMappingTest extends SpringTxTestCase {
 
 	@Test
 	public void allClassMapping() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 		Metamodel model = em.getEntityManagerFactory().getMetamodel();
 		for (EntityType entityType : model.getEntities()) {
 			String entityName = entityType.getName();

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkTimerJobTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
 import org.springside.modules.log.MockLog4jAppender;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
@@ -20,7 +20,7 @@ public class JdkTimerJobTest extends SpringTxTestCase {
 
 	@Test
 	public void scheduleJob() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 
 		//加载测试用logger appender
 		MockLog4jAppender appender = new MockLog4jAppender();

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzTimerClusterJobTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
 import org.springside.modules.log.MockLog4jAppender;
-import org.springside.modules.test.data.H2Fixtures;
+import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
@@ -25,7 +25,7 @@ public class QuartzTimerClusterJobTest extends SpringTxTestCase {
 
 	@Test
 	public void scheduleJob() throws Exception {
-		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		Fixtures.reloadData(dataSource, "/data/sample-data.xml");
 
 		//加载测试用logger appender
 		MockLog4jAppender appender = new MockLog4jAppender();

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/functional/BaseFunctionalTestCase.java
Patch:
@@ -94,7 +94,7 @@ protected static void loginAsAdminIfNecessary() {
 			s.type(By.name("username"), "admin");
 			s.type(By.name("password"), "admin");
 			s.check(By.name("rememberMe"));
-			s.clickTo(By.id("submit"));
+			s.click(By.id("submit"));
 		}
 	}
 
@@ -105,6 +105,6 @@ protected static void login(String user, String password) {
 		s.open("/logout");
 		s.type(By.name("username"), user);
 		s.type(By.name("password"), password);
-		s.clickTo(By.id("submit"));
+		s.click(By.id("submit"));
 	}
 }
\ No newline at end of file

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/functional/account/SecurityIT.java
Patch:
@@ -41,10 +41,10 @@ public void checkUserPermission() {
 		//登录普通用户
 		s.type(By.name("username"), "user");
 		s.type(By.name("password"), "user");
-		s.clickTo(By.id("submit"));
+		s.click(By.id("submit"));
 
 		//校验用户权限组的操作单元格只有查看
-		s.clickTo(By.linkText(Gui.MENU_USER));
+		s.click(By.linkText(Gui.MENU_USER));
 		assertEquals("", s.getTable(By.id("contentTable"), 1, UserColumn.OPERATIONS.ordinal()));
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/functional/ajax/AjaxIT.java
Patch:
@@ -16,10 +16,10 @@ public class AjaxIT extends BaseSeleniumTestCase {
 	@Test
 	public void mashup() {
 		s.open("/");
-		s.clickTo(By.linkText("Web演示"));
-		s.clickTo(By.linkText("跨域名Mashup演示"));
+		s.click(By.linkText("Web演示"));
+		s.click(By.linkText("跨域名Mashup演示"));
 
-		s.clickTo(By.xpath("//input[@value='获取内容']"));
+		s.click(By.xpath("//input[@value='获取内容']"));
 		s.waitForVisible(By.id("mashupContent"), 5000);
 		assertEquals("Hello World!", s.getText(By.id("mashupContent")));
 	}

File: examples/showcase/src/main/java/org/springside/examples/showcase/common/service/AccountManager.java
Patch:
@@ -59,7 +59,7 @@ public void saveUser(User user) {
 			throw new ServiceException("不能修改超级管理员用户");
 		}
 
-		//设定安全的密码，使用salt并经过1024次 sha-1 hash.
+		//设定安全的密码，使用salt并经过1024次 sha-1 hash
 		if (StringUtils.isNotBlank(user.getPlainPassword())) {
 			byte[] salt = Digests.generateSalt(8);
 			user.setSalt(Encodes.encodeHex(salt));

File: examples/showcase/src/main/java/org/springside/examples/showcase/webservice/rs/server/UserResourceService.java
Patch:
@@ -43,7 +43,7 @@ public class UserResourceService {
 	private AccountManager accountManager;
 
 	/**
-	 * 获取所有用户, 演示与Shiro的结合.
+	 * 获取所有用户, 演示与Shiro结合的方法级权限检查.
 	 */
 	@GET
 	@RequiresRoles("Admin")

File: modules/core/src/main/java/org/springside/modules/test/support/ShiroTestHelper.java
Patch:
@@ -29,7 +29,7 @@ public static void bindSubject(Subject subject) {
 	/**
 	 * 用Mockito快速創建一個已認證的用户.
 	 */
-	public static void mockSubject(String principal) {
+	public static void mockSubject(Object principal) {
 		Subject subject = Mockito.mock(Subject.class);
 		Mockito.when(subject.isAuthenticated()).thenReturn(true);
 		Mockito.when(subject.getPrincipal()).thenReturn(principal);

File: modules/core/src/main/java/org/springside/modules/utils/Identities.java
Patch:
@@ -45,6 +45,6 @@ public static long randomLong() {
 	 * 基于Base62编码的SecureRandom随机生成Long.
 	 */
 	public static String randomBase62() {
-		return Encodes.encodeBase62(random.nextLong());
+		return Encodes.encodeNumberToBase62(random.nextLong());
 	}
 }

File: modules/core/src/test/java/org/springside/modules/utils/EncodesTest.java
Patch:
@@ -32,9 +32,9 @@ public void base64UrlSafeEncode() {
 	public void base62Encode() {
 		long num = 63;
 
-		String result = Encodes.encodeBase62(num);
+		String result = Encodes.encodeNumberToBase62(num);
 		assertEquals("11", result);
-		assertEquals(num, Encodes.decodeBase62(result));
+		assertEquals(num, Encodes.decodeBase62ToNumber(result));
 	}
 
 	@Test

File: examples/mini-web/src/main/java/org/springside/examples/miniweb/entity/account/Permission.java
Patch:
@@ -15,9 +15,10 @@ public enum Permission {
 
 	GROUP_VIEW("group:view", "查看权限组"), GROUP_EDIT("group:edit", "修改权限组");
 
+	private static Map<String, Permission> valueMap = Maps.newHashMap();
+
 	public String value;
 	public String displayName;
-	private static Map<String, Permission> valueMap = Maps.newHashMap();
 
 	static {
 		for (Permission permission : Permission.values()) {

File: examples/showcase/src/main/java/org/springside/examples/showcase/webservice/rs/server/UserResourceService.java
Patch:
@@ -127,6 +127,7 @@ public String searchUserByFlexibleParameter(@Context HttpServletRequest request,
 		}
 
 		if (userName == null) {
+			//抛出自定义的异常450
 			throw Jerseys.buildException(450, "用戶名既不在Http Header也不在URL参数中");
 		}
 

File: modules/core/src/main/java/org/springside/modules/mapper/BeanMapper.java
Patch:
@@ -19,14 +19,14 @@
  */
 public class BeanMapper {
 
-	private BeanMapper() {
-	}
-
 	/**
 	 * 持有Dozer单例, 避免重复创建DozerMapper消耗资源.
 	 */
 	private static DozerBeanMapper dozer = new DozerBeanMapper();
 
+	private BeanMapper() {
+	}
+
 	/**
 	 * 基于Dozer转换对象的类型.
 	 */

File: modules/core/src/main/java/org/springside/modules/utils/Identities.java
Patch:
@@ -21,14 +21,14 @@ private Identities() {
 	}
 
 	/**
-	 * 封装JDK自带的UUID, 通过Random数字生成,中间有-分割
+	 * 封装JDK自带的UUID, 通过Random数字生成, 中间有-分割.
 	 */
 	public static String uuid() {
 		return UUID.randomUUID().toString();
 	}
 
 	/**
-	 * 封装JDK自带的UUID, 通过Random数字生成,中间无-分割
+	 * 封装JDK自带的UUID, 通过Random数字生成, 中间无-分割.
 	 */
 	public static String uuid2() {
 		return UUID.randomUUID().toString().replaceAll("-", "");

File: examples/mini-service/src/test/java/org/springside/examples/miniservice/dao/AccountDaoTest.java
Patch:
@@ -12,7 +12,7 @@
 import org.springside.examples.miniservice.data.AccountData;
 import org.springside.examples.miniservice.entity.Department;
 import org.springside.examples.miniservice.entity.User;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 import com.google.common.collect.Maps;
@@ -35,7 +35,7 @@ public class AccountDaoTest extends SpringTxTestCase {
 	 */
 	@Before
 	public void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 
 	@Test

File: examples/mini-service/src/test/java/org/springside/examples/miniservice/functional/BaseFunctionalTestCase.java
Patch:
@@ -6,7 +6,7 @@
 import org.junit.BeforeClass;
 import org.junit.Ignore;
 import org.springside.examples.miniservice.Start;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.functional.JettyFactory;
 import org.springside.modules.test.spring.SpringContextHolder;
 
@@ -49,6 +49,6 @@ protected static void startJetty() throws Exception {
 	 * 载入测试数据.
 	 */
 	protected static void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 }

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/JpaMappingTest.java
Patch:
@@ -10,7 +10,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
@@ -24,7 +24,7 @@ public class JpaMappingTest extends SpringTxTestCase {
 
 	@Test
 	public void allClassMapping() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 		Metamodel model = em.getEntityManagerFactory().getMetamodel();
 		for (EntityType entityType : model.getEntities()) {
 			String entityName = entityType.getName();

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/account/GroupDaoTest.java
Patch:
@@ -13,7 +13,7 @@
 import org.springside.examples.miniweb.data.AccountData;
 import org.springside.examples.miniweb.entity.account.Group;
 import org.springside.examples.miniweb.entity.account.User;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 /**
@@ -39,7 +39,7 @@ public class GroupDaoTest extends SpringTxTestCase {
 	 */
 	@Before
 	public void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 
 	/**

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/account/UserDaoTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springside.examples.miniweb.data.AccountData;
 import org.springside.examples.miniweb.entity.account.User;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 /**
@@ -26,7 +26,7 @@ public class UserDaoTest extends SpringTxTestCase {
 
 	@Before
 	public void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 
 	@Test

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/functional/BaseFunctionalTestCase.java
Patch:
@@ -11,7 +11,7 @@
 import org.openqa.selenium.By;
 import org.openqa.selenium.WebDriver;
 import org.springside.examples.miniweb.Start;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.functional.JettyFactory;
 import org.springside.modules.test.functional.Selenium2;
 import org.springside.modules.test.functional.WebDriverFactory;
@@ -63,7 +63,7 @@ protected static void startJetty() throws Exception {
 	 * 载入测试数据.
 	 */
 	protected static void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 
 	/**

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/JpaMappingTest.java
Patch:
@@ -10,7 +10,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
@@ -24,7 +24,7 @@ public class JpaMappingTest extends SpringTxTestCase {
 
 	@Test
 	public void allClassMapping() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 		Metamodel model = em.getEntityManagerFactory().getMetamodel();
 		for (EntityType entityType : model.getEntities()) {
 			String entityName = entityType.getName();

File: examples/showcase/src/test/java/org/springside/examples/showcase/functional/BaseFunctionalTestCase.java
Patch:
@@ -6,7 +6,7 @@
 import org.junit.BeforeClass;
 import org.junit.Ignore;
 import org.springside.examples.showcase.Start;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.functional.JettyFactory;
 import org.springside.modules.test.spring.SpringContextHolder;
 
@@ -45,6 +45,6 @@ protected static void startJetty() throws Exception {
 	 * 载入默认数据.
 	 */
 	protected static void reloadSampleData() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 	}
 }

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkExecutorJobTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
 import org.springside.modules.log.MockLog4jAppender;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
@@ -20,7 +20,7 @@ public class JdkExecutorJobTest extends SpringTxTestCase {
 
 	@Test
 	public void scheduleJob() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 
 		//加载测试用logger appender
 		MockLog4jAppender appender = new MockLog4jAppender();

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzClusterableJobTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
 import org.springside.modules.log.MockLog4jAppender;
-import org.springside.modules.test.data.Fixtures;
+import org.springside.modules.test.data.H2Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
@@ -25,7 +25,7 @@ public class QuartzClusterableJobTest extends SpringTxTestCase {
 
 	@Test
 	public void scheduleJob() throws Exception {
-		Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
+		H2Fixtures.reloadAllTable(dataSource, "/data/sample-data.xml");
 
 		//加载测试用logger appender
 		MockLog4jAppender appender = new MockLog4jAppender();

File: modules/core/src/main/java/org/springside/modules/orm/jpa/Jpas.java
Patch:
@@ -3,6 +3,9 @@
 import org.hibernate.Hibernate;
 
 public class Jpas {
+	private Jpas() {
+
+	}
 
 	public static void initLazyProperty(Object proxyed) {
 		Hibernate.initialize(proxyed);

File: modules/core/src/main/java/org/springside/modules/utils/Exceptions.java
Patch:
@@ -15,6 +15,9 @@
  */
 public class Exceptions {
 
+	private Exceptions() {
+	}
+
 	/**
 	 * 将CheckedException转换为UncheckedException.
 	 */

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/JpaMappingTest.java
Patch:
@@ -14,7 +14,7 @@
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
-@TransactionConfiguration(transactionManager = "defaultTransactionManager")
+@TransactionConfiguration(transactionManager="defaultTransactionManager")
 public class JpaMappingTest extends SpringTxTestCase {
 
 	private static Logger logger = LoggerFactory.getLogger(JpaMappingTest.class);

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/JpaMappingTest.java
Patch:
@@ -14,7 +14,7 @@
 import org.springside.modules.test.spring.SpringTxTestCase;
 
 @ContextConfiguration(locations = { "/applicationContext.xml" })
-@TransactionConfiguration()
+@TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class JpaMappingTest extends SpringTxTestCase {
 
 	private static Logger logger = LoggerFactory.getLogger(JpaMappingTest.class);

File: examples/mini-web/src/test/java/org/springside/examples/miniweb/dao/JpaMappingTest.java
Patch:
@@ -1,4 +1,4 @@
-package org.springside.examples.miniweb.dao.account;
+package org.springside.examples.miniweb.dao;
 
 import javax.persistence.EntityManager;
 import javax.persistence.PersistenceContext;

File: examples/mini-web/src/main/java/org/springside/examples/miniweb/entity/account/User.java
Patch:
@@ -43,7 +43,7 @@ public class User extends IdEntity {
 	private List<Group> groupList = Lists.newArrayList();//有序的关联对象集合
 
 	//字段非空且唯一, 用于提醒Entity使用者及生成DDL.
-	@Column(name = "LOGIN_NAME", nullable = false, unique = true)
+	@Column(nullable = false, unique = true)
 	public String getLoginName() {
 		return loginName;
 	}

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/HibernateMappingTest.java
Patch:
@@ -20,7 +20,7 @@
  *  
  * @author calvin
  */
-@ContextConfiguration(locations = { "/applicationContext-test.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml" })
 @TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class HibernateMappingTest extends SpringTxTestCase {
 	private static Logger logger = LoggerFactory.getLogger(HibernateMappingTest.class);

File: examples/showcase/src/test/java/org/springside/examples/showcase/common/UserHibernateDaoTest.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * @author calvin
  */
-@ContextConfiguration(locations = { "/applicationContext-test.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml" })
 //演示指定非默认名称的TransactionManager.
 @TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class UserHibernateDaoTest extends SpringTxTestCase {

File: examples/showcase/src/test/java/org/springside/examples/showcase/jms/JmsAdvancedTest.java
Patch:
@@ -23,7 +23,7 @@
 import org.springside.modules.utils.Threads;
 
 @DirtiesContext
-@ContextConfiguration(locations = { "/applicationContext-test.xml", "/jms/applicationContext-jms-advanced.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml", "/jms/applicationContext-jms-advanced.xml" })
 public class JmsAdvancedTest extends SpringContextTestCase {
 
 	@Autowired

File: examples/showcase/src/test/java/org/springside/examples/showcase/jms/JmsSimpleTest.java
Patch:
@@ -14,7 +14,7 @@
 import org.springside.modules.utils.Threads;
 
 @DirtiesContext
-@ContextConfiguration(locations = { "/applicationContext-test.xml", "/jms/applicationContext-jms-simple.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml", "/jms/applicationContext-jms-simple.xml" })
 public class JmsSimpleTest extends SpringContextTestCase {
 
 	@Autowired

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkExecutorJobTest.java
Patch:
@@ -12,9 +12,9 @@
 import org.springside.modules.test.spring.SpringTxTestCase;
 import org.springside.modules.utils.Threads;
 
-@Ignore("Unstatable on Jenkins")
+@Ignore("Unstatable on Slow Jenkins")
 @DirtiesContext
-@ContextConfiguration(locations = { "/applicationContext-test.xml", "/schedule/applicationContext-executor.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml", "/schedule/applicationContext-executor.xml" })
 @TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class JdkExecutorJobTest extends SpringTxTestCase {
 

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/QuartzClusterableJobTest.java
Patch:
@@ -17,10 +17,9 @@
  * 
  * @author calvin
  */
-@Ignore("Unstatable on Jenkins")
+@Ignore("Unstatable on Slow Jenkins")
 @DirtiesContext
-@ContextConfiguration(locations = { "/applicationContext-test.xml",
-		"/schedule/applicationContext-quartz-timer-cluster.xml" })
+@ContextConfiguration(locations = { "/applicationContext.xml", "/schedule/applicationContext-quartz-timer-cluster.xml" })
 @TransactionConfiguration(transactionManager = "defaultTransactionManager")
 public class QuartzClusterableJobTest extends SpringTxTestCase {
 

File: examples/showcase/src/test/java/org/springside/examples/showcase/schedule/JdkExecutorJobTest.java
Patch:
@@ -6,7 +6,6 @@
 import org.springframework.test.annotation.DirtiesContext;
 import org.springframework.test.context.ContextConfiguration;
 import org.springframework.test.context.transaction.TransactionConfiguration;
-import org.springside.examples.showcase.schedule.JdkExecutorJob;
 import org.springside.modules.log.MockLog4jAppender;
 import org.springside.modules.test.data.Fixtures;
 import org.springside.modules.test.spring.SpringTxTestCase;
@@ -26,7 +25,7 @@ public void scheduleJob() throws Exception {
 		appender.addToLogger(JdkExecutorJob.class);
 
 		//等待任务启动
-		Threads.sleep(3000);
+		Threads.sleep(4000);
 
 		//验证任务已执行
 		assertEquals(1, appender.getAllLogs().size());

