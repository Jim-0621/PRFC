File: austin-handler/src/main/java/com/java3y/austin/handler/config/SensitiveWordsConfig.java
Patch:
@@ -124,7 +124,7 @@ private void startScheduledUpdate() {
             try {
                 TimeUnit.SECONDS.sleep(UPDATE_TIME_SECONDS);
                 log.debug("SensitiveWordConfig#startScheduledUpdate start update...");
-                loadSensitiveWords();
+                loadSensWords();
                 storeSensWords();
             } catch (InterruptedException e) {
                 log.error("SensitiveWordConfig#startScheduledUpdate interrupted: {}", e.getMessage());

File: austin-handler/src/main/java/com/java3y/austin/handler/config/SensitiveWordsConfig.java
Patch:
@@ -124,7 +124,7 @@ private void startScheduledUpdate() {
             try {
                 TimeUnit.SECONDS.sleep(UPDATE_TIME_SECONDS);
                 log.debug("SensitiveWordConfig#startScheduledUpdate start update...");
-                loadSensitiveWords();
+                loadSensWords();
                 storeSensWords();
             } catch (InterruptedException e) {
                 log.error("SensitiveWordConfig#startScheduledUpdate interrupted: {}", e.getMessage());

File: austin-handler/src/main/java/com/java3y/austin/handler/config/HandlerThreadPoolConfig.java
Patch:
@@ -15,7 +15,7 @@
  */
 public class HandlerThreadPoolConfig {
 
-    private static final String PRE_FIX = "austin.";
+    public static final String PRE_FIX = "austin.";
 
     private HandlerThreadPoolConfig() {
 

File: austin-handler/src/main/java/com/java3y/austin/handler/pending/TaskPendingHolder.java
Patch:
@@ -1,5 +1,6 @@
 package com.java3y.austin.handler.pending;
 
+import com.dtp.core.DtpRegistry;
 import com.dtp.core.thread.DtpExecutor;
 import com.java3y.austin.handler.config.HandlerThreadPoolConfig;
 import com.java3y.austin.handler.utils.GroupIdMappingUtils;
@@ -27,7 +28,6 @@ public class TaskPendingHolder {
     private static List<String> groupIds = GroupIdMappingUtils.getAllGroupIds();
     @Autowired
     private ThreadPoolUtils threadPoolUtils;
-    private Map<String, ExecutorService> holder = new HashMap<>(32);
 
     /**
      * 给每个渠道，每种消息类型初始化一个线程池
@@ -43,7 +43,6 @@ public void init() {
             DtpExecutor executor = HandlerThreadPoolConfig.getExecutor(groupId);
             threadPoolUtils.register(executor);
 
-            holder.put(groupId, executor);
         }
     }
 
@@ -54,7 +53,7 @@ public void init() {
      * @return
      */
     public ExecutorService route(String groupId) {
-        return holder.get(groupId);
+        return DtpRegistry.getExecutor(HandlerThreadPoolConfig.PRE_FIX + groupId);
     }
 
 

File: austin-common/src/main/java/com/java3y/austin/common/constant/CommonConstant.java
Patch:
@@ -35,7 +35,7 @@ public class CommonConstant {
     /**
      * 编码格式
      */
-    public static final String CHARSET_NAME = "UTF-8";
+    public static final String CHARSET_UTF_8 = "UTF-8";
     /**
      * HTTP请求内容格式
      */

File: austin-common/src/main/java/com/java3y/austin/common/vo/BasicResultVO.java
Patch:
@@ -6,6 +6,8 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 
+import java.io.Serializable;
+
 /**
  * @author zzb
  * @since 2021.11.17
@@ -15,7 +17,7 @@
 @ToString(callSuper = true)
 @AllArgsConstructor
 @NoArgsConstructor
-public final class BasicResultVO<T> {
+public final class BasicResultVO<T> implements Serializable {
 
     /**
      * 响应状态

File: austin-cron/src/main/java/com/java3y/austin/cron/xxl/utils/XxlJobUtils.java
Patch:
@@ -84,7 +84,7 @@ private Integer queryJobGroupId() {
         if (Objects.isNull(basicResultVO.getData())) {
             XxlJobGroup xxlJobGroup = XxlJobGroup.builder().appname(appName).title(jobHandlerName).addressType(CommonConstant.FALSE).build();
             if (RespStatusEnum.SUCCESS.getCode().equals(cronTaskService.createGroup(xxlJobGroup).getStatus())) {
-                return (int) cronTaskService.getGroupId(appName, jobHandlerName).getData();
+                return (Integer) cronTaskService.getGroupId(appName, jobHandlerName).getData();
             }
         }
         return basicResultVO.getData();

File: austin-handler/src/main/java/com/java3y/austin/handler/domain/sms/LinTongSendResult.java
Patch:
@@ -32,7 +32,7 @@ public class LinTongSendResult {
     @Data
     @AllArgsConstructor
     @NoArgsConstructor
-    public class DataDTO {
+    public static class DataDTO {
         Integer code;
         String message;
         Long msgId;

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/DingDingRobotHandler.java
Patch:
@@ -128,7 +128,7 @@ private String assembleSign(long currentTimeMillis, String secret) {
             Mac mac = Mac.getInstance(CommonConstant.HMAC_SHA256_ENCRYPTION_ALGO);
             mac.init(new SecretKeySpec(secret.getBytes(StandardCharsets.UTF_8), CommonConstant.HMAC_SHA256_ENCRYPTION_ALGO));
             byte[] signData = mac.doFinal(stringToSign.getBytes(StandardCharsets.UTF_8));
-            sign = URLEncoder.encode(new String(Base64.encodeBase64(signData)), CommonConstant.CHARSET_NAME);
+            sign = URLEncoder.encode(new String(Base64.encodeBase64(signData), CommonConstant.CHARSET_UTF_8));
         } catch (Exception e) {
             log.error("DingDingHandler#assembleSign fail!:{}", Throwables.getStackTraceAsString(e));
         }

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/DingDingWorkNoticeHandler.java
Patch:
@@ -9,7 +9,6 @@
 import com.dingtalk.api.request.OapiMessageCorpconversationGetsendresultRequest;
 import com.dingtalk.api.request.OapiMessageCorpconversationRecallRequest;
 import com.dingtalk.api.response.OapiMessageCorpconversationAsyncsendV2Response;
-import com.dingtalk.api.response.OapiMessageCorpconversationGetsendresultResponse;
 import com.dingtalk.api.response.OapiMessageCorpconversationRecallResponse;
 import com.google.common.base.Throwables;
 import com.java3y.austin.common.constant.AustinConstant;
@@ -179,7 +178,7 @@ public void pull(Long accountId) {
             OapiMessageCorpconversationGetsendresultRequest req = new OapiMessageCorpconversationGetsendresultRequest();
             req.setAgentId(Long.valueOf(account.getAgentId()));
             req.setTaskId(456L);
-            OapiMessageCorpconversationGetsendresultResponse rsp = client.execute(req, accessToken);
+            client.execute(req, accessToken);
         } catch (Exception e) {
             log.error("DingDingWorkNoticeHandler#pull fail:{}", Throwables.getStackTraceAsString(e));
         }

File: austin-handler/src/main/java/com/java3y/austin/handler/receiver/kafka/ReceiverStart.java
Patch:
@@ -84,14 +84,15 @@ public void init() {
     @Bean
     public ConcurrentKafkaListenerContainerFactory filterContainerFactory(@Value("${austin.business.tagId.key}") String tagIdKey,
                                                                           @Value("${austin.business.tagId.value}") String tagIdValue) {
-        ConcurrentKafkaListenerContainerFactory factory = new ConcurrentKafkaListenerContainerFactory();
+        ConcurrentKafkaListenerContainerFactory<String, String> factory = new ConcurrentKafkaListenerContainerFactory<>();
         factory.setConsumerFactory(consumerFactory);
         factory.setAckDiscarded(true);
 
         factory.setRecordFilterStrategy(consumerRecord -> {
             if (Optional.ofNullable(consumerRecord.value()).isPresent()) {
                 for (Header header : consumerRecord.headers()) {
-                    if (header.key().equals(tagIdKey) && new String(header.value()).equals(new String(tagIdValue.getBytes(StandardCharsets.UTF_8)))) {
+                    if (header.key().equals(tagIdKey) &&
+                            new String(header.value(), StandardCharsets.UTF_8).equals(tagIdValue)) {
                         return false;
                     }
                 }

File: austin-handler/src/main/java/com/java3y/austin/handler/receiver/rabbit/RabbitMqReceiver.java
Patch:
@@ -17,6 +17,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.stereotype.Component;
 
+import java.nio.charset.StandardCharsets;
 import java.util.List;
 
 
@@ -42,7 +43,7 @@ public class RabbitMqReceiver implements MessageReceiver {
     public void onMessage(Message message) {
         String messageType = message.getMessageProperties().getHeader("messageType");
         byte[] body = message.getBody();
-        String messageContent = new String(body);
+        String messageContent = new String(body, StandardCharsets.UTF_8);
         if (StringUtils.isBlank(messageContent)) {
             return;
         }

File: austin-stream/src/main/java/com/java3y/austin/stream/utils/LettuceRedisUtils.java
Patch:
@@ -27,7 +27,7 @@ public class LettuceRedisUtils {
 
     static {
         RedisURI redisUri = RedisURI.Builder.redis(AustinFlinkConstant.REDIS_IP)
-                .withPort(Integer.valueOf(AustinFlinkConstant.REDIS_PORT))
+                .withPort(Integer.parseInt(AustinFlinkConstant.REDIS_PORT))
                 .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                 .build();
         redisClient = RedisClient.create(redisUri);

File: austin-support/src/main/java/com/java3y/austin/support/utils/TaskInfoUtils.java
Patch:
@@ -13,7 +13,7 @@
  * @author 3y
  */
 public class TaskInfoUtils {
-    private static final int TYPE_FLAG = 1000000;
+    private static final long TYPE_FLAG = 1000000L;
     private static final String CODE = "track_code_bid";
     private TaskInfoUtils() {
     }
@@ -34,7 +34,7 @@ public static String generateMessageId() {
      */
     public static Long generateBusinessId(Long templateId, Integer templateType) {
         Integer today = Integer.valueOf(DateUtil.format(new Date(), DatePattern.PURE_DATE_PATTERN));
-        return Long.valueOf(String.format("%d%s", templateType * TYPE_FLAG + templateId, today));
+        return Long.valueOf(String.format("%d%s", templateType.longValue() * TYPE_FLAG + templateId, today));
     }
 
     /**

File: austin-common/src/main/java/com/java3y/austin/common/constant/CommonConstant.java
Patch:
@@ -35,7 +35,7 @@ public class CommonConstant {
     /**
      * 编码格式
      */
-    public static final String CHARSET_NAME = "UTF-8";
+    public static final String CHARSET_UTF_8 = "UTF-8";
     /**
      * HTTP请求内容格式
      */

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/DingDingRobotHandler.java
Patch:
@@ -128,7 +128,7 @@ private String assembleSign(long currentTimeMillis, String secret) {
             Mac mac = Mac.getInstance(CommonConstant.HMAC_SHA256_ENCRYPTION_ALGO);
             mac.init(new SecretKeySpec(secret.getBytes(StandardCharsets.UTF_8), CommonConstant.HMAC_SHA256_ENCRYPTION_ALGO));
             byte[] signData = mac.doFinal(stringToSign.getBytes(StandardCharsets.UTF_8));
-            sign = URLEncoder.encode(new String(Base64.encodeBase64(signData)), CommonConstant.CHARSET_NAME);
+            sign = URLEncoder.encode(new String(Base64.encodeBase64(signData), CommonConstant.CHARSET_UTF_8));
         } catch (Exception e) {
             log.error("DingDingHandler#assembleSign fail!:{}", Throwables.getStackTraceAsString(e));
         }

File: austin-handler/src/main/java/com/java3y/austin/handler/receiver/kafka/ReceiverStart.java
Patch:
@@ -84,14 +84,15 @@ public void init() {
     @Bean
     public ConcurrentKafkaListenerContainerFactory filterContainerFactory(@Value("${austin.business.tagId.key}") String tagIdKey,
                                                                           @Value("${austin.business.tagId.value}") String tagIdValue) {
-        ConcurrentKafkaListenerContainerFactory factory = new ConcurrentKafkaListenerContainerFactory();
+        ConcurrentKafkaListenerContainerFactory<String, String> factory = new ConcurrentKafkaListenerContainerFactory<>();
         factory.setConsumerFactory(consumerFactory);
         factory.setAckDiscarded(true);
 
         factory.setRecordFilterStrategy(consumerRecord -> {
             if (Optional.ofNullable(consumerRecord.value()).isPresent()) {
                 for (Header header : consumerRecord.headers()) {
-                    if (header.key().equals(tagIdKey) && new String(header.value()).equals(new String(tagIdValue.getBytes(StandardCharsets.UTF_8)))) {
+                    if (header.key().equals(tagIdKey) &&
+                            new String(header.value(), StandardCharsets.UTF_8).equals(tagIdValue)) {
                         return false;
                     }
                 }

File: austin-handler/src/main/java/com/java3y/austin/handler/receiver/rabbit/RabbitMqReceiver.java
Patch:
@@ -17,6 +17,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.stereotype.Component;
 
+import java.nio.charset.StandardCharsets;
 import java.util.List;
 
 
@@ -42,7 +43,7 @@ public class RabbitMqReceiver implements MessageReceiver {
     public void onMessage(Message message) {
         String messageType = message.getMessageProperties().getHeader("messageType");
         byte[] body = message.getBody();
-        String messageContent = new String(body);
+        String messageContent = new String(body, StandardCharsets.UTF_8);
         if (StringUtils.isBlank(messageContent)) {
             return;
         }

File: austin-cron/src/main/java/com/java3y/austin/cron/xxl/utils/XxlJobUtils.java
Patch:
@@ -84,7 +84,7 @@ private Integer queryJobGroupId() {
         if (Objects.isNull(basicResultVO.getData())) {
             XxlJobGroup xxlJobGroup = XxlJobGroup.builder().appname(appName).title(jobHandlerName).addressType(CommonConstant.FALSE).build();
             if (RespStatusEnum.SUCCESS.getCode().equals(cronTaskService.createGroup(xxlJobGroup).getStatus())) {
-                return (int) cronTaskService.getGroupId(appName, jobHandlerName).getData();
+                return (Integer) cronTaskService.getGroupId(appName, jobHandlerName).getData();
             }
         }
         return basicResultVO.getData();

File: austin-handler/src/main/java/com/java3y/austin/handler/domain/sms/LinTongSendResult.java
Patch:
@@ -32,7 +32,7 @@ public class LinTongSendResult {
     @Data
     @AllArgsConstructor
     @NoArgsConstructor
-    public class DataDTO {
+    public static class DataDTO {
         Integer code;
         String message;
         Long msgId;

File: austin-stream/src/main/java/com/java3y/austin/stream/utils/LettuceRedisUtils.java
Patch:
@@ -27,7 +27,7 @@ public class LettuceRedisUtils {
 
     static {
         RedisURI redisUri = RedisURI.Builder.redis(AustinFlinkConstant.REDIS_IP)
-                .withPort(Integer.valueOf(AustinFlinkConstant.REDIS_PORT))
+                .withPort(Integer.parseInt(AustinFlinkConstant.REDIS_PORT))
                 .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                 .build();
         redisClient = RedisClient.create(redisUri);

File: austin-common/src/main/java/com/java3y/austin/common/vo/BasicResultVO.java
Patch:
@@ -6,6 +6,8 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 
+import java.io.Serializable;
+
 /**
  * @author zzb
  * @since 2021.11.17
@@ -15,7 +17,7 @@
 @ToString(callSuper = true)
 @AllArgsConstructor
 @NoArgsConstructor
-public final class BasicResultVO<T> {
+public final class BasicResultVO<T> implements Serializable {
 
     /**
      * 响应状态

File: austin-cron/src/main/java/com/java3y/austin/cron/xxl/service/impl/CronTaskServiceImpl.java
Patch:
@@ -168,7 +168,8 @@ public BasicResultVO getGroupId(String appName, String title) {
                     response != null ? JSON.toJSONString(response.body()) : "");
         }
         invalidateCookie();
-        return BasicResultVO.fail(RespStatusEnum.SERVICE_ERROR, JSON.toJSONString(response.body()));
+        return BasicResultVO.fail(RespStatusEnum.SERVICE_ERROR,
+                response != null ? JSON.toJSONString(response.body()) : "");
     }
 
     @Override

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/DingDingWorkNoticeHandler.java
Patch:
@@ -9,7 +9,6 @@
 import com.dingtalk.api.request.OapiMessageCorpconversationGetsendresultRequest;
 import com.dingtalk.api.request.OapiMessageCorpconversationRecallRequest;
 import com.dingtalk.api.response.OapiMessageCorpconversationAsyncsendV2Response;
-import com.dingtalk.api.response.OapiMessageCorpconversationGetsendresultResponse;
 import com.dingtalk.api.response.OapiMessageCorpconversationRecallResponse;
 import com.google.common.base.Throwables;
 import com.java3y.austin.common.constant.AustinConstant;
@@ -179,7 +178,7 @@ public void pull(Long accountId) {
             OapiMessageCorpconversationGetsendresultRequest req = new OapiMessageCorpconversationGetsendresultRequest();
             req.setAgentId(Long.valueOf(account.getAgentId()));
             req.setTaskId(456L);
-            OapiMessageCorpconversationGetsendresultResponse rsp = client.execute(req, accessToken);
+            client.execute(req, accessToken);
         } catch (Exception e) {
             log.error("DingDingWorkNoticeHandler#pull fail:{}", Throwables.getStackTraceAsString(e));
         }

File: austin-support/src/main/java/com/java3y/austin/support/utils/TaskInfoUtils.java
Patch:
@@ -13,7 +13,7 @@
  * @author 3y
  */
 public class TaskInfoUtils {
-    private static final int TYPE_FLAG = 1000000;
+    private static final long TYPE_FLAG = 1000000L;
     private static final String CODE = "track_code_bid";
     private TaskInfoUtils() {
     }
@@ -34,7 +34,7 @@ public static String generateMessageId() {
      */
     public static Long generateBusinessId(Long templateId, Integer templateType) {
         Integer today = Integer.valueOf(DateUtil.format(new Date(), DatePattern.PURE_DATE_PATTERN));
-        return Long.valueOf(String.format("%d%s", templateType * TYPE_FLAG + templateId, today));
+        return Long.valueOf(String.format("%d%s", templateType.longValue() * TYPE_FLAG + templateId, today));
     }
 
     /**

File: austin-cron/src/main/java/com/java3y/austin/cron/xxl/service/impl/CronTaskServiceImpl.java
Patch:
@@ -164,7 +164,8 @@ public BasicResultVO getGroupId(String appName, String title) {
             }
         } catch (Exception e) {
             log.error("CronTaskService#getGroupId fail,e:{},param:{},response:{}", Throwables.getStackTraceAsString(e)
-                    , JSON.toJSONString(params), JSON.toJSONString(response.body()));
+                    , JSON.toJSONString(params),
+                    response != null ? JSON.toJSONString(response.body()) : "");
         }
         invalidateCookie();
         return BasicResultVO.fail(RespStatusEnum.SERVICE_ERROR, JSON.toJSONString(response.body()));

File: austin-handler/src/main/java/com/java3y/austin/handler/deduplication/service/FrequencyDeduplicationService.java
Patch:
@@ -31,7 +31,7 @@ public FrequencyDeduplicationService(@Qualifier("SimpleLimitService") LimitServi
     /**
      * 业务规则去重 构建key
      * <p>
-     * key ： receiver + templateId + sendChannel
+     * key ： receiver  + sendChannel
      * <p>
      * 一天内一个用户只能收到某个渠道的消息 N 次
      *
@@ -43,7 +43,6 @@ public FrequencyDeduplicationService(@Qualifier("SimpleLimitService") LimitServi
     public String deduplicationSingleKey(TaskInfo taskInfo, String receiver) {
         return PREFIX + StrPool.C_UNDERLINE
                 + receiver + StrPool.C_UNDERLINE
-                + taskInfo.getMessageTemplateId() + StrPool.C_UNDERLINE
                 + taskInfo.getSendChannel();
     }
 }

File: austin-support/src/main/java/com/java3y/austin/support/utils/AccountUtils.java
Patch:
@@ -119,7 +119,7 @@ public <T> T getSmsAccountByScriptName(String scriptName, Class<T> clazz) {
      */
     public WxMpService initOfficialAccountService(WeChatOfficialAccount officialAccount) {
         WxMpService wxMpService = new WxMpServiceImpl();
-        WxMpRedisConfigImpl config = new WxMpRedisConfigImpl(redisTemplateWxRedisOps(), ChannelType.ENTERPRISE_WE_CHAT.getAccessTokenPrefix());
+        WxMpRedisConfigImpl config = new WxMpRedisConfigImpl(redisTemplateWxRedisOps(), ChannelType.OFFICIAL_ACCOUNT.getAccessTokenPrefix());
         config.setAppId(officialAccount.getAppId());
         config.setSecret(officialAccount.getSecret());
         config.setToken(officialAccount.getToken());

File: austin-handler/src/main/java/com/java3y/austin/handler/deduplication/limit/SimpleLimitService.java
Patch:
@@ -14,7 +14,8 @@
 
 /**
  * 采用普通的计数去重方法，限制的是每天发送的条数。
- *
+ * 业务逻辑： 一天内相同的用户如果已经收到某渠道内容5次，则应该被过滤掉
+ * 技术方案：由pipeline set & mget实现
  * @author cao
  * @date 2022-04-20 13:41
  */

File: austin-handler/src/main/java/com/java3y/austin/handler/deduplication/limit/SlideWindowLimitService.java
Patch:
@@ -18,7 +18,8 @@
 
 /**
  * 滑动窗口去重器（内容去重采用基于redis中zset的滑动窗口去重，可以做到严格控制单位时间内的频次。）
- *
+ * 业务逻辑：5分钟内相同用户如果收到相同的内容，则应该被过滤掉
+ * 技术方案：由lua脚本实现
  * @author cao
  * @date 2022-04-20 11:34
  */

File: austin-support/src/main/java/com/java3y/austin/support/utils/AustinFileUtils.java
Patch:
@@ -40,9 +40,9 @@ public static File getRemoteUrl2File(String path, String remoteUrl) {
             URL url = new URL(remoteUrl);
             File file = new File(path, url.getPath());
             inputStream = url.openStream();
-            fileOutputStream = new FileOutputStream(file);
             if (!file.exists()) {
                 file.getParentFile().mkdirs();
+                fileOutputStream = new FileOutputStream(file);
                 IoUtil.copy(inputStream, fileOutputStream);
             }
             return file;

File: austin-support/src/main/java/com/java3y/austin/support/utils/AustinFileUtils.java
Patch:
@@ -40,9 +40,9 @@ public static File getRemoteUrl2File(String path, String remoteUrl) {
             URL url = new URL(remoteUrl);
             File file = new File(path, url.getPath());
             inputStream = url.openStream();
-            fileOutputStream = new FileOutputStream(file);
             if (!file.exists()) {
                 file.getParentFile().mkdirs();
+                fileOutputStream = new FileOutputStream(file);
                 IoUtil.copy(inputStream, fileOutputStream);
             }
             return file;

File: austin-web/src/main/java/com/java3y/austin/web/service/impl/DataServiceImpl.java
Patch:
@@ -71,7 +71,7 @@ public UserTimeLineVo getTraceUserInfo(String receiver) {
         }
 
         // 0. 按时间排序
-        List<SimpleAnchorInfo> sortAnchorList = userInfoList.stream().map(s -> JSON.parseObject(s, SimpleAnchorInfo.class)).sorted((o1, o2) -> Math.toIntExact(o1.getTimestamp() - o2.getTimestamp())).collect(Collectors.toList());
+        List<SimpleAnchorInfo> sortAnchorList = userInfoList.stream().map(s -> JSON.parseObject(s, SimpleAnchorInfo.class)).sorted(Comparator.comparing(SimpleAnchorInfo::getTimestamp).reversed()).collect(Collectors.toList());
         return buildUserTimeLineVo(sortAnchorList);
     }
 

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AfterParamCheckAction.java
Patch:
@@ -51,6 +51,7 @@ public void process(ProcessContext<SendTaskModel> context) {
 
         if (CollUtil.isEmpty(taskInfo)) {
             context.setNeedBreak(true).setResponse(BasicResultVO.fail(RespStatusEnum.CLIENT_BAD_PARAMETERS, "手机号或邮箱不合法, 无有效的发送任务"));
+            return;
         }
 
         // 数据组装

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AfterParamCheckAction.java
Patch:
@@ -51,6 +51,7 @@ public void process(ProcessContext<SendTaskModel> context) {
 
         if (CollUtil.isEmpty(taskInfo)) {
             context.setNeedBreak(true).setResponse(BasicResultVO.fail(RespStatusEnum.CLIENT_BAD_PARAMETERS, "手机号或邮箱不合法, 无有效的发送任务"));
+            return;
         }
 
         // 数据组装

File: austin-stream/src/main/java/com/java3y/austin/stream/utils/LettuceRedisUtils.java
Patch:
@@ -29,12 +29,12 @@ public class LettuceRedisUtils {
     static {
         RedisURI redisUri = null;
         if (StrUtil.equals(AustinFlinkConstant.REDIS_MODE_SENTINEL, AustinFlinkConstant.REDIS_MODE)) {
-            redisUri = RedisURI.Builder.sentinel(AustinFlinkConstant.REDIS_IP, AustinFlinkConstant.REDIS_PORT, AustinFlinkConstant.MASTER_ID)
+            redisUri = RedisURI.Builder.sentinel(AustinFlinkConstant.REDIS_IP, AustinFlinkConstant.MASTER_ID)
                     .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                     .build();
         } else if (StrUtil.equals(AustinFlinkConstant.REDIS_MODE_SINGLE, AustinFlinkConstant.REDIS_MODE)) {
             redisUri = RedisURI.Builder.redis(AustinFlinkConstant.REDIS_IP)
-                    .withPort(AustinFlinkConstant.REDIS_PORT)
+                    .withPort(Integer.valueOf(AustinFlinkConstant.REDIS_PORT))
                     .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                     .build();
         }

File: austin-stream/src/main/java/com/java3y/austin/stream/utils/LettuceRedisUtils.java
Patch:
@@ -29,12 +29,12 @@ public class LettuceRedisUtils {
     static {
         RedisURI redisUri = null;
         if (StrUtil.equals(AustinFlinkConstant.REDIS_MODE_SENTINEL, AustinFlinkConstant.REDIS_MODE)) {
-            redisUri = RedisURI.Builder.sentinel(AustinFlinkConstant.REDIS_IP, AustinFlinkConstant.MASTER_ID)
+            redisUri = RedisURI.Builder.sentinel(AustinFlinkConstant.REDIS_IP, AustinFlinkConstant.REDIS_PORT, AustinFlinkConstant.MASTER_ID)
                     .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                     .build();
         } else if (StrUtil.equals(AustinFlinkConstant.REDIS_MODE_SINGLE, AustinFlinkConstant.REDIS_MODE)) {
             redisUri = RedisURI.Builder.redis(AustinFlinkConstant.REDIS_IP)
-                    .withPort(Integer.valueOf(AustinFlinkConstant.REDIS_PORT))
+                    .withPort(AustinFlinkConstant.REDIS_PORT)
                     .withPassword(AustinFlinkConstant.REDIS_PASSWORD.toCharArray())
                     .build();
         }

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AfterParamCheckAction.java
Patch:
@@ -30,7 +30,7 @@
 public class AfterParamCheckAction implements BusinessProcess<SendTaskModel> {
 
     public static final String PHONE_REGEX_EXP = "^((13[0-9])|(14[5,7,9])|(15[0-3,5-9])|(166)|(17[0-9])|(18[0-9])|(19[1,8,9]))\\d{8}$";
-    public static final String EMAIL_REGEX_EXP = "^[A-Za-z0-9-_\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$";
+    public static final String EMAIL_REGEX_EXP = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
 
     public static final HashMap<Integer, String> CHANNEL_REGEX_EXP = new HashMap<>();
 

File: austin-support/src/main/java/com/java3y/austin/support/utils/ContentHolderUtil.java
Patch:
@@ -1,5 +1,6 @@
 package com.java3y.austin.support.utils;
 
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.context.expression.MapAccessor;
 import org.springframework.expression.spel.support.StandardEvaluationContext;
 import org.springframework.util.PropertyPlaceholderHelper;
@@ -54,7 +55,7 @@ public CustomPlaceholderResolver(String template, Map<String, String> paramMap)
         @Override
         public String resolvePlaceholder(String placeholderName) {
             String value = paramMap.get(placeholderName);
-            if (null == value) {
+            if (StringUtils.isEmpty(value)) {
                 String errorStr = MessageFormat.format("template:{0} require param:{1},but not exist! paramMap:{2}",
                         template, placeholderName, paramMap.toString());
                 throw new IllegalArgumentException(errorStr);

File: austin-web/src/main/java/com/java3y/austin/web/controller/RefreshTokenController.java
Patch:
@@ -14,9 +14,9 @@
 
 
 /**
- * @Author 3y
+ * @author 3y
  */
-@AustinResult
+
 @AustinAspect
 @Api(tags = {"手动刷新token的接口"})
 @RestController

File: austin-web/src/main/java/com/java3y/austin/web/utils/Convert4Amis.java
Patch:
@@ -390,7 +390,7 @@ public static EchartsVo getEchartsVo(Map<Object, Object> anchorResult, String te
         if (CollUtil.isNotEmpty(anchorResult)) {
             anchorResult = MapUtil.sort(anchorResult);
             for (Map.Entry<Object, Object> entry : anchorResult.entrySet()) {
-                String description = EnumUtil.getDescriptionByCode((Integer) entry.getKey(), AnchorState.class);
+                String description = EnumUtil.getDescriptionByCode(Integer.valueOf(String.valueOf(entry.getKey())), AnchorState.class);
                 xAxisList.add(description);
                 actualData.add(Integer.valueOf(String.valueOf(entry.getValue())));
             }

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/EmailHandler.java
Patch:
@@ -67,7 +67,7 @@ public boolean handler(TaskInfo taskInfo) {
     }
 
     /**
-     * 获取账号信息合配置
+     * 获取账号信息和配置
      *
      * @return
      */

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/PushHandler.java
Patch:
@@ -154,7 +154,7 @@ private SendPushParam assembleParam(PushContentModel pushContentModel, Set<Strin
         SendPushParam param = SendPushParam.builder()
                 .requestId(String.valueOf(IdUtil.getSnowflake().nextId()))
                 .pushMessage(SendPushParam.PushMessageVO.builder().notification(SendPushParam.PushMessageVO.NotificationVO.builder()
-                                .title(pushContentModel.getTitle()).body(pushContentModel.getContent()).clickType("startapp").build())
+                        .title(pushContentModel.getTitle()).body(pushContentModel.getContent()).clickType("startapp").build())
                         .build())
                 .build();
         if (CollUtil.isNotEmpty(cid)) {

File: austin-handler/src/main/java/com/java3y/austin/handler/receipt/stater/impl/SmsPullReceiptStarterImpl.java
Patch:
@@ -47,7 +47,7 @@ public void start() {
             List<ChannelAccount> channelAccountList = channelAccountDao.findAllByIsDeletedEqualsAndSendChannelEquals(CommonConstant.FALSE, ChannelType.SMS.getCode());
             for (ChannelAccount channelAccount : channelAccountList) {
                 SmsAccount smsAccount = JSON.parseObject(channelAccount.getAccountConfig(), SmsAccount.class);
-                List<SmsRecord> smsRecordList = scriptMap.get(smsAccount.getScriptName()).pull(smsAccount.getScriptName());
+                List<SmsRecord> smsRecordList = scriptMap.get(smsAccount.getScriptName()).pull(channelAccount.getId().intValue());
                 if (CollUtil.isNotEmpty(smsRecordList)) {
                     smsRecordDao.saveAll(smsRecordList);
                 }

File: austin-handler/src/main/java/com/java3y/austin/handler/script/SmsScript.java
Patch:
@@ -26,9 +26,9 @@ public interface SmsScript {
     /**
      * 拉取回执
      *
-     * @param scriptName 标识账号的脚本名
+     * @param id 渠道账号的ID
      * @return 渠道商回执接口返回值
      */
-    List<SmsRecord> pull(String scriptName);
+    List<SmsRecord> pull(Integer id);
 
 }

File: austin-handler/src/main/java/com/java3y/austin/handler/script/impl/TencentSmsScript.java
Patch:
@@ -59,9 +59,9 @@ public List<SmsRecord> send(SmsParam smsParam) {
     }
 
     @Override
-    public List<SmsRecord> pull(String scriptName) {
+    public List<SmsRecord> pull(Integer accountId) {
         try {
-            TencentSmsAccount account = accountUtils.getSmsAccountByScriptName(scriptName, TencentSmsAccount.class);
+            TencentSmsAccount account = accountUtils.getAccountById(accountId, TencentSmsAccount.class);
             SmsClient client = init(account);
             PullSmsSendStatusRequest req = assemblePullReq(account);
             PullSmsSendStatusResponse resp = client.PullSmsSendStatus(req);

File: austin-handler/src/main/java/com/java3y/austin/handler/script/impl/YunPianSmsScript.java
Patch:
@@ -58,8 +58,7 @@ public List<SmsRecord> send(SmsParam smsParam) {
     }
 
     @Override
-    public List<SmsRecord> pull(String scriptName) {
-        YunPianSmsAccount account = accountUtils.getSmsAccountByScriptName(scriptName, YunPianSmsAccount.class);
+    public List<SmsRecord> pull(Integer accountId) {
         // .....
         return null;
     }

File: austin-handler/src/main/java/com/java3y/austin/handler/shield/impl/ShieldServiceImpl.java
Patch:
@@ -51,7 +51,7 @@ public void shield(TaskInfo taskInfo) {
             }
             if (ShieldType.NIGHT_SHIELD_BUT_NEXT_DAY_SEND.getCode().equals(taskInfo.getShieldType())) {
                 redisUtils.lPush(NIGHT_SHIELD_BUT_NEXT_DAY_SEND_KEY, JSON.toJSONString(taskInfo,
-                                SerializerFeature.WriteClassName),
+                        SerializerFeature.WriteClassName),
                         (DateUtil.offsetDay(new Date(), 1).getTime() / 1000) - DateUtil.currentSeconds());
                 logUtils.print(AnchorInfo.builder().state(AnchorState.NIGHT_SHIELD_NEXT_SEND.getCode()).businessId(taskInfo.getBusinessId()).ids(taskInfo.getReceiver()).build());
             }

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/EmailHandler.java
Patch:
@@ -56,7 +56,8 @@ public boolean handler(TaskInfo taskInfo) {
         MailAccount account = getAccountConfig(taskInfo.getSendAccount());
         try {
             File file = StrUtil.isNotBlank(emailContentModel.getUrl()) ? AustinFileUtils.getRemoteUrl2File(dataPath, emailContentModel.getUrl()) : null;
-            MailUtil.send(account, taskInfo.getReceiver(), emailContentModel.getTitle(), emailContentModel.getContent(), true, file);
+            String result = Objects.isNull(file) ? MailUtil.send(account, taskInfo.getReceiver(), emailContentModel.getTitle(), emailContentModel.getContent(), true) :
+                    MailUtil.send(account, taskInfo.getReceiver(), emailContentModel.getTitle(), emailContentModel.getContent(), true, file);
         } catch (Exception e) {
             log.error("EmailHandler#handler fail!{},params:{}", Throwables.getStackTraceAsString(e), taskInfo);
             return false;

File: austin-web/src/main/java/com/java3y/austin/web/advice/AustinResponseBodyAdvice.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.java3y.austin.common.vo.BasicResultVO;
 import com.java3y.austin.web.annotation.AustinResult;
-import org.jetbrains.annotations.NotNull;
 import org.springframework.core.MethodParameter;
 import org.springframework.http.MediaType;
 import org.springframework.http.server.ServerHttpRequest;

File: austin-web/src/main/java/com/java3y/austin/web/controller/DataController.java
Patch:
@@ -16,8 +16,6 @@
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
-
-import java.util.ArrayList;
 import java.util.Objects;
 
 /**

File: austin-handler/src/main/java/com/java3y/austin/handler/script/impl/YunPianSmsScript.java
Patch:
@@ -97,7 +97,7 @@ private List<SmsRecord> assembleSmsRecord(SmsParam smsParam, YunPianSendResult r
                     .msgContent(smsParam.getContent())
                     .seriesId(datum.getSid())
                     .chargingNum(Math.toIntExact(datum.getCount()))
-                    .status(CommonConstant.ZERO.equals(datum.getCode()) ? SmsStatus.SEND_SUCCESS.getCode() : SmsStatus.SEND_FAIL.getCode())
+                    .status(0 == datum.getCode() ? SmsStatus.SEND_SUCCESS.getCode() : SmsStatus.SEND_FAIL.getCode())
                     .reportContent(datum.getMsg())
                     .created(Math.toIntExact(DateUtil.currentSeconds()))
                     .updated(Math.toIntExact(DateUtil.currentSeconds()))

File: austin-handler/src/main/java/com/java3y/austin/handler/script/impl/YunPianSmsScript.java
Patch:
@@ -97,7 +97,7 @@ private List<SmsRecord> assembleSmsRecord(SmsParam smsParam, YunPianSendResult r
                     .msgContent(smsParam.getContent())
                     .seriesId(datum.getSid())
                     .chargingNum(Math.toIntExact(datum.getCount()))
-                    .status(CommonConstant.ZERO.equals(datum.getCode()) ? SmsStatus.SEND_SUCCESS.getCode() : SmsStatus.SEND_FAIL.getCode())
+                    .status(0 == datum.getCode() ? SmsStatus.SEND_SUCCESS.getCode() : SmsStatus.SEND_FAIL.getCode())
                     .reportContent(datum.getMsg())
                     .created(Math.toIntExact(DateUtil.currentSeconds()))
                     .updated(Math.toIntExact(DateUtil.currentSeconds()))

File: austin-support/src/main/java/com/java3y/austin/support/utils/AccountUtils.java
Patch:
@@ -35,7 +35,7 @@ public <T> T getAccountById(Integer sendAccountId, Class<T> clazz) {
                 return JSON.parseObject(channelAccount.getAccountConfig(), clazz);
             }
         } catch (Exception e) {
-            log.error("AccountUtils#getAccount fail!", Throwables.getStackTraceAsString(e));
+            log.error("AccountUtils#getAccount fail! e:{}", Throwables.getStackTraceAsString(e));
         }
         return null;
     }

File: austin-web/src/main/java/com/java3y/austin/web/controller/DataController.java
Patch:
@@ -50,7 +50,7 @@ public BasicResultVO getMessageTemplateData(@RequestBody DataParam dataParam) {
     @PostMapping("/sms")
     @ApiOperation("/获取短信下发数据")
     public BasicResultVO getSmsData(@RequestBody DataParam dataParam) {
-        if (dataParam == null || dataParam.getDateTime() == null || dataParam.getReceiver() == null) {
+        if (dataParam == null || dataParam.getDateTime() == null || StrUtil.isBlank(dataParam.getReceiver())) {
             return new BasicResultVO<>(RespStatusEnum.SUCCESS, SmsTimeLineVo.builder().items(new ArrayList<>()).build());
         }
 

File: austin-web/src/main/java/com/java3y/austin/web/controller/OfficialAccountController.java
Patch:
@@ -47,7 +47,7 @@ public class OfficialAccountController {
     @Autowired
     private WxServiceUtils wxServiceUtils;
 
-    @Autowired
+    //@Autowired
     private WeChatLoginConfig configService;
 
     @Autowired

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/PreParamCheckAction.java
Patch:
@@ -50,13 +50,14 @@ public void process(ProcessContext<SendTaskModel> context) {
             context.setNeedBreak(true).setResponse(BasicResultVO.fail(RespStatusEnum.CLIENT_BAD_PARAMETERS));
             return;
         }
-        sendTaskModel.setMessageParamList(resultMessageParamList);
 
         // 3.过滤receiver大于100的请求
-        if (messageParamList.stream().anyMatch(messageParam -> messageParam.getReceiver().split(StrUtil.COMMA).length > BATCH_RECEIVER_SIZE)) {
+        if (resultMessageParamList.stream().anyMatch(messageParam -> messageParam.getReceiver().split(StrUtil.COMMA).length > BATCH_RECEIVER_SIZE)) {
             context.setNeedBreak(true).setResponse(BasicResultVO.fail(RespStatusEnum.TOO_MANY_RECEIVER));
             return;
         }
 
+        sendTaskModel.setMessageParamList(resultMessageParamList);
+
     }
 }

File: austin-handler/src/main/java/com/java3y/austin/handler/handler/impl/EmailHandler.java
Patch:
@@ -58,7 +58,7 @@ public boolean handler(TaskInfo taskInfo) {
     }
 
     /**
-     * 获取账号信息合配置
+     * 获取账号信息和配置
      *
      * @return
      */

File: austin-support/src/main/java/com/java3y/austin/support/pending/AbstractLazyPending.java
Patch:
@@ -40,7 +40,7 @@ public abstract class AbstractLazyPending<T> {
     /**
      * 是否终止线程
      */
-    private Boolean stop = false;
+    private volatile Boolean stop = false;
 
     /**
      * 单线程消费 阻塞队列的数据

File: austin-support/src/main/java/com/java3y/austin/support/pending/AbstractLazyPending.java
Patch:
@@ -40,7 +40,7 @@ public abstract class AbstractLazyPending<T> {
     /**
      * 是否终止线程
      */
-    private Boolean stop = false;
+    private volatile Boolean stop = false;
 
     /**
      * 单线程消费 阻塞队列的数据

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AfterParamCheckAction.java
Patch:
@@ -30,7 +30,7 @@
 public class AfterParamCheckAction implements BusinessProcess<SendTaskModel> {
 
     public static final String PHONE_REGEX_EXP = "^((13[0-9])|(14[5,7,9])|(15[0-3,5-9])|(166)|(17[0-9])|(18[0-9])|(19[1,8,9]))\\d{8}$";
-    public static final String EMAIL_REGEX_EXP = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$";
+    public static final String EMAIL_REGEX_EXP = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$";
 
     public static final HashMap<Integer, String> CHANNEL_REGEX_EXP = new HashMap<>();
     static {

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AfterParamCheckAction.java
Patch:
@@ -5,7 +5,6 @@
 import cn.hutool.core.util.ReUtil;
 import com.alibaba.fastjson.JSON;
 import com.java3y.austin.common.domain.TaskInfo;
-import com.java3y.austin.common.enums.ChannelType;
 import com.java3y.austin.common.enums.IdType;
 import com.java3y.austin.common.enums.RespStatusEnum;
 import com.java3y.austin.common.vo.BasicResultVO;
@@ -31,7 +30,7 @@
 public class AfterParamCheckAction implements BusinessProcess<SendTaskModel> {
 
     public static final String PHONE_REGEX_EXP = "^((13[0-9])|(14[5,7,9])|(15[0-3,5-9])|(166)|(17[0-9])|(18[0-9])|(19[1,8,9]))\\d{8}$";
-    public static final String EMAIL_REGEX_EXP = "[a-zA-Z0-9]+@[a-zA-Z0-9]+\\\\.[a-zA-Z0-9]+";
+    public static final String EMAIL_REGEX_EXP = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$";
 
     public static final HashMap<Integer, String> CHANNEL_REGEX_EXP = new HashMap<>();
     static {

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AssembleAction.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.util.ReflectUtil;
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.json.JSONUtil;
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
 import com.google.common.base.Throwables;
@@ -114,7 +115,7 @@ private static ContentModel getContentModelValue(MessageTemplate messageTemplate
 
             if (StrUtil.isNotBlank(originValue)) {
                 String resultValue = ContentHolderUtil.replacePlaceHolder(originValue, variables);
-                Object resultObj = JSON.parseObject(resultValue, field.getType());
+                Object resultObj = JSONUtil.isJsonObj(resultValue) ? JSONUtil.toBean(resultValue, field.getType()) : resultValue;
                 ReflectUtil.setFieldValue(contentModel, field, resultObj);
             }
         }

File: austin-cron/src/main/java/com/java3y/austin/cron/handler/RefreshGeTuiAccessTokenHandler.java
Patch:
@@ -45,7 +45,7 @@ public void execute() {
         log.info("refreshGeTuiAccessTokenJob#execute!");
         SupportThreadPoolConfig.getPendingSingleThreadPool().execute(() -> {
             for (int index = SendAccountConstant.START; true; index = index + SendAccountConstant.STEP) {
-                GeTuiAccount account = accountUtils.getAccount(index, SendAccountConstant.GE_TUI_ACCOUNT_KEY, SendAccountConstant.GE_TUI_ACCOUNT_PREFIX, new GeTuiAccount());
+                GeTuiAccount account = accountUtils.getAccount(index, SendAccountConstant.GE_TUI_ACCOUNT_KEY, SendAccountConstant.GE_TUI_ACCOUNT_PREFIX, GeTuiAccount.class);
                 if (account == null) {
                     break;
                 }

File: austin-support/src/main/java/com/java3y/austin/support/utils/AccountUtils.java
Patch:
@@ -27,7 +27,7 @@ public class AccountUtils {
      * (key:dingDingRobotAccount) 钉钉自定义机器人参数示例：[{"ding_ding_robot_10":{"secret":"SEC996d8d9d4768aded74114faae924f229229de444475a1c295d64fedf","webhook":"https://oapi.dingtalk.com/robot/send?access_token=8d03b644ffb6534b203d87333367328b0c3003d164715d2c6c6e56"}}]
      * (key:dingDingWorkNoticeAccount) 钉钉工作消息参数示例：[{"ding_ding_work_notice_10":{"appKey":"dingh6yyyyyyycrlbx","appSecret":"tQpvmkR863333yyyyyHP3QHyyyymy9Ao1yoL1oQX5Nlx_fYLLLlpPJWHvWKbTu","agentId":"152333383622"}}]
      * (key:officialAccount) 微信服务号模板消息参数示例：[{"official_10":{"appId":"wxecb4693d2eef1ea7","secret":"6240870f4d91701640d769ba20120821","templateId":"JHUk6eE9T5Ts7a5JO3ZQqkBBrZBGn5C9iIiKNDQsk-Q","url":"http://weixin.qq.com/download","miniProgramId":"xiaochengxuappid12345","path":"index?foo=bar"}}]
-     * (key:miniProgramAccount) 微信服务号模板消息参数示例：[{"mini_program_10":{"appId":"wxecb4693d2eef1ea7","appSecret":"6240870f4d91701640d769ba20120821","templateId":"JHUk6eE9T5Ts7a5JO3ZQqkBBrZBGn5C9iIiKNDQsk-Q","grantType":"client_credential","miniProgramState":"trial","page":"index?foo=bar"}}]
+     * (key:miniProgramAccount) 微信小程序订阅消息参数示例：[{"mini_program_10":{"appId":"wxecb4693d2eef1ea7","appSecret":"6240870f4d91701640d769ba20120821","templateId":"JHUk6eE9T5Ts7a5JO3ZQqkBBrZBGn5C9iIiKNDQsk-Q","grantType":"client_credential","miniProgramState":"trial","page":"index?foo=bar"}}]
      */
     public <T> T getAccount(Integer sendAccount, String apolloKey, String prefix, T t) {
         String accountValues = config.getProperty(apolloKey, AustinConstant.APOLLO_DEFAULT_VALUE_JSON_ARRAY);

File: austin-service-api-impl/src/main/java/com/java3y/austin/service/api/impl/action/AssembleAction.java
Patch:
@@ -114,7 +114,8 @@ private static ContentModel getContentModelValue(MessageTemplate messageTemplate
 
             if (StrUtil.isNotBlank(originValue)) {
                 String resultValue = ContentHolderUtil.replacePlaceHolder(originValue, variables);
-                ReflectUtil.setFieldValue(contentModel, field, resultValue);
+                Object resultObj = JSON.parseObject(resultValue, field.getType());
+                ReflectUtil.setFieldValue(contentModel, field, resultObj);
             }
         }
 

File: austin-handler/src/main/java/com/java3y/austin/handler/deduplication/build/ContentDeduplicationBuilder.java
Patch:
@@ -21,7 +21,7 @@ public ContentDeduplicationBuilder() {
     @Override
     public DeduplicationParam build(String deduplication, TaskInfo taskInfo) {
         DeduplicationParam deduplicationParam = getParamsFromConfig(deduplicationType, deduplication, taskInfo);
-        if (deduplication == null) {
+        if (deduplicationParam == null) {
            return null;
         }
         deduplicationParam.setAnchorState(AnchorState.CONTENT_DEDUPLICATION);

File: austin-stream/src/main/java/com/java3y/austin/stream/sink/AustinSink.java
Patch:
@@ -5,6 +5,9 @@
 import lombok.extern.slf4j.Slf4j;
 import org.apache.flink.streaming.api.functions.sink.RichSinkFunction;
 
+/**
+ * mock
+ */
 @Slf4j
 public class AustinSink extends RichSinkFunction<AnchorInfo> {
 

File: austin-web/src/main/java/com/java3y/austin/AustinApplication.java
Patch:
@@ -11,7 +11,7 @@
 public class AustinApplication {
     public static void main(String[] args) {
         // TODO apollo的地址.
-        System.setProperty("apollo.config-service", "http://119.91.205.248:7000");
+        System.setProperty("apollo.config-service", "http://ip:7000");
         SpringApplication.run(AustinApplication.class, args);
     }
 }

File: austin-cron/src/main/java/com/java3y/austin/entity/XxlJobInfo.java
Patch:
@@ -12,6 +12,7 @@
 
 /**
  * xxl 任务信息 配置
+ * @author 3y
  */
 @Data
 @Accessors(chain = true)

File: austin-handler/src/main/java/com/java3y/austin/script/TencentSmsScript.java
Patch:
@@ -112,7 +112,7 @@ private SmsClient init(TencentSmsParam account) {
         httpProfile.setEndpoint(account.getUrl());
         ClientProfile clientProfile = new ClientProfile();
         clientProfile.setHttpProfile(httpProfile);
-        SmsClient client = new SmsClient(cred, account.getUrl(), clientProfile);
+        SmsClient client = new SmsClient(cred, account.getRegion(), clientProfile);
         return client;
     }
 

File: austin-handler/src/main/java/com/java3y/austin/service/deduplication/DeduplicationRuleService.java
Patch:
@@ -15,7 +15,7 @@
 import java.util.Date;
 
 /**
- * @author 3y
+ * @author 3y.
  * @date 2021/12/12
  * 去重服务
  */

File: austin-handler/src/main/java/com/java3y/austin/service/discard/DiscardMessageService.java
Patch:
@@ -13,7 +13,7 @@
 
 /**
  * 丢弃模板消息
- * @author 3y
+ * @author 3y.
  */
 @Service
 public class DiscardMessageService {

File: austin-web/src/main/java/com/java3y/austin/AustinApplication.java
Patch:
@@ -10,7 +10,7 @@
 @SpringBootApplication
 public class AustinApplication {
     public static void main(String[] args) {
-        // TODO apollo的地址
+        // TODO apollo的地址.
         //System.setProperty("apollo.config-service", "http://ip:7000");
         SpringApplication.run(AustinApplication.class, args);
     }

File: austin-handler/src/main/java/com/java3y/austin/handler/EmailHandler.java
Patch:
@@ -52,7 +52,7 @@ private MailAccount getAccount() {
         MailAccount account = new MailAccount();
         try {
             account.setHost("smtp.qq.com").setPort(465);
-            account.setUser("403686131@qq.com").setPass("cmnznhomnbtlbggi").setAuth(true);
+            account.setUser("403686131@qq.com").setPass("//TODO").setAuth(true);
             account.setFrom("403686131@qq.com");
 
             MailSSLSocketFactory sf = new MailSSLSocketFactory();

File: austin-common/src/main/java/com/java3y/austin/enums/AnchorState.java
Patch:
@@ -22,6 +22,8 @@ public enum AnchorState {
     WHITE_LIST(50, "白名单过滤"),
     SEND_SUCCESS(60, "消息下发成功"),
     SEND_FAIL(70, "消息下发失败"),
+
+    CLICK(0100, "消息被点击"),
     ;
 
 

File: austin-web/src/main/java/com/java3y/austin/AustinApplication.java
Patch:
@@ -10,6 +10,9 @@
 @SpringBootApplication
 public class AustinApplication {
     public static void main(String[] args) {
+        // TODO apollo的地址
+        //System.setProperty("apollo.config-service", "http://ip:7000");
+
         SpringApplication.run(AustinApplication.class, args);
     }
 }

File: austin-handler/src/main/java/com/java3y/austin/service/deduplication/ContentDeduplicationService.java
Patch:
@@ -16,7 +16,7 @@ public class ContentDeduplicationService extends AbstractDeduplicationService {
     /**
      * 内容去重 构建key
      * <p>
-     * key: md5(templateId + templateId + content)
+     * key: md5(templateId + receiver + content)
      * <p>
      * 相同的内容相同的模板短时间内发给同一个人
      *

File: austin-handler/src/main/java/com/java3y/austin/service/deduplication/ContentDeduplicationService.java
Patch:
@@ -11,7 +11,7 @@
  * 内容去重服务（默认5分钟相同的文案发给相同的用户去重）
  */
 @Service
-public class ContentAbstractDeduplicationService extends AbstractDeduplicationService {
+public class ContentDeduplicationService extends AbstractDeduplicationService {
 
     /**
      * 内容去重 构建key

File: austin-handler/src/main/java/com/java3y/austin/service/deduplication/DeduplicationRuleService.java
Patch:
@@ -17,7 +17,7 @@
 public class DeduplicationRuleService {
 
     @Autowired
-    private ContentAbstractDeduplicationService contentDeduplicationService;
+    private ContentDeduplicationService contentDeduplicationService;
 
     @Autowired
     private FrequencyDeduplicationService frequencyDeduplicationService;

File: austin-support/src/main/java/com/java3y/austin/pipeline/ProcessController.java
Patch:
@@ -59,6 +59,7 @@ public ProcessContext process(ProcessContext context) {
     private Boolean preCheck(ProcessContext context) {
         // 上下文
         if (context == null) {
+            context = new ProcessContext();
             context.setResponse(BasicResultVO.fail(RespStatusEnum.CONTEXT_IS_NULL));
             return false;
         }

