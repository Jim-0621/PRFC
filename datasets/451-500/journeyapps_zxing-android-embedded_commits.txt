File: zxing-android-embedded/src/com/google/zxing/integration/android/IntentIntegrator.java
Patch:
@@ -39,6 +39,7 @@
  * @author Isaac Potoczny-Jones
  * @author Brad Drehmer
  * @author gcstang
+ * @deprecated Use ScanOptions and ScanContract instead.
  */
 @SuppressWarnings("unused")
 public class IntentIntegrator {
@@ -353,6 +354,7 @@ protected void startActivity(Intent intent) {
      * @return null if the event handled here was not related to this class, or
      * else an {@link IntentResult} containing the result of the scan. If the user cancelled scanning,
      * the fields will be null.
+     * @deprecated Not compatible with setRequestCode(). Use parseActivityResult(resultCode, intent) instead.
      */
     public static IntentResult parseActivityResult(int requestCode, int resultCode, Intent intent) {
         if (requestCode == REQUEST_CODE) {

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/ViewfinderView.java
Patch:
@@ -148,8 +148,8 @@ public void onDraw(Canvas canvas) {
         final Rect frame = framingRect;
         final Size previewSize = this.previewSize;
 
-        final int width = canvas.getWidth();
-        final int height = canvas.getHeight();
+        final int width = getWidth();
+        final int height = getHeight();
 
         // Draw the exterior (i.e. outside the framing rect) darkened
         paint.setColor(resultBitmap != null ? resultColor : maskColor);

File: zxing-android-embedded/src/com/google/zxing/client/android/BeepManager.java
Patch:
@@ -20,12 +20,12 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.res.AssetFileDescriptor;
+import android.media.AudioAttributes;
 import android.media.AudioManager;
 import android.media.MediaPlayer;
 import android.os.Vibrator;
 import android.util.Log;
 
-import java.io.Closeable;
 import java.io.IOException;
 
 /**
@@ -94,7 +94,8 @@ public synchronized void playBeepSoundAndVibrate() {
 
     public MediaPlayer playBeepSound() {
         MediaPlayer mediaPlayer = new MediaPlayer();
-        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
+        mediaPlayer.setAudioAttributes(new AudioAttributes.Builder().setContentType(
+                AudioAttributes.CONTENT_TYPE_MUSIC).build());
         mediaPlayer.setOnCompletionListener(mp -> {
             mp.stop();
             mp.reset();

File: zxing-android-embedded/src/com/google/zxing/integration/android/IntentIntegrator.java
Patch:
@@ -383,9 +383,10 @@ public static IntentResult parseActivityResult(int resultCode, Intent intent) {
                     rawBytes,
                     orientation,
                     errorCorrectionLevel,
-                    barcodeImagePath);
+                    barcodeImagePath,
+                    intent);
         }
-        return new IntentResult();
+        return new IntentResult(intent);
     }
 
     private static List<String> list(String... values) {

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/DecoratedBarcodeView.java
Patch:
@@ -117,7 +117,7 @@ private void initialize(AttributeSet attrs) {
     }
 
     /**
-     * Initialize with no custom attributes setted.
+     * Initialize with no custom attributes set.
      */
     private void initialize() {
         initialize(null);

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/DecoderThread.java
Patch:
@@ -164,8 +164,8 @@ private void decode(SourceData sourceData) {
             }
         }
         if (resultHandler != null) {
-            List<ResultPoint> resultPoints = decoder.getPossibleResultPoints();
-            Message message = Message.obtain(resultHandler, R.id.zxing_possible_result_points, resultPoints);
+            List<ResultPoint> resultPoints = BarcodeResult.transformResultPoints(decoder.getPossibleResultPoints(), sourceData);
+                    Message message = Message.obtain(resultHandler, R.id.zxing_possible_result_points, resultPoints);
             message.sendToTarget();
         }
         requestNextPreview();

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/DecoderThread.java
Patch:
@@ -164,8 +164,8 @@ private void decode(SourceData sourceData) {
             }
         }
         if (resultHandler != null) {
-            List<ResultPoint> resultPoints = decoder.getPossibleResultPoints();
-            Message message = Message.obtain(resultHandler, R.id.zxing_possible_result_points, resultPoints);
+            List<ResultPoint> resultPoints = BarcodeResult.transformResultPoints(decoder.getPossibleResultPoints(), sourceData);
+                    Message message = Message.obtain(resultHandler, R.id.zxing_possible_result_points, resultPoints);
             message.sendToTarget();
         }
         requestNextPreview();

File: sample/src/main/java/example/zxing/ContinuousCaptureActivity.java
Patch:
@@ -17,7 +17,6 @@
 
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.List;
 
 /**

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -4,7 +4,6 @@
 import android.hardware.Camera;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -16,7 +15,6 @@
 import com.google.zxing.client.android.Intents;
 import com.google.zxing.integration.android.IntentIntegrator;
 import com.google.zxing.integration.android.IntentResult;
-import com.journeyapps.barcodescanner.CameraPreview;
 
 
 public class MainActivity extends AppCompatActivity {

File: sample/src/main/java/example/zxing/ToolbarCaptureActivity.java
Patch:
@@ -1,7 +1,6 @@
 package example.zxing;
 
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.KeyEvent;

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -37,15 +37,12 @@ public void scanBarcodeInverted(View view){
         integrator.initiateScan();
     }
 
-<<<<<<< HEAD
     public void scanMixedBarcodes(View view){
         IntentIntegrator integrator = new IntentIntegrator(this);
         integrator.addExtra(Intents.Scan.SCAN_TYPE, Intents.Scan.MIXED_SCAN);
         integrator.initiateScan();
     }
 
-=======
->>>>>>> parent of cf4c0dc... Added a mixed scan mode to enable scanning inverted and normal barcodes
     public void scanBarcodeCustomLayout(View view) {
         IntentIntegrator integrator = new IntentIntegrator(this);
         integrator.setCaptureActivity(AnyOrientationCaptureActivity.class);

File: zxing-android-embedded/src/com/google/zxing/client/android/Intents.java
Patch:
@@ -195,14 +195,11 @@ public static final class Scan {
          */
         public static final int INVERTED_SCAN = 1;
 
-<<<<<<< HEAD
         /***
          * Scan for inverted and normal badcodes at the same time.
          */
         public static final int MIXED_SCAN = 2;
 
-=======
->>>>>>> parent of cf4c0dc... Added a mixed scan mode to enable scanning inverted and normal barcodes
         private Scan() {
         }
     }

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/camera/CameraManager.java
Patch:
@@ -97,6 +97,9 @@ public void onPreviewFrame(byte[] data, Camera camera) {
             PreviewCallback callback = this.callback;
             if (cameraResolution != null && callback != null) {
                 try {
+                    if(data == null) {
+                        throw new NullPointerException("No preview data received");
+                    }
                     int format = camera.getParameters().getPreviewFormat();
                     SourceData source = new SourceData(data, cameraResolution.width, cameraResolution.height, format, getCameraRotation());
                     callback.onPreview(source);

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/CaptureManager.java
Patch:
@@ -279,6 +279,7 @@ public void onPause() {
     public void onDestroy() {
         destroyed = true;
         inactivityTimer.cancel();
+        handler.removeCallbacksAndMessages(null);
     }
 
     /**

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -5,6 +5,7 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -16,7 +17,7 @@
 import com.google.zxing.integration.android.IntentResult;
 
 
-public class MainActivity extends ActionBarActivity {
+public class MainActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: sample/src/main/java/example/zxing/ToolbarCaptureActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.KeyEvent;
 
@@ -11,7 +12,7 @@
 /**
  * Sample Activity extending from ActionBarActivity to display a Toolbar.
  */
-public class ToolbarCaptureActivity extends ActionBarActivity {
+public class ToolbarCaptureActivity extends AppCompatActivity {
     private CaptureManager capture;
     private DecoratedBarcodeView barcodeScannerView;
 

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -5,6 +5,7 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -16,7 +17,7 @@
 import com.google.zxing.integration.android.IntentResult;
 
 
-public class MainActivity extends ActionBarActivity {
+public class MainActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: sample/src/main/java/example/zxing/ToolbarCaptureActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.KeyEvent;
 
@@ -11,7 +12,7 @@
 /**
  * Sample Activity extending from ActionBarActivity to display a Toolbar.
  */
-public class ToolbarCaptureActivity extends ActionBarActivity {
+public class ToolbarCaptureActivity extends AppCompatActivity {
     private CaptureManager capture;
     private DecoratedBarcodeView barcodeScannerView;
 

File: zxing-android-embedded/src/com/google/zxing/integration/android/IntentIntegrator.java
Patch:
@@ -61,7 +61,7 @@ public class IntentIntegrator {
     private android.app.Fragment fragment;
     private android.support.v4.app.Fragment supportFragment;
 
-    private final Map<String, Object> moreExtras = new HashMap<String, Object>(3);
+    private final Map<String, Object> moreExtras = new HashMap<>(3);
 
     private Collection<String> desiredBarcodeFormats;
 

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -54,7 +54,7 @@ public void scanToolbar(View view) {
     }
 
     public void scanCustomScanner(View view) {
-        new IntentIntegrator(this).setCaptureActivity(CustomScannerActivity.class).initiateScan();
+        new IntentIntegrator(this).setOrientationLocked(false).setCaptureActivity(CustomScannerActivity.class).initiateScan();
     }
 
     public void scanMarginScanner(View view) {

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/camera/CameraThread.java
Patch:
@@ -67,7 +67,6 @@ private void checkRunning() {
                 if (openCount <= 0) {
                     throw new IllegalStateException("CameraThread is not open");
                 }
-                Log.i(TAG, "Starting new camera thread");
                 this.thread = new HandlerThread("CameraThread");
                 this.thread.start();
                 this.handler = new Handler(thread.getLooper());

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/CameraPreview.java
Patch:
@@ -263,7 +263,7 @@ protected void initializeAttributes(AttributeSet attrs) {
             this.framingRectSize = new Size(framingRectWidth, framingRectHeight);
         }
 
-        this.useTextureView = styledAttributes.getBoolean(R.styleable.zxing_camera_preview_zxing_use_texture_view, false);
+        this.useTextureView = styledAttributes.getBoolean(R.styleable.zxing_camera_preview_zxing_use_texture_view, true);
 
         // See zxing_attrs.xml for the enum values
         int scalingStrategyNumber = (int) styledAttributes.getInteger(R.styleable.zxing_camera_preview_zxing_preview_scaling_strategy, -1);

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/CameraPreview.java
Patch:
@@ -460,7 +460,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
             } else {
                 surfaceView.layout(surfaceRect.left, surfaceRect.top, surfaceRect.right, surfaceRect.bottom);
             }
-        } else if(textureView != null) {
+        } else if(textureView != null && Build.VERSION.SDK_INT >= 14) {
             textureView.layout(0, 0, getWidth(), getHeight());
         }
     }

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/camera/AutoFocusManager.java
Patch:
@@ -54,7 +54,7 @@ public final class AutoFocusManager {
         @Override
         public boolean handleMessage(Message msg) {
             if (msg.what == MESSAGE_FOCUS) {
-                start();
+                focus();
                 return true;
             }
             return false;
@@ -94,6 +94,7 @@ private synchronized void autoFocusAgainLater() {
      * Start auto-focus. The first focus will happen now, then repeated every two seconds.
      */
     public void start() {
+        stopped = false;
         focus();
     }
 
@@ -122,6 +123,7 @@ private void cancelOutstandingTask() {
      */
     public void stop() {
         stopped = true;
+        focusing = false;
         cancelOutstandingTask();
         if (useAutoFocus) {
             // Doesn't hurt to call this even if not focusing

File: sample/src/main/java/example/zxing/ToolbarCaptureActivity.java
Patch:
@@ -6,14 +6,14 @@
 import android.view.KeyEvent;
 
 import com.journeyapps.barcodescanner.CaptureManager;
-import com.journeyapps.barcodescanner.DefaultBarcodeScannerView;
+import com.journeyapps.barcodescanner.CompoundBarcodeView;
 
 /**
  *
  */
 public class ToolbarCaptureActivity extends ActionBarActivity {
     private CaptureManager capture;
-    private DefaultBarcodeScannerView barcodeScannerView;
+    private CompoundBarcodeView barcodeScannerView;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -26,7 +26,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
 
-        barcodeScannerView = (DefaultBarcodeScannerView)findViewById(R.id.zxing_barcode_scanner);
+        barcodeScannerView = (CompoundBarcodeView)findViewById(R.id.zxing_barcode_scanner);
 
         capture = new CaptureManager(this, barcodeScannerView);
         capture.initializeFromIntent(getIntent(), savedInstanceState);

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/CaptureManager.java
Patch:
@@ -44,7 +44,7 @@ public class CaptureManager {
     private static final String TAG = CaptureManager.class.getSimpleName();
 
     private Activity activity;
-    private DefaultBarcodeScannerView barcodeView;
+    private CompoundBarcodeView barcodeView;
     private int orientationLock = ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED;
     private static final String SAVED_ORIENTATION_LOCK = "SAVED_ORIENTATION_LOCK";
 
@@ -102,7 +102,7 @@ public void cameraError(Exception error) {
         }
     };
 
-    public CaptureManager(Activity activity, DefaultBarcodeScannerView barcodeView) {
+    public CaptureManager(Activity activity, CompoundBarcodeView barcodeView) {
         this.activity = activity;
         this.barcodeView = barcodeView;
         barcodeView.getBarcodeView().addStateListener(stateListener);

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/camera/CameraInstance.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.google.zxing.client.android.R;
 import com.journeyapps.barcodescanner.Size;
+import com.journeyapps.barcodescanner.SourceData;
 import com.journeyapps.barcodescanner.Util;
 
 /**
@@ -131,13 +132,13 @@ public boolean isOpen() {
         return open;
     }
 
-    public void requestPreview(final Handler handler, final int message) {
+    public void requestPreview(final PreviewCallback callback) {
         validateOpen();
 
         cameraThread.enqueue(new Runnable() {
             @Override
             public void run() {
-                cameraManager.requestPreviewFrame(handler, message);
+                cameraManager.requestPreviewFrame(callback);
             }
         });
     }

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/camera/CameraInstance.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.google.zxing.client.android.R;
 import com.journeyapps.barcodescanner.Size;
+import com.journeyapps.barcodescanner.SourceData;
 import com.journeyapps.barcodescanner.Util;
 
 /**
@@ -131,13 +132,13 @@ public boolean isOpen() {
         return open;
     }
 
-    public void requestPreview(final Handler handler, final int message) {
+    public void requestPreview(final PreviewCallback callback) {
         validateOpen();
 
         cameraThread.enqueue(new Runnable() {
             @Override
             public void run() {
-                cameraManager.requestPreviewFrame(handler, message);
+                cameraManager.requestPreviewFrame(callback);
             }
         });
     }

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/BarcodeCallback.java
Patch:
@@ -1,6 +1,5 @@
 package com.journeyapps.barcodescanner;
 
-import com.google.zxing.Result;
 import com.google.zxing.ResultPoint;
 
 import java.util.List;
@@ -9,7 +8,7 @@
  *
  */
 public interface BarcodeCallback {
-    public void barcodeResult(Result result);
+    void barcodeResult(BarcodeResult result);
 
-    public void possibleResultPoints(List<ResultPoint> resultPoints);
+    void possibleResultPoints(List<ResultPoint> resultPoints);
 }

File: zxing-android-embedded/src/com/journeyapps/barcodescanner/BarcodeView.java
Patch:
@@ -6,8 +6,6 @@
 import android.util.AttributeSet;
 
 import com.google.zxing.DecodeHintType;
-import com.google.zxing.MultiFormatReader;
-import com.google.zxing.Result;
 import com.google.zxing.ResultPoint;
 import com.google.zxing.client.android.R;
 
@@ -43,7 +41,7 @@ public static enum DecodeMode {
         @Override
         public boolean handleMessage(Message message) {
             if (message.what == R.id.zxing_decode_succeeded) {
-                Result result = (Result) message.obj;
+                BarcodeResult result = (BarcodeResult) message.obj;
 
                 if (result != null) {
                     if (callback != null && decodeMode != DecodeMode.NONE) {

File: sample-nosupport/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -29,7 +29,6 @@ public void scanBarcode(View view) {
     public void scanBarcodeCustomOptions(View view) {
         IntentIntegrator integrator = new IntentIntegrator(this);
         integrator.setDesiredBarcodeFormats(IntentIntegrator.ONE_D_CODE_TYPES);
-        integrator.autoWide();
         integrator.initiateScan();
     }
 

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -30,10 +30,10 @@ public void scanBarcode(View view) {
 
     public void scanBarcodeCustomLayout(View view) {
         IntentIntegrator integrator = new IntentIntegrator(this);
+        integrator.setCaptureActivity(CaptureActivityAnyOrientation.class);
         integrator.setDesiredBarcodeFormats(IntentIntegrator.ONE_D_CODE_TYPES);
         integrator.setPrompt("Scan something");
-        integrator.autoWide();
-        integrator.setOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
+        integrator.setOrientationLocked(false);
         integrator.initiateScan();
     }
 

File: zxing-android/src/com/google/zxing/client/android/Intents.java
Patch:
@@ -109,6 +109,8 @@ public static final class Scan {
 
     public static final String ORIENTATION = "SCAN_ORIENTATION";
 
+    public static final String ORIENTATION_LOCKED = "SCAN_ORIENTATION_LOCKED";
+
 
     /**
      * Desired duration in milliseconds for which to pause after a successful scan before

File: zxing-android/src/com/journeyapps/barcodescanner/DecoderThread.java
Patch:
@@ -96,7 +96,7 @@ private void requestNextPreview() {
   protected LuminanceSource createSource(byte[] data, int dataWidth, int dataHeight) {
     if(this.cropRect == null) {
       return null;
-    } else if(cameraInstance.getCameraManager().isRotated()) {
+    } else if(cameraInstance.getCameraManager().getDisplayConfiguration().isRotated()) {
       byte[] rotated = rotate(data, dataWidth, dataHeight);
 
       //noinspection SuspiciousNameCombination

File: zxing-android/src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -67,7 +67,7 @@ public final class CaptureActivity extends Activity implements SurfaceHolder.Cal
 
   private static final String TAG = CaptureActivity.class.getSimpleName();
 
-  private static final long DEFAULT_INTENT_RESULT_DURATION_MS = 1500L;
+  private static final long DEFAULT_INTENT_RESULT_DURATION_MS = 0L;
 
   private static final String[] ZXING_URLS = { "http://zxing.appspot.com/scan", "zxing://scan/" };
 

File: zxing-android/src/com/google/zxing/client/android/HelpActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void onCreate(Bundle icicle) {
     super.onCreate(icicle);
     setContentView(R.layout.zxing_help);
 
-    webView = (WebView)findViewById(R.id.help_contents);
+    webView = (WebView)findViewById(R.id.zxing_help_contents);
     webView.setWebViewClient(new HelpClient());
 
     // Froyo has a bug with calling onCreate() twice in a row, which causes the What's New page
@@ -85,9 +85,9 @@ protected void onCreate(Bundle icicle) {
       webView.loadUrl(BASE_URL + DEFAULT_PAGE);
     }
 
-    backButton = (Button) findViewById(R.id.back_button);
+    backButton = (Button) findViewById(R.id.zxing_back_button);
     backButton.setOnClickListener(backListener);
-    View doneButton = findViewById(R.id.done_button);
+    View doneButton = findViewById(R.id.zxing_done_button);
     doneButton.setOnClickListener(doneListener);
   }
 

File: sample/src/main/java/example/zxing/MainActivity.java
Patch:
@@ -85,7 +85,7 @@ public void onClick(View v) {
         }
 
         public void scanFromFragment() {
-            new IntentIntegrator(this).initiateScan();
+            IntentIntegrator.forSupportFragment(this).initiateScan();
         }
 
         private void displayToast() {

File: src/com/google/zxing/client/android/encode/ContactEncoder.java
Patch:
@@ -36,7 +36,7 @@ abstract String[] encode(Iterable<String> names,
                            Iterable<String> addresses,
                            Iterable<String> phones,
                            Iterable<String> emails,
-                           String url,
+                           Iterable<String> urls,
                            String note);
 
   /**
@@ -78,7 +78,7 @@ static void doAppendUpToUnique(StringBuilder newContents,
     Collection<String> uniques = new HashSet<String>(2);
     for (String value : values) {
       String trimmed = trim(value);
-      if (trimmed != null && !uniques.contains(trimmed)) {
+      if (trimmed != null && trimmed.length() > 0 && !uniques.contains(trimmed)) {
         newContents.append(prefix).append(':').append(fieldFormatter.format(trimmed)).append(terminator);
         String display = formatter == null ? trimmed : formatter.format(trimmed);
         newDisplayContents.append(display).append('\n');

File: src/com/google/zxing/client/android/encode/MECARDContactEncoder.java
Patch:
@@ -44,7 +44,7 @@ public String[] encode(Iterable<String> names,
                          Iterable<String> addresses,
                          Iterable<String> phones,
                          Iterable<String> emails,
-                         String url,
+                         Iterable<String> urls,
                          String note) {
     StringBuilder newContents = new StringBuilder(100);
     newContents.append("MECARD:");
@@ -64,7 +64,7 @@ public String format(String source) {
       }
     });
     appendUpToUnique(newContents, newDisplayContents, "EMAIL", emails, Integer.MAX_VALUE, null);
-    append(newContents, newDisplayContents, "URL", url);
+    appendUpToUnique(newContents, newDisplayContents, "URL", urls, Integer.MAX_VALUE, null);
     append(newContents, newDisplayContents, "NOTE", note);
     newContents.append(';');
     return new String[] { newContents.toString(), newDisplayContents.toString() };

File: src/com/google/zxing/client/android/encode/QRCodeEncoder.java
Patch:
@@ -259,6 +259,7 @@ private void encodeQRCodeContents(Intent intent, String type) {
           emails.add(bundle.getString(Contents.EMAIL_KEYS[x]));
         }
         String url = bundle.getString(Contents.URL_KEY);
+        Collection<String> urls = url == null ? null : Collections.singletonList(url);
         String note = bundle.getString(Contents.NOTE_KEY);
 
         ContactEncoder mecardEncoder = useVCard ? new VCardContactEncoder() : new MECARDContactEncoder();
@@ -267,7 +268,7 @@ private void encodeQRCodeContents(Intent intent, String type) {
                                                 Collections.singleton(address),
                                                 phones,
                                                 emails,
-                                                url,
+                                                urls,
                                                 note);
         // Make sure we've encoded at least one field.
         if (encoded[1].length() > 0) {
@@ -300,7 +301,7 @@ private void encodeQRCodeContents(AddressBookParsedResult contact) {
                                       toIterable(contact.getAddresses()),
                                       toIterable(contact.getPhoneNumbers()),
                                       toIterable(contact.getEmails()),
-                                      contact.getURL(),
+                                      toIterable(contact.getURLs()),
                                       null);
     // Make sure we've encoded at least one field.
     if (encoded[1].length() > 0) {

File: src/com/google/zxing/client/android/encode/VCardContactEncoder.java
Patch:
@@ -43,7 +43,7 @@ public String[] encode(Iterable<String> names,
                          Iterable<String> addresses,
                          Iterable<String> phones,
                          Iterable<String> emails,
-                         String url,
+                         Iterable<String> urls,
                          String note) {
     StringBuilder newContents = new StringBuilder(100);
     newContents.append("BEGIN:VCARD").append(TERMINATOR);
@@ -59,7 +59,7 @@ public String format(String source) {
       }
     });
     appendUpToUnique(newContents, newDisplayContents, "EMAIL", emails, Integer.MAX_VALUE, null);
-    append(newContents, newDisplayContents, "URL", url);
+    appendUpToUnique(newContents, newDisplayContents, "URL", urls, Integer.MAX_VALUE, null);
     append(newContents, newDisplayContents, "NOTE", note);
     newContents.append("END:VCARD").append(TERMINATOR);
     return new String[] { newContents.toString(), newDisplayContents.toString() };

File: src/com/google/zxing/client/android/result/AddressBookResultHandler.java
Patch:
@@ -135,7 +135,7 @@ public void handleButtonPress(int index) {
                    address1Type,
                    addressResult.getOrg(),
                    addressResult.getTitle(),
-                   addressResult.getURL(),
+                   addressResult.getURLs(),
                    addressResult.getBirthday(),
                    addressResult.getGeo());
         break;
@@ -191,7 +191,7 @@ public CharSequence getDisplayContents() {
       }
     }
     ParsedResult.maybeAppend(result.getEmails(), contents);
-    ParsedResult.maybeAppend(result.getURL(), contents);
+    ParsedResult.maybeAppend(result.getURLs(), contents);
 
     String birthday = result.getBirthday();
     if (birthday != null && birthday.length() > 0) {

File: src/com/google/zxing/client/android/CaptureActivityHandler.java
Patch:
@@ -112,8 +112,8 @@ public void handleMessage(Message message) {
           Log.d(TAG, "Using browser in package " + browserPackageName);
         }
 
-        // Needed for default Android browser only apparently
-        if ("com.android.browser".equals(browserPackageName)) {
+        // Needed for default Android browser / Chrome only apparently
+        if ("com.android.browser".equals(browserPackageName) || "com.android.chrome".equals(browserPackageName)) {
           intent.setPackage(browserPackageName);
           intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
           intent.putExtra(Browser.EXTRA_APPLICATION_ID, browserPackageName);

File: src/com/google/zxing/client/android/common/PlatformSupportManager.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * <p>Sometimes the application wants to access advanced functionality exposed by Android APIs that are only available
- * in later versions of the platform. While {@link Build.VERSION} can be used to determine the device's API level
+ * in later versions of the platform. While {@code Build.VERSION} can be used to determine the device's API level
  * and alter behavior accordingly, and it is possible to write code that uses both old and new APIs selectively,
  * such code would fail to load on older devices that do not have the new API methods.</p>
  *

File: src/com/google/zxing/client/android/book/SearchBookContentsActivity.java
Patch:
@@ -187,8 +187,8 @@ protected JSONObject doInBackground(String... args) {
         } else {
           uri = "http://www.google.com/books?vid=isbn" + theIsbn + "&jscmd=SearchWithinVolume2&q=" + theQuery;
         }
-        String content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.JSON);
-        return new JSONObject(content);
+        CharSequence content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.JSON);
+        return new JSONObject(content.toString());
       } catch (IOException ioe) {
         Log.w(TAG, "Error accessing book search", ioe);
         return null;

File: src/com/google/zxing/client/android/result/supplement/BookResultInfoRetriever.java
Patch:
@@ -52,8 +52,8 @@ final class BookResultInfoRetriever extends SupplementalInfoRetriever {
   @Override
   void retrieveSupplementalInfo() throws IOException {
 
-    String contents = HttpHelper.downloadViaHttp("https://www.googleapis.com/books/v1/volumes?q=isbn:" + isbn,
-                                                 HttpHelper.ContentType.JSON);
+    CharSequence contents = HttpHelper.downloadViaHttp("https://www.googleapis.com/books/v1/volumes?q=isbn:" + isbn,
+                                                       HttpHelper.ContentType.JSON);
 
     if (contents.length() == 0) {
       return;
@@ -65,7 +65,7 @@ void retrieveSupplementalInfo() throws IOException {
 
     try {
 
-      JSONObject topLevel = (JSONObject) new JSONTokener(contents).nextValue();
+      JSONObject topLevel = (JSONObject) new JSONTokener(contents.toString()).nextValue();
       JSONArray items = topLevel.optJSONArray("items");
       if (items == null || items.isNull(0)) {
         return;

File: src/com/google/zxing/client/android/result/supplement/ProductResultInfoRetriever.java
Patch:
@@ -53,7 +53,7 @@ void retrieveSupplementalInfo() throws IOException {
     String encodedProductID = URLEncoder.encode(productID, "UTF-8");
     String uri = "http://www.google." + LocaleManager.getProductSearchCountryTLD(context)
             + "/m/products?ie=utf8&oe=utf8&scoring=p&source=zxing&q=" + encodedProductID;
-    String content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.HTML);
+    CharSequence content = HttpHelper.downloadViaHttp(uri, HttpHelper.ContentType.HTML);
 
     for (Pattern p : PRODUCT_NAME_PRICE_PATTERNS) {
       Matcher matcher = p.matcher(content);

File: src/com/google/zxing/client/android/result/supplement/SupplementalInfoRetriever.java
Patch:
@@ -50,6 +50,7 @@ public static void maybeInvokeRetrieval(TextView textView,
     AsyncTaskExecInterface taskExec = new AsyncTaskExecManager().build();
     if (result instanceof URIParsedResult) {
       taskExec.execute(new URIResultInfoRetriever(textView, (URIParsedResult) result, historyManager, context));
+      taskExec.execute(new TitleRetriever(textView, (URIParsedResult) result, historyManager));
     } else if (result instanceof ProductParsedResult) {
       String productID = ((ProductParsedResult) result).getProductID();
       taskExec.execute(new ProductResultInfoRetriever(textView, productID, historyManager, context));

File: src/com/google/zxing/client/android/common/executor/DefaultAsyncTaskExecInterface.java
Patch:
@@ -26,7 +26,7 @@ public final class DefaultAsyncTaskExecInterface implements AsyncTaskExecInterfa
 
   @Override
   public <T> void execute(AsyncTask<T,?,?> task, T... args) {
-    task.execute();
+    task.execute(args);
   }
 
 }

File: src/com/google/zxing/client/android/camera/AutoFocusManager.java
Patch:
@@ -59,6 +59,7 @@ final class AutoFocusManager implements Camera.AutoFocusCallback {
   public synchronized void onAutoFocus(boolean success, Camera theCamera) {
     if (active) {
       outstandingTask = new AutoFocusTask();
+      outstandingTask.execute();
     }
   }
 

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -563,7 +563,6 @@ private void handleDecodeInternally(Result rawResult, ResultHandler resultHandle
         PreferencesActivity.KEY_SUPPLEMENTAL, true)) {
       SupplementalInfoRetriever.maybeInvokeRetrieval(supplementTextView,
                                                      resultHandler.getResult(),
-                                                     handler,
                                                      historyManager,
                                                      this);
     }

File: src/com/google/zxing/client/android/HttpHelper.java
Patch:
@@ -90,6 +90,7 @@ private static String downloadViaHttp(String uri, String contentTypes) throws IO
       if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
         throw new IOException("Bad HTTP response: " + connection.getResponseCode());
       }
+      Log.i(TAG, "Consuming " + uri);
       return consume(connection);
     } finally {
       connection.disconnect();

File: src/com/google/zxing/client/android/result/WifiResultHandler.java
Patch:
@@ -57,7 +57,7 @@ public void handleButtonPress(int index) {
       WifiParsedResult wifiResult = (WifiParsedResult) getResult();
       WifiManager wifiManager = (WifiManager) getActivity().getSystemService(Context.WIFI_SERVICE);
       Toast.makeText(getActivity(), R.string.wifi_changing_network, Toast.LENGTH_LONG).show();
-      WifiConfigManager.configure(wifiManager, wifiResult);
+      new WifiConfigManager(wifiManager).execute(wifiResult);
       parent.restartPreviewAfterDelay(0L);
     }
   }

File: src/com/google/zxing/client/android/share/BookmarkPickerActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void onCreate(Bundle icicle) {
 
   @Override
   protected void onListItemClick(ListView l, View view, int position, long id) {
-    if (cursor.moveToPosition(position)) {
+    if (!cursor.isClosed() && cursor.moveToPosition(position)) {
       Intent intent = new Intent();
       intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
       intent.putExtra(Browser.BookmarkColumns.TITLE, cursor.getString(TITLE_COLUMN));

File: src/com/google/zxing/client/android/ViewfinderView.java
Patch:
@@ -80,6 +80,9 @@ public void setCameraManager(CameraManager cameraManager) {
 
   @Override
   public void onDraw(Canvas canvas) {
+    if (cameraManager == null) {
+      return; // not ready yet, early draw before done configuring
+    }
     Rect frame = cameraManager.getFramingRect();
     if (frame == null) {
       return;

File: src/com/google/zxing/client/android/history/HistoryActivity.java
Patch:
@@ -81,7 +81,9 @@ public void onCreateContextMenu(ContextMenu menu,
                                   View v,
                                   ContextMenu.ContextMenuInfo menuInfo) {
     int position = ((AdapterView.AdapterContextMenuInfo) menuInfo).position;
-    menu.add(Menu.NONE, position, position, R.string.history_clear_one_history_text);
+    if (position >= adapter.getCount() || adapter.getItem(position).getResult() != null) {
+      menu.add(Menu.NONE, position, position, R.string.history_clear_one_history_text);
+    } // else it's just that dummy "Empty" message
   }
 
   @Override

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -352,8 +352,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
         startActivity(intent);
         break;
       case HISTORY_ID:
-        intent = new Intent(Intent.ACTION_VIEW);
-        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
         intent.setClassName(this, HistoryActivity.class.getName());
         startActivityForResult(intent, HISTORY_REQUEST_CODE);
         break;

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -39,7 +39,6 @@ public final class PreferencesActivity extends PreferenceActivity
   public static final String KEY_DECODE_DATA_MATRIX = "preferences_decode_Data_Matrix";
   public static final String KEY_CUSTOM_PRODUCT_SEARCH = "preferences_custom_product_search";
 
-  public static final String KEY_REVERSE_IMAGE = "preferences_reverse_image";
   public static final String KEY_PLAY_BEEP = "preferences_play_beep";
   public static final String KEY_VIBRATE = "preferences_vibrate";
   public static final String KEY_COPY_TO_CLIPBOARD = "preferences_copy_to_clipboard";

File: src/com/google/zxing/client/android/DecodeFormatManager.java
Patch:
@@ -43,7 +43,8 @@ final class DecodeFormatManager {
     ONE_D_FORMATS = EnumSet.of(BarcodeFormat.CODE_39,
                                BarcodeFormat.CODE_93,
                                BarcodeFormat.CODE_128,
-                               BarcodeFormat.ITF);
+                               BarcodeFormat.ITF,
+                               BarcodeFormat.CODABAR);
     ONE_D_FORMATS.addAll(PRODUCT_FORMATS);
   }
 

File: src/com/google/zxing/client/android/ViewfinderView.java
Patch:
@@ -181,7 +181,7 @@ public void drawResultBitmap(Bitmap barcode) {
 
   public void addPossibleResultPoint(ResultPoint point) {
     List<ResultPoint> points = possibleResultPoints;
-    synchronized (point) {
+    synchronized (points) {
       points.add(point);
       int size = points.size();
       if (size > MAX_RESULT_POINTS) {

File: src/com/google/zxing/client/android/encode/VCardContactEncoder.java
Patch:
@@ -27,7 +27,7 @@
  */
 final class VCardContactEncoder extends ContactEncoder {
 
-  private static final Pattern RESERVED_VCARD_CHARS = Pattern.compile("([\\\\:;])");
+  private static final Pattern RESERVED_VCARD_CHARS = Pattern.compile("([\\\\,;])");
   private static final Pattern NEWLINE = Pattern.compile("\\n");
   private static final Formatter VCARD_FIELD_FORMATTER = new Formatter() {
     @Override

File: src/com/google/zxing/client/android/HttpHelper.java
Patch:
@@ -37,7 +37,7 @@ public final class HttpHelper {
 
   private static final Collection<String> REDIRECTOR_DOMAINS = new HashSet<String>(Arrays.asList(
     "amzn.to", "bit.ly", "bitly.com", "fb.me", "goo.gl", "is.gd", "j.mp", "lnkd.in", "ow.ly",
-    "SCN.BY", "su.pr", "t.co", "tinyurl.com", "tr.im"
+    "R.BEETAGG.COM", "r.beetagg.com", "SCN.BY", "su.pr", "t.co", "tinyurl.com", "tr.im"
   ));
 
   private HttpHelper() {

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -159,6 +159,8 @@ public void onCreate(Bundle icicle) {
     inactivityTimer = new InactivityTimer(this);
     beepManager = new BeepManager(this);
 
+    PreferenceManager.setDefaultValues(this, R.xml.preferences, false);
+
     showHelpOnFirstLaunch();
   }
 

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -59,13 +59,13 @@ final class DecodeThread extends Thread {
     if (decodeFormats == null || decodeFormats.isEmpty()) {
       SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(activity);
       decodeFormats = EnumSet.noneOf(BarcodeFormat.class);
-      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D, true)) {
+      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D, false)) {
         decodeFormats.addAll(DecodeFormatManager.ONE_D_FORMATS);
       }
-      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_QR, true)) {
+      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_QR, false)) {
         decodeFormats.addAll(DecodeFormatManager.QR_CODE_FORMATS);
       }
-      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_DATA_MATRIX, true)) {
+      if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_DATA_MATRIX, false)) {
         decodeFormats.addAll(DecodeFormatManager.DATA_MATRIX_FORMATS);
       }
     }

File: src/com/google/zxing/client/android/result/ResultHandler.java
Patch:
@@ -245,8 +245,7 @@ final void addCalendarEvent(String summary,
         // + 1 day
         endMilliseconds = startMilliseconds + 24 * 60 * 60 * 1000;
       } else {
-        // + 1 hour
-        endMilliseconds = startMilliseconds + 60 * 60 * 1000;
+        endMilliseconds = startMilliseconds;
       }
     } else {
       endMilliseconds = calculateMilliseconds(end);

File: src/com/google/zxing/client/android/camera/CameraManager.java
Patch:
@@ -300,7 +300,7 @@ public void setManualFramingRect(int width, int height) {
   public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data, int width, int height) {
     Rect rect = getFramingRectInPreview();
     if (rect == null) {
-      throw new IllegalStateException();
+      return null;
     }
     int previewFormat = configManager.getPreviewFormat();
     String previewFormatString = configManager.getPreviewFormatString();

File: src/com/google/zxing/client/android/wifi/WifiConfigManager.java
Patch:
@@ -103,6 +103,7 @@ private static void updateNetwork(WifiManager wifiManager, WifiConfiguration con
       // Try to disable the current network and start a new one.
       if (wifiManager.enableNetwork(networkId, true)) {
         Log.i(TAG, "Associating to network " + config.SSID);
+        wifiManager.saveConfiguration();
       } else {
         Log.w(TAG, "Failed to enable network " + config.SSID);
       }

File: src/com/google/zxing/client/android/DecodeHandler.java
Patch:
@@ -21,7 +21,6 @@
 import com.google.zxing.MultiFormatReader;
 import com.google.zxing.ReaderException;
 import com.google.zxing.Result;
-import com.google.zxing.client.android.camera.CameraManager;
 import com.google.zxing.common.HybridBinarizer;
 
 import android.os.Bundle;
@@ -73,7 +72,7 @@ public void handleMessage(Message message) {
   private void decode(byte[] data, int width, int height) {
     long start = System.currentTimeMillis();
     Result rawResult = null;
-    PlanarYUVLuminanceSource source = CameraManager.get().buildLuminanceSource(data, width, height);
+    PlanarYUVLuminanceSource source = activity.getCameraManager().buildLuminanceSource(data, width, height);
     BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
     try {
       rawResult = multiFormatReader.decodeWithState(bitmap);

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -47,6 +47,7 @@ public final class PreferencesActivity extends PreferenceActivity
   public static final String KEY_BULK_MODE = "preferences_bulk_mode";
   public static final String KEY_REMEMBER_DUPLICATES = "preferences_remember_duplicates";
   public static final String KEY_SUPPLEMENTAL = "preferences_supplemental";
+  public static final String KEY_SEARCH_COUNTRY = "preferences_search_country";
 
   public static final String KEY_HELP_VERSION_SHOWN = "preferences_help_version_shown";
   public static final String KEY_NOT_OUR_RESULTS_SHOWN = "preferences_not_out_results_shown";

File: src/com/google/zxing/client/android/book/BrowseBookListener.java
Patch:
@@ -47,7 +47,7 @@ public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
       int equals = uri.indexOf('=');
       String volumeId = uri.substring(equals + 1);
       String readBookURI = "http://books.google." +
-          LocaleManager.getBookSearchCountryTLD() +
+          LocaleManager.getBookSearchCountryTLD(activity) +
           "/books?id=" + volumeId + "&pg=" + pageId + "&vq=" + query;
       Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(readBookURI));
       intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);                    

File: src/com/google/zxing/client/android/result/ResultHandler.java
Patch:
@@ -446,18 +446,18 @@ final void searchMap(String address, CharSequence title) {
 
   final void getDirections(double latitude, double longitude) {
     launchIntent(new Intent(Intent.ACTION_VIEW, Uri.parse("http://maps.google." +
-        LocaleManager.getCountryTLD() + "/maps?f=d&daddr=" + latitude + ',' + longitude)));
+        LocaleManager.getCountryTLD(getActivity()) + "/maps?f=d&daddr=" + latitude + ',' + longitude)));
   }
 
   // Uses the mobile-specific version of Product Search, which is formatted for small screens.
   final void openProductSearch(String upc) {
-    Uri uri = Uri.parse("http://www.google." + LocaleManager.getProductSearchCountryTLD() +
+    Uri uri = Uri.parse("http://www.google." + LocaleManager.getProductSearchCountryTLD(getActivity()) +
         "/m/products?q=" + upc + "&source=zxing");
     launchIntent(new Intent(Intent.ACTION_VIEW, uri));
   }
 
   final void openBookSearch(String isbn) {
-    Uri uri = Uri.parse("http://books.google." + LocaleManager.getBookSearchCountryTLD() +
+    Uri uri = Uri.parse("http://books.google." + LocaleManager.getBookSearchCountryTLD(getActivity()) +
         "/books?vid=isbn" + isbn);
     launchIntent(new Intent(Intent.ACTION_VIEW, uri));
   }

File: src/com/google/zxing/client/android/camera/PreviewCallback.java
Patch:
@@ -46,8 +46,9 @@ public void onPreviewFrame(byte[] data, Camera camera) {
     if (!useOneShotPreviewCallback) {
       camera.setPreviewCallback(null);
     }
-    if (previewHandler != null) {
-      Message message = previewHandler.obtainMessage(previewMessage, cameraResolution.x,
+    Handler thePreviewHandler = previewHandler;
+    if (thePreviewHandler != null) {
+      Message message = thePreviewHandler.obtainMessage(previewMessage, cameraResolution.x,
           cameraResolution.y, data);
       message.sendToTarget();
       previewHandler = null;

File: src/com/google/zxing/client/android/result/WifiResultHandler.java
Patch:
@@ -59,9 +59,6 @@ public void handleButtonPress(int index) {
     WifiParsedResult wifiResult = (WifiParsedResult) getResult();
     if (index == 0) {
       String ssid = wifiResult.getSsid();
-      if (ssid == null || ssid.length() == 0) {
-        return;
-      }
       String password = wifiResult.getPassword();
       String networkType = wifiResult.getNetworkEncryption();
       WifiManager wifiManager = (WifiManager) getActivity().getSystemService(Context.WIFI_SERVICE);

File: src/com/google/zxing/client/android/result/supplement/BookResultInfoRetriever.java
Patch:
@@ -66,7 +66,7 @@ void retrieveSupplementalInfo() throws IOException, InterruptedException {
 
     String title;
     String pages;
-    Collection<String> authors;
+    Collection<String> authors = null;
 
     try {
 
@@ -84,9 +84,9 @@ void retrieveSupplementalInfo() throws IOException, InterruptedException {
       title = volumeInfo.optString("title");
       pages = volumeInfo.optString("pageCount");
 
-      authors = new ArrayList<String>();
       JSONArray authorsArray = volumeInfo.optJSONArray("authors");
       if (authorsArray != null && !authorsArray.isNull(0)) {
+        authors = new ArrayList<String>();
         for (int i = 0; i < authorsArray.length(); i++) {
           authors.add(authorsArray.getString(i));
         }

File: src/com/google/zxing/client/android/wifi/NetworkType.java
Patch:
@@ -23,6 +23,9 @@ enum NetworkType {
   NO_PASSWORD;
 
   static NetworkType forIntentValue(String networkTypeString) {
+    if (networkTypeString == null) {
+      return NO_PASSWORD;
+    }
     if ("WPA".equals(networkTypeString)) {
       return WPA;
     }

File: src/com/google/zxing/client/android/result/EmailAddressResultHandler.java
Patch:
@@ -60,7 +60,7 @@ public void handleButtonPress(int index) {
       case 1:
         String[] addresses = new String[1];
         addresses[0] = emailResult.getEmailAddress();
-        addContact(null, null, addresses, null, null, null, null);
+        addEmailOnlyContact(addresses, null);
         break;
     }
   }

File: src/com/google/zxing/client/android/result/TelResultHandler.java
Patch:
@@ -58,7 +58,7 @@ public void handleButtonPress(int index) {
       case 1:
         String[] numbers = new String[1];
         numbers[0] = telResult.getNumber();
-        addContact(null, numbers, null, null, null, null, null);
+        addPhoneOnlyContact(numbers, null);
         break;
     }
   }

File: src/com/google/zxing/client/android/HelpActivity.java
Patch:
@@ -55,7 +55,8 @@ public final class HelpActivity extends Activity {
   public static final String DEFAULT_PAGE = "index.html";
   public static final String WHATS_NEW_PAGE = "whatsnew.html";
 
-  private static final String BASE_URL = "file:///android_asset/html/";
+  private static final String BASE_URL =
+      "file:///android_asset/html-" + LocaleManager.getTranslatedAssetLanguage() + '/';
   private static final String WEBVIEW_STATE_PRESENT = "webview_state_present";
 
   private static boolean initialized = false;

File: src/com/google/zxing/client/android/book/SearchBookContentsActivity.java
Patch:
@@ -259,7 +259,7 @@ public void run() {
         // break or disappear at any time in the future. Since this is an API call rather than a
         // website, we don't use LocaleManager to change the TLD.
         URI uri;
-        if (isbn.startsWith("http://google.com/books?id=")) {
+        if (LocaleManager.isBookSearchUrl(isbn)) {
           int equals = isbn.indexOf('=');
           String volumeId = isbn.substring(equals + 1);
           uri = new URI("http", null, "www.google.com", -1, "/books", "id=" + volumeId +

File: src/com/google/zxing/client/android/result/supplement/URIResultInfoRetriever.java
Patch:
@@ -48,7 +48,7 @@ final class URIResultInfoRetriever extends SupplementalInfoRetriever {
                          Handler handler,
                          HistoryManager historyManager,
                          Context context) {
-    super(textView, handler, historyManager, context);
+    super(textView, handler, historyManager);
     redirectString = context.getString(R.string.msg_redirect);
     this.result = result;
   }
@@ -59,12 +59,11 @@ void retrieveSupplementalInfo() throws IOException, InterruptedException {
     String newURI = unredirect(oldURI);
     int count = 0;
     while (count < 3 && !oldURI.equals(newURI)) {
-      append(result.getDisplayResult(), redirectString + " : " + newURI);
+      append(result.getDisplayResult(), null, new String[] { redirectString + " : " + newURI }, newURI);
       count++;
       oldURI = newURI;
       newURI = unredirect(newURI);
     }
-    setLink(newURI);
   }
 
   private static String unredirect(String uri) throws IOException {

File: src/com/google/zxing/client/android/book/SearchBookContentsActivity.java
Patch:
@@ -126,6 +126,7 @@ public void onCreate(Bundle icicle) {
     }
 
     isbn = intent.getStringExtra(Intents.SearchBookContents.ISBN);
+    // FIXME(dswitkin): Should not hardcode Books URL. Also does not handle books.google.ca etc.
     if (isbn.startsWith("http://google.com/books?id=")) {
       setTitle(getString(R.string.sbc_name));
     } else {

File: src/com/google/zxing/client/android/result/ResultHandler.java
Patch:
@@ -364,10 +364,10 @@ final void openBookSearch(String isbn) {
     launchIntent(new Intent(Intent.ACTION_VIEW, uri));
   }
 
-  final void searchBookContents(String isbn) {
+  final void searchBookContents(String isbnOrUrl) {
     Intent intent = new Intent(Intents.SearchBookContents.ACTION);
     intent.setClassName(activity, SearchBookContentsActivity.class.getName());
-    putExtra(intent, Intents.SearchBookContents.ISBN, isbn);
+    putExtra(intent, Intents.SearchBookContents.ISBN, isbnOrUrl);
     launchIntent(intent);
   }
 

File: src/com/google/zxing/client/android/result/URIResultHandler.java
Patch:
@@ -76,6 +76,7 @@ public int getDisplayTitle() {
   }
 
   private boolean isGoogleBooksURI() {
+    // FIXME(dswitkin): Should not hardcode Books URL. Also does not handle books.google.ca etc.
     return ((URIParsedResult) getResult()).getURI().startsWith("http://google.com/books?id=");
   }
 

File: src/com/google/zxing/client/android/wifi/WifiActivity.java
Patch:
@@ -216,10 +216,9 @@ protected void onCreate(Bundle savedInstanceState) {
     } else if ("WEP".equals(networkType)) {
       networkT = NetworkType.NETWORK_WEP;
     } else if ("nopass".equals(networkType)) {
-     networkT = NetworkType.NETWORK_NOPASS;
+      networkT = NetworkType.NETWORK_NOPASS;
     } else {
-      doError(R.string.wifi_type_incorrect);
-      return;
+      networkT = NetworkType.NETWORK_INVALID;
     }
 
     // This is not available before onCreate

File: src/com/google/zxing/client/android/DecodeFormatManager.java
Patch:
@@ -56,15 +56,15 @@ private DecodeFormatManager() {}
 
   static Vector<BarcodeFormat> parseDecodeFormats(Intent intent) {
     List<String> scanFormats = null;
-    String scanFormatsString = intent.getStringExtra(Intents.Scan.SCAN_FORMATS);
+    String scanFormatsString = intent.getStringExtra(Intents.Scan.FORMATS);
     if (scanFormatsString != null) {
       scanFormats = Arrays.asList(COMMA_PATTERN.split(scanFormatsString));
     }
     return parseDecodeFormats(scanFormats, intent.getStringExtra(Intents.Scan.MODE));
   }
 
   static Vector<BarcodeFormat> parseDecodeFormats(Uri inputUri) {
-    List<String> formats = inputUri.getQueryParameters(Intents.Scan.SCAN_FORMATS);
+    List<String> formats = inputUri.getQueryParameters(Intents.Scan.FORMATS);
     if (formats != null && formats.size() == 1 && formats.get(0) != null){
       formats = Arrays.asList(COMMA_PATTERN.split(formats.get(0)));
     }

File: src/com/google/zxing/client/android/DecodeHandler.java
Patch:
@@ -49,7 +49,6 @@ final class DecodeHandler extends Handler {
   public void handleMessage(Message message) {
     switch (message.what) {
       case R.id.decode:
-        //Log.d(TAG, "Got decode message");
         decode((byte[]) message.obj, message.arg1, message.arg2);
         break;
       case R.id.quit:
@@ -86,7 +85,6 @@ private void decode(byte[] data, int width, int height) {
       Bundle bundle = new Bundle();
       bundle.putParcelable(DecodeThread.BARCODE_BITMAP, source.renderCroppedGreyscaleBitmap());
       message.setData(bundle);
-      //Log.d(TAG, "Sending decode succeeded message...");
       message.sendToTarget();
     } else {
       Message message = Message.obtain(activity.getHandler(), R.id.decode_failed);

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -84,7 +84,8 @@ private void disableLastCheckedPref() {
       checked.add(decodeDataMatrix);
     }
     boolean disable = checked.size() < 2;
-    for (CheckBoxPreference pref : new CheckBoxPreference[] {decode1D, decodeQR, decodeDataMatrix}) {
+    CheckBoxPreference[] checkBoxPreferences = {decode1D, decodeQR, decodeDataMatrix};
+    for (CheckBoxPreference pref : checkBoxPreferences) {
       pref.setEnabled(!(disable && checked.contains(pref)));
     }
   }

File: src/com/google/zxing/client/android/result/supplement/ProductResultInfoRetriever.java
Patch:
@@ -48,7 +48,8 @@ final class ProductResultInfoRetriever extends SupplementalInfoRetriever {
 
   private final String productID;
 
-  ProductResultInfoRetriever(TextView textView, String productID, Handler handler, Context context) {
+  ProductResultInfoRetriever(TextView textView, String productID, Handler handler,
+      Context context) {
     super(textView, handler, context);
     this.productID = productID;
   }
@@ -107,5 +108,4 @@ private static String consume(HttpEntity entity) {
     }
   }
 
-
 }

File: src/com/google/zxing/client/android/result/supplement/URIResultInfoRetriever.java
Patch:
@@ -42,7 +42,8 @@ final class URIResultInfoRetriever extends SupplementalInfoRetriever {
   private final URIParsedResult result;
   private final String redirectString;
 
-  URIResultInfoRetriever(TextView textView, URIParsedResult result, Handler handler, Context context) {
+  URIResultInfoRetriever(TextView textView, URIParsedResult result, Handler handler,
+      Context context) {
     super(textView, handler, context);
     redirectString = context.getString(R.string.msg_redirect);
     this.result = result;

File: src/com/google/zxing/client/android/share/AppPickerActivity.java
Patch:
@@ -36,16 +36,16 @@ protected void onCreate(Bundle icicle) {
     if (labelsPackages.isEmpty()) {
       new LoadPackagesAsyncTask(this).execute(labelsPackages);
     }
-    // otherwise use last copy we loaded -- apps don't change much, and it takes
-    // forever to load for some reason
+    // Otherwise use last copy we loaded -- apps don't change much, and it takes
+    // forever to load for some reason.
   }
 
   @Override
   protected void onListItemClick(ListView l, View view, int position, long id) {
     if (position >= 0 && position < labelsPackages.size()) {
       String url = "market://search?q=pname:" + labelsPackages.get(position)[1];
       Intent intent = new Intent();
-      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);      
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
       intent.putExtra(Browser.BookmarkColumns.URL, url);
       setResult(RESULT_OK, intent);
     } else {

File: src/com/google/zxing/client/android/share/LoadPackagesAsyncTask.java
Patch:
@@ -33,7 +33,7 @@
  *
  * @author Sean Owen
  */
-final class LoadPackagesAsyncTask extends AsyncTask<List<String[]>,Void,List<String[]>> {
+final class LoadPackagesAsyncTask extends AsyncTask<List<String[]>, Void, List<String[]>> {
 
   private static final String[] PKG_PREFIX_WHITELIST = {
       "com.google.android.apps.",
@@ -45,7 +45,6 @@ final class LoadPackagesAsyncTask extends AsyncTask<List<String[]>,Void,List<Str
       "com.htc",
   };
 
-
   private final AppPickerActivity activity;
 
   LoadPackagesAsyncTask(AppPickerActivity activity) {
@@ -93,7 +92,8 @@ protected synchronized void onPostExecute(List<String[]> results) {
     for (String[] result : results) {
       labels.add(result[0]);
     }
-    ListAdapter listAdapter = new ArrayAdapter<String>(activity, android.R.layout.simple_list_item_1, labels);
+    ListAdapter listAdapter = new ArrayAdapter<String>(activity,
+        android.R.layout.simple_list_item_1, labels);
     activity.setListAdapter(listAdapter);
   }
 

File: src/com/google/zxing/client/android/wifi/Killer.java
Patch:
@@ -42,6 +42,7 @@ final class Killer implements Runnable {
   Killer(Activity parent) {
     this.parent = parent;
   }
+
   void launchIntent(Intent intent) {
     if (intent != null) {
       intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);

File: src/com/google/zxing/client/android/book/SearchBookContentsActivity.java
Patch:
@@ -100,7 +100,7 @@ public void onClick(View view) {
 
   private final View.OnKeyListener keyListener = new View.OnKeyListener() {
     public boolean onKey(View view, int keyCode, KeyEvent event) {
-      if (keyCode == KeyEvent.KEYCODE_ENTER) {
+      if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {
         launchSearch();
         return true;
       }

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -220,7 +220,8 @@ protected void onResume() {
     }
 
     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
-    copyToClipboard = prefs.getBoolean(PreferencesActivity.KEY_COPY_TO_CLIPBOARD, true);
+    copyToClipboard = prefs.getBoolean(PreferencesActivity.KEY_COPY_TO_CLIPBOARD, true)
+        && (intent == null || intent.getBooleanExtra(Intents.Scan.SAVE_HISTORY, true));
 
     beepManager.updatePrefs();
     

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -223,6 +223,8 @@ protected void onResume() {
     copyToClipboard = prefs.getBoolean(PreferencesActivity.KEY_COPY_TO_CLIPBOARD, true);
 
     beepManager.updatePrefs();
+    
+    inactivityTimer.onResume();
   }
 
   @Override
@@ -232,6 +234,7 @@ protected void onPause() {
       handler.quitSynchronously();
       handler = null;
     }
+    inactivityTimer.onPause();
     CameraManager.get().closeDriver();
   }
 

File: src/com/google/zxing/client/android/history/HistoryManager.java
Patch:
@@ -57,7 +57,7 @@ public final class HistoryManager {
 
   private static final String TAG = HistoryManager.class.getSimpleName();
 
-  private static final int MAX_ITEMS = 50;
+  private static final int MAX_ITEMS = 500;
   //private static final String[] TEXT_COL_PROJECTION = { DBHelper.TEXT_COL };
   private static final String[] GET_ITEM_COL_PROJECTION = {
       DBHelper.TEXT_COL,

File: src/com/google/zxing/client/android/result/ResultHandlerFactory.java
Patch:
@@ -46,7 +46,7 @@ public static ResultHandler makeResultHandler(Activity activity, Result rawResul
     } else if (type.equals(ParsedResultType.WIFI)) {
       return new WifiResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.TEXT)) {
-      return new TextResultHandler(activity, result);
+      return new TextResultHandler(activity, result, rawResult);
     } else if (type.equals(ParsedResultType.GEO)) {
       return new GeoResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.TEL)) {
@@ -59,7 +59,7 @@ public static ResultHandler makeResultHandler(Activity activity, Result rawResul
       return new ISBNResultHandler(activity, result, rawResult);
     } else {
       // The TextResultHandler is the fallthrough for unsupported formats.
-      return new TextResultHandler(activity, result);
+      return new TextResultHandler(activity, result, rawResult);
     }
   }
 

File: src/com/google/zxing/client/android/result/TextResultHandler.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.google.zxing.client.android.result;
 
+import com.google.zxing.Result;
 import com.google.zxing.client.android.R;
 import com.google.zxing.client.result.ParsedResult;
 
@@ -35,8 +36,8 @@ public final class TextResultHandler extends ResultHandler {
       R.string.button_custom_product_search,
   };
 
-  public TextResultHandler(Activity activity, ParsedResult result) {
-    super(activity, result);
+  public TextResultHandler(Activity activity, ParsedResult result, Result rawResult) {
+    super(activity, result, rawResult);
   }
 
   @Override

File: src/com/google/zxing/client/android/encode/EncodeActivity.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.google.zxing.client.android.encode;
 
-import android.content.Context;
 import android.view.Display;
 import android.view.WindowManager;
 import com.google.zxing.WriterException;
@@ -34,7 +33,6 @@
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
 

File: src/com/google/zxing/client/android/share/LoadPackagesAsyncTask.java
Patch:
@@ -16,14 +16,11 @@
 
 package com.google.zxing.client.android.share;
 
-import android.app.ProgressDialog;
-import android.content.DialogInterface;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.os.AsyncTask;
 import android.widget.ArrayAdapter;
 import android.widget.ListAdapter;
-import com.google.zxing.client.android.R;
 
 import java.io.Serializable;
 import java.util.ArrayList;

File: src/com/google/zxing/client/android/camera/CameraConfigurationManager.java
Patch:
@@ -58,7 +58,7 @@ void initFromCameraParameters(Camera camera) {
     screenResolution = new Point(display.getWidth(), display.getHeight());
     Log.d(TAG, "Screen resolution: " + screenResolution);
     cameraResolution = getCameraResolution(parameters, screenResolution);
-    Log.d(TAG, "Camera resolution: " + screenResolution);
+    Log.d(TAG, "Camera resolution: " + cameraResolution);
   }
 
   /**

File: src/com/google/zxing/client/android/Intents.java
Patch:
@@ -127,7 +127,7 @@ public static final class Encode {
      * it defaults to QR Code. Use Intent.putExtra(FORMAT, format), where
      * format is one of Contents.Format. 
      */
-    public static final String FORMAT = "com.google.zxing.client.android.ENCODE_FORMAT";
+    public static final String FORMAT = "ENCODE_FORMAT";
 
     private Encode() {
     }

File: src/com/google/zxing/client/android/encode/QRCodeEncoder.java
Patch:
@@ -112,7 +112,6 @@ private boolean encodeContentsFromZXingIntent(Intent intent) {
     } catch (IllegalArgumentException iae) {
       // Ignore it then
       format = null;
-      formatString = null;
     }
     if (format == null || BarcodeFormat.QR_CODE.equals(format)) {
       String type = intent.getStringExtra(Intents.Encode.TYPE);

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -59,11 +59,11 @@ final class DecodeThread extends Thread {
       boolean decode1D = prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D, true);
       boolean decodeQR = prefs.getBoolean(PreferencesActivity.KEY_DECODE_QR, true);
       if (decode1D && decodeQR) {
-        hints.put(DecodeHintType.POSSIBLE_FORMATS, CaptureActivity.ALL_FORMATS);
+        hints.put(DecodeHintType.POSSIBLE_FORMATS, DecodeFormatManager.ALL_FORMATS);
       } else if (decode1D) {
-        hints.put(DecodeHintType.POSSIBLE_FORMATS, CaptureActivity.ONE_D_FORMATS);
+        hints.put(DecodeHintType.POSSIBLE_FORMATS, DecodeFormatManager.ONE_D_FORMATS);
       } else if (decodeQR) {
-        hints.put(DecodeHintType.POSSIBLE_FORMATS, CaptureActivity.QR_CODE_FORMATS);
+        hints.put(DecodeHintType.POSSIBLE_FORMATS, DecodeFormatManager.QR_CODE_FORMATS);
       }
     } else {
       hints.put(DecodeHintType.POSSIBLE_FORMATS, decodeFormats);

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -37,6 +37,7 @@
 import android.content.res.AssetFileDescriptor;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.Rect;
@@ -524,11 +525,11 @@ private void handleDecodeInternally(Result rawResult, Bitmap barcode) {
 
     ImageView barcodeImageView = (ImageView) findViewById(R.id.barcode_image_view);
     if (barcode == null) {
-      barcodeImageView.setImageResource(R.drawable.launcher_icon_large);
+      barcodeImageView.setImageBitmap(BitmapFactory.decodeResource(getResources(),
+          R.drawable.launcher_icon));
     } else {
       barcodeImageView.setImageBitmap(barcode);
     }
-    barcodeImageView.setVisibility(View.VISIBLE);
 
     TextView formatTextView = (TextView) findViewById(R.id.format_text_view);
     formatTextView.setText(rawResult.getBarcodeFormat().toString());

File: src/com/google/zxing/client/android/Intents.java
Patch:
@@ -150,7 +150,7 @@ private SearchBookContents() {
 
   public static final class WifiConnect {
 	    /**
-	     * Use Google Book Search to search the contents of the book provided.
+	     * Internal intent used to trigger connection to a wi-fi network.
 	     */
 	    public static final String ACTION = "com.google.zxing.client.android.WIFI_CONNECT";
 

File: src/com/google/zxing/client/android/wifi/WifiReceiver.java
Patch:
@@ -60,7 +60,7 @@ public void onReceive(Context context, Intent intent) {
           final NetworkInfo.State state = i.getState();
           final String ssid = mWifiManager.getConnectionInfo().getSSID();
 
-          if (state == NetworkInfo.State.CONNECTED){
+          if (state == NetworkInfo.State.CONNECTED && ssid != null){
             mWifiManager.saveConfiguration();
             final String label = parent.getString(R.string.wifi_connected);
             statusView.setText(label + "\n" + ssid);

File: src/com/google/zxing/client/android/result/WifiResultHandler.java
Patch:
@@ -17,7 +17,6 @@
 package com.google.zxing.client.android.result;
 
 import android.app.Activity;
-
 import com.google.zxing.client.android.R;
 import com.google.zxing.client.result.ParsedResult;
 import com.google.zxing.client.result.WifiParsedResult;
@@ -52,7 +51,7 @@ public int getButtonText(int index) {
   @Override
   public void handleButtonPress(int index) {
     // Get the underlying wifi config
-    WifiParsedResult wifiResult = (WifiParsedResult) getResult();
+    final WifiParsedResult wifiResult = (WifiParsedResult) getResult();
     if (index == 0) {
       wifiConnect(wifiResult);
     }
@@ -61,7 +60,7 @@ public void handleButtonPress(int index) {
   // Display the name of the network and the network type to the user.
   @Override
   public CharSequence getDisplayContents() {
-    WifiParsedResult wifiResult = (WifiParsedResult) getResult();
+    final WifiParsedResult wifiResult = (WifiParsedResult) getResult();
     StringBuffer contents = new StringBuffer();
     final String wifiLabel = parent.getString(R.string.wifi_ssid_label);
     ParsedResult.maybeAppend(wifiLabel + "\n" + wifiResult.getSsid(), contents);

File: src/com/google/zxing/client/android/wifi/NetworkUtil.java
Patch:
@@ -77,4 +77,4 @@ static boolean isHexWepKey(CharSequence wepKey) {
     return (length == 10 || length == 26 || length == 58) && isHex(wepKey);
   }
 
-}
+}
\ No newline at end of file

File: src/com/google/zxing/client/android/wifi/ConnectedReceiver.java
Patch:
@@ -35,15 +35,15 @@ final class ConnectedReceiver extends BroadcastReceiver {
   private final TextView statusView;
 
   ConnectedReceiver(Activity wifiActivity, TextView statusView) {
-    parent = wifiActivity;
+    this.parent = wifiActivity;
     this.statusView = statusView;
   }
 
   @Override
   public void onReceive(Context context, Intent intent) {
     if (intent.getAction().equals(android.net.ConnectivityManager.CONNECTIVITY_ACTION)) {
       ConnectivityManager con = (ConnectivityManager) parent.getSystemService(Context.CONNECTIVITY_SERVICE);
-      NetworkInfo[] s = con.getAllNetworkInfo();
+      final NetworkInfo[] s = con.getAllNetworkInfo();
       for (NetworkInfo i : s){
         if (i.getTypeName().contentEquals("WIFI")){
           NetworkInfo.State state = i.getState();

File: src/com/google/zxing/client/android/wifi/NetworkUtil.java
Patch:
@@ -46,7 +46,7 @@ static String convertToQuotedString(String string) {
     int lastPos = string.length() - 1;
     if (lastPos < 0 || (string.charAt(0) == '"' && string.charAt(lastPos) == '"')) {
       return string;
-    }        
+    }
     return '\"' + string + '\"';
   }
 
@@ -59,7 +59,7 @@ private static boolean isHex(CharSequence key) {
       if (!(c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a' && c <= 'f')) {
         return false;
       }
-    }        
+    }
     return true;
   }
 

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -119,7 +119,7 @@ public final class CaptureActivity extends Activity implements SurfaceHolder.Cal
     PRODUCT_FORMATS.add(BarcodeFormat.EAN_13);
     PRODUCT_FORMATS.add(BarcodeFormat.EAN_8);
     PRODUCT_FORMATS.add(BarcodeFormat.RSS14);
-    ONE_D_FORMATS = new Vector<BarcodeFormat>(PRODUCT_FORMATS.size() + 3);
+    ONE_D_FORMATS = new Vector<BarcodeFormat>(PRODUCT_FORMATS.size() + 4);
     ONE_D_FORMATS.addAll(PRODUCT_FORMATS);
     ONE_D_FORMATS.add(BarcodeFormat.CODE_39);
     ONE_D_FORMATS.add(BarcodeFormat.CODE_93);

File: src/com/google/zxing/client/android/result/ResultHandlerFactory.java
Patch:
@@ -40,7 +40,7 @@ public static ResultHandler makeResultHandler(Activity activity, Result rawResul
     } else if (type.equals(ParsedResultType.EMAIL_ADDRESS)) {
       return new EmailAddressResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.PRODUCT)) {
-      return new ProductResultHandler(activity, result);
+      return new ProductResultHandler(activity, result, rawResult);
     } else if (type.equals(ParsedResultType.URI)) {
       return new URIResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.WIFI)) {
@@ -56,7 +56,7 @@ public static ResultHandler makeResultHandler(Activity activity, Result rawResul
     } else if (type.equals(ParsedResultType.CALENDAR)) {
       return new CalendarResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.ISBN)) {
-      return new ISBNResultHandler(activity, result);
+      return new ISBNResultHandler(activity, result, rawResult);
     } else {
       // The TextResultHandler is the fallthrough for unsupported formats.
       return new TextResultHandler(activity, result);

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -39,6 +39,7 @@ public final class PreferencesActivity extends PreferenceActivity
   public static final String KEY_VIBRATE = "preferences_vibrate";
   public static final String KEY_COPY_TO_CLIPBOARD = "preferences_copy_to_clipboard";
   public static final String KEY_FRONT_LIGHT = "preferences_front_light";
+  public static final String KEY_BULK_MODE = "preferences_bulk_mode";
 
   public static final String KEY_HELP_VERSION_SHOWN = "preferences_help_version_shown";
   public static final String KEY_NOT_OUR_RESULTS_SHOWN = "preferences_not_out_results_shown";

File: src/com/google/zxing/client/android/DecodeHandler.java
Patch:
@@ -49,6 +49,7 @@ final class DecodeHandler extends Handler {
   public void handleMessage(Message message) {
     switch (message.what) {
       case R.id.decode:
+        Log.v(TAG, "Got decode message");
         decode((byte[]) message.obj, message.arg1, message.arg2);
         break;
       case R.id.quit:
@@ -85,9 +86,11 @@ private void decode(byte[] data, int width, int height) {
       Bundle bundle = new Bundle();
       bundle.putParcelable(DecodeThread.BARCODE_BITMAP, source.renderCroppedGreyscaleBitmap());
       message.setData(bundle);
+      Log.v(TAG, "Sending decode succeeded message...");
       message.sendToTarget();
     } else {
       Message message = Message.obtain(activity.getHandler(), R.id.decode_failed);
+      Log.v(TAG, "Sending decode failed message...");
       message.sendToTarget();
     }
   }

File: src/com/google/zxing/client/android/camera/CameraManager.java
Patch:
@@ -176,8 +176,10 @@ public void requestPreviewFrame(Handler handler, int message) {
     if (camera != null && previewing) {
       previewCallback.setHandler(handler, message);
       if (useOneShotPreviewCallback) {
+        Log.v(TAG, "Requesting one-shot preview callback");
         camera.setOneShotPreviewCallback(previewCallback);
       } else {
+        Log.v(TAG, "Requesting preview callback");
         camera.setPreviewCallback(previewCallback);
       }
     }
@@ -192,6 +194,7 @@ public void requestPreviewFrame(Handler handler, int message) {
   public void requestAutoFocus(Handler handler, int message) {
     if (camera != null && previewing) {
       autoFocusCallback.setHandler(handler, message);
+      Log.v(TAG, "Requesting auto-focus callback");
       camera.autoFocus(autoFocusCallback);
     }
   }

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -588,8 +588,8 @@ private void handleDecodeExternally(Result rawResult, Bitmap barcode) {
           resultHandler.getDisplayContents().toString() + "&source=zxing";
       handler.sendMessageDelayed(message, INTENT_RESULT_DURATION);
     } else if (source == Source.ZXING_LINK) {
-    	// Replace each occurrence of RETURN_CODE_PLACEHOLDER in the returnUrlTemplate
-    	// with the scanned code. This allows both queries and REST-style URLs to work.
+      // Replace each occurrence of RETURN_CODE_PLACEHOLDER in the returnUrlTemplate
+      // with the scanned code. This allows both queries and REST-style URLs to work.
       Message message = Message.obtain(handler, R.id.launch_product_query);
       message.obj = returnUrlTemplate.replace(RETURN_CODE_PLACEHOLDER, resultHandler.getDisplayContents().toString());
       handler.sendMessageDelayed(message, INTENT_RESULT_DURATION);

File: src/com/google/zxing/client/android/book/SearchBookContentsActivity.java
Patch:
@@ -199,7 +199,7 @@ private void handleSearchResults(JSONObject json) {
         for (int x = 0; x < count; x++) {
           items.add(parseResult(results.getJSONObject(x)));
         }
-	      resultListView.setOnItemClickListener(new BrowseBookListener(this, items));
+        resultListView.setOnItemClickListener(new BrowseBookListener(this, items));
         resultListView.setAdapter(new SearchBookContentsAdapter(this, items));
       } else {
         String searchable = json.optString("searchable");
@@ -243,7 +243,7 @@ private SearchBookContentsResult parseResult(JSONObject json) {
       return new SearchBookContentsResult(pageId, pageNumber, snippet, valid);
     } catch (JSONException e) {
       // Never seen in the wild, just being complete.
-	    return new SearchBookContentsResult(getString(R.string.msg_sbc_no_page_returned), "", "", false);
+      return new SearchBookContentsResult(getString(R.string.msg_sbc_no_page_returned), "", "", false);
     }
   }
 
@@ -267,7 +267,7 @@ public void run() {
         // website, we don't use LocaleManager to change the TLD.
         URI uri;
         if (isbn.startsWith("http://google.com/books?id=")) {
-	        int equals = isbn.indexOf('=');
+          int equals = isbn.indexOf('=');
           String volumeId = isbn.substring(equals + 1);
           uri = new URI("http", null, "www.google.com", -1, "/books", "id=" + volumeId +
                         "&jscmd=SearchWithinVolume2&q=" + query, null);

File: src/com/google/zxing/client/android/result/URIResultHandler.java
Patch:
@@ -65,7 +65,7 @@ public void handleButtonPress(int index) {
         shareBySMS(uri);
         break;
       case 3:
-	      searchBookContents(uri);
+        searchBookContents(uri);
         break;
     }
   }

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -19,6 +19,7 @@
 import com.google.zxing.BarcodeFormat;
 import com.google.zxing.Result;
 import com.google.zxing.ResultPoint;
+import com.google.zxing.client.android.camera.CameraManager;
 import com.google.zxing.client.android.history.HistoryManager;
 import com.google.zxing.client.android.result.ResultButtonListener;
 import com.google.zxing.client.android.result.ResultHandler;

File: src/com/google/zxing/client/android/CaptureActivityHandler.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.google.zxing.BarcodeFormat;
 import com.google.zxing.Result;
+import com.google.zxing.client.android.camera.CameraManager;
 
 import android.app.Activity;
 import android.content.Intent;
@@ -35,6 +36,7 @@
  * @author dswitkin@google.com (Daniel Switkin)
  */
 public final class CaptureActivityHandler extends Handler {
+
   private final CaptureActivity activity;
   private final DecodeThread decodeThread;
   private State state;
@@ -122,4 +124,5 @@ private void restartPreviewAndDecode() {
       activity.drawViewfinder();
     }
   }
+
 }

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -23,6 +23,7 @@
 import com.google.zxing.ReaderException;
 import com.google.zxing.Result;
 import com.google.zxing.ResultPointCallback;
+import com.google.zxing.client.android.camera.CameraManager;
 import com.google.zxing.common.HybridBinarizer;
 
 import android.content.SharedPreferences;
@@ -141,4 +142,5 @@ private void decode(byte[] data, int width, int height) {
       message.sendToTarget();
     }
   }
+
 }

File: src/com/google/zxing/client/android/PlanarYUVLuminanceSource.java
Patch:
@@ -37,7 +37,7 @@ public final class PlanarYUVLuminanceSource extends LuminanceSource {
   private final int left;
   private final int top;
 
-  PlanarYUVLuminanceSource(byte[] yuvData, int dataWidth, int dataHeight, int left, int top,
+  public PlanarYUVLuminanceSource(byte[] yuvData, int dataWidth, int dataHeight, int left, int top,
       int width, int height) {
     super(width, height);
 

File: src/com/google/zxing/client/android/camera/FlashlightManager.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.zxing.client.android;
+package com.google.zxing.client.android.camera;
 
 import android.os.IBinder;
 import android.util.Log;

File: src/com/google/zxing/client/android/encode/QRCodeEncoder.java
Patch:
@@ -54,6 +54,7 @@ final class QRCodeEncoder {
   private static final String TAG = "QRCodeEncoder";
 
   private static final int WHITE = 0xFFFFFFFF;
+  private static final int BLACK = 0xFF000000;
 
   private final Activity activity;
   private String contents;
@@ -338,9 +339,7 @@ public void run() {
         for (int y = 0; y < height; y++) {
           int offset = y * width;
           for (int x = 0; x < width; x++) {
-            if (!result.get(x, y)) {
-              pixels[offset + x] = WHITE;
-            }
+            pixels[offset + x] = result.get(x, y) ? BLACK : WHITE;
           }
         }
 

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -160,7 +160,7 @@ public void openDriver(SurfaceHolder holder) throws IOException {
 
       setCameraParameters();
       SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-      if (prefs.getBoolean(PreferencesActivity.KEY_FRONT_LIGHT, true)) {
+      if (prefs.getBoolean(PreferencesActivity.KEY_FRONT_LIGHT, false)) {
         FlashlightManager.enableFlashlight();
       }
     }

File: src/com/google/zxing/client/android/CaptureActivity.java
Patch:
@@ -107,7 +107,7 @@ public final class CaptureActivity extends Activity implements SurfaceHolder.Cal
     PRODUCT_FORMATS.add(BarcodeFormat.UPC_E);
     PRODUCT_FORMATS.add(BarcodeFormat.EAN_13);
     PRODUCT_FORMATS.add(BarcodeFormat.EAN_8);
-    //PRODUCT_FORMATS.add(BarcodeFormat.RSS14);
+    PRODUCT_FORMATS.add(BarcodeFormat.RSS14);
     ONE_D_FORMATS = new Vector<BarcodeFormat>(PRODUCT_FORMATS.size() + 3);
     ONE_D_FORMATS.addAll(PRODUCT_FORMATS);
     ONE_D_FORMATS.add(BarcodeFormat.CODE_39);
@@ -255,6 +255,7 @@ private static Vector<BarcodeFormat> parseDecodeFormats(Intent intent) {
         for (String format : COMMA_PATTERN.split(scanFormats)) {
           formats.add(BarcodeFormat.valueOf(format));
         }
+        return formats;
       } catch (IllegalArgumentException iae) {
         // ignore it then
       }

File: src/com/google/zxing/client/android/CaptureActivityHandler.java
Patch:
@@ -92,7 +92,9 @@ public void handleMessage(Message message) {
         break;
       case R.id.launch_product_query:
         String url = (String) message.obj;
-        activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
+        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);        
+        activity.startActivity(intent);
         break;
     }
   }

File: src/com/google/zxing/client/android/HelpActivity.java
Patch:
@@ -60,7 +60,9 @@ public void onClick(View view) {
 
   private final DialogInterface.OnClickListener groupsListener = new DialogInterface.OnClickListener() {
     public void onClick(DialogInterface dialogInterface, int i) {
-      HelpActivity.this.startActivity(new Intent(Intent.ACTION_VIEW, BUGGY_URI));
+      Intent intent = new Intent(Intent.ACTION_VIEW, BUGGY_URI);
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);              
+      HelpActivity.this.startActivity(intent);
     }
   };
 

File: src/com/google/zxing/client/android/book/BrowseBookListener.java
Patch:
@@ -47,8 +47,9 @@ public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
       String readBookURI = "http://books.google." +
           LocaleManager.getBookSearchCountryTLD() +
           "/books?id=" + volumeId + "&pg=" + pageId + "&vq=" + query;
-      activity.startActivity(new Intent(Intent.ACTION_VIEW,
-          Uri.parse(readBookURI)));
+      Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(readBookURI));
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);                    
+      activity.startActivity(intent);
     }
   }
 }

File: src/com/google/zxing/client/android/history/HistoryManager.java
Patch:
@@ -93,6 +93,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         } else if (i == dialogItems.length - 2) {
           String history = buildHistory();
           Intent intent = new Intent(Intent.ACTION_SEND, Uri.parse("mailto:"));
+          intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);          
           intent.putExtra(Intent.EXTRA_SUBJECT, res.getString(R.string.history_email_title));
           intent.putExtra(Intent.EXTRA_TEXT, history);
           intent.setType("text/plain");

File: src/com/google/zxing/client/android/result/ResultHandler.java
Patch:
@@ -339,6 +339,7 @@ final void openGoogleShopper(String query) {
 
   void launchIntent(Intent intent) {
     if (intent != null) {
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
       try {
         activity.startActivity(intent);
       } catch (ActivityNotFoundException e) {

File: src/com/google/zxing/client/android/share/AppPickerActivity.java
Patch:
@@ -49,6 +49,7 @@ protected void onListItemClick(ListView l, View view, int position, long id) {
     if (position >= 0 && position < labelsPackages.size()) {
       String url = "market://search?q=pname:" + labelsPackages.get(position)[1];
       Intent intent = new Intent();
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);      
       intent.putExtra(Browser.BookmarkColumns.URL, url);
       setResult(RESULT_OK, intent);
     } else {

File: src/com/google/zxing/client/android/share/BookmarkPickerActivity.java
Patch:
@@ -70,6 +70,7 @@ protected void onCreate(Bundle icicle) {
   protected void onListItemClick(ListView l, View view, int position, long id) {
     if (cursor.moveToPosition(position)) {
       Intent intent = new Intent();
+      intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
       intent.putExtra(Browser.BookmarkColumns.TITLE, cursor.getString(TITLE_COLUMN));
       intent.putExtra(Browser.BookmarkColumns.URL, cursor.getString(URL_COLUMN));
       setResult(RESULT_OK, intent);

File: src/com/google/zxing/client/android/CaptureActivityHandler.java
Patch:
@@ -47,9 +47,10 @@ private enum State {
 
   CaptureActivityHandler(CaptureActivity activity,
                          Vector<BarcodeFormat> decodeFormats,
+                         String characterSet,
                          boolean beginScanning) {
     this.activity = activity;
-    decodeThread = new DecodeThread(activity, decodeFormats,
+    decodeThread = new DecodeThread(activity, decodeFormats, characterSet,
         new ViewfinderResultPointCallback(activity.getViewfinderView()));
     decodeThread.start();
     state = State.SUCCESS;

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -287,8 +287,6 @@ public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data, int width, int
       // This is the standard Android format which all devices are REQUIRED to support.
       // In theory, it's the only one we should ever care about.
       case PixelFormat.YCbCr_420_SP:
-        return new PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
-            rect.width(), rect.height());
       // This format has never been seen in the wild, but is compatible as we only care
       // about the Y channel, so allow it.
       case PixelFormat.YCbCr_422_SP:
@@ -297,7 +295,7 @@ public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data, int width, int
       default:
         // The Samsung Moment incorrectly uses this variant instead of the 'sp' version.
         // Fortunately, it too has all the Y data up front, so we can read it.
-        if (previewFormatString.equals("yuv420p")) {
+        if ("yuv420p".equals(previewFormatString)) {
           return new PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
             rect.width(), rect.height());
         }

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -23,7 +23,7 @@
 import com.google.zxing.ReaderException;
 import com.google.zxing.Result;
 import com.google.zxing.ResultPointCallback;
-import com.google.zxing.common.GlobalHistogramBinarizer;
+import com.google.zxing.common.HybridBinarizer;
 
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -165,7 +165,7 @@ private void decode(byte[] data, int width, int height) {
     long start = System.currentTimeMillis();
     Result rawResult = null;
     PlanarYUVLuminanceSource source = CameraManager.get().buildLuminanceSource(data, width, height);
-    BinaryBitmap bitmap = new BinaryBitmap(new GlobalHistogramBinarizer(source));
+    BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
     try {
       rawResult = multiFormatReader.decodeWithState(bitmap);
     } catch (ReaderException re) {

File: src/com/google/zxing/client/android/encode/QRCodeEncoder.java
Patch:
@@ -159,6 +159,9 @@ private boolean encodeContentsFromShareIntent(Intent intent) {
       return false;
     } catch (IOException e) {
       return false;
+    } catch (NullPointerException e) {
+      // In case the uri was not found in the Intent.
+      return false;
     }
     return contents != null && contents.length() > 0;
   }

File: src/com/google/zxing/client/android/result/AddressBookResultHandler.java
Patch:
@@ -62,8 +62,8 @@ private int mapIndexToAction(int index) {
   public AddressBookResultHandler(Activity activity, ParsedResult result) {
     super(activity, result);
     AddressBookParsedResult addressResult = (AddressBookParsedResult) result;
-    String address = addressResult.getAddress();
-    boolean hasAddress = address != null && address.length() > 0;
+    String[] addresses = addressResult.getAddresses();
+    boolean hasAddress = addresses != null && addresses.length > 0 && addresses[0].length() > 0;
     String[] phoneNumbers = addressResult.getPhoneNumbers();
     boolean hasPhoneNumber = phoneNumbers != null && phoneNumbers.length > 0;
     String[] emails = addressResult.getEmails();

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -40,6 +40,7 @@ public final class PreferencesActivity extends PreferenceActivity
   static final String KEY_COPY_TO_CLIPBOARD = "preferences_copy_to_clipboard";
 
   static final String KEY_HELP_VERSION_SHOWN = "preferences_help_version_shown";
+  public static final String KEY_NOT_OUR_RESULTS_SHOWN = "preferences_not_out_results_shown";
 
   private CheckBoxPreference decode1D;
   private CheckBoxPreference decodeQR;

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -335,6 +335,9 @@ private void setCameraParameters() {
     // This is the standard setting to turn the flash off that all devices should honor.
     parameters.set("flash-mode", "off");
 
+    parameters.set("zoom", "2.0");
+    parameters.set("taking-picture-zoom", "20");
+
     camera.setParameters(parameters);
   }
 

File: src/com/google/zxing/client/android/PlanarYUV420LuminanceSource.java
Patch:
@@ -38,8 +38,9 @@ public Bitmap renderFullColorBitmap(boolean halfSize) {
     int width = getWidth();
     int height = getHeight();
     int dataWidth = getDataWidth();
+    int dataHeight = getDataHeight();
     byte[] yuv = getYUVData();
-    int expectedYBytes = width * height;
+    int expectedYBytes = dataWidth * dataHeight;
     int expectedUBytes = expectedYBytes >> 2;
     int expectedVBytes = expectedYBytes >> 2;
     int expectedBytes = expectedYBytes + expectedUBytes + expectedVBytes;

File: src/com/google/zxing/client/android/PlanarYUVLuminanceSource.java
Patch:
@@ -142,6 +142,6 @@ public Bitmap renderCroppedGreyscaleBitmap() {
   // Can't be implemented here, as the color representations vary.
   @Override
   public Bitmap renderFullColorBitmap(boolean halfSize) {
-    return null;
+    throw new UnsupportedOperationException();
   }
 }

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -208,6 +208,9 @@ public void requestAutoFocus(Handler handler, int message) {
    */
   public Rect getFramingRect() {
     if (framingRect == null) {
+      if (camera == null) {
+        return null;
+      }
       int width = cameraResolution.x * 3 / 4;
       if (width < MIN_FRAME_WIDTH) {
         width = MIN_FRAME_WIDTH;

File: src/com/google/zxing/client/android/ViewfinderView.java
Patch:
@@ -62,6 +62,9 @@ public ViewfinderView(Context context, AttributeSet attrs) {
   @Override
   public void onDraw(Canvas canvas) {
     Rect frame = CameraManager.get().getFramingRect();
+    if (frame == null) {
+      return;
+    }
     int width = canvas.getWidth();
     int height = canvas.getHeight();
 

File: src/com/google/zxing/client/android/history/DBHelper.java
Patch:
@@ -25,7 +25,7 @@
  */
 final class DBHelper extends SQLiteOpenHelper {
 
-  private static final int DB_VERSION = 1;
+  private static final int DB_VERSION = 2;
   private static final String DB_NAME = "barcode_scanner_history.db";
   static final String TABLE_NAME = "history";
   static final String ID_COL = "id";

File: src/com/google/zxing/client/android/share/BookmarkPickerActivity.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.google.zxing.client.android.share;
 
+import com.google.zxing.client.android.R;
+
 import android.app.ListActivity;
 import android.content.Intent;
 import android.database.Cursor;
@@ -25,15 +27,14 @@
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.SimpleCursorAdapter;
-import com.google.zxing.client.android.R;
 
 /**
  * This class is only needed because I can't successfully send an ACTION_PICK intent to
  * com.android.browser.BrowserBookmarksPage. It can go away if that starts working in the future.
  *
  * @author dswitkin@google.com (Daniel Switkin)
  */
-final class BookmarkPickerActivity extends ListActivity {
+public final class BookmarkPickerActivity extends ListActivity {
   private static final String[] BOOKMARK_PROJECTION = {
       Browser.BookmarkColumns.TITLE,
       Browser.BookmarkColumns.URL

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -41,8 +41,8 @@ public final class PreferencesActivity extends PreferenceActivity
 
   static final String KEY_HELP_VERSION_SHOWN = "preferences_help_version_shown";
 
-  CheckBoxPreference decode1D;
-  CheckBoxPreference decodeQR;
+  private CheckBoxPreference decode1D;
+  private CheckBoxPreference decodeQR;
 
   @Override
   protected void onCreate(Bundle icicle) {

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -205,8 +205,9 @@ private void setCameraParameters() {
     Camera.Parameters parameters = mCamera.getParameters();
     parameters.setPreviewSize(mScreenResolution.x, mScreenResolution.y);
 
-    // Disables the built-in flash if present. Hopefully devices will honor this setting.
-    parameters.set("flash-mode", "off");
+    // FIXME: This is a hack to turn the flash off on the Samsung Galaxy. In the future there
+    // will hopefully be a standard setting like "off" that all devices will honor.
+    parameters.set("flash-mode", "2");
     mCamera.setParameters(parameters);
     Log.v(TAG, "Setting params for preview: width " + mScreenResolution.x + " height " +
         mScreenResolution.y);

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -204,6 +204,9 @@ public void onAutoFocus(boolean success, Camera camera) {
   private void setCameraParameters() {
     Camera.Parameters parameters = mCamera.getParameters();
     parameters.setPreviewSize(mScreenResolution.x, mScreenResolution.y);
+
+    // Disables the built-in flash if present. Hopefully devices will honor this setting.
+    parameters.set("flash-mode", "off");
     mCamera.setParameters(parameters);
     Log.v(TAG, "Setting params for preview: width " + mScreenResolution.x + " height " +
         mScreenResolution.y);

File: src/com/google/zxing/client/android/EncodeActivity.java
Patch:
@@ -74,7 +74,7 @@ public void onGlobalLayout() {
         View layout = findViewById(R.id.encode_view);
         int width = layout.getWidth();
         int height = layout.getHeight();
-        int smallerDimension = (width < height) ? width : height;
+        int smallerDimension = width < height ? width : height;
         smallerDimension = smallerDimension * 7 / 8;
 
         Intent intent = getIntent();

File: src/com/google/zxing/client/android/PreferencesActivity.java
Patch:
@@ -20,13 +20,15 @@
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.os.Bundle;
 import android.preference.CheckBoxPreference;
+import android.preference.PreferenceActivity;
 import android.preference.PreferenceScreen;
 
-public final class PreferencesActivity extends android.preference.PreferenceActivity
+public final class PreferencesActivity extends PreferenceActivity
     implements OnSharedPreferenceChangeListener {
 
   static final String KEY_DECODE_1D = "preferences_decode_1D";
   static final String KEY_DECODE_QR = "preferences_decode_QR";
+  public static final String KEY_CUSTOM_PRODUCT_SEARCH = "preferences_custom_product_search";
 
   static final String KEY_PLAY_BEEP = "preferences_play_beep";
   static final String KEY_VIBRATE = "preferences_vibrate";

File: src/com/google/zxing/client/android/SearchBookContentsListItem.java
Patch:
@@ -17,6 +17,7 @@
 package com.google.zxing.client.android;
 
 import android.content.Context;
+import android.graphics.Typeface;
 import android.text.SpannableString;
 import android.text.Spannable;
 import android.text.style.StyleSpan;
@@ -52,7 +53,7 @@ public void set(SearchBookContentsResult result) {
         String lowerQuery = SearchBookContentsResult.getQuery().toLowerCase();
         String lowerSnippet = snippet.toLowerCase();
         Spannable styledSnippet = new SpannableString(snippet);
-        StyleSpan boldSpan = new StyleSpan(android.graphics.Typeface.BOLD);
+        StyleSpan boldSpan = new StyleSpan(Typeface.BOLD);
         int queryLength = lowerQuery.length();
         int offset = 0;
         while (true) {

File: src/com/google/zxing/client/android/ViewfinderView.java
Patch:
@@ -32,7 +32,7 @@
 public final class ViewfinderView extends View {
 
   private static final int[] SCANNER_ALPHA = {0, 64, 128, 192, 255, 192, 128, 64};
-  private static final int ANIMATION_DELAY = 100;
+  private static final long ANIMATION_DELAY = 100L;
 
   private final Paint mPaint;
   private final Rect mBox;

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -101,8 +101,9 @@ private void setDecodeProductMode() {
     mMultiFormatReader.setHints(hints);
   }
 
-  // TODO: This is fragile in case we add new formats. It would be better to have a new enum
-  // value which represented all 1D formats.
+  /**
+   * Select the 1D formats we want this client to decode by hand.
+   */
   private void setDecode1DMode() {
     Hashtable<DecodeHintType, Object> hints = new Hashtable<DecodeHintType, Object>(3);
     Vector<BarcodeFormat> vector = new Vector<BarcodeFormat>();

File: src/com/google/zxing/client/android/DecodeThread.java
Patch:
@@ -112,6 +112,7 @@ private void setDecode1DMode() {
     vector.addElement(BarcodeFormat.EAN_8);
     vector.addElement(BarcodeFormat.CODE_39);
     vector.addElement(BarcodeFormat.CODE_128);
+    vector.addElement(BarcodeFormat.ITF);
     hints.put(DecodeHintType.POSSIBLE_FORMATS, vector);
     mMultiFormatReader.setHints(hints);
   }
@@ -125,7 +126,7 @@ private void setDecodeQRMode() {
   }
 
   /**
-   * Instead of calling setHints(null), which would allow new formats like ITF to sneak in, we
+   * Instead of calling setHints(null), which would allow new formats to sneak in, we
    * explicitly set which formats are available.
    */
   private void setDecodeAllMode() {
@@ -137,6 +138,7 @@ private void setDecodeAllMode() {
     vector.addElement(BarcodeFormat.EAN_8);
     vector.addElement(BarcodeFormat.CODE_39);
     vector.addElement(BarcodeFormat.CODE_128);
+    vector.addElement(BarcodeFormat.ITF);
     vector.addElement(BarcodeFormat.QR_CODE);
     hints.put(DecodeHintType.POSSIBLE_FORMATS, vector);
     mMultiFormatReader.setHints(hints);

File: src/com/google/zxing/client/android/EncodeActivity.java
Patch:
@@ -27,10 +27,9 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Message;
-import android.view.ViewTreeObserver.OnGlobalLayoutListener;
 import android.view.View;
+import android.view.ViewTreeObserver.OnGlobalLayoutListener;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.TextView;
 
 /**
@@ -72,7 +71,7 @@ protected void onResume() {
   public final OnGlobalLayoutListener mLayoutListener = new OnGlobalLayoutListener() {
     public void onGlobalLayout() {
       if (mFirstLayout) {
-        LinearLayout layout = (LinearLayout) findViewById(R.id.encode_view);
+        View layout = findViewById(R.id.encode_view);
         int width = layout.getWidth();
         int height = layout.getHeight();
         int smallerDimension = (width < height) ? width : height;

File: src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java
Patch:
@@ -40,11 +40,12 @@ final class YUVMonochromeBitmapSource extends BaseMonochromeBitmapSource {
    * @param crop       The rectangle within the yuvData to expose to MonochromeBitmapSource users
    */
   YUVMonochromeBitmapSource(byte[] yuvData, int dataWidth, int dataHeight, Rect crop) {
+    if (crop.width() > dataWidth || crop.height() > dataHeight) {
+      throw new IllegalArgumentException();
+    }
     mYUVData = yuvData;
     mDataWidth = dataWidth;
     mCrop = crop;
-    assert (crop.width() <= dataWidth);
-    assert (crop.height() <= dataHeight);
   }
 
   @Override

File: src/com/google/zxing/client/android/BookmarkPickerActivity.java
Patch:
@@ -30,7 +30,7 @@
  * This class is only needed because I can't successfully send an ACTION_PICK intent to
  * com.android.browser.BrowserBookmarksPage. It can go away if that starts working in the future.
  */
-public class BookmarkPickerActivity extends ListActivity {
+public final class BookmarkPickerActivity extends ListActivity {
 
   private static final String[] BOOKMARK_PROJECTION = {
       Browser.BookmarkColumns.TITLE,
@@ -51,7 +51,7 @@ public class BookmarkPickerActivity extends ListActivity {
   private Cursor mCursor;
 
   @Override
-  protected void onCreate(Bundle icicle) {
+  protected final void onCreate(Bundle icicle) {
     super.onCreate(icicle);
 
     mCursor = getContentResolver().query(Browser.BOOKMARKS_URI, BOOKMARK_PROJECTION,
@@ -64,7 +64,7 @@ protected void onCreate(Bundle icicle) {
   }
 
   @Override
-  protected void onListItemClick(ListView l, View view, int position, long id) {
+  protected final void onListItemClick(ListView l, View view, int position, long id) {
     if (mCursor.moveToPosition(position)) {
       Intent intent = new Intent();
       intent.putExtra(Browser.BookmarkColumns.TITLE, mCursor.getString(TITLE_COLUMN));

File: src/com/google/zxing/client/android/SearchBookContentsListItem.java
Patch:
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.text.SpannableString;
+import android.text.Spannable;
 import android.text.style.StyleSpan;
 import android.util.AttributeSet;
 import android.widget.LinearLayout;
@@ -50,7 +51,7 @@ public void set(SearchBookContentsResult result) {
       if (result.getValidSnippet()) {
         String lowerQuery = SearchBookContentsResult.getQuery().toLowerCase();
         String lowerSnippet = snippet.toLowerCase();
-        SpannableString styledSnippet = new SpannableString(snippet);
+        Spannable styledSnippet = new SpannableString(snippet);
         StyleSpan boldSpan = new StyleSpan(android.graphics.Typeface.BOLD);
         int queryLength = lowerQuery.length();
         int offset = 0;

File: src/com/google/zxing/client/android/result/EmailAddressResultHandler.java
Patch:
@@ -21,7 +21,7 @@
 import com.google.zxing.client.result.EmailAddressParsedResult;
 import com.google.zxing.client.result.ParsedResult;
 
-public class EmailAddressResultHandler extends ResultHandler {
+public final class EmailAddressResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_email,

File: src/com/google/zxing/client/android/result/GeoResultHandler.java
Patch:
@@ -21,7 +21,7 @@
 import com.google.zxing.client.result.GeoParsedResult;
 import com.google.zxing.client.result.ParsedResult;
 
-public class GeoResultHandler extends ResultHandler {
+public final class GeoResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_show_map,

File: src/com/google/zxing/client/android/result/ISBNResultHandler.java
Patch:
@@ -21,7 +21,7 @@
 import com.google.zxing.client.result.ISBNParsedResult;
 import com.google.zxing.client.result.ParsedResult;
 
-public class ISBNResultHandler extends ResultHandler {
+public final class ISBNResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_product_search,

File: src/com/google/zxing/client/android/result/ProductResultHandler.java
Patch:
@@ -21,7 +21,7 @@
 import com.google.zxing.client.result.ParsedResult;
 import com.google.zxing.client.result.ProductParsedResult;
 
-public class ProductResultHandler extends ResultHandler {
+public final class ProductResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_product_search,

File: src/com/google/zxing/client/android/result/ResultHandlerFactory.java
Patch:
@@ -22,7 +22,7 @@
 import com.google.zxing.client.result.ParsedResultType;
 import com.google.zxing.client.result.ResultParser;
 
-public class ResultHandlerFactory {
+public final class ResultHandlerFactory {
 
   public static ResultHandler makeResultHandler(Activity activity, Result rawResult) {
     ParsedResult result = parseResult(rawResult);

File: src/com/google/zxing/client/android/result/SMSResultHandler.java
Patch:
@@ -22,7 +22,7 @@
 import com.google.zxing.client.result.ParsedResult;
 import com.google.zxing.client.result.SMSParsedResult;
 
-public class SMSResultHandler extends ResultHandler {
+public final class SMSResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_sms,

File: src/com/google/zxing/client/android/result/TelResultHandler.java
Patch:
@@ -22,7 +22,7 @@
 import com.google.zxing.client.result.ParsedResult;
 import com.google.zxing.client.result.TelParsedResult;
 
-public class TelResultHandler extends ResultHandler {
+public final class TelResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_dial,

File: src/com/google/zxing/client/android/result/TextResultHandler.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * This class handles TextParsedResult as well as unknown formats.
  */
-public class TextResultHandler extends ResultHandler {
+public final class TextResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_web_search,

File: src/com/google/zxing/client/android/result/URIResultHandler.java
Patch:
@@ -21,7 +21,7 @@
 import com.google.zxing.client.result.ParsedResult;
 import com.google.zxing.client.result.URIParsedResult;
 
-public class URIResultHandler extends ResultHandler {
+public final class URIResultHandler extends ResultHandler {
 
   private static final int[] mButtons = {
       R.string.button_open_browser,

File: src/com/google/zxing/client/android/QRCodeEncoder.java
Patch:
@@ -30,7 +30,6 @@
 import org.apache.http.client.methods.HttpGet;
 
 import java.net.URI;
-import java.net.URLEncoder;
 
 public final class QRCodeEncoder {
 
@@ -163,7 +162,7 @@ public void run() {
       AndroidHttpClient client = null;
       try {
         String url = CHART_SERVER_URL + mPixelResolution + "x" + mPixelResolution + "&chl=" +
-          URLEncoder.encode(mContents, "UTF8");
+          mContents;
         URI uri = new URI("http", url, null);
         HttpGet get = new HttpGet(uri);
         client = AndroidHttpClient.newInstance(mUserAgent);

File: src/com/google/zxing/client/android/SearchBookContentsActivity.java
Patch:
@@ -294,6 +294,7 @@ private String getCookie(String url) {
         } catch (IOException e) {
           Log.e(TAG, e.toString());
         }
+        client.close();
       }
       return cookie;
     }

File: src/com/google/zxing/client/android/result/ResultHandlerFactory.java
Patch:
@@ -31,7 +31,7 @@ public static ResultHandler makeResultHandler(Activity activity, Result rawResul
       return new AddressBookResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.EMAIL_ADDRESS)) {
       return new EmailAddressResultHandler(activity, result);
-    } else if (type.equals(ParsedResultType.UPC)) {
+    } else if (type.equals(ParsedResultType.PRODUCT)) {
       return new UPCResultHandler(activity, result);
     } else if (type.equals(ParsedResultType.URI)) {
       return new URIResultHandler(activity, result);

File: src/com/android/barcodes/QRCodeEncoder.java
Patch:
@@ -20,7 +20,6 @@
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.net.http.AndroidHttpClient;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Message;

File: src/com/android/barcodes/ResultHandler.java
Patch:
@@ -85,6 +85,8 @@ public static int getActionButtonText(ParsedResultType type) {
             buttonText = R.string.button_open_browser;
         } else if (type.equals(ParsedResultType.EMAIL_ADDRESS)) {
             buttonText = R.string.button_email;
+        } else if (type.equals(ParsedResultType.SMS)) {
+          buttonText = R.string.button_sms;
         } else if (type.equals(ParsedResultType.UPC)) {
             buttonText = R.string.button_lookup_product;
         } else if (type.equals(ParsedResultType.TEL)) {

File: src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java
Patch:
@@ -63,7 +63,7 @@ public BitArray getBlackRow(int y, BitArray row, int startX, int getWidth) {
     // If the current decoder calculated the blackPoint based on one row, assume we're trying to
     // decode a 1D barcode, and apply some sharpening.
     // TODO: We may want to add a fifth parameter to request the amount of shapening to be done.
-    if (lastMethod == BlackPointEstimationMethod.ROW_SAMPLING) {
+    if (lastMethod.equals(BlackPointEstimationMethod.ROW_SAMPLING)) {
       int left = computeRGBLuminance(pixelRow[0]);
       int center = computeRGBLuminance(pixelRow[1]);
       for (int i = 1; i < getWidth - 1; i++) {

File: src/com/google/zxing/client/android/CameraManager.java
Patch:
@@ -272,7 +272,7 @@ private void calculateStillResolution() {
    */
   private void calculatePreviewResolution() {
     if (previewResolution == null) {
-      int previewHeight = (int) (stillResolution.x * stillMultiplier * 1.8f);
+      int previewHeight = (int) (stillResolution.x * stillMultiplier * 1.5f);
       int previewWidth = previewHeight * screenResolution.x / screenResolution.y;
       previewWidth = ((previewWidth + 7) >> 3) << 3;
       if (previewWidth > cameraResolution.x) previewWidth = cameraResolution.x;

File: src/com/google/zxing/client/android/ResultHandler.java
Patch:
@@ -87,6 +87,9 @@ private static Intent resultToIntent(ParsedReaderResult result) {
     } else if (type.equals(ParsedReaderResultType.SMS)) {
       SMSParsedResult smsResult = (SMSParsedResult) result;
       intent = new Intent(Intent.SENDTO_ACTION, Uri.parse(smsResult.getSMSURI()));
+    } else if (type.equals(ParsedReaderResultType.SMS)) {
+      SMSParsedResult smsResult = (SMSParsedResult) result;
+      intent = new Intent(Intent.SENDTO_ACTION, Uri.parse(smsResult.getSMSURI()));
     } else if (type.equals(ParsedReaderResultType.TEL)) {
       TelParsedResult telResult = (TelParsedResult) result;
       intent = new Intent(Intent.DIAL_ACTION, Uri.parse("tel:" + telResult.getNumber()));

File: src/com/google/zxing/client/android/ResultHandler.java
Patch:
@@ -42,7 +42,7 @@
  * @author srowen@google.com (Sean Owen)
  * @author dswitkin@google.com (Daniel Switkin)
  */
-final class ResultHandler implements Button.OnClickListenear {
+final class ResultHandler implements Button.OnClickListener {
 
   private static final String TAG = "ResultHandler";
 

File: src/com/google/zxing/client/android/ResultHandler.java
Patch:
@@ -81,7 +81,7 @@ private static Intent resultToIntent(ParsedReaderResult result) {
       putExtra(intent, "body", emailResult.getBody());
     } else if (type.equals(ParsedReaderResultType.EMAIL_ADDRESS)) {
       EmailAddressParsedResult emailResult = (EmailAddressParsedResult) result;
-      intent = new Intent(Intent.SENDTO_ACTION, Uri.parse(emailResult.getEmailAddress()));
+      intent = new Intent(Intent.SENDTO_ACTION, Uri.parse("mailto:" + emailResult.getEmailAddress()));
     } else if (type.equals(ParsedReaderResultType.TEL)) {
       TelParsedResult telResult = (TelParsedResult) result;
       intent = new Intent(Intent.DIAL_ACTION, Uri.parse("tel:" + telResult.getNumber()));

File: src/com/google/zxing/client/android/RGBMonochromeBitmapSource.java
Patch:
@@ -19,6 +19,7 @@
 import android.graphics.Bitmap;
 import com.google.zxing.BlackPointEstimationMethod;
 import com.google.zxing.MonochromeBitmapSource;
+import com.google.zxing.ReaderException;
 import com.google.zxing.common.BitArray;
 import com.google.zxing.common.BlackPointEstimator;
 
@@ -77,7 +78,7 @@ public int getWidth() {
     return image.width();
   }
 
-  public void estimateBlackPoint(BlackPointEstimationMethod method, int argument) {
+  public void estimateBlackPoint(BlackPointEstimationMethod method, int argument) throws ReaderException {
     if (!method.equals(lastMethod) || argument != lastArgument) {
       int width = image.width();
       int height = image.height();

File: src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java
Patch:
@@ -19,6 +19,7 @@
 import android.graphics.Bitmap;
 import com.google.zxing.BlackPointEstimationMethod;
 import com.google.zxing.MonochromeBitmapSource;
+import com.google.zxing.ReaderException;
 import com.google.zxing.common.BitArray;
 import com.google.zxing.common.BlackPointEstimator;
 
@@ -79,7 +80,7 @@ public int getWidth() {
     return image.width();
   }
 
-  public void estimateBlackPoint(BlackPointEstimationMethod method, int argument) {
+  public void estimateBlackPoint(BlackPointEstimationMethod method, int argument) throws ReaderException {
     if (!method.equals(lastMethod) || argument != lastArgument) {
       int width = image.width();
       int height = image.height();

File: src/com/google/zxing/client/android/AndroidIntentParsedResult.java
Patch:
@@ -42,6 +42,8 @@ public static AndroidIntentParsedResult parse(String rawText) {
       return new AndroidIntentParsedResult(Intent.getIntent(rawText));
     } catch (URISyntaxException urise) {
       return null;
+    } catch (IllegalArgumentException iae) {
+      return null;
     }
   }
 

File: src/com/google/zxing/client/android/ResultHandler.java
Patch:
@@ -119,6 +119,8 @@ public void handleMessage(Message message) {
         } catch (URISyntaxException e) {
           return;
         }
+      } else if (type.equals(ParsedReaderResultType.ANDROID_INTENT)) {
+        intent = ((AndroidIntentParsedResult) result).getIntent();
       }
       if (intent != null) {
         captureActivity.startActivity(intent);

File: src/com/google/zxing/client/android/YUVMonochromeBitmapSource.java
Patch:
@@ -118,7 +118,7 @@ public MonochromeBitmapSource rotateCounterClockwise() {
     throw new IllegalStateException("Rotate not supported");
   }
 
-  public boolean isRotatedSupported() {
+  public boolean isRotateSupported() {
     return false;
   }
 

