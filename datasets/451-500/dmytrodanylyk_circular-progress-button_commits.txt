File: library/src/main/java/com/dd/CircularProgressDrawable.java
Patch:
@@ -1,5 +1,6 @@
 package com.dd;
 
+import android.annotation.SuppressLint;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
@@ -54,9 +55,10 @@ public void setAlpha(int alpha) {
     public void setColorFilter(ColorFilter cf) {
     }
 
+    @SuppressLint("WrongConstant")
     @Override
     public int getOpacity() {
-        return 1;
+        return 1; // why ?
     }
 
     private RectF mRectF;

File: library/src/main/java/com/dd/CircularProgressDrawable.java
Patch:
@@ -1,5 +1,6 @@
 package com.dd;
 
+import android.annotation.SuppressLint;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
@@ -54,9 +55,10 @@ public void setAlpha(int alpha) {
     public void setColorFilter(ColorFilter cf) {
     }
 
+    @SuppressLint("WrongConstant")
     @Override
     public int getOpacity() {
-        return 1;
+        return 1; // why ?
     }
 
     private RectF mRectF;

File: library/src/main/java/com/dd/StateManager.java
Patch:
@@ -3,7 +3,7 @@
 class StateManager {
 
     private boolean mIsEnabled;
-    private float mProgress;
+    private int mProgress;
 
     public StateManager(CircularProgressButton progressButton) {
         mIsEnabled = progressButton.isEnabled();
@@ -18,7 +18,7 @@ public boolean isEnabled() {
         return mIsEnabled;
     }
 
-    public float getProgress() {
+    public int getProgress() {
         return mProgress;
     }
 

File: library/src/main/java/com/dd/CircularProgressButton.java
Patch:
@@ -474,7 +474,7 @@ private void morphProgressToError() {
     private OnAnimationEndListener mErrorStateListener = new OnAnimationEndListener() {
         @Override
         public void onAnimationEnd() {
-            if (mIconComplete != 0) {
+            if (mIconError != 0) {
                 setText(null);
                 setIcon(mIconError);
             } else {

File: library/src/main/java/com/dd/StateManager.java
Patch:
@@ -3,7 +3,7 @@
 class StateManager {
 
     private boolean mIsEnabled;
-    private int mProgress;
+    private float mProgress;
 
     public StateManager(CircularProgressButton progressButton) {
         mIsEnabled = progressButton.isEnabled();
@@ -18,7 +18,7 @@ public boolean isEnabled() {
         return mIsEnabled;
     }
 
-    public int getProgress() {
+    public float getProgress() {
         return mProgress;
     }
 

File: library/src/main/java/com/dd/StateManager.java
Patch:
@@ -3,7 +3,7 @@
 class StateManager {
 
     private boolean mIsEnabled;
-    private int mProgress;
+    private float mProgress;
 
     public StateManager(CircularProgressButton progressButton) {
         mIsEnabled = progressButton.isEnabled();
@@ -18,7 +18,7 @@ public boolean isEnabled() {
         return mIsEnabled;
     }
 
-    public int getProgress() {
+    public float getProgress() {
         return mProgress;
     }
 

File: sample/src/main/java/com/dd/sample/MainActivity.java
Patch:
@@ -33,6 +33,9 @@ protected void onListItemClick(ListView l, View v, int position, long id) {
             case 3:
                 Sample4Activity.startThisActivity(this);
                 break;
+            case 4:
+                Sample5Activity.startThisActivity(this);
+                break;
         }
     }
 }

File: library/src/main/java/com/dd/CircularProgressButton.java
Patch:
@@ -166,6 +166,7 @@ private Paint createPaint() {
     private void morphToProgress() {
         mMorphingInProgress = true;
 
+        setWidth(getWidth());
         setText(null);
 
         MorphingAnimation animation = new MorphingAnimation(this, background);

File: sample/src/main/java/com/dd/sample/MainActivity.java
Patch:
@@ -64,7 +64,7 @@ public void onClick(View v) {
         });
     }
 
-    private void simulateErrorProgress(final CircularProgressButton button) {
+    private void simulateSuccessProgress(final CircularProgressButton button) {
         ValueAnimator widthAnimation = ValueAnimator.ofInt(1, 100);
         widthAnimation.setDuration(1500);
         widthAnimation.setInterpolator(new AccelerateDecelerateInterpolator());
@@ -78,7 +78,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         widthAnimation.start();
     }
 
-    private void simulateSuccessProgress(final CircularProgressButton button) {
+    private void simulateErrorProgress(final CircularProgressButton button) {
         ValueAnimator widthAnimation = ValueAnimator.ofInt(1, 99);
         widthAnimation.setDuration(1500);
         widthAnimation.setInterpolator(new AccelerateDecelerateInterpolator());

File: sample/src/main/java/com/dd/sample/MainActivity.java
Patch:
@@ -64,7 +64,7 @@ public void onClick(View v) {
         });
     }
 
-    private void simulateErrorProgress(final CircularProgressButton button) {
+    private void simulateSuccessProgress(final CircularProgressButton button) {
         ValueAnimator widthAnimation = ValueAnimator.ofInt(1, 100);
         widthAnimation.setDuration(1500);
         widthAnimation.setInterpolator(new AccelerateDecelerateInterpolator());
@@ -78,7 +78,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         widthAnimation.start();
     }
 
-    private void simulateSuccessProgress(final CircularProgressButton button) {
+    private void simulateErrorProgress(final CircularProgressButton button) {
         ValueAnimator widthAnimation = ValueAnimator.ofInt(1, 99);
         widthAnimation.setDuration(1500);
         widthAnimation.setInterpolator(new AccelerateDecelerateInterpolator());

