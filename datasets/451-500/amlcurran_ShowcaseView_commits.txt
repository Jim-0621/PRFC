File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -405,11 +405,13 @@ private void hideImmediate() {
     @Override
     public void setContentTitle(CharSequence title) {
         textDrawer.setContentTitle(title);
+        invalidate();
     }
 
     @Override
     public void setContentText(CharSequence text) {
         textDrawer.setContentText(text);
+        invalidate();
     }
 
     private void setScaleMultiplier(float scaleMultiplier) {

File: library/src/main/java/com/github/amlcurran/showcaseview/TextDrawer.java
Patch:
@@ -112,6 +112,7 @@ public void setContentText(CharSequence details) {
             SpannableString ssbDetail = new SpannableString(details);
             ssbDetail.setSpan(textSpan, 0, ssbDetail.length(), 0);
             textString = ssbDetail;
+            hasRecalculated = true;
         }
     }
 
@@ -120,6 +121,7 @@ public void setContentTitle(CharSequence title) {
             SpannableString ssbTitle = new SpannableString(title);
             ssbTitle.setSpan(titleSpan, 0, ssbTitle.length(), 0);
             titleString = ssbTitle;
+            hasRecalculated = true;
         }
     }
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -405,11 +405,13 @@ private void hideImmediate() {
     @Override
     public void setContentTitle(CharSequence title) {
         textDrawer.setContentTitle(title);
+        invalidate();
     }
 
     @Override
     public void setContentText(CharSequence text) {
         textDrawer.setContentText(text);
+        invalidate();
     }
 
     private void setScaleMultiplier(float scaleMultiplier) {

File: library/src/main/java/com/github/amlcurran/showcaseview/TextDrawer.java
Patch:
@@ -112,6 +112,7 @@ public void setContentText(CharSequence details) {
             SpannableString ssbDetail = new SpannableString(details);
             ssbDetail.setSpan(textSpan, 0, ssbDetail.length(), 0);
             textString = ssbDetail;
+            hasRecalculated = true;
         }
     }
 
@@ -120,6 +121,7 @@ public void setContentTitle(CharSequence title) {
             SpannableString ssbTitle = new SpannableString(title);
             ssbTitle.setSpan(titleSpan, 0, ssbTitle.length(), 0);
             titleString = ssbTitle;
+            hasRecalculated = true;
         }
     }
 

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/ActionItemsSampleActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 
 public class ActionItemsSampleActivity extends AppCompatActivity {

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/CustomShowcaseActivity.java
Patch:
@@ -10,6 +10,7 @@
 import android.graphics.RectF;
 import android.os.Bundle;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseDrawer;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/CustomTextActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.text.Layout;
 import android.text.TextPaint;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;
 

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/EventsActivity.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.Button;
 import android.widget.TextView;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.OnShowcaseEventListener;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.SimpleShowcaseEventListener;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/FragmentDemoActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.SimpleShowcaseEventListener;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/MainActivity.java
Patch:
@@ -35,6 +35,7 @@
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.OnShowcaseEventListener;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.sample.animations.AnimationSampleActivity;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/MemoryManagementTesting.java
Patch:
@@ -19,6 +19,7 @@
 import android.app.Activity;
 import android.os.Bundle;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.SimpleShowcaseEventListener;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/SingleShotActivity.java
Patch:
@@ -19,6 +19,7 @@
 import android.app.Activity;
 import android.os.Bundle;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
 import com.github.amlcurran.showcaseview.targets.Target;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/animations/AnimationSampleActivity.java
Patch:
@@ -22,8 +22,8 @@
 import android.view.View;
 import android.widget.TextView;
 
+import com.espian.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.ShowcaseView;
-import com.github.amlcurran.showcaseview.sample.R;
 import com.github.amlcurran.showcaseview.targets.Target;
 import com.github.amlcurran.showcaseview.targets.ViewTarget;
 

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/legacy/MultipleShowcaseSampleActivity.java
Patch:
@@ -24,7 +24,7 @@
 import android.view.View;
 import android.widget.Toast;
 
-import com.github.amlcurran.showcaseview.sample.R;
+import com.espian.showcaseview.sample.R;
 
 public class MultipleShowcaseSampleActivity extends Activity {
 

File: library/src/main/java/com/github/amlcurran/showcaseview/TextDrawer.java
Patch:
@@ -70,12 +70,13 @@ public TextDrawer(Resources resources, Context context) {
     public void draw(Canvas canvas) {
         if (shouldDrawText()) {
             float[] textPosition = getBestTextPosition();
+            int width = Math.max(0, (int) mBestTextPosition[INDEX_TEXT_WIDTH]);
 
             if (!TextUtils.isEmpty(mTitle)) {
                 canvas.save();
                 if (hasRecalculated) {
                     mDynamicTitleLayout = new DynamicLayout(mTitle, titlePaint,
-                                                            (int) mBestTextPosition[INDEX_TEXT_WIDTH], titleTextAlignment, 1.0f, 1.0f, true);
+                                                            width, titleTextAlignment, 1.0f, 1.0f, true);
                 }
                 if (mDynamicTitleLayout != null) {
                     canvas.translate(textPosition[INDEX_TEXT_START_X], textPosition[INDEX_TEXT_START_Y]);
@@ -88,7 +89,7 @@ public void draw(Canvas canvas) {
                 canvas.save();
                 if (hasRecalculated) {
                     mDynamicDetailLayout = new DynamicLayout(mDetails, textPaint,
-                                                             (int) mBestTextPosition[INDEX_TEXT_WIDTH], detailTextAlignment, 1.2f, 1.0f, true);
+                                                             width, detailTextAlignment, 1.2f, 1.0f, true);
                 }
                 float offsetForTitle = mDynamicTitleLayout != null ? mDynamicTitleLayout.getHeight() : 0;
                 if (mDynamicDetailLayout != null) {

File: library/src/main/java/com/github/amlcurran/showcaseview/AnimatorAnimationFactory.java
Patch:
@@ -16,13 +16,16 @@
 
 package com.github.amlcurran.showcaseview;
 
+import android.os.Build.VERSION_CODES;
 import android.animation.Animator;
 import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
+import android.annotation.TargetApi;
 import android.graphics.Point;
 import android.view.View;
 import android.view.animation.AccelerateDecelerateInterpolator;
 
+@TargetApi(VERSION_CODES.HONEYCOMB)
 class AnimatorAnimationFactory implements AnimationFactory {
 
     private static final String ALPHA = "alpha";

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/ActionItemsSampleActivity.java
Patch:
@@ -19,7 +19,6 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
 
         new ShowcaseView.Builder(this)
                 .withMaterialShowcase()
-                .useContentViewAsParent()
                 .setTarget(new ToolbarActionItemTarget(viewById, R.id.menu_item1))
                 .setStyle(R.style.CustomShowcaseTheme2)
                 .setContentText("Here's how to highlight items on a toolbar")

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/SampleActivity.java
Patch:
@@ -72,7 +72,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         ViewTarget target = new ViewTarget(R.id.buttonBlocked, this);
         sv = new ShowcaseView.Builder(this)
-                .useContentViewAsParent()
                 .withMaterialShowcase()
                 .setTarget(target)
                 .setContentTitle(R.string.showcase_main_title)

File: library/src/main/java/com/github/amlcurran/showcaseview/ApiUtils.java
Patch:
@@ -33,7 +33,7 @@ public boolean isCompatWithHoneycomb() {
     @TargetApi(14)
     public void setFitsSystemWindowsCompat(View view) {
         if (isCompatWith(Build.VERSION_CODES.ICE_CREAM_SANDWICH)) {
-            view.setFitsSystemWindows(true);
+            view.setFitsSystemWindows(false);
         }
     }
 }

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -97,7 +97,6 @@ protected ShowcaseView(Context context, AttributeSet attrs, int defStyle, boolea
         showcaseAreaCalculator = new ShowcaseAreaCalculator();
         shotStateStore = new ShotStateStore(context);
 
-        apiUtils.setFitsSystemWindowsCompat(this);
         getViewTreeObserver().addOnPreDrawListener(new CalculateTextOnPreDraw());
         getViewTreeObserver().addOnGlobalLayoutListener(new UpdateOnGlobalLayout());
 

File: sample/src/main/java/com/github/amlcurran/showcaseview/sample/SampleActivity.java
Patch:
@@ -69,7 +69,9 @@ public void onCreate(Bundle savedInstanceState) {
         lps.setMargins(margin, margin, margin, margin);
 
         ViewTarget target = new ViewTarget(R.id.buttonBlocked, this);
+        ViewGroup viewById = (ViewGroup) findViewById(android.R.id.content);
         sv = new ShowcaseView.Builder(this)
+                .setParent(viewById, viewById.getChildCount())
                 .withMaterialShowcase()
                 .setTarget(target)
                 .setContentTitle(R.string.showcase_main_title)

File: library/src/main/java/com/github/amlcurran/showcaseview/TextDrawer.java
Patch:
@@ -65,12 +65,13 @@ public TextDrawer(Resources resources, ShowcaseAreaCalculator calculator, Contex
     public void draw(Canvas canvas) {
         if (shouldDrawText()) {
             float[] textPosition = getBestTextPosition();
+            int width = Math.max(0, (int) textPosition[2]);
 
             if (!TextUtils.isEmpty(mTitle)) {
                 canvas.save();
                 if (hasRecalculated) {
                     mDynamicTitleLayout = new DynamicLayout(mTitle, titlePaint,
-                            (int) textPosition[2], Layout.Alignment.ALIGN_NORMAL,
+                            width, Layout.Alignment.ALIGN_NORMAL,
                             1.0f, 1.0f, true);
                 }
                 if (mDynamicTitleLayout != null) {
@@ -84,7 +85,7 @@ public void draw(Canvas canvas) {
                 canvas.save();
                 if (hasRecalculated) {
                     mDynamicDetailLayout = new DynamicLayout(mDetails, textPaint,
-                            (int) textPosition[2],
+                            width,
                             Layout.Alignment.ALIGN_NORMAL,
                             1.2f, 1.0f, true);
                 }

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -256,7 +256,7 @@ public boolean onPreDraw() {
 
     @Override
     protected void dispatchDraw(Canvas canvas) {
-        if (showcaseX < 0 || showcaseY < 0 || shotStateStore.hasShot()) {
+        if (showcaseX < 0 || showcaseY < 0 || shotStateStore.hasShot() || bitmapBuffer == null) {
             super.dispatchDraw(canvas);
             return;
         }

File: library/src/main/java/com/github/amlcurran/showcaseview/StandardShowcaseDrawer.java
Patch:
@@ -24,9 +24,6 @@
 import android.graphics.PorterDuffXfermode;
 import android.graphics.drawable.Drawable;
 
-/**
- * Created by curraa01 on 13/10/2013.
- */
 class StandardShowcaseDrawer implements ShowcaseDrawer {
 
     protected final Paint eraserPaint;

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -107,7 +107,7 @@ private void init() {
             lps.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
             lps.setMargins(margin, margin, margin, margin);
             mEndButton.setLayoutParams(lps);
-            mEndButton.setText(R.string.ok);
+            mEndButton.setText(android.R.string.ok);
             if (!hasCustomClickListener) {
                 mEndButton.setOnClickListener(this);
             }
@@ -552,7 +552,7 @@ private void updateStyle(TypedArray styled, boolean invalidate) {
         int showcaseColor = styled.getColor(R.styleable.ShowcaseView_sv_showcaseColor, HOLO_BLUE);
         String buttonText = styled.getString(R.styleable.ShowcaseView_sv_buttonText);
         if (TextUtils.isEmpty(buttonText)) {
-            buttonText = getResources().getString(R.string.ok);
+            buttonText = getResources().getString(android.R.string.ok);
         }
         boolean tintButton = styled.getBoolean(R.styleable.ShowcaseView_sv_tintButtonColor, true);
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -179,7 +179,7 @@ private boolean haveBoundsChanged() {
     }
 
     public boolean hasShowcaseView() {
-        return (showcaseX != 1000000 && showcaseY != 1000000) || !hasNoTarget;
+        return (showcaseX != 1000000 && showcaseY != 1000000) && !hasNoTarget;
     }
 
     public void setShowcaseX(int x) {

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -166,7 +166,10 @@ public void run() {
 
     private void updateBitmap() {
         if (bitmapBuffer == null || haveBoundsChanged()) {
+            if(bitmapBuffer != null)
+        		bitmapBuffer.recycle();
             bitmapBuffer = Bitmap.createBitmap(getMeasuredWidth(), getMeasuredHeight(), Bitmap.Config.ARGB_8888);
+
         }
     }
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -166,7 +166,10 @@ public void run() {
 
     private void updateBitmap() {
         if (bitmapBuffer == null || haveBoundsChanged()) {
+            if(bitmapBuffer != null)
+        		bitmapBuffer.recycle();
             bitmapBuffer = Bitmap.createBitmap(getMeasuredWidth(), getMeasuredHeight(), Bitmap.Config.ARGB_8888);
+
         }
     }
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -176,7 +176,7 @@ private boolean haveBoundsChanged() {
     }
 
     public boolean hasShowcaseView() {
-        return (showcaseX != 1000000 && showcaseY != 1000000) || !hasNoTarget;
+        return (showcaseX != 1000000 && showcaseY != 1000000) && !hasNoTarget;
     }
 
     public void setShowcaseX(int x) {

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -350,6 +350,7 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
 
     private static void insertShowcaseView(ShowcaseView showcaseView, Activity activity) {
         ((ViewGroup) activity.getWindow().getDecorView()).addView(showcaseView);
+        showcaseView.show();
     }
 
     public void setContentTitle(CharSequence title) {

File: library/src/main/java/com/github/amlcurran/showcaseview/targets/ReflectorFactory.java
Patch:
@@ -23,7 +23,7 @@ private static Reflector.ActionBarType searchForActivitySuperClass(Activity acti
         Class currentLevel = activity.getClass();
         while (currentLevel != Activity.class) {
             if (currentLevel.getSimpleName().equals("SherlockActivity") || currentLevel.getSimpleName().equals("SherlockFragmentActivity")) {
-                return ActionBarType.ACTIONBAR_SHERLOCK;
+                return Reflector.ActionBarType.ACTIONBAR_SHERLOCK;
             }
             if (currentLevel.getSimpleName().equals("ActionBarActivity")) {
                 return Reflector.ActionBarType.APP_COMPAT;

File: library/src/main/java/com/github/amlcurran/showcaseview/targets/ReflectorFactory.java
Patch:
@@ -22,8 +22,8 @@ public static Reflector getReflectorForActivity(Activity activity) {
     private static Reflector.ActionBarType searchForActivitySuperClass(Activity activity) {
         Class currentLevel = activity.getClass();
         while (currentLevel != Activity.class) {
-            if (currentLevel.getSimpleName().equals("SherlockActivity")) {
-                return Reflector.ActionBarType.ACTIONBAR_SHERLOCK;
+            if (currentLevel.getSimpleName().equals("SherlockActivity") || currentLevel.getSimpleName().equals("SherlockFragmentActivity")) {
+                return ActionBarType.ACTIONBAR_SHERLOCK;
             }
             if (currentLevel.getSimpleName().equals("ActionBarActivity")) {
                 return Reflector.ActionBarType.APP_COMPAT;

File: library/src/main/java/com/github/amlcurran/showcaseview/targets/ReflectorFactory.java
Patch:
@@ -22,8 +22,8 @@ public static Reflector getReflectorForActivity(Activity activity) {
     private static Reflector.ActionBarType searchForActivitySuperClass(Activity activity) {
         Class currentLevel = activity.getClass();
         while (currentLevel != Activity.class) {
-            if (currentLevel.getSimpleName().equals("SherlockActivity")) {
-                return Reflector.ActionBarType.ACTIONBAR_SHERLOCK;
+            if (currentLevel.getSimpleName().equals("SherlockActivity") || currentLevel.getSimpleName().equals("SherlockFragmentActivity")) {
+                return ActionBarType.ACTIONBAR_SHERLOCK;
             }
             if (currentLevel.getSimpleName().equals("ActionBarActivity")) {
                 return Reflector.ActionBarType.APP_COMPAT;

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -76,7 +76,7 @@ public boolean calculateShowcaseRect(float x, float y) {
         int dw = getShowcaseWidth();
         int dh = getShowcaseHeight();
 
-        if (mShowcaseRect.left == cx - dw / 2) {
+        if (mShowcaseRect.left == cx - dw / 2 && mShowcaseRect.top == cy - dh / 2) {
             return false;
         }
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -78,6 +78,7 @@ protected ShowcaseView(Context context, boolean newStyle) {
 
     protected ShowcaseView(Context context, AttributeSet attrs, int defStyle, boolean newStyle) {
         super(context, attrs, defStyle);
+        this.setFitsSystemWindows(true);
         getViewTreeObserver().addOnPreDrawListener(this);
         getViewTreeObserver().addOnGlobalLayoutListener(this);
 

File: library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java
Patch:
@@ -562,6 +562,7 @@ private void updateStyle(TypedArray styled, boolean invalidate) {
         showcaseDrawer.setShowcaseColour(showcaseColor);
         textDrawer.setTitleStyling(titleTextAppearance);
         textDrawer.setDetailStyling(detailTextAppearance);
+        hasAlteredText = true;
 
         if (invalidate) {
             invalidate();

File: library/src/main/java/com/github/amlcurran/showcaseview/TextDrawerImpl.java
Patch:
@@ -176,11 +176,13 @@ public void calculateTextPosition(int canvasW, int canvasH, ShowcaseView showcas
     @Override
     public void setTitleStyling(int styleId) {
         mTitleSpan = new TextAppearanceSpan(this.context, styleId);
+        setContentTitle(mTitle);
     }
 
     @Override
     public void setDetailStyling(int styleId) {
         mDetailSpan = new TextAppearanceSpan(this.context, styleId);
+        setContentText(mDetails);
     }
 
     @Override

File: library/src/main/java/com/espian/showcaseview/drawing/ClingDrawer.java
Patch:
@@ -9,6 +9,8 @@
  */
 public interface ClingDrawer extends ShowcaseAreaCalculator {
 
+    void setShowcaseColour(int color);
+
     void drawShowcase(Bitmap buffer, float x, float y, float scaleMultiplier, float radius, int backgroundColor);
 
     int getShowcaseWidth();

File: sample/src/com/espian/showcaseview/sample/SampleActivity.java
Patch:
@@ -55,11 +55,10 @@ public void onCreate(Bundle savedInstanceState) {
 
         ViewTarget target = new ViewTarget(R.id.buttonBlocked, this);
         sv = new ShowcaseView.Builder(this)
+                .setTarget(target)
                 .setContentTitle(R.string.showcase_main_title)
                 .setContentText(R.string.showcase_main_message)
-                .setTarget(target)
                 .setStyle(R.style.CustomShowcaseTheme2)
-                .hideOnTouchOutside()
                 .build();
         sv.setOnShowcaseEventListener(this);
 

File: sample/src/com/espian/showcaseview/sample/animations/AnimationSampleActivity.java
Patch:
@@ -58,7 +58,8 @@ public void onClick(View v) {
 
             case 2:
                 showcaseView.setTarget(ShowcaseView.NONE);
-                showcaseView.setText("Look ma!", "You don't always need a target to showcase");
+                showcaseView.setContentTitle("Check it out");
+                showcaseView.setContentText("You don't always need a target to showcase");
                 setAlpha(0.4f, textView1, textView2, textView3);
                 break;
 

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -76,7 +76,7 @@ public boolean calculateShowcaseRect(float x, float y) {
         int dw = getShowcaseWidth();
         int dh = getShowcaseHeight();
 
-        if (mShowcaseRect.left == cx - dw / 2) {
+        if (mShowcaseRect.left == cx - dw / 2 && mShowcaseRect.top == cy - dh / 2) {
             return false;
         }
 

File: library/src/com/espian/showcaseview/drawing/TextDrawerImpl.java
Patch:
@@ -71,7 +71,9 @@ public void draw(Canvas canvas, boolean hasPositionChanged) {
                             Layout.Alignment.ALIGN_NORMAL,
                             1.2f, 1.0f, true);
                 }
-                canvas.translate(textPosition[0], textPosition[1] + mDynamicTitleLayout.getHeight());
+                float offsetForTitle = mDynamicTitleLayout != null ? mDynamicTitleLayout.getHeight() :
+                        0;
+                canvas.translate(textPosition[0], textPosition[1] + offsetForTitle);
                 mDynamicDetailLayout.draw(canvas);
                 canvas.restore();
 

File: library/src/com/espian/showcaseview/ShowcaseView.java
Patch:
@@ -7,9 +7,11 @@
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Paint;
+import android.graphics.Path;
 import android.graphics.Point;
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffXfermode;
+import android.graphics.Region.Op;
 import android.os.Build;
 import android.util.AttributeSet;
 import android.util.Log;

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -8,6 +8,7 @@
 import android.graphics.PorterDuffXfermode;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.util.Log;
 
 import com.github.espiandev.showcaseview.R;

File: library/src/com/espian/showcaseview/ShowcaseView.java
Patch:
@@ -7,9 +7,11 @@
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Paint;
+import android.graphics.Path;
 import android.graphics.Point;
 import android.graphics.PorterDuff;
 import android.graphics.PorterDuffXfermode;
+import android.graphics.Region.Op;
 import android.os.Build;
 import android.util.AttributeSet;
 import android.util.Log;

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -8,6 +8,7 @@
 import android.graphics.PorterDuffXfermode;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.util.Log;
 
 import com.github.espiandev.showcaseview.R;

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -39,7 +39,9 @@ public void drawShowcase(Canvas canvas, float x, float y, float scaleMultiplier,
         mm.postScale(scaleMultiplier, scaleMultiplier, x, y);
         canvas.setMatrix(mm);
 
-        canvas.drawCircle(x, y, radius, mEraser);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+        	canvas.drawCircle(x, y, radius, mEraser);
+        }
 
         mShowcaseDrawable.setBounds(mShowcaseRect);
         mShowcaseDrawable.draw(canvas);

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -39,7 +39,9 @@ public void drawShowcase(Canvas canvas, float x, float y, float scaleMultiplier,
         mm.postScale(scaleMultiplier, scaleMultiplier, x, y);
         canvas.setMatrix(mm);
 
-        canvas.drawCircle(x, y, radius, mEraser);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+        	canvas.drawCircle(x, y, radius, mEraser);
+        }
 
         mShowcaseDrawable.setBounds(mShowcaseRect);
         mShowcaseDrawable.draw(canvas);

File: library/src/com/espian/showcaseview/drawing/ClingDrawerImpl.java
Patch:
@@ -1,7 +1,5 @@
 package com.espian.showcaseview.drawing;
 
-import com.github.espiandev.showcaseview.R;
-
 import android.content.res.Resources;
 import android.graphics.Canvas;
 import android.graphics.Matrix;
@@ -12,6 +10,8 @@
 import android.graphics.drawable.Drawable;
 import android.util.Log;
 
+import com.github.espiandev.showcaseview.R;
+
 /**
  * Created by curraa01 on 13/10/2013.
  */
@@ -22,7 +22,7 @@ public class ClingDrawerImpl implements ClingDrawer {
     private Rect mShowcaseRect;
 
     public ClingDrawerImpl(Resources resources, int showcaseColor) {
-        PorterDuffXfermode mBlender = new PorterDuffXfermode(PorterDuff.Mode.MULTIPLY);
+        PorterDuffXfermode mBlender = new PorterDuffXfermode(PorterDuff.Mode.CLEAR);
         mEraser = new Paint();
         mEraser.setColor(0xFFFFFF);
         mEraser.setAlpha(0);

File: library/src/com/espian/showcaseview/ShowcaseView.java
Patch:
@@ -510,7 +510,8 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         float yDelta = Math.abs(motionEvent.getRawY() - showcaseY);
         double distanceFromFocus = Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));
 
-        if (mOptions.hideOnClickOutside && distanceFromFocus > showcaseRadius) {
+        if (MotionEvent.ACTION_UP == motionEvent.getAction() &&
+            mOptions.hideOnClickOutside && distanceFromFocus > showcaseRadius) {
             this.hide();
             return true;
         }

File: sample/src/com/espian/showcaseview/sample/SampleActivity.java
Patch:
@@ -8,14 +8,15 @@
 import android.widget.Button;
 import android.widget.Toast;
 
+import com.espian.showcaseview.OnShowcaseEventListener;
 import com.espian.showcaseview.ShowcaseView;
 import com.espian.showcaseview.sample.fragments.ShowcaseFragmentActivity;
 import com.espian.showcaseview.sample.legacy.MultipleShowcaseSampleActivity;
 import com.espian.showcaseview.sample.v14.ActionItemsSampleActivity;
 import com.espian.showcaseview.sample.v14.MultipleActionItemsSampleActivity;
 
 public class SampleActivity extends Activity implements View.OnClickListener,
-        ShowcaseView.OnShowcaseEventListener {
+        OnShowcaseEventListener {
 
     ShowcaseView sv;
     Button buttonTop;

File: library/src/com/espian/showcaseview/ShowcaseView.java
Patch:
@@ -571,8 +571,7 @@ public void pointTo(View view) {
      * @param y Y-coordinate to point to
      */
     public void pointTo(float x, float y) {
-        final View mHandy = ((LayoutInflater) getContext()
-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.handy, null);
+        mHandy = getHand();
         AnimationUtils.createMovementAnimation(mHandy, x, y).start();
     }
 

File: library/src/com/espian/showcaseview/ShowcaseView.java
Patch:
@@ -497,7 +497,8 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         float yDelta = Math.abs(motionEvent.getRawY() - showcaseY);
         double distanceFromFocus = Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));
 
-        if (mOptions.hideOnClickOutside && distanceFromFocus > showcaseRadius) {
+        if (MotionEvent.ACTION_UP == motionEvent.getAction() &&
+            mOptions.hideOnClickOutside && distanceFromFocus > showcaseRadius) {
             this.hide();
             return true;
         }

File: library/src/com/espian/showcaseview/ShowcaseViewBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.espiandev.showcaseview;
+package com.espian.showcaseview;
 
 import android.app.Activity;
 import android.view.View;

File: library/src/com/espian/showcaseview/ShowcaseViews.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.espiandev.showcaseview;
+package com.espian.showcaseview;
 
 import android.app.Activity;
 import android.view.View;

File: library/src/com/espian/showcaseview/anim/AnimationUtils.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.espiandev.showcaseview.anim;
+package com.espian.showcaseview.anim;
 
 import android.os.Handler;
 import android.view.View;

File: library/test/com/espian/showcaseview/ShowcaseViewTests.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.espiandev.showcaseview;
+package com.espian.showcaseview;
 
 import org.junit.Before;
 import org.junit.runner.RunWith;

File: sample/src/com/espian/showcaseview/sample/fragments/ShowcaseFragmentActivity.java
Patch:
@@ -1,9 +1,9 @@
-package com.github.espiandev.showcaseview.sample.fragments;
+package com.espian.showcaseview.sample.fragments;
 
 import android.os.Bundle;
 import android.support.v4.app.FragmentActivity;
 
-import com.github.espiandev.showcaseview.sample.R;
+import com.espian.showcaseview.sample.R;
 
 public class ShowcaseFragmentActivity extends FragmentActivity {
 

File: sample/src/com/espian/showcaseview/sample/v14/ActionItemsSampleActivity.java
Patch:
@@ -1,12 +1,12 @@
-package com.github.espiandev.showcaseview.sample.v14;
+package com.espian.showcaseview.sample.v14;
 
 import android.app.Activity;
 import android.os.Bundle;
 import android.view.Menu;
 import android.view.MenuItem;
 
-import com.github.espiandev.showcaseview.ShowcaseView;
-import com.github.espiandev.showcaseview.sample.R;
+import com.espian.showcaseview.ShowcaseView;
+import com.espian.showcaseview.sample.R;
 
 public class ActionItemsSampleActivity extends Activity {
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -443,7 +443,7 @@ protected void dispatchDraw(Canvas canvas) {
                             ((Number) mBestTextPosition[2]).intValue(), Layout.Alignment.ALIGN_NORMAL,
                             1.2f, 1.0f, true);
                 }
-                canvas.translate(mBestTextPosition[0], mBestTextPosition[1] + 12 * metricScale);
+                canvas.translate(mBestTextPosition[0] , mBestTextPosition[1] + 12 * metricScale + (mDynamicTitleLayout.getLineBottom(mDynamicTitleLayout.getLineCount()-1)-mDynamicTitleLayout.getLineBottom(0)));
                 mDynamicDetailLayout.draw(canvas);
                 canvas.restore();
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseViewBuilder.java
Patch:
@@ -5,9 +5,6 @@
 
 public class ShowcaseViewBuilder {
 
-    //TODO: Some options of ShowcaseView.ConfigOptions don't work yet.
-    //TODO: What's about showcaseId Field?
-
     private final ShowcaseView showcaseView;
 
     public ShowcaseViewBuilder(Activity activity) {

File: sample/src/com/github/espiandev/showcaseview/sample/SampleActivity.java
Patch:
@@ -39,7 +39,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         ShowcaseView.ConfigOptions co = new ShowcaseView.ConfigOptions();
         co.hideOnClickOutside = true;
-        co.fadeInDuration = 3000;
 
         // The following code will reposition the OK button to the left.
 //        RelativeLayout.LayoutParams lps = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);

File: sample/src/com/github/espiandev/showcaseview/sample/v14/MultipleActionItemsSampleActivity.java
Patch:
@@ -46,8 +46,8 @@ public void onShowCaseAcknowledged(ShowcaseView showcaseView) {
         options.showcaseId = 1234;
         views.addView(new ItemViewProperties(R.id.menu_item1, R.string.showcase_menu_item_one_shot_title, R.string.showcase_menu_item_one_shot_message, ShowcaseView.ITEM_SPINNER, SHOWCASE_SPINNER_SCALE, options));
         ShowcaseView.ConfigOptions configOptions = new ShowcaseView.ConfigOptions();
-        configOptions.fadeInDuration = 2000;
-        configOptions.fadeOutDuration = 2000;
+        configOptions.fadeInDuration = 700;
+        configOptions.fadeOutDuration = 700;
         configOptions.block = true;
         views.addView(new ItemViewProperties(ItemViewProperties.ID_SPINNER, R.string.showcase_spinner_title, R.string.showcase_spinner_message, ShowcaseView.ITEM_SPINNER, SHOWCASE_SPINNER_SCALE, configOptions));
         views.addView(new ItemViewProperties(ItemViewProperties.ID_OVERFLOW, R.string.showcase_overflow_title, R.string.showcase_overflow_message, ShowcaseView.ITEM_ACTION_OVERFLOW, SHOWCASE_OVERFLOW_ITEM_SCALE));

File: library/src/com/github/espiandev/showcaseview/ShowcaseViewBuilder.java
Patch:
@@ -83,8 +83,6 @@ public ShowcaseViewBuilder pointTo(float x, float y) {
     }
 
     public ShowcaseViewBuilder setConfigOptions(ShowcaseView.ConfigOptions configOptions) {
-        ShowcaseView.ConfigOptions options = showcaseView.getConfigOptions();
-        configOptions.showcaseId = options.showcaseId;
         showcaseView.setConfigOptions(configOptions);
         return this;
     }

File: library/src/com/github/espiandev/showcaseview/anim/AnimationUtils.java
Patch:
@@ -44,7 +44,7 @@ public static ObjectAnimator createFadeInAnimation(Object target, final Animatio
     }
 
     public static ObjectAnimator createFadeInAnimation(Object target, int duration, final AnimationStartListener listener) {
-        ObjectAnimator oa = ObjectAnimator.ofFloat(target, ALPHA, VISIBLE);
+        ObjectAnimator oa = ObjectAnimator.ofFloat(target, ALPHA, INVISIBLE, VISIBLE);
         oa.setDuration(duration).addListener(new Animator.AnimatorListener() {
             @Override
             public void onAnimationStart(Animator animator) {

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -437,7 +437,7 @@ protected void dispatchDraw(Canvas canvas) {
                             ((Number) mBestTextPosition[2]).intValue(), Layout.Alignment.ALIGN_NORMAL,
                             1.2f, 1.0f, true);
                 }
-                canvas.translate(mBestTextPosition[0], mBestTextPosition[1] + 12 * metricScale);
+                canvas.translate(mBestTextPosition[0] , mBestTextPosition[1] + 12 * metricScale + (mDynamicTitleLayout.getLineBottom(mDynamicTitleLayout.getLineCount()-1)-mDynamicTitleLayout.getLineBottom(0)));
                 mDynamicDetailLayout.draw(canvas);
                 canvas.restore();
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -644,6 +644,7 @@ public void pointTo(View view) {
      * @param y Y-coordinate to point to
      */
     public void pointTo(float x, float y) {
+		final View mHandy = ((LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.handy, null);
         AnimationUtils.createMovementAnimation(mHandy, x, y).start();
     }
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -644,6 +644,7 @@ public void pointTo(View view) {
      * @param y Y-coordinate to point to
      */
     public void pointTo(float x, float y) {
+		final View mHandy = ((LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.handy, null);
         AnimationUtils.createMovementAnimation(mHandy, x, y).start();
     }
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseViews.java
Patch:
@@ -34,7 +34,7 @@ public ShowcaseViews(Activity activity, int showcaseTemplateLayout, OnShowcaseAc
     }
 
     public void addView(ItemViewProperties properties) {
-        ShowcaseViewBuilder builder = new ShowcaseViewBuilder(activity, showcaseTemplateId)
+        ShowcaseViewBuilder builder = new ShowcaseViewBuilder(activity)
                 .setText(properties.titleResId, properties.messageResId)
                 .setShowcaseIndicatorScale(properties.scale);
 

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -829,7 +829,7 @@ public static class ConfigOptions {
          * Default duration for fade out animation. Set to 0 to disable.
          */
         public int fadeOutDuration = AnimationUtils.DEFAULT_DURATION;
-         * Allow custom positioning of the button within the showcase view.
+        /** Allow custom positioning of the button within the showcase view.
          */
         public LayoutParams buttonLayoutParams = null;
     }

File: library/src/com/github/espiandev/showcaseview/ShowcaseViews.java
Patch:
@@ -50,7 +50,7 @@ public void addView(ItemViewProperties properties) {
     }
 
     private boolean showcaseActionBar(ItemViewProperties properties) {
-        return properties.itemType >= ItemViewProperties.ID_NOT_IN_ACTIONBAR;
+        return properties.itemType > ItemViewProperties.ID_NOT_IN_ACTIONBAR;
     }
 
     private View.OnClickListener createShowcaseViewDismissListener(final ShowcaseView showcaseView) {

File: sample/src/com/github/espiandev/showcaseview/sample/v14/ActionItemsSampleActivity.java
Patch:
@@ -16,7 +16,7 @@ public class ActionItemsSampleActivity extends Activity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.sample);
+        setContentView(R.layout.activity_sample);
         getActionBar().setDisplayHomeAsUpEnabled(true);
         mOptions.block = false;
     }

File: sample/src/com/github/espiandev/showcaseview/sample/v14/MultipleActionItemsSampleActivity.java
Patch:
@@ -23,7 +23,7 @@ public class MultipleActionItemsSampleActivity extends Activity implements Actio
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.sample);
+        setContentView(R.layout.activity_sample);
         getActionBar().setDisplayHomeAsUpEnabled(true);
         getActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
         getActionBar().setListNavigationCallbacks(new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, new String[]{"Item1", "Item2", "Item3"}), this);

File: sample/src/com/github/espiandev/showcaseview/sample/v14/ActionItemsSampleActivity.java
Patch:
@@ -16,7 +16,7 @@ public class ActionItemsSampleActivity extends Activity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
+        setContentView(R.layout.sample);
         getActionBar().setDisplayHomeAsUpEnabled(true);
         mOptions.block = false;
     }

File: sample/src/com/github/espiandev/showcaseview/sample/v14/MultipleActionItemsSampleActivity.java
Patch:
@@ -23,7 +23,7 @@ public class MultipleActionItemsSampleActivity extends Activity implements Actio
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
+        setContentView(R.layout.sample);
         getActionBar().setDisplayHomeAsUpEnabled(true);
         getActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
         getActionBar().setListNavigationCallbacks(new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, new String[]{"Item1", "Item2", "Item3"}), this);

File: library/src/com/github/espiandev/showcaseview/ShowcaseViews.java
Patch:
@@ -23,7 +23,7 @@ public ShowcaseViews(Activity activity, int showcaseTemplateLayout) {
     }
 
     public void addView(ItemViewProperties properties) {
-        ShowcaseView showcaseView = new ShowcaseViewBuilder(activity).setShowcaseItem(properties.itemType, properties.id, activity)
+        ShowcaseView showcaseView = new ShowcaseViewBuilder(activity, showcaseTemplateId).setShowcaseItem(properties.itemType, properties.id, activity)
                 .setText(properties.titleResId, properties.messageResId)
                 .setShowcaseIndicatorScale(properties.scale)
                 .build();

File: sample/src/com/github/espiandev/showcaseview/sample/v14/ActionItemsSampleActivity.java
Patch:
@@ -1,14 +1,14 @@
 package com.github.espiandev.showcaseview.sample.v14;
 
+import android.app.Activity;
 import android.os.Bundle;
-import android.support.v4.app.FragmentActivity;
 import android.view.Menu;
 import android.view.MenuItem;
 
 import com.github.espiandev.showcaseview.ShowcaseView;
 import com.github.espiandev.showcaseview.sample.R;
 
-public class ActionItemsSampleActivity extends FragmentActivity {
+public class ActionItemsSampleActivity extends Activity {
 
     ShowcaseView sv;
     ShowcaseView.ConfigOptions mOptions = new ShowcaseView.ConfigOptions();

File: library/src/com/github/espiandev/showcaseview/ShowcaseView.java
Patch:
@@ -109,7 +109,7 @@ private void init() {
 		}
 		showcase = getContext().getResources().getDrawable(R.drawable.cling);
 		mButton = findViewById(R.id.showcase_button);
-		if (mButton != null) {
+		if (mButton != null && !hasCustomClickListener) {
 			mButton.setOnClickListener(this);
 		}
 		showcaseRadius = metricScale * 94;

