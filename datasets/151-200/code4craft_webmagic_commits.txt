File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java
Patch:
@@ -6,6 +6,7 @@
 import us.codecraft.webmagic.Request;
 import us.codecraft.webmagic.Task;
 import us.codecraft.webmagic.selector.PlainText;
+import us.codecraft.webmagic.utils.HttpConstant;
 
 import java.io.*;
 
@@ -96,7 +97,7 @@ public Page download(Request request, Task task) {
                 page.setRawText(content);
                 page.setUrl(new PlainText(request.getUrl()));
                 page.setRequest(request);
-                page.setStatusCode(200);
+                page.setStatusCode(HttpConstant.StatusCode.CODE_200);
             }
             onSuccess(page, task);
         } catch (Exception e) {

File: webmagic-selenium/src/main/java/us/codecraft/webmagic/downloader/selenium/SeleniumDownloader.java
Patch:
@@ -14,9 +14,11 @@
 import us.codecraft.webmagic.downloader.AbstractDownloader;
 import us.codecraft.webmagic.selector.Html;
 import us.codecraft.webmagic.selector.PlainText;
+import us.codecraft.webmagic.utils.HttpConstant;
 
 import java.io.Closeable;
 import java.io.IOException;
+import java.net.http.HttpRequest;
 import java.util.Map;
 
 /**
@@ -111,6 +113,7 @@ public Page download(Request request, Task task) {
             page.setHtml(new Html(content, request.getUrl()));
             page.setUrl(new PlainText(request.getUrl()));
             page.setRequest(request);
+            page.setStatusCode(HttpConstant.StatusCode.CODE_200);
             onSuccess(page, task);
         } catch (Exception e) {
             logger.warn("download page {} error", request.getUrl(), e);

File: webmagic-core/src/main/java/us/codecraft/webmagic/Page.java
Patch:
@@ -4,7 +4,6 @@
 import us.codecraft.webmagic.selector.Html;
 import us.codecraft.webmagic.selector.Json;
 import us.codecraft.webmagic.selector.Selectable;
-import us.codecraft.webmagic.utils.HttpConstant;
 import us.codecraft.webmagic.utils.UrlUtils;
 
 import java.util.ArrayList;
@@ -43,9 +42,9 @@ public class Page {
 
     private Map<String,List<String>> headers;
 
-    private int statusCode = HttpConstant.StatusCode.CODE_200;
+    private int statusCode;
 
-    private boolean downloadSuccess = true;
+    private boolean downloadSuccess;
 
     private byte[] bytes;
 

File: webmagic-extension/src/test/java/us/codecraft/webmagic/downloader/MockGithubDownloader.java
Patch:
@@ -938,6 +938,7 @@ public Page download(Request request, Task task) {
         Page page = new Page();
         page.setRawText(html);
         page.setStatusCode(200);
+        page.setDownloadSuccess(true);
         page.setRequest(new Request("https://github.com/code4craft/webmagic"));
         page.setUrl(new PlainText("https://github.com/code4craft/webmagic"));
         return page;

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -103,8 +103,8 @@ public void setThread(int thread) {
 
     protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
         HttpEntity entity = httpResponse.getEntity();
-        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];;
-        String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
+        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];
+        String contentType = entity != null && entity.getContentType() != null ? entity.getContentType().getValue() : null;
         Page page = new Page();
         page.setBytes(bytes);
         if (!request.isBinaryContent()) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -103,8 +103,8 @@ public void setThread(int thread) {
 
     protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
         HttpEntity entity = httpResponse.getEntity();
-        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];;
-        String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
+        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];
+        String contentType = entity != null && entity.getContentType() != null ? entity.getContentType().getValue() : null;
         Page page = new Page();
         page.setBytes(bytes);
         if (!request.isBinaryContent()) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -103,8 +103,8 @@ public void setThread(int thread) {
 
     protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
         HttpEntity entity = httpResponse.getEntity();
-        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];;
-        String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
+        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];
+        String contentType = entity != null && entity.getContentType() != null ? entity.getContentType().getValue() : null;
         Page page = new Page();
         page.setBytes(bytes);
         if (!request.isBinaryContent()) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -7,6 +7,7 @@
 import java.util.Optional;
 
 import org.apache.commons.io.IOUtils;
+import org.apache.http.HttpEntity;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.impl.client.CloseableHttpClient;
@@ -111,7 +112,8 @@ public void setThread(int thread) {
     }
 
     protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
-        byte[] bytes = IOUtils.toByteArray(httpResponse.getEntity().getContent());
+        HttpEntity entity = httpResponse.getEntity();
+        byte[] bytes = entity != null ? IOUtils.toByteArray(entity.getContent()) : new byte[0];;
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -85,13 +85,13 @@ public Page download(Request request, Task task) {
             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);
 
             onSuccess(page, task);
-            logger.info("downloading page success {}", request.getUrl());
+            logger.info("Download page success: {}", request.getUrl());
 
             return page;
         } catch (IOException e) {
 
             onError(page, task, e);
-            logger.info("download page {} error", request.getUrl(), e);
+            logger.info("Download page error: {}", request.getUrl(), e);
 
             return page;
         } finally {

File: webmagic-core/src/main/java/us/codecraft/webmagic/Page.java
Patch:
@@ -71,6 +71,7 @@ public static Page fail() {
      * Returns a {@link Page} with {@link #downloadSuccess} is {@code false},
      * and {@link #request} is specified.
      *
+     * @param request the {@link Request}.
      * @return the page.
      * @since 0.10.0
      */

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java
Patch:
@@ -88,7 +88,7 @@ public Page download(Request request, Task task) {
             logger.info("downloading page: " + request.getUrl());
         }
 
-        Page page = Page.fail();
+        Page page = Page.fail(request);
         try {
             String content = getPage(request);
             if (!content.contains("HTTP request failed")) {
@@ -98,9 +98,9 @@ public Page download(Request request, Task task) {
                 page.setRequest(request);
                 page.setStatusCode(200);
             }
-            onSuccess(request, task);
+            onSuccess(page, task);
         } catch (Exception e) {
-            onError(request, task, e);
+            onError(page, task, e);
             logger.warn("download page {} error", request.getUrl(), e);
         }
         return page;

File: webmagic-selenium/src/main/java/us/codecraft/webmagic/downloader/selenium/SeleniumDownloader.java
Patch:
@@ -74,7 +74,7 @@ public SeleniumDownloader setSleepTime(int sleepTime) {
     public Page download(Request request, Task task) {
         checkInit();
         WebDriver webDriver = null;
-        Page page = Page.fail();
+        Page page = Page.fail(request);
         try {
             webDriver = webDriverPool.get();
 
@@ -111,10 +111,10 @@ public Page download(Request request, Task task) {
             page.setHtml(new Html(content, request.getUrl()));
             page.setUrl(new PlainText(request.getUrl()));
             page.setRequest(request);
-            onSuccess(request, task);
+            onSuccess(page, task);
         } catch (Exception e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request, task, e);
+            onError(page, task, e);
         } finally {
             if (webDriver != null) {
                 webDriverPool.returnToPool(webDriver);

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -85,13 +85,13 @@ public Page download(Request request, Task task) {
             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);
 
             onSuccess(request, task);
-            logger.info("downloading page success {}", request.getUrl());
+            logger.info("download page success {}", request.getUrl());
 
             return page;
         } catch (IOException e) {
 
             onError(request, task, e);
-            logger.info("download page {} error", request.getUrl(), e);
+            logger.info("download page error {}", request.getUrl(), e);
 
             return page;
         } finally {

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -82,12 +82,12 @@ public Page download(Request request, Task task) {
         try {
             httpResponse = httpClient.execute(requestContext.getHttpUriRequest(), requestContext.getHttpClientContext());
             page = handleResponse(request, request.getCharset() != null ? request.getCharset() : task.getSite().getCharset(), httpResponse, task);
-            onSuccess(request);
+            onSuccess(request, task);
             logger.info("downloading page success {}", request.getUrl());
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request, e);
+            onError(request, task, e);
             return page;
         } finally {
             if (httpResponse != null) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java
Patch:
@@ -98,9 +98,9 @@ public Page download(Request request, Task task) {
                 page.setRequest(request);
                 page.setStatusCode(200);
             }
-            onSuccess(request);
+            onSuccess(request, task);
         } catch (Exception e) {
-            onError(request, e);
+            onError(request, task, e);
             logger.warn("download page {} error", request.getUrl(), e);
         }
         return page;

File: webmagic-selenium/src/main/java/us/codecraft/webmagic/downloader/selenium/SeleniumDownloader.java
Patch:
@@ -111,10 +111,10 @@ public Page download(Request request, Task task) {
             page.setHtml(new Html(content, request.getUrl()));
             page.setUrl(new PlainText(request.getUrl()));
             page.setRequest(request);
-            onSuccess(request);
+            onSuccess(request, task);
         } catch (Exception e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request, e);
+            onError(request, task, e);
         } finally {
             if (webDriver != null) {
                 webDriverPool.returnToPool(webDriver);

File: webmagic-core/src/main/java/us/codecraft/webmagic/SpiderListener.java
Patch:
@@ -8,13 +8,14 @@
  */
 public interface SpiderListener {
 
-    public void onSuccess(Request request);
+    void onSuccess(Request request);
 
     /**
      * @deprecated Use {@link #onError(Request, Exception)} instead.
      */
     @Deprecated
-    public void onError(Request request);
+    default void onError(Request request) {
+    }
 
     default void onError(Request request, Exception e) {
         this.onError(request);

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url url
+     * @param url     url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request) {
+    protected void onError(Request request, Throwable e) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request);
+            onError(request, e);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()){
+        if (!request.isBinaryContent()) {
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/PhantomJSPageProcessor.java
Patch:
@@ -36,7 +36,7 @@ public Site getSite() {
     }
 
     public static void main(String[] args) throws Exception {
-        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader().setRetryNum(3);
+        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader();
 
         CollectorPipeline<ResultItems> collectorPipeline = new ResultItemsCollectorPipeline();
 

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/PhantomJSPageProcessor.java
Patch:
@@ -36,7 +36,7 @@ public Site getSite() {
     }
 
     public static void main(String[] args) throws Exception {
-        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader().setRetryNum(3);
+        PhantomJSDownloader phantomDownloader = new PhantomJSDownloader();
 
         CollectorPipeline<ResultItems> collectorPipeline = new ResultItemsCollectorPipeline();
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url url
+     * @param url     url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request) {
+    protected void onError(Request request, Throwable e) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request);
+            onError(request, e);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()){
+        if (!request.isBinaryContent()) {
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url     url
+     * @param url url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request, Throwable e) {
+    protected void onError(Request request) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request, e);
+            onError(request);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()) {
+        if (!request.isBinaryContent()){
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url     url
+     * @param url url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request, Throwable e) {
+    protected void onError(Request request) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request, e);
+            onError(request);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()) {
+        if (!request.isBinaryContent()){
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url url
+     * @param url     url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request) {
+    protected void onError(Request request, Throwable e) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request);
+            onError(request, e);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()){
+        if (!request.isBinaryContent()) {
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/AbstractDownloader.java
Patch:
@@ -26,7 +26,7 @@ public Html download(String url) {
     /**
      * A simple method to download a url.
      *
-     * @param url url
+     * @param url     url
      * @param charset charset
      * @return html
      */
@@ -38,7 +38,7 @@ public Html download(String url, String charset) {
     protected void onSuccess(Request request) {
     }
 
-    protected void onError(Request request) {
+    protected void onError(Request request, Throwable e) {
     }
 
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -87,7 +87,7 @@ public Page download(Request request, Task task) {
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);
-            onError(request);
+            onError(request, e);
             return page;
         } finally {
             if (httpResponse != null) {
@@ -110,7 +110,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinaryContent()){
+        if (!request.isBinaryContent()) {
             if (charset == null) {
                 charset = getHtmlCharset(contentType, bytes);
             }

File: webmagic-saxon/src/main/java/us/codecraft/webmagic/selector/Xpath2Selector.java
Patch:
@@ -75,6 +75,7 @@ private void put(String prefix, String namespaceURI) {
         private XPath2NamespaceContext() {
             put("fn", NamespaceConstant.FN);
             put("xslt", NamespaceConstant.XSLT);
+            put("xhtml", NamespaceConstant.XHTML);
         }
 
         @Override

File: webmagic-saxon/src/test/java/us/codecraft/webmagic/selector/XpathSelectorTest.java
Patch:
@@ -1376,7 +1376,7 @@ public void testXPath2() {
 
     @Test
     public void testXpath2Selector() {
-        Xpath2Selector xpath2Selector = new Xpath2Selector("//a/@href");
+        Xpath2Selector xpath2Selector = new Xpath2Selector("//xhtml:a/@href");
         String select = xpath2Selector.select(html);
         Assert.assertEquals("http://www.oschina.net/", select);
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/proxy/ExpirableProxy.java
Patch:
@@ -1,6 +1,5 @@
 package us.codecraft.webmagic.proxy;
 
-import lombok.Getter;
 import org.apache.http.annotation.Contract;
 import org.apache.http.annotation.ThreadingBehavior;
 
@@ -14,7 +13,6 @@
  */
 @Contract(threading = ThreadingBehavior.IMMUTABLE_CONDITIONAL)
 public class ExpirableProxy extends Proxy {
-    @Getter
     private final int ttl;
     private final LocalDateTime expireTime;
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/proxy/Proxy.java
Patch:
@@ -6,7 +6,6 @@
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
 
-import jdk.nashorn.internal.ir.annotations.Immutable;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.annotation.Contract;
 import org.apache.http.annotation.ThreadingBehavior;

File: webmagic-core/src/main/java/us/codecraft/webmagic/proxy/Proxy.java
Patch:
@@ -6,7 +6,6 @@
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
 
-import jdk.nashorn.internal.ir.annotations.Immutable;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.annotation.Contract;
 import org.apache.http.annotation.ThreadingBehavior;

File: webmagic-core/src/main/java/us/codecraft/webmagic/proxy/ExpirableProxy.java
Patch:
@@ -1,5 +1,6 @@
 package us.codecraft.webmagic.proxy;
 
+import lombok.Getter;
 import org.apache.http.annotation.Contract;
 import org.apache.http.annotation.ThreadingBehavior;
 
@@ -13,6 +14,7 @@
  */
 @Contract(threading = ThreadingBehavior.IMMUTABLE_CONDITIONAL)
 public class ExpirableProxy extends Proxy {
+    @Getter
     private final int ttl;
     private final LocalDateTime expireTime;
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientGenerator.java
Patch:
@@ -96,7 +96,7 @@ public X509Certificate[] getAcceptedIssuers() {
 
         };
 
-        SSLContext sc = SSLContext.getInstance("SSLv3");
+        SSLContext sc = SSLContext.getInstance("TLS");
         sc.init(null, new TrustManager[] { trustManager }, null);
         return sc;
 	}

File: webmagic-core/src/main/java/us/codecraft/webmagic/selector/RegexSelector.java
Patch:
@@ -41,7 +41,7 @@ private void compileRegex(String regexStr) {
 
     /**
      * Create a RegexSelector. When there is no capture group, the value is set to 0 else set to 1.
-     * @param regexStr
+     * @param regexStr the regular expression.
      */
     public RegexSelector(String regexStr) {
         this.compileRegex(regexStr);

File: webmagic-core/src/main/java/us/codecraft/webmagic/Site.java
Patch:
@@ -203,7 +203,7 @@ public Set<Integer> getAcceptStatCode() {
 
     /**
      * Set the interval between the processing of two pages.<br>
-     * Time unit is micro seconds.<br>
+     * Time unit is milliseconds.<br>
      *
      * @param sleepTime sleepTime
      * @return this
@@ -215,7 +215,7 @@ public Site setSleepTime(int sleepTime) {
 
     /**
      * Get the interval between the processing of two pages.<br>
-     * Time unit is micro seconds.<br>
+     * Time unit is milliseconds.<br>
      *
      * @return the interval between the processing of two pages,
      */

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java
Patch:
@@ -61,7 +61,7 @@ protected void pushWhenNoDuplicate(Request request, Task task) {
         Jedis jedis = pool.getResource();
         try {
             jedis.rpush(getQueueKey(task), request.getUrl());
-            if (CheckForAdditionalInfo(request)) {
+            if (checkForAdditionalInfo(request)) {
                 String field = DigestUtils.shaHex(request.getUrl());
                 String value = JSON.toJSONString(request);
                 jedis.hset((ITEM_PREFIX + task.getUUID()), field, value);
@@ -71,7 +71,7 @@ protected void pushWhenNoDuplicate(Request request, Task task) {
         }
     }
 
-    private boolean CheckForAdditionalInfo(Request request) {
+    private boolean checkForAdditionalInfo(Request request) {
         if (request == null) {
             return false;
         }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -112,7 +112,7 @@ protected Page handleResponse(Request request, String charset, HttpResponse http
         String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
         Page page = new Page();
         page.setBytes(bytes);
-        if (!request.isBinarayContent()){
+        if (!request.isBinaryContent()){
             page.setRawText(getResponseContent(charset, contentType, bytes));
         }
         page.setUrl(new PlainText(request.getUrl()));

File: webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java
Patch:
@@ -280,7 +280,7 @@ public void test_download_binary_content() throws Exception {
             public void run() throws Exception {
                 final HttpClientDownloader httpClientDownloader = new HttpClientDownloader();
                 Request request = new Request();
-                request.setBinarayContent(true);
+                request.setBinaryContent(true);
                 request.setUrl("http://127.0.0.1:13423/");
                 Page page = httpClientDownloader.download(request, Site.me().toTask());
                 assertThat(page.getRawText()).isNull();

File: webmagic-core/src/main/java/us/codecraft/webmagic/utils/UrlUtils.java
Patch:
@@ -108,7 +108,7 @@ public static List<String> convertToUrls(Collection<Request> requests) {
         return urlList;
     }
 
-    private static final Pattern patternForCharset = Pattern.compile("charset\\s*=\\s*['\"]*([^\\s;'\"]*)");
+    private static final Pattern patternForCharset = Pattern.compile("charset\\s*=\\s*['\"]*([^\\s;'\"]*)", Pattern.CASE_INSENSITIVE);
 
     public static String getCharset(String contentType) {
         Matcher matcher = patternForCharset.matcher(contentType);

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -418,6 +418,8 @@ private void onDownloadSuccess(Request request, Page page) {
                     pipeline.process(page.getResultItems(), this);
                 }
             }
+        } else {
+            logger.info("page status code error, page {} , code: {}", request.getUrl(), page.getStatusCode());
         }
         sleep(site.getSleepTime());
         return;

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -76,7 +76,6 @@ public Page download(Request request, Task task) {
         if (task == null || task.getSite() == null) {
             throw new NullPointerException("task or site can not be null");
         }
-        logger.debug("downloading page {}", request.getUrl());
         CloseableHttpResponse httpResponse = null;
         CloseableHttpClient httpClient = getHttpClient(task.getSite());
         Proxy proxy = proxyProvider != null ? proxyProvider.getProxy(task) : null;
@@ -86,7 +85,7 @@ public Page download(Request request, Task task) {
             httpResponse = httpClient.execute(requestContext.getHttpUriRequest(), requestContext.getHttpClientContext());
             page = handleResponse(request, task.getSite().getCharset(), httpResponse, task);
             onSuccess(request);
-            logger.debug("downloading page success {}", page);
+            logger.info("downloading page success {}", request.getUrl());
             return page;
         } catch (IOException e) {
             logger.warn("download page {} error", request.getUrl(), e);

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -410,7 +410,6 @@ private void processRequest(Request request) {
     }
 
     private void onDownloadSuccess(Request request, Page page) {
-        onSuccess(request);
         if (site.getAcceptStatCode().contains(page.getStatusCode())){
             pageProcessor.process(page);
             extractAndAddRequests(page, spawnUrl);
@@ -431,7 +430,6 @@ private void onDownloaderFail(Request request) {
             // for cycle retry
             doCycleRetry(request);
         }
-        onError(request);
     }
 
     private void doCycleRetry(Request request) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/Formatter.java
Patch:
@@ -16,6 +16,8 @@
 @Target({ElementType.FIELD})
 public @interface Formatter {
 
+    Class<ObjectFormatter> DEFAULT_FORMATTER = ObjectFormatter.class;
+
     /**
      * Set formatter params.
      *
@@ -36,6 +38,6 @@
      * If there are more than one formatter for a class, just specify the implement.
      * @return implement
      */
-    Class<? extends ObjectFormatter> formatter() default ObjectFormatter.class;
+    Class<? extends ObjectFormatter> formatter() default DEFAULT_FORMATTER;
 
 }

File: webmagic-extension/src/test/java/us/codecraft/webmagic/model/PageMapperTest.java
Patch:
@@ -20,7 +20,7 @@ public class PageMapperTest {
 
     public static class GithubRepo {
 
-        @ExtractBy(type = ExtractBy.Type.JsonPath, value = "$.name")
+        @ExtractBy(type = ExtractBy.Type.JsonPath, value = "$.name",source = ExtractBy.Source.RawText)
         private String name;
 
         public String getName() {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java
Patch:
@@ -48,7 +48,7 @@ public void resetDuplicateCheck(Task task) {
     public boolean isDuplicate(Request request, Task task) {
         Jedis jedis = pool.getResource();
         try {
-            return jedis.sadd(getSetKey(task), request.getUrl()) > 0;
+            return jedis.sadd(getSetKey(task), request.getUrl()) == 0;
         } finally {
             pool.returnResource(jedis);
         }

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/RegexSelectorTest.java
Patch:
@@ -25,8 +25,8 @@ public void testRegexWithLeftBracketQuoted() {
 
     @Test
     public void testRegexWithZeroWidthAssertions() {
-        String regex = "^.*(?=\\?)";
-        String source = "hello world?xxxx";
+        String regex = "^.*(?=\\?)(?!\\?yy)";
+        String source = "hello world?xx?yy";
         RegexSelector regexSelector = new RegexSelector(regex);
         String select = regexSelector.select(source);
         Assertions.assertThat(select).isEqualTo("hello world");

File: webmagic-core/src/main/java/us/codecraft/webmagic/Site.java
Patch:
@@ -238,7 +238,7 @@ public Map<String, String> getHeaders() {
      * Put an Http header for downloader. <br>
      * Use {@link #addCookie(String, String)} for cookie and {@link #setUserAgent(String)} for user-agent. <br>
      *
-     * @param key   key of http header, there are some keys constant in {@link HeaderConst}
+     * @param key   key of http header, there are some keys constant in {@link HttpConstant.Header}
      * @param value value of header
      * @return this
      */

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -500,6 +500,7 @@ public Spider addUrl(String... urls) {
      * Download urls synchronizing.
      *
      * @param urls urls
+     * @param <T> type of process result
      * @return list downloaded
      */
     public <T> List<T> getAll(Collection<String> urls) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java
Patch:
@@ -38,7 +38,7 @@ public PhantomJSDownloader() {
      *    phantomjs --ignore-ssl-errors=yes 忽略抓取地址是https时的一些错误
      *    /usr/local/bin/phantomjs 命令的绝对路径，避免因系统环境变量引起的IOException
      *   
-     * @param phantomJsCommand
+     * @param phantomJsCommand phantomJsCommand
      */
     public PhantomJSDownloader(String phantomJsCommand) {
         this.initPhantomjsCrawlPath();

File: webmagic-core/src/main/java/us/codecraft/webmagic/selector/HtmlNode.java
Patch:
@@ -34,7 +34,7 @@ public Selectable smartContent() {
 
     @Override
     public Selectable links() {
-        return xpath("//a/@href");
+        return selectElements(new LinksSelector());
     }
 
     @Override

File: webmagic-core/src/main/java/us/codecraft/webmagic/utils/CharsetUtils.java
Patch:
@@ -26,7 +26,7 @@ public static String detectCharset(String contentType, byte[] contentBytes) thro
         // charset
         // 1、encoding in http header Content-Type
         charset = UrlUtils.getCharset(contentType);
-        if (StringUtils.isNotBlank(contentType)) {
+        if (StringUtils.isNotBlank(contentType) && StringUtils.isNotBlank(charset)) {
             logger.debug("Auto get charset: {}", charset);
             return charset;
         }

File: webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java
Patch:
@@ -15,6 +15,7 @@
 import us.codecraft.webmagic.Site;
 import us.codecraft.webmagic.Task;
 import us.codecraft.webmagic.selector.Html;
+import us.codecraft.webmagic.utils.CharsetUtils;
 import us.codecraft.webmagic.utils.HttpConstant;
 
 import java.io.IOException;
@@ -99,7 +100,7 @@ private String getCharsetByUrl(String url) {
                 String charset = null;
                 try {
                     byte[] contentBytes = IOUtils.toByteArray(httpResponse.getEntity().getContent());
-                    charset = downloader.getHtmlCharset(httpResponse,contentBytes);
+                    charset = CharsetUtils.detectCharset(httpResponse.getEntity().getContentType().getValue(), contentBytes);
                 } catch (IOException e) {
                     e.printStackTrace();
                 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -479,7 +479,9 @@ public Spider addUrl(String... urls) {
     public <T> List<T> getAll(Collection<String> urls) {
         destroyWhenExit = false;
         spawnUrl = false;
-        startRequests.clear();
+        if (startRequests!=null){
+            startRequests.clear();
+        }
         for (Request request : UrlUtils.convertToRequests(urls)) {
             addRequest(request);
         }

File: webmagic-core/src/test/java/us/codecraft/webmagic/SpiderTest.java
Patch:
@@ -19,12 +19,12 @@ public class SpiderTest {
     @Ignore("long time")
     @Test
     public void testStartAndStop() throws InterruptedException {
-        Spider spider = Spider.create(new SimplePageProcessor("http://www.oschina.net/", "http://www.oschina.net/*")).addPipeline(new Pipeline() {
+        Spider spider = Spider.create(new SimplePageProcessor( "http://www.oschina.net/*")).addPipeline(new Pipeline() {
             @Override
             public void process(ResultItems resultItems, Task task) {
                 System.out.println(1);
             }
-        }).thread(1);
+        }).thread(1).addUrl("http://www.oschina.net/");
         spider.start();
         Thread.sleep(10000);
         spider.stop();

File: webmagic-extension/src/test/java/us/codecraft/webmagic/processor/GithubRepoProcessor.java
Patch:
@@ -19,7 +19,7 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().addStartUrl("https://github.com/code4craft/webmagic");
+        return Site.me();
     }
 
     @Test

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/DiandianBlogProcessor.java
Patch:
@@ -35,7 +35,7 @@ public void process(Page page) {
     public Site getSite() {
         //site定义抽取配置，以及开始url等
         if (site == null) {
-            site = Site.me().setDomain("progressdaily.diandian.com").addStartUrl("http://progressdaily.diandian.com/").
+            site = Site.me().setDomain("progressdaily.diandian.com").
                     setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
         }
         return site;

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/DiaoyuwengProcessor.java
Patch:
@@ -34,13 +34,13 @@ public void process(Page page) {
     @Override
     public Site getSite() {
         if (site==null){
-            site= Site.me().setDomain("www.diaoyuweng.com").addStartUrl("http://www.diaoyuweng.com/home.php?mod=space&uid=88304&do=thread&view=me&type=thread&from=space").
+            site= Site.me().setDomain("www.diaoyuweng.com").
                     setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31").setCharset("GBK").setSleepTime(500);
         }
         return site;
     }
 
     public static void main(String[] args) {
-        Spider.create(new DiaoyuwengProcessor()).run();
+        Spider.create(new DiaoyuwengProcessor()).addUrl("http://www.diaoyuweng.com/home.php?mod=space&uid=88304&do=thread&view=me&type=thread&from=space").run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/F58PageProcesser.java
Patch:
@@ -25,10 +25,10 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("sh.58.com").addStartUrl("http://sh1.51a8.com/").setCycleRetryTimes(2);  //To change body of implemented methods use File | Settings | File Templates.
+        return Site.me().setDomain("sh.58.com").setCycleRetryTimes(2);  //To change body of implemented methods use File | Settings | File Templates.
     }
 
     public static void main(String[] args) {
-        Spider.create(new F58PageProcesser()).setScheduler(new RedisScheduler("localhost")).run();
+        Spider.create(new F58PageProcesser()).setScheduler(new RedisScheduler("localhost")).addUrl("http://sh1.51a8.com/").run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/HuxiuProcessor.java
Patch:
@@ -21,11 +21,11 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("www.huxiu.com").addStartUrl("http://www.huxiu.com/");
+        return Site.me().setDomain("www.huxiu.com");
     }
 
     public static void main(String[] args) {
-        Spider.create(new HuxiuProcessor()).run();
+        Spider.create(new HuxiuProcessor()).addUrl("http://www.huxiu.com/").run();
     }
 
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/InfoQMiniBookProcessor.java
Patch:
@@ -29,7 +29,7 @@ public void process(Page page) {
     @Override
     public Site getSite() {
         if (site == null) {
-            site = Site.me().setDomain("www.infoq.com").addStartUrl("http://www.infoq.com/cn/minibooks").addCookie("RegisteredUserCookie", "sDDDc8dIAgZSq67uJSXhtpQaHEi1XDOH").
+            site = Site.me().setDomain("www.infoq.com").addCookie("RegisteredUserCookie", "sDDDc8dIAgZSq67uJSXhtpQaHEi1XDOH").
                     setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
         }
         return site;
@@ -38,6 +38,7 @@ public Site getSite() {
     public static void main(String[] args) {
         Spider.create(new InfoQMiniBookProcessor())
                 .thread(5)
+                .addUrl("http://www.infoq.com/cn/minibooks")
                 .run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/IteyeBlogProcessor.java
Patch:
@@ -22,12 +22,12 @@ public void process(Page page) {
     @Override
     public Site getSite() {
         if (site == null) {
-            site = Site.me().setDomain("yanghaoli.iteye.com").addStartUrl("http://yanghaoli.iteye.com/");
+            site = Site.me().setDomain("yanghaoli.iteye.com");
         }
         return site;
     }
 
     public static void main(String[] args) {
-        Spider.create(new IteyeBlogProcessor()).thread(5).run();
+        Spider.create(new IteyeBlogProcessor()).thread(5).addUrl("http://yanghaoli.iteye.com/").run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/KaichibaProcessor.java
Patch:
@@ -22,11 +22,11 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("kaichiba.com").addStartUrl("http://kaichiba.com/shop/41725781").setCharset("utf-8").
+        return Site.me().setDomain("kaichiba.com").setCharset("utf-8").
                 setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
     }
 
     public static void main(String[] args) {
-        Spider.create(new KaichibaProcessor()).run();
+        Spider.create(new KaichibaProcessor()).addUrl("http://kaichiba.com/shop/41725781").run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/MeicanProcessor.java
Patch:
@@ -28,11 +28,11 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("meican.com").addStartUrl("http://www.meican.com/shanghai/districts").setCharset("utf-8").
+        return Site.me().setDomain("meican.com").setCharset("utf-8").
                 setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
     }
 
     public static void main(String[] args) {
-        Spider.create(new MeicanProcessor()).run();
+        Spider.create(new MeicanProcessor()).addUrl("http://www.meican.com/shanghai/districts").run();
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/QzoneBlogProcessor.java
Patch:
@@ -24,7 +24,7 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("www.diandian.com").addStartUrl("http://17dujingdian.com/").
+        return Site.me().setDomain("www.diandian.com").
                 setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
     }
 }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/TianyaPageProcesser.java
Patch:
@@ -21,6 +21,6 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        return Site.me().setDomain("http://bbs.tianya.cn/").addStartUrl("http://bbs.tianya.cn/");  //To change body of implemented methods use File | Settings | File Templates.
+        return Site.me().setDomain("http://bbs.tianya.cn/");  //To change body of implemented methods use File | Settings | File Templates.
     }
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -586,6 +586,7 @@ public Spider thread(ExecutorService executorService, int threadNum) {
         if (threadNum <= 0) {
             throw new IllegalArgumentException("threadNum should be more than one!");
         }
+        this.executorService = executorService;
         return this;
     }
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -586,6 +586,7 @@ public Spider thread(ExecutorService executorService, int threadNum) {
         if (threadNum <= 0) {
             throw new IllegalArgumentException("threadNum should be more than one!");
         }
+        this.executorService = executorService;
         return this;
     }
 

File: webmagic-selenium/src/test/java/us/codecraft/webmagic/samples/HuabanProcessor.java
Patch:
@@ -22,7 +22,7 @@ public class HuabanProcessor implements PageProcessor {
     public void process(Page page) {
         page.addTargetRequests(page.getHtml().links().regex("http://huaban\\.com/.*").all());
         if (page.getUrl().toString().contains("pins")) {
-            page.putField("img", page.getHtml().xpath("//div[@id='pin_img']/a/img/@src").toString());
+            page.putField("img", page.getHtml().xpath("//div[@class='image-holder']/a/img/@src").toString());
         } else {
             page.getResultItems().setSkip(true);
         }

File: webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java
Patch:
@@ -18,7 +18,7 @@ public void process(Page page) {
         page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-]+/[\\w\\-]+)").all());
         page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-])").all());
         page.putField("author", page.getUrl().regex("https://github\\.com/(\\w+)/.*").toString());
-        page.putField("name", page.getHtml().xpath("//h1[@class='entry-title public']/strong/a/text()").toString());
+        page.putField("name", page.getHtml().xpath("//h1[@class='public']/strong/a/text()").toString());
         if (page.getResultItems().get("name")==null){
             //skip this page
             page.setSkip(true);

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -1,6 +1,5 @@
 package us.codecraft.webmagic.downloader;
 
-import com.google.common.collect.Sets;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpHost;
@@ -28,6 +27,7 @@
 import us.codecraft.webmagic.selector.PlainText;
 import us.codecraft.webmagic.utils.HttpConstant;
 import us.codecraft.webmagic.utils.UrlUtils;
+import us.codecraft.webmagic.utils.WMCollections;
 
 import java.io.IOException;
 import java.nio.charset.Charset;
@@ -83,7 +83,7 @@ public Page download(Request request, Task task) {
             charset = site.getCharset();
             headers = site.getHeaders();
         } else {
-            acceptStatCode = Sets.newHashSet(200);
+            acceptStatCode = WMCollections.newHashSet(200);
         }
         logger.info("downloading page {}", request.getUrl());
         CloseableHttpResponse httpResponse = null;

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/component/HashSetDuplicateRemover.java
Patch:
@@ -1,9 +1,9 @@
 package us.codecraft.webmagic.scheduler.component;
 
-import com.google.common.collect.Sets;
 import us.codecraft.webmagic.Request;
 import us.codecraft.webmagic.Task;
 
+import java.util.Collections;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 
@@ -12,7 +12,7 @@
  */
 public class HashSetDuplicateRemover implements DuplicateRemover {
 
-    private Set<String> urls = Sets.newSetFromMap(new ConcurrentHashMap<String, Boolean>());
+    private Set<String> urls = Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());
 
     @Override
     public boolean isDuplicate(Request request, Task task) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/selector/Selectors.java
Patch:
@@ -33,11 +33,11 @@ public static XpathSelector xpath(String expr) {
     }
 
     /**
-     * @Deprecated
      * @see #xpath(String)
      * @param expr expr
      * @return new selector
      */
+    @Deprecated
     public static XpathSelector xsoup(String expr) {
         return new XpathSelector(expr);
     }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/configurable/ExpressionType.java
Patch:
@@ -2,7 +2,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-5
  */
 public enum ExpressionType {
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/configurable/ExtractRule.java
Patch:
@@ -7,7 +7,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-5
  */
 public class ExtractRule {
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/PhantomJSDownloader.java
Patch:
@@ -37,7 +37,7 @@ public PhantomJSDownloader() {
        *    phantomjs --ignore-ssl-errors=yes 忽略抓取地址是https时的一些错误
        *    /usr/local/bin/phantomjs 命令的绝对路径，避免因系统环境变量引起的IOException
        *   
-       * @param phantomJsCommand
+       * @param phantomJsCommand phantomJsCommand
        */
     public PhantomJSDownloader(String phantomJsCommand) {
         this.initPhantomjsCrawlPath();

File: webmagic-extension/src/main/java/us/codecraft/webmagic/handler/CompositePageProcessor.java
Patch:
@@ -9,7 +9,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-5
  */
 public class CompositePageProcessor implements PageProcessor {
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/handler/SubPageProcessor.java
Patch:
@@ -4,7 +4,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-5
  */
 public interface SubPageProcessor extends RequestMatcher {
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/monitor/SpiderMonitor.java
Patch:
@@ -45,6 +45,7 @@ protected SpiderMonitor() {
      *
      * @param spiders spiders
      * @return this
+     * @throws JMException
      */
     public synchronized SpiderMonitor register(Spider... spiders) throws JMException {
         for (Spider spider : spiders) {

File: webmagic-extension/src/test/java/us/codecraft/webmagic/scheduler/BloomFilterDuplicateRemoverTest.java
Patch:
@@ -3,7 +3,6 @@
 import org.junit.Ignore;
 import org.junit.Test;
 import us.codecraft.webmagic.Request;
-import us.codecraft.webmagic.scheduler.component.BloomFilterDuplicateRemover;
 import us.codecraft.webmagic.scheduler.component.DuplicateRemover;
 import us.codecraft.webmagic.scheduler.component.HashSetDuplicateRemover;
 

File: webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/BaiduNews.java
Patch:
@@ -6,7 +6,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-9
  */
 public class BaiduNews {
 

File: webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/QQMeishi.java
Patch:
@@ -8,7 +8,6 @@
 
 /**
  * @author code4crafter@gmail.com
- * @date 14-4-11
  */
 @TargetUrl("http://meishi.qq.com/beijing/c/all[\\-p2]*")
 @ExtractBy(value = "//ul[@id=\"promos_list2\"]/li",multi = true)

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/OschinaBlogPageProcesser.java
Patch:
@@ -5,8 +5,8 @@
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.monitor.SpiderMonitor;
 import us.codecraft.webmagic.processor.PageProcessor;
+import us.codecraft.webmagic.scheduler.BloomFilterDuplicateRemover;
 import us.codecraft.webmagic.scheduler.QueueScheduler;
-import us.codecraft.webmagic.scheduler.component.BloomFilterDuplicateRemover;
 
 import javax.management.JMException;
 import java.util.List;

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/PhantomJSPageProcessor.java
Patch:
@@ -13,7 +13,7 @@
 
 /**
  * Created by dolphineor on 2014-11-21.
- * <p/>
+ * <p>
  * 以淘宝为例, 搜索冬装的相关结果
  */
 public class PhantomJSPageProcessor implements PageProcessor {

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/pipeline/OneFilePipeline.java
Patch:
@@ -19,9 +19,6 @@ public class OneFilePipeline extends FilePersistentBase implements Pipeline {
 
     private PrintWriter printWriter;
 
-    /**
-     * create a FilePipeline with default path"/data/webmagic/"
-     */
     public OneFilePipeline() throws FileNotFoundException, UnsupportedEncodingException {
         this("/data/webmagic/");
     }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/example/MonitorExample.java
Patch:
@@ -13,14 +13,14 @@ public class MonitorExample {
 
     public static void main(String[] args) throws Exception {
 
-        Spider zhihuPageProcessor = Spider.create(new ZhihuPageProcessor())
+        Spider zhihuSpider = Spider.create(new ZhihuPageProcessor())
                 .addUrl("http://my.oschina.net/flashsword/blog");
         Spider githubSpider = Spider.create(new GithubRepoPageProcessor())
                 .addUrl("https://github.com/code4craft");
 
-        SpiderMonitor.instance().register(zhihuPageProcessor);
+        SpiderMonitor.instance().register(zhihuSpider);
         SpiderMonitor.instance().register(githubSpider);
-        zhihuPageProcessor.start();
+        zhihuSpider.start();
         githubSpider.start();
     }
 }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisPriorityScheduler.java
Patch:
@@ -1,9 +1,8 @@
 package us.codecraft.webmagic.scheduler;
 
 import com.alibaba.fastjson.JSON;
-import com.sun.org.apache.regexp.internal.RE;
 import org.apache.commons.codec.digest.DigestUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import redis.clients.jedis.Jedis;
 import redis.clients.jedis.JedisPool;
 import us.codecraft.webmagic.Request;

File: webmagic-extension/src/test/java/us/codecraft/webmagic/monitor/SpiderMonitorTest.java
Patch:
@@ -3,7 +3,7 @@
 import org.junit.Test;
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.processor.example.GithubRepoPageProcessor;
-import us.codecraft.webmagic.processor.example.OschinaBlogPageProcessor;
+import us.codecraft.webmagic.processor.example.ZhihuPageProcessor;
 
 /**
  * @author code4crafer@gmail.com
@@ -20,12 +20,12 @@ protected SpiderStatusMXBean getSpiderStatusMBean(Spider spider, MonitorSpiderLi
             }
         };
 
-        Spider oschinaSpider = Spider.create(new OschinaBlogPageProcessor())
+        Spider zhihuSpider = Spider.create(new ZhihuPageProcessor())
                 .addUrl("http://my.oschina.net/flashsword/blog").thread(2);
         Spider githubSpider = Spider.create(new GithubRepoPageProcessor())
                 .addUrl("https://github.com/code4craft");
 
-        spiderMonitor.register(oschinaSpider, githubSpider);
+        spiderMonitor.register(zhihuSpider, githubSpider);
 
     }
 }

File: webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class HttpClientDownloaderTest {
 
+    public static final String PAGE_ALWAYS_NOT_EXISTS = "http://localhost:13421/404";
+
     @Ignore
     @Test
     public void testCookie() {
@@ -52,7 +54,7 @@ public void testDownloaderInIllegalUrl() throws UnsupportedEncodingException {
     public void testCycleTriedTimes() {
         HttpClientDownloader httpClientDownloader = new HttpClientDownloader();
         Task task = Site.me().setDomain("localhost").setCycleRetryTimes(5).toTask();
-        Request request = new Request("http://localhost/404");
+        Request request = new Request(PAGE_ALWAYS_NOT_EXISTS);
         Page page = httpClientDownloader.download(request, task);
         assertThat(page.getTargetRequests().size() > 0);
         assertThat((Integer) page.getTargetRequests().get(0).getExtra(Request.CYCLE_TRIED_TIMES)).isEqualTo(1);

File: webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java
Patch:
@@ -11,11 +11,11 @@
  */
 public class GithubRepoPageProcessor implements PageProcessor {
 
-    private Site site = Site.me().setRetryTimes(3).setSleepTime(0);
+    private Site site = Site.me().setRetryTimes(3).setSleepTime(1000);
 
     @Override
     public void process(Page page) {
-        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-]+/[\\w\\-])").all());
+        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-]+/[\\w\\-]+)").all());
         page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-])").all());
         page.putField("author", page.getUrl().regex("https://github\\.com/(\\w+)/.*").toString());
         page.putField("name", page.getHtml().xpath("//h1[@class='entry-title public']/strong/a/text()").toString());

File: webmagic-core/src/test/java/us/codecraft/webmagic/proxy/ProxyTest.java
Patch:
@@ -4,7 +4,6 @@
 import org.junit.BeforeClass;
 import org.junit.Test;
 
-import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -33,7 +32,6 @@ public void testProxy() {
 		SimpleProxyPool proxyPool = new SimpleProxyPool(httpProxyList,false);
 		proxyPool.setReuseInterval(500);
 		assertThat(proxyPool.getIdleNum()).isEqualTo(4);
-		assertThat(new File(proxyPool.getProxyFilePath()).exists()).isEqualTo(true);
 		for (int i = 0; i < 2; i++) {
 			List<Fetch> fetchList = new ArrayList<Fetch>();
 			while (proxyPool.getIdleNum() != 0) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/monitor/SpiderMonitor.java
Patch:
@@ -6,6 +6,7 @@
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.SpiderListener;
 import us.codecraft.webmagic.utils.Experimental;
+import us.codecraft.webmagic.utils.UrlUtils;
 
 import javax.management.*;
 import java.lang.management.ManagementFactory;
@@ -103,7 +104,8 @@ public List<String> getErrorUrls() {
     }
 
     protected void registerMBean(SpiderStatusMXBean spiderStatus) throws MalformedObjectNameException, InstanceAlreadyExistsException, MBeanRegistrationException, NotCompliantMBeanException {
-        ObjectName objName = new ObjectName(jmxServerName + ":name=" + spiderStatus.getName());
+//        ObjectName objName = new ObjectName(jmxServerName + ":name=" + spiderStatus.getName());
+        ObjectName objName = new ObjectName(jmxServerName + ":name=" + UrlUtils.removePort(spiderStatus.getName()));
         mbeanServer.registerMBean(spiderStatus, objName);
     }
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/Extractor.java
Patch:
@@ -17,7 +17,7 @@ class Extractor {
 
     protected final boolean multi;
 
-    static enum Source {Html, Url, RawHtml}
+    static enum Source {Html, Url, RawHtml, RawText}
 
     public Extractor(Selector selector, Source source, boolean notNull, boolean multi) {
         this.selector = selector;

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/ExtractBy.java
Patch:
@@ -52,7 +52,8 @@ public static enum Source {
         /**
          * extract from the raw html
          */
-        RawHtml
+        RawHtml,
+        RawText
     }
 
     /**

File: webmagic-core/src/test/java/us/codecraft/webmagic/proxy/ProxyTest.java
Patch:
@@ -30,7 +30,7 @@ public static void before() {
 
 	@Test
 	public void testProxy() {
-		SimpleProxyPool proxyPool = new SimpleProxyPool(httpProxyList);
+		SimpleProxyPool proxyPool = new SimpleProxyPool(httpProxyList,false);
 		proxyPool.setReuseInterval(500);
 		assertThat(proxyPool.getIdleNum()).isEqualTo(4);
 		assertThat(new File(proxyPool.getProxyFilePath()).exists()).isEqualTo(true);

File: webmagic-extension/src/main/java/us/codecraft/webmagic/monitor/SpiderMonitor.java
Patch:
@@ -6,6 +6,7 @@
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.SpiderListener;
 import us.codecraft.webmagic.utils.Experimental;
+import us.codecraft.webmagic.utils.UrlUtils;
 
 import javax.management.*;
 import java.lang.management.ManagementFactory;
@@ -103,7 +104,8 @@ public List<String> getErrorUrls() {
     }
 
     protected void registerMBean(SpiderStatusMXBean spiderStatus) throws MalformedObjectNameException, InstanceAlreadyExistsException, MBeanRegistrationException, NotCompliantMBeanException {
-        ObjectName objName = new ObjectName(jmxServerName + ":name=" + spiderStatus.getName());
+//        ObjectName objName = new ObjectName(jmxServerName + ":name=" + spiderStatus.getName());
+        ObjectName objName = new ObjectName(jmxServerName + ":name=" + UrlUtils.removePort(spiderStatus.getName()));
         mbeanServer.registerMBean(spiderStatus, objName);
     }
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/Extractor.java
Patch:
@@ -17,7 +17,7 @@ class Extractor {
 
     protected final boolean multi;
 
-    static enum Source {Html, Url, RawHtml}
+    static enum Source {Html, Url, RawHtml, RawText}
 
     public Extractor(Selector selector, Source source, boolean notNull, boolean multi) {
         this.selector = selector;

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/ExtractBy.java
Patch:
@@ -52,7 +52,8 @@ public static enum Source {
         /**
          * extract from the raw html
          */
-        RawHtml
+        RawHtml,
+        RawText
     }
 
     /**

File: webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java
Patch:
@@ -15,8 +15,8 @@ public class GithubRepoPageProcessor implements PageProcessor {
 
     @Override
     public void process(Page page) {
-        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/\\w+/\\w+)").all());
-        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/\\w+)").all());
+        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-]+/[\\w\\-])").all());
+        page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/[\\w\\-])").all());
         page.putField("author", page.getUrl().regex("https://github\\.com/(\\w+)/.*").toString());
         page.putField("name", page.getHtml().xpath("//h1[@class='entry-title public']/strong/a/text()").toString());
         if (page.getResultItems().get("name")==null){

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -408,9 +408,7 @@ public void test(String... urls) {
     protected void processRequest(Request request) {
         Page page = downloader.download(request, this);
         if (page == null) {
-            sleep(site.getRetrySleepTime());
-            onError(request);
-            return;
+            throw new RuntimeException("unaccpetable response status");
         }
         // for cycle retry
         if (page.isNeedCycleRetry()) {

File: webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java
Patch:
@@ -20,14 +20,14 @@ public void testRegexSelector() {
 		assertThat(selectable.regex("(a+b)").replace("aa(a)", "$1bb").toString()).isEqualTo("abbabbab");
     }
 
+	@Ignore("not work in jsoup 1.8.x")
 	@Test
 	public void testDisableJsoupHtmlEntityEscape() throws Exception {
 		Html.DISABLE_HTML_ENTITY_ESCAPE = true;
 		Html html = new Html("aaaaaaa&b");
 		assertThat(html.regex("(aaaaaaa&b)").toString()).isEqualTo("aaaaaaa&b");
 	}
 
-	@Ignore("not work in jsoup 1.8.x")
 	@Test
 	public void testEnableJsoupHtmlEntityEscape() throws Exception {
 		Html.DISABLE_HTML_ENTITY_ESCAPE = false;

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java
Patch:
@@ -119,7 +119,7 @@ public int getLeftRequestsCount(Task task) {
     public int getTotalRequestsCount(Task task) {
         Jedis jedis = pool.getResource();
         try {
-            Long size = jedis.scard(getQueueKey(task));
+            Long size = jedis.scard(getSetKey(task));
             return size.intValue();
         } finally {
             pool.returnResource(jedis);

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/GithubRepoPageProcessor.java
Patch:
@@ -19,7 +19,7 @@ public void process(Page page) {
         page.addTargetRequests(page.getHtml().links().regex("(https://github\\.com/\\w+)").all());
         GithubRepo githubRepo = new GithubRepo();
         githubRepo.setAuthor(page.getUrl().regex("https://github\\.com/(\\w+)/.*").toString());
-        githubRepo.setName(page.getHtml().xpath("//h1[@class='entry-title public']/strong/a/text()").toString());
+        githubRepo.setName(page.getHtml().xpath("//h1[contains(@class, 'entry-title') and contains(@class, 'public')]/strong/a/text()").toString());
         githubRepo.setReadme(page.getHtml().xpath("//div[@id='readme']/tidyText()").toString());
         if (githubRepo.getName() == null) {
             //skip this page

File: webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java
Patch:
@@ -39,7 +39,7 @@ public void testAHrefExtract(){
 		assertThat(html.links().all()).contains("/xx/xx");
 	}
 
-	@Test(expected = NullPointerException)
+	@Test(expected = NullPointerException.class)
 	public void testNthNodesGet(){
 		Html html = new Html("<a data-tip=\"p$t$xxx\" href=\"/xx/xx\">xx</a>");
 		assertThat(html.xpath("//a[1]/@href").get()).isEqualTo("/xx/xx");

File: webmagic-extension/src/main/java/us/codecraft/webmagic/utils/DoubleKeyMap.java
Patch:
@@ -75,8 +75,9 @@ public V put(K1 key1, Map<K2, V> submap) {
      * @param value
      * @return value
      */
-    public V put(K1 key1, K2 key2, V value) {
+    public synchronized V put(K1 key1, K2 key2, V value) {
         if (map.get(key1) == null) {
+            //不加锁的话，多个线程有可能都会执行到这里
             map.put(key1, this.<K2, V>newMap());
         }
         return get(key1).put(key2, value);
@@ -87,7 +88,7 @@ public V put(K1 key1, K2 key2, V value) {
      * @param key2
      * @return value
      */
-    public V remove(K1 key1, K2 key2) {
+    public synchronized V remove(K1 key1, K2 key2) {
         if (get(key1) == null) {
             return null;
         }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/utils/DoubleKeyMap.java
Patch:
@@ -75,8 +75,9 @@ public V put(K1 key1, Map<K2, V> submap) {
      * @param value
      * @return value
      */
-    public V put(K1 key1, K2 key2, V value) {
+    public synchronized V put(K1 key1, K2 key2, V value) {
         if (map.get(key1) == null) {
+            //不加锁的话，多个线程有可能都会执行到这里
             map.put(key1, this.<K2, V>newMap());
         }
         return get(key1).put(key2, value);
@@ -87,7 +88,7 @@ public V put(K1 key1, K2 key2, V value) {
      * @param key2
      * @return value
      */
-    public V remove(K1 key1, K2 key2) {
+    public synchronized V remove(K1 key1, K2 key2) {
         if (get(key1) == null) {
             return null;
         }

File: webmagic-core/src/main/java/us/codecraft/webmagic/Site.java
Patch:
@@ -331,7 +331,7 @@ public int getCycleRetryTimes() {
     }
 
     /**
-     * Set cycleRetryTimes times when download fail, 0 by default. Only work in RedisScheduler. <br>
+     * Set cycleRetryTimes times when download fail, 0 by default. <br>
      *
      * @return this
      */

File: webmagic-extension/src/test/java/us/codecraft/webmagic/configurable/ConfigurablePageProcessorTest.java
Patch:
@@ -32,7 +32,7 @@ public void test() throws Exception {
         extractRules.add(extractRule);
         ResultItems resultItems = Spider.create(new ConfigurablePageProcessor(Site.me(), extractRules))
                 .setDownloader(new MockGithubDownloader()).get("https://github.com/code4craft/webmagic");
-        assertThat(resultItems.getAll()).containsEntry("title", "<title>code4craft/webmagic &middot; GitHub</title>");
+        assertThat(resultItems.getAll()).containsEntry("title", "<title>code4craft/webmagic · GitHub</title>");
         assertThat(resultItems.getAll()).containsEntry("star", " 86 ");
 
     }

File: webmagic-core/src/test/java/us/codecraft/webmagic/HtmlTest.java
Patch:
@@ -20,6 +20,7 @@ public void testRegexSelector() {
 
 	@Test
 	public void testDisableJsoupHtmlEntityEscape() throws Exception {
+		Html.DISABLE_HTML_ENTITY_ESCAPE = true;
 		Html html = new Html("aaaaaaa&b");
 		assertThat(html.regex("(aaaaaaa&b)").toString()).isEqualTo("aaaaaaa&b");
 	}

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -14,7 +14,7 @@
 import us.codecraft.webmagic.processor.PageProcessor;
 import us.codecraft.webmagic.scheduler.QueueScheduler;
 import us.codecraft.webmagic.scheduler.Scheduler;
-import us.codecraft.webmagic.selector.thread.CountableThreadPool;
+import us.codecraft.webmagic.thread.CountableThreadPool;
 import us.codecraft.webmagic.utils.UrlUtils;
 
 import java.io.Closeable;

File: webmagic-core/src/main/java/us/codecraft/webmagic/thread/CountableThreadPool.java
Patch:
@@ -1,4 +1,4 @@
-package us.codecraft.webmagic.selector.thread;
+package us.codecraft.webmagic.thread;
 
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -141,8 +141,8 @@ protected HttpUriRequest getHttpUriRequest(Request request, Site site, Map<Strin
                 .setSocketTimeout(site.getTimeOut())
                 .setConnectTimeout(site.getTimeOut())
                 .setCookieSpec(CookieSpecs.BEST_MATCH);
-		if (site.getHttpProxyPool().isEnable()) {
-			HttpHost host = site.getHttpProxyFromPool();
+        if (site.getHttpProxyPool() != null && site.getHttpProxyPool().isEnable()) {
+            HttpHost host = site.getHttpProxyFromPool();
 			requestConfigBuilder.setProxy(host);
 			request.putExtra(Request.PROXY, host);
 		}

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -424,6 +424,8 @@ protected void processRequest(Request request) {
                 pipeline.process(page.getResultItems(), this);
             }
         }
+        //for proxy status management
+        request.putExtra(Request.STATUS_CODE, page.getStatusCode());
         sleep(site.getSleepTime());
     }
 

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/SelectorTest.java
Patch:
@@ -28,7 +28,6 @@ public void testChain() throws Exception {
     public void testNodes() throws Exception {
         Html selectable = new Html(html);
         List<Selectable> links = selectable.xpath("//a").nodes();
-        assertThat(links.get(0).xpath("/@href").get()).isEqualTo("http://whatever.com/aaa");
-        assertThat(links.get(1).xpath("/@href").get()).isEqualTo("http://whatever.com/bbb");
+        assertThat(links.get(0).links().get()).isEqualTo("http://whatever.com/aaa");
     }
 }

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/RegexSelectorTest.java
Patch:
@@ -1,6 +1,6 @@
 package us.codecraft.webmagic.selector;
 
-import org.junit.Assert;
+import org.assertj.core.api.Assertions;
 import org.junit.Test;
 
 /**
@@ -20,6 +20,6 @@ public void testRegexWithLeftBracketQuoted() {
         String source = "(hello world";
         RegexSelector regexSelector = new RegexSelector(regex);
         String select = regexSelector.select(source);
-        Assert.assertEquals(source,select);
+        Assertions.assertThat(select).isEqualTo(source);
     }
 }

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/SelectorTest.java
Patch:
@@ -28,8 +28,7 @@ public void testChain() throws Exception {
     public void testNodes() throws Exception {
         Html selectable = new Html(html);
         List<Selectable> links = selectable.xpath("//a").nodes();
-        for (Selectable link : links) {
-            System.out.println(link.xpath("/@href"));
-        }
+        assertThat(links.get(0).xpath("/@href").get()).isEqualTo("http://whatever.com/aaa");
+        assertThat(links.get(1).xpath("/@href").get()).isEqualTo("http://whatever.com/bbb");
     }
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/DuplicateRemovedScheduler.java
Patch:
@@ -5,6 +5,7 @@
 import us.codecraft.webmagic.Request;
 import us.codecraft.webmagic.Task;
 import us.codecraft.webmagic.scheduler.component.DuplicateRemover;
+import us.codecraft.webmagic.scheduler.component.HashSetDuplicateRemover;
 
 /**
  * Remove duplicate urls and only push urls which are not duplicate.<br></br>
@@ -16,7 +17,7 @@ public abstract class DuplicateRemovedScheduler implements Scheduler {
 
     protected Logger logger = LoggerFactory.getLogger(getClass());
 
-    private DuplicateRemover duplicatedRemover;
+    private DuplicateRemover duplicatedRemover = new HashSetDuplicateRemover();
 
     public DuplicateRemover getDuplicateRemover() {
         return duplicatedRemover;

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/component/BloomFilterDuplicateRemover.java
Patch:
@@ -43,7 +43,7 @@ protected BloomFilter<CharSequence> rebuildBloomFilter() {
     public boolean isDuplicate(Request request, Task task) {
         boolean isDuplicate = bloomFilter.mightContain(request.getUrl());
         if (!isDuplicate) {
-            bloomFilter.apply(request.getUrl());
+            bloomFilter.put(request.getUrl());
             counter.incrementAndGet();
         }
         return isDuplicate;

File: webmagic-core/src/test/java/us/codecraft/webmagic/scheduler/BloomFilterDuplicateRemoverTest.java
Patch:
@@ -17,11 +17,11 @@ public void testRemove() throws Exception {
         boolean isDuplicate = bloomFilterDuplicateRemover.isDuplicate(new Request("a"), null);
         assertThat(isDuplicate).isFalse();
         isDuplicate = bloomFilterDuplicateRemover.isDuplicate(new Request("a"), null);
-        assertThat(isDuplicate);
+        assertThat(isDuplicate).isTrue();
         isDuplicate = bloomFilterDuplicateRemover.isDuplicate(new Request("b"), null);
         assertThat(isDuplicate).isFalse();
         isDuplicate = bloomFilterDuplicateRemover.isDuplicate(new Request("b"), null);
-        assertThat(isDuplicate);
+        assertThat(isDuplicate).isTrue();
 
     }
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/utils/FilePersistentBase.java
Patch:
@@ -22,10 +22,10 @@ public class FilePersistentBase {
     }
 
     public void setPath(String path) {
-        this.path = path;
         if (!path.endsWith(PATH_SEPERATOR)) {
             path += PATH_SEPERATOR;
         }
+        this.path = path;
     }
 
     public File getFile(String fullName) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/DuplicatedRemoveScheduler.java
Patch:
@@ -18,7 +18,7 @@ public abstract class DuplicatedRemoveScheduler implements Scheduler {
     @Override
     public void push(Request request, Task task) {
         logger.trace("get a candidate url {}", request.getUrl());
-        if (isDuplicate(request, task) || shouldReserved(request)) {
+        if (!isDuplicate(request, task) || shouldReserved(request)) {
             logger.debug("push to queue {}", request.getUrl());
             pushWhenNoDuplicate(request, task);
         }

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/LocalDuplicatedRemoveScheduler.java
Patch:
@@ -24,7 +24,7 @@ public void resetDuplicateCheck(Task task) {
 
     @Override
     protected boolean isDuplicate(Request request, Task task) {
-        return urls.add(request.getUrl());
+        return !urls.add(request.getUrl());
     }
 
     @Override

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java
Patch:
@@ -46,7 +46,7 @@ public void resetDuplicateCheck(Task task) {
     protected boolean isDuplicate(Request request, Task task) {
         Jedis jedis = pool.getResource();
         try {
-            boolean isDuplicate = !jedis.sismember(getSetKey(task), request.getUrl());
+            boolean isDuplicate = jedis.sismember(getSetKey(task), request.getUrl());
             if (!isDuplicate) {
                 jedis.sadd(getSetKey(task), request.getUrl());
             }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/OschinaBlogPageProcesser.java
Patch:
@@ -4,6 +4,7 @@
 import us.codecraft.webmagic.Site;
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.processor.PageProcessor;
+import us.codecraft.webmagic.scheduler.RedisScheduler;
 
 import java.util.List;
 
@@ -30,6 +31,6 @@ public Site getSite() {
     }
 
     public static void main(String[] args) {
-        Spider.create(new OschinaBlogPageProcesser()).run();
+        Spider.create(new OschinaBlogPageProcesser()).setScheduler(new RedisScheduler("localhost")).run();
     }
 }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/example/MonitorExample.java
Patch:
@@ -20,6 +20,7 @@ public static void main(String[] args) throws Exception {
 
         SpiderMonitor.instance().register(oschinaSpider);
         SpiderMonitor.instance().register(githubSpider);
-
+        oschinaSpider.start();
+        githubSpider.start();
     }
 }

File: webmagic-avalon/webmagic-worker/src/main/java/us/codecraft/webmagic/worker/Worker.java
Patch:
@@ -1,11 +1,11 @@
 package us.codecraft.webmagic.worker;
 
 import us.codecraft.webmagic.Spider;
-import us.codecraft.webmagic.utils.ThreadUtils;
 
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
 
 /**
  * Container of Spiders.
@@ -33,7 +33,7 @@ public Worker() {
     }
 
     protected ExecutorService initExecutorService() {
-        return ThreadUtils.newFixedThreadPool(poolSize);
+        return Executors.newFixedThreadPool(poolSize);
     }
 
     public void addSpider(Spider spider) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -401,7 +401,7 @@ protected void processRequest(Request request) {
         Page page = downloader.download(request, this);
         if (page == null) {
             sleep(site.getSleepTime());
-            throw new IllegalStateException("download error");
+            onError(request);
         }
         // for cycle retry
         if (page.isNeedCycleRetry()) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/Site.java
Patch:
@@ -123,7 +123,7 @@ public Map<String, String> getCookies() {
      * @return get cookies
      */
     public Map<String,Map<String, String>> getAllCookies() {
-        return cookies.columnMap();
+        return cookies.rowMap();
     }
 
     /**

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/ModelPageProcessor.java
Patch:
@@ -7,9 +7,7 @@
 import us.codecraft.webmagic.selector.Selector;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
-import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -66,7 +64,7 @@ private void extractLinks(Page page, Selector urlRegionSelector, List<Pattern> u
         if (urlRegionSelector == null) {
             links = page.getHtml().links().all();
         } else {
-            links = urlRegionSelector.selectList(page.getHtml().toString());
+            links = page.getHtml().selectList(urlRegionSelector).links().all();
         }
         for (String link : links) {
             for (Pattern targetUrlPattern : urlPatterns) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/PageModelExtractor.java
Patch:
@@ -53,7 +53,6 @@ public static PageModelExtractor create(Class clazz) {
     private void init(Class clazz) {
         this.clazz = clazz;
         initClassExtractors();
-        clazz.getDeclaredFields()
         fieldExtractors = new ArrayList<FieldExtractor>();
         for (Field field : ClassUtils.getFieldsIncludeSuperClass(clazz)) {
             field.setAccessible(true);

File: webmagic-core/src/main/java/us/codecraft/webmagic/Page.java
Patch:
@@ -127,7 +127,7 @@ public void addTargetRequests(List<String> requests, long priority) {
         synchronized (targetRequests) {
             for (String s : requests) {
                 if (StringUtils.isBlank(s) || s.equals("#") || s.startsWith("javascript:")) {
-                    break;
+                    continue;
                 }
                 s = UrlUtils.canonicalizeUrl(s, url.toString());
                 targetRequests.add(new Request(s).setPriority(priority));

File: webmagic-core/src/main/java/us/codecraft/webmagic/scheduler/LocalDuplicatedRemovedScheduler.java
Patch:
@@ -23,8 +23,9 @@ public abstract class LocalDuplicatedRemovedScheduler implements Scheduler {
 
     @Override
     public void push(Request request, Task task) {
-        logger.debug("push to queue " + request.getUrl());
+        logger.trace("get a candidate url " + request.getUrl());
         if (request.getExtra(Request.CYCLE_TRIED_TIMES) != null || urls.add(request.getUrl())) {
+        	logger.debug("push to queue " + request.getUrl());
             pushWhenNoDuplicate(request, task);
         }
     }

File: webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/GithubRepoPageProcessor.java
Patch:
@@ -11,7 +11,7 @@
  */
 public class GithubRepoPageProcessor implements PageProcessor {
 
-    private Site site = Site.me().setRetryTimes(3).setSleepTime(100);
+    private Site site = Site.me().setRetryTimes(3).setSleepTime(1000);
 
     @Override
     public void process(Page page) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/Page.java
Patch:
@@ -94,7 +94,7 @@ public void addTargetRequests(List<String> requests) {
         synchronized (targetRequests) {
             for (String s : requests) {
                 if (StringUtils.isBlank(s) || s.equals("#") || s.startsWith("javascript:")) {
-                    break;
+                    continue;
                 }
                 s = UrlUtils.canonicalizeUrl(s, url.toString());
                 targetRequests.add(new Request(s));

File: webmagic-extension/src/main/java/us/codecraft/webmagic/example/OschinaBlog.java
Patch:
@@ -26,11 +26,11 @@ public class OschinaBlog {
     @ExtractBy(value = "//div[@class='BlogTags']/a/text()", multi = true)
     private List<String> tags;
 
-    @Formatter("yyyy-MM-dd HH:mm")
     @ExtractBy("//div[@class='BlogStat']/regex('\\d+-\\d+-\\d+\\s+\\d+:\\d+')")
     private Date date;
 
     public static void main(String[] args) {
+        //results will be saved to "/data/webmagic/" in json format
         OOSpider.create(Site.me(), new JsonFilePageModelPipeline("/data/webmagic/"), OschinaBlog.class)
                 .addUrl("http://my.oschina.net/flashsword/blog").run();
     }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/Formatter.java
Patch:
@@ -21,7 +21,7 @@
      *
      * @return formatter params
      */
-    String[] value();
+    String[] value() default "";
 
     /**
      * Specific the class of field of class of elements in collection for field. <br/>

File: webmagic-avalon/src/main/java/us/codecraft/webmagic/avalon/web/DashBoardController.java
Patch:
@@ -12,7 +12,7 @@
 public class DashBoardController {
 
     @RequestMapping
-    public ModelAndView create() {
+    public ModelAndView index() {
         ModelAndView map = new ModelAndView("dashboard");
         return map;
     }

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -156,7 +156,7 @@ private Page addToCycleRetry(Request request, Site site) {
             if (cycleTriedTimes >= site.getCycleRetryTimes()) {
                 return null;
             }
-            page.addTargetRequest(request.setPriority(0).putExtra(Request.CYCLE_TRIED_TIMES, 1));
+            page.addTargetRequest(request.setPriority(0).putExtra(Request.CYCLE_TRIED_TIMES, cycleTriedTimes));
         }
         return page;
     }

File: webmagic-scripts/src/main/java/us/codecraft/webmagic/scripts/ScriptConsole.java
Patch:
@@ -118,6 +118,7 @@ private static Params parseCommand(String[] args) {
             options.addOption(new Option("l", "language", true, "language"));
             options.addOption(new Option("t", "thread", true, "thread"));
             options.addOption(new Option("f", "file", true, "script file"));
+            options.addOption(new Option("i", "input", true, "input file"));
             options.addOption(new Option("s", "sleep", true, "sleep time"));
             options.addOption(new Option("g", "logger", true, "sleep time"));
             CommandLineParser commandLineParser = new PosixParser();

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -1,14 +1,14 @@
 package us.codecraft.webmagic.downloader;
 
 import com.google.common.collect.Sets;
+import org.apache.commons.io.IOUtils;
 import org.apache.http.HttpResponse;
 import org.apache.http.annotation.ThreadSafe;
 import org.apache.http.client.config.CookieSpecs;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.methods.CloseableHttpResponse;
 import org.apache.http.client.methods.RequestBuilder;
 import org.apache.http.impl.client.CloseableHttpClient;
-import org.apache.http.util.EntityUtils;
 import org.apache.log4j.Logger;
 import us.codecraft.webmagic.Page;
 import us.codecraft.webmagic.Request;
@@ -158,7 +158,7 @@ private Page addToCycleRetry(Request request, Site site) {
     }
 
     protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
-        String content = EntityUtils.toString(httpResponse.getEntity(), charset);
+        String content = IOUtils.toString(httpResponse.getEntity().getContent(), charset);
         Page page = new Page();
         page.setHtml(new Html(UrlUtils.fixAllRelativeHrefs(content, request.getUrl())));
         page.setUrl(new PlainText(request.getUrl()));

File: webmagic-core/src/main/java/us/codecraft/webmagic/processor/example/BaiduBaikePageProcesser.java
Patch:
@@ -16,7 +16,7 @@
 public class BaiduBaikePageProcesser implements PageProcessor {
 
     private Site site = Site.me()//.setHttpProxy(new HttpHost("127.0.0.1",8888))
-            .setCharset("utf-8").setRetryTimes(3).setSleepTime(1000).setUseGzip(true);
+            .setRetryTimes(3).setSleepTime(1000).setUseGzip(true);
 
     @Override
     public void process(Page page) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/example/BaiduBaike.java
Patch:
@@ -4,18 +4,15 @@
 import us.codecraft.webmagic.model.AfterExtractor;
 import us.codecraft.webmagic.model.OOSpider;
 import us.codecraft.webmagic.model.annotation.ExtractBy;
-import us.codecraft.webmagic.model.annotation.UrlTemplate;
 import us.codecraft.webmagic.model.direct.Param;
 
 import java.util.ArrayList;
 import java.util.List;
 
 /**
  * @since 0.4.0
- *   NO implement yet!!!!!!!!!!!!
  * @author code4crafter@gmail.com
  */
-@UrlTemplate("http://baike.baidu.com/search/word?word=${word}&enc=utf8")
 public class BaiduBaike implements AfterExtractor{
 
     private String word;

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -482,7 +482,7 @@ public boolean isExitWhenComplete() {
     /**
      * Exit when complete. <br/>
      * True: exit when all url of the site is downloaded. <br/>
-     * False: not exit until call stop manually.<br/>
+     * False: not exit until call stop() manually.<br/>
      *
      * @param exitWhenComplete
      * @return

File: webmagic-core/src/test/java/us/codecraft/webmagic/downloader/HttpClientDownloaderTest.java
Patch:
@@ -22,4 +22,5 @@ public void testCookie() {
         Page download = httpClientDownloader.download(new Request("http://www.diandian.com"), site.toTask());
         Assert.assertTrue(download.getHtml().toString().contains("flashsword30"));
     }
+
 }

File: webmagic-extension/src/test/java/us/codecraft/webmagic/model/GithubRepoTest.java
Patch:
@@ -18,8 +18,8 @@ public void test() {
                 , new PageModelPipeline<GithubRepo>() {
             @Override
             public void process(GithubRepo o, Task task) {
-                Assert.assertEquals(78, o.getStar());
-                Assert.assertEquals(65, o.getFork());
+                Assert.assertEquals(86, o.getStar());
+                Assert.assertEquals(70, o.getFork());
             }
         }, GithubRepo.class).setDownloader(new MockDownloader()).test("https://github.com/code4craft/webmagic");
     }

File: webmagic-core/src/test/java/us/codecraft/webmagic/SpiderTest.java
Patch:
@@ -18,11 +18,12 @@ public void testStartAndStop() throws InterruptedException {
             public void process(ResultItems resultItems, Task task) {
                 System.out.println(1);
             }
-        });
+        }).thread(2);
         spider.start();
         Thread.sleep(10000);
         spider.stop();
-//        spider.run();
+        Thread.sleep(10000);
+        spider.start();
         Thread.sleep(10000);
     }
 }

File: webmagic-core/src/main/java/us/codecraft/webmagic/utils/UrlUtils.java
Patch:
@@ -16,8 +16,6 @@
  */
 public class UrlUtils {
 
-    private static Pattern relativePathPattern = Pattern.compile("^([\\.]+)/");
-
     /**
      * canonicalizeUrl
      *

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/PageModelExtractor.java
Patch:
@@ -184,7 +184,7 @@ public Object process(Page page) {
             return null;
         }
         if (objectExtractor == null) {
-            return processSingle(page, null, false);
+            return processSingle(page, null, true);
         } else {
             if (objectExtractor.multi) {
                 List<Object> os = new ArrayList<Object>();

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/TextContentSelectorTest.java
Patch:
@@ -28,7 +28,7 @@ public void test() {
     public void testDownload() {
         String s = new HttpClientDownloader().download("http://blog.codecraft.us/blog/2013/08/18/ti-yan-dao-liao-open-sourcede-mei-li/", "utf-8")
                 .smartContent().text().toString();
-        Assert.assertNotNull(text);
+        Assert.assertNotNull(s);
     }
 
 }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/utils/DoubleKeyMap.java
Patch:
@@ -63,7 +63,7 @@ public V get(K1 key1, K2 key2) {
     /**
      * @param key1
      * @param submap
-     * @return
+     * @return value
      */
     public V put(K1 key1, Map<K2, V> submap) {
         return put(key1, submap);
@@ -73,7 +73,7 @@ public V put(K1 key1, Map<K2, V> submap) {
      * @param key1
      * @param key2
      * @param value
-     * @return
+     * @return value
      */
     public V put(K1 key1, K2 key2, V value) {
         if (map.get(key1) == null) {
@@ -85,7 +85,7 @@ public V put(K1 key1, K2 key2, V value) {
     /**
      * @param key1
      * @param key2
-     * @return
+     * @return value
      */
     public V remove(K1 key1, K2 key2) {
         if (get(key1) == null) {

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/FileCache.java
Patch:
@@ -4,6 +4,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.log4j.Logger;
 import us.codecraft.webmagic.*;
+import us.codecraft.webmagic.model.annotation.Experimental;
 import us.codecraft.webmagic.pipeline.Pipeline;
 import us.codecraft.webmagic.processor.PageProcessor;
 import us.codecraft.webmagic.processor.SimplePageProcessor;
@@ -20,6 +21,7 @@
  * @author code4crafter@gmail.com
  * @since 0.2.1
  */
+@Experimental
 public class FileCache extends FilePersistentBase implements Downloader, Pipeline, PageProcessor {
 
     private Downloader downloaderWhenFileMiss;

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/ExtractBy.java
Patch:
@@ -20,7 +20,7 @@ public enum Type {XPath, Regex, Css}
 
     Type type() default Type.XPath;
 
-    boolean notNull() default true;
+    boolean notNull() default false;
 
     boolean multi() default false;
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/ExtractByRaw.java
Patch:
@@ -20,7 +20,7 @@ public enum Type {XPath, Regex, Css}
 
     Type type() default Type.XPath;
 
-    boolean notNull() default true;
+    boolean notNull() default false;
 
     boolean multi() default false;
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/model/annotation/ExtractByUrl.java
Patch:
@@ -16,7 +16,7 @@
 
     String value() default "";
 
-    boolean notNull() default true;
+    boolean notNull() default false;
 
     boolean multi() default false;
 

File: webmagic-core/src/main/java/us/codecraft/webmagic/pipeline/FilePipeline.java
Patch:
@@ -37,6 +37,9 @@ public FilePipeline() {
      * @param path 文件保存路径
      */
     public FilePipeline(String path) {
+        if (!path.endsWith("/")&&!path.endsWith("\\")){
+            path+="/";
+        }
         this.path = path;
     }
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/downloader/FileDownloader.java
Patch:
@@ -34,6 +34,9 @@ public FileDownloader(String path) {
     }
 
     public FileDownloader(String path, Downloader downloaderWhenFileMiss) {
+        if (!path.endsWith("/")&&!path.endsWith("\\")){
+            path+="/";
+        }
         this.path = path;
         this.downloaderWhenFileMiss = downloaderWhenFileMiss;
     }

File: webmagic-extension/src/main/java/us/codecraft/webmagic/pipeline/JsonFilePipeline.java
Patch:
@@ -37,6 +37,9 @@ public JsonFilePipeline() {
      * @param path 文件保存路径
      */
     public JsonFilePipeline(String path) {
+        if (!path.endsWith("/")&&!path.endsWith("\\")){
+            path+="/";
+        }
         this.path = path;
     }
 

File: webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/FileCacheQueueScheduler.java
Patch:
@@ -47,6 +47,9 @@ public class FileCacheQueueScheduler implements Scheduler {
     private Set<String> urls;
 
     public FileCacheQueueScheduler(String filePath) {
+        if (!filePath.endsWith("/")&&!filePath.endsWith("\\")){
+            filePath+="/";
+        }
         this.filePath = filePath;
     }
 

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/HuabanProcessor.java
Patch:
@@ -3,10 +3,10 @@
 import us.codecraft.webmagic.Page;
 import us.codecraft.webmagic.Site;
 import us.codecraft.webmagic.Spider;
+import us.codecraft.webmagic.downloader.selenium.SeleniumDownloader;
 import us.codecraft.webmagic.pipeline.FilePipeline;
 import us.codecraft.webmagic.processor.PageProcessor;
 import us.codecraft.webmagic.scheduler.RedisScheduler;
-import us.codecraft.webmagic.downloader.downloader.SeleniumDownloader;
 
 /**
  * 花瓣网抽取器。<br>

File: webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/OschinaBlog.java
Patch:
@@ -4,6 +4,8 @@
 import us.codecraft.webmagic.model.ExtractBy;
 import us.codecraft.webmagic.model.OOSpider;
 import us.codecraft.webmagic.model.TargetUrl;
+import us.codecraft.webmagic.pipeline.ConsolePipeline;
+import us.codecraft.webmagic.pipeline.JsonFilePipeline;
 
 /**
  * @author code4crafter@gmail.com <br>
@@ -28,7 +30,7 @@ public String toString() {
     }
 
     public static void main(String[] args) {
-        OOSpider.create(Site.me().addStartUrl("http://my.oschina.net/flashsword/blog"), OschinaBlog.class).run();
+        OOSpider.create(Site.me().addStartUrl("http://my.oschina.net/flashsword/blog"), OschinaBlog.class).pipeline(new ConsolePipeline()).pipeline(new JsonFilePipeline()).run();
     }
 
     public String getTitle() {

File: webmagic-core/src/main/java/us/codecraft/webmagic/model/ModelPageProcessor.java
Patch:
@@ -51,14 +51,14 @@ private ModelPageProcessor(Site site) {
     @Override
     public void process(Page page) {
         for (PageModelExtractor pageModelExtractor : pageModelExtractorList) {
+            extractLinks(page, pageModelExtractor.getHelpUrlRegionSelector(), pageModelExtractor.getHelpUrlPatterns());
+            extractLinks(page, pageModelExtractor.getTargetUrlRegionSelector(), pageModelExtractor.getTargetUrlPatterns());
             Object process = pageModelExtractor.process(page);
             if (process == null || (process instanceof List && ((List) process).size() == 0)) {
                 page.getResultItems().setSkip(true);
             }
             postProcessPageModel(pageModelExtractor.getClazz(), process);
             page.putField(pageModelExtractor.getClazz().getCanonicalName(), process);
-            extractLinks(page, pageModelExtractor.getHelpUrlRegionSelector(), pageModelExtractor.getHelpUrlPatterns());
-            extractLinks(page, pageModelExtractor.getTargetUrlRegionSelector(), pageModelExtractor.getTargetUrlPatterns());
         }
     }
 

File: webmagic-samples/src/main/java/us/codecraft/webmagic/model/samples/News163.java
Patch:
@@ -5,6 +5,7 @@
 import us.codecraft.webmagic.model.*;
 import us.codecraft.webmagic.pipeline.ConsolePipeline;
 import us.codecraft.webmagic.pipeline.PagedPipeline;
+import us.codecraft.webmagic.scheduler.RedisScheduler;
 
 import java.util.Collection;
 import java.util.List;
@@ -71,7 +72,7 @@ public String toString() {
 
     public static void main(String[] args) {
         OOSpider.create(Site.me().addStartUrl("http://news.163.com/13/0802/05/958I1E330001124J_2.html"), News163.class)
-                .clearPipeline().pipeline(new PagedPipeline()).pipeline(new ConsolePipeline()).run();
+                .scheduler(new RedisScheduler("localhost")).clearPipeline().pipeline(new PagedPipeline()).pipeline(new ConsolePipeline()).run();
     }
 
 }

File: webmagic-core/src/test/java/us/codecraft/webmagic/selector/XpathSelectorTest.java
Patch:
@@ -1418,7 +1418,7 @@ public Iterator<String> iteratePrefixes() {
 
     @Test
     public void testXpath2Selector() {
-        Xpath2Selector xpath2Selector = new Xpath2Selector("//a");
+        Xpath2Selector xpath2Selector = new Xpath2Selector("//a/@href");
         String select = xpath2Selector.select(html);
         Assert.assertNotNull(select);
     }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/annotation/samples/IteyeBlog.java
Patch:
@@ -32,7 +32,7 @@ public static void main(String[] args) {
     }
 
     public String getTitle() {
-        return null;
+        return title;
     }
 
     public String getContent() {

File: webmagic-samples/src/main/java/us/codecraft/webmagic/annotation/samples/IteyeBlog.java
Patch:
@@ -14,7 +14,7 @@
 public class IteyeBlog implements Blog{
 
     @ExtractBy("//title")
-    private int title;
+    private String title;
 
     @ExtractBy(value = "div#blog_content",type = ExtractBy.Type.Css)
     private String content;

File: webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java
Patch:
@@ -27,7 +27,7 @@ public CssSelector(String selectorText) {
     public String select(String text) {
         Document doc = Jsoup.parse(text);
         Elements elements = doc.select(selectorText);
-        if (CollectionUtils.isNotEmpty(elements)) {
+        if (CollectionUtils.isEmpty(elements)) {
             return null;
         }
         return elements.get(0).outerHtml();

File: webmagic-core/src/main/java/us/codecraft/webmagic/downloader/HttpClientDownloader.java
Patch:
@@ -30,7 +30,7 @@ public class HttpClientDownloader implements Downloader {
 
     private Logger logger = Logger.getLogger(getClass());
 
-    private int poolSize;
+    private int poolSize = 1;
 
     @Override
     public Page download(Request request, Task task) {

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -270,7 +270,9 @@ public Spider thread(int threadNum) {
         if (threadNum <= 0) {
             throw new IllegalArgumentException("threadNum should be more than one!");
         }
-        downloader = new HttpClientDownloader(threadNum);
+        if (downloader==null || downloader instanceof HttpClientDownloader){
+            downloader = new HttpClientDownloader(threadNum);
+        }
         if (threadNum == 1) {
             return this;
         }

File: webmagic-samples/src/main/java/us/codecraft/webmagic/samples/GlobalProcessor.java
Patch:
@@ -27,8 +27,8 @@ public void process(Page page) {
 
     @Override
     public Site getSite() {
-        if (site==null){
-            site = Site.me().setDomain("www.2345.com")
+        if (site == null) {
+            site = Site.me().setDomain("www.2345.com").setSleepTime(0)
                     .addStartUrl("http://www.2345.com/").addStartUrl("http://hao.360.cn/")
                     .addStartUrl("http://www.baidu.com/s?wd=%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA&rsv_spt=1&issp=1&rsv_bp=0&ie=utf-8&tn=80039098_oem_dg&rsv_n=2&rsv_sug3=6&rsv_sug4=698&rsv_sug=0&rsv_sug1=3")
                     .setUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/DiandianProcessorTest.java
Patch:
@@ -17,7 +17,6 @@
  */
 public class DiandianProcessorTest {
 
-    @Ignore
     @Test
     public void test() throws IOException {
         DiandianBlogProcessor diaoyuwengProcessor = new DiandianBlogProcessor();

File: webmagic-core/src/main/java/us/codecraft/webmagic/Spider.java
Patch:
@@ -66,7 +66,7 @@ public Spider setUUID(String uuid) {
         return this;
     }
 
-    public Spider schedular(Scheduler scheduler) {
+    public Spider scheduler(Scheduler scheduler) {
         this.scheduler = scheduler;
         return this;
     }

File: webmagic-core/src/main/java/us/codecraft/webmagic/schedular/FileCacheQueueScheduler.java
Patch:
@@ -63,7 +63,7 @@ private void init(Task task) {
         initWriter();
         initFlushThread();
         inited.set(true);
-        logger.info("init cache schedular success");
+        logger.info("init cache scheduler success");
     }
 
     private void initFlushThread() {
@@ -80,7 +80,7 @@ private void initWriter() {
             fileUrlWriter = new PrintWriter(new FileWriter(getFileName(fileUrlAllName), true));
             fileCursorWriter = new PrintWriter(new FileWriter(getFileName(fileCursor), false));
         } catch (IOException e) {
-            throw new RuntimeException("init cache schedular error", e);
+            throw new RuntimeException("init cache scheduler error", e);
         }
     }
 

File: webmagic-samples/src/test/java/us/codecraft/webmagic/SpiderTest.java
Patch:
@@ -26,12 +26,12 @@ public void testSpider() throws InterruptedException {
     @Test
     public void testGlobalSpider(){
 //        PageProcessor pageProcessor = new MeicanProcessor();
-//        Spider.me().pipeline(new FilePipeline()).schedular(new FileCacheQueueScheduler(pageProcessor.getSite(),"/data/temp/webmagic/cache/")).
+//        Spider.me().pipeline(new FilePipeline()).scheduler(new FileCacheQueueScheduler(pageProcessor.getSite(),"/data/temp/webmagic/cache/")).
 //                processor(pageProcessor).run();
         SimplePageProcessor pageProcessor2 = new SimplePageProcessor("http://www.diaoyuweng.com/home.php?mod=space&uid=88304&do=thread&view=me&type=thread&from=space", "http://www.diaoyuweng.com/thread-*-1-1.html");
         System.out.println(pageProcessor2.getSite().getEncoding());
         pageProcessor2.getSite().setSleepTime(500);
-        Spider.create(pageProcessor2).pipeline(new FilePipeline()).schedular(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
+        Spider.create(pageProcessor2).pipeline(new FilePipeline()).scheduler(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
                 run();
 
 

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/DiandianProcessorTest.java
Patch:
@@ -30,7 +30,7 @@ public void test() throws IOException {
         //ConsolePipeline输出结果到控制台
         //FileCacheQueueSchedular保存url，支持断点续传，临时文件输出到/data/temp/webmagic/cache目录
         //Spider.run()执行
-        Spider.create(diaoyuwengProcessor).pipeline(new ConsolePipeline()).pipeline(pipeline).schedular(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
+        Spider.create(diaoyuwengProcessor).pipeline(new ConsolePipeline()).pipeline(pipeline).scheduler(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
                 run();
     }
 }

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/DiaoyuwengProcessorTest.java
Patch:
@@ -22,7 +22,7 @@ public class DiaoyuwengProcessorTest {
     public void test() throws IOException {
         DiaoyuwengProcessor diaoyuwengProcessor = new DiaoyuwengProcessor();
         FreemarkerPipeline pipeline = new FreemarkerPipeline("wordpress.ftl");
-        Spider.create(diaoyuwengProcessor).pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
+        Spider.create(diaoyuwengProcessor).pipeline(new FilePipeline()).pipeline(pipeline).scheduler(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
                 run();
     }
 }

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/SinablogProcessorTest.java
Patch:
@@ -30,7 +30,7 @@ public void test() throws IOException {
         //ConsolePipeline输出结果到控制台
         //FileCacheQueueSchedular保存url，支持断点续传，临时文件输出到/data/temp/webmagic/cache目录
         //Spider.run()执行
-        Spider.create(sinaBlogProcesser).pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
+        Spider.create(sinaBlogProcesser).pipeline(new FilePipeline()).pipeline(pipeline).scheduler(new FileCacheQueueScheduler("/data/temp/webmagic/cache/")).
                 run();
     }
 }

File: webmagic-plugin/src/main/java/us/codecraft/webmagic/pipeline/FreemarkerPipeline.java
Patch:
@@ -30,7 +30,7 @@ public FreemarkerPipeline(String template, String path) throws IOException {
         configuration.setDirectoryForTemplateLoading(new File(this.getClass().getClassLoader().getResource("ftl/").getFile()));
         this.template = configuration.getTemplate(template);
         this.path = path;
-        File file = new File(path);
+        new File(path);
     }
 
     public FreemarkerPipeline(String template) throws IOException {

File: webmagic-plugin/src/test/java/us/codecraft/webmagic/FreemarkerPipelineTest.java
Patch:
@@ -13,7 +13,7 @@
 public class FreemarkerPipelineTest {
 
     @Test
-    public void test() throws IOException {
+    public void testTemplateLoad() throws IOException {
         FreemarkerPipeline freemarkerPipeline = new FreemarkerPipeline("wordpress.ftl");
     }
 }

File: webmagic-samples/src/test/java/us/codecraft/webmagic/SpiderTest.java
Patch:
@@ -31,7 +31,7 @@ public void testGlobalSpider(){
         SimplePageProcessor pageProcessor2 = new SimplePageProcessor("http://www.diaoyuweng.com/home.php?mod=space&uid=88304&do=thread&view=me&type=thread&from=space", "http://www.diaoyuweng.com/thread-*-1-1.html");
         System.out.println(pageProcessor2.getSite().getEncoding());
         pageProcessor2.getSite().setSleepTime(500);
-        Spider.me().pipeline(new FilePipeline()).schedular(new FileCacheQueueSchedular(pageProcessor2.getSite(),"/data/temp/webmagic/cache/")).
+        Spider.me().pipeline(new FilePipeline()).schedular(new FileCacheQueueSchedular("/data/temp/webmagic/cache/")).
                 processor(pageProcessor2).run();
 
 

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/DiandianProcessorTest.java
Patch:
@@ -30,7 +30,7 @@ public void test() throws IOException {
         //ConsolePipeline输出结果到控制台
         //FileCacheQueueSchedular保存url，支持断点续传，临时文件输出到/data/temp/webmagic/cache目录
         //Spider.run()执行
-        Spider.me().pipeline(new ConsolePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular(diaoyuwengProcessor.getSite(), "/data/temp/webmagic/cache/")).
+        Spider.me().pipeline(new ConsolePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular("/data/temp/webmagic/cache/")).
                 processor(diaoyuwengProcessor).run();
     }
 }

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/DiaoyuwengProcessorTest.java
Patch:
@@ -1,5 +1,6 @@
 package us.codecraft.webmagic.processor;
 
+import org.junit.Ignore;
 import org.junit.Test;
 import us.codecraft.webmagic.Spider;
 import us.codecraft.webmagic.pipeline.FilePipeline;
@@ -16,11 +17,12 @@
  */
 public class DiaoyuwengProcessorTest {
 
+    @Ignore
     @Test
     public void test() throws IOException {
         DiaoyuwengProcessor diaoyuwengProcessor = new DiaoyuwengProcessor();
         FreemarkerPipeline pipeline = new FreemarkerPipeline("wordpress.ftl");
-        Spider.me().pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular(diaoyuwengProcessor.getSite(), "/data/temp/webmagic/cache/")).
+        Spider.me().pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular("/data/temp/webmagic/cache/")).
                 processor(diaoyuwengProcessor).run();
     }
 }

File: webmagic-samples/src/test/java/us/codecraft/webmagic/processor/SinablogProcessorTest.java
Patch:
@@ -30,7 +30,7 @@ public void test() throws IOException {
         //ConsolePipeline输出结果到控制台
         //FileCacheQueueSchedular保存url，支持断点续传，临时文件输出到/data/temp/webmagic/cache目录
         //Spider.run()执行
-        Spider.me().pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular(sinaBlogProcesser.getSite(), "/data/temp/webmagic/cache/")).
+        Spider.me().pipeline(new FilePipeline()).pipeline(pipeline).schedular(new FileCacheQueueSchedular("/data/temp/webmagic/cache/")).
                 processor(sinaBlogProcesser).run();
     }
 }

