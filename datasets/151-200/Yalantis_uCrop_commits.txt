File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -349,12 +349,14 @@ Tune everything (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
         options.setActiveControlsWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
 
         // Aspect ratio options
-        options.setAspectRatioOptions(1,
+        options.setAspectRatioOptions(2,
             new AspectRatio("WOW", 1, 2),
             new AspectRatio("MUCH", 3, 4),
             new AspectRatio("RATIO", CropImageView.DEFAULT_ASPECT_RATIO, CropImageView.DEFAULT_ASPECT_RATIO),
             new AspectRatio("SO", 16, 9),
             new AspectRatio("ASPECT", 1, 1));
+        options.withAspectRatio(CropImageView.DEFAULT_ASPECT_RATIO, CropImageView.DEFAULT_ASPECT_RATIO);
+        options.useSourceImageAspectRatio();
 
        */
 

File: ucrop/src/main/java/com/yalantis/ucrop/UCrop.java
Patch:
@@ -517,9 +517,9 @@ public void setFreeStyleCropEnabled(boolean enabled) {
          * @param aspectRatio       - list of aspect ratio options that are available to user
          */
         public void setAspectRatioOptions(int selectedByDefault, AspectRatio... aspectRatio) {
-            if (selectedByDefault > aspectRatio.length) {
+            if (selectedByDefault >= aspectRatio.length) {
                 throw new IllegalArgumentException(String.format(Locale.US,
-                        "Index [selectedByDefault = %d] cannot be higher than aspect ratio options count [count = %d].",
+                        "Index [selectedByDefault = %d] (0-based) cannot be higher or equal than aspect ratio options count [count = %d].",
                         selectedByDefault, aspectRatio.length));
             }
             mOptionBundle.putInt(EXTRA_ASPECT_RATIO_SELECTED_BY_DEFAULT, selectedByDefault);

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -372,9 +372,9 @@ Tune everything (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
         // Color palette
         options.setToolbarColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setStatusBarColor(ContextCompat.getColor(this, R.color.your_color_res));
-        options.setActiveWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setToolbarWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setRootViewBackgroundColor(ContextCompat.getColor(this, R.color.your_color_res));
+        options.setActiveControlsWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
 
         // Aspect ratio options
         options.setAspectRatioOptions(1,

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/HorizontalProgressWheelView.java
Patch:
@@ -59,6 +59,7 @@ public void setScrollingListener(ScrollingListener scrollingListener) {
 
     public void setMiddleLineColor(@ColorInt int middleLineColor) {
         mMiddleLineColor = middleLineColor;
+        mProgressMiddleLinePaint.setColor(mMiddleLineColor);
         invalidate();
     }
 

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -373,9 +373,9 @@ Tune everything (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
         // Color palette
         options.setToolbarColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setStatusBarColor(ContextCompat.getColor(this, R.color.your_color_res));
-        options.setActiveWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setToolbarWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setRootViewBackgroundColor(ContextCompat.getColor(this, R.color.your_color_res));
+        options.setActiveControlsWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
 
         // Aspect ratio options
         options.setAspectRatioOptions(1,

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/HorizontalProgressWheelView.java
Patch:
@@ -59,6 +59,7 @@ public void setScrollingListener(ScrollingListener scrollingListener) {
 
     public void setMiddleLineColor(@ColorInt int middleLineColor) {
         mMiddleLineColor = middleLineColor;
+        mProgressMiddleLinePaint.setColor(mMiddleLineColor);
         invalidate();
     }
 

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -372,9 +372,9 @@ Tune everything (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
         // Color palette
         options.setToolbarColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setStatusBarColor(ContextCompat.getColor(this, R.color.your_color_res));
-        options.setActiveWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setToolbarWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
         options.setRootViewBackgroundColor(ContextCompat.getColor(this, R.color.your_color_res));
+        options.setActiveControlsWidgetColor(ContextCompat.getColor(this, R.color.your_color_res));
 
         // Aspect ratio options
         options.setAspectRatioOptions(1,

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/HorizontalProgressWheelView.java
Patch:
@@ -59,6 +59,7 @@ public void setScrollingListener(ScrollingListener scrollingListener) {
 
     public void setMiddleLineColor(@ColorInt int middleLineColor) {
         mMiddleLineColor = middleLineColor;
+        mProgressMiddleLinePaint.setColor(mMiddleLineColor);
         invalidate();
     }
 

File: ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java
Patch:
@@ -41,6 +41,9 @@
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
+import androidx.transition.AutoTransition;
+import androidx.transition.Transition;
+import androidx.transition.TransitionManager;
 
 import static android.app.Activity.RESULT_OK;
 

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -51,6 +51,9 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 import androidx.core.content.ContextCompat;
+import androidx.transition.AutoTransition;
+import androidx.transition.Transition;
+import androidx.transition.TransitionManager;
 
 /**
  * Created by Oleksii Shliama (https://github.com/shliama).

File: ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java
Patch:
@@ -41,6 +41,9 @@
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
+import androidx.transition.AutoTransition;
+import androidx.transition.Transition;
+import androidx.transition.TransitionManager;
 
 import static androidx.appcompat.app.AppCompatActivity.RESULT_OK;
 

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -51,6 +51,9 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 import androidx.core.content.ContextCompat;
+import androidx.transition.AutoTransition;
+import androidx.transition.Transition;
+import androidx.transition.TransitionManager;
 
 /**
  * Created by Oleksii Shliama (https://github.com/shliama).

File: ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java
Patch:
@@ -41,6 +41,9 @@
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
+import androidx.transition.AutoTransition;
+import androidx.transition.Transition;
+import androidx.transition.TransitionManager;
 
 import static android.app.Activity.RESULT_OK;
 

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -3,11 +3,11 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.RectF;
-import android.media.ExifInterface;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.media.ExifInterface;
 import android.util.Log;
 
 import com.yalantis.ucrop.callback.BitmapCropCallback;

File: ucrop/src/main/java/com/yalantis/ucrop/util/BitmapLoadUtils.java
Patch:
@@ -6,11 +6,10 @@
 import android.graphics.Canvas;
 import android.graphics.Matrix;
 import android.graphics.Point;
-import android.media.ExifInterface;
 import android.net.Uri;
-import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.media.ExifInterface;
 import android.util.Log;
 import android.view.Display;
 import android.view.WindowManager;

File: ucrop/src/main/java/com/yalantis/ucrop/view/UCropView.java
Patch:
@@ -25,8 +25,8 @@ public UCropView(Context context, AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
 
         LayoutInflater.from(context).inflate(R.layout.ucrop_view, this, true);
-        mGestureCropImageView = (GestureCropImageView) findViewById(R.id.image_view_crop);
-        mViewOverlay = (OverlayView) findViewById(R.id.view_overlay);
+        mGestureCropImageView = findViewById(R.id.image_view_crop);
+        mViewOverlay = findViewById(R.id.view_overlay);
 
         TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.ucrop_UCropView);
         mViewOverlay.processStyledAttributes(a);

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -524,7 +524,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
         }
 
         MenuItem menuItemCrop = menu.findItem(R.id.menu_crop);
-        Drawable menuItemCropIcon = ContextCompat.getDrawable(this, mToolbarCropDrawable);
+        Drawable menuItemCropIcon = ContextCompat.getDrawable(this, mToolbarCropDrawable == 0 ? R.drawable.ucrop_ic_done : mToolbarCropDrawable);
         if (menuItemCropIcon != null) {
             menuItemCropIcon.mutate();
             menuItemCropIcon.setColorFilter(mToolbarWidgetColor, PorterDuff.Mode.SRC_ATOP);
@@ -544,7 +544,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.menu_crop) {
-            if (fragment.isAdded())
+            if (fragment != null && fragment.isAdded())
                 fragment.cropAndSaveImage();
         } else if (item.getItemId() == android.R.id.home) {
             removeFragmentFromScreen();

File: ucrop/src/main/java/com/yalantis/ucrop/UCrop.java
Patch:
@@ -237,7 +237,7 @@ public static int getOutputImageHeight(@NonNull Intent intent) {
      * @return aspect ratio as a floating point value (x:y) - so it will be 1 for 1:1 or 4/3 for 4:3
      */
     public static float getOutputCropAspectRatio(@NonNull Intent intent) {
-        return intent.getParcelableExtra(EXTRA_OUTPUT_CROP_ASPECT_RATIO);
+        return intent.getFloatExtra(EXTRA_OUTPUT_CROP_ASPECT_RATIO, 0f);
     }
 
     /**

File: ucrop/src/main/java/com/yalantis/ucrop/UCrop.java
Patch:
@@ -237,7 +237,7 @@ public static int getOutputImageHeight(@NonNull Intent intent) {
      * @return aspect ratio as a floating point value (x:y) - so it will be 1 for 1:1 or 4/3 for 4:3
      */
     public static float getOutputCropAspectRatio(@NonNull Intent intent) {
-        return intent.getParcelableExtra(EXTRA_OUTPUT_CROP_ASPECT_RATIO);
+        return intent.getFloatExtra(EXTRA_OUTPUT_CROP_ASPECT_RATIO, 0f);
     }
 
     /**

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -162,8 +162,10 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.menu_crop) {
             cropAndSaveImage();
+            return true;
         } else if (item.getItemId() == android.R.id.home) {
             onBackPressed();
+            return true;
         }
         return super.onOptionsItemSelected(item);
     }

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -191,7 +191,8 @@ private boolean shouldCrop(int width, int height) {
                 || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError
                 || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError
                 || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError
-                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError;
+                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError
+                || mCurrentAngle != 0;
     }
 
     @Override

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -191,7 +191,8 @@ private boolean shouldCrop(int width, int height) {
                 || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError
                 || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError
                 || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError
-                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError;
+                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError
+                || mCurrentAngle != 0;
     }
 
     @Override

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -437,7 +437,7 @@ public void removeFragmentFromScreen() {
     }
 
     public void setupFragment(UCrop uCrop) {
-        fragment = uCrop.getFragment(this);
+        fragment = uCrop.getFragment(uCrop.getIntent(this).getExtras());
         getSupportFragmentManager().beginTransaction()
                 .add(R.id.fragment_container, fragment, UCropFragment.TAG)
                 .commitAllowingStateLoss();

File: ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java
Patch:
@@ -99,7 +99,7 @@ public void onAttach(Context context) {
             callback = (UCropFragmentCallback) context;
         } catch (ClassCastException e) {
             throw new ClassCastException(context.toString()
-                    + " must implement OnHeadlineSelectedListener");
+                    + " must implement UCropFragmentCallback");
         }
     }
 

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -437,7 +437,7 @@ public void removeFragmentFromScreen() {
     }
 
     public void setupFragment(UCrop uCrop) {
-        fragment = uCrop.getFragment(this);
+        fragment = uCrop.getFragment(uCrop.getIntent(this).getExtras());
         getSupportFragmentManager().beginTransaction()
                 .add(R.id.fragment_container, fragment, UCropFragment.TAG)
                 .commitAllowingStateLoss();

File: ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java
Patch:
@@ -99,7 +99,7 @@ public void onAttach(Context context) {
             callback = (UCropFragmentCallback) context;
         } catch (ClassCastException e) {
             throw new ClassCastException(context.toString()
-                    + " must implement OnHeadlineSelectedListener");
+                    + " must implement UCropFragmentCallback");
         }
     }
 

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -437,7 +437,7 @@ public void removeFragmentFromScreen() {
     }
 
     public void setupFragment(UCrop uCrop) {
-        fragment = uCrop.getFragment(this);
+        fragment = uCrop.getFragment(uCrop.getIntent(this).getExtras());
         getSupportFragmentManager().beginTransaction()
                 .add(R.id.fragment_container, fragment, UCropFragment.TAG)
                 .commitAllowingStateLoss();

File: sample/src/main/java/com/yalantis/ucrop/sample/ResultActivity.java
Patch:
@@ -150,6 +150,8 @@ private void copyFileToDownloads(Uri croppedFileUri) throws Exception {
         outStream.close();
 
         showNotification(saveFile);
+        Toast.makeText(this, R.string.notification_image_saved, Toast.LENGTH_SHORT).show();
+        finish();
     }
 
     private void showNotification(@NonNull File file) {

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -168,7 +168,8 @@ private boolean shouldCrop(int width, int height) {
                 || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError
                 || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError
                 || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError
-                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError;
+                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError
+                || mCurrentAngle != 0;
     }
 
     @SuppressWarnings("JniMissingFunction")

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -168,7 +168,8 @@ private boolean shouldCrop(int width, int height) {
                 || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError
                 || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError
                 || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError
-                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError;
+                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError
+                || mCurrentAngle != 0;
     }
 
     @SuppressWarnings("JniMissingFunction")

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -159,8 +159,10 @@ public boolean onPrepareOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.menu_crop) {
             cropAndSaveImage();
+            return true;
         } else if (item.getItemId() == android.R.id.home) {
             onBackPressed();
+            return true;
         }
         return super.onOptionsItemSelected(item);
     }

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -167,7 +167,8 @@ private boolean shouldCrop(int width, int height) {
                 || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError
                 || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError
                 || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError
-                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError;
+                || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError
+                || mCurrentAngle != 0;
     }
 
     @SuppressWarnings("JniMissingFunction")

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -550,8 +550,7 @@ private void setInitialState() {
                 setWidgetState(R.id.state_scale);
             }
         } else {
-            mGestureCropImageView.setScaleEnabled(true);
-            mGestureCropImageView.setRotateEnabled(true);
+            setAllowedGestures(0);
         }
     }
 

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java
Patch:
@@ -142,7 +142,7 @@ private boolean crop(float resizeScale) throws IOException {
                     left, top, mCroppedImageWidth, mCroppedImageHeight, mCurrentAngle, resizeScale,
                     mCompressFormat.ordinal(), mCompressQuality,
                     mExifInfo.getExifDegrees(), mExifInfo.getExifTranslation());
-            if (cropped) {
+            if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {
                 ImageHeaderParser.copyExif(originalExif, mCroppedImageWidth, mCroppedImageHeight, mImageOutputPath);
             }
             return cropped;

File: ucrop/src/main/java/com/yalantis/ucrop/util/RectUtils.java
Patch:
@@ -58,8 +58,8 @@ public static RectF trapToRect(float[] array) {
         RectF r = new RectF(Float.POSITIVE_INFINITY, Float.POSITIVE_INFINITY,
                 Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY);
         for (int i = 1; i < array.length; i += 2) {
-            float x = array[i - 1];
-            float y = array[i];
+            float x = Math.round(array[i - 1] * 10) / 10.f;
+            float y = Math.round(array[i] * 10) / 10.f;
             r.left = (x < r.left) ? x : r.left;
             r.top = (y < r.top) ? y : r.top;
             r.right = (x > r.right) ? x : r.right;

File: sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java
Patch:
@@ -292,7 +292,7 @@ Tune everything (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
         options.setMaxScaleMultiplier(5);
         options.setImageToCropBoundsAnimDuration(666);
         options.setDimmedLayerColor(Color.CYAN);
-        options.setOvalDimmedLayer(true);
+        options.setCircleDimmedLayer(true);
         options.setShowCropFrame(false);
         options.setCropGridStrokeWidth(20);
         options.setCropGridColor(Color.GREEN);

File: ucrop/src/main/java/com/yalantis/ucrop/callback/BitmapCropCallback.java
Patch:
@@ -5,7 +5,7 @@
 
 public interface BitmapCropCallback {
 
-    void onBitmapCropped(@NonNull Uri resultUri);
+    void onBitmapCropped(@NonNull Uri resultUri, int imageWidth, int imageHeight);
 
     void onCropFailure(@NonNull Throwable t);
 

File: ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java
Patch:
@@ -113,6 +113,7 @@ public float getTargetAspectRatio() {
      * @param cropRect - new crop rectangle
      */
     public void setCropRect(RectF cropRect) {
+        mTargetAspectRatio = cropRect.width() / cropRect.height();
         mCropRect.set(cropRect.left - getPaddingLeft(), cropRect.top - getPaddingTop(),
                 cropRect.right - getPaddingRight(), cropRect.bottom - getPaddingBottom());
         calculateImageScaleBounds();

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java
Patch:
@@ -20,6 +20,8 @@
 import com.yalantis.ucrop.model.AspectRatio;
 import com.yalantis.ucrop.view.CropImageView;
 
+import java.util.Locale;
+
 /**
  * Created by Oleksii Shliama (https://github.com/shliama).
  */
@@ -154,7 +156,7 @@ private void setTitle() {
         if (!TextUtils.isEmpty(mAspectRatioTitle)) {
             setText(mAspectRatioTitle);
         } else {
-            setText(String.format("%d:%d", (int) mAspectRatioX, (int) mAspectRatioY));
+            setText(String.format(Locale.US, "%d:%d", (int) mAspectRatioX, (int) mAspectRatioY));
         }
     }
 

File: ucrop/src/main/java/com/yalantis/ucrop/callback/BitmapLoadCallback.java
Patch:
@@ -4,9 +4,11 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.yalantis.ucrop.model.ExifInfo;
+
 public interface BitmapLoadCallback {
 
-    void onBitmapLoaded(@NonNull Bitmap bitmap, @NonNull String imageInputPath, @Nullable String imageOutputPath);
+    void onBitmapLoaded(@NonNull Bitmap bitmap, @NonNull ExifInfo exifInfo, @NonNull String imageInputPath, @Nullable String imageOutputPath);
 
     void onFailure(@NonNull Exception bitmapWorkerException);
 

File: ucrop/src/main/java/com/yalantis/ucrop/task/BitmapLoadTask.java
Patch:
@@ -119,7 +119,7 @@ protected BitmapWorkerResult doInBackground(Void... params) {
                 decodeAttemptSuccess = true;
             } catch (OutOfMemoryError error) {
                 Log.e(TAG, "doInBackground: BitmapFactory.decodeFileDescriptor: ", error);
-                options.inSampleSize++;
+                options.inSampleSize *= 2;
             }
         }
 

File: ucrop/src/main/java/com/yalantis/ucrop/callback/BitmapLoadCallback.java
Patch:
@@ -2,10 +2,11 @@
 
 import android.graphics.Bitmap;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 public interface BitmapLoadCallback {
 
-    void onBitmapLoaded(@NonNull Bitmap bitmap, @NonNull String imageInputPath, @NonNull String imageOutputPath);
+    void onBitmapLoaded(@NonNull Bitmap bitmap, @NonNull String imageInputPath, @Nullable String imageOutputPath);
 
     void onFailure(@NonNull Exception bitmapWorkerException);
 

File: ucrop/src/main/java/com/yalantis/ucrop/util/FastBitmapDrawable.java
Patch:
@@ -20,7 +20,6 @@
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
 import android.graphics.PixelFormat;
-import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 
 public class FastBitmapDrawable extends Drawable {
@@ -39,8 +38,7 @@ public FastBitmapDrawable(Bitmap b) {
     @Override
     public void draw(Canvas canvas) {
         if (mBitmap != null && !mBitmap.isRecycled()) {
-            final Rect r = getBounds();
-            canvas.drawBitmap(mBitmap, null, r, mPaint);
+            canvas.drawBitmap(mBitmap, null, getBounds(), mPaint);
         }
     }
 

File: ucrop/src/main/java/com/yalantis/ucrop/callback/BitmapCropCallback.java
Patch:
@@ -1,10 +1,11 @@
 package com.yalantis.ucrop.callback;
 
+import android.net.Uri;
 import android.support.annotation.NonNull;
 
 public interface BitmapCropCallback {
 
-    void onBitmapCropped();
+    void onBitmapCropped(@NonNull Uri resultUri);
 
     void onCropFailure(@NonNull Throwable t);
 

File: ucrop/src/main/java/com/yalantis/ucrop/callback/BitmapLoadCallback.java
Patch:
@@ -5,7 +5,7 @@
 
 public interface BitmapLoadCallback {
 
-    void onBitmapLoaded(@NonNull Bitmap bitmap);
+    void onBitmapLoaded(@NonNull Bitmap bitmap, @NonNull String imageInputPath, @NonNull String imageOutputPath);
 
     void onFailure(@NonNull Exception bitmapWorkerException);
 

File: ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java
Patch:
@@ -6,7 +6,6 @@
 import android.graphics.Matrix;
 import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
-import android.net.Uri;
 import android.support.annotation.IntRange;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -68,7 +67,7 @@ public CropImageView(Context context, AttributeSet attrs, int defStyle) {
      * Then creates and executes {@link BitmapCropTask} with proper parameters.
      */
     public void cropAndSaveImage(@NonNull Bitmap.CompressFormat compressFormat, int compressQuality,
-                                 @NonNull Uri outputUri, @Nullable BitmapCropCallback cropCallback) {
+                                 @Nullable BitmapCropCallback cropCallback) {
         cancelAllAnimations();
         setImageToWrapCropBounds(false);
 
@@ -77,7 +76,7 @@ public void cropAndSaveImage(@NonNull Bitmap.CompressFormat compressFormat, int
                 getCurrentScale(), getCurrentAngle(),
                 mMaxResultImageSizeX, mMaxResultImageSizeY,
                 compressFormat, compressQuality,
-                outputUri, cropCallback).execute();
+                getImageInputPath(), getImageOutputPath(), cropCallback).execute();
     }
 
     /**

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -150,7 +150,7 @@ private void setImageData(@NonNull Intent intent) {
 
         if (inputUri != null && mOutputUri != null) {
             try {
-                mGestureCropImageView.setImageUri(inputUri);
+                mGestureCropImageView.setImageUri(inputUri, mOutputUri);
             } catch (Exception e) {
                 setResultException(e);
                 finish();

File: ucrop/src/main/java/com/yalantis/ucrop/view/TransformImageView.java
Patch:
@@ -127,11 +127,11 @@ public Uri getImageUri() {
      * @param imageUri - image Uri
      * @throws Exception - can throw exception if having problems with decoding Uri or OOM.
      */
-    public void setImageUri(@NonNull Uri imageUri) throws Exception {
+    public void setImageUri(@NonNull Uri imageUri, @NonNull Uri outputUri) throws Exception {
         mImageUri = imageUri;
         int maxBitmapSize = getMaxBitmapSize();
 
-        BitmapLoadUtils.decodeBitmapInBackground(getContext(), imageUri, maxBitmapSize, maxBitmapSize,
+        BitmapLoadUtils.decodeBitmapInBackground(getContext(), imageUri, outputUri, maxBitmapSize, maxBitmapSize,
                 new BitmapLoadUtils.BitmapLoadCallback() {
                     @Override
                     public void onBitmapLoaded(@NonNull final Bitmap bitmap) {

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java
Patch:
@@ -103,6 +103,8 @@ private void init(@NonNull TypedArray a) {
 
         int activeColor = getResources().getColor(R.color.ucrop_color_widget_active);
         applyActiveColor(activeColor);
+
+        a.recycle();
     }
 
     private void applyActiveColor(@ColorInt int activeColor) {

File: ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java
Patch:
@@ -103,6 +103,8 @@ private void init(@NonNull TypedArray a) {
 
         int activeColor = getResources().getColor(R.color.ucrop_color_widget_active);
         applyActiveColor(activeColor);
+
+        a.recycle();
     }
 
     private void applyActiveColor(@ColorInt int activeColor) {

File: ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java
Patch:
@@ -24,7 +24,7 @@
  * This class adds crop feature, methods to draw crop guidelines, and keep image in correct state.
  * Also it extends parent class methods to add checks for scale; animating zoom in/out.
  */
-public abstract class CropImageView extends TransformImageView {
+public class CropImageView extends TransformImageView {
 
     public static final int DEFAULT_MAX_BITMAP_SIZE = 0;
     public static final int DEFAULT_IMAGE_TO_CROP_BOUNDS_ANIM_DURATION = 500;

File: ucrop/src/main/java/com/yalantis/ucrop/view/OverlayView.java
Patch:
@@ -172,7 +172,8 @@ public void setupCropBounds() {
     }
 
     protected void init() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2 &&
+		        Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
             setLayerType(LAYER_TYPE_SOFTWARE, null);
         }
     }

File: ucrop/src/main/java/com/yalantis/ucrop/view/OverlayView.java
Patch:
@@ -172,7 +172,8 @@ public void setupCropBounds() {
     }
 
     protected void init() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2 &&
+		        Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
             setLayerType(LAYER_TYPE_SOFTWARE, null);
         }
     }

File: ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java
Patch:
@@ -386,6 +386,8 @@ private void cropAndSaveImage() {
 
                 setResultUri(mOutputUri);
                 finish();
+            } else {
+                setResultException(new NullPointerException("CropImageView.cropImage() returned null."));
             }
         } catch (Exception e) {
             setResultException(e);

