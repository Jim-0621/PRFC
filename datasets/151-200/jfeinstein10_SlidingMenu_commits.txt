File: library/src/com/jeremyfeinstein/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -895,7 +895,7 @@ public void setSecondaryOnOpenListner(OnOpenListener listener) {
 	}
 	
 	/**
-	 * Sets the OnCloseListener. {@link OnCloseListener#onClose() OnCloseListener.onClose()} will be called when nay one of the SlidingMenu is closed
+	 * Sets the OnCloseListener. {@link OnCloseListener#onClose() OnCloseListener.onClose()} will be called when any one of the SlidingMenu is closed
 	 *
 	 * @param listener the new setOnCloseListener
 	 */

File: library/src/main/java/com/jeremyfeinstein/slidingmenu/lib/CanvasTransformerBuilder.java
Patch:
@@ -1,9 +1,9 @@
-package com.jeremyfeinstein.lib;
+package com.jeremyfeinstein.slidingmenu.lib;
 
 import android.graphics.Canvas;
 import android.view.animation.Interpolator;
 
-import com.jeremyfeinstein.lib.SlidingMenu.CanvasTransformer;
+import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.CanvasTransformer;
 
 public class CanvasTransformerBuilder {
 

File: library/src/main/java/com/jeremyfeinstein/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -1,4 +1,4 @@
-package com.jeremyfeinstein.lib;
+package com.jeremyfeinstein.slidingmenu.lib;
 
 import java.lang.reflect.Method;
 

File: library/src/main/java/com/jeremyfeinstein/slidingmenu/lib/app/SlidingActivityBase.java
Patch:
@@ -1,9 +1,9 @@
-package com.jeremyfeinstein.lib.app;
+package com.jeremyfeinstein.slidingmenu.lib.app;
 
 import android.view.View;
 import android.view.ViewGroup.LayoutParams;
 
-import com.jeremyfeinstein.lib.SlidingMenu;
+import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu;
 
 public interface SlidingActivityBase {
 	

File: library/src/main/java/com/jeremyfeinstein/slidingmenu/lib/app/SlidingActivityHelper.java
Patch:
@@ -1,4 +1,4 @@
-package com.jeremyfeinstein.lib.app;
+package com.jeremyfeinstein.slidingmenu.lib.app;
 
 import android.app.Activity;
 import android.os.Bundle;
@@ -8,8 +8,8 @@
 import android.view.View;
 import android.view.ViewGroup.LayoutParams;
 
-import com.jeremyfeinstein.lib.R;
-import com.jeremyfeinstein.lib.SlidingMenu;
+import com.jeremyfeinstein.slidingmenu.lib.R;
+import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu;
 
 public class SlidingActivityHelper {
 

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -779,9 +779,9 @@ public boolean onTouchEvent(MotionEvent ev) {
 	
 	private void determineDrag(MotionEvent ev) {
 		final int activePointerId = mActivePointerId;
+		final int pointerIndex = getPointerIndex(ev, activePointerId);
 		if (activePointerId == INVALID_POINTER)
 			return;
-		final int pointerIndex = this.getPointerIndex(ev, activePointerId);
 		final float x = MotionEventCompat.getX(ev, pointerIndex);
 		final float dx = x - mLastMotionX;
 		final float xDiff = Math.abs(dx);

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -637,8 +637,8 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
 			mActivePointerId = MotionEventCompat.getPointerId(ev, index);
 			if (mActivePointerId == INVALID_POINTER)
 				break;
-			mLastMotionX = mInitialMotionX = MotionEventCompat.getX(ev, mActivePointerId);
-			mLastMotionY = MotionEventCompat.getY(ev, mActivePointerId);
+			mLastMotionX = mInitialMotionX = MotionEventCompat.getX(ev, index);
+			mLastMotionY = MotionEventCompat.getY(ev, index);
 			if (thisTouchAllowed(ev)) {
 				mIsBeingDragged = false;
 				mIsUnableToDrag = false;

File: example/src/com/slidingmenu/example/ExampleListActivity.java
Patch:
@@ -35,6 +35,7 @@ public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setTitle(R.string.app_name);
 		
+//		Crittercism.init(getApplicationContext(), "508ab27601ed857a20000003");
 		this.addPreferencesFromResource(R.xml.main);
 	}
 

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Rect;
 import android.os.Build;
 import android.support.v4.view.KeyEventCompat;
 import android.support.v4.view.MotionEventCompat;

File: library/src/com/slidingmenu/lib/CustomViewBehind.java
Patch:
@@ -343,5 +343,4 @@ public void drawFade(View content, Canvas canvas, float openPercent) {
 		}
 		canvas.drawRect(left, 0, right, getHeight(), mFadePaint);
 	}
-
 }

File: example/src/com/slidingmenu/example/ExampleListActivity.java
Patch:
@@ -35,7 +35,6 @@ public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setTitle(R.string.app_name);
 		
-//		Crittercism.init(getApplicationContext(), "508ab27601ed857a20000003");
 		this.addPreferencesFromResource(R.xml.main);
 	}
 

File: library/src/com/slidingmenu/lib/CustomViewBehind.java
Patch:
@@ -144,7 +144,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 	private float mFadeDegree;
 
 	public void setMode(int mode) {
-		if (mode == SlidingMenu.LEFT || mode == SlidingMenu.RIGHT)
+		if ((mode == SlidingMenu.LEFT || mode == SlidingMenu.RIGHT) && mContent != null)
 			mContent.setVisibility(View.VISIBLE);
 		mMode = mode;
 	}

File: library/src/com/slidingmenu/lib/CustomViewBehind.java
Patch:
@@ -144,6 +144,8 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 	private float mFadeDegree;
 
 	public void setMode(int mode) {
+		if (mode == SlidingMenu.LEFT || mode == SlidingMenu.RIGHT)
+			mContent.setVisibility(View.VISIBLE);
 		mMode = mode;
 	}
 

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -36,7 +36,7 @@
 public class CustomViewAbove extends ViewGroup {
 
 	private static final String TAG = "CustomViewAbove";
-	private static final boolean DEBUG = true;
+	private static final boolean DEBUG = false;
 
 	private static final boolean USE_CACHE = false;
 

File: example/src/com/slidingmenu/example/PropertiesActivity.java
Patch:
@@ -104,7 +104,9 @@ public void onStopTrackingTouch(SeekBar seekBar) {
 		shadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
 			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
 				if (isChecked)
-					getSlidingMenu().setShadowDrawable(R.drawable.defaultshadow);
+					getSlidingMenu().setShadowDrawable(
+							getSlidingMenu().getMode() == SlidingMenu.LEFT ? 
+									R.drawable.defaultshadow : R.drawable.defaultshadowright);
 				else
 					getSlidingMenu().setShadowDrawable(null);
 			}

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -241,7 +241,7 @@ public void onPageSelected(int position) {
 		TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.SlidingMenu);
 		// set the above and behind views if defined in xml
 		int mode = ta.getInt(R.styleable.SlidingMenu_mode, LEFT);
-		setMode(mode);
+		setMode(RIGHT);
 		int viewAbove = ta.getResourceId(R.styleable.SlidingMenu_viewAbove, -1);
 		if (viewAbove != -1)
 			setContent(viewAbove);
@@ -379,7 +379,7 @@ public void showBehind() {
 	 * @param animate true to animate the transition, false to ignore animation
 	 */
 	public void showBehind(boolean animate) {
-		mViewAbove.setCurrentItem(2, animate);
+		mViewAbove.setCurrentItem(0, animate);
 	}
 
 	/**
@@ -424,7 +424,7 @@ public void toggle(boolean animate) {
 	 * @return Whether or not the behind view is showing
 	 */
 	public boolean isBehindShowing() {
-		return mViewAbove.getCurrentItem() == 0;
+		return mViewAbove.getCurrentItem() == 0 || mViewAbove.getCurrentItem() == 2;
 	}
 
 	/**

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -582,7 +582,7 @@ public void computeScroll() {
 	}
 
 	private void pageScrolled(int xpos) {
-		final int widthWithMargin = getChildWidth(mCurItem) + mShadowWidth;
+		final int widthWithMargin = getWidth();
 		final int position = xpos / widthWithMargin;
 		final int offsetPixels = xpos % widthWithMargin;
 		final float offset = (float) offsetPixels / widthWithMargin;

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -914,7 +914,8 @@ public void scrollTo(int x, int y) {
 				mCustomViewBehind.scrollTo((int)((x + getBehindWidth())*mScrollScale), y);
 			} else if (mMode == SlidingMenu.RIGHT) {
 				// TODO right!
-				mCustomViewBehind.scrollTo((int)(getBehindWidth() - getWidth()), y);
+				mCustomViewBehind.scrollTo((int)(getBehindWidth() - getWidth() + 
+						(x-getBehindWidth())*mScrollScale), y);
 			}
 		}
 		if (mShadowDrawable != null || mSelectorDrawable != null)

File: example/src/com/slidingmenu/example/fragments/BirdActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.content.res.TypedArray;
+import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.os.Handler;
@@ -40,8 +41,7 @@ public void onCreate(Bundle savedInstanceState) {
 		
 		setTitle(birds[pos]);
 		getWindow().requestFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
-		ColorDrawable color = new ColorDrawable();
-		color.setColor(getResources().getColor(android.R.color.black));
+		ColorDrawable color = new ColorDrawable(Color.BLACK);
 		color.setAlpha(128);
 		getSupportActionBar().setBackgroundDrawable(color);
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: example/src/com/slidingmenu/example/ViewPagerActivity.java
Patch:
@@ -45,6 +45,9 @@ public void onPageSelected(int position) {
 			}
 
 		});
+		
+		vp.setCurrentItem(0);
+		getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);
 	}
 
 	public class ColorPagerAdapter extends FragmentPagerAdapter {

File: example/src/com/slidingmenu/example/PropertiesActivity.java
Patch:
@@ -89,6 +89,7 @@ public void onStartTrackingTouch(SeekBar seekBar) { }
 			public void onStopTrackingTouch(SeekBar seekBar) {
 				float percent = (float) seekBar.getProgress()/seekBar.getMax();
 				getSlidingMenu().setBehindWidth((int) (percent * getSlidingMenu().getWidth()));
+				getSlidingMenu().requestLayout();
 			}
 		});
 		

File: example/src/com/slidingmenu/example/SampleListFragment.java
Patch:
@@ -20,7 +20,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		SampleAdapter adapter = new SampleAdapter(getActivity());
 		for (int i = 0; i < 20; i++) {
-			adapter.add(new SampleItem("Sample List", android.R.drawable.btn_star));
+			adapter.add(new SampleItem("Sample List", android.R.drawable.ic_menu_search));
 		}
 		setListAdapter(adapter);
 	}

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -128,9 +128,9 @@ public void onPageSelected(int position) {
 		int viewBehind = ta.getResourceId(R.styleable.SlidingMenu_viewBehind, -1);
 		if (viewBehind != -1)
 			setMenu(viewBehind);
-		int touchModeAbove = ta.getInt(R.styleable.SlidingMenu_aboveTouchMode, TOUCHMODE_MARGIN);
+		int touchModeAbove = ta.getInt(R.styleable.SlidingMenu_touchModeAbove, TOUCHMODE_MARGIN);
 		setTouchModeAbove(touchModeAbove);
-		int touchModeBehind = ta.getInt(R.styleable.SlidingMenu_behindTouchMode, TOUCHMODE_MARGIN);
+		int touchModeBehind = ta.getInt(R.styleable.SlidingMenu_touchModeBehind, TOUCHMODE_MARGIN);
 		setTouchModeBehind(touchModeBehind);
 
 		int offsetBehind = (int) ta.getDimension(R.styleable.SlidingMenu_behindOffset, -1);

File: library/src/com/slidingmenu/lib/CustomViewBehind.java
Patch:
@@ -2,18 +2,16 @@
 
 import android.content.Context;
 import android.graphics.Canvas;
-import android.graphics.Matrix;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
-import android.view.animation.Transformation;
 
 import com.slidingmenu.lib.SlidingMenu.CanvasTransformer;
 
 public class CustomViewBehind extends CustomViewAbove {
 
-	private static final String TAG = "CustomViewBehind";
+	//private static final String TAG = "CustomViewBehind";
 
 	private CustomViewAbove mViewAbove;
 	private CanvasTransformer mTransformer;

File: library/src/com/slidingmenu/lib/app/SlidingActivityHelper.java
Patch:
@@ -1,7 +1,6 @@
 package com.slidingmenu.lib.app;
 
 import android.app.Activity;
-import android.content.res.Resources.Theme;
 import android.content.res.TypedArray;
 import android.os.Bundle;
 import android.view.KeyEvent;
@@ -65,7 +64,7 @@ public void onPostCreate(Bundle savedInstanceState) {
 				mViewAbove.setBackgroundResource(background);
 			}
 			mSlidingMenu.setContent(mViewAbove);
-			parent.addView(mSlidingMenu, new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
+			parent.addView(mSlidingMenu, new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
 		}
 	}
 

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -945,8 +945,8 @@ protected boolean fitSystemWindows(Rect insets) {
         if (mContent != null) {
             int leftPadding = mContent.getPaddingLeft() + insets.left;
             int rightPadding = mContent.getPaddingRight() + insets.right;
-            int topPadding = mContent.getPaddingTop() + insets.top;
-            int bottomPadding = mContent.getPaddingBottom() + insets.bottom;
+            int topPadding = insets.top;
+            int bottomPadding = insets.bottom;
             mContent.setPadding(leftPadding, topPadding, rightPadding, bottomPadding);
             return true;
         }

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -440,8 +440,8 @@ protected boolean fitSystemWindows(Rect insets) {
 
         int leftPadding = getPaddingLeft() + insets.left;
         int rightPadding = getPaddingRight() + insets.right;
-        int topPadding = getPaddingTop() + insets.top;
-        int bottomPadding = getPaddingBottom() + insets.bottom;
+        int topPadding = insets.top;
+        int bottomPadding = insets.bottom;
         this.setPadding(leftPadding, topPadding, rightPadding, bottomPadding);
 
 		return super.fitSystemWindows(insets);

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -479,7 +479,8 @@ public void setFitsSysWindows(boolean b) {
 			method.invoke(this, b);
 		} catch (Exception e) {
 			int topMargin = 0;
-			if (b) {
+			boolean isTablet = getResources().getBoolean(R.bool.isTablet);
+			if (b && !isTablet) {
 				topMargin = getStatusBarHeight();
 			}
 			RelativeLayout.LayoutParams params = ((RelativeLayout.LayoutParams)mViewBehind.getLayoutParams());

File: library/src/com/slidingmenu/lib/app/SlidingActivityHelper.java
Patch:
@@ -1,6 +1,7 @@
 package com.slidingmenu.lib.app;
 
 import android.app.Activity;
+import android.content.res.Resources.Theme;
 import android.content.res.TypedArray;
 import android.os.Bundle;
 import android.view.KeyEvent;

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -714,7 +714,7 @@ else if (mIsUnableToDrag)
 			final float y = MotionEventCompat.getY(ev, pointerIndex);
 			final float yDiff = Math.abs(y - mLastMotionY);
 			if (xDiff > mTouchSlop && xDiff > yDiff) {
-				Log.v(TAG, "Starting drag! from onInterceptTouch");
+				if (DEBUG) Log.v(TAG, "Starting drag! from onInterceptTouch");
 				mIsBeingDragged = true;
 				mLastMotionX = x;
 				setScrollingCacheEnabled(true);
@@ -735,7 +735,7 @@ else if (mIsUnableToDrag)
 				mIsUnableToDrag = false;
 			} 
 			if (isMenuOpen() && mInitialMotionX > getBehindWidth()) {
-				Log.v(TAG, "Touch on content when menu open. Intercepting right away");
+				if (DEBUG) Log.v(TAG, "Touch on content when menu open. Intercepting right away");
 				mIsBeingDragged = false;
 				return true;
 			}
@@ -802,7 +802,7 @@ public boolean onTouchEvent(MotionEvent ev) {
 				final float yDiff = Math.abs(y - mLastMotionY);
 				if (DEBUG) Log.v(TAG, "Moved x to " + x + "," + y + " diff=" + xDiff + "," + yDiff);
 				if (xDiff > mTouchSlop && xDiff > yDiff) {
-					Log.v(TAG, "Starting drag! from onTouch");
+					if (DEBUG) Log.v(TAG, "Starting drag! from onTouch");
 					mIsBeingDragged = true;
 					mLastMotionX = x;
 					setScrollingCacheEnabled(true);

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -128,7 +128,7 @@ else if (widthBehind != -1)
 			setBehindWidth(widthBehind);
 		else
 			setBehindOffset(0);
-		float scrollOffsetBehind = ta.getFloat(R.styleable.SlidingMenu_behindScrollScale, 0.25f);
+		float scrollOffsetBehind = ta.getFloat(R.styleable.SlidingMenu_behindScrollScale, 0.33f);
 		setBehindScrollScale(scrollOffsetBehind);
 		int shadowRes = ta.getResourceId(R.styleable.SlidingMenu_shadowDrawable, -1);
 		if (shadowRes != -1) {
@@ -313,11 +313,11 @@ public void setShadowWidth(int pixels) {
 	}
 
 	public void setFadeEnabled(boolean b) {
-		mViewBehind.setBehindFadeEnabled(b);
+		mViewAbove.setBehindFadeEnabled(b);
 	}
 
 	public void setFadeDegree(float f) {
-		mViewBehind.setBehindFadeDegree(f);
+		mViewAbove.setBehindFadeDegree(f);
 	}
 
 	public void setOnOpenListener(OnOpenListener listener) {

File: example/src/com/slidingmenu/example/ExampleActivity.java
Patch:
@@ -35,7 +35,7 @@ public void onCreate(Bundle savedInstanceState) {
 		// set the Behind View
 		setBehindContentView(R.layout.frame);
 		FragmentTransaction t = this.getFragmentManager().beginTransaction();
-		t.add(R.id.frame, new SampleListFragment());
+		t.replace(R.id.frame, new SampleListFragment());
 		t.commit();
 
 		// customize the SlidingMenu

File: example/src/com/slidingmenu/example/ExampleActivity.java
Patch:
@@ -35,7 +35,7 @@ public void onCreate(Bundle savedInstanceState) {
 		// set the Behind View
 		setBehindContentView(R.layout.frame);
 		FragmentTransaction t = this.getFragmentManager().beginTransaction();
-		t.add(R.id.frame, new SampleListFragment());
+		t.replace(R.id.frame, new SampleListFragment());
 		t.commit();
 
 		// customize the SlidingMenu

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -748,7 +748,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 					if (lp != null && lp.isDecor) {
 						final int hgrav = lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;
 						final int vgrav = lp.gravity & Gravity.VERTICAL_GRAVITY_MASK;
-						Log.d(TAG, "gravity: " + lp.gravity + " hgrav: " + hgrav + " vgrav: " + vgrav);
+						if (DEBUG) Log.d(TAG, "gravity: " + lp.gravity + " hgrav: " + hgrav + " vgrav: " + vgrav);
 						int widthMode = MeasureSpec.AT_MOST;
 						int heightMode = MeasureSpec.AT_MOST;
 						boolean consumeVertical = vgrav == Gravity.TOP || vgrav == Gravity.BOTTOM;
@@ -849,7 +849,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
 					child.layout(childLeft, childTop,
 							childLeft + child.getMeasuredWidth(),
 							childTop + child.getMeasuredHeight());
-					Log.v(TAG, "top: " + childTop + ", left: " + childLeft +
+					if (DEBUG) Log.v(TAG, "top: " + childTop + ", left: " + childLeft +
 							", height: " + child.getMeasuredHeight() + 
 							", width:" + child.getMeasuredWidth());
 				}

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -748,7 +748,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 					if (lp != null && lp.isDecor) {
 						final int hgrav = lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;
 						final int vgrav = lp.gravity & Gravity.VERTICAL_GRAVITY_MASK;
-						Log.d(TAG, "gravity: " + lp.gravity + " hgrav: " + hgrav + " vgrav: " + vgrav);
+						if (DEBUG) Log.d(TAG, "gravity: " + lp.gravity + " hgrav: " + hgrav + " vgrav: " + vgrav);
 						int widthMode = MeasureSpec.AT_MOST;
 						int heightMode = MeasureSpec.AT_MOST;
 						boolean consumeVertical = vgrav == Gravity.TOP || vgrav == Gravity.BOTTOM;
@@ -849,7 +849,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
 					child.layout(childLeft, childTop,
 							childLeft + child.getMeasuredWidth(),
 							childTop + child.getMeasuredHeight());
-					Log.v(TAG, "top: " + childTop + ", left: " + childLeft +
+					if (DEBUG) Log.v(TAG, "top: " + childTop + ", left: " + childLeft +
 							", height: " + child.getMeasuredHeight() + 
 							", width:" + child.getMeasuredWidth());
 				}

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -1286,7 +1286,7 @@ public void setScrollScale(float f) {
 
 		@Override
 		public void scrollTo(int x, int y) {
-//			super.scrollTo(x, y);
+			super.scrollTo(x, y);
 			if (mCustomViewBehind2 != null && mEnabled) {
 				mCustomViewBehind2.scrollTo((int)(x*mScrollScale), y);
 			}

File: example/src/com/slidingmenu/example/ExampleActivity.java
Patch:
@@ -37,6 +37,7 @@ public void onCreate(Bundle savedInstanceState) {
 		t.commit();
 
 		// customize the SlidingMenu
+		this.setSlidingActionBarEnabled(false);
 		getSlidingMenu().setShadowWidthRes(R.dimen.shadow_width);
 		getSlidingMenu().setShadowDrawable(R.drawable.shadow);
 		getSlidingMenu().setBehindOffsetRes(R.dimen.actionbar_home_width);
@@ -48,6 +49,7 @@ public void onCreate(Bundle savedInstanceState) {
 		actionBar.setDisplayHomeAsUpEnabled(true);
 	}
 	
+	
 	public class PagerAdapter extends FragmentPagerAdapter implements 
 	ViewPager.OnPageChangeListener, TabListener{
 

File: library/src/com/slidingmenu/lib/CustomViewBehind.java
Patch:
@@ -8,7 +8,7 @@
 
 public class CustomViewBehind extends CustomViewAbove {
 	
-	private static final String TAG = "CustomViewBehind2";
+	private static final String TAG = "CustomViewBehind";
 
 	public CustomViewBehind(Context context) {
 		this(context, null);

File: example/src/com/slidingmenu/example/ExampleActivity.java
Patch:
@@ -40,7 +40,7 @@ public void onCreate(Bundle savedInstanceState) {
 		getSlidingMenu().setShadowWidthRes(R.dimen.shadow_width);
 		getSlidingMenu().setShadowDrawable(R.drawable.shadow);
 		getSlidingMenu().setBehindOffsetRes(R.dimen.actionbar_home_width);
-		getSlidingMenu().setBehindScrollScale(0.5f);
+		getSlidingMenu().setBehindScrollScale(0.25f);
 
 		// customize the ActionBar
 		ActionBar actionBar = getSupportActionBar();

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -57,7 +57,6 @@ public SlidingMenu(Context context, AttributeSet attrs, int defStyle) {
 		setTouchModeAbove(touchModeAbove);
 		int touchModeBehind = ta.getInt(R.styleable.SlidingMenu_behindTouchMode, TOUCHMODE_MARGIN);
 		setTouchModeBehind(touchModeBehind);
-		// set the offset and scroll scale if defined in xml
 		int offsetBehind = (int) ta.getDimension(R.styleable.SlidingMenu_behindOffset, 0);
 		setBehindOffset(offsetBehind);
 		float scrollOffsetBehind = ta.getFloat(R.styleable.SlidingMenu_behindScrollScale, 0.25f);
@@ -72,7 +71,7 @@ public SlidingMenu(Context context, AttributeSet attrs, int defStyle) {
 		setFadeEnabled(fadeEnabled);
 		float fadeDeg = ta.getFloat(R.styleable.SlidingMenu_behindFadeDegree, 0.5f);
 		setFadeDegree(fadeDeg);
-		showAbove();
+//		showAbove();
 	}
 
 	public void setViewAbove(int res) {

File: library/src/com/slidingmenu/lib/MenuScreen.java
Patch:
@@ -35,6 +35,5 @@ public void addItem(String title, String catKey) {
 		cbp.setTitle(title);
 		cat.addPreference(cbp);
 	}
-	
 
 }

File: library/src/com/slidingmenu/lib/CustomViewAbove.java
Patch:
@@ -1225,8 +1225,8 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
 				mLastMotionY = ev.getY();
 				mActivePointerId = MotionEventCompat.getPointerId(ev, 0);
 				
-				if (mScrollState == SCROLL_STATE_SETTLING ||
-						(this.mTouchModeAbove != SlidingMenu.TOUCHMODE_FULLSCREEN && thisTouchAllowed(ev.getX()))) {
+				if (mScrollState == SCROLL_STATE_SETTLING || isMenuOpen() ||
+						(mTouchModeAbove != SlidingMenu.TOUCHMODE_FULLSCREEN && thisTouchAllowed(ev.getX()))) {
 					// Let the user 'catch' the pager as it animates.
 					mIsBeingDragged = true;
 					mIsUnableToDrag = false;

File: library/src/com/slidingmenu/lib/CustomViewBehind2.java
Patch:
@@ -11,11 +11,11 @@ public class CustomViewBehind2 extends CustomViewAbove {
 	private static final String TAG = "CustomViewBehind2";
 
 	public CustomViewBehind2(Context context) {
-		super(context);
+		this(context, null);
 	}
 
 	public CustomViewBehind2(Context context, AttributeSet attrs) {
-		super(context, attrs);
+		super(context, attrs, false);
 	}
 
 	public int getDestScrollX() {

File: library/src/com/slidingmenu/lib/SlidingMenu.java
Patch:
@@ -40,7 +40,7 @@ public SlidingMenu(Context context, AttributeSet attrs, int defStyle) {
 		if (viewAbove != -1) {
 			LayoutInflater inflater = (LayoutInflater) 
 					context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-			setAboveView(inflater.inflate(viewAbove, this), null);
+			setAboveView(inflater.inflate(viewAbove, null), null);
 		}
 		int viewBehind = ta.getResourceId(R.styleable.SlidingMenu_viewBehind, -1);
 		if (viewBehind != -1) {

File: example/src/com/slidingmenu/example/ExampleActivity.java
Patch:
@@ -16,7 +16,6 @@ public void onCreate(Bundle savedInstanceState) {
 		setBehindOffset((int)getResources().getDimension(R.dimen.actionbar_home_width));
 		setBehindScrollScale(0.5f);
 		this.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-		View v = this.getWindow().getDecorView();
 	}
 	
 	public boolean onOptionsItemSelected(MenuItem item) {

