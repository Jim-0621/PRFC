File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugLogService.java
Patch:
@@ -108,7 +108,7 @@ public LogDTO deleteLog(String id) {
     public LogDTO recoverLog(String id) {
         Bug bug = bugMapper.selectByPrimaryKey(id);
         if (bug != null) {
-            LogDTO dto = new LogDTO(bug.getProjectId(), null, bug.getId(), null, OperationLogType.RECOVER.name(), OperationLogModule.BUG_MANAGEMENT_RECYCLE, bug.getTitle());
+            LogDTO dto = new LogDTO(bug.getProjectId(), null, bug.getId(), null, OperationLogType.RECOVER.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, bug.getTitle());
             dto.setHistory(true);
             dto.setPath("/bug/trash/recover");
             dto.setMethod(HttpMethodConstants.GET.name());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseMinderService.java
Patch:
@@ -101,7 +101,7 @@ private List<String> getModuleId(List<BaseTreeNode> tree, String moduleId) {
                 nodeIds.add(node.getId());
                 getChildrenModuleId(node.getChildren(), nodeIds);
             } else {
-                getModuleId(node.getChildren(), moduleId);
+                nodeIds.addAll(getModuleId(node.getChildren(), moduleId));
             }
         }
         return nodeIds;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBugService.java
Patch:
@@ -20,6 +20,7 @@
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
@@ -107,7 +108,7 @@ public void refreshPos(String testPlanId) {
     private void parseCustomField(List<TestPlanBugPageResponse> bugList, String projectId) {
         // MS处理人会与第三方的值冲突, 分开查询
         List<SelectOption> headerOptions = bugCommonService.getHeaderHandlerOption(projectId);
-        Map<String, String> headerHandleUserMap = headerOptions.stream().collect(Collectors.toMap(SelectOption::getValue, SelectOption::getText));
+        Map<String, String> headerHandleUserMap = CollectionUtils.isEmpty(headerOptions) ? new HashMap<>() : headerOptions.stream().collect(Collectors.toMap(SelectOption::getValue, SelectOption::getText));
         List<SelectOption> localOptions = bugCommonService.getLocalHandlerOption(projectId);
         Map<String, String> localHandleUserMap = localOptions.stream().collect(Collectors.toMap(SelectOption::getValue, SelectOption::getText));
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/BatchExecTaskPageRequest.java
Patch:
@@ -12,6 +12,7 @@ public class BatchExecTaskPageRequest extends BasePageRequest {
 
 	@Schema(description = "任务ID", requiredMode = Schema.RequiredMode.REQUIRED)
 	private String taskId;
-	@Schema(description = "批量任务类型", requiredMode = Schema.RequiredMode.REQUIRED, allowableValues = {"API_CASE_BATCH", "API_SCENARIO_BATCH"})
+	@Schema(description = "批量任务类型", requiredMode = Schema.RequiredMode.REQUIRED,
+			allowableValues = {"API_CASE_BATCH", "API_SCENARIO_BATCH", "TEST_PLAN_API_CASE_BATCH", "TEST_PLAN_API_SCENARIO_BATCH"})
 	private String batchType;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -983,7 +983,7 @@ private void handleThirdSchedule(Schedule schedule, String cron) {
      */
     public List<BatchExecTaskReportDTO> listBatchTaskReport(BatchExecTaskPageRequest request) {
         List<BatchExecTaskReportDTO> batchReportList;
-        if (StringUtils.equals(ExecTaskType.API_CASE_BATCH.name(), request.getBatchType())) {
+        if (StringUtils.equalsAny(request.getBatchType(), ExecTaskType.API_CASE_BATCH.name(), ExecTaskType.TEST_PLAN_API_CASE_BATCH.name())) {
             batchReportList = extExecTaskItemMapper.list(request, "api_report");
         } else {
             batchReportList = extExecTaskItemMapper.list(request, "api_scenario_report");

File: backend/services/project-management/src/main/java/io/metersphere/project/constants/PropertyConstant.java
Patch:
@@ -34,4 +34,6 @@ public class PropertyConstant {
 
     public final static String FILE = "file";
 
+    public final static String TEXT = "text";
+
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1603,8 +1603,9 @@ public List<BugLocalAttachment> syncRichTextPicToMs(PlatformBugDTO syncBug, Plat
                                 .replace(tmpRichUrl, "src=\"/bug/attachment/preview/md/" + syncBug.getProjectId() + "/" + fileId + "/false\""));
                         if (syncBug.getPlatformDefaultTemplate()) {
                             // 来自富文本自定义字段
-                            PlatformCustomFieldItemDTO descriptionField = syncBug.getCustomFieldList().stream().filter(field -> StringUtils.equals(field.getCustomData(), "description")).toList().getFirst();
-                            descriptionField.setValue(syncBug.getDescription());
+                            PlatformCustomFieldItemDTO richTextField = syncBug.getCustomFieldList().stream().filter(field -> StringUtils.equals(field.getType(), PlatformCustomFieldType.RICH_TEXT.name())
+                                    && field.getValue() != null && StringUtils.contains(field.getValue().toString(), tmpRichUrl)).toList().getFirst();
+                            richTextField.setValue(syncBug.getDescription());
                         }
                     } else {
                         // 来自富文本自定义字段

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugCommonService.java
Patch:
@@ -42,7 +42,6 @@
  * @author song-cc-rock
  */
 @Service
-@Transactional(rollbackFor = Exception.class)
 public class BugCommonService {
 
 	@Resource
@@ -143,6 +142,7 @@ public List<BugTemplateInjectField> getPlatformInjectFields(String projectId) {
 	 * @param projectId 项目ID
 	 * @param bugIds 缺陷ID集合
 	 */
+	@Transactional(rollbackFor = Exception.class)
 	public void clearAssociateResource(String projectId, List<String> bugIds) {
 		// 清空附件(关联, 本地上传, 富文本)
 		FileAssociationExample example = new FileAssociationExample();

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugStatusService.java
Patch:
@@ -15,13 +15,11 @@
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Transactional;
 
 import java.util.ArrayList;
 import java.util.List;
 
 @Service
-@Transactional(rollbackFor = Exception.class)
 public class BugStatusService {
     @Resource
     private BugMapper bugMapper;

File: backend/services/project-management/src/main/java/io/metersphere/project/service/PermissionCheckService.java
Patch:
@@ -116,6 +116,9 @@ public Map<String, Set<String>> getHasUserPermissionProjectIds(String userId, Se
 
         for (String projectId : projectIds) {
             List<UserRolePermission> userRolePermissions = projectPermissionMap.get(projectId);
+            if (CollectionUtils.isEmpty(userRolePermissions)) {
+                continue;
+            }
             for (UserRolePermission userRolePermission : userRolePermissions) {
                 if (permissions.contains(userRolePermission.getPermissionId())) {
                     permissionProjectIdMap.computeIfAbsent(userRolePermission.getPermissionId(), key -> new LinkedHashSet<>()).add(projectId);

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/dto/LayoutDTO.java
Patch:
@@ -34,5 +34,7 @@ public class LayoutDTO implements Serializable {
     private List<String> handleUsers;
     @Schema(description = "测试计划ID")
     private String planId;
+    @Schema(description = "测试计划组ID")
+    private String groupId;
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -111,5 +111,5 @@ public interface ExtTestPlanMapper {
 
     List<TestPlanConfig> selectTestPlanConfigByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 
-    List<TestPlan> selectIdAndGroupIdByProjectId(String projectId);
+    List<TestPlan> selectIdAndGroupIdByProjectId(@Param("projectId") String projectId, @Param("selectArchived") boolean selectArchived);
 }

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanControllerTests.java
Patch:
@@ -2813,7 +2813,7 @@ void testForFunctions() {
         Assertions.assertEquals(1, underwayTestPlanIds.size());
         Assertions.assertEquals("test3", underwayTestPlanIds.getFirst());
 
-        testPlanManagementService.selectTestPlanIdByProjectIdUnionConditions(null, null, null, null);
+        testPlanManagementService.selectTestPlanIdByProjectIdUnionConditions(false, null, null, null, null);
     }
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/utils/TestPlanUtils.java
Patch:
@@ -13,9 +13,10 @@ public class TestPlanUtils {
     public static Map<String, List<String>> parseGroupIdMap(List<TestPlan> testPlanList) {
         Map<String, List<String>> testPlanGroupIdMap = new HashMap<>();
         for (TestPlan testPlan : testPlanList) {
+
             if (StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_GROUP) && !testPlanGroupIdMap.containsKey(testPlan.getId())) {
                 testPlanGroupIdMap.put(testPlan.getId(), new ArrayList<>());
-            } else {
+            } else if (StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_PLAN)) {
                 if (testPlanGroupIdMap.containsKey(testPlan.getGroupId())) {
                     testPlanGroupIdMap.get(testPlan.getGroupId()).add(testPlan.getId());
                 } else {

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardService.java
Patch:
@@ -1691,6 +1691,7 @@ private List<String> getBugEndStatus(String projectId, String platformName) {
         } catch (Exception e) {
             // 获取三方平台结束状态失败, 只过滤本地结束状态
             LogUtils.error(Translator.get("get_platform_end_status_error"));
+            return localLastStepStatus;
         }
         localLastStepStatus.addAll(platformLastStepStatus);
         return localLastStepStatus;

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardService.java
Patch:
@@ -512,7 +512,7 @@ private void rebuildLayouts(List<LayoutDTO> layoutDTOS, List<Project> allPermiss
 
     private void setPlanId(LayoutDTO layoutDTO) {
         TestPlan testPlan = testPlanMapper.selectByPrimaryKey(layoutDTO.getPlanId());
-        if (testPlan == null || StringUtils.equalsIgnoreCase(testPlan.getStatus(), TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED)) {
+        if (testPlan == null || StringUtils.equalsIgnoreCase(testPlan.getStatus(), TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED) || !StringUtils.equalsIgnoreCase(testPlan.getProjectId(),layoutDTO.getProjectIds().getFirst())) {
             TestPlan latestPlan = extTestPlanMapper.getLatestPlan(layoutDTO.getProjectIds().getFirst());
             if (latestPlan != null) {
                 layoutDTO.setPlanId(latestPlan.getId());

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardProjectService.java
Patch:
@@ -77,7 +77,7 @@ public Map<String, Set<String>> getPermissionModuleProjectIds(List<Project> proj
             }
             //检查是否开启测试计划模块
             Set<String> planProjectIds = hasUserPermissionProjectIds.get(PermissionConstants.TEST_PLAN_READ);
-            if (CollectionUtils.isNotEmpty(scenarioProjectIds)) {
+            if (CollectionUtils.isNotEmpty(planProjectIds)) {
                 searchPlanProjectIds = planProjectIds.stream().filter(t -> finalModuleMap.get(t).contains(TEST_PLAN)).collect(Collectors.toSet());
             }
             //检查是否开启缺陷模块

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardService.java
Patch:
@@ -1827,7 +1827,7 @@ public List<CascadeChildrenDTO> getPlanOption(String projectId) {
         List<CascadeChildrenDTO> cascadeDTOList = new ArrayList<>();
         List<TestPlanAndGroupInfoDTO> groupAndPlanInfo = extTestPlanMapper.getGroupAndPlanInfo(projectId);
         TestPlanExample testPlanExample = new TestPlanExample();
-        testPlanExample.createCriteria().andProjectIdEqualTo(projectId).andTypeEqualTo(TestPlanConstants.TEST_PLAN_TYPE_PLAN).andGroupIdEqualTo(NONE);
+        testPlanExample.createCriteria().andProjectIdEqualTo(projectId).andTypeEqualTo(TestPlanConstants.TEST_PLAN_TYPE_PLAN).andGroupIdEqualTo(NONE).andStatusEqualTo(TestPlanConstants.TEST_PLAN_STATUS_NOT_ARCHIVED);
         testPlanExample.setOrderByClause(" create_time DESC ");
         List<TestPlan> testPlans = testPlanMapper.selectByExample(testPlanExample);
         Map<String, List<TestPlanAndGroupInfoDTO>> groupMap = groupAndPlanInfo.stream().sorted(Comparator.comparing(TestPlanAndGroupInfoDTO::getGroupCreateTime).reversed()).collect(Collectors.groupingBy(TestPlanAndGroupInfoDTO::getGroupId));

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/MsScriptAssertion.java
Patch:
@@ -46,7 +46,6 @@ public boolean isValid() {
         }
     }
 
-    @JsonIgnore
     public boolean isEnableCommonScript() {
         return BooleanUtils.isTrue(enableCommonScript);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/api/processor/ScriptProcessor.java
Patch:
@@ -54,7 +54,6 @@ public boolean isValid() {
         }
     }
 
-    @JsonIgnore
     public boolean isEnableCommonScript() {
         return BooleanUtils.isTrue(enableCommonScript);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileAssociationService.java
Patch:
@@ -296,6 +296,9 @@ private Map<String, List<String>> genSourceNameFileNameMap(List<FileAssociation>
         Map<String,String> fileIdMap = new HashMap<>();
         for (FileAssociation fileAssociation:fileAssociationList){
             FileAssociationSource source  = extFileAssociationMapper.selectNameBySourceTableAndId(FileAssociationSourceUtil.getQuerySql(fileAssociation.getSourceType()),fileAssociation.getSourceId());
+            if (source == null) {
+                continue;
+            }
             this.validateSourceName(source);
             String fileName = null;
             if(fileIdMap.containsKey(fileAssociation.getFileId())){

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunApiScenarioExecuteCallbackService.java
Patch:
@@ -58,7 +58,7 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
         ApiScenarioDetail apiScenarioDetail = apiScenarioRunService.getForRunWithTaskItemErrorMassage(request.getTaskItem().getId(), testPlanReportApiScenario.getApiScenarioId());
         apiScenarioDetail.setEnvironmentId(testPlanReportApiScenario.getEnvironmentId());
         apiScenarioDetail.setGrouped(testPlanReportApiScenario.getGrouped());
-        GetRunScriptResult result = planRunTestPlanApiScenarioService.getRunScript(request);
+        GetRunScriptResult result = apiScenarioRunService.getRunScript(request, apiScenarioDetail);
         String reportId = initReport(request, testPlanReportApiScenario, apiScenarioDetail);
         result.setReportId(reportId);
         return result;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportShareController.java
Patch:
@@ -230,8 +230,7 @@ public Pager<List<TestPlanReportDetailCollectionResponse>> collectionPage(@PathV
         request.setDetailReportIds(testPlanReportService.getActualReportIds(request.getReportId()));
         ShareInfo shareInfo = testPlanReportShareService.checkResource(request.getShareId());
         testPlanReportShareService.validateExpired(shareInfo);
-        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "tpc.pos desc");
+        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), "tpc.pos asc");
         return PageUtils.setPageInfo(page, testPlanReportService.listReportCollection(request, type));
     }
 }

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/dto/NameCountDTO.java
Patch:
@@ -14,5 +14,5 @@ public class NameCountDTO {
     private String name;
 
     @Schema(description =  "数量")
-    private Integer count;
+    private Object count;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -801,7 +801,7 @@ public TaskRequestDTO run(String id, String reportId, String userId) {
             taskInfo.setRealTime(true);
         }
 
-        return apiExecuteService.execute(taskRequest);
+        return apiExecuteService.executePlanResource(taskRequest);
     }
 
     public void runRun(ExecTask execTask, ExecTaskItem execTaskItem, String userId) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -395,7 +395,7 @@ public TaskRequestDTO run(String id, String reportId, String userId) {
             apiScenarioRunService.initApiScenarioReport(taskItem.getId(), apiScenario, scenarioReport);
         }
 
-        return apiExecuteService.execute(taskRequest);
+        return apiExecuteService.executePlanResource(taskRequest);
     }
 
     public void runRun(ExecTask execTask, ExecTaskItem execTaskItem, String userId) {

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiCaseControllerTests.java
Patch:
@@ -366,7 +366,8 @@ public void run() throws Exception {
     public static void assertRun(MvcResult mvcResult) throws UnsupportedEncodingException {
         Map resultData = JSON.parseMap(mvcResult.getResponse().getContentAsString());
         Integer code = (Integer) resultData.get("code");
-        if (code != ApiResultCode.RESOURCE_POOL_EXECUTE_ERROR.getCode() && code != ApiResultCode.EXECUTE_RESOURCE_POOL_NOT_CONFIG.getCode()) {
+        if (code != ApiResultCode.RESOURCE_POOL_EXECUTE_ERROR.getCode() && code != ApiResultCode.EXECUTE_RESOURCE_POOL_NOT_CONFIG.getCode()
+                && code != ApiResultCode.TASK_ERROR_MESSAGE_INVALID_RESOURCE_POOL.getCode()) {
             Assertions.assertTrue(false);
         }
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/CalculateUtils.java
Patch:
@@ -13,13 +13,13 @@ public static String reportPercentage(int numerator, int denominator) {
         rateFormat.setMinimumFractionDigits(2);
         rateFormat.setMaximumFractionDigits(2);
 
-        double passRate = Double.parseDouble(rateFormat.format((double) numerator * 100 / (double) denominator));
+        double passRate = percentage(numerator, denominator);
         if (passRate == 100 && numerator < denominator) {
             return "99.99%";
         } else if (passRate == 0 && numerator > 0) {
             return "0.01%";
         } else {
-            return passRate + "%";
+            return rateFormat.format(passRate) + "%";
         }
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -457,8 +457,7 @@ private String doTestPlanOrGroupRerun(TestPlanExecutionQueue executionQueue) {
 
         String prepareReportId = executionQueue.getPrepareReportId();
 
-        // 更新计划组以及子计划的状态为 RUNNING
-        extTestPlanReportMapper.resetRerunReport(prepareReportId);
+        testPlanReportService.resetRerunReport(prepareReportId);
 
         if (StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_GROUP)) {
             List<TestPlan> children = testPlanService.selectNotArchivedChildren(testPlan.getId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugMapper.java
Patch:
@@ -139,4 +139,7 @@ public interface ExtBugMapper {
     List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUsers") Set<String> handleUsers,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms);
 
     List<Bug>getByHandleUser(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("localHandleUser") String localHandleUser,@Param("createUser") String createUser,@Param("thirdHandleUser") String thirdHandleUser, @Param("thirdPlatform") String thirdPlatform);
+
+    long localBugCount(@Param("projectId") String projectId);
+
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -172,7 +172,9 @@ public TestPlanCalculationDTO selectTestPlanIdByProjectIdUnionConditions(String
             noGroupPlanIdList = testPlanGroupIdMap.get(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID);
             testPlanGroupIdMap.remove(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID);
         }
-        noGroupPlanIdMap.put(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID, noGroupPlanIdList);
+        if (CollectionUtils.isNotEmpty(noGroupPlanIdList)) {
+            noGroupPlanIdMap.put(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID, noGroupPlanIdList);
+        }
         testPlanList = null;
 
         Map<String, TestPlanResourceService> beansOfType = applicationContext.getBeansOfType(TestPlanResourceService.class);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -93,7 +93,7 @@ public BugColumnsOptionDTO getHeaderOption(@PathVariable String projectId) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<BugDTO>> page(@Validated @RequestBody BugPageRequest request) {
         request.setUseTrash(false);
-        if (request.getRelatedToPlan() || request.getCreateByMe() || request.getAssignedToMe() || request.getUnresolved()) {
+        if (request.getBoardCount() || request.getRelatedToPlan() || request.getCreateByMe() || request.getAssignedToMe() || request.getUnresolved()) {
             request.setTodoParam(bugService.buildBugToDoParam(request, SessionUtils.getUserId(), SessionUtils.getCurrentOrganizationId()));
         }
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugPageRequest.java
Patch:
@@ -32,6 +32,9 @@ public class BugPageRequest extends BasePageRequest {
     @Schema(description = "工作台参数: 是否待我处理的")
     private Boolean assignedToMe = false;
 
+    @Schema(description = "工作台参数: 缺陷数")
+    private Boolean boardCount = false;
+
     @Schema(description = "工作台参数: 是否遗留的")
     private Boolean unresolved = false;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -11,7 +11,6 @@
 import io.metersphere.api.dto.request.ApiTransferRequest;
 import io.metersphere.api.dto.request.ImportRequest;
 import io.metersphere.api.dto.scenario.ApiFileCopyRequest;
-import io.metersphere.api.dto.scenario.ApiScenarioStepFileCopyRequest;
 import io.metersphere.api.dto.schema.JsonSchemaItem;
 import io.metersphere.api.mapper.ExtApiDefinitionMapper;
 import io.metersphere.api.mapper.ExtApiScenarioStepMapper;
@@ -109,8 +108,8 @@ public ApiCoverageDTO rage(@PathVariable String projectId) {
 
         // 获取 API 定义、测试用例 ID 和场景步骤中的 API ID
         List<String> apiDefinitionIdFromCase = extApiTestCaseMapper.selectApiId(projectId);
-        List<String> apiInScenarioStep = new ArrayList<>(extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API.name(), null));
-        List<String> apiCaseIdInStep = extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API_CASE.name(), null);
+        List<String> apiInScenarioStep = new ArrayList<>(extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API.name()));
+        List<String> apiCaseIdInStep = extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API_CASE.name());
 
         // 如果有场景步骤中的 API 用例 ID，追加相关 API ID
         if (CollectionUtils.isNotEmpty(apiCaseIdInStep)) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -201,8 +201,8 @@ private List<String> selectApiIdInCase(String projectId, List<String> protocols)
 
     private List<String> selectApiIdInScenarioStep(String projectId, List<String> protocols, List<String> ignoreApiIds) {
 
-        List<String> apiInScenarioStep = new ArrayList<>(extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API.name(), protocols));
-        List<String> apiCaseIdInStep = extApiScenarioStepMapper.selectResourceId(projectId, ApiScenarioStepType.API_CASE.name(), protocols);
+        List<String> apiInScenarioStep = extApiScenarioStepMapper.selectApiResourceId(projectId, ApiScenarioStepType.API.name(), protocols);
+        List<String> apiCaseIdInStep = extApiScenarioStepMapper.selectApiCaseResourceId(projectId, ApiScenarioStepType.API_CASE.name(), protocols);
         // 如果有场景步骤中的 API 用例 ID，追加相关 API ID
         if (CollectionUtils.isNotEmpty(apiCaseIdInStep)) {
             List<String> apiCaseIdInScenarioStep = extApiTestCaseMapper.selectApiIdByCaseId(apiCaseIdInStep, protocols, ignoreApiIds);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiFileResourceService.java
Patch:
@@ -401,9 +401,9 @@ public String transfer(ApiTransferRequest request, String currentUser, String fo
         return fileId;
     }
 
-    public List<ApiFileResource> selectByResourceIds(Collection<String> copyFromStepIds) {
+    public List<ApiFileResource> selectByResourceIds(List<String> copyFromStepIds) {
         ApiFileResourceExample example = new ApiFileResourceExample();
-        example.createCriteria().andResourceIdIn(new ArrayList<>(copyFromStepIds));
+        example.createCriteria().andResourceIdIn(copyFromStepIds);
         return apiFileResourceMapper.selectByExample(example);
     }
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -2137,8 +2137,8 @@ public BugTodoRequest buildBugToDoParam(BugPageRequest request, String currentUs
             if (StringUtils.equals(platformName, BugPlatform.LOCAL.getName())) {
                 return todoParam;
             }
+            todoParam.setCurrentPlatform(platformName);
             if (request.getUnresolved()) {
-                todoParam.setCurrentPlatform(platformName);
                 todoParam.setPlatformLastStatus(bugCommonService.getPlatformLastStepStatus(request.getProjectId()));
             }
             if (request.getAssignedToMe()) {

File: backend/services/api-test/src/main/java/io/metersphere/api/job/ApiScenarioScheduleJob.java
Patch:
@@ -69,6 +69,7 @@ protected void businessExecute(JobExecutionContext context) {
         taskInfo.setUserId(userId);
         taskInfo.getRunModeConfig().setEnvironmentId(apiRunModeConfigDTO.getEnvironmentId());
         taskInfo.getRunModeConfig().setGrouped(apiRunModeConfigDTO.getGrouped());
+        taskInfo.setTriggerMode(TaskTriggerMode.SCHEDULE.name());
         taskItem.setId(execTaskItem.getId());
 
         apiExecuteService.execute(taskRequest);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -93,7 +93,7 @@ public BugColumnsOptionDTO getHeaderOption(@PathVariable String projectId) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<BugDTO>> page(@Validated @RequestBody BugPageRequest request) {
         request.setUseTrash(false);
-        if (request.getRelatedToPlan() || request.getCreateByMe() || request.getAssignedToMe()) {
+        if (request.getRelatedToPlan() || request.getCreateByMe() || request.getAssignedToMe() || request.getUnresolved()) {
             request.setTodoParam(bugService.buildBugToDoParam(request, SessionUtils.getUserId(), SessionUtils.getCurrentOrganizationId()));
         }
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.scenario;
 
+import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
 @Data
@@ -9,9 +10,11 @@ public class ApiScenarioStepRequest extends ApiScenarioStepCommonDTO<ApiScenario
      * 如果没有传步骤详情
      * 保存时需要根据这个字段查询原步骤详情保存
      */
+    @Schema(description = "复制的目标步骤ID")
     private String copyFromStepId;
     /**
      * 记录当前步骤是否是新增的步骤
      */
+    @Schema(description = "当前步骤是否是新增的步骤")
     private Boolean isNew;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ApiCaseStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.domain.ApiTestCaseBlob;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.api.mapper.ApiTestCaseBlobMapper;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
@@ -27,7 +27,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         if (isRef(step.getRefType())) {
             ApiTestCaseBlobMapper apiTestCaseBlobMapper = CommonBeanFactory.getBean(ApiTestCaseBlobMapper.class);
             ApiTestCaseBlob apiTestCaseBlob = apiTestCaseBlobMapper.selectByPrimaryKey(step.getResourceId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ApiScenarioStepParser.java
Patch:
@@ -1,9 +1,9 @@
 package io.metersphere.api.parser.step;
 
 import io.metersphere.api.domain.ApiScenarioBlob;
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.MsScenario;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.api.dto.scenario.ScenarioConfig;
 import io.metersphere.api.mapper.ApiScenarioBlobMapper;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
@@ -38,7 +38,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
      * @return
      */
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         if (isRef(step.getRefType())) {
             ApiScenarioBlobMapper apiScenarioBlobMapper = CommonBeanFactory.getBean(ApiScenarioBlobMapper.class);
             ApiScenarioBlob apiScenarioBlob = apiScenarioBlobMapper.selectByPrimaryKey(step.getResourceId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ApiStepParser.java
Patch:
@@ -1,11 +1,11 @@
 package io.metersphere.api.parser.step;
 
 import io.metersphere.api.domain.ApiDefinitionBlob;
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.http.MsHTTPElement;
 import io.metersphere.api.dto.request.http.body.Body;
 import io.metersphere.api.dto.request.http.body.FormDataKV;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.api.mapper.ApiDefinitionBlobMapper;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
@@ -52,7 +52,7 @@ public AbstractMsTestElement parseRefTestElement(String resourceBlob, String ste
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         if (isRef(step.getRefType())) {
             ApiDefinitionBlobMapper apiDefinitionBlobMapper = CommonBeanFactory.getBean(ApiDefinitionBlobMapper.class);
             ApiDefinitionBlob apiDefinitionBlob = apiDefinitionBlobMapper.selectByPrimaryKey(step.getResourceId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ConstantTimerStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.controller.MsConstantTimerController;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 
 public class ConstantTimerStepParser extends StepParser {
@@ -12,7 +12,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/DefaultStepParser.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 
 /**
@@ -18,7 +18,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return parse2MsTestElement(getStepBlobString(step.getId()));
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/IfControllerStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.controller.MsIfController;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 
 public class IfControllerStepParser extends StepParser {
@@ -12,7 +12,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/JMeterComponentStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.MsJMeterComponent;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 
@@ -13,7 +13,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/LoopControllerStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.controller.MsLoopController;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 
 public class LoopControllerStepParser extends StepParser {
@@ -13,7 +13,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/OnceOnlyControllerStepParser.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.api.parser.step;
 
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.dto.request.controller.MsOnceOnlyController;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 import io.metersphere.sdk.util.BeanUtils;
 
@@ -15,7 +15,7 @@ public AbstractMsTestElement parseTestElement(ApiScenarioStepCommonDTO step, Str
     }
 
     @Override
-    public Object parseDetail(ApiScenarioStep step) {
+    public Object parseDetail(ApiScenarioStepDetailRequest step) {
         return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/StepParser.java
Patch:
@@ -1,9 +1,9 @@
 package io.metersphere.api.parser.step;
 
 import io.metersphere.api.constants.ApiScenarioStepRefType;
-import io.metersphere.api.domain.ApiScenarioStep;
 import io.metersphere.api.domain.ApiScenarioStepBlob;
 import io.metersphere.api.dto.scenario.ApiScenarioStepCommonDTO;
+import io.metersphere.api.dto.scenario.ApiScenarioStepDetailRequest;
 import io.metersphere.api.mapper.ApiScenarioStepBlobMapper;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
@@ -37,7 +37,7 @@ public abstract class StepParser {
      * @param step
      * @return
      */
-    public abstract Object parseDetail(ApiScenarioStep step);
+    public abstract Object parseDetail(ApiScenarioStepDetailRequest step);
 
 
     protected boolean isRef(String refType) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiScenarioDataTransferService.java
Patch:
@@ -443,7 +443,7 @@ private void updateApiScenarioStep(ApiScenarioImportDetail request, String userI
 
             scenarioCsvSteps = apiScenarioService.filterNotExistCsv(request.getScenarioConfig(), scenarioCsvSteps);
             this.saveStepCsv(scenarioId, scenarioCsvSteps, csvStepBatchMapper);
-            //            apiScenarioService.
+
             // 获取待更新的步骤详情
             apiScenarioService.addSpecialStepDetails(steps, request.getStepDetails());
             List<ApiScenarioStepBlob> updateStepBlobs = apiScenarioService.getUpdateStepBlobs(apiScenarioSteps, request.getStepDetails());

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/ApiScenarioMessageDTO.java
Patch:
@@ -106,9 +106,6 @@ public class ApiScenarioMessageDTO {
     @Schema(description = "message.domain.api_scenario_requestFakeErrorRate")
     private String requestFakeErrorRate;
 
-    @Schema(description = "message.domain.api_scenario_reportRequestPassRate")
-    private String reportRequestPassRate;
-
     @Schema(description = "message.domain.api_scenario_assertionPassRate")
     private String assertionPassRate;
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -354,7 +354,7 @@ public void insertExecTaskAndDetail(List<ExecTask> tasks, List<ExecTaskItem> ite
      */
     public Pager<List<TaskHubItemDTO>> getCaseTaskItemList(TaskHubItemRequest request, String orgId, String projectId) {
         Page<Object> page = PageMethod.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "id desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
         return PageUtils.setPageInfo(page, getCaseTaskItemPage(request, orgId, projectId));
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1841,14 +1841,14 @@ public List<String> getBatchIdsByRequest(BugBatchRequest request) {
                 ids.removeIf(id -> request.getExcludeIds().contains(id));
             }
             if (CollectionUtils.isEmpty(ids)) {
-                throw new MSException(Translator.get("no_bug_select"));
+                return new ArrayList<>();
             }
             //返回去重后的id
             return new ArrayList<>(ids.stream().distinct().toList());
         } else {
             // 部分勾选
             if (CollectionUtils.isEmpty(request.getSelectIds())) {
-                throw new MSException(Translator.get("no_bug_select"));
+                return new ArrayList<>();
             }
             return request.getSelectIds();
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/ApiDefinitionUtils.java
Patch:
@@ -37,7 +37,7 @@ public static boolean isUrlInList(String apiUrl, Collection<String> customReques
                         String urlItem = urlParams[urlIndex];
                         String customUrlItem = customUrlArr[customUrlArr.length - urlParams.length + urlIndex];
                         // 不为rest参数的要进行全匹配。 而且忽略大小写
-                        if (isRestUrlParam(customUrlItem) && isRestUrlParam(urlItem)) {
+                        if (isNotRestUrlParam(customUrlItem) && isNotRestUrlParam(urlItem)) {
                             if (!StringUtils.equalsIgnoreCase(customUrlItem, urlItem)) {
                                 isFetch = false;
                                 break;
@@ -53,7 +53,7 @@ public static boolean isUrlInList(String apiUrl, Collection<String> customReques
                         String urlItem = urlParams[urlIndex];
                         String customUrlItem = customUrlArr[urlIndex];
                         // 不为rest参数的要进行全匹配。 而且忽略大小写
-                        if (isRestUrlParam(customUrlItem) && isRestUrlParam(urlItem)) {
+                        if (isNotRestUrlParam(customUrlItem) && isNotRestUrlParam(urlItem)) {
                             if (!StringUtils.equalsIgnoreCase(customUrlItem, urlItem)) {
                                 isFetch = false;
                                 break;
@@ -80,7 +80,7 @@ private static String pretreatmentUrl(String customRequestUrl) {
         return customRequestUrl;
     }
 
-    private static boolean isRestUrlParam(String urlParam) {
+    private static boolean isNotRestUrlParam(String urlParam) {
         return !StringUtils.startsWith(urlParam, "{") || !StringUtils.endsWith(urlParam, "}") || StringUtils.equals(urlParam, "{}");
     }
 }

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectTaskHubControllerTests.java
Patch:
@@ -57,7 +57,7 @@ public class ProjectTaskHubControllerTests extends BaseTest {
     public static final String PROJECT_SCHEDULE_TASK_SWITCH = "/project/task-center/schedule/switch/";
     public static final String PROJECT_SCHEDULE_TASK_BATCH_ENABLE = "/project/task-center/schedule/batch-enable";
     public static final String PROJECT_SCHEDULE_TASK_BATCH_DISABLE = "/project/task-center/schedule/batch-disable";
-    public static final String PROJECT_SCHEDULE_TASK_UPDATE_CRON = "/organization/task-center/schedule/update-cron";
+    public static final String PROJECT_SCHEDULE_TASK_UPDATE_CRON = "/project/task-center/schedule/update-cron";
 	public static final String PROJECT_BATCH_TASK_PAGE = "/project/task-center/exec-task/batch/page";
 
 	@Test
@@ -295,6 +295,8 @@ public void projectScheduleUpdateCron() throws Exception {
         request.setCron("0 0 0 1 * ?");
         request.setId("pro_wx_1");
         this.requestPost(PROJECT_SCHEDULE_TASK_UPDATE_CRON, request);
+        request.setId("pro_wx_2");
+        this.requestPost(PROJECT_SCHEDULE_TASK_UPDATE_CRON, request);
     }
 
     @Test

File: backend/services/system-setting/src/main/java/io/metersphere/system/schedule/ScheduleService.java
Patch:
@@ -19,7 +19,6 @@
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.List;
-import java.util.UUID;
 
 @Transactional(rollbackFor = Exception.class)
 public class ScheduleService {
@@ -121,7 +120,7 @@ public void addOrUpdateCronJob(Schedule request, JobKey jobKey, TriggerKey trigg
         }
     }
 
-    public void updateIfExist(String resourceId, boolean enable, JobKey jobKey, TriggerKey triggerKey, Class clazz, String operator) {
+    public List<String> updateIfExist(String resourceId, boolean enable, JobKey jobKey, TriggerKey triggerKey, Class clazz, String operator) {
         ScheduleExample example = new ScheduleExample();
         example.createCriteria().andResourceIdEqualTo(resourceId).andJobEqualTo(clazz.getName());
         List<Schedule> scheduleList = scheduleMapper.selectByExample(example);
@@ -140,6 +139,7 @@ public void updateIfExist(String resourceId, boolean enable, JobKey jobKey, Trig
                 }
             }
         }
+        return scheduleList.stream().map(Schedule::getResourceId).toList();
     }
 
     public String scheduleConfig(ScheduleConfig scheduleConfig, JobKey jobKey, TriggerKey triggerKey, Class clazz, String operator) {

File: backend/services/dashboard/src/test/java/io/metersphere/dashboard/controller/DashboardFrontPageControllerTests.java
Patch:
@@ -115,6 +115,7 @@ public void testSql() throws Exception {
         dashboardFrontPageRequest.setCurrent(1);
         dashboardFrontPageRequest.setPageSize(5);
         dashboardFrontPageRequest.setProjectIds(List.of(DEFAULT_PROJECT_ID));
+        dashboardFrontPageRequest.setHandleUsers(List.of("admin"));
         MvcResult bugMvcResult = this.requestPostWithOkAndReturn(BUG_HANDLE_USER, dashboardFrontPageRequest);
         String bugContentAsString = bugMvcResult.getResponse().getContentAsString(StandardCharsets.UTF_8);
         ResultHolder bugResultHolder = JSON.parseObject(bugContentAsString, ResultHolder.class);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -494,7 +494,7 @@ public void rerun(ExecTask execTask, String userId) {
     private void serialRerunExecute(ExecTask execTask, String userId) {
         ApiRunModeConfigDTO runModeConfig = getRunModeConfig(execTask);
 
-        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectIdAndResourceIdByTaskId(execTask.getId());
+        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectRerunIdAndResourceIdByTaskId(execTask.getId());
 
         // 初始化执行队列
         ExecutionQueue queue = apiBatchRunBaseService.getExecutionQueue(runModeConfig, ApiExecuteResourceType.API_CASE.name(), execTask.getId(), userId);
@@ -516,7 +516,7 @@ private void serialRerunExecute(ExecTask execTask, String userId) {
      */
     public void parallelRerunExecute(ExecTask execTask, String userId) {
         String projectId = execTask.getProjectId();
-        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectIdAndResourceIdByTaskId(execTask.getId());
+        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectRerunIdAndResourceIdByTaskId(execTask.getId());
         ApiRunModeConfigDTO runModeConfig = getRunModeConfig(execTask);
 
         // 记录用例和任务的映射

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -464,7 +464,7 @@ public void rerun(ExecTask execTask, String userId) {
     private void serialRerunExecute(ExecTask execTask, String userId) {
         ApiRunModeConfigDTO runModeConfig = apiTestCaseBatchRunService.getRunModeConfig(execTask);
 
-        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectIdAndResourceIdByTaskId(execTask.getId());
+        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectRerunIdAndResourceIdByTaskId(execTask.getId());
 
         // 删除重跑的步骤
         deleteRerunIntegratedStepResult(execTask, execTaskItems, runModeConfig);
@@ -489,7 +489,7 @@ private void serialRerunExecute(ExecTask execTask, String userId) {
      */
     public void parallelRerunExecute(ExecTask execTask, String userId) {
         String projectId = execTask.getProjectId();
-        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectIdAndResourceIdByTaskId(execTask.getId());
+        List<ExecTaskItem> execTaskItems = extExecTaskItemMapper.selectRerunIdAndResourceIdByTaskId(execTask.getId());
         ApiRunModeConfigDTO runModeConfig = apiTestCaseBatchRunService.getRunModeConfig(execTask);
 
         // 删除重跑的步骤

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtExecTaskItemMapper.java
Patch:
@@ -72,5 +72,7 @@ public interface ExtExecTaskItemMapper {
 
     List<ExecTaskItem> selectIdAndResourceIdByTaskId(@Param("taskId") String taskId);
 
+    List<ExecTaskItem> selectRerunIdAndResourceIdByTaskId(@Param("taskId") String taskId);
+
     void deleteRerunTaskItem(@Param("taskId") String taskId, String userId);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanTableRequest.java
Patch:
@@ -40,6 +40,9 @@ public class TestPlanTableRequest extends BasePageRequest {
     @Schema(description = "已办的测试计划ID集合 (用作待办排除)")
     private List<String> doneExcludeIds;
 
+    @Schema(description = "额外的子计划ID集合")
+    private List<String> extraIncludeChildIds;
+
     public String getSortString() {
         if (StringUtils.isEmpty(super.getSortString())) {
             return "t.update_time desc";

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanTests.java
Patch:
@@ -1669,7 +1669,7 @@ public void testPlanRage() throws Exception {
         MvcResult mvcResult = this.requestPostWithOkAndReturn("/test-plan/rage", request);
         TestPlanCoverageDTO coverageDTO = this.getResultData(mvcResult, TestPlanCoverageDTO.class);
         Assertions.assertEquals(coverageDTO.getUnExecute() + coverageDTO.getExecuted(), coverageDTO.getPassed() + coverageDTO.getNotPassed());
-        Assertions.assertEquals(coverageDTO.getFinished() + coverageDTO.getRunning() + coverageDTO.getPrepared(), coverageDTO.getPassed() + coverageDTO.getNotPassed());
+        Assertions.assertEquals(coverageDTO.getFinished() + coverageDTO.getRunning() + coverageDTO.getArchived() + coverageDTO.getPrepared(), coverageDTO.getPassed() + coverageDTO.getNotPassed());
     }
 
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/config/interceptor/BugInterceptor.java
Patch:
@@ -1,7 +1,5 @@
 package io.metersphere.system.config.interceptor;
 
-import io.metersphere.bug.domain.BugContent;
-import io.metersphere.sdk.util.CompressUtils;
 import io.metersphere.system.utils.MybatisInterceptorConfig;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -14,7 +12,6 @@ public class BugInterceptor {
     @Bean
     public List<MybatisInterceptorConfig> bugCompressConfigs() {
         List<MybatisInterceptorConfig> configList = new ArrayList<>();
-        configList.add(new MybatisInterceptorConfig(BugContent.class, "description", CompressUtils.class, "zip", "unzip"));
         return configList;
     }
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugMapper.java
Patch:
@@ -137,4 +137,6 @@ public interface ExtBugMapper {
     List<ProjectUserStatusCountDTO> projectUserBugStatusCount(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime, @Param("userIds") List<String> userIds, @Param("platforms") Set<String> platforms);
 
     List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUsers") Set<String> handleUsers,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms);
+
+    List<Bug>getByHandleUser(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("localHandleUser") String localHandleUser,@Param("createUser") String createUser,@Param("thirdHandleUser") String thirdHandleUser, @Param("thirdPlatform") String thirdPlatform);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -364,6 +364,9 @@ private List<String> getDoneIds(String projectId) {
             childPlans = testPlanMapper.selectByExample(example);
         }
         calculateIds.addAll(childPlans.stream().map(TestPlan::getId).toList());
+        if (CollectionUtils.isEmpty(calculateIds)) {
+            return null;
+        }
         List<TestPlanStatisticsResponse> calcPlans = testPlanStatisticsService.calculateRate(calculateIds);
         calcPlans.forEach(plan -> {
             // 筛选出已完成的计划 && 子计划且通过率达到阈值

File: backend/services/system-setting/src/main/java/io/metersphere/system/job/CleanUpReportJob.java
Patch:
@@ -40,7 +40,7 @@ public class CleanUpReportJob {
     /**
      * 清理报告定时任务（所有项目共用一个）
      */
-    @QuartzScheduled(cron = "0 26 11 * * ?")
+    @QuartzScheduled(cron = "0 0 1 * * ?")
     public void cleanReport() {
 
         long count = getProjectCount();

File: backend/services/project-management/src/main/java/io/metersphere/project/service/PermissionCheckService.java
Patch:
@@ -43,6 +43,9 @@ public boolean userHasProjectPermission(String userId, String projectId, String
 
     public Boolean checkModule(String projectId, String module, String userId, String permission) {
         Project project = projectMapper.selectByPrimaryKey(projectId);
+        if (project == null) {
+            return false;
+        }
         boolean hasPermission = userHasProjectPermission(userId, projectId, permission);
         if (! hasPermission) {
             return false;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -173,10 +173,10 @@ public TestPlanReportDetailResponse edit(@Validated @RequestBody TestPlanReportD
     public Pager<List<BugDTO>> pageBug(@Validated @RequestBody TestPlanReportDetailPageRequest request) {
         request.setDetailReportIds(testPlanReportService.getActualReportIds(request.getReportId()));
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "tprb.bug_num, tprb.id desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "tprb.bug_num desc");
         if (!request.getStartPager()) {
             page.close();
-            page.setOrderBy("tprb.bug_num, tprb.id desc");
+            page.setOrderBy("tprb.bug_num desc");
         }
         return PageUtils.setPageInfo(page, testPlanReportService.listReportDetailBugs(request));
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/ApiDefinitionUtils.java
Patch:
@@ -29,6 +29,9 @@ public static boolean isUrlInList(String apiUrl, Collection<String> customReques
                     customRequestUrl = customRequestUrl.substring(1);
                 }
                 if (StringUtils.isNotEmpty(customRequestUrl)) {
+                    if (customRequestUrl.contains("?")) {
+                        customRequestUrl = customRequestUrl.substring(0, customRequestUrl.indexOf("?"));
+                    }
                     String[] customUrlArr = customRequestUrl.split("/");
 
                     if (StringUtils.startsWithAny(customRequestUrl.toLowerCase(), "https://", "http://")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanModuleService.java
Patch:
@@ -167,6 +167,7 @@ public void moveNode(NodeMoveRequest request, String currentUser, String request
         TestPlanModuleExample example = new TestPlanModuleExample();
         // 拖拽后, 父级模块下存在同名模块
         example.createCriteria().andParentIdEqualTo(nodeSortDTO.getParent().getId()).andNameEqualTo(nodeSortDTO.getNode().getName())
+                .andProjectIdEqualTo(nodeSortDTO.getNode().getProjectId())
                 .andIdNotEqualTo(nodeSortDTO.getNode().getId());
         if (testPlanModuleMapper.countByExample(example) > 0) {
             throw new MSException(Translator.get("test_plan_module_already_exists"));

File: backend/services/api-test/src/main/java/io/metersphere/api/service/CleanupTaskResultServiceImpl.java
Patch:
@@ -51,12 +51,11 @@ public void cleanReport(Map<String, String> map, String projectId) {
         }
         List<String> cleanTaskItemIds = execTaskItems.stream().map(ExecTaskItem::getId).toList();
         List<String> cleanIds = ListUtils.union(cleanTaskIds, cleanTaskItemIds);
-        LogUtils.info("清理当前项目[" + projectId + "]任务中心执行结果, 共[" + cleanIds.size() + "]条");
         if (CollectionUtils.isNotEmpty(cleanIds)) {
             // 清理任务-报告关系表
             SubListUtils.dealForSubList(cleanIds, 100, ids -> {
                 ApiReportRelateTaskExample example = new ApiReportRelateTaskExample();
-                example.createCriteria().andTaskResourceIdIn(cleanIds);
+                example.createCriteria().andTaskResourceIdIn(ids);
                 apiReportRelateTaskMapper.deleteByExample(example);
             });
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseRunService.java
Patch:
@@ -218,6 +218,8 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request, ApiTestCase
         apiCommonService.setApiDefinitionExecuteInfo(msTestElement, BeanUtils.copyBean(new ApiDefinitionExecuteInfo(), apiDefinition));
 
         apiExecuteService.setTestElementParam(msTestElement, apiTestCase.getProjectId(), request.getTaskItem());
+        // 处理模块匹配
+        apiExecuteService.handleHttpModuleMatchRule(apiParamConfig.getEnvConfig());
 
         // 设置环境信息
         apiParamConfig.setEnvConfig(environmentService.get(getEnvId(request.getRunModeConfig(), apiTestCase.getEnvironmentId())));

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugMapper.java
Patch:
@@ -136,5 +136,5 @@ public interface ExtBugMapper {
      */
     List<ProjectUserStatusCountDTO> projectUserBugStatusCount(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime, @Param("userIds") List<String> userIds, @Param("platforms") Set<String> platforms);
 
-    List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUser") String handleUser,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms, @Param("currentUser") String currentUser);
+    List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUsers") Set<String> handleUsers,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms);
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -133,7 +133,7 @@ public boolean check(@PathVariable String id) {
     @Operation(summary = "缺陷管理-列表-查看缺陷(详情&&编辑&&复制)")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public BugDetailDTO get(@PathVariable String id) {
-        return bugService.get(id, SessionUtils.getUserId());
+        return bugService.get(id, SessionUtils.getUserId(), Objects.requireNonNull(SessionUtils.getUser()).getLanguage());
     }
 
     @GetMapping("/delete/{id}")
@@ -229,7 +229,7 @@ public List<ProjectTemplateOptionDTO> getTemplateOption(@PathVariable String pro
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public TemplateDTO getTemplateDetail(@RequestBody BugTemplateRequest request) {
-        return bugService.getTemplate(request.getId(), request.getProjectId(), request.getFromStatusId(), request.getPlatformBugKey(), request.getShowLocal());
+        return bugService.getTemplate(request.getId(), request.getProjectId(), request.getFromStatusId(), request.getPlatformBugKey(), request.getShowLocal(), Objects.requireNonNull(SessionUtils.getUser()).getLanguage());
     }
 
     @GetMapping("/follow/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -2581,8 +2581,8 @@ public void batchScheduleConfig(ApiScenarioBatchScheduleConfigRequest request, S
                                 ApiScenarioScheduleJob.class,
                                 operator);
                     });
-                    apiScenarioLogService.batchScheduleConfigLog(request.getProjectId(), apiScenarios, operator);
                 }
+                apiScenarioLogService.batchScheduleConfigLog(request.getProjectId(), apiScenarios, operator);
             }
         }
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -837,7 +837,9 @@ public TestPlanTaskReportResponse getTaskDetail(String taskId) {
         List<TestPlanTaskReportResponse.ChildPlan> childPlans = planChildrenTask.stream().map(childTask -> {
             TestPlanTaskReportResponse childTaskDetail = calcTaskExecActual(childTask.getId(), new TestPlanTaskReportResponse());
             TestPlanTaskReportResponse.ChildPlan childPlan = new TestPlanTaskReportResponse.ChildPlan();
-            BeanUtils.copyBean(childPlan, childTaskDetail);
+            BeanUtils.copyBean(childPlan, childTask);
+            childPlan.setApiCaseTotal(childTaskDetail.getApiCaseTotal());
+            childPlan.setApiScenarioTotal(childTaskDetail.getApiScenarioTotal());
             return childPlan;
         }).toList();
         taskDetail.setChildPlans(childPlans);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CommonProjectService.java
Patch:
@@ -356,7 +356,7 @@ public ProjectDTO update(UpdateProjectRequest updateProjectDto, String updateUse
             project.setModuleSetting(JSON.toJSONString(updateProjectDto.getModuleIds()));
             projectDTO.setModuleIds(updateProjectDto.getModuleIds());
         } else {
-            project.setModuleSetting(null);
+            project.setModuleSetting(JSON.toJSONString(new ArrayList<>()));
             projectDTO.setModuleIds(new ArrayList<>());
         }
         project.setOrganizationId(null);

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationProjectControllerTests.java
Patch:
@@ -615,7 +615,7 @@ public void testUpdateProject() throws Exception {
         Assertions.assertTrue(userRoleRelations.stream().map(UserRoleRelation::getUserId).toList().contains("admin1"));
         //断言模块设置
         projectExtend = projectMapper.selectByPrimaryKey(projectId);
-        Assertions.assertEquals(projectExtend.getModuleSetting(), CollectionUtils.isEmpty(project.getModuleIds()) ? null : JSON.toJSONString(project.getModuleIds()));
+        Assertions.assertEquals(projectExtend.getModuleSetting(), JSON.toJSONString(project.getModuleIds()));
 
         // 校验日志
         checkLog(projectId, OperationLogType.ADD);
@@ -627,7 +627,7 @@ public void testUpdateProject() throws Exception {
         compareProjectDTO(currentProject, result);
         //断言模块设置
         projectExtend = projectMapper.selectByPrimaryKey("projectId2");
-        Assertions.assertEquals(projectExtend.getModuleSetting(), CollectionUtils.isEmpty(project.getModuleIds()) ? null : JSON.toJSONString(project.getModuleIds()));
+        Assertions.assertEquals(projectExtend.getModuleSetting(), JSON.toJSONString(new ArrayList<>()));
 
         // 修改模块设置
         project = this.generatorUpdate(DEFAULT_ORGANIZATION_ID, "projectId2", "org-Module", "Edit name", true, List.of("admin1"));
@@ -670,7 +670,7 @@ public void testUpdateProject() throws Exception {
     public void testUpdateProjectError() throws Exception {
         //项目名称存在 500
         UpdateProjectRequest project = this.generatorUpdate(DEFAULT_ORGANIZATION_ID, "projectId1", "org-Module", "description", true, List.of("admin"));
-        this.requestPost(updateProject, project, ERROR_REQUEST_MATCHER);
+        this.requestPost(updateProject, project);
         //参数组织Id为空
         project = this.generatorUpdate(null, "projectId", null, null, true, List.of("admin"));
         this.requestPost(updateProject, project, BAD_REQUEST_MATCHER);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/dataimport/HarParserApiScenario.java
Patch:
@@ -81,7 +81,8 @@ private List<MsHTTPElement> parseRequests(Har har) {
             HarRequest harRequest = entry.request;
             if (harRequest != null) {
                 // css 、 js 略过
-                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) && StringUtils.endsWithAny(harRequest.url.toLowerCase(), ".svg", ".css", ".js", ".png", ".jpg", ".jpeg")) {
+                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) &&
+                        StringUtils.endsWithAny(harRequest.url.toLowerCase(), ".svg", ".css", ".js", ".png", ".jpg", ".jpeg", ".gif")) {
                     continue;
                 }
                 String url = harRequest.url;

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1181,7 +1181,7 @@ public void handleAndSaveCustomFields(BugEditRequest request, boolean merge, Pla
             for (BugCustomField bugCustomField : updateFields) {
                 BugCustomFieldExample bugCustomFieldExample = new BugCustomFieldExample();
                 bugCustomFieldExample.createCriteria().andBugIdEqualTo(bugCustomField.getBugId()).andFieldIdEqualTo(bugCustomField.getFieldId());
-                bugCustomFieldMapper.updateByExample(bugCustomField, bugCustomFieldExample);
+                bugCustomFieldMapper.updateByExampleSelective(bugCustomField, bugCustomFieldExample);
             }
             sqlSession.flushStatements();
             SqlSessionUtils.closeSqlSession(sqlSession, sqlSessionFactory);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -1441,17 +1441,18 @@ private TestPlanTaskReportResponse calcTaskExecActual(String reportId, TestPlanT
      * @return 用例执行情况
      */
     private TestPlanReportDetailResponse calcTaskExecFinish(String reportId, String detailName, TestPlanReportDetailResponse detail) {
-        detail.setId(reportId);
-        detail.setName(detailName);
         TestPlanReport report = checkReport(reportId);
         BeanUtils.copyBean(detail, report);
+        detail.setId(reportId);
+        detail.setName(detailName);
         TestPlanReportSummary summary = getReportSummary(reportId);
         // 任务执行结果只需统计 接口 + 场景 (数据来源: 报告汇总)
         detail.setApiCaseCount(summary.getApiExecuteResult() == null ? CaseCount.builder().build() : JSON.parseObject(new String(summary.getApiExecuteResult()), CaseCount.class));
         detail.setApiScenarioCount(summary.getScenarioExecuteResult() == null ? CaseCount.builder().build() : JSON.parseObject(new String(summary.getScenarioExecuteResult()), CaseCount.class));
         detail.setApiCaseTotal(detail.getApiCaseCount().sum());
         detail.setApiScenarioTotal(detail.getApiScenarioCount().sum());
         detail.setExecuteCount(CountUtils.summarizeProperties(List.of(detail.getApiCaseCount(), detail.getApiScenarioCount())));
+        detail.setCaseTotal(detail.getExecuteCount().sum());
         CaseCount executeCount = detail.getExecuteCount();
         detail.setExecuteRate(RateCalculateUtils.divWithPrecision((executeCount.sum()  - executeCount.getPending()), executeCount.sum(), 2));
         detail.setPassRate(RateCalculateUtils.divWithPrecision(executeCount.getSuccess(), executeCount.sum(), 2));

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -248,9 +248,9 @@ public String uploadTempFile(@RequestParam("file") MultipartFile file) {
     @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.PROJECT_API_DEFINITION_CASE_READ, PermissionConstants.PROJECT_API_DEFINITION_CASE_UPDATE})
     @CheckOwner(resourceId = "#request.getId()", resourceType = "api_test_case")
     public Pager<List<ExecuteReportDTO>> getExecuteList(@Validated @RequestBody ExecutePageRequest request) {
-        String sort = StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "eti.id desc";
+        String sort = StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "eti.create_time desc";
         if (StringUtils.isNotBlank(sort)) {
-            sort = sort.replace("start_time", "et.create_time");
+            sort = sort.replace("start_time", "eti.create_time");
         }
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), sort);
         return PageUtils.setPageInfo(page, apiTestCaseService.getExecuteList(request));

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -271,9 +271,9 @@ public void editPos(@Validated @RequestBody PosRequest request) {
     @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.PROJECT_API_SCENARIO_READ, PermissionConstants.PROJECT_API_SCENARIO_UPDATE})
     @CheckOwner(resourceId = "#request.getId()", resourceType = "api_scenario")
     public Pager<List<ExecuteReportDTO>> getExecuteList(@Validated @RequestBody ExecutePageRequest request) {
-        String sort = StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "eti.id desc";
+        String sort = StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "eti.create_time desc";
         if (StringUtils.isNotBlank(sort)) {
-            sort = sort.replace("start_time", "et.create_time");
+            sort = sort.replace("start_time", "eti.create_time");
         }
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), sort);
         return PageUtils.setPageInfo(page, apiScenarioService.getExecuteList(request));

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioMapper.java
Patch:
@@ -107,5 +107,6 @@ public interface ExtApiScenarioMapper {
     List<ProjectUserCreateCount> userCreateApiScenarioCount(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime, @Param("userIds") Set<String> userIds);
 
     List<ApiScenario> getSimpleApiScenarioList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime);
+
     List<ExecHistoryDTO> selectExecHistory(@Param("request") ExecutePageRequest request);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiCommonService.java
Patch:
@@ -513,6 +513,7 @@ public ExecTask newExecTask(String projectId, String userId) {
 
     public ExecTaskItem newExecTaskItem(String taskId, String projectId, String userId) {
         ExecTaskItem execTaskItem = new ExecTaskItem();
+        execTaskItem.setCreateTime(System.currentTimeMillis());
         execTaskItem.setId(IDGenerator.nextStr());
         execTaskItem.setTaskId(taskId);
         execTaskItem.setProjectId(projectId);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -617,7 +617,7 @@ private Map<String, String> getReportMap(List<ExecHistoryDTO> list) {
             ApiReportRelateTaskExample example = new ApiReportRelateTaskExample();
             example.createCriteria().andTaskResourceIdIn(resourceIds);
             List<ApiReportRelateTask> reportRelateTasks = apiReportRelateTaskMapper.selectByExample(example);
-            reportMap = reportRelateTasks.stream().collect(Collectors.toMap(ApiReportRelateTask::getTaskResourceId, ApiReportRelateTask::getReportId));
+            reportRelateTasks.stream().forEach(item -> reportMap.put(item.getTaskResourceId(), item.getReportId()));
         }
         return reportMap;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtExecTaskItemMapper.java
Patch:
@@ -66,11 +66,11 @@ public interface ExtExecTaskItemMapper {
 
     long getUnDeleteScenarioExecCount(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime, @Param("resourceTypes") List<String> resourceTypes);
 
-    void resetRerunTaskItem(@Param("taskId") String taskId, @Param("userId") String userId);
-
-    void deleteRerunTaskItemReportRelation(@Param("taskId") String taskId);
+    void insertRerunTaskItem(@Param("taskId") String taskId, @Param("userId") String userId);
 
     Set<String> selectRerunCollectionIds(@Param("taskId") String taskId);
 
     List<ExecTaskItem> selectIdAndResourceIdByTaskId(@Param("taskId") String taskId);
+
+    void deleteRerunTaskItem(@Param("taskId") String taskId, String userId);
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -198,7 +198,9 @@ private void setTaskReportId(List<TaskHubDTO> tasks) {
         List<ExecTaskItem> taskItems = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(noIntegratedTasks)) {
             ExecTaskItemExample itemExample = new ExecTaskItemExample();
-            itemExample.createCriteria().andTaskIdIn(noIntegratedTasks);
+            itemExample.createCriteria()
+                    .andTaskIdIn(noIntegratedTasks)
+                    .andDeletedEqualTo(false);
             taskItems = execTaskItemMapper.selectByExample(itemExample);
         }
         Map<String, String> taskItemMap = taskItems.stream().collect(Collectors.toMap(ExecTaskItem::getTaskId, ExecTaskItem::getId));

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/BaseTaskHubControllerTests.java
Patch:
@@ -659,6 +659,7 @@ public void testInsert() throws Exception {
         baseTaskHubService.insertExecTaskAndDetail(new ArrayList<>(), new ArrayList<>());
 
         execTaskItem.setId("2333");
+        execTaskItem.setCreateTime(System.currentTimeMillis());
         ExecTask execTask = new ExecTask();
         execTask.setId("121321");
         execTask.setNum(123L);

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDocShareDetail.java
Patch:
@@ -19,4 +19,6 @@ public class ApiDocShareDetail implements Serializable {
 	private Boolean isPrivate;
 	@Schema(title = "是否允许导出")
 	private Boolean allowExport;
+	@Schema(title = "项目名称")
+	private String projectName;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanCoverageDTO.java
Patch:
@@ -56,7 +56,7 @@ public void unSuccessAutoIncrement() {
     }
 
     public void testPlanRunningAutoIncrement() {
-        unExecute++;
+        executed++;
         notPassed++;
         running++;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteCallbackService.java
Patch:
@@ -19,7 +19,9 @@ public interface ApiExecuteCallbackService {
     /**
      * 解析并返回执行脚本
      */
-    String initReport(GetRunScriptRequest request);
+    default String initReport(GetRunScriptRequest request) {
+        return request.getTaskItem().getReportId();
+    }
 
     /**
      * 串行时，执行下一个任务

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseRunService.java
Patch:
@@ -24,6 +24,7 @@
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.UUID;
@@ -252,6 +253,7 @@ public String getEnvId(ApiRunModeConfigDTO runModeConfig, String caseEnvId) {
      * @param apiTestCase
      * @return
      */
+    @Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRES_NEW)
     public String initApiReport(String taskItemId, ApiTestCase apiTestCase, GetRunScriptRequest request) {
         // 初始化报告
         ApiReport apiReport = getApiReport(apiTestCase, request);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -27,6 +27,7 @@
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.List;
@@ -182,6 +183,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
      *
      * @return
      */
+    @Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRES_NEW)
     public String initApiReport(GetRunScriptRequest request, TestPlanReportApiCase testPlanReportApiCase, ApiTestCase apiTestCase) {
         // 初始化报告
         ApiReport apiReport = apiTestCaseRunService.getApiReport(apiTestCase, request);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -28,6 +28,7 @@
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.List;
@@ -138,6 +139,7 @@ public boolean parallelExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
         return false;
     }
 
+    @Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRES_NEW)
     public String initReport(GetRunScriptRequest request,
                                            TestPlanReportApiScenario testPlanReportApiScenario,
                                            ApiScenario apiScenario) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -60,6 +60,7 @@
 import org.apache.ibatis.session.SqlSessionFactory;
 import org.mybatis.spring.SqlSessionUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.validation.annotation.Validated;
 
@@ -420,6 +421,7 @@ public void runRun(ExecTask execTask, ExecTaskItem execTaskItem, String userId)
      *
      * @return
      */
+    @Transactional(rollbackFor = Exception.class, propagation = Propagation.REQUIRES_NEW)
     public String initApiScenarioReport(TestPlanApiScenario testPlanApiScenario, ApiScenario apiScenario, GetRunScriptRequest request) {
         // 初始化报告
         ApiRunModeConfigDTO runModeConfig = request.getRunModeConfig();

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardService.java
Patch:
@@ -1389,7 +1389,7 @@ public StatisticsDTO projectPlanLegacyBug(DashboardFrontPageRequest request, Str
         List<NameCountDTO> nameCountDTOS = buildBugRetentionRateList(totalSize, statusSize);
         Map<String, List<NameCountDTO>> statusStatisticsMap = new HashMap<>();
         statusStatisticsMap.put("retentionRate", nameCountDTOS);
-        Map<String, List<SelectOption>> bugMap = legacyBugList.stream().collect(Collectors.groupingBy(SelectOption::getValue));
+        Map<String, List<SelectOption>> bugMap = legacyBugList.stream().collect(Collectors.groupingBy(SelectOption::getText));
         List<StatusPercentDTO> statusPercentList = new ArrayList<>();
         for (SelectOption selectOption : headerStatusOption) {
             StatusPercentDTO statusPercentDTO = new StatusPercentDTO();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -24,6 +24,9 @@ public interface ExtTestPlanMapper {
     @BaseConditionFilter
     List<TestPlanResponse> selectByConditions(@Param("request") TestPlanTableRequest request);
 
+    @BaseConditionFilter
+    List<TestPlanResponse> selectTodoByConditions(@Param("request") TestPlanTableRequest request);
+
     List<String> selectIdByConditions(@Param("request") TestPlanBatchProcessRequest request);
 
     List<String> selectGroupIdByConditions(TestPlanQueryConditions testPlanQueryConditions);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -83,5 +83,5 @@ public interface ExtTestPlanApiCaseMapper {
 
     Integer countByPlanIds(@Param("planIds") List<String> planIds);
 
-    List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
+    List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -80,5 +80,5 @@ public interface ExtTestPlanApiScenarioMapper {
 
     Integer countByPlanIds(@Param("planIds") List<String> planIds);
 
-    List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
+    List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanFunctionalCaseMapper.java
Patch:
@@ -88,5 +88,5 @@ public interface ExtTestPlanFunctionalCaseMapper {
 
     Collection<String> selectIdsByRootIds(@Param("rootIds") List<String> rootIds, @Param("testPlanId") String testPlanId);
 
-    List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
+    List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -146,8 +146,8 @@ public List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds
     }
 
     @Override
-    public List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(List<String> testPlanIds) {
-        return extTestPlanApiCaseMapper.selectDistinctLastExecResultByTestPlanIds(testPlanIds);
+    public List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(List<String> testPlanIds) {
+        return extTestPlanApiCaseMapper.selectLastExecResultByTestPlanIds(testPlanIds);
     }
 
     @Override

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -134,8 +134,8 @@ public List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds
     }
 
     @Override
-    public List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(List<String> testPlanIds) {
-        return extTestPlanApiScenarioMapper.selectDistinctLastExecResultByTestPlanIds(testPlanIds);
+    public List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(List<String> testPlanIds) {
+        return extTestPlanApiScenarioMapper.selectLastExecResultByTestPlanIds(testPlanIds);
     }
 
     @Override

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBugService.java
Patch:
@@ -74,7 +74,7 @@ public List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds
     }
 
     @Override
-    public List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(List<String> testPlanIds) {
+    public List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(List<String> testPlanIds) {
         return List.of();
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -144,8 +144,8 @@ public List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds
     }
 
     @Override
-    public List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(List<String> testPlanIds) {
-        return extTestPlanFunctionalCaseMapper.selectDistinctLastExecResultByTestPlanIds(testPlanIds);
+    public List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(List<String> testPlanIds) {
+        return extTestPlanFunctionalCaseMapper.selectLastExecResultByTestPlanIds(testPlanIds);
     }
 
     @Override

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanResourceService.java
Patch:
@@ -107,7 +107,7 @@ public TestPlanAssociationResponse disassociate(
 
     public abstract List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds(List<String> testPlanIds);
 
-    public abstract List<TestPlanResourceExecResultDTO> selectDistinctLastExecResultByTestPlanIds(List<String> testPlanIds);
+    public abstract List<TestPlanResourceExecResultDTO> selectLastExecResultByTestPlanIds(List<String> testPlanIds);
 
     /**
      * 关联用例
@@ -268,4 +268,5 @@ protected Map<String, List<TestPlanCaseBugDTO>> queryCaseAssociateBug(List<Strin
         associateBugs.forEach(bug -> bug.setStatus(statusMap.get(bug.getStatus())));
         return associateBugs.stream().collect(Collectors.groupingBy(TestPlanCaseBugDTO::getPlanCaseRefId));
     }
+
 }

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/service/DashboardService.java
Patch:
@@ -577,7 +577,7 @@ private OverViewCountDTO getUserCountDTO(Map<String, String> userNameMap, List<S
                 userCaseCount.add(0);
             }
             if (userReviewCountMap.get(id) != null) {
-                userReviewCount.add(userCaseCountMap.get(id));
+                userReviewCount.add(userReviewCountMap.get(id));
             } else {
                 userReviewCount.add(0);
             }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -82,7 +82,6 @@ public interface ExtTestPlanMapper {
     @BaseConditionFilter
     List<TestPlanResponse> selectMyFollowByConditions(@Param("request") TestPlanTableRequest request);
 
-    List<TestPlan> getSimpleTestPlanList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime);
 
     /**
      * 获取项目下的计划关联缺陷

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/dataimport/MetersphereParserApiScenario.java
Patch:
@@ -84,6 +84,7 @@ private ApiScenarioImportDetail parseApiScenario(String projectId,
         apiScenarioImportDetail.setSteps(parseResult.getStepList());
         apiScenarioImportDetail.setStepDetails(parseResult.getStepDetails());
         apiScenarioImportDetail.setProjectId(projectId);
+        apiScenarioImportDetail.setEnvironmentId(null);
         apiScenarioImportDetail.setApiScenarioCsvList(apiScenarioCsvMap.getOrDefault(apiScenarioDetail.getId(), new ArrayList<>()));
         return apiScenarioImportDetail;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtExecTaskMapper.java
Patch:
@@ -23,11 +23,14 @@ public interface ExtExecTaskMapper {
 
     /**
      * 查询时间范围内的任务ID集合
+     *
      * @param timeMills 时间戳
      * @param projectId 项目ID
      * @return 任务ID列表
      */
     List<String> getTaskIdsByTime(@Param("timeMills") long timeMills, @Param("projectId") String projectId);
 
     List<ExecTaskItemDetailDTO> selectTypeByItemId(@Param("itemId") String itemId);
+
+    List<String> getSelectIds(@Param("ids") List<String> ids, @Param("flag") boolean flag);
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -692,7 +692,7 @@ public List<String> getTaskIds(TableBatchProcessDTO request, String orgId, Strin
             }
             return ids;
         } else {
-            return request.getSelectIds();
+            return extExecTaskMapper.getSelectIds(request.getSelectIds(), flag);
         }
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -124,7 +124,7 @@ public ApiCoverageDTO rage(@PathVariable String projectId) {
     @Operation(summary = "接口测试-接口管理-添加接口定义")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_ADD)
     @Log(type = OperationLogType.ADD, expression = "#msClass.addLog(#request)", msClass = ApiDefinitionLogService.class)
-    @CheckOwner(resourceId = "#request.getProjectId()s", resourceType = "project")
+    @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     @SendNotice(taskType = NoticeConstants.TaskType.API_DEFINITION_TASK, event = NoticeConstants.Event.CREATE, target = "#targetClass.getApiDTO(#request)", targetClass = ApiDefinitionNoticeService.class)
     public ApiDefinition add(@Validated @RequestBody ApiDefinitionAddRequest request) {
         return apiDefinitionService.create(request, SessionUtils.getUserId());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/CleanupTaskResultTests.java
Patch:
@@ -40,7 +40,7 @@ public void initTaskData() {
 		task.setStartTime(1700000000000L);
 		task.setResult("PENDING");
 		task.setCreateUser("admin");
-		task.setCreateTime(System.currentTimeMillis());
+		task.setCreateTime(1700000000000L);
 		execTaskMapper.insertSelective(task);
 	}
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -229,7 +229,7 @@ public List<ProjectTemplateOptionDTO> getTemplateOption(@PathVariable String pro
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public TemplateDTO getTemplateDetail(@RequestBody BugTemplateRequest request) {
-        return bugService.getTemplate(request.getId(), request.getProjectId(), request.getFromStatusId(), request.getPlatformBugKey());
+        return bugService.getTemplate(request.getId(), request.getProjectId(), request.getFromStatusId(), request.getPlatformBugKey(), request.getShowLocal());
     }
 
     @GetMapping("/follow/{id}")

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugStatusService.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.system.service.BaseStatusFlowSettingService;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections4.CollectionUtils;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -68,9 +69,9 @@ public List<SelectOption> getHeaderStatusOption(String projectId) {
      * @param platformBugKey 平台缺陷Key
      * @return 选项集合
      */
-   public List<SelectOption> getToStatusItemOption(String projectId, String fromStatusId, String platformBugKey) {
+   public List<SelectOption> getToStatusItemOption(String projectId, String fromStatusId, String platformBugKey, Boolean showLocal) {
        String platformName = projectApplicationService.getPlatformName(projectId);
-       if (StringUtils.equals(platformName, BugPlatform.LOCAL.getName())) {
+       if (StringUtils.equals(platformName, BugPlatform.LOCAL.getName()) || BooleanUtils.isTrue(showLocal)) {
            // Local状态流
            return getToStatusItemOptionOnLocal(projectId, fromStatusId);
        } else {

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseModuleLogService.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.project.mapper.ProjectMapper;
 import io.metersphere.sdk.constants.HttpMethodConstants;
 import io.metersphere.sdk.util.JSON;
-import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.dto.builder.LogDTOBuilder;
 import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
@@ -113,7 +112,7 @@ public void batchDelLog(List<FunctionalCase> functionalCases, String projectId,
      * @param userId
      * @param path
      */
-    public void handleModuleLog(List<FunctionalCaseModule> deleteModule, String projectId, String userId, String path, String type) {
+    public void handleModuleLog(List<FunctionalCaseModule> deleteModule, String projectId, String userId, String path, String type, String deleteDesc) {
         Project project = projectMapper.selectByPrimaryKey(projectId);
         List<LogDTO> dtoList = new ArrayList<>();
         deleteModule.forEach(item -> {
@@ -124,7 +123,7 @@ public void handleModuleLog(List<FunctionalCaseModule> deleteModule, String proj
                     userId,
                     type,
                     OperationLogModule.CASE_MANAGEMENT_CASE_MODULE,
-                    item.getName() + " " + Translator.get("log.delete_module"));
+                    item.getName() + deleteDesc);
             dto.setPath(path);
             dto.setMethod(HttpMethodConstants.GET.name());
             dto.setOriginalValue(JSON.toJSONBytes(item));

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseModuleService.java
Patch:
@@ -132,7 +132,7 @@ public void deleteModule(String moduleId, String userId) {
             //用例日志
             functionalCaseModuleLogService.batchDelLog(functionalCases, deleteModule.getProjectId(), userId, "/functional/case/module/delete/" + moduleId);
             //模块日志
-            functionalCaseModuleLogService.handleModuleLog(List.of(deleteModule), deleteModule.getProjectId(), userId, "/functional/case/module/delete/" + moduleId, OperationLogType.DELETE.name());
+            functionalCaseModuleLogService.handleModuleLog(List.of(deleteModule), deleteModule.getProjectId(), userId, "/functional/case/module/delete/" + moduleId, OperationLogType.DELETE.name(), " " + Translator.get("log.delete_module"));
             List<String> ids = functionalCases.stream().map(FunctionalCase::getId).toList();
             User user = userMapper.selectByPrimaryKey(userId);
             functionalCaseNoticeService.batchSendNotice(deleteModule.getProjectId(), ids, user, NoticeConstants.Event.DELETE);

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/response/OverViewCountDTO.java
Patch:
@@ -23,4 +23,7 @@ public class OverViewCountDTO {
     @Schema(description = "项目模块数量DTO")
     private List<NameArrayDTO> projectCountList;
 
+    @Schema(description = "错误码")
+    private int errorCode;
+
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -349,7 +349,7 @@ public void insertExecTaskAndDetail(List<ExecTask> tasks, List<ExecTaskItem> ite
      */
     public Pager<List<TaskHubItemDTO>> getCaseTaskItemList(TaskHubItemRequest request, String orgId, String projectId) {
         Page<Object> page = PageMethod.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "id asc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "id desc");
         return PageUtils.setPageInfo(page, getCaseTaskItemPage(request, orgId, projectId));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -173,7 +173,7 @@ public Pager<List<ApiTestCaseDTO>> page(@Validated @RequestBody ApiTestCasePageR
     @PostMapping(value = "/statistics")
     @Operation(summary = "接口测试-接口管理-接口用例-统计")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_READ)
-    public List<ApiTestCaseDTO> calculate(@Validated @RequestBody List<String> ids) {
+    public List<ApiTestCaseDTO> calculate(@RequestBody List<String> ids) {
         return apiTestCaseService.calculate(ids);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioBatchOperationController.java
Patch:
@@ -102,7 +102,7 @@ public void batchRun(@Validated @RequestBody ApiScenarioBatchRunRequest request)
     @PostMapping(value = "/batch-operation/schedule-config")
     @Operation(summary = "接口测试-接口场景管理-定时任务批量配置")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
-    @CheckOwner(resourceId = "#request.getProject()", resourceType = "project")
+    @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void scheduleConfig(@Validated @RequestBody ApiScenarioBatchScheduleConfigRequest request) {
         apiValidateService.validateApiMenuInProject(request.getProjectId(), ApiResource.PROJECT.name());
         apiScenarioService.batchScheduleConfig(request, SessionUtils.getUserId());

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -35,8 +35,6 @@
 import io.metersphere.system.utils.Pager;
 import io.metersphere.system.utils.SessionUtils;
 import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.Parameter;
-import io.swagger.v3.oas.annotations.media.Schema;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;
@@ -79,7 +77,6 @@ public Pager<List<ApiScenarioDTO>> getPage(@Validated @RequestBody ApiScenarioPa
     @PostMapping("/statistics")
     @Operation(summary = "接口测试-接口场景管理-获取通过率")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_READ)
-    @Parameter(name = "ids", description = "场景id集合", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED))
     public List<ApiScenarioDTO> selectTestPlanMetricById(@RequestBody List<String> ids) {
         return apiScenarioService.calculateRate(ids);
     }

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/controller/ToDoController.java
Patch:
@@ -35,6 +35,7 @@
 import org.springframework.web.bind.annotation.RestController;
 
 import java.util.List;
+import java.util.Map;
 
 /**
  * @author song-cc-rock
@@ -62,6 +63,8 @@ public class ToDoController {
 	@Operation(summary = "我的待办-测试计划-列表分页查询")
 	@CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
 	public Pager<List<TestPlanResponse>> planPage(@Validated @RequestBody TestPlanTableRequest request) {
+		// 默认按照创建时间倒序
+		request.setSort(Map.of("createTime", "desc"));
 		request.setMyTodo(true);
 		request.setMyTodoUserId(SessionUtils.getUserId());
 		return testPlanManagementService.page(request);

File: backend/services/dashboard/src/main/java/io/metersphere/dashboard/controller/ToDoController.java
Patch:
@@ -19,7 +19,6 @@
 import io.metersphere.project.service.ProjectApplicationService;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.system.security.CheckOwner;
-import io.metersphere.system.service.UserPlatformAccountService;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
 import io.metersphere.system.utils.SessionUtils;
@@ -57,8 +56,6 @@ public class ToDoController {
 	@Resource
 	private ProjectApplicationService projectApplicationService;
 	@Resource
-	private UserPlatformAccountService userPlatformAccountService;
-	@Resource
 	private TestPlanStatisticsService testPlanStatisticsService;
 
 	@PostMapping("/plan/page")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -7,7 +7,6 @@
 import io.metersphere.api.domain.*;
 import io.metersphere.api.dto.*;
 import io.metersphere.api.dto.debug.ApiFileResourceUpdateRequest;
-import io.metersphere.api.dto.definition.ExecHistoryDTO;
 import io.metersphere.api.dto.definition.ExecutePageRequest;
 import io.metersphere.api.dto.definition.ExecuteReportDTO;
 import io.metersphere.api.dto.export.MetersphereApiScenarioExportResponse;
@@ -86,7 +85,6 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
-import java.text.SimpleDateFormat;
 import java.util.*;
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.function.BiConsumer;
@@ -1871,7 +1869,7 @@ public List<ApiScenarioStepDTO> buildScenarioSteps(List<String> scenarioIds) {
             refScenarioSteps = childStep.stream().filter(k -> isScenarioStep(k.getStepType())).toList();
         }
         // 嵌套获取引用的场景步骤
-        return returnList;
+        return returnList.stream().sorted(Comparator.comparing(ApiScenarioStepDTO::getSort)).collect(Collectors.toList());
     }
 
     private List<ApiScenarioStepDTO> getStepDTOByScenarioIds(List<String> scenarioIds) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugMapper.java
Patch:
@@ -136,5 +136,5 @@ public interface ExtBugMapper {
      */
     List<ProjectUserStatusCountDTO> projectUserBugStatusCount(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime, @Param("userIds") List<String> userIds, @Param("platforms") Set<String> platforms);
 
-    List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUser") String handleUser,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms);
+    List<Bug>getSimpleList(@Param("projectId") String projectId, @Param("startTime") Long startTime, @Param("endTime") Long endTime,@Param("handleUser") String handleUser,@Param("createUser") String createUser, @Param("platforms") Set<String> platforms, @Param("currentUser") String currentUser);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiCaseMapper.java
Patch:
@@ -14,10 +14,10 @@ public interface ExtTestPlanReportApiCaseMapper {
 
 	/**
 	 * 统计报告中接口用例执行情况
-	 * @param reportId 报告ID
+	 * @param reportIds 报告ID集合
 	 * @return 用例数量
 	 */
-	List<CaseStatusCountMap> countExecuteResult(@Param("id") String reportId);
+	List<CaseStatusCountMap> countExecuteResult(@Param("ids") List<String> reportIds);
 
 	/**
 	 * 获取计划关联的接口用例

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiScenarioMapper.java
Patch:
@@ -14,10 +14,10 @@ public interface ExtTestPlanReportApiScenarioMapper {
 
 	/**
 	 * 统计报告中场景用例执行情况
-	 * @param reportId 报告ID
+	 * @param reportIds 报告ID集合
 	 * @return 用例数量
 	 */
-	List<CaseStatusCountMap> countExecuteResult(@Param("id") String reportId);
+	List<CaseStatusCountMap> countExecuteResult(@Param("ids") List<String> reportIds);
 
 	/**
 	 * 获取计划关联的场景用例

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportFunctionalCaseMapper.java
Patch:
@@ -43,10 +43,10 @@ public interface ExtTestPlanReportFunctionalCaseMapper {
 
 	/**
 	 * 统计报告中功能用例执行情况
-	 * @param reportId 报告ID
+	 * @param reportIds 报告ID集合
 	 * @return 用例数量
 	 */
-	List<CaseStatusCountMap> countExecuteResult(@Param("id") String reportId);
+	List<CaseStatusCountMap> countExecuteResult(@Param("ids") List<String> reportIds);
 
 	/**
 	 * 分页查询报告关联的用例

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportMapper.java
Patch:
@@ -75,4 +75,6 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
     List<TestPlanReport> getChildrenReport(@Param("reportId") String reportId);
 
     void resetRerunReport(@Param("reportId") String reportId);
+
+    List<TestPlanReport> getPlanChildrenTask(@Param("reportId") String reportId);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/dataimport/HarParserApiScenario.java
Patch:
@@ -80,7 +80,7 @@ private List<MsHTTPElement> parseRequests(Har har) {
             HarRequest harRequest = entry.request;
             if (harRequest != null) {
                 // css 、 js 略过
-                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) && StringUtils.endsWithAny(harRequest.url.toLowerCase(), ".css", ".js", ".png", ".jpg", ".jpeg")) {
+                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) && StringUtils.endsWithAny(harRequest.url.toLowerCase(), ".svg", ".css", ".js", ".png", ".jpg", ".jpeg")) {
                     continue;
                 }
                 String url = harRequest.url;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanScheduleBatchConfigRequest.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.plan.dto.request;
 
 import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.constraints.NotBlank;
 import jakarta.validation.constraints.Size;
 import lombok.Data;
 
@@ -15,7 +14,6 @@ public class TestPlanScheduleBatchConfigRequest extends TestPlanBatchProcessRequ
     private boolean enable;
 
     @Schema(description = "Cron表达式")
-    @NotBlank
     @Size(max = 255, message = "{length.too.large}")
     private String cron;
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiScenarioDataTransferService.java
Patch:
@@ -189,7 +189,7 @@ public void importScenario(MultipartFile file, ApiScenarioImportRequest request)
             if (StringUtils.equalsIgnoreCase(request.getType(), ApiImportPlatform.Har.name())) {
                 // har文件里的所有请求都会导入场景中。场景的名称为文件名
                 if (CollectionUtils.isNotEmpty(parseResult.getImportScenarioList())) {
-                    parseResult.getImportScenarioList().forEach(t -> t.setName(file.getOriginalFilename()));
+                    parseResult.getImportScenarioList().forEach(t -> t.setName(Objects.requireNonNull(file.getOriginalFilename()).substring(0, file.getOriginalFilename().lastIndexOf("."))));
                 }
             }
         } catch (Exception e) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerImportAndExportTests.java
Patch:
@@ -131,7 +131,7 @@ public void testImport() throws Exception {
         this.requestMultipartWithOkAndReturn(URL_POST_IMPORT, paramMap);
 
         ApiScenarioExample example = new ApiScenarioExample();
-        example.createCriteria().andProjectIdEqualTo(project.getId()).andNameEqualTo("simple.har").andDeletedEqualTo(false);
+        example.createCriteria().andProjectIdEqualTo(project.getId()).andNameEqualTo("simple").andDeletedEqualTo(false);
         ApiScenario scenario = apiScenarioMapper.selectByExample(example).getFirst();
         ApiScenarioDetail detail = apiScenarioService.get(scenario.getId());
         Assertions.assertEquals(detail.getSteps().size(), 4);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanTableRequest.java
Patch:
@@ -29,6 +29,7 @@ public class TestPlanTableRequest extends BasePageRequest {
     @Schema(description = "通过其他条件查询出来的，必须要包含的测试计划ID")
     private List<String> innerIds;
     private List<String> combineInnerIds;
+    private String combineOperator;
 
     @Schema(description = "是否我的待办, 默认查询全部")
     private boolean myTodo = false;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -202,6 +202,7 @@ private void initDefaultFilter(TestPlanTableRequest request) {
                     //目前未归档的测试计划只有3中类型。所以这里判断如果是3个的话等于直接查询未归档
                     if (statusList.size() < 3) {
                         request.setCombineInnerIds(this.selectTestPlanIdByProjectIdAndStatus(request.getProjectId(), statusList));
+                        request.setCombineOperator(item.getOperator());
                     }
                 }
             });

File: backend/services/api-test/src/main/java/io/metersphere/api/service/CleanupApiReportServiceImpl.java
Patch:
@@ -42,8 +42,6 @@ public class CleanupApiReportServiceImpl implements BaseCleanUpReport {
     private ApiScenarioReportDetailBlobMapper apiScenarioReportDetailBlobMapper;
     @Resource
     private ApiReportRelateTaskMapper apiReportRelateTaskMapper;
-    @Resource
-    private ExtApiReportRelateTaskMapper extApiReportRelateTaskMapper;
 
     @Override
     public void cleanReport(Map<String, String> map, String projectId) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -183,7 +183,7 @@ public Pager<List<ReportDetailCasePageDTO>> pageFunctionalCase(@Validated @Reque
             // 不分页仅排序 {测试集升序, 用例位次倒序}
             page.setPageSize(0);
             page.setPageSizeZero(true);
-            page.setOrderBy("tpc.pos, tprfc.pos desc");
+            page.setOrderBy("tpc.pos, tpc.name, tprfc.pos desc");
             page.setOrderByOnly(true);
         }
         return PageUtils.setPageInfo(page, testPlanReportService.listReportDetailCases(request, AssociateCaseType.FUNCTIONAL));
@@ -207,7 +207,7 @@ public Pager<List<ReportDetailCasePageDTO>> pageApiCase(@Validated @RequestBody
             // 不分页仅排序 {测试集升序, 用例位次倒序}
             page.setPageSize(0);
             page.setPageSizeZero(true);
-            page.setOrderBy("tpc.pos, tprac.pos desc");
+            page.setOrderBy("tpc.pos, tpc.name, tprac.pos desc");
             page.setOrderByOnly(true);
         }
         return PageUtils.setPageInfo(page, testPlanReportService.listReportDetailCases(request, AssociateCaseType.API_CASE));
@@ -224,7 +224,7 @@ public Pager<List<ReportDetailCasePageDTO>> pageScenarioCase(@Validated @Request
             // 不分页仅排序 {测试集升序, 用例位次倒序}
             page.setPageSize(0);
             page.setPageSizeZero(true);
-            page.setOrderBy("tpc.pos, tpras.pos desc");
+            page.setOrderBy("tpc.pos, tpc.name, tpras.pos desc");
             page.setOrderByOnly(true);
         }
         return PageUtils.setPageInfo(page, testPlanReportService.listReportDetailCases(request, AssociateCaseType.API_SCENARIO));

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewController.java
Patch:
@@ -128,6 +128,7 @@ public void disassociate(@PathVariable String reviewId, @PathVariable String cas
     @Operation(summary = "用例管理-用例评审-拖拽排序")
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateCaseReviewLogByPos(#request)", msClass = CaseReviewLogService.class)
     public void editPos(@Validated @RequestBody PosRequest request) {
         caseReviewService.editPos(request);
     }
@@ -144,6 +145,7 @@ public CaseReviewDTO getCaseReviewDetail(@PathVariable String id) {
     @Operation(summary = "用例管理-用例评审-批量移动用例评审")
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ_UPDATE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "case_review")
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateBatchCaseReviewLog(#request)", msClass = CaseReviewLogService.class)
     public void batchMoveCaseReview(@Validated @RequestBody CaseReviewBatchRequest request) {
         caseReviewService.batchMoveCaseReview(request, SessionUtils.getUserId());
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseMinderService.java
Patch:
@@ -575,12 +575,12 @@ private <T> List<T> sortMindCases(String moveMode, String targetId, String moveI
             afterNode = sources;
         } else {
             if (StringUtils.equals(moveMode, MoveTypeEnum.AFTER.name())) {
-                if (targetIndex + 1 > sources.size()) {
+                if (targetIndex > sources.size()) {
                     beforeNode = sources;
                     afterNode = new ArrayList<>();
                 } else {
-                    beforeNode = sources.subList(0, targetIndex + 1);
-                    afterNode = sources.subList(targetIndex + 1, sources.size());
+                    beforeNode = sources.subList(0, targetIndex-1);
+                    afterNode = sources.subList(targetIndex-1, sources.size());
                 }
             } else {
                 beforeNode = sources.subList(0, targetIndex);

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseMinderControllerTest.java
Patch:
@@ -336,7 +336,6 @@ public void testEditList() throws Exception {
         functionalCaseExample.createCriteria().andNameEqualTo("新增用例");
         functionalCases = functionalCaseMapper.selectByExample(functionalCaseExample);
         Assertions.assertTrue(CollectionUtils.isNotEmpty(functionalCases));
-        Assertions.assertTrue(functionalCases.getFirst().getPos() > 0L);
 
         Assertions.assertTrue(CollectionUtils.isNotEmpty(functionalCases));
         customFieldExample = new FunctionalCaseCustomFieldExample();
@@ -347,7 +346,6 @@ public void testEditList() throws Exception {
         functionalCaseModuleExample.createCriteria().andNameEqualTo("新增9");
         List<FunctionalCaseModule> functionalCaseModules = functionalCaseModuleMapper.selectByExample(functionalCaseModuleExample);
         Assertions.assertTrue(CollectionUtils.isNotEmpty(functionalCaseModules));
-        Assertions.assertTrue(functionalCaseModules.getFirst().getPos() > 0L);
         request = new FunctionalCaseMinderEditRequest();
         request.setProjectId("project-case-minder-test");
         request.setVersionId("ffff");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -257,7 +257,7 @@ public void deleteScheduleConfig(@PathVariable String testPlanId) {
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanExecuteHisDTO>> pageHis(@Validated @RequestBody TestPlanExecuteHisPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                MapUtils.isEmpty(request.getSort()) ? "tpr.create_time desc" : request.getSortString());
+                MapUtils.isEmpty(request.getSort()) ? "et.create_time desc" : request.getSortString());
         return PageUtils.setPageInfo(page, testPlanService.listHis(request));
     }
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/CalculateUtils.java
Patch:
@@ -6,6 +6,9 @@ public class CalculateUtils {
 
     // 报告所需的百分比计算
     public static String reportPercentage(int numerator, int denominator) {
+        if (denominator == 0) {
+            return "0.00%";
+        }
         DecimalFormat rateFormat = new DecimalFormat("#0.00");
         rateFormat.setMinimumFractionDigits(2);
         rateFormat.setMaximumFractionDigits(2);

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiCalculateTest.java
Patch:
@@ -232,6 +232,8 @@ public void calculateTest() throws Exception {
         Assertions.assertEquals(apiCoverageDTO.getCoverWithApiDefinition(), 10);
         Assertions.assertEquals(apiCoverageDTO.getUnCoverWithApiDefinition(), 10);
         Assertions.assertEquals(apiCoverageDTO.getApiCoverage(), CalculateUtils.reportPercentage(apiCoverageDTO.getCoverWithApiDefinition(), apiCoverageDTO.getAllApiCount()));
+
+        Assertions.assertEquals("0.00%", CalculateUtils.reportPercentage(0, 0));
     }
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewLogService.java
Patch:
@@ -109,7 +109,7 @@ public LogDTO updateCaseReviewLog(CaseReviewRequest requests) {
                 caseReview.getCreateUser(),
                 OperationLogType.UPDATE.name(),
                 OperationLogModule.CASE_MANAGEMENT_REVIEW_REVIEW,
-                caseReview.getName());
+                requests.getName());
 
         dto.setPath("/case/review/edit");
         dto.setMethod(HttpMethodConstants.POST.name());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanModuleLogService.java
Patch:
@@ -73,7 +73,7 @@ public void saveDeleteLog(TestPlanModule deleteModule, String operator, String r
                 .method(requestMethod)
                 .path(requestUrl)
                 .sourceId(deleteModule.getId())
-                .content(deleteModule.getName() + " " + Translator.get("log.delete_module"))
+                .content(deleteModule.getName())
                 .originalValue(JSON.toJSONBytes(deleteModule))
                 .createUser(operator)
                 .build().getLogDTO();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportMapper.java
Patch:
@@ -52,6 +52,7 @@ List<TaskCenterDTO> taskCenterlist(@Param("request") TaskCenterPageRequest reque
 
     List<TaskCenterDTO> getChildTaskCenter(@Param("ids") List<String> groupReportIds);
 
+    @BaseConditionFilter
     List<TestPlanReportDetailResponse> getPlanReportListById(@Param("request") TestPlanReportDetailPageRequest request);
 
     List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Param("projectIds") List<String> projectIds,

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseXmindService.java
Patch:
@@ -132,7 +132,7 @@ private String exportXmind(FunctionalCaseExportRequest request, String userId, S
             noticeSendService.setLanguage(user.getLanguage());
             FunctionalCaseXmindData xmindData = buildXmindData(ids, request);
             dir = new File(LocalRepositoryDir.getSystemTempDir());
-            if (!dir.exists() && !dir.mkdir()) {
+            if (!dir.exists() && !dir.mkdirs()) {
                 throw new MSException(Translator.get("upload_fail"));
             }
             tmpFile = new File(LocalRepositoryDir.getSystemTempDir() +

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -87,7 +87,7 @@ public class ApiTestCaseDTO {
     private List<String> tags;
 
     @Schema(description = "用例通过率")
-    private String passRate;
+    private String passRate = "NONE";
 
     @Schema(description = "请求内容")
     private AbstractMsTestElement request;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioDTO.java
Patch:
@@ -29,5 +29,5 @@ public class ApiScenarioDTO extends ApiScenario {
     @Schema(description = "脚本错误标识")
     private String scriptIdentifier;
     @Schema(description = "执行通过率", requiredMode = Schema.RequiredMode.REQUIRED)
-    private String execPassRate = "0%";
+    private String execPassRate = "NONE";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -2641,6 +2641,8 @@ public List<ApiScenarioDTO> calculateRate(List<String> ids) {
                         }
                     }
                     dto.setExecPassRate(CalculateUtils.reportPercentage(passCount, all));
+                } else {
+                    dto.setExecPassRate("0%");
                 }
                 result.add(dto);
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioDTO.java
Patch:
@@ -28,4 +28,6 @@ public class ApiScenarioDTO extends ApiScenario {
     private Long nextTriggerTime;
     @Schema(description = "脚本错误标识")
     private String scriptIdentifier;
+    @Schema(description = "执行通过率", requiredMode = Schema.RequiredMode.REQUIRED)
+    private String execPassRate = "0%";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioReportMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.domain.ApiScenarioBlob;
 import io.metersphere.api.domain.ApiScenarioReport;
+import io.metersphere.api.dto.ApiExecResultDTO;
 import io.metersphere.api.dto.definition.ApiReportBatchRequest;
 import io.metersphere.api.dto.definition.ApiReportPageRequest;
 import io.metersphere.api.dto.definition.ExecuteReportDTO;
@@ -62,4 +63,6 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
     List<ExecuteReportDTO> getHistoryDeleted(@Param("ids") List<String> ids);
 
     List<ExecuteReportDTO> getTestPlanNum(@Param("ids") List<String> ids);
+
+    List<ApiExecResultDTO> selectExecResultByScenarioIds(@Param("ids") List<String> scenarioIds);
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -191,6 +191,7 @@ public ResponseEntity<byte[]> export(@Validated @RequestBody BugExportRequest re
     @Operation(summary = "缺陷管理-列表-批量删除缺陷")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.batchDeleteLog(#request)", msClass = BugLogService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.BUG_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getBatchNoticeByRequest(#request)", targetClass = BugNoticeService.class)
     public void batchDelete(@Validated @RequestBody BugBatchRequest request) {
         request.setUseTrash(false);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugTrashController.java
Patch:
@@ -53,6 +53,7 @@ public void recover(@PathVariable String id) {
     @GetMapping("/delete/{id}")
     @Operation(summary = "缺陷管理-回收站-彻底删除")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteTrashLog(#id)", msClass = BugLogService.class)
     public void deleteTrash(@PathVariable String id) {
         bugService.deleteTrash(id);
     }
@@ -70,6 +71,7 @@ public void batchRecover(@Validated @RequestBody BugBatchRequest request) {
     @Operation(summary = "缺陷管理-回收站-批量彻底删除")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.batchDeleteTrashLog(#request)", msClass = BugLogService.class)
     public void batchDelete(@Validated @RequestBody BugBatchRequest request) {
         request.setUseTrash(true);
         bugService.batchDeleteTrash(request);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportMapper.java
Patch:
@@ -67,4 +67,6 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
     List<ReportDTO> getReportsByIds(@Param("ids") List<String> ids);
 
     void deleteGroupReport(@Param("id") String id);
+
+    List<TestPlanReport> getChildrenReport(@Param("reportId") String reportId);
 }

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanReportControllerTests.java
Patch:
@@ -296,6 +296,7 @@ void testGenReportSuccess() throws Exception {
     @Order(14)
     void testGetReportSuccess() throws Exception {
         this.requestGet(GET_PLAN_REPORT + "/" + GEN_REPORT_ID);
+        this.requestGet(GET_PLAN_REPORT + "/" + "test-plan-report-id-5");
     }
 
     @Test

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -70,7 +70,7 @@ public interface ExtTestPlanApiCaseMapper {
     List<TestPlanApiCase> getPlanApiCaseByIds(@Param("planIds") List<String> planIds);
 
     List<TestPlanApiCase> getApiCaseExecuteInfoByIds(@Param("ids") List<String> ids);
-
+    @BaseConditionFilter
     List<TestPlanApiCaseBatchRunDTO> getSelectIdAndCollectionId(@Param("request") TestPlanApiCaseBatchRequest request);
 
     List<TestPlanApiCaseBatchRunDTO> getBatchRunInfoByIds(@Param("ids") List<String> ids);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -65,6 +65,7 @@ public interface ExtTestPlanApiScenarioMapper {
 
     void batchUpdateExecutor(@Param("ids") List<String> ids, @Param("userId") String userId);
 
+    @BaseConditionFilter
     List<TestPlanApiScenarioBatchRunDTO> getSelectIdAndCollectionId(@Param("request")  TestPlanApiScenarioBatchRunRequest request);
 
     List<String> getIdsByReportIdAndCollectionId(@Param("testPlanReportId") String testPlanReportId, @Param("collectionId") String collectionId);

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioMapper.java
Patch:
@@ -28,8 +28,10 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenario> getTagsByIds(@Param("ids") List<String> ids, @Param("deleted") boolean deleted);
 
+    @BaseConditionFilter
     List<TestCaseProviderDTO> listByProviderRequest(@Param("table") String resourceType, @Param("sourceName") String sourceName, @Param("apiCaseColumnName") String apiCaseColumnName, @Param("request") TestCasePageProviderRequest request, @Param("deleted") boolean deleted);
 
+    @BaseConditionFilter
     List<ModuleCountDTO> countModuleIdByProviderRequest(@Param("table") String resourceType, @Param("sourceName") String sourceName, @Param("apiCaseColumnName") String apiCaseColumnName, @Param("request") TestCasePageProviderRequest request, @Param("deleted") boolean deleted);
 
     List<BaseTreeNode> selectIdAndParentIdByProjectId(@Param("projectId") String projectId);

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiTestCaseMapper.java
Patch:
@@ -51,6 +51,7 @@ public interface ExtApiTestCaseMapper {
 
     List<String> getIdsByApiIds(@Param("ids") List<String> ids);
 
+    @BaseConditionFilter
     List<TestCaseProviderDTO> listByProviderRequest(@Param("table") String resourceType, @Param("sourceName") String sourceName, @Param("apiCaseColumnName") String apiCaseColumnName, @Param("request") TestCasePageProviderRequest request, @Param("deleted") boolean deleted);
 
     List<ModuleCountDTO> countModuleIdByProviderRequest(@Param("table") String resourceType, @Param("sourceName") String sourceName, @Param("apiCaseColumnName") String apiCaseColumnName, @Param("request") TestCasePageProviderRequest request, @Param("deleted") boolean deleted);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanStatisticsService.java
Patch:
@@ -83,7 +83,7 @@ private Map<String, TestPlanConfig> selectConfig(List<String> testPlanIds) {
 
 	private Map<String, Schedule> selectSchedule(List<String> testPlanIds) {
 		ScheduleExample scheduleExample = new ScheduleExample();
-		scheduleExample.createCriteria().andResourceIdIn(testPlanIds).andResourceTypeEqualTo(ScheduleResourceType.TEST_PLAN.name());
+		scheduleExample.createCriteria().andResourceIdIn(testPlanIds).andResourceTypeIn(List.of(ScheduleResourceType.TEST_PLAN.name(), ScheduleResourceType.TEST_PLAN_GROUP.name()));
 		List<Schedule> schedules = scheduleMapper.selectByExample(scheduleExample);
 		return schedules.stream().collect(Collectors.toMap(Schedule::getResourceId, t -> t));
 	}

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDocShareControllerTests.java
Patch:
@@ -54,6 +54,7 @@ public void addOrUpdate() throws Exception {
 		request.setIsPrivate(false);
 		request.setPassword("123456");
 		request.setAllowExport(false);
+		request.setInvalidTime(0L);
 		MvcResult mvcResult = this.requestPostWithOk(ADD, request).andReturn();
 		String returnData = mvcResult.getResponse().getContentAsString(StandardCharsets.UTF_8);
 		ResultHolder resultHolder = JSON.parseObject(returnData, ResultHolder.class);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseScheduleService.java
Patch:
@@ -40,7 +40,7 @@ public void startEnableSchedules() {
     }
 
     private void doHandleSchedule(List<Schedule> schedules) {
-        List<String> resourceTypes = List.of(ScheduleResourceType.API_IMPORT.name(), ScheduleResourceType.API_SCENARIO.name(), ScheduleResourceType.TEST_PLAN.name(), ScheduleResourceType.BUG_SYNC.name());
+        List<String> resourceTypes = List.of(ScheduleResourceType.API_IMPORT.name(), ScheduleResourceType.API_SCENARIO.name(), ScheduleResourceType.TEST_PLAN.name(), ScheduleResourceType.BUG_SYNC.name(), ScheduleResourceType.DEMAND_SYNC.name());
         schedules.forEach(schedule -> {
             try {
                 if (schedule.getEnable()) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanScheduleService.java
Patch:
@@ -40,7 +40,7 @@ public String scheduleConfig(BaseScheduleConfigRequest request, String operator)
                 .name(testPlan.getName())
                 .enable(request.isEnable())
                 .cron(request.getCron())
-                .resourceType(testPlan.getType() == TestPlanConstants.TEST_PLAN_TYPE_PLAN ? ScheduleResourceType.TEST_PLAN.name() : ScheduleResourceType.TEST_PLAN_GROUP.name())
+                .resourceType(StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_PLAN) ? ScheduleResourceType.TEST_PLAN.name() : ScheduleResourceType.TEST_PLAN_GROUP.name())
                 .config(JSON.toJSONString(request.getRunConfig()))
                 .build();
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/constants/UserViewConditionValueType.java
Patch:
@@ -5,5 +5,5 @@
  * @CreateTime: 2024-09-02  10:47
  */
 public enum UserViewConditionValueType {
-    ARRAY,STRING,INT,FLOAT
+    ARRAY,STRING,INT,FLOAT,BOOLEAN
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -180,11 +180,10 @@ public Map<String, String> initScenarioReport(Map<String, String> resourceExecTa
         List<ApiReportRelateTask> apiReportRelateTasks = new ArrayList<>();
 
         Map<String, String> resourceReportMap = new HashMap<>();
-        String projectId = "";
         for (TestPlanReportApiScenario testPlanReportApiScenario : testPlanReportApiScenarios) {
             ApiScenario apiScenario = apiScenarioMap.get(testPlanReportApiScenario.getApiScenarioId());
             // 初始化报告
-            ApiScenarioReport apiScenarioReport = getScenarioReport(runModeConfig, testPlanReportApiScenario, projectId, userId);
+            ApiScenarioReport apiScenarioReport = getScenarioReport(runModeConfig, testPlanReportApiScenario, apiScenario.getProjectId(), userId);
             apiScenarioReport.setTestPlanScenarioId(testPlanReportApiScenario.getTestPlanApiScenarioId());
             // 报告预生成，方便停止测试计划时直接更新报告状态
             apiScenarioReport.setId(testPlanReportApiScenario.getApiScenarioExecuteReportId());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiScenarioDataTransferService.java
Patch:
@@ -1024,7 +1024,6 @@ private ReplaceScenarioResource parseRelatedDataToAnalysisResult(String operator
                                 if (existenceApiCaseNumMap.containsKey(apiTestCaseDTO.getNum())) {
                                     returnResource.putApiTestCase(apiTestCaseDTO.getId(), existenceApiCaseNumMap.get(apiTestCaseDTO.getNum()));
                                 } else {
-                                    apiTestCaseDTO.setProjectId(targetProjectId);
                                     returnResource.putApiTestCase(apiTestCaseDTO.getId(), apiTestCaseDTO);
                                     apiTestCaseDTO.setId(IDGenerator.nextStr());
                                     apiTestCaseDTO.setName(apiTestCaseDTO.getName() + "_" + System.currentTimeMillis());

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTaskHubController.java
Patch:
@@ -136,10 +136,11 @@ public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request
 
     @GetMapping("/exec-task/item/stop/{id}")
     @Operation(summary = "项目-任务中心-用例任务详情-停止任务")
-    @Log(type = OperationLogType.STOP, expression = "#msClass.projectStopItemLog(#id)", msClass = BaseTaskHubLogService.class)
     @RequiresPermissions(PermissionConstants.PROJECT_CASE_TASK_CENTER_EXEC_STOP)
     public void stopTaskItem(@PathVariable String id) {
         baseTaskHubService.stopTaskItem(id, SessionUtils.getUserId(), null, null);
+        baseTaskHubLogService.taskItemBatchLog(List.of(id), SessionUtils.getUserId(), OperationLogType.STOP.name(), SessionUtils.getCurrentProjectId(), SessionUtils.getCurrentOrganizationId(),
+                "/project/task-center/exec-task/item/stop/", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
     }
 
     @PostMapping("/exec-task/item/batch-stop")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationTaskHubController.java
Patch:
@@ -147,10 +147,11 @@ public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request
 
     @GetMapping("/exec-task/item/stop/{id}")
     @Operation(summary = "组织-任务中心-用例任务详情-停止任务")
-    @Log(type = OperationLogType.STOP, expression = "#msClass.orgStopItemLog(#id)", msClass = BaseTaskHubLogService.class)
     @RequiresPermissions(PermissionConstants.ORGANIZATION_CASE_TASK_CENTER_EXEC_STOP)
     public void stopTaskItem(@PathVariable String id) {
         baseTaskHubService.stopTaskItem(id, SessionUtils.getUserId(), SessionUtils.getCurrentOrganizationId(), null);
+        baseTaskHubLogService.taskItemBatchLog(List.of(id), SessionUtils.getUserId(), OperationLogType.STOP.name(), OperationLogConstants.ORGANIZATION, SessionUtils.getCurrentOrganizationId(),
+                "/organization/task-center/exec-task/item/stop/", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER);
     }
 
     @PostMapping("/exec-task/item/batch-stop")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemTaskHubController.java
Patch:
@@ -164,10 +164,11 @@ public Pager<List<BatchExecTaskReportDTO>> batchTaskList(@Validated @RequestBody
 
     @GetMapping("/exec-task/item/stop/{id}")
     @Operation(summary = "系统-任务中心-用例任务详情-停止任务")
-    @Log(type = OperationLogType.STOP, expression = "#msClass.systemStopItemLog(#id)", msClass = BaseTaskHubLogService.class)
     @RequiresPermissions(PermissionConstants.SYSTEM_CASE_TASK_CENTER_EXEC_STOP)
     public void stopTaskItem(@PathVariable String id) {
         baseTaskHubService.stopTaskItem(id, SessionUtils.getUserId(), null, null);
+        baseTaskHubLogService.taskItemBatchLog(List.of(id), SessionUtils.getUserId(), OperationLogType.STOP.name(), OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM,
+                "/system/task-center/exec-task/item/stop/", OperationLogModule.SETTING_SYSTEM_TASK_CENTER);
     }
 
     @PostMapping("/exec-task/item/batch-stop")

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskhub/ResourcePoolOptionsDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.system.dto.taskhub;
 
+import com.fasterxml.jackson.annotation.JsonInclude;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
@@ -13,6 +14,7 @@
  */
 @Data
 @EqualsAndHashCode(callSuper = false)
+@JsonInclude(JsonInclude.Include.NON_EMPTY)
 public class ResourcePoolOptionsDTO extends OptionDTO {
 
     @Schema(description = "资源池节点")

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseCodeAssertionConverter.java
Patch:
@@ -17,18 +17,18 @@ public void parse(HashTree hashTree, MsResponseCodeAssertion msAssertion, Parame
         if (!needParse(msAssertion, config) || !isValid(msAssertion)) {
             return;
         }
-        hashTree.add(parse2ResponseAssertion(msAssertion));
+        hashTree.add(parse2ResponseAssertion(msAssertion, isIgnoreStatus));
     }
 
     public boolean isValid(MsResponseCodeAssertion msAssertion) {
         return StringUtils.isNotBlank(msAssertion.getCondition());
     }
 
-    private ResponseAssertion parse2ResponseAssertion(MsResponseCodeAssertion msAssertion) {
+    private ResponseAssertion parse2ResponseAssertion(MsResponseCodeAssertion msAssertion, boolean isIgnoreStatus) {
         ResponseAssertion assertion = createResponseAssertion();
         String expectedValue = msAssertion.getExpectedValue();
         assertion.setEnabled(msAssertion.getEnable());
-        assertion.setAssumeSuccess(true);
+        assertion.setAssumeSuccess(isIgnoreStatus);
         assertion.setEnabled(msAssertion.getEnable());
 
         String condition = msAssertion.getCondition();

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTaskHubController.java
Patch:
@@ -102,7 +102,7 @@ public void stopTask(@PathVariable String id) {
     @Operation(summary = "项目-任务中心-用例执行任务-批量停止任务")
     @RequiresPermissions(PermissionConstants.PROJECT_CASE_TASK_CENTER_EXEC_STOP)
     public void batchStopTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, null, SessionUtils.getCurrentProjectId());
+        List<String> ids = baseTaskHubService.getTaskIds(request, null, SessionUtils.getCurrentProjectId(), true);
         baseTaskHubService.batchStopTask(ids, SessionUtils.getUserId(), null, SessionUtils.getCurrentProjectId());
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.STOP.name(), SessionUtils.getCurrentProjectId(), SessionUtils.getCurrentOrganizationId(),
                 "/project/task-center/exec-task/batch-stop", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
@@ -127,7 +127,7 @@ public void deleteTask(@PathVariable String id) {
     @Operation(summary = "项目-任务中心-用例执行任务-批量删除任务")
     @RequiresPermissions(PermissionConstants.PROJECT_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, null, SessionUtils.getCurrentProjectId());
+        List<String> ids = baseTaskHubService.getTaskIds(request, null, SessionUtils.getCurrentProjectId(), false);
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), SessionUtils.getCurrentProjectId(), SessionUtils.getCurrentOrganizationId(),
                 "/project/task-center/exec-task/batch-delete", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
         baseTaskHubService.batchDeleteTask(ids, null, SessionUtils.getCurrentProjectId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationTaskHubController.java
Patch:
@@ -107,7 +107,7 @@ public void stopTask(@PathVariable String id) {
     @Operation(summary = "组织-任务中心-用例执行任务-批量停止任务")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_CASE_TASK_CENTER_EXEC_STOP)
     public void batchStopTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, SessionUtils.getCurrentOrganizationId(), null);
+        List<String> ids = baseTaskHubService.getTaskIds(request, SessionUtils.getCurrentOrganizationId(), null, true);
         baseTaskHubService.batchStopTask(ids, SessionUtils.getUserId(), SessionUtils.getCurrentOrganizationId(), null);
         //日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.STOP.name(), OperationLogConstants.ORGANIZATION, SessionUtils.getCurrentOrganizationId(),
@@ -134,7 +134,7 @@ public void deleteTask(@PathVariable String id) {
     @Operation(summary = "组织-任务中心-用例执行任务-批量删除任务")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, SessionUtils.getCurrentOrganizationId(), null);
+        List<String> ids = baseTaskHubService.getTaskIds(request, SessionUtils.getCurrentOrganizationId(), null, false);
         //日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), OperationLogConstants.ORGANIZATION, SessionUtils.getCurrentOrganizationId(),
                 "/organization/task-center/exec-task/batch-delete", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER);

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemTaskHubController.java
Patch:
@@ -106,7 +106,7 @@ public void stopTask(@PathVariable String id) {
     @Operation(summary = "系统-任务中心-用例执行任务-批量停止任务")
     @RequiresPermissions(PermissionConstants.SYSTEM_CASE_TASK_CENTER_EXEC_STOP)
     public void batchStopTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, null, null);
+        List<String> ids = baseTaskHubService.getTaskIds(request, null, null, true);
         baseTaskHubService.batchStopTask(ids, SessionUtils.getUserId(), null, null);
         //系統日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.STOP.name(), OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM,
@@ -133,7 +133,7 @@ public void deleteTask(@PathVariable String id) {
     @Operation(summary = "系统-任务中心-用例执行任务-批量删除任务")
     @RequiresPermissions(PermissionConstants.SYSTEM_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
-        List<String> ids = baseTaskHubService.getTaskIds(request, null, null);
+        List<String> ids = baseTaskHubService.getTaskIds(request, null, null, false);
         //系統日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM,
                 "/system/task-center/exec-task/batch-delete", OperationLogModule.SETTING_SYSTEM_TASK_CENTER);

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtExecTaskMapper.java
Patch:
@@ -17,7 +17,7 @@ public interface ExtExecTaskMapper {
 
     void deleteTaskByIds(@Param("ids") List<String> ids, @Param("orgId") String orgId, @Param("projectId") String projectId);
 
-    List<String> getIds(@Param("request") TableBatchProcessDTO request, @Param("organizationId") String organizationId, @Param("projectId") String projectId);
+    List<String> getIds(@Param("request") TableBatchProcessDTO request, @Param("organizationId") String organizationId, @Param("projectId") String projectId, @Param("flag") boolean flag);
 
     void batchUpdateTaskStatus(@Param("ids") List<String> ids, @Param("userId") String userId, @Param("organizationId") String organizationId, @Param("projectId") String projectId, @Param("status") String status);
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -665,9 +665,9 @@ public void batchStopTask(List<String> ids, String userId, String orgId, String
 
     }
 
-    public List<String> getTaskIds(TableBatchProcessDTO request, String orgId, String projectId) {
+    public List<String> getTaskIds(TableBatchProcessDTO request, String orgId, String projectId, boolean flag) {
         if (request.isSelectAll()) {
-            List<String> ids = extExecTaskMapper.getIds(request, orgId, projectId);
+            List<String> ids = extExecTaskMapper.getIds(request, orgId, projectId, flag);
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTaskHubController.java
Patch:
@@ -128,9 +128,9 @@ public void deleteTask(@PathVariable String id) {
     @RequiresPermissions(PermissionConstants.PROJECT_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
         List<String> ids = baseTaskHubService.getTaskIds(request, null, SessionUtils.getCurrentProjectId());
-        baseTaskHubService.batchDeleteTask(ids, null, SessionUtils.getCurrentProjectId());
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), SessionUtils.getCurrentProjectId(), SessionUtils.getCurrentOrganizationId(),
                 "/project/task-center/exec-task/batch-delete", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
+        baseTaskHubService.batchDeleteTask(ids, null, SessionUtils.getCurrentProjectId());
     }
 
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationTaskHubController.java
Patch:
@@ -135,10 +135,10 @@ public void deleteTask(@PathVariable String id) {
     @RequiresPermissions(PermissionConstants.ORGANIZATION_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
         List<String> ids = baseTaskHubService.getTaskIds(request, SessionUtils.getCurrentOrganizationId(), null);
-        baseTaskHubService.batchDeleteTask(ids, SessionUtils.getCurrentOrganizationId(), null);
         //日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), OperationLogConstants.ORGANIZATION, SessionUtils.getCurrentOrganizationId(),
                 "/organization/task-center/exec-task/batch-delete", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER);
+        baseTaskHubService.batchDeleteTask(ids, SessionUtils.getCurrentOrganizationId(), null);
     }
 
     @GetMapping("/exec-task/item/stop/{id}")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemTaskHubController.java
Patch:
@@ -134,10 +134,10 @@ public void deleteTask(@PathVariable String id) {
     @RequiresPermissions(PermissionConstants.SYSTEM_CASE_TASK_CENTER_DELETE)
     public void batchDeleteTask(@Validated @RequestBody TableBatchProcessDTO request) {
         List<String> ids = baseTaskHubService.getTaskIds(request, null, null);
-        baseTaskHubService.batchDeleteTask(ids, SessionUtils.getCurrentOrganizationId(), null);
         //系統日志
         baseTaskHubLogService.taskBatchLog(ids, SessionUtils.getUserId(), OperationLogType.DELETE.name(), OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM,
                 "/system/task-center/exec-task/batch-delete", OperationLogModule.SETTING_SYSTEM_TASK_CENTER);
+        baseTaskHubService.batchDeleteTask(ids, SessionUtils.getCurrentOrganizationId(), null);
     }
 
     @PostMapping("/exec-task/batch/page")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -477,6 +477,8 @@ public ExecTaskDetailDTO viewScenarioItemReport(String id) {
                 ApiScenarioReportDTO scenarioReportDetail = scenarioReportDetail(id);
                 BeanUtils.copyBean(apiTaskReportDTO, scenarioReportDetail);
             }
+            apiTaskReportDTO.setStartTime(task.getStartTime());
+            apiTaskReportDTO.setEndTime(task.getEndTime());
         }
         return apiTaskReportDTO;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -560,7 +560,7 @@ private TestPlanReportDetailCaseDTO genReportDetail(TestPlanReportGenPreParam ge
 
 					if (StringUtils.isNotBlank(genParam.getTaskId())) {
 						reportApiCases.sort(Comparator.comparing(TestPlanReportApiCase::getPos).reversed());
-						initApiCaseExecTaskItem(genParam.getTaskId(), genParam.getTaskId(), reportApiCases, report.getCreateUser(), project);
+						initApiCaseExecTaskItem(genParam.getTaskId(), genParam.getTestPlanId(), reportApiCases, report.getCreateUser(), project);
 					}
 				});
 			}

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ms/http/post/RegexExtractorConverter.java
Patch:
@@ -17,7 +17,7 @@ public void toMsElement(AbstractMsTestElement parent, RegexExtractor element, Ha
         regexExtract.setEnable(element.isEnabled());
         regexExtract.setExtractScope(this.getUseField(element));
         regexExtract.setResultMatchingRuleNum(element.getMatchNumber());
-
+        regexExtract.setVariableType("TEMPORARY");
         ConverterUtils.addPostExtract(parent, regexExtract);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ms/http/post/XPath2ExtractorConverter.java
Patch:
@@ -15,6 +15,7 @@ public void toMsElement(AbstractMsTestElement parent, XPath2Extractor element, H
         xPathExtract.setEnable(element.isEnabled());
         xPathExtract.setResponseFormat(XPathExtract.ResponseFormat.XML.name());
         xPathExtract.setVariableName(element.getRefName());
+        xPathExtract.setVariableType("TEMPORARY");
         xPathExtract.setExpression(element.getXPathQuery());
         if (element.getMatchNumber() == -1) {
             xPathExtract.setResultMatchingRule(ResultMatchingExtract.ResultMatchingRuleType.ALL.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/export/MetersphereApiScenarioExportResponse.java
Patch:
@@ -18,7 +18,8 @@
  */
 @Data
 public class MetersphereApiScenarioExportResponse extends ApiScenarioExportResponse {
-
+    @Schema(description = "是否包含关联资源")
+    private boolean hasRelatedResource;
     @Schema(description = "导出的场景")
     private List<ApiScenarioDetail> exportScenarioList = new ArrayList<>();
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiScenarioDataTransferService.java
Patch:
@@ -1145,7 +1145,7 @@ private ApiScenarioExportResponse genMetersphereExportResponse(ApiScenarioBatchE
         MetersphereApiScenarioExportResponse response = apiScenarioService.selectAndSortScenarioDetailWithIds(request.getSelectIds(), moduleMap);
         response.setProjectId(project.getId());
         response.setOrganizationId(project.getOrganizationId());
-
+        response.setHasRelatedResource(request.isExportAllRelatedData());
         if (request.isExportAllRelatedData()) {
             // 全量导出，导出引用的api、apiCase
             List<String> apiDefinitionIdList = new ArrayList<>();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1824,7 +1824,9 @@ private List<ApiScenarioStepDTO> parseConfig(List<ApiScenarioStepDTO> steps, Str
             ApiScenarioStepDTO returnDTO = new ApiScenarioStepDTO();
             BeanUtils.copyBean(returnDTO, dto);
             if (StringUtils.isNotBlank(parentId) && !StringUtils.equalsIgnoreCase(parentId, dto.getId())) {
-                returnDTO.setParentId(parentId);
+                if (StringUtils.isBlank(returnDTO.getParentId())) {
+                    returnDTO.setParentId(parentId);
+                }
             }
             if (returnDTO.getConfig() != null && StringUtils.isNotBlank(returnDTO.getConfig().toString())) {
                 if (returnDTO.getConfig() instanceof String configVal) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerImportAndExportTests.java
Patch:
@@ -165,7 +165,7 @@ public void testExport() throws Exception {
 
             MetersphereApiScenarioExportResponse exportResponse = ApiDataUtils.parseObject(fileContent, MetersphereApiScenarioExportResponse.class);
 
-            Assertions.assertEquals(exportResponse.getExportScenarioList().size(), 8);
+            Assertions.assertEquals(exportResponse.getExportScenarioList().size(), 6);
 
             MsFileUtils.deleteDir("/tmp/api-scenario-export/");
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionScheduleController.java
Patch:
@@ -3,7 +3,9 @@
 import io.metersphere.api.dto.definition.ApiScheduleDTO;
 import io.metersphere.api.dto.definition.request.ApiScheduleRequest;
 import io.metersphere.api.service.definition.ApiDefinitionScheduleService;
+import io.metersphere.sdk.constants.HttpMethodConstants;
 import io.metersphere.sdk.constants.PermissionConstants;
+import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.utils.SessionUtils;
 import io.metersphere.validation.groups.Created;
@@ -51,7 +53,7 @@ public void updateScheduleEnable(@PathVariable String id) {
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_IMPORT)
     @CheckOwner(resourceId = "#id", resourceType = "schedule")
     public void deleteSchedule(@PathVariable String id) {
-        apiDefinitionScheduleService.deleteSchedule(id);
+        apiDefinitionScheduleService.deleteSchedule(id, SessionUtils.getUserId(), "/api/definition/schedule/delete/", HttpMethodConstants.GET.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION);
     }
 
     @GetMapping(value = "/get/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiCommonService.java
Patch:
@@ -483,7 +483,7 @@ public void setApiDefinitionExecuteInfo(AbstractMsTestElement msTestElement, Api
 
     public ExecTask newExecTask(String projectId, String userId) {
         ExecTask execTask = new ExecTask();
-        execTask.setNum(NumGenerator.nextNum(projectId, ApplicationNumScope.TASK));
+        execTask.setNum(NumGenerator.nextNum(ApplicationNumScope.TASK));
         execTask.setProjectId(projectId);
         execTask.setId(IDGenerator.nextStr());
         execTask.setCreateTime(System.currentTimeMillis());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TestResourcePoolService.java
Patch:
@@ -323,7 +323,7 @@ public ResourcePoolNodeMetric getTestResourcePoolCapacityDetail(TestResourcePool
             resourcePoolNodeMetric = getNodeMetric(request.getIp(), request.getPort());
             for (TestResourceNodeDTO testResourceNodeDTO : testResourceDTO.getNodesList()) {
                 if (StringUtils.equals(testResourceNodeDTO.getIp(), request.getIp()) && StringUtils.equals(testResourceNodeDTO.getPort(), request.getPort())) {
-                    resourcePoolNodeMetric.setConcurrentNumber(testResourceDTO.getConcurrentNumber());
+                    resourcePoolNodeMetric.setConcurrentNumber(testResourceNodeDTO.getConcurrentNumber());
                     break;
                 }
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioRunService.java
Patch:
@@ -300,17 +300,16 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request, String id) {
     }
 
     public GetRunScriptResult getRunScript(GetRunScriptRequest request, ApiScenarioDetail apiScenarioDetail) {
-        String id = apiScenarioDetail.getId();
         TaskItem taskItem = request.getTaskItem();
         ApiRunModeConfigDTO runModeConfig = request.getRunModeConfig();
         String reportId = taskItem.getReportId();
 
         if (apiScenarioDetail == null) {
             if (runModeConfig.isIntegratedReport()) {
                 // 用例不存在，则在执行集合中删除
-                apiExecutionSetService.removeItem(runModeConfig.getCollectionReport().getReportId(), id);
+                apiExecutionSetService.removeItem(request.getTaskId(), taskItem.getId());
             }
-            LogUtils.info("当前执行任务的用例已删除 {}", id);
+            LogUtils.info("当前执行任务的用例已删除 {}", taskItem.getId());
             return null;
         }
 

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectTaskHubControllerTests.java
Patch:
@@ -289,7 +289,7 @@ public void getProjectBatchTaskPage() throws Exception {
         request.setCurrent(1);
         request.setPageSize(10);
         this.requestPostWithOk(PROJECT_BATCH_TASK_PAGE, request);
-        request.setSort(Map.of("startTime", "asc"));
+        request.setSort(Map.of("createTime", "asc"));
         request.setBatchType(ExecTaskType.API_SCENARIO_BATCH.name());
         this.requestPostWithOk(PROJECT_BATCH_TASK_PAGE, request);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -317,7 +317,7 @@ public Pager<List<ReferenceDTO>> getReference(@Validated @RequestBody ReferenceR
     @PostMapping(value = "/export/{type}")
     @Operation(summary = "接口测试-接口场景管理-场景-导出场景")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXPORT)
-    @CheckOwner(resourceId = "#request.getResourceId()", resourceType = "api_scenario")
+    @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public String export(@RequestBody ApiScenarioBatchExportRequest request, @PathVariable String type) {
         return apiScenarioDataTransferService.exportScenario(request, type, SessionUtils.getUserId());
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDefinitionMapper.java
Patch:
@@ -105,4 +105,6 @@ public interface ExtApiDefinitionMapper {
     List<String> getIdsByShareParam(@Param("projectId") String projectId, @Param("condition") String condition);
 
     long countByProjectAndId(@Param("projectId") String projectId, @Param("id") String id);
+
+    Long selectNumById(String id);
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTaskHubController.java
Patch:
@@ -187,7 +187,7 @@ public void batchDisable(@Validated @RequestBody TableBatchProcessDTO request) {
     @Operation(summary = "项目-任务中心-后台任务更新cron表达式")
     @RequiresPermissions(PermissionConstants.PROJECT_SCHEDULE_TASK_CENTER_READ_UPDATE)
     public void updateValue(@Validated @RequestBody ScheduleRequest request) {
-        baseTaskHubService.updateCron(request);
+        baseTaskHubService.updateCron(request, SessionUtils.getUserId(), "/project/task-center/schedule/update-cron", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
     }
 
     @PostMapping("/exec-task/batch/page")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationTaskHubController.java
Patch:
@@ -182,7 +182,7 @@ public void enable(@PathVariable String id) {
     public void batchEnable(@Validated @RequestBody TableBatchProcessDTO request) {
         List<OptionDTO> projectList = baseProjectMapper.getProjectOptionsByOrgId(SessionUtils.getCurrentOrganizationId());
         List<String> projectIds = projectList.stream().map(OptionDTO::getId).toList();
-        baseTaskHubService.scheduleBatchOperation(request, SessionUtils.getUserId(), SessionUtils.getCurrentProjectId(), "/organization/task-center/schedule/batch-enable", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER, true,projectIds);
+        baseTaskHubService.scheduleBatchOperation(request, SessionUtils.getUserId(), SessionUtils.getCurrentProjectId(), "/organization/task-center/schedule/batch-enable", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER, true, projectIds);
     }
 
 
@@ -200,7 +200,7 @@ public void batchDisable(@Validated @RequestBody TableBatchProcessDTO request) {
     @Operation(summary = "组织-任务中心-后台任务更新cron表达式")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_SCHEDULE_TASK_CENTER_READ_UPDATE)
     public void updateValue(@Validated @RequestBody ScheduleRequest request) {
-        baseTaskHubService.updateCron(request);
+        baseTaskHubService.updateCron(request, SessionUtils.getUserId(), "/organization/task-center/schedule/update-cron", OperationLogModule.SETTING_ORGANIZATION_TASK_CENTER);
     }
 
     @PostMapping("/exec-task/batch/page")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemTaskHubController.java
Patch:
@@ -206,7 +206,7 @@ public void batchDisable(@Validated @RequestBody TableBatchProcessDTO request) {
     @Operation(summary = "系统-任务中心-后台任务更新cron表达式")
     @RequiresPermissions(PermissionConstants.SYSTEM_SCHEDULE_TASK_CENTER_READ_UPDATE)
     public void updateValue(@Validated @RequestBody ScheduleRequest request) {
-        baseTaskHubService.updateCron(request);
+        baseTaskHubService.updateCron(request, SessionUtils.getUserId(), "/system/task-center/schedule/update-cron", OperationLogModule.SETTING_SYSTEM_TASK_CENTER);
     }
 
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -888,13 +888,14 @@ private List<Schedule> getSchedule(TableBatchProcessDTO request, List<String> pr
         return list;
     }
 
-    public void updateCron(ScheduleRequest request) {
+    public void updateCron(ScheduleRequest request, String userId, String path, String module) {
         Schedule schedule = checkScheduleExit(request.getId());
         schedule.setValue(request.getCron());
         scheduleService.editSchedule(schedule);
         try {
             scheduleService.addOrUpdateCronJob(schedule, new JobKey(schedule.getKey(), schedule.getJob()),
                     new TriggerKey(schedule.getKey(), schedule.getJob()), Class.forName(schedule.getJob()));
+            saveLog(List.of(schedule), userId, path, HttpMethodConstants.GET.name(), module, OperationLogType.UPDATE.name());
         } catch (ClassNotFoundException e) {
             LogUtils.error(e);
             throw new RuntimeException(e);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1849,7 +1849,7 @@ public List<ApiScenarioStepDTO> buildScenarioSteps(List<String> scenarioIds) {
             returnList.addAll(this.parseConfig(steps, null));
         }
 
-        List<ApiScenarioStepDTO> refScenarioSteps = steps.stream().filter(this::isRefOrPartialScenario).toList();
+        List<ApiScenarioStepDTO> refScenarioSteps = steps.stream().filter(k -> isScenarioStep(k.getStepType())).toList();
         while (CollectionUtils.isNotEmpty(refScenarioSteps)) {
             List<ApiScenarioStepDTO> childStep = new ArrayList<>();
             for (ApiScenarioStepDTO step : refScenarioSteps) {
@@ -1858,7 +1858,7 @@ public List<ApiScenarioStepDTO> buildScenarioSteps(List<String> scenarioIds) {
                     returnList.addAll(this.parseConfig(childStep, step.getId()));
                 }
             }
-            refScenarioSteps = childStep.stream().filter(this::isRefOrPartialScenario).toList();
+            refScenarioSteps = childStep.stream().filter(k -> isScenarioStep(k.getStepType())).toList();
         }
         // 嵌套获取引用的场景步骤
         return returnList;

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ms/http/post/JSONPostProcessorConverter.java
Patch:
@@ -16,7 +16,7 @@ public void toMsElement(AbstractMsTestElement parent, JSONPostProcessor element,
         jsonPathExtract.setVariableName(element.getRefNames());
         jsonPathExtract.setExpression(element.getJsonPathExpressions());
         jsonPathExtract.setEnable(element.isEnabled());
-
+        jsonPathExtract.setVariableType("TEMPORARY");
         if (StringUtils.equalsIgnoreCase(element.getMatchNumbers(), "-1")) {
             jsonPathExtract.setResultMatchingRule(ResultMatchingExtract.ResultMatchingRuleType.ALL.name());
             jsonPathExtract.setResultMatchingRuleNum(-1);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -291,6 +291,7 @@ private void handleCaseAndEnv(List<TestPlanApiCasePageResponse> apiCaseList, Map
         environmentExample.createCriteria().andIdIn(caseEnvIds);
         List<Environment> caseEnv = environmentMapper.selectByExample(environmentExample);
         Map<String, String> caseEnvMap = caseEnv.stream().collect(Collectors.toMap(Environment::getId, Environment::getName));
+
         apiCaseList.forEach(item -> {
             item.setProjectName(projectMap.get(item.getProjectId()));
             item.setCreateUserName(userMap.get(item.getCreateUser()));

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -201,7 +201,7 @@ public Map<String, String> initScenarioReport(Map<String, String> resourceExecTa
 
             // 创建报告和任务的关联关系
             ApiReportRelateTask apiReportRelateTask = new ApiReportRelateTask();
-            apiReportRelateTask.setReportId(apiScenario.getId());
+            apiReportRelateTask.setReportId(apiScenarioReport.getId());
             apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(testPlanReportApiScenario.getId()));
             apiReportRelateTasks.add(apiReportRelateTask);
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiScenarioBatchExportRequest.java
Patch:
@@ -31,6 +31,8 @@ public class ApiScenarioBatchExportRequest extends ApiScenarioBatchRequest imple
     @Schema(description = "排序字段（model中的字段 : asc/desc）")
     private Map<@Valid @Pattern(regexp = "^[A-Za-z]+$") String, @Valid @NotBlank String> sort;
 
+    private boolean exportAllRelatedData;
+    
     public String getSortString() {
         if (sort == null || sort.isEmpty()) {
             return null;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanCollectionMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.plan.mapper;
 
+import io.metersphere.plan.domain.TestPlanCollection;
 import io.metersphere.plan.dto.TestPlanCollectionConfigDTO;
 import io.metersphere.plan.dto.TestPlanCollectionEnvDTO;
 import org.apache.ibatis.annotations.Param;
@@ -17,4 +18,6 @@ public interface ExtTestPlanCollectionMapper {
     String selectDefaultCollectionId(@Param("testPlanId")String newTestPlanId,@Param("type") String key);
 
     boolean getParentStopOnFailure(String collectionId);
+
+    List<TestPlanCollection> selectByItemParentId(String collectionId);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiCaseMapper.java
Patch:
@@ -50,4 +50,6 @@ public interface ExtTestPlanReportApiCaseMapper {
 	List<TestPlanReportDetailCollectionResponse> listCollection(@Param("request") TestPlanReportDetailPageRequest request);
 
     List<String> getIdsByReportIdAndCollectionId(@Param("testPlanReportId") String testPlanReportId, @Param("collectionId") String collectionId);
+
+	List<String> selectExecResultByReportIdAndCollectionId(@Param("collectionId") String collectionId, @Param("reportId") String prepareReportId);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiScenarioMapper.java
Patch:
@@ -49,4 +49,6 @@ public interface ExtTestPlanReportApiScenarioMapper {
 	 * @return 关联的测试集集合
 	 */
 	List<TestPlanReportDetailCollectionResponse> listCollection(@Param("request") TestPlanReportDetailPageRequest request);
+
+	List<String> selectExecResultByReportIdAndCollectionId(@Param("collectionId") String collectionId, @Param("reportId") String prepareReportId);
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TestResourcePoolService.java
Patch:
@@ -312,7 +312,7 @@ public ResourcePoolNodeMetric getTestResourcePoolCapacityDetail(TestResourcePool
                 int occupiedConcurrentNumber = 0;
                 for (TestResourceNodeDTO testResourceNodeDTO : testResourceDTO.getNodesList()) {
                     ResourcePoolNodeMetric nodeMetric = getNodeMetric(testResourceNodeDTO.getIp(), testResourceNodeDTO.getPort());
-                    concurrentNumber = concurrentNumber + nodeMetric.getConcurrentNumber();
+                    concurrentNumber = concurrentNumber + testResourceNodeDTO.getConcurrentNumber();
                     occupiedConcurrentNumber = occupiedConcurrentNumber + nodeMetric.getOccupiedConcurrentNumber();
                 }
                 resourcePoolNodeMetric.setConcurrentNumber(concurrentNumber);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugCustomFieldDTO.java
Patch:
@@ -14,4 +14,7 @@ public class BugCustomFieldDTO extends CustomField {
 
     @Schema(description = "缺陷ID")
     private String bugId;
+
+    @Schema(description = "字段文本")
+    private String text;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugNoticeService.java
Patch:
@@ -66,7 +66,7 @@ public BugNoticeDTO getNoticeByRequest(BugEditRequest request) {
                         // 其他自定义字段
                         OptionDTO fieldDTO = new OptionDTO();
                         fieldDTO.setId(field.getName());
-                        fieldDTO.setName(field.getValue());
+                        fieldDTO.setName(StringUtils.isEmpty(field.getText()) ? field.getValue() : field.getText());
                         fields.add(fieldDTO);
                     }
                 });

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -227,6 +227,7 @@ public void parallelExecute(ApiTestCaseBatchRunRequest request, String userId) {
 
             TaskBatchRequestDTO taskRequest = getTaskBatchRequestDTO(request.getProjectId(), runModeConfig);
             taskRequest.getTaskInfo().setTaskId(execTask.getId());
+            taskRequest.getTaskInfo().setUserId(userId);
             taskRequest.setTaskItems(taskItems);
             apiExecuteService.batchExecute(taskRequest);
         });

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/interceptor/RetryInterceptor.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.dto.ApiParamConfig;
 import io.metersphere.api.dto.request.controller.MsLoopController;
+import io.metersphere.api.dto.request.controller.MsScriptElement;
 import io.metersphere.api.parser.jmeter.constants.JmeterAlias;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import io.metersphere.plugin.api.spi.AbstractMsProtocolTestElement;
@@ -111,7 +112,7 @@ private boolean isRetryEnable(ApiParamConfig apiParamConfig) {
      * @return
      */
     private boolean isRetryElement(MsTestElement element) {
-        if (element instanceof AbstractMsProtocolTestElement) {
+        if (element instanceof AbstractMsProtocolTestElement || element instanceof MsScriptElement) {
             return true;
         }
         return false;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PlatformPluginService.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.plugin.platform.spi.Platform;
 import io.metersphere.sdk.constants.PluginScenarioType;
 import io.metersphere.sdk.exception.MSException;
+import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.Plugin;
 import io.metersphere.system.domain.ServiceIntegration;
 import io.metersphere.system.domain.ServiceIntegrationExample;
@@ -45,7 +46,7 @@ public Platform getPlatform(String pluginId, String orgId, String integrationCon
     public Platform getPlatform(String pluginId, String orgId) {
         ServiceIntegration serviceIntegration = getServiceIntegrationByPluginId(pluginId, orgId);
         if (serviceIntegration == null) {
-            throw new MSException("service_integration.configuration.not_blank");
+            throw new MSException(Translator.get("service_integration.configuration.not_blank"));
         }
         return getPlatform(pluginId, orgId, new String(serviceIntegration.getConfiguration()));
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiScenarioDataTransferService.java
Patch:
@@ -520,6 +520,9 @@ private void insertScenarios(String operator, String versionId, List<ApiScenario
                     if (t.getScenarioConfig() == null) {
                         apiScenarioBlob.setConfig(JSON.toJSONString(new ScenarioConfig()).getBytes());
                     } else {
+                        if (t.getScenarioConfig().getVariable() != null && t.getScenarioConfig().getVariable().getCsvVariables() != null) {
+                            t.getScenarioConfig().getVariable().getCsvVariables().forEach(item -> item.setId(IDGenerator.nextStr()));
+                        }
                         apiScenarioBlob.setConfig(JSON.toJSONString(t.getScenarioConfig()).getBytes());
                     }
                     apiScenarioBlobBatchMapper.insert(apiScenarioBlob);

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDocShareController.java
Patch:
@@ -144,7 +144,7 @@ public void downloadImgById(@PathVariable String projectId, @PathVariable String
 	@GetMapping(value = "/get-detail/{id}")
 	@Operation(summary = "接口测试-接口管理-获取接口详情")
 	public ApiDefinitionDTO get(@PathVariable String id) {
-		return apiDefinitionService.get(id, SessionUtils.getUserId());
+		return apiDefinitionService.get(id, "admin");
 	}
 
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -645,7 +645,8 @@ public void transferTmpFile(String bugId, String projectId, List<String> uploadF
             addFileMap.put(fileId, fileName);
             return localAttachment;
         }).toList();
-        bugLocalAttachmentMapper.batchInsert(localAttachments);
+        List<BugLocalAttachment> normalAttachments = localAttachments.stream().filter(attachment -> StringUtils.isNotEmpty(attachment.getFileName())).toList();
+        bugLocalAttachmentMapper.batchInsert(normalAttachments);
         // 上传文件到对象存储
         LogUtils.info("upload to minio start");
         String bugDir = DefaultRepositoryDir.getBugDir(projectId, bugId);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanReportDetailCollectionResponse.java
Patch:
@@ -14,4 +14,6 @@ public class TestPlanReportDetailCollectionResponse {
 	private Long count;
 	@Schema(description = "计划名称")
 	private String planName;
+	@Schema(description = "位置")
+	private Long pos;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -1290,6 +1290,7 @@ public List<TestPlanReportDetailCollectionResponse> listReportCollection(TestPla
 			case CollectionQueryType.SCENARIO -> collections = extTestPlanReportApiScenarioMapper.listCollection(request);
 			default -> collections = new ArrayList<>();
 		}
+		collections.sort(Comparator.comparing(TestPlanReportDetailCollectionResponse::getPos));
 		return collections;
 	}
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTaskHubService.java
Patch:
@@ -193,8 +193,9 @@ private Map<String, String> getProjectMaps(List<String> projectIds) {
      * @param tasks 任务集合
      */
     private void setTaskReportId(List<TaskHubDTO> tasks) {
-        List<TaskHubDTO> reportTasks = tasks.stream().filter(task -> !StringUtils.equals(task.getTaskType(), ExecTaskType.API_SCENARIO_BATCH.name()) && !StringUtils.equals(task.getTaskType(), ExecTaskType.API_CASE_BATCH.name())
-                && !StringUtils.equals(task.getTaskType(), ExecTaskType.TEST_PLAN_API_CASE_BATCH.name()) && !StringUtils.equals(task.getTaskType(), ExecTaskType.TEST_PLAN_API_SCENARIO_BATCH.name())).toList();
+        // 集成报告, 独立报告(非批量任务&&非测试计划批量任务)
+        List<TaskHubDTO> reportTasks = tasks.stream().filter(task -> task.getIntegrated() || (!StringUtils.equals(task.getTaskType(), ExecTaskType.API_SCENARIO_BATCH.name()) && !StringUtils.equals(task.getTaskType(), ExecTaskType.API_CASE_BATCH.name())
+                && !StringUtils.equals(task.getTaskType(), ExecTaskType.TEST_PLAN_API_CASE_BATCH.name()) && !StringUtils.equals(task.getTaskType(), ExecTaskType.TEST_PLAN_API_SCENARIO_BATCH.name()))).toList();
         List<String> integratedTaskIds = reportTasks.stream().filter(task ->
                 StringUtils.equalsAny(task.getTaskType(), ExecTaskType.TEST_PLAN.name(), ExecTaskType.TEST_PLAN_GROUP.name()) || task.getIntegrated()).map(ExecTask::getId).toList();
         List<String> noIntegratedTasks = reportTasks.stream().map(ExecTask::getId).filter(id -> !integratedTaskIds.contains(id)).toList();

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -302,7 +302,6 @@ public TaskRequestDTO run(@Validated @RequestBody ApiCaseRunRequest request) {
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "api_test_case")
     public void batchRun(@Validated @RequestBody ApiTestCaseBatchRunRequest request) {
-        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         apiTestCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioBatchOperationController.java
Patch:
@@ -101,7 +101,6 @@ public ApiScenarioBatchOperationResponse batchCopy(@Validated @RequestBody ApiSc
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
     public void batchRun(@Validated @RequestBody ApiScenarioBatchRunRequest request) {
         apiValidateService.validateApiMenuInProject(request.getProjectId(), ApiResource.PROJECT.name());
-        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         apiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -150,7 +150,6 @@ public TaskRequestDTO run(@PathVariable String id,
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_case")
     public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest request) {
-        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         testPlanApiCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -100,7 +100,6 @@ public TaskRequestDTO run(@PathVariable String id, @RequestParam(required = fals
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_scenario")
     public void batchRun(@Validated @RequestBody TestPlanApiScenarioBatchRunRequest request) {
-        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         testPlanApiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/job/ApiScenarioScheduleJob.java
Patch:
@@ -78,7 +78,7 @@ protected void businessExecute(JobExecutionContext context) {
         execTaskItem.setResourceType(ApiExecuteResourceType.API_SCENARIO.name());
         execTaskItem.setResourceId(apiScenarioDetail.getId());
         execTaskItem.setResourceName(apiScenarioDetail.getName());
-        baseTaskHubService.insertExecTaskAndDetail(execTask,execTaskItem);
+        baseTaskHubService.insertExecTaskAndDetail(execTask, execTaskItem);
 
         TaskRequestDTO taskRequest = apiScenarioRunService.getTaskRequest(IDGenerator.nextStr(), apiScenarioDetail.getId(), apiScenarioDetail.getProjectId(), ApiExecuteRunMode.SCHEDULE.name());
         TaskInfo taskInfo = taskRequest.getTaskInfo();
@@ -114,7 +114,6 @@ protected void businessExecute(JobExecutionContext context) {
     }
 
 
-
     public static JobKey getJobKey(String scenarioId) {
         return new JobKey(scenarioId, ApiScenarioScheduleJob.class.getName());
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsCommonElementConverter.java
Patch:
@@ -139,7 +139,7 @@ private void addProcessors(HashTree tree, MsCommonElement msCommonElement, Param
         if (BooleanUtils.isTrue(processorConfig.getEnableGlobal()) && envInfo != null) {
             EnvironmentConfig envConfig = envInfo.getConfig();
             EnvProcessorConfig envProcessorConfig = isPre ? envConfig.getPreProcessorConfig() : envConfig.getPostProcessorConfig();
-            addEnvProcessors(envProcessorConfig, beforeStepProcessors, afterStepProcessors, protocol, true);
+            addEnvProcessors(envProcessorConfig, beforeStepProcessors, afterStepProcessors, protocol, isPre);
         }
 
         Function<Class<?>, MsProcessorConverter<MsProcessor>> getConverterFunc =

File: backend/services/api-test/src/main/java/io/metersphere/api/job/ApiScenarioScheduleJob.java
Patch:
@@ -23,6 +23,7 @@
 import io.metersphere.system.domain.ExecTask;
 import io.metersphere.system.domain.ExecTaskItem;
 import io.metersphere.system.schedule.BaseScheduleJob;
+import io.metersphere.system.service.BaseTaskHubService;
 import io.metersphere.system.uid.IDGenerator;
 import org.apache.commons.lang3.StringUtils;
 import org.quartz.JobExecutionContext;
@@ -36,6 +37,7 @@ protected void businessExecute(JobExecutionContext context) {
         ApiScenarioRunService apiScenarioRunService = CommonBeanFactory.getBean(ApiScenarioRunService.class);
         ApiCommonService apiCommonService = CommonBeanFactory.getBean(ApiCommonService.class);
         ProjectMapper projectMapper = CommonBeanFactory.getBean(ProjectMapper.class);
+        BaseTaskHubService baseTaskHubService = CommonBeanFactory.getBean(BaseTaskHubService.class);
         ApiRunModeConfigDTO apiRunModeConfigDTO = JSON.parseObject(context.getJobDetail().getJobDataMap().get("config").toString(), ApiRunModeConfigDTO.class);
 
         ApiScenarioDetail apiScenarioDetail = apiScenarioRunService.getForRun(resourceId);
@@ -76,6 +78,7 @@ protected void businessExecute(JobExecutionContext context) {
         execTaskItem.setResourceType(ApiExecuteResourceType.API_SCENARIO.name());
         execTaskItem.setResourceId(apiScenarioDetail.getId());
         execTaskItem.setResourceName(apiScenarioDetail.getName());
+        baseTaskHubService.insertExecTaskAndDetail(execTask,execTaskItem);
 
         TaskRequestDTO taskRequest = apiScenarioRunService.getTaskRequest(IDGenerator.nextStr(), apiScenarioDetail.getId(), apiScenarioDetail.getProjectId(), ApiExecuteRunMode.SCHEDULE.name());
         TaskInfo taskInfo = taskRequest.getTaskInfo();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -481,7 +481,7 @@ public ExecTaskDetailDTO viewScenarioItemReport(String id) {
         return apiTaskReportDTO;
     }
 
-    private ApiScenarioReportDTO getScenarioReportDetail(String taskId, String taskItemId) {
+    private ApiScenarioReportDTO getScenarioReportDetail(String taskItemId, String taskId) {
         ExecTaskItem taskItem = execTaskItemMapper.selectByPrimaryKey(taskItemId);
         ApiScenarioReportDTO apiScenarioReportDTO = scenarioReportDetail(taskId);
         if (CollectionUtils.isNotEmpty(apiScenarioReportDTO.getChildren())) {

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/request/ApiDocShareModuleRequest.java
Patch:
@@ -16,4 +16,7 @@ public class ApiDocShareModuleRequest extends ApiModuleRequest {
 	@NotBlank(message = "{api_doc_share.id.not_blank}")
 	@Size(min = 1, max = 50, message = "{api_doc_share.id.length_range}")
 	private String shareId;
+
+	@Schema(description = "组织ID", requiredMode = Schema.RequiredMode.REQUIRED)
+	private String orgId;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDocShareLogService.java
Patch:
@@ -26,7 +26,7 @@ public class ApiDocShareLogService {
 	 * @return 日志
 	 */
 	public LogDTO addLog(ApiDocShareEditRequest request) {
-		LogDTO dto = new LogDTO(request.getProjectId(), null, null, null,OperationLogType.SHARE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION, request.getName());
+		LogDTO dto = new LogDTO(request.getProjectId(), null, null, null,OperationLogType.SHARE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION_SHARE, request.getName());
 		dto.setHistory(true);
 		dto.setMethod(HttpMethodConstants.POST.name());
 		dto.setOriginalValue(JSON.toJSONBytes(request));
@@ -40,7 +40,7 @@ public LogDTO addLog(ApiDocShareEditRequest request) {
 	 * @return 日志
 	 */
 	public LogDTO updateLog(ApiDocShareEditRequest request) {
-		LogDTO dto = new LogDTO(request.getProjectId(), null, null, null,OperationLogType.UPDATE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION, "【分享接口功能】" + request.getName());
+		LogDTO dto = new LogDTO(request.getProjectId(), null, null, null,OperationLogType.UPDATE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION_SHARE, request.getName());
 		dto.setHistory(true);
 		dto.setMethod(HttpMethodConstants.POST.name());
 		dto.setOriginalValue(JSON.toJSONBytes(request));
@@ -55,7 +55,7 @@ public LogDTO updateLog(ApiDocShareEditRequest request) {
 	 */
 	public LogDTO deleteLog(String id) {
 		ApiDocShare docShare = apiDocShareMapper.selectByPrimaryKey(id);
-		LogDTO dto = new LogDTO(docShare.getProjectId(), null, null, null,OperationLogType.DELETE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION, "【分享接口功能】" + docShare.getName());
+		LogDTO dto = new LogDTO(docShare.getProjectId(), null, null, null,OperationLogType.DELETE.name(), OperationLogModule.API_TEST_MANAGEMENT_DEFINITION_SHARE, docShare.getName());
 		dto.setHistory(true);
 		dto.setMethod(HttpMethodConstants.POST.name());
 		dto.setOriginalValue(JSON.toJSONBytes(docShare));

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -20,6 +20,7 @@ public class OperationLogModule {
     public static final String API_AUTOMATION_REPORT = "API_AUTOMATION_REPORT";
     // 接口管理
     public static final String API_TEST_MANAGEMENT_DEFINITION = "API_TEST_MANAGEMENT_DEFINITION";
+    public static final String API_TEST_MANAGEMENT_DEFINITION_SHARE = "API_TEST_MANAGEMENT_DEFINITION_SHARE";
     public static final String API_TEST_MANAGEMENT_MODULE = "API_TEST_MANAGEMENT_MODULE";
     public static final String API_TEST_MANAGEMENT_MOCK = "API_TEST_MANAGEMENT_MOCK";
     public static final String API_TEST_MANAGEMENT_CASE = "API_TEST_MANAGEMENT_CASE";

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDocShareController.java
Patch:
@@ -71,7 +71,7 @@ public ApiDocShare add(@Validated({Created.class}) @RequestBody ApiDocShareEditR
 	@CheckOwner(resourceId = "#request.getId()", resourceType = "api_doc_share")
 	@Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#request)", msClass = ApiDocShareLogService.class)
 	public ApiDocShare update(@Validated({Updated.class}) @RequestBody ApiDocShareEditRequest request) {
-		return apiDocShareService.update(request);
+		return apiDocShareService.update(request, SessionUtils.getUserId());
 	}
 
 	@GetMapping("/delete/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDocShareDTO.java
Patch:
@@ -20,4 +20,7 @@ public class ApiDocShareDTO extends ApiDocShare {
 
 	@Schema(title = "创建人")
 	private String createUserName;
+
+	@Schema(title = "更新人")
+	private String updateUserName;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -175,8 +175,7 @@ public void executeNextCollection(String collectionQueueId) {
         ExecutionQueue collectionQueue = apiExecutionQueueService.getQueue(collectionQueueId);
         if (collectionQueue == null) {
             // 失败停止，或者执行完成，更新任务状态
-            apiBatchRunBaseService.updateTaskStatus(collectionQueueId);
-            apiBatchRunBaseService.removeRunningTaskCache(collectionQueueId);
+            apiBatchRunBaseService.updateTaskCompletedStatus(collectionQueueId);
             return;
         }
         String userId = collectionQueue.getUserId();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -200,8 +200,7 @@ public void executeNextCollection(String collectionQueueId) {
         ExecutionQueue collectionQueue = apiExecutionQueueService.getQueue(collectionQueueId);
         if (collectionQueue == null) {
             // 失败停止，或者执行完成，更新任务状态
-            apiBatchRunBaseService.updateTaskStatus(collectionQueueId);
-            apiBatchRunBaseService.removeRunningTaskCache(collectionQueueId);
+            apiBatchRunBaseService.updateTaskCompletedStatus(collectionQueueId);
             return;
         }
         String userId = collectionQueue.getUserId();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -687,8 +687,7 @@ public void finishTaskAndSummaryTestPlanReport(String taskId, String reportId, b
         TestPlanReport testPlanReport = testPlanReportMapper.selectByPrimaryKey(reportId);
         if (StringUtils.equals(testPlanReport.getParentId(), reportId) && StringUtils.isNotBlank(taskId)) {
             // 执行完成，更新任务状态
-            apiBatchRunBaseService.updateTaskStatus(taskId);
-            apiBatchRunBaseService.removeRunningTaskCache(taskId);
+            apiBatchRunBaseService.updateTaskCompletedStatus(taskId);
         }
         testPlanExecuteSupportService.summaryTestPlanReport(reportId, isGroupReport, isStop);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioRunService.java
Patch:
@@ -410,7 +410,7 @@ public TaskRequestDTO debug(ApiScenarioDebugRequest request) {
         msScenario.setProjectId(request.getProjectId());
         msScenario.setResourceId(request.getId());
 
-        if (!hasSave) {
+        if (hasSave) {
             List<ApiScenarioCsv> dbCsv = apiScenarioService.getApiScenarioCsv(apiScenario.getId());
             List<CsvVariable> csvVariables = apiScenarioService.getCsvVariables(msScenario.getScenarioConfig());
             apiScenarioService.handleRefUpgradeFile(csvVariables, dbCsv);

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDocShareDTO.java
Patch:
@@ -18,9 +18,6 @@ public class ApiDocShareDTO extends ApiDocShare {
 	@Schema(title = "分享接口数量")
 	private Integer apiShareNum;
 
-	@Schema(title = "截止日期")
-	private Long deadline;
-
 	@Schema(title = "创建人")
 	private String createUserName;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/request/ApiDocShareEditRequest.java
Patch:
@@ -38,8 +38,8 @@ public class ApiDocShareEditRequest implements Serializable {
 	@Schema(title = "范围匹配值;eg: 选中路径范围时, 该值作为路径匹配")
 	private String rangeMatchVal;
 
-	@Schema(title = "失效时间值")
-	private Integer invalidTime;
+	@Schema(title = "截止时间值")
+	private Long invalidTime;
 
 	@Schema(title = "失效时间单位;小时(HOUR)、天(DAY)、月(MONTH)、年(YEAR)")
 	private String invalidUnit;

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDocShareControllerTests.java
Patch:
@@ -69,7 +69,7 @@ public void addOrUpdate() throws Exception {
 		request.setPassword(StringUtils.EMPTY);
 		request.setApiRange("MODULE");
 		request.setRangeMatchVal("module-1");
-		request.setInvalidTime(1);
+		request.setInvalidTime(System.currentTimeMillis());
 		request.setInvalidUnit("HOUR");
 		this.requestPostWithOk(UPDATE, request);
 		this.requestPostWithOk(CHECK, checkRequest);
@@ -99,7 +99,7 @@ public void page() throws Exception {
 		request.setAllowExport(false);
 		this.requestPost(ADD, request);
 		request.setName("share-3");
-		request.setInvalidTime(1);
+		request.setInvalidTime(System.currentTimeMillis());
 		request.setInvalidUnit("HOUR");
 		request.setApiRange("MODULE");
 		request.setRangeMatchVal("module-1");

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskhub/ResourcePoolStatusDTO.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.system.dto.taskhub;
 
 import io.swagger.v3.oas.annotations.media.Schema;
+import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -12,6 +13,7 @@
  */
 @Data
 @EqualsAndHashCode(callSuper = false)
+@AllArgsConstructor
 public class ResourcePoolStatusDTO implements Serializable {
 
     @Serial
@@ -22,4 +24,5 @@ public class ResourcePoolStatusDTO implements Serializable {
 
     @Schema(description = "状态 (true 正常 false 异常)")
     private boolean status;
+
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.api.dto.ReferenceRequest;
 import io.metersphere.api.dto.definition.*;
 import io.metersphere.api.dto.request.ApiTransferRequest;
+import io.metersphere.api.service.ApiBatchRunBaseService;
 import io.metersphere.api.service.ApiFileResourceService;
 import io.metersphere.api.service.definition.*;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
@@ -36,6 +37,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
+import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
@@ -300,6 +302,7 @@ public TaskRequestDTO run(@Validated @RequestBody ApiCaseRunRequest request) {
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "api_test_case")
     public void batchRun(@Validated @RequestBody ApiTestCaseBatchRunRequest request) {
+        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         apiTestCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioBatchOperationController.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.scenario.ApiScenarioBatchEditRequest;
 import io.metersphere.api.dto.scenario.ApiScenarioBatchRequest;
 import io.metersphere.api.dto.scenario.ApiScenarioBatchRunRequest;
+import io.metersphere.api.service.ApiBatchRunBaseService;
 import io.metersphere.api.service.ApiValidateService;
 import io.metersphere.api.service.scenario.ApiScenarioBatchRunService;
 import io.metersphere.api.service.scenario.ApiScenarioNoticeService;
@@ -21,6 +22,7 @@
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
+import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
@@ -99,6 +101,7 @@ public ApiScenarioBatchOperationResponse batchCopy(@Validated @RequestBody ApiSc
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
     public void batchRun(@Validated @RequestBody ApiScenarioBatchRunRequest request) {
         apiValidateService.validateApiMenuInProject(request.getProjectId(), ApiResource.PROJECT.name());
+        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         apiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -159,7 +159,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
         if (runModeConfig.isIntegratedReport()) {
             execTask.setTaskName(runModeConfig.getCollectionReport().getReportName());
         } else {
-            execTask.setTaskName(Translator.get("api_batch_task_name"));
+            execTask.setTaskName(Translator.get("api_batch_task_name", ApiBatchRunBaseService.getLocale()));
         }
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -243,7 +243,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
         if (runModeConfig.isIntegratedReport()) {
             execTask.setTaskName(runModeConfig.getCollectionReport().getReportName());
         } else {
-            execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
+            execTask.setTaskName(Translator.get("api_scenario_batch_task_name", ApiBatchRunBaseService.getLocale()));
         }
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -4,6 +4,7 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.api.dto.definition.ApiReportDTO;
 import io.metersphere.api.dto.definition.ApiReportDetailDTO;
+import io.metersphere.api.service.ApiBatchRunBaseService;
 import io.metersphere.api.service.definition.ApiReportService;
 import io.metersphere.bug.domain.Bug;
 import io.metersphere.bug.dto.request.BugEditRequest;
@@ -39,6 +40,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
+import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
@@ -148,6 +150,7 @@ public TaskRequestDTO run(@PathVariable String id,
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_case")
     public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest request) {
+        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         testPlanApiCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -4,6 +4,7 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.api.dto.scenario.ApiScenarioReportDTO;
 import io.metersphere.api.dto.scenario.ApiScenarioReportDetailDTO;
+import io.metersphere.api.service.ApiBatchRunBaseService;
 import io.metersphere.api.service.scenario.ApiScenarioReportService;
 import io.metersphere.bug.domain.Bug;
 import io.metersphere.bug.dto.request.BugEditRequest;
@@ -36,6 +37,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
+import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
@@ -98,6 +100,7 @@ public TaskRequestDTO run(@PathVariable String id, @RequestParam(required = fals
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
     @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_scenario")
     public void batchRun(@Validated @RequestBody TestPlanApiScenarioBatchRunRequest request) {
+        ApiBatchRunBaseService.setLocale(LocaleContextHolder.getLocale());
         testPlanApiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -308,7 +308,7 @@ private Map<String, String> getResourceTaskItemMap(String taskId, List<TestPlanA
     private ExecTask initExecTask(int caseSize, Project project, String userId) {
         ExecTask execTask = apiCommonService.newExecTask(project.getId(), userId);
         execTask.setCaseCount(Long.valueOf(caseSize));
-        execTask.setTaskName(Translator.get("api_batch_task_name"));
+        execTask.setTaskName(Translator.get("api_batch_task_name", ApiBatchRunBaseService.getLocale()));
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.TEST_PLAN_API_CASE_BATCH.name());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -308,7 +308,7 @@ private Map<String, String> getResourceTaskItemMap(String taskId, List<TestPlanA
     private ExecTask initExecTask(int caseSize, Project project, String userId) {
         ExecTask execTask = apiCommonService.newExecTask(project.getId(), userId);
         execTask.setCaseCount(Long.valueOf(caseSize));
-        execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
+        execTask.setTaskName(Translator.get("api_scenario_batch_task_name", ApiBatchRunBaseService.getLocale()));
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.TEST_PLAN_API_SCENARIO_BATCH.name());

File: backend/services/system-setting/src/main/java/io/metersphere/system/interceptor/BaseConditionFilterAspect.java
Patch:
@@ -66,7 +66,8 @@ private void parseBaseCondition(BaseCondition baseCondition) {
         }
         List<CombineCondition> validConditions = getValidConditions(combineSearch.getConditions());
         validConditions.forEach(item -> {
-            if (item.getValue() != null && item.getValue() instanceof String strValue) {
+            if (item.getValue() != null && item.getValue() instanceof String strValue
+                    && !StringUtils.equals(item.getOperator(), CombineCondition.CombineConditionOperator.EQUALS.name())) {
                 // 转义 mysql 的特殊字符
                 item.setValue(BaseCondition.transferKeyword(strValue));
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -164,6 +164,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.API_CASE_BATCH.name());
+        execTask.setIntegrated(runModeConfig.getIntegratedReport());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -248,6 +248,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.API_SCENARIO_BATCH.name());
+        execTask.setIntegrated(runModeConfig.isIntegratedReport());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -311,7 +311,7 @@ private ExecTask initExecTask(int caseSize, Project project, String userId) {
         execTask.setTaskName(Translator.get("api_batch_task_name"));
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
-        execTask.setTaskType(ExecTaskType.TEST_PLAN_API_CASE.name());
+        execTask.setTaskType(ExecTaskType.TEST_PLAN_API_CASE_BATCH.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -311,7 +311,7 @@ private ExecTask initExecTask(int caseSize, Project project, String userId) {
         execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
-        execTask.setTaskType(ExecTaskType.TEST_PLAN_API_SCENARIO.name());
+        execTask.setTaskType(ExecTaskType.TEST_PLAN_API_SCENARIO_BATCH.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -233,6 +233,7 @@ public TaskRequestDTO execute(TaskRequestDTO taskRequest) {
             if (isK8SResourcePool) {
                 TestResourceDTO testResourceDTO = new TestResourceDTO();
                 BeanUtils.copyBean(testResourceDTO, testResourcePoolDTO.getTestResourceReturnDTO());
+                testResourceDTO.setId(testResourcePoolDTO.getId());
                 taskInfo.setPerTaskSize(testResourceDTO.getPodThreads());
                 taskInfo.setPoolSize(testResourceDTO.getConcurrentNumber());
                 LogUtils.info("开始发送请求【 {}_{} 】到 K8S 资源池执行", taskItem.getReportId(), taskItem.getResourceId());
@@ -315,6 +316,8 @@ public void batchExecute(TaskBatchRequestDTO taskRequest) {
         if (isK8SResourcePool) {
             TestResourceDTO testResourceDTO = new TestResourceDTO();
             BeanUtils.copyBean(testResourceDTO, testResourcePool.getTestResourceReturnDTO());
+            testResourceDTO.setId(testResourcePool.getId());
+
             taskInfo.setPoolSize(testResourceDTO.getConcurrentNumber());
             taskInfo.setPerTaskSize(testResourceDTO.getPodThreads());
             try {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsFormDataBodyConverter.java
Patch:
@@ -57,7 +57,7 @@ private HTTPFileArg[] getHttpFileArg(List<FormDataKV> fileFormValues) {
                     HTTPFileArg fileArg = getHttpFileArg(file);
                     fileArg.setParamName(paramName);
                     String mimetype = formDataKV.getContentType();
-                    if (StringUtils.isBlank(mimetype)) {
+                    if (StringUtils.isNotBlank(mimetype)) {
                         fileArg.setMimeType(mimetype);
                     }
                     list.add(fileArg);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -162,7 +162,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
             execTask.setTaskName(Translator.get("api_batch_task_name"));
         }
         execTask.setOrganizationId(project.getOrganizationId());
-        execTask.setTriggerMode(TaskTriggerMode.MANUAL.name());
+        execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.API_CASE_BATCH.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -246,7 +246,7 @@ private ExecTask initExecTask(List<String> ids, ApiRunModeConfigDTO runModeConfi
             execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
         }
         execTask.setOrganizationId(project.getOrganizationId());
-        execTask.setTriggerMode(TaskTriggerMode.MANUAL.name());
+        execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.API_SCENARIO_BATCH.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -310,7 +310,7 @@ private ExecTask initExecTask(int caseSize, Project project, String userId) {
         execTask.setCaseCount(Long.valueOf(caseSize));
         execTask.setTaskName(Translator.get("api_batch_task_name"));
         execTask.setOrganizationId(project.getOrganizationId());
-        execTask.setTriggerMode(TaskTriggerMode.MANUAL.name());
+        execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.TEST_PLAN_API_CASE.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -310,7 +310,7 @@ private ExecTask initExecTask(int caseSize, Project project, String userId) {
         execTask.setCaseCount(Long.valueOf(caseSize));
         execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
         execTask.setOrganizationId(project.getOrganizationId());
-        execTask.setTriggerMode(TaskTriggerMode.MANUAL.name());
+        execTask.setTriggerMode(TaskTriggerMode.BATCH.name());
         execTask.setTaskType(ExecTaskType.TEST_PLAN_API_SCENARIO.name());
         baseTaskHubService.insertExecTask(execTask);
         return execTask;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -518,9 +518,6 @@ private void batchUpdateEnvironment(ApiTestCaseExample example, ApiTestCase upda
     private void batchUpdateTags(ApiTestCaseExample example, ApiTestCase updateCase,
                                  ApiCaseBatchEditRequest request, List<String> ids,
                                  ApiTestCaseMapper mapper) {
-        if (CollectionUtils.isEmpty(request.getTags())) {
-            throw new MSException(Translator.get("tags_is_null"));
-        }
         if (request.isAppend()) {
             Map<String, ApiTestCase> caseMap = extApiTestCaseMapper.getTagsByIds(ids, false)
                     .stream()

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -312,9 +312,6 @@ private void batchUpdateEnvironment(ApiScenarioExample example, ApiScenario upda
     private void batchUpdateTags(ApiScenarioExample example, ApiScenario updateScenario,
                                  ApiScenarioBatchEditRequest request, List<String> ids,
                                  ApiScenarioMapper mapper) {
-        if (CollectionUtils.isEmpty(request.getTags())) {
-            throw new MSException(Translator.get("tags_is_null"));
-        }
         if (request.isAppend()) {
             Map<String, ApiScenario> scenarioMap = extApiScenarioMapper.getTagsByIds(ids, false)
                     .stream()

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskhub/TaskHubDTO.java
Patch:
@@ -21,4 +21,7 @@ public class TaskHubDTO extends ExecTask {
     @Schema(description = "操作人名称")
     private String createUserName;
 
+    @Schema(description = "报告ID")
+    private String reportId;
+
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -233,6 +233,7 @@ public TaskRequestDTO execute(TaskRequestDTO taskRequest) {
             if (isK8SResourcePool) {
                 TestResourceDTO testResourceDTO = new TestResourceDTO();
                 BeanUtils.copyBean(testResourceDTO, testResourcePoolDTO.getTestResourceReturnDTO());
+                taskInfo.setPerTaskSize(testResourceDTO.getPodThreads());
                 taskInfo.setPoolSize(testResourceDTO.getConcurrentNumber());
                 LogUtils.info("开始发送请求【 {}_{} 】到 K8S 资源池执行", taskItem.getReportId(), taskItem.getResourceId());
                 if (isDebugMode) {
@@ -315,6 +316,7 @@ public void batchExecute(TaskBatchRequestDTO taskRequest) {
             TestResourceDTO testResourceDTO = new TestResourceDTO();
             BeanUtils.copyBean(testResourceDTO, testResourcePool.getTestResourceReturnDTO());
             taskInfo.setPoolSize(testResourceDTO.getConcurrentNumber());
+            taskInfo.setPerTaskSize(testResourceDTO.getPodThreads());
             try {
                 EngineFactory.batchRunApi(taskRequest, testResourceDTO);
             } catch (Exception e) {
@@ -337,6 +339,7 @@ public void batchExecute(TaskBatchRequestDTO taskRequest) {
                 } else {
                     distributeTask = distributeTasks.get(nodeIndex);
                 }
+                taskInfo.setPerTaskSize(Optional.ofNullable(nodesList.get(nodeIndex).getSingleTaskConcurrentNumber()).orElse(3));
                 distributeTask.getTaskInfo().setPoolSize(nodesList.get(nodeIndex).getConcurrentNumber());
                 distributeTask.getTaskItems().add(taskRequest.getTaskItems().get(i));
             }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/PermissionConstants.java
Patch:
@@ -264,6 +264,7 @@ public class PermissionConstants {
     public static final String PROJECT_API_DEFINITION_IMPORT = "PROJECT_API_DEFINITION:READ+IMPORT";
     public static final String PROJECT_API_DEFINITION_EXPORT = "PROJECT_API_DEFINITION:READ+EXPORT";
     public static final String PROJECT_API_DEFINITION_EXECUTE = "PROJECT_API_DEFINITION:READ+EXECUTE";
+    public static final String PROJECT_API_DEFINITION_SHARE = "PROJECT_API_DEFINITION:READ+SHARE";
     public static final String PROJECT_API_DEFINITION_CASE_READ = "PROJECT_API_DEFINITION_CASE:READ";
     public static final String PROJECT_API_DEFINITION_CASE_ADD = "PROJECT_API_DEFINITION_CASE:READ+ADD";
     public static final String PROJECT_API_DEFINITION_CASE_UPDATE = "PROJECT_API_DEFINITION_CASE:READ+UPDATE";

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -207,7 +207,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
         ApiTestCase apiTestCase = apiTestCaseMapper.selectByPrimaryKey(testPlanReportApiCase.getApiCaseId());
 
         // 独立报告，执行到当前任务时初始化报告
-        String reportId = initApiReport(Map.of(apiTestCase.getId(), queueDetail.getTaskItemId()), runModeConfig, List.of(testPlanReportApiCase), Map.of(apiTestCase.getId(), apiTestCase), queue.getUserId()).get(resourceId);
+        String reportId = initApiReport(Map.of(testPlanReportApiCase.getId(), queueDetail.getTaskItemId()), runModeConfig, List.of(testPlanReportApiCase), Map.of(apiTestCase.getId(), apiTestCase), queue.getUserId()).get(resourceId);
         TaskRequestDTO taskRequest = testPlanApiCaseBatchRunService.getTaskRequestDTO(reportId, testPlanReportApiCase.getId(), apiTestCase, runModeConfig);
         taskRequest.getTaskInfo().setTaskId(queue.getTaskId());
         taskRequest.getTaskInfo().setResourceType(ApiExecuteResourceType.PLAN_RUN_API_CASE.name());
@@ -256,7 +256,7 @@ public Map<String, String> initApiReport(Map<String, String> resourceExecTaskIte
             // 创建报告和任务的关联关系
             ApiReportRelateTask apiReportRelateTask = new ApiReportRelateTask();
             apiReportRelateTask.setReportId(apiReport.getId());
-            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(apiReport.getId()));
+            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(testPlanReportApiCase.getId()));
             apiReportRelateTasks.add(apiReportRelateTask);
         }
         apiReportService.insertApiReport(apiReports, apiTestCaseRecords, apiReportRelateTasks);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -202,7 +202,7 @@ public Map<String, String> initScenarioReport(Map<String, String> resourceExecTa
             // 创建报告和任务的关联关系
             ApiReportRelateTask apiReportRelateTask = new ApiReportRelateTask();
             apiReportRelateTask.setReportId(apiScenario.getId());
-            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(apiScenario.getId()));
+            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(testPlanReportApiScenario.getId()));
             apiReportRelateTasks.add(apiReportRelateTask);
         }
         apiScenarioReportService.insertApiScenarioReport(apiScenarioReports, apiScenarioRecords, apiReportRelateTasks);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -400,7 +400,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
         TestPlan testPlan = testPlanMapper.selectByPrimaryKey(testPlanId);
 
         // 独立报告，执行到当前任务时初始化报告
-        String reportId = initApiReport(Map.of(apiTestCase.getId(), queueDetail.getTaskItemId()), runModeConfig, List.of(BeanUtils.copyBean(new TestPlanApiCaseBatchRunDTO(), testPlanApiCase)),
+        String reportId = initApiReport(Map.of(testPlanApiCase.getId(), queueDetail.getTaskItemId()), runModeConfig, List.of(BeanUtils.copyBean(new TestPlanApiCaseBatchRunDTO(), testPlanApiCase)),
                 testPlan.getProjectId(), queue.getUserId()).get(testPlanApiCase.getId());
         TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, testPlanApiCase.getId(), apiTestCase, runModeConfig);
         taskRequest.getTaskInfo().setTaskId(queue.getTaskId());
@@ -464,7 +464,7 @@ public Map<String, String> initApiReport(Map<String, String> resourceExecTaskIte
             // 创建报告和任务的关联关系
             ApiReportRelateTask apiReportRelateTask = new ApiReportRelateTask();
             apiReportRelateTask.setReportId(apiReport.getId());
-            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(apiReport.getId()));
+            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(testPlanApiCase.getId()));
             apiReportRelateTasks.add(apiReportRelateTask);
         }
         apiReportService.insertApiReport(apiReports, apiTestCaseRecords, apiReportRelateTasks);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -308,7 +308,7 @@ private Map<String, String> getResourceTaskItemMap(String taskId, List<TestPlanA
     private ExecTask initExecTask(int caseSize, Project project, String userId) {
         ExecTask execTask = apiCommonService.newExecTask(project.getId(), userId);
         execTask.setCaseCount(Long.valueOf(caseSize));
-        execTask.setTaskName(Translator.get("api_batch_task_name"));
+        execTask.setTaskName(Translator.get("api_scenario_batch_task_name"));
         execTask.setOrganizationId(project.getOrganizationId());
         execTask.setTriggerMode(TaskTriggerMode.MANUAL.name());
         execTask.setTaskType(ExecTaskType.TEST_PLAN_API_SCENARIO.name());
@@ -350,7 +350,7 @@ public Map<String, String> initReport(Map<String, String> resourceExecTaskItemMa
             // 创建报告和任务的关联关系
             ApiReportRelateTask apiReportRelateTask = new ApiReportRelateTask();
             apiReportRelateTask.setReportId(apiScenarioReport.getId());
-            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(apiScenarioReport.getId()));
+            apiReportRelateTask.setTaskResourceId(resourceExecTaskItemMap.get(testPlanApiScenario.getId()));
             apiReportRelateTasks.add(apiReportRelateTask);
         }
         apiScenarioReportService.insertApiScenarioReport(apiScenarioReports, apiScenarioRecords, apiReportRelateTasks);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -675,7 +675,7 @@ private void queueExecuteFinish(TestPlanExecutionQueue queue) {
 
     public void finishTaskAndSummaryTestPlanReport(String taskId, String reportId, boolean isGroupReport, boolean isStop) {
         TestPlanReport testPlanReport = testPlanReportMapper.selectByPrimaryKey(reportId);
-        if (StringUtils.isBlank(testPlanReport.getParentId()) && StringUtils.isNotBlank(taskId)) {
+        if (StringUtils.equals(testPlanReport.getParentId(), reportId) && StringUtils.isNotBlank(taskId)) {
             // 执行完成，更新任务状态
             apiBatchRunBaseService.updateTaskStatus(taskId);
             apiBatchRunBaseService.removeRunningTaskCache(taskId);

File: backend/services/api-test/src/main/java/io/metersphere/api/listener/MessageListener.java
Patch:
@@ -87,7 +87,8 @@ public void messageConsume(ConsumerRecord<?, String> record) {
 
     /**
      * 执行下一个测试集
-     * @param dto
+     * @param
+     *
      */
     private void executeNextCollection(ApiNoticeDTO dto) {
         if (StringUtils.isBlank(dto.getParentQueueId())) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/xstream/MsSaveService.java
Patch:
@@ -249,6 +249,9 @@ public static Properties loadProperties() throws IOException {
     public static Properties loadPluginAliasProperties(ClassLoader classLoader) throws IOException {
         Properties nameMap = new Properties();
         InputStream resourceAsStream = classLoader.getResourceAsStream(JMETER_ELEMENT_ALIAS_PROPERTIES);
+        if (resourceAsStream == null) {
+            return nameMap;
+        }
         nameMap.load(resourceAsStream);
         nameMap.forEach((k, v) -> pluginAliasMap.put((String) k, (String) v));
         return nameMap;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -81,5 +81,5 @@ public interface ExtTestPlanApiCaseMapper {
 
     List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 
-    Integer countByPlanId(@Param("planId") String planId);
+    Integer countByPlanIds(@Param("planIds") List<String> planIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -77,5 +77,5 @@ public interface ExtTestPlanApiScenarioMapper {
 
     List<TestPlanApiScenarioBatchRunDTO> getBatchRunInfoByIds(@Param("ids") List<String> ids);
 
-    Integer countByPlanId(@Param("planId") String planId);
+    Integer countByPlanIds(@Param("planIds") List<String> planIds);
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/PermissionConstants.java
Patch:
@@ -152,6 +152,8 @@ public class PermissionConstants {
     public static final String PROJECT_APPLICATION_PERFORMANCE_TEST_UPDATE = "PROJECT_APPLICATION_PERFORMANCE_TEST:UPDATE";
     public static final String PROJECT_APPLICATION_API_READ = "PROJECT_APPLICATION_API:READ";
     public static final String PROJECT_APPLICATION_API_UPDATE = "PROJECT_APPLICATION_API:UPDATE";
+    public static final String PROJECT_APPLICATION_TASK_READ = "PROJECT_APPLICATION_TASK:READ";
+    public static final String PROJECT_APPLICATION_TASK_UPDATE = "PROJECT_APPLICATION_TASK:UPDATE";
     public static final String PROJECT_APPLICATION_CASE_READ = "PROJECT_APPLICATION_CASE:READ";
     public static final String PROJECT_APPLICATION_CASE_UPDATE = "PROJECT_APPLICATION_CASE:UPDATE";
     public static final String PROJECT_APPLICATION_BUG_READ = "PROJECT_APPLICATION_BUG:READ";

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/dataimport/Swagger3ParserApiDefinition.java
Patch:
@@ -769,7 +769,7 @@ private JsonSchemaItem parseNumber(NumberSchema numberSchema) {
 
     private JsonSchemaItem parseBoolean(BooleanSchema booleanSchema) {
         JsonSchemaItem jsonSchemaItem = parseSchemaItem(booleanSchema);
-        jsonSchemaItem.setType(PropertyConstant.NUMBER);
+        jsonSchemaItem.setType(PropertyConstant.BOOLEAN);
         return jsonSchemaItem;
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDefinitionMapper.java
Patch:
@@ -102,5 +102,5 @@ public interface ExtApiDefinitionMapper {
 
     List<ApiDefinition> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("protocols") List<String> protocols);
 
-    Long countByShareParam(@Param("projectId") String projectId, @Param("condition") String condition);
+    List<String> getIdsByShareParam(@Param("projectId") String projectId, @Param("condition") String condition);
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/CommonConstants.java
Patch:
@@ -6,4 +6,5 @@
  */
 public class CommonConstants {
     public static final String DEFAULT_NULL_VALUE = "NONE";
+    public static final String RUNNING_TASK_PREFIX = "RUNNING_TASK:";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -435,6 +435,7 @@ public TaskBatchRequestDTO getTaskBatchRequestDTO(String projectId, ApiRunModeCo
 
     public TaskInfo getTaskInfo(String projectId, ApiRunModeConfigDTO runModeConfig) {
         TaskInfo taskInfo = apiTestCaseService.getTaskInfo(projectId, ApiExecuteRunMode.RUN.name());
+        taskInfo.setBatch(true);
         return apiBatchRunBaseService.setBatchRunTaskInfoParam(runModeConfig, taskInfo);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -392,6 +392,7 @@ private TaskBatchRequestDTO getTaskBatchRequestDTO(String projectId, ApiRunModeC
 
     public TaskInfo getTaskInfo(String projectId, ApiRunModeConfigDTO runModeConfig) {
         TaskInfo taskInfo = apiScenarioRunService.getTaskInfo(projectId, ApiExecuteRunMode.RUN.name());
+        taskInfo.setBatch(true);
         return apiBatchRunBaseService.setBatchRunTaskInfoParam(runModeConfig, taskInfo);
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -403,6 +403,7 @@ private TaskBatchRequestDTO getTaskBatchRequestDTO(String projectId, ApiRunModeC
 
     private TaskInfo getTaskInfo(String projectId, ApiRunModeConfigDTO runModeConfig) {
         TaskInfo taskInfo = apiTestCaseBatchRunService.getTaskInfo(projectId, runModeConfig);
+        taskInfo.setBatch(true);
         taskInfo.setResourceType(ApiExecuteResourceType.TEST_PLAN_API_CASE.name());
         return taskInfo;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -391,6 +391,7 @@ public TaskBatchRequestDTO getTaskBatchRequestDTO(String projectId, ApiRunModeCo
 
     private TaskInfo getTaskInfo(String projectId, ApiRunModeConfigDTO runModeConfig) {
         TaskInfo taskInfo = apiScenarioBatchRunService.getTaskInfo(projectId, runModeConfig);
+        taskInfo.setBatch(true);
         taskInfo.setResourceType(ApiExecuteResourceType.TEST_PLAN_API_SCENARIO.name());
         return taskInfo;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/pool/TestResourcePoolDTO.java
Patch:
@@ -19,7 +19,7 @@ public class TestResourcePoolDTO extends TestResourcePool {
     private int maxConcurrentNumber;
 
     @Schema(description =  "剩余并发数")
-    private Boolean lastConcurrentNumber;;
+    private int lastConcurrentNumber;;
 
     @Schema(description =  "组织名称集合")
     private List<String> orgNames;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TestResourcePoolService.java
Patch:
@@ -78,7 +78,7 @@ public void checkAndSaveOrgRelation(TestResourcePool testResourcePool, String id
     }
 
     private static boolean checkNodeOrK8s(TestResourceDTO testResourceDTO, String type) {
-        if (StringUtils.equalsIgnoreCase(type, ResourcePoolTypeEnum.NODE.name())) {
+        if (StringUtils.equalsIgnoreCase(type, ResourcePoolTypeEnum.NODE.getName())) {
             NodeResourcePoolService resourcePoolService = CommonBeanFactory.getBean(NodeResourcePoolService.class);
             if (resourcePoolService != null) {
                 return resourcePoolService.validate(testResourceDTO);
@@ -111,7 +111,7 @@ public void updateTestResourcePool(TestResourcePoolDTO testResourcePool) {
         if (CollectionUtils.isEmpty(testResourceDTO.getNodesList())) {
             testResourceDTO.setNodesList(new ArrayList<>());
         }
-        if (StringUtils.equalsIgnoreCase(testResourcePool.getType(), ResourcePoolTypeEnum.NODE.name())){
+        if (StringUtils.equalsIgnoreCase(testResourcePool.getType(), ResourcePoolTypeEnum.NODE.getName())){
             TestResourcePoolValidateService testResourcePoolValidateService = CommonBeanFactory.getBean(TestResourcePoolValidateService.class);
             if (testResourcePoolValidateService != null) {
                 testResourcePoolValidateService.validateNodeList(testResourceDTO.getNodesList());
@@ -155,7 +155,7 @@ public List<TestResourcePoolDTO> listResourcePools(QueryResourcePoolRequest requ
                 testResourcePoolDTO.setOrgNames(orgNameList);
             }
             //获取最大并发
-            if (StringUtils.equalsIgnoreCase(pool.getType(),ResourcePoolTypeEnum.NODE.toString())) {
+            if (StringUtils.equalsIgnoreCase(pool.getType(),ResourcePoolTypeEnum.NODE.getName())) {
                 int concurrentNumber = 0;
                 for (TestResourceNodeDTO testResourceNodeDTO : testResourceDTO.getNodesList()) {
                     concurrentNumber = concurrentNumber+testResourceNodeDTO.getConcurrentNumber();

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/CustomFunctionController.java
Patch:
@@ -65,7 +65,7 @@ public CustomFuncColumnsOptionDTO getColumnsOption(@PathVariable String projectI
     @RequiresPermissions(PermissionConstants.PROJECT_CUSTOM_FUNCTION_READ)
     @CheckOwner(resourceId = "#id", resourceType = "custom_function")
     public CustomFunctionDTO get(@PathVariable String id) {
-        return customFunctionService.get(id);
+        return customFunctionService.getWithCheck(id);
     }
 
     @PostMapping("/add")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteResourceService.java
Patch:
@@ -57,9 +57,9 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
             // 非调试执行，更新报告状态
             switch (apiExecuteResourceType) {
                 case API_SCENARIO, TEST_PLAN_API_SCENARIO, PLAN_RUN_API_SCENARIO ->
-                        apiScenarioReportService.updateReportStatus(reportId, ExecStatus.RUNNING.name());
+                        apiScenarioReportService.updateReportRunningStatus(reportId);
                 case API_CASE, TEST_PLAN_API_CASE, PLAN_RUN_API_CASE ->
-                        apiReportService.updateReportStatus(reportId, ExecStatus.RUNNING.name());
+                        apiReportService.updateReportRunningStatus(reportId);
                 default -> throw new MSException("不支持的资源类型: " + request.getResourceType());
             }
         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -940,7 +940,9 @@ public List<OptionDTO> getUserStatus(String reviewId, String caseId) {
         }
         if (hasReReview.get() && reReviewTime[0] >= createTime[0]) {
             for (OptionDTO optionDTO : optionDTOS) {
-                optionDTO.setName(FunctionalCaseReviewStatus.RE_REVIEWED.toString());
+                if (!StringUtils.equalsIgnoreCase(optionDTO.getName(), FunctionalCaseReviewStatus.UN_REVIEWED.toString()) ) {
+                    optionDTO.setName(FunctionalCaseReviewStatus.RE_REVIEWED.toString());
+                }
             }
         }
         return optionDTOS;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -341,6 +341,7 @@ private void executeByTestPlanCollection(TestPlanExecutionQueue executionQueue)
         TestPlanCollection parentCollection = testPlanCollectionMapper.selectByPrimaryKey(executionQueue.getSourceID());
         TestPlanCollectionExample example = new TestPlanCollectionExample();
         example.createCriteria().andParentIdEqualTo(executionQueue.getSourceID());
+        example.setOrderByClause("pos asc");
         List<TestPlanCollection> childrenList = testPlanCollectionMapper.selectByExample(example);
 
         int pos = 0;

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -320,15 +320,15 @@ public String newExport(@RequestBody ApiDefinitionBatchExportRequest request, @P
 
     @GetMapping("/stop/{taskId}")
     @Operation(summary = "接口测试-接口管理-导出-停止导出")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_EXPORT)
+    @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_EXPORT)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public void caseStopExport(@PathVariable String taskId) {
         apiDefinitionExportService.stopExport(taskId, SessionUtils.getUserId());
     }
 
     @GetMapping(value = "/download/file/{projectId}/{fileId}")
     @Operation(summary = "接口测试-接口管理-下载文件")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_EXPORT)
+    @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_EXPORT)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public void downloadImgById(@PathVariable String projectId, @PathVariable String fileId, HttpServletResponse httpServletResponse) {
         apiDefinitionExportService.downloadFile(projectId, fileId, SessionUtils.getUserId(), httpServletResponse);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -1044,7 +1044,7 @@ public void doBatchSyncApiChange(ApiCaseBatchSyncRequest request, List<String> i
                 AbstractMsTestElement apiMsTestElement = getApiMsTestElement(apiDefinitionBlob);
                 ApiTestCaseBlob apiTestCaseBlob = apiTestCaseBlobMapper.selectByPrimaryKey(apiTestCase.getId());
                 AbstractMsTestElement apiTestCaseMsTestElement = getTestElement(apiTestCaseBlob);
-                boolean requestParamDifferent = HttpRequestParamDiffUtils.isRequestParamDiff(request.getSyncItems(), apiMsTestElement, apiTestCaseMsTestElement);
+                boolean requestParamDifferent = HttpRequestParamDiffUtils.isRequestParamDiff(apiMsTestElement, apiTestCaseMsTestElement);
                 if (requestParamDifferent) {
                     // 如果参数与定义不一致，则同步参数，并记录日志和发送通知
                     ApiTestCaseLogDTO originCase = BeanUtils.copyBean(new ApiTestCaseLogDTO(), apiTestCase);

File: backend/services/api-test/src/main/java/io/metersphere/api/curl/constants/CurlPatternConstants.java
Patch:
@@ -25,7 +25,8 @@ public interface CurlPatternConstants {
     /**
      * HTTP请求方法
      */
-    Pattern HTTP_METHOD_PATTERN = Pattern.compile("curl\\s+(?:[^\\s]+\\s+)*(-X|--request)\\s+'?(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD|CONNECT)'?");
+    Pattern HTTP_METHOD_PATTERN = Pattern.compile("curl\\s+(?:[^\\s]+\\s+)*(-X|--request|--head)\\s+'?(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD|CONNECT)'?");
+    Pattern HTTP_HEAD_METHOD_PATTERN = Pattern.compile("curl\\s+(?:[^\\s]+\\s+)*(--head|-I)\\s");
 
     /**
      * 默认HTTP请求方法

File: backend/services/api-test/src/main/java/io/metersphere/api/curl/handler/HttpMethodHandler.java
Patch:
@@ -26,9 +26,12 @@ public void handle(CurlEntity entity, String curl) {
     private CurlEntity.Method parseMethod(String curl) {
         Matcher matcher = CurlPatternConstants.HTTP_METHOD_PATTERN.matcher(curl);
         Matcher defaultMatcher = CurlPatternConstants.DEFAULT_HTTP_METHOD_PATTERN.matcher(curl);
+        Matcher headMatcher = CurlPatternConstants.HTTP_HEAD_METHOD_PATTERN.matcher(curl);
         if (matcher.find()) {
             String method = matcher.group(2);
             return CurlEntity.Method.valueOf(method.toUpperCase());
+        } else if (headMatcher.find()) {
+            return CurlEntity.Method.HEAD;
         } else if (defaultMatcher.find()) {
             //如果命令中包含 -d 或 --data，没有明确请求方法，默认为 POST
             return CurlEntity.Method.POST;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionExportService.java
Patch:
@@ -140,6 +140,8 @@ public void uploadFileToMinio(String fileType, File file, String fileId) throws
     }
 
     public String exportApiDefinitionZip(ApiDefinitionBatchExportRequest request, String exportType, String userId) throws Exception {
+        // 为避免客户端未及时开启ws，此处延迟1s
+        Thread.sleep(1000);
         File tmpDir = null;
         String fileType = "";
         try {
@@ -183,13 +185,13 @@ public String exportApiDefinitionZip(ApiDefinitionBatchExportRequest request, St
             ExportMsgDTO exportMsgDTO = new ExportMsgDTO(request.getFileId(), taskId, ids.size(), true, MsgType.EXEC_RESULT.name());
             ExportWebSocketHandler.sendMessageSingle(exportMsgDTO);
         } catch (Exception e) {
+            LogUtils.error(e);
             List<ExportTask> exportTasks = exportTaskManager.getExportTasks(request.getProjectId(), ExportConstants.ExportType.API_DEFINITION.name(), ExportConstants.ExportState.PREPARED.toString(), userId, null);
             if (CollectionUtils.isNotEmpty(exportTasks)) {
                 exportTaskManager.updateExportTask(ExportConstants.ExportState.ERROR.name(), exportTasks.getFirst().getId(), fileType);
             }
             ExportMsgDTO exportMsgDTO = new ExportMsgDTO(request.getFileId(), "", 0, false, MsgType.EXEC_RESULT.name());
             ExportWebSocketHandler.sendMessageSingle(exportMsgDTO);
-            LogUtils.error(e);
             throw new MSException(e);
         } finally {
             MsFileUtils.deleteDir(tmpDir.getPath());

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanCaseControllerTests.java
Patch:
@@ -209,6 +209,8 @@ public void testAssociateBugs() throws Exception {
         associateBugPageRequest.setPageSize(10);
         associateBugPageRequest.setTestPlanCaseId("relate_case_1");
         this.requestPostWithOkAndReturn("/test-plan/functional/case/has/associate/bug/page", associateBugPageRequest);
+        ids.add("bug_5");
+        this.requestPostWithOkAndReturn("/test-plan/functional/case/associate/bug", request);
 
 
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/debug/ApiDebugController.java
Patch:
@@ -129,7 +129,7 @@ public List<BaseTreeNode> options(@PathVariable String projectId) {
 
     @PostMapping("/import-curl")
     @Operation(summary = "接口测试-接口调试-导入curl")
-    @RequiresPermissions(PermissionConstants.PROJECT_API_DEBUG_IMPORT)
+    @RequiresPermissions(value = {PermissionConstants.PROJECT_API_DEBUG_READ, PermissionConstants.PROJECT_API_SCENARIO_ADD}, logical = Logical.OR)
     public CurlEntity importCurl(@RequestBody ApiImportCurlRequest request) {
         CurlEntity parse = CurlParserUtil.parse(request.getCurl());
         return parse;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemProjectController.java
Patch:
@@ -133,7 +133,6 @@ public Pager<List<UserExtendDTO>> getProjectMember(@Validated @RequestBody Proje
     @PostMapping("/add-member")
     @RequiresPermissions(PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_MEMBER_ADD)
     @Operation(summary = "系统设置-系统-组织与项目-项目-添加成员")
-    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
     public void addProjectMember(@Validated @RequestBody ProjectAddMemberRequest request) {
         systemProjectService.addMemberByProject(request, SessionUtils.getUserId());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -254,11 +254,9 @@ public void batchExportLog(@Validated @RequestBody TestPlanReportBatchRequest re
     @CheckOwner(resourceId = "#request.getReportId()", resourceType = "test_plan_report")
     @Parameter(name = "type", description = "用例类型", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED), example = "functional, api, scenario")
     public Pager<List<TestPlanReportDetailCollectionResponse>> collectionPage(@PathVariable String type, @Validated @RequestBody TestPlanReportDetailPageRequest request) {
-        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "tpc.pos desc");
+        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize());
         if (!request.getStartPager()) {
             page.close();
-            page.setOrderBy("tpc.pos desc");
         }
         return PageUtils.setPageInfo(page, testPlanReportService.listReportCollection(request, type));
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/DeleteCaseReviewService.java
Patch:
@@ -63,7 +63,7 @@ public void deleteCaseReviewResource(List<String> ids, String projectId) {
         caseReviewExample.createCriteria().andIdIn(ids).andProjectIdEqualTo(projectId);
         caseReviewMapper.deleteByExample(caseReviewExample);
 
-        // 7. 批量刷新评审中其他用例的评审状态
+        // 7. 批量刷新评审中所有用例的评审状态
         Map<String, List<CaseReviewFunctionalCase>> reviewFunctionalCaseMap = reviewFunctionalCases.stream().collect(Collectors.groupingBy(CaseReviewFunctionalCase::getReviewId));
         reviewFunctionalCaseMap.forEach((reviewId, reviewFunctionalCaseList) -> caseReviewCaseProvider.refreshReviewCaseStatus(reviewFunctionalCaseList));
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -577,6 +577,7 @@ private TestPlanReportDetailCaseDTO genReportDetail(TestPlanReportGenPreParam ge
 						return;
 					}
 					List<TestPlanReportBug> reportBugs = extTestPlanReportBugMapper.getPlanBugs(genParam.getTestPlanId(), subList);
+					bugCount.addAndGet(reportBugs.size());
 					// MS处理人会与第三方的值冲突, 分开查询
 					List<SelectOption> headerOptions = bugCommonService.getHeaderHandlerOption(genParam.getProjectId());
 					Map<String, String> headerHandleUserMap = headerOptions.stream().collect(Collectors.toMap(SelectOption::getValue, SelectOption::getText));

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/MetersphereParserApiDefinition.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.parser.api;
 
 
-import io.metersphere.api.domain.ApiDefinition;
 import io.metersphere.api.dto.converter.ApiDefinitionDetail;
 import io.metersphere.api.dto.converter.ApiDefinitionExportDetail;
 import io.metersphere.api.dto.converter.ApiImportDataAnalysisResult;
@@ -94,7 +93,7 @@ public ApiImportDataAnalysisResult generateInsertAndUpdateData(ApiImportFilePars
                 });
             } else {
                 //非HTTP类型，通过 name判断，后续处理会过滤掉路径不一致的
-                Map<String, ApiDefinitionDetail> importDataMap = importDetail.stream().collect(Collectors.toMap(ApiDefinition::getName, t -> t, (oldValue, newValue) -> newValue));
+                Map<String, ApiDefinitionDetail> importDataMap = importDetail.stream().collect(Collectors.toMap(t -> t.getModulePath() + t.getName(), t -> t, (oldValue, newValue) -> newValue));
                 Map<String, List<ApiDefinitionDetail>> savedApiDefinitionMap = existenceApiDefinitionList.stream().collect(Collectors.groupingBy(ApiDefinitionDetail::getName));
 
                 importDataMap.forEach((key, api) -> {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -175,8 +175,6 @@ public class ApiScenarioService extends MoveNodeService {
 
 
     public List<ApiScenarioDTO> getScenarioPage(ApiScenarioPageRequest request, boolean isRepeat, String testPlanId) {
-        //CustomFieldUtils.setBaseQueryRequestCustomMultipleFields(request, userId);
-        //TODO  场景的自定义字段 等设计 不一定会有
         List<ApiScenarioDTO> list = extApiScenarioMapper.list(request, isRepeat, testPlanId);
         if (CollectionUtils.isNotEmpty(list)) {
             processApiScenario(list);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiFileAssociationUpdateService.java
Patch:
@@ -42,6 +42,9 @@ public void handleUpgrade(FileAssociation originFileAssociation, FileMetadata ne
             case FileAssociationSourceUtil.SOURCE_TYPE_API_SCENARIO_STEP ->
                     Objects.requireNonNull(CommonBeanFactory.getBean(ApiScenarioService.class))
                             .handleStepFileAssociationUpgrade(originFileAssociation, newFileMetadata);
+            case FileAssociationSourceUtil.SOURCE_TYPE_API_SCENARIO ->
+                    Objects.requireNonNull(CommonBeanFactory.getBean(ApiScenarioService.class))
+                            .handleScenarioFileAssociationUpgrade(originFileAssociation, newFileMetadata);
             default -> {
             }
         }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -643,6 +643,8 @@ public void update() throws Exception {
         request.setPriority("P0 update");
         request.setStatus(ApiScenarioStatus.DEPRECATED.name());
         List<ApiScenarioStepRequest> steps = getApiScenarioStepRequests();
+        ApiScenarioBlob apiScenarioBlob = apiScenarioBlobMapper.selectByPrimaryKey(addApiScenario.getId());
+        request.setScenarioConfig(JSON.parseObject(new String(apiScenarioBlob.getConfig()), ScenarioConfig.class));
 
         // 验证修改基础信息
         this.requestPostWithOk(DEFAULT_UPDATE, request);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/MetersphereExportParser.java
Patch:
@@ -56,7 +56,6 @@ public ApiExportResponse parse(List<ApiDefinitionWithBlob> apiDefinitionList, Li
                     dto.setName(apiTestCaseWithBlob.getName());
                     dto.setPriority(apiTestCaseWithBlob.getPriority());
                     dto.setStatus(apiTestCaseWithBlob.getStatus());
-                    dto.setLastReportStatus(apiTestCaseWithBlob.getLastReportStatus());
                     dto.setTags(apiTestCaseWithBlob.getTags());
                     dto.setRequest(ApiDataUtils.parseObject(new String(apiTestCaseWithBlob.getRequest()), AbstractMsTestElement.class));
                     detail.getApiTestCaseList().add(dto);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/DemandSyncService.java
Patch:
@@ -97,10 +97,12 @@ private void buildUpdateMap(String projectId, Set<String> demandIds, Platform pl
         demandRelateQueryRequest.setRelateDemandIds(new ArrayList<>(demandIds));
         PlatformDemandDTO demands = platform.getDemands(demandRelateQueryRequest);
         if (demands == null) {
+            deleteIds.addAll(demandIds);
             return;
         }
         List<PlatformDemandDTO.Demand> demandList = demands.getList();
         if (CollectionUtils.isEmpty(demandList)) {
+            deleteIds.addAll(demandIds);
             return;
         }
         List<String> platformIds = demandList.stream().map(PlatformDemandDTO.Demand::getDemandId).toList();

File: backend/services/bug-management/src/test/java/io/metersphere/bug/controller/BugAttachmentControllerTests.java
Patch:
@@ -56,7 +56,7 @@ public class BugAttachmentControllerTests extends BaseTest {
     @Order(0)
     void testUploadMdFile() throws Exception {
         MockMultipartFile fileTooLarge = new MockMultipartFile("file", "test.txt", MediaType.APPLICATION_OCTET_STREAM_VALUE, new byte[50 * 1024 * 1024 + 1]);
-        this.requestUploadFile(BUG_ATTACHMENT_UPLOAD_MD, fileTooLarge).andExpect(status().is5xxServerError());
+        this.requestUploadFile(BUG_ATTACHMENT_UPLOAD_MD, fileTooLarge).andExpect(status().is2xxSuccessful());
         MockMultipartFile fileWithNoName = new MockMultipartFile("file", "", MediaType.APPLICATION_OCTET_STREAM_VALUE, "aa".getBytes());
         this.requestUploadFile(BUG_ATTACHMENT_UPLOAD_MD, fileWithNoName).andExpect(status().is5xxServerError());
         // Mock minio save file exception

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -150,9 +150,6 @@ private void parseAndSetFileNameType(String filePath, @NotNull FileMetadata file
     }
 
     public FileMetadata genFileMetadata(String fileSpecifyName, String filePath, String storage, long size, boolean enable, String projectId, String moduleId, String operator) {
-        if (size > maxFileSize.toBytes()) {
-            throw new MSException(Translator.get("file.size.is.too.large"));
-        }
         FileMetadata fileMetadata = new FileMetadata();
         this.parseAndSetFileNameType(filePath, fileMetadata);
         //如果开启了开关，检查是否是jar文件

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CommonFileService.java
Patch:
@@ -44,9 +44,6 @@ public class CommonFileService {
      */
     public String uploadTempImgFile(MultipartFile file) {
         String fileName = StringUtils.trim(file.getOriginalFilename());
-        if (file.getSize() > maxFileSize.toBytes()) {
-            throw new MSException(Translator.get("file.size.is.too.large"));
-        }
         if (StringUtils.isBlank(fileName)) {
             throw new MSException(Translator.get("file.name.cannot.be.empty"));
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ms/HTTPSamplerConverter.java
Patch:
@@ -112,7 +112,7 @@ private MsHTTPElement convertHttpSampler(HTTPSamplerProxy source) {
                     source.getArguments().getArgumentsAsMap().forEach((k, v) -> samplerProxy.getBody().setRawBody(new RawBody() {{
                         this.setValue(v);
                     }}));
-                } else if (StringUtils.isNotEmpty(bodyType) || ("POST".equalsIgnoreCase(source.getMethod()) && source.getArguments().getArgumentsAsMap().size() > 0)) {
+                } else if (StringUtils.isNotEmpty(bodyType) || (StringUtils.equalsAnyIgnoreCase(source.getMethod(), "POST", "PUT") && !source.getArguments().getArgumentsAsMap().isEmpty())) {
                     samplerProxy.getBody().setBodyType(Body.BodyType.WWW_FORM.name());
                     List<WWWFormKV> keyValues = new LinkedList<>();
                     source.getArguments().getArguments().forEach(params -> {

File: backend/services/api-test/src/main/java/io/metersphere/api/curl/constants/CurlPatternConstants.java
Patch:
@@ -25,7 +25,7 @@ public interface CurlPatternConstants {
     /**
      * HTTP请求方法
      */
-    Pattern HTTP_METHOD_PATTERN = Pattern.compile("curl\\s+(?:[^\\s]+\\s+)*(-X|--request)\\s+'?(GET|POST)'?");
+    Pattern HTTP_METHOD_PATTERN = Pattern.compile("curl\\s+(?:[^\\s]+\\s+)*(-X|--request)\\s+'?(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD|CONNECT)'?");
 
     /**
      * 默认HTTP请求方法

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/JmeterTestElementParserHelper.java
Patch:
@@ -49,12 +49,12 @@ public static UserParameters getUserParameters(String name, List<? extends KeyVa
     public static UserParameters getUserParameters(List<CommonVariables> constantVariables, List<CommonVariables> listVariables) {
         List<CommonVariables> variableResults = new ArrayList<>();
         listVariables.forEach(listVariable -> {
-            // 按 ',' 分割，但是支持 \, 转义
+            // 按 ',' 分割，但是支持 '\,' 转义
             String[] arrays = listVariable.getValue().replaceAll("[\r\n]", "").split("(?<!\\\\),");
             for (int i = 0; i < arrays.length; i++) {
                 CommonVariables commonVariables = BeanUtils.copyBean(new CommonVariables(), listVariable);
                 commonVariables.setKey(listVariable.getKey() + "_" + (i + 1));
-                commonVariables.setValue(arrays[i]);
+                commonVariables.setValue(arrays[i].replace("\\,", ","));
                 variableResults.add(commonVariables);
             }
         });

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/JmeterTestElementParserHelper.java
Patch:
@@ -49,7 +49,8 @@ public static UserParameters getUserParameters(String name, List<? extends KeyVa
     public static UserParameters getUserParameters(List<CommonVariables> constantVariables, List<CommonVariables> listVariables) {
         List<CommonVariables> variableResults = new ArrayList<>();
         listVariables.forEach(listVariable -> {
-            String[] arrays = listVariable.getValue().replaceAll("[\r\n]", "").split(",");
+            // 按 ',' 分割，但是支持 \, 转义
+            String[] arrays = listVariable.getValue().replaceAll("[\r\n]", "").split("(?<!\\\\),");
             for (int i = 0; i < arrays.length; i++) {
                 CommonVariables commonVariables = BeanUtils.copyBean(new CommonVariables(), listVariable);
                 commonVariables.setKey(listVariable.getKey() + "_" + (i + 1));

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -146,15 +146,15 @@ public void delete(@PathVariable String id) {
     }
 
     @GetMapping("/sync/{projectId}")
-    @Operation(summary = "缺陷管理-列表-同步存量缺陷")
+    @Operation(summary = "缺陷管理-列表-同步缺陷")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public void sync(@PathVariable String projectId) {
         bugSyncService.syncBugs(projectId, SessionUtils.getUserId(), Objects.requireNonNull(SessionUtils.getUser()).getLanguage(), Translator.get("sync_mode.manual"));
     }
 
     @PostMapping("/sync/all")
-    @Operation(summary = "缺陷管理-列表-同步全量缺陷")
+    @Operation(summary = "缺陷管理-列表-同步缺陷(区间)")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void syncAll(@RequestBody BugSyncRequest request) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncService.java
Patch:
@@ -71,7 +71,7 @@ public void syncAllBugs(BugSyncRequest request, String currentUser, String langu
     }
 
     /**
-     * 同步存量缺陷
+     * 同步缺陷
      * @param projectId 项目ID
      */
     public void syncBugs(String projectId, String currentUser, String language, String triggerMode) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseMinderService.java
Patch:
@@ -63,7 +63,7 @@ private List<String> getMinderSelectIds(TestPlanCaseMinderRequest request) {
             //模块
             if (CollectionUtils.isNotEmpty(request.getMinderModuleIds())) {
                 //处理未规划用例
-                List<String> rootIds = ids.stream().filter(id -> StringUtils.endsWith(id, "_root")).map(id -> id.replace("_root", "")).toList();
+                List<String> rootIds = request.getMinderModuleIds().stream().filter(id -> StringUtils.endsWith(id, "_root")).map(id -> id.replace("_root", "")).toList();
                 if (CollectionUtils.isNotEmpty(rootIds)) {
                     ids.addAll(extTestPlanFunctionalCaseMapper.selectIdsByRootIds(rootIds, request.getTestPlanId()));
                 }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectMemberController.java
Patch:
@@ -24,6 +24,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
@@ -64,8 +65,8 @@ public List<UserExtendDTO> getMemberOption(@PathVariable String projectId,
 
     @GetMapping("/get-role/option/{projectId}")
     @Operation(summary = "项目管理-成员-获取用户组下拉选项")
-    @RequiresPermissions(PermissionConstants.PROJECT_USER_READ)
-    @CheckOwner(resourceId = "#projectId", resourceType = "project")
+    //@RequiresPermissions(PermissionConstants.PROJECT_USER_READ)
+    @RequiresPermissions(value = {PermissionConstants.PROJECT_USER_READ, PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ}, logical = Logical.OR)
     public List<OptionDTO> getRoleOption(@PathVariable String projectId) {
         return projectMemberService.getRoleOption(projectId);
     }
@@ -130,7 +131,6 @@ public List<CommentUserInfo> selectCommentUser(@PathVariable String projectId, @
     @PostMapping("/update-member")
     @Operation(summary = "系统设置-系统-组织与项-项目-更新成员用户组")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_PROJECT_MEMBER_UPDATE)
-    @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void updateProjectMemberRole(@RequestBody ProjectMemberEditRequest request) {
         projectMemberService.updateMember(request, SessionUtils.getUserId(), "/project/member/update-member", OperationLogModule.SETTING_ORGANIZATION_PROJECT);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -107,7 +107,8 @@ public List<OptionDTO> getProjectList(@PathVariable(value = "organizationId") St
 
     @GetMapping("/user/role/list/{organizationId}")
     @Operation(summary = "系统设置-组织-成员-获取当前组织下的所有自定义用户组以及组织级别的用户组")
-    @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_READ)
+    //@RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_READ)
+    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_READ, PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ}, logical = Logical.OR)
     public List<OptionDTO> getUserRoleList(@PathVariable(value = "organizationId") String organizationId) {
         return organizationService.getUserRoleList(organizationId);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemProjectController.java
Patch:
@@ -30,6 +30,7 @@
 import jakarta.annotation.Resource;
 import jakarta.validation.constraints.NotBlank;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
@@ -124,7 +125,6 @@ public void disable(@PathVariable String id) {
     @PostMapping("/member-list")
     @RequiresPermissions(PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ)
     @Operation(summary = "系统设置-系统-组织与项目-项目-成员列表")
-    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
     public Pager<List<UserExtendDTO>> getProjectMember(@Validated @RequestBody ProjectMemberRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize());
         return PageUtils.setPageInfo(page, systemProjectService.getProjectMember(request));

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiScheduleDTO.java
Patch:
@@ -17,6 +17,8 @@ public class ApiScheduleDTO {
     private String moduleId;
     @Schema(description = "swagger地址", requiredMode = Schema.RequiredMode.REQUIRED)
     private String swaggerUrl;
+    @Schema(description = "swagger token", requiredMode = Schema.RequiredMode.REQUIRED)
+    private String swaggerToken;
     @Schema(description = "是否覆盖模块")
     private Boolean coverModule = false;
     @Schema(description = "是否同步导入用例")

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/SwaggerBasicAuth.java
Patch:
@@ -7,4 +7,7 @@ public class SwaggerBasicAuth {
     private Boolean authSwitch = false;
     private String userName;
     private String password;
+
+    //新增token设置。放在这里也是因为token是身份验证的一种。
+    private String token;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/request/ApiScheduleRequest.java
Patch:
@@ -31,6 +31,7 @@ public class ApiScheduleRequest {
     @NotBlank(message = "{api_definition_swagger.swagger_url.not_blank}", groups = {Created.class, Updated.class})
     @Size(min = 1, max = 500, message = "{api_definition_swagger.swagger_url.length_range}", groups = {Created.class, Updated.class})
     private String swaggerUrl;
+    private String swaggerToken;
     private String taskId;
     @Schema(description = "是否覆盖模块")
     private Boolean coverModule = false;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/ImportRequest.java
Patch:
@@ -14,6 +14,8 @@ public class ImportRequest {
     private String projectId;
     @Schema(description = "导入的swagger地址")
     private String swaggerUrl;
+    @Schema(description = "导入的swagger token")
+    private String swaggerToken;
     @Schema(description = "如果是定时任务的时候 需要传入创建人id", requiredMode = Schema.RequiredMode.REQUIRED)
     private String userId;
     private String versionId; // 新导入选择的版本

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionScheduleService.java
Patch:
@@ -61,6 +61,7 @@ public String createSchedule(ApiScheduleRequest request, String userId) {
         basicAuth.setUserName(request.getAuthUsername());
         basicAuth.setPassword(request.getAuthPassword());
         basicAuth.setAuthSwitch(request.isAuthSwitch());
+        basicAuth.setToken(request.getSwaggerToken());
         apiSwagger.setConfig(ApiDataUtils.toJSONString(basicAuth));
         apiDefinitionSwaggerMapper.insertSelective(apiSwagger);
 
@@ -166,6 +167,7 @@ public ApiScheduleDTO getSchedule(String id) {
             apiScheduleDTO.setAuthUsername(basicAuth.getUserName());
             apiScheduleDTO.setAuthPassword(basicAuth.getPassword());
             apiScheduleDTO.setAuthSwitch(basicAuth.getAuthSwitch());
+            apiScheduleDTO.setSwaggerToken(basicAuth.getToken());
         }
         apiScheduleDTO.setEnable(schedule.getEnable());
         apiScheduleDTO.setValue(schedule.getValue());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1376,7 +1376,8 @@ private void handleRichTextTmpFile(BugEditRequest request, String bugId, String
     private void filterRichTextTmpFile(BugEditRequest request) {
         // 项目模板带过来的图片文件不处理
         if (CollectionUtils.isNotEmpty(request.getRichTextTmpFileIds())) {
-            request.getRichTextTmpFileIds().removeIf(tmpFileId -> request.getDescription().contains("/project/template/img/preview/" + request.getProjectId() + "/" + tmpFileId));
+            request.getRichTextTmpFileIds().removeIf(tmpFileId -> request.getDescription().contains("/project/template/img/preview/" + request.getProjectId() + "/" + tmpFileId) ||
+                    request.getDescription().contains("/attachment/download/file/" + request.getProjectId() + "/" + tmpFileId));
         }
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/HarParserApiDefinition.java
Patch:
@@ -363,8 +363,9 @@ private void parseRequestBody(HarRequest requestBody, Body body) {
         if (StringUtils.equalsIgnoreCase("GET", requestBody.method) || requestBody.postData == null) {
             return;
         }
-        String bodyType = Body.BodyType.NONE.name();
+        String bodyType = content.mimeType;
         if (StringUtils.isEmpty(bodyType)) {
+            bodyType = Body.BodyType.RAW.name();
             body.setRawBody(new RawBody() {{
                 this.setValue(content.text);
             }});

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDefinitionMapper.java
Patch:
@@ -34,7 +34,7 @@ public interface ExtApiDefinitionMapper {
     List<String> getIds(@Param("request") TableBatchProcessDTO request, @Param("projectId") String projectId, @Param("protocols") List<String> protocols, @Param("deleted") boolean deleted);
 
     @BaseConditionFilter
-    List<String> getIdsBySort(@Param("request") TableBatchProcessDTO request, @Param("projectId") String projectId, @Param("protocols") List<String> protocols, @Param("orderColumns") String orderColumns);
+    List<String> getIdsBySort(@Param("request") TableBatchProcessDTO request, @Param("projectId") String projectId, @Param("protocols") List<String> protocols, @Param("orderColumns") String orderColumns, @Param("deleted") boolean deleted);
 
     List<String> getRefIds(@Param("ids") List<String> ids, @Param("deleted") boolean deleted);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionExportService.java
Patch:
@@ -210,7 +210,7 @@ private List<String> getBatchExportApiIds(ApiDefinitionBatchExportRequest reques
 
         if (request.isSelectAll()) {
             String sortString = StringUtils.isBlank(request.getSortString()) ? "pos desc,id desc" : request.getSortString();
-            List<String> ids = extApiDefinitionMapper.getIdsBySort(request, request.getProjectId(), protocols, sortString);
+            List<String> ids = extApiDefinitionMapper.getIdsBySort(request, request.getProjectId(), protocols, sortString, false);
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectMemberController.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.user.UserExtendDTO;
 import io.metersphere.system.dto.user.response.UserInviteResponse;
+import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.service.SimpleUserService;
 import io.metersphere.system.utils.PageUtils;
@@ -89,7 +90,7 @@ public UserInviteResponse invite(@Validated @RequestBody UserInviteRequest reque
     @RequiresPermissions(PermissionConstants.PROJECT_USER_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void updateMember(@RequestBody ProjectMemberEditRequest request) {
-        projectMemberService.updateMember(request, SessionUtils.getUserId());
+        projectMemberService.updateMember(request, SessionUtils.getUserId(), "/project/member/update", OperationLogModule.PROJECT_MANAGEMENT_PERMISSION_MEMBER);
     }
 
     @GetMapping("/remove/{projectId}/{userId}")
@@ -131,6 +132,6 @@ public List<CommentUserInfo> selectCommentUser(@PathVariable String projectId, @
     @RequiresPermissions(PermissionConstants.ORGANIZATION_PROJECT_MEMBER_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void updateProjectMemberRole(@RequestBody ProjectMemberEditRequest request) {
-        projectMemberService.updateMember(request, SessionUtils.getUserId());
+        projectMemberService.updateMember(request, SessionUtils.getUserId(), "/project/member/update-member", OperationLogModule.SETTING_ORGANIZATION_PROJECT);
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.user.response.UserInviteResponse;
 import io.metersphere.system.log.annotation.Log;
+import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.service.OrganizationService;
 import io.metersphere.system.service.SimpleUserService;
@@ -75,7 +76,7 @@ public void addMemberRole(@Validated @RequestBody OrganizationMemberExtendReques
     @Operation(summary = "系统设置-组织-成员-更新用户")
     @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD, PermissionConstants.PROJECT_USER_READ_DELETE}, logical = Logical.OR)
     public void updateMember(@Validated @RequestBody OrganizationMemberUpdateRequest organizationMemberExtendRequest) {
-        organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId());
+        organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId(), "/organization/update-member", OperationLogModule.SETTING_ORGANIZATION_MEMBER);
     }
 
     @PostMapping("/project/add-member")

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemOrganizationController.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.user.UserExtendDTO;
 import io.metersphere.system.log.annotation.Log;
+import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.service.OrganizationService;
 import io.metersphere.system.service.SimpleUserService;
@@ -198,6 +199,6 @@ public Pager<List<UserExtendDTO>> getMemberOptionList(@Validated @RequestBody Me
     @Operation(summary = "系统设置-系统-组织与项目-组织-成员-更新成员用户组")
     @RequiresPermissions(PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_MEMBER_UPDATE)
     public void updateMember(@Validated @RequestBody OrganizationMemberUpdateRequest organizationMemberExtendRequest) {
-        organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId());
+        organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId(), "/system/organization/update-member", OperationLogModule.SETTING_SYSTEM_ORGANIZATION);
     }
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1840,7 +1840,7 @@ public List<TemplateCustomFieldDTO> getHeaderCustomFields(String projectId) {
         // 本地模板自定义字段去重
         List<TemplateCustomFieldDTO> headerCustomFields = allCustomFields.stream().filter(distinctByKey(TemplateCustomFieldDTO::getFieldId)).collect(Collectors.toList());
         // 填充自定义字段成员类型的选项值
-        List<SelectOption> memberOption = bugCommonService.getHeaderHandlerOption(projectId);
+        List<SelectOption> memberOption = bugCommonService.getLocalHandlerOption(projectId);
         List<CustomFieldOption> memberCustomOption = memberOption.stream().map(option -> {
             CustomFieldOption customFieldOption = new CustomFieldOption();
             customFieldOption.setValue(option.getValue());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/HarParserApiDefinition.java
Patch:
@@ -242,7 +242,7 @@ private List<ApiDefinitionDetail> parseRequests(Har har, ImportRequest importReq
             HarRequest harRequest = entry.request;
             if (harRequest != null) {
                 // css 、 js 略过
-                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) && StringUtils.endsWithAny(harRequest.url, ".css", ".js")) {
+                if (StringUtils.equalsIgnoreCase(harRequest.method, HttpMethodConstants.GET.name()) && StringUtils.endsWithAny(harRequest.url.toLowerCase(), ".css", ".js", ".png", ".jpg", ".jpeg")) {
                     continue;
                 }
                 String url = harRequest.url;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionExportService.java
Patch:
@@ -209,7 +209,8 @@ private List<String> getBatchExportApiIds(ApiDefinitionBatchExportRequest reques
         }
 
         if (request.isSelectAll()) {
-            List<String> ids = extApiDefinitionMapper.getIdsBySort(request, request.getProjectId(), protocols, request.getSortString());
+            String sortString = StringUtils.isBlank(request.getSortString()) ? "pos desc,id desc" : request.getSortString();
+            List<String> ids = extApiDefinitionMapper.getIdsBySort(request, request.getProjectId(), protocols, sortString);
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionImportService.java
Patch:
@@ -351,9 +351,9 @@ private void insertApiDefinition(ImportRequest request, List<ApiDefinitionDetail
 
     private void insertApiTestCase(ImportRequest request, List<ApiTestCaseDTO> insertApiCaseData, ApiTestCaseMapper apiTestCaseMapper, ApiTestCaseBlobMapper apiTestCaseBlobMapper, SqlSession sqlSession) {
         insertApiCaseData.forEach(t -> {
+            t.setId(IDGenerator.nextStr());
             ApiTestCase apiTestCase = new ApiTestCase();
             BeanUtils.copyBean(apiTestCase, t);
-            apiTestCase.setId(IDGenerator.nextStr());
             apiTestCase.setProjectId(request.getProjectId());
             apiTestCase.setPos(getImportNextOrder(request.getProjectId()));
             apiTestCase.setNum(NumGenerator.nextNum(request.getProjectId(), ApplicationNumScope.API_DEFINITION));
@@ -383,9 +383,9 @@ private void insertApiMock(ImportRequest request, List<ApiDefinitionMockDTO> ins
                 api = batchApiMapper.selectByPrimaryKey(t.getApiDefinitionId());
                 apiDefinitionIdMap.put(t.getApiDefinitionId(), api);
             }
+            t.setId(IDGenerator.nextStr());
             ApiDefinitionMock apiMock = new ApiDefinitionMock();
             BeanUtils.copyBean(apiMock, t);
-            apiMock.setId(IDGenerator.nextStr());
             apiMock.setProjectId(request.getProjectId());
             apiMock.setExpectNum(String.valueOf(NumGenerator.nextNum(request.getProjectId() + "_" + api.getNum(), ApplicationNumScope.API_MOCK)));
             apiMock.setVersionId(request.getVersionId());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -2036,7 +2036,7 @@ private void importTest() throws Exception {
         paramMap.add("file", file);
         this.requestMultipartWithOkAndReturn(IMPORT, paramMap);
         List<ApiDefinitionModule> apiDefinitionModuleList = apiDefinitionModuleMapper.selectByExample(moduleExample);
-        Assertions.assertEquals(0, apiDefinitionModuleList.size());
+        Assertions.assertEquals(1, apiDefinitionModuleList.size());
         List<ApiDefinitionBlob> apiDefinitionBlobs = apiDefinitionImportTestService.selectBlobByProjectId(importProject.getId());
         Assertions.assertEquals(2, apiDefinitionBlobs.size());
 

File: backend/services/api-test/src/main/java/io/metersphere/api/curl/constants/CurlPatternConstants.java
Patch:
@@ -15,7 +15,7 @@ public interface CurlPatternConstants {
     /**
      * URL路径
      */
-    Pattern URL_PATH_PATTERN = Pattern.compile("(?:\\s|^)(?:'|\")?(https?://[^\\s'\"]*(?:\\?[^\\s'\"]*)?)(?:'|\")?(?:\\s|$)");
+    Pattern URL_PATH_PATTERN = Pattern.compile("(?:\\s|^)(?:'|\")?(https?://[^?\\s'\"]*)(?:\\?[^\\s'\"]*)?(?:'|\")?(?:\\s|$)");
 
     /**
      * URL_PARAMS请求参数

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ResponseBody.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition;
 
+import io.metersphere.api.dto.request.http.body.Body;
 import io.metersphere.api.dto.request.http.body.JsonBody;
 import io.metersphere.api.dto.request.http.body.RawBody;
 import io.metersphere.api.dto.request.http.body.XmlBody;
@@ -20,7 +21,7 @@ public class ResponseBody implements Serializable {
 
     @NotBlank
     @Size(max = 20)
-    private String bodyType;
+    private String bodyType = Body.BodyType.NONE.name();
 
     @Valid
     private JsonBody jsonBody = new JsonBody();

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/body/Body.java
Patch:
@@ -20,7 +20,7 @@ public class Body {
      * 同时持久化多个类型的请求体
      */
     @NotBlank
-    private String bodyType;
+    private String bodyType = BodyType.NONE.name();
     /**
      * None 请求体
      * 当 bodyType 为 NONE 时，使用该字段

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/converter/ApiImportDataAnalysisResult.java
Patch:
@@ -25,8 +25,8 @@ public class ApiImportDataAnalysisResult {
     // 接口的mock数据
     Map<String, List<ApiDefinitionMockDTO>> apiIdAndMockMap = new HashMap<>();
 
-    public void addExistenceApi(ApiDefinitionDetail importApi, ApiDefinitionDetail exportApi) {
-        this.existenceApiList.add(new ExistenceApiDefinitionDetail(importApi, exportApi));
+    public void addExistenceApi(ApiDefinitionDetail importApi, List<ApiDefinitionDetail> exportApiList) {
+        this.existenceApiList.add(new ExistenceApiDefinitionDetail(importApi, exportApiList));
     }
 
     public boolean isEmpty() {

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/converter/ExistenceApiDefinitionDetail.java
Patch:
@@ -3,9 +3,11 @@
 import lombok.AllArgsConstructor;
 import lombok.Data;
 
+import java.util.List;
+
 @Data
 @AllArgsConstructor
 public class ExistenceApiDefinitionDetail {
     private ApiDefinitionDetail importApiDefinition;
-    private ApiDefinitionDetail existenceApiDefinition;
+    private List<ApiDefinitionDetail> existenceApiDefinition;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/HarParserApiDefinition.java
Patch:
@@ -64,8 +64,7 @@ public ApiImportDataAnalysisResult generateInsertAndUpdateData(ApiImportFilePars
 
         for (ExistenceApiDefinitionDetail definitionDetail : insertAndUpdateData.getExistenceApiList()) {
             ApiDefinitionDetail importApi = definitionDetail.getImportApiDefinition();
-            ApiDefinitionDetail savedApi = definitionDetail.getExistenceApiDefinition();
-
+            ApiDefinitionDetail savedApi = definitionDetail.getExistenceApiDefinition().getFirst();
             ApiDefinitionBlob blob = apiDefinitionBlobMapper.selectByPrimaryKey(savedApi.getId());
             if (blob != null) {
                 if (blob.getRequest() != null) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/HttpApiDefinitionImportAbstractParser.java
Patch:
@@ -40,7 +40,9 @@ public ApiImportDataAnalysisResult generateInsertAndUpdateData(ApiImportFilePars
 
         importDataMap.forEach((key, api) -> {
             if (savedApiDefinitionMap.containsKey(key)) {
-                insertAndUpdateData.addExistenceApi(api, savedApiDefinitionMap.get(key));
+                insertAndUpdateData.addExistenceApi(api, new ArrayList<>() {{
+                    this.add(savedApiDefinitionMap.get(key));
+                }});
             } else {
                 insertAndUpdateData.getInsertApiList().add(api);
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/JmeterParserApiDefinition.java
Patch:
@@ -184,7 +184,9 @@ private ApiImportDataAnalysisResult compareApiData(List<ApiDefinitionDetail> imp
 
         for (Map.Entry<String, ApiDefinitionDetail> entry : importDataMap.entrySet()) {
             if (savedApiDefinitionMap.containsKey(entry.getKey())) {
-                insertAndUpdateData.addExistenceApi(entry.getValue(), savedApiDefinitionMap.get(entry.getKey()));
+                List<ApiDefinitionDetail> existenceList = new ArrayList<>();
+                existenceList.add(savedApiDefinitionMap.get(entry.getKey()));
+                insertAndUpdateData.addExistenceApi(entry.getValue(), existenceList);
             } else {
                 insertAndUpdateData.getInsertApiList().add(entry.getValue());
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/MetersphereExportParser.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.api.dto.export.MetersphereApiExportResponse;
 import io.metersphere.api.dto.mockserver.MockMatchRule;
 import io.metersphere.api.dto.mockserver.MockResponse;
-import io.metersphere.api.dto.request.http.MsHTTPElement;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
 import io.metersphere.sdk.constants.ModuleConstants;
@@ -59,7 +58,7 @@ public ApiExportResponse parse(List<ApiDefinitionWithBlob> apiDefinitionList, Li
                     dto.setStatus(apiTestCaseWithBlob.getStatus());
                     dto.setLastReportStatus(apiTestCaseWithBlob.getLastReportStatus());
                     dto.setTags(apiTestCaseWithBlob.getTags());
-                    dto.setRequest(ApiDataUtils.parseObject(new String(apiTestCaseWithBlob.getRequest()), MsHTTPElement.class));
+                    dto.setRequest(ApiDataUtils.parseObject(new String(apiTestCaseWithBlob.getRequest()), AbstractMsTestElement.class));
                     detail.getApiTestCaseList().add(dto);
                 }
             }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugNoticeService.java
Patch:
@@ -146,6 +146,8 @@ private BugNoticeDTO buildNotice(BugDTO bugDTO) {
         // 构建通知对象
         BugNoticeDTO notice = new BugNoticeDTO();
         BeanUtils.copyBean(notice, bugDTO);
+        notice.setHandleUser(bugDTO.getHandleUserName());
+        notice.setStatus(bugDTO.getStatusName());
         // 自定义字段解析{name: value}
         if (CollectionUtils.isNotEmpty(bugDTO.getCustomFields())) {
             List<OptionDTO> fields = new ArrayList<>();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/BasePlanCaseBatchRequest.java
Patch:
@@ -30,4 +30,7 @@ public class BasePlanCaseBatchRequest extends TableBatchProcessDTO implements Se
 
     @Schema(description = "项目Id")
     private String projectId;
+
+    @Schema(description = "是否包含空执行人")
+    private boolean nullExecutorKey;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ms/MsElementConverterRegister.java
Patch:
@@ -45,6 +45,8 @@ public class MsElementConverterRegister {
         register(RegexExtractorConverter.class);
         register(XPath2ExtractorConverter.class);
         register(XPathExtractorConverter.class);
+        register(JSONPathAssertionConverter.class);
+        register(XPathAssertionConverter.class);
 
         register(BeanShellPreProcessConverter.class);
         register(JDBCPreProcessConverter.class);

File: backend/services/case-management/src/main/java/io/metersphere/functional/request/FunctionalThirdDemandPageRequest.java
Patch:
@@ -14,7 +14,6 @@ public class FunctionalThirdDemandPageRequest extends BasePageRequest {
     private String projectId;
 
     @Schema(description = "当前选择的用例Id", requiredMode = Schema.RequiredMode.REQUIRED)
-    @NotBlank(message = "{case_review.case_id.not_blank}")
     private String caseId;
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -463,6 +463,7 @@ private List<BaseTreeNode> getCollectionTree(String testPlanId) {
         List<BaseTreeNode> returnList = new ArrayList<>();
         TestPlanCollectionExample collectionExample = new TestPlanCollectionExample();
         collectionExample.createCriteria().andTypeEqualTo(CaseType.API_CASE.getKey()).andParentIdNotEqualTo(ModuleConstants.ROOT_NODE_PARENT_ID).andTestPlanIdEqualTo(testPlanId);
+        collectionExample.setOrderByClause("pos asc");
         List<TestPlanCollection> testPlanCollections = testPlanCollectionMapper.selectByExample(collectionExample);
         testPlanCollections.forEach(item -> {
             BaseTreeNode baseTreeNode = new BaseTreeNode(item.getId(), Translator.get(item.getName(), item.getName()), CaseType.API_CASE.getKey());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -604,6 +604,7 @@ private List<BaseTreeNode> getCollectionTree(String testPlanId) {
         List<BaseTreeNode> returnList = new ArrayList<>();
         TestPlanCollectionExample collectionExample = new TestPlanCollectionExample();
         collectionExample.createCriteria().andTypeEqualTo(CaseType.SCENARIO_CASE.getKey()).andParentIdNotEqualTo(ModuleConstants.ROOT_NODE_PARENT_ID).andTestPlanIdEqualTo(testPlanId);
+        collectionExample.setOrderByClause("pos asc");
         List<TestPlanCollection> testPlanCollections = testPlanCollectionMapper.selectByExample(collectionExample);
         testPlanCollections.forEach(item -> {
             BaseTreeNode baseTreeNode = new BaseTreeNode(item.getId(), Translator.get(item.getName(), item.getName()), CaseType.SCENARIO_CASE.getKey());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -312,6 +312,7 @@ private List<BaseTreeNode> getCollectionTree(String testPlanId) {
         List<BaseTreeNode> returnList = new ArrayList<>();
         TestPlanCollectionExample collectionExample = new TestPlanCollectionExample();
         collectionExample.createCriteria().andTypeEqualTo(CaseType.FUNCTIONAL_CASE.getKey()).andParentIdNotEqualTo(ModuleConstants.ROOT_NODE_PARENT_ID).andTestPlanIdEqualTo(testPlanId);
+        collectionExample.setOrderByClause("pos asc");
         List<TestPlanCollection> testPlanCollections = testPlanCollectionMapper.selectByExample(collectionExample);
         testPlanCollections.forEach(item -> {
             BaseTreeNode baseTreeNode = new BaseTreeNode(item.getId(), Translator.get(item.getName(), item.getName()), CaseType.FUNCTIONAL_CASE.getKey());

File: backend/services/system-setting/src/main/java/io/metersphere/system/constants/InternalUserView.java
Patch:
@@ -29,7 +29,7 @@ public enum InternalUserView {
     MY_CREATE(() -> {
         UserViewDTO userViewDTO = getUserViewDTO("my_create");
         CombineCondition condition = new CombineCondition();
-        condition.setName("create_user");
+        condition.setName("createUser");
         condition.setValue(getCurrentUserValue());
         condition.setOperator(CombineCondition.CombineConditionOperator.IN.name());
         userViewDTO.setConditions(List.of(condition));
@@ -38,7 +38,7 @@ public enum InternalUserView {
     MY_REVIEW(() -> {
         UserViewDTO userViewDTO = getUserViewDTO("my_review");
         CombineCondition condition = new CombineCondition();
-        condition.setName("review_user");
+        condition.setName("reviewUser");
         condition.setValue(getCurrentUserValue());
         condition.setOperator(CombineCondition.CombineConditionOperator.IN.name());
         userViewDTO.setConditions(List.of(condition));
@@ -50,7 +50,6 @@ private static UserViewDTO getUserViewDTO(String name) {
         userViewDTO.setSearchMode(CombineSearch.SearchMode.AND.name());
         userViewDTO.setName(name);
         userViewDTO.setId(name);
-        userViewDTO.setInternalViewKey(name.toUpperCase());
         return userViewDTO;
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserViewController.java
Patch:
@@ -1,8 +1,8 @@
 package io.metersphere.system.controller;
 
 import io.metersphere.system.constants.UserViewType;
+import io.metersphere.system.domain.UserView;
 import io.metersphere.system.dto.UserViewDTO;
-import io.metersphere.system.dto.UserViewListDTO;
 import io.metersphere.system.dto.UserViewListGroupedDTO;
 import io.metersphere.system.dto.request.UserViewAddRequest;
 import io.metersphere.system.dto.request.UserViewUpdateRequest;
@@ -29,7 +29,7 @@ public class UserViewController {
 
     @GetMapping("/{viewType}/list")
     @Operation(summary = "视图列表")
-    public List<UserViewListDTO> list(@RequestParam String scopeId, @PathVariable String viewType) {
+    public List<UserView> list(@RequestParam String scopeId, @PathVariable String viewType) {
         UserViewType userViewType = UserViewType.getByValue(viewType);
         return userViewService.list(scopeId, userViewType, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/UserViewDTO.java
Patch:
@@ -17,8 +17,6 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class UserViewDTO extends UserView {
-    @Schema(description = "内置视图的 key")
-    private String internalViewKey;
     @Schema(description = "筛选条件")
     private List<CombineCondition> conditions;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/UserViewListGroupedDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.system.dto;
 
+import io.metersphere.system.domain.UserView;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -12,7 +13,7 @@
 @Data
 public class UserViewListGroupedDTO {
     @Schema(description = "系统视图")
-    private List<UserViewListDTO> internalViews;
+    private List<UserView> internalViews;
     @Schema(description = "自定义视图")
-    private List<UserViewListDTO> customViews;
+    private List<UserView> customViews;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanFunctionalCaseController.java
Patch:
@@ -72,7 +72,7 @@ public Pager<List<TestPlanCasePageResponse>> page(@Validated @RequestBody TestPl
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
                 StringUtils.isNotBlank(request.getSortString("id", "functional_case")) ? request.getSortString("id", "functional_case") : "test_plan_functional_case.pos desc");
 
-        return PageUtils.setPageInfo(page, testPlanFunctionalCaseService.getFunctionalCasePage(request, false));
+        return PageUtils.setPageInfo(page, testPlanFunctionalCaseService.getFunctionalCasePage(request, false, SessionUtils.getCurrentProjectId()));
     }
 
     @PostMapping("/tree")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanFunctionalCaseMapper.java
Patch:
@@ -82,4 +82,6 @@ public interface ExtTestPlanFunctionalCaseMapper {
     List<FunctionalCaseModule> selectProjectByModuleIds(@Param("moduleIds") List<String> moduleIds);
 
     Collection<String> selectIdsByModuleIds(@Param("request") TestPlanCaseMinderRequest request, @Param("minderModuleIds") List<String> minderModuleIds);
+
+    Collection<String> selectIdsByRootIds(@Param("rootIds") List<String> rootIds, @Param("testPlanId") String testPlanId);
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/CaseType.java
Patch:
@@ -45,7 +45,7 @@ public enum CaseType {
 
     public static CaseType getType(String key) {
         for (CaseType caseType : CaseType.values()) {
-            if (StringUtils.equals(caseType.getKey(), key)) {
+            if (StringUtils.equalsIgnoreCase(caseType.getKey(), key)) {
                 return caseType;
             }
         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseImportEventListener.java
Patch:
@@ -500,6 +500,9 @@ private void validateCustomField(FunctionalCaseExcelData data, StringBuilder err
      * @param errMsg
      */
     private void validateModule(FunctionalCaseExcelData data, StringBuilder errMsg) {
+        if (!StringUtils.startsWith(data.getModule(), "/")) {
+            data.setModule("/" + data.getModule());
+        }
         String module = data.getModule();
         if (StringUtils.isNotEmpty(module)) {
             String[] nodes = module.split("/");

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseTrashService.java
Patch:
@@ -209,7 +209,7 @@ private void doDeleteBatchCase(FunctionalCaseBatchRequest request, List<String>
         }
     }
 
-    private void deleteByIds(String projectId, List<String> deleteIds, String userId) {
+    public void deleteByIds(String projectId, List<String> deleteIds, String userId) {
         deleteFunctionalCaseService.deleteFunctionalCaseResource(deleteIds, projectId);
         Map<String, Object> param = new HashMap<>();
         param.put(CaseEvent.Param.CASE_IDS, deleteIds);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -1015,7 +1015,7 @@ public void handleAssociateBugByIds(List<String> ids, TestPlanCaseBatchAssociate
     }
 
     private void buildAssociateBugData(String id, Map<String, List<String>> bugMap, List<BugRelationCase> list, TestPlanCaseBatchAssociateBugRequest request, Map<String, String> caseMap, String userId) {
-        List<String> bugIds = request.getBugIds();
+        List<String> bugIds = new ArrayList<>(request.getBugIds());
         if (bugMap.containsKey(id)) {
             bugIds.removeAll(bugMap.get(id));
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/PostmanAbstractParserParserApiDefinition.java
Patch:
@@ -28,6 +28,7 @@
 import io.metersphere.project.dto.environment.auth.HTTPAuthConfig;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.BooleanUtils;
+import org.apache.commons.lang3.ObjectUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.NotNull;
 
@@ -175,7 +176,7 @@ private static void setBody(PostmanRequest requestDesc, MsHTTPElement request) {
     private static void setRaw(JsonNode bodyNode, MsHTTPElement request) {
         JsonNode rawNode = bodyNode.get(RAW);
         JsonNode optionNode = bodyNode.get(OPTIONS);
-        if (optionNode != null) {
+        if (ObjectUtils.allNotNull(rawNode, optionNode)) {
             if (optionNode instanceof ObjectNode optionObject) {
                 JsonNode languageNode = optionObject.get(RAW).get(La);
                 if (languageNode instanceof TextNode languageText) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/AbstractCustomFieldValidator.java
Patch:
@@ -43,6 +43,9 @@ public Object parse2Key(String keyOrValue, TemplateCustomFieldDTO customField) {
 
     protected void validateRequired(TemplateCustomFieldDTO customField, String value) throws CustomFieldValidateException {
         if (customField.getRequired() && StringUtils.isBlank(value)) {
+            if (StringUtils.equalsIgnoreCase(customField.getInternalFieldKey(),"functional_priority")) {
+                return;
+            }
             CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_required_tip"), customField.getFieldName()));
         }
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -648,6 +648,7 @@ private void handleApiData(List<BaseCollectionAssociateRequest> apiCaseList, Ses
                 super.checkCollection(testPlan.getId(), apiCase.getCollectionId(), CaseType.API_CASE.getKey());
                 boolean selectAllModule = apiCase.getModules().isSelectAllModule();
                 Map<String, ModuleSelectDTO> moduleMaps = apiCase.getModules().getModuleMaps();
+                moduleMaps.remove(MODULE_ALL);
                 if (selectAllModule) {
                     // 选择了全部模块
                     List<ApiTestCase> apiTestCaseList = extApiTestCaseMapper.selectAllApiCase(isRepeat, apiCase.getModules().getProjectId(), testPlan.getId(), apiCase.getModules().getProtocols());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseFileService.java
Patch:
@@ -330,7 +330,7 @@ public FunctionalCaseImportResponse preCheckXMind(FunctionalCaseImportRequest re
             XMindCaseParser xMindParser = new XMindCaseParser(request, customFields, user, lasePos);
             errList = xMindParser.parse(multipartFile);
             response.setErrorMessages(errList);
-            response.setSuccessCount(xMindParser.getList().size() + xMindParser.getUpdateList().size());
+            response.setSuccessCount(xMindParser.getList().size() + xMindParser.getUpdateList().size()+ xMindParser.getCheckSuccessList().size());
             response.setFailCount(errList.size());
             xMindParser.clear();
             return response;
@@ -407,7 +407,7 @@ public FunctionalCaseImportResponse importXMind(FunctionalCaseImportRequest requ
             }
             xmindParser.saveData();
             response.setErrorMessages(errList);
-            response.setSuccessCount(xmindParser.getList().size() + xmindParser.getUpdateList().size());
+            response.setSuccessCount(xmindParser.getList().size() + xmindParser.getUpdateList().size()+ xmindParser.getCheckSuccessList().size());
             response.setFailCount(errList.size());
             xmindParser.clear();
             return response;

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindCaseParser.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.functional.xmind.pojo.Attached;
 import io.metersphere.functional.xmind.pojo.JsonRootBean;
 import io.metersphere.functional.xmind.utils.DetailUtil;
+import io.metersphere.plugin.platform.enums.PlatformCustomFieldType;
 import io.metersphere.sdk.util.CommonBeanFactory;
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
@@ -361,7 +362,7 @@ private void formatTestCase(String title, String nodePath, List<Attached> attach
                     }
                 } else {
                     //自定义字段
-                    String[] customFiled = item.getTitle().split("(?:\\s*:|：)");
+                    String[] customFiled = item.getTitle().split("(?:\\s*:|：)",2);
                     Map<String, Object> stringObjectMap = testCase.getCustomData();
                     if (customFiled.length > 1) {
                         TemplateCustomFieldDTO templateCustomFieldDTO = customFieldsMap.get(customFiled[0]);

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldValidatorFactory.java
Patch:
@@ -29,7 +29,7 @@ public static HashMap<String, AbstractCustomFieldValidator> getValidatorMap(Stri
         validatorMap.put(CustomFieldType.DATETIME.name(), new CustomFieldDateTimeValidator());
 
         validatorMap.put(CustomFieldType.MEMBER.name(), new CustomFieldMemberValidator(projectId));
-        validatorMap.put(CustomFieldType.MULTIPLE_MEMBER.name(), new CustomFieldMultipleMemberValidator());
+        validatorMap.put(CustomFieldType.MULTIPLE_MEMBER.name(), new CustomFieldMultipleMemberValidator(projectId));
 
         validatorMap.put(CustomFieldType.INT.name(), new CustomFieldIntegerValidator());
         validatorMap.put(CustomFieldType.FLOAT.name(), new CustomFieldFloatValidator());

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/HttpRequestParamDiffUtils.java
Patch:
@@ -303,7 +303,7 @@ public static AbstractMsTestElement syncRequestDiff(ApiCaseSyncRequest request,
      * @return
      */
     public static Body syncBodyDiff(boolean isDeleteRedundantParam, Body sourceBody, Body targetBody) {
-        if (sourceBody == null || targetBody == null || sourceBody.getBodyType() != targetBody.getBodyType()) {
+        if (sourceBody == null || targetBody == null || !StringUtils.equals(sourceBody.getBodyType(), targetBody.getBodyType())) {
             return sourceBody;
         }
         Body.BodyType bodyType = EnumValidator.validateEnum(Body.BodyType.class, sourceBody.getBodyType());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseFileService.java
Patch:
@@ -786,9 +786,6 @@ private Map<String, List<FunctionalCaseComment>> getCaseComment(List<String> ids
      * @param request
      */
     private void buildExportCustomField(List<TemplateCustomFieldDTO> templateCustomFields, List<FunctionalCaseCustomField> functionalCaseCustomFields, FunctionalCaseExcelData data, FunctionalCaseExportRequest request) {
-        if (CollectionUtils.isEmpty(request.getCustomFields())) {
-            return;
-        }
         HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
         Map<String, TemplateCustomFieldDTO> customFieldsMap = templateCustomFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldId, i -> i));
         Map<String, String> caseFieldvalueMap = functionalCaseCustomFields.stream().collect(Collectors.toMap(FunctionalCaseCustomField::getFieldId, FunctionalCaseCustomField::getValue));
@@ -803,6 +800,8 @@ private void buildExportCustomField(List<TemplateCustomFieldDTO> templateCustomF
                     } else {
                         map.put(Translator.get("custom_field.functional_priority"), caseFieldvalueMap.get(k));
                     }
+                } else {
+                    map.put(v.getFieldName(), caseFieldvalueMap.get(k));
                 }
             }
         });

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/utils/XmindExportUtil.java
Patch:
@@ -482,6 +482,8 @@ private static void buildTopic(ITopic topic, IStyle style, FunctionalCaseXmindDT
                     } else {
                         value = customFieldMap.get(k);
                     }
+                } else {
+                    value = customFieldMap.get(k);
                 }
 
                 ITopic preTopic = workbook.createTopic();

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -58,8 +58,8 @@ public Object parse2Value(String keyOrValuesStr, TemplateCustomFieldDTO customFi
 
         for (int i = 0; i < keyOrValues.size(); i++) {
             String item = keyOrValues.get(i).toLowerCase();
-            if (userNameMap.containsKey(item)) {
-                keyOrValues.set(i, userNameMap.get(item));
+            if (userIdEmailMap.containsKey(item)) {
+                keyOrValues.set(i, userIdEmailMap.get(item));
             }
         }
         return JSON.toJSONString(keyOrValues);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -1247,7 +1247,7 @@ private List<FunctionalCaseCustomField> handleImportCustomField(FunctionalCaseEx
         Map<String, Object> customData = functionalCaseExcelData.getCustomData();
         customFieldsMap.forEach((k, v) -> {
             //用例等级如果没有默认值，则为P0
-            if (StringUtils.equalsIgnoreCase(v.getInternalFieldKey(), "functional_priority") && v.getDefaultValue()==null) {
+            if (StringUtils.equalsIgnoreCase(v.getInternalFieldKey(), "functional_priority") && (v.getDefaultValue() == null || StringUtils.isBlank(v.getDefaultValue().toString()))) {
                 v.setDefaultValue("P0");
             }
             Object value = customData.get(k);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseFileService.java
Patch:
@@ -864,7 +864,7 @@ public String parseHtml(String html) {
             String content = matcher.group(1);
             return content;
         }
-        return StringUtils.EMPTY;
+        return html;
     }
 
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -906,13 +906,13 @@ public void batchCopyFunctionalCase(FunctionalCaseBatchMoveRequest request, Stri
                 functionalCaseMapper.batchInsert(subList);
             });
             SubListUtils.dealForSubList(addBlobList, 500, subList -> {
-                functionalCaseBlobMapper.batchInsert(addBlobList);
+                functionalCaseBlobMapper.batchInsert(subList);
             });
             SubListUtils.dealForSubList(addAttachMentList, 500, subList -> {
-                functionalCaseAttachmentService.batchSaveAttachment(addAttachMentList);
+                functionalCaseAttachmentService.batchSaveAttachment(subList);
             });
             SubListUtils.dealForSubList(addCustomFieldList, 500, subList -> {
-                functionalCaseCustomFieldService.batchSaveCustomField(addCustomFieldList);
+                functionalCaseCustomFieldService.batchSaveCustomField(subList);
             });
             addFileAssociationMap.entrySet().forEach(entry -> {
                 functionalCaseAttachmentService.association(entry.getValue(), entry.getKey(), userId, FUNCTIONAL_CASE_BATCH_COPY_FILE_LOG_URL, request.getProjectId());

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewFunctionalCaseController.java
Patch:
@@ -121,7 +121,7 @@ public void batchReview(@Validated @RequestBody BatchReviewFunctionalCaseRequest
 
 
     @PostMapping("/mind/multiple/review")
-    @Operation(summary = "用例管理-用例评审-评审列表-评审详情-列表-批量评审")
+    @Operation(summary = "评审详情-脑图-多人评审返回评审结果")
     @RequiresPermissions(value = {PermissionConstants.CASE_REVIEW_REVIEW, PermissionConstants.CASE_REVIEW_READ_UPDATE}, logical = Logical.OR)
     @CheckOwner(resourceId = "#request.getReviewId()", resourceType = "case_review")
     public String mindReview(@Validated @RequestBody MindReviewFunctionalCaseRequest request) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -723,6 +723,9 @@ public List<TestPlanCaseExecHistoryResponse> getCaseExecHistory(TestPlanCaseExec
 
     public TestPlanCaseDetailResponse getFunctionalCaseDetail(String id, String userId) {
         TestPlanFunctionalCase planFunctionalCase = testPlanFunctionalCaseMapper.selectByPrimaryKey(id);
+        if(planFunctionalCase == null){
+            throw new MSException(Translator.get("resource_not_exist"));
+        }
         String caseId = planFunctionalCase.getFunctionalCaseId();
         FunctionalCaseDetailDTO functionalCaseDetail = functionalCaseService.getFunctionalCaseDetail(caseId, userId, false);
         String caseDetailSteps = functionalCaseDetail.getSteps();

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindCaseParser.java
Patch:
@@ -403,7 +403,7 @@ public void saveData() {
      */
     private String getSteps(List<Attached> attacheds, String caseName) {
         List<FunctionalCaseStepDTO> functionalCaseStepDTOS = new ArrayList<>();
-        if (!attacheds.isEmpty()) {
+        if (attacheds!=null && !attacheds.isEmpty()) {
             for (int i = 0; i < attacheds.size(); i++) {
                 // 保持插入顺序，判断用例是否有相同的steps
                 FunctionalCaseStepDTO functionalCaseStepDTO = new FunctionalCaseStepDTO();

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindCaseParser.java
Patch:
@@ -173,7 +173,7 @@ public boolean validate(FunctionalCaseExcelData data) {
     private boolean validateTags(FunctionalCaseExcelData data) {
         AtomicBoolean validate = new AtomicBoolean(true);
         if (StringUtils.isBlank(data.getTags())) {
-            data.setTags("");
+            data.setTags(StringUtils.EMPTY);
             return validate.get();
         }
         List<String> tags = functionalCaseService.handleImportTags(data.getTags());
@@ -286,6 +286,8 @@ private void handleId(FunctionalCaseExcelData functionalCaseExcelData) {
                     //如果是覆盖，那么有id的需要更新
                     functionalCaseExcelData.setNum(checkResult);
                     updateList.add(functionalCaseExcelData);
+                } else {
+                    list.add(functionalCaseExcelData);
                 }
             } else {
                 list.add(functionalCaseExcelData);

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/converter/FunctionalCaseExecuteStatus.java
Patch:
@@ -6,9 +6,9 @@
 public enum FunctionalCaseExecuteStatus {
 
     PENDING("case.execute.status.pending", 1),
-    SUCCESS("case.minder.status.success", 2),
-    BLOCKED("case.minder.status.blocked", 3),
-    ERROR("case.minder.status.error", 4);
+    SUCCESS("case.execute.status.success", 2),
+    BLOCKED("case.execute.status.blocked", 3),
+    ERROR("case.execute.status.error", 4);
 
     private String i18nKey;
     private Integer order;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -921,6 +921,8 @@ public ApiDefinitionDTO getApiDefinitionInfo(String id, String userId, ApiDefini
         ApiDefinitionModule apiDefinitionModule = apiDefinitionModuleMapper.selectByPrimaryKey(apiDefinitionDTO.getModuleId());
         if (apiDefinitionModule != null) {
             apiDefinitionDTO.setModuleName(apiDefinitionModule.getName());
+        } else {
+            apiDefinitionDTO.setModuleName(Translator.get("api_unplanned_request"));
         }
         return apiDefinitionDTO;
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugCommentNoticeService.java
Patch:
@@ -81,9 +81,9 @@ public void sendNotice(String event, BugCommentNoticeDTO noticeDTO, String curre
 
     private static void setLanguage(String language) {
         Locale locale = Locale.SIMPLIFIED_CHINESE;
-        if (StringUtils.containsIgnoreCase("US",language)) {
+        if (StringUtils.containsIgnoreCase(language, "US")) {
             locale = Locale.US;
-        } else if (StringUtils.containsIgnoreCase("TW",language)){
+        } else if (StringUtils.containsIgnoreCase(language, "TW")){
             locale = Locale.TAIWAN;
         }
         LocaleContextHolder.setLocale(locale);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncNoticeService.java
Patch:
@@ -89,9 +89,9 @@ public void sendHandleUserNotice(Bug bug, String currentUser) {
 
     private static void setLanguage(String language) {
         Locale locale = Locale.SIMPLIFIED_CHINESE;
-        if (StringUtils.containsIgnoreCase("US",language)) {
+        if (StringUtils.containsIgnoreCase(language, "US")) {
             locale = Locale.US;
-        } else if (StringUtils.containsIgnoreCase("TW",language)){
+        } else if (StringUtils.containsIgnoreCase(language, "TW")){
             locale = Locale.TAIWAN;
         }
         LocaleContextHolder.setLocale(locale);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseCommentService.java
Patch:
@@ -193,9 +193,9 @@ public void sendNotice(FunctionalCaseCommentRequest functionalCaseCommentRequest
 
     private static void setLanguage(String language) {
         Locale locale = Locale.SIMPLIFIED_CHINESE;
-        if (StringUtils.containsIgnoreCase("US",language)) {
+        if (StringUtils.containsIgnoreCase(language, "US")) {
             locale = Locale.US;
-        } else if (StringUtils.containsIgnoreCase("TW",language)){
+        } else if (StringUtils.containsIgnoreCase(language, "TW")){
             locale = Locale.TAIWAN;
         }
         LocaleContextHolder.setLocale(locale);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/ReviewSendNoticeService.java
Patch:
@@ -89,9 +89,9 @@ public void sendNoticeCase(List<String> relatedUsers, String userId, String case
 
     private static void setLanguage(String language) {
         Locale locale = Locale.SIMPLIFIED_CHINESE;
-        if (StringUtils.containsIgnoreCase("US",language)) {
+        if (StringUtils.containsIgnoreCase(language, "US")) {
             locale = Locale.US;
-        } else if (StringUtils.containsIgnoreCase("TW",language)){
+        } else if (StringUtils.containsIgnoreCase(language, "TW")){
             locale = Locale.TAIWAN;
         }
         LocaleContextHolder.setLocale(locale);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CommonNoticeSendService.java
Patch:
@@ -116,9 +116,9 @@ private String getSubject(String taskType, String event) {
 
     private static void setLanguage(String language) {
         Locale locale = Locale.SIMPLIFIED_CHINESE;
-        if (StringUtils.containsIgnoreCase("US", language)) {
+        if (StringUtils.containsIgnoreCase(language, "US")) {
             locale = Locale.US;
-        } else if (StringUtils.containsIgnoreCase("TW", language)) {
+        } else if (StringUtils.containsIgnoreCase(language, "TW")) {
             locale = Locale.TAIWAN;
         }
         LocaleContextHolder.setLocale(locale);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanSendNoticeService.java
Patch:
@@ -98,9 +98,9 @@ public void sendNoticeCase(List<String> relatedUsers, String userId, String case
 
 	private static void setLanguage(String language) {
 		Locale locale = Locale.SIMPLIFIED_CHINESE;
-		if (StringUtils.containsIgnoreCase("US", language)) {
+		if (StringUtils.containsIgnoreCase(language, "US")) {
 			locale = Locale.US;
-		} else if (StringUtils.containsIgnoreCase("TW", language)) {
+		} else if (StringUtils.containsIgnoreCase(language, "TW")) {
 			locale = Locale.TAIWAN;
 		}
 		LocaleContextHolder.setLocale(locale);

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/utils/DetailUtil.java
Patch:
@@ -62,7 +62,7 @@ public List<ExcelErrData<FunctionalCaseExcelData>> parse() {
             }
         }
         if (emptyName>0) {
-            ExcelErrData excelErrData = new ExcelErrData(result.size(), "部分用例名称为空，校验失败；");
+            ExcelErrData excelErrData = new ExcelErrData(result.size(), Translator.get("mind_import_case_name_empty"));
             errList.add(excelErrData);
         }
         return errList;

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseCustomFieldDTO.java
Patch:
@@ -38,4 +38,7 @@ public class FunctionalCaseCustomFieldDTO implements Serializable {
     @Schema(title = "字段类型")
     private String type;
 
+    @Schema(title = "字段key名")
+    private String internalFieldKey;
+
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldSelectValidator.java
Patch:
@@ -62,7 +62,7 @@ public Object parse2Key(String keyOrValuesStr, TemplateCustomFieldDTO customFiel
 
     @Override
     public Object parse2Value(String keyOrValuesStr, TemplateCustomFieldDTO customField) {
-        Map<String, String> optionValueMap = customField.getOptions().stream().collect(Collectors.toMap(CustomFieldOption::getFieldId, CustomFieldOption::getValue));
+        Map<String, String> optionValueMap = customField.getOptions().stream().collect(Collectors.toMap(CustomFieldOption::getValue, CustomFieldOption::getText));
         if (optionValueMap.containsKey(keyOrValuesStr)) {
             return optionValueMap.get(keyOrValuesStr);
         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/converter/FunctionalCaseExportCaseCommentConverter.java
Patch:
@@ -24,7 +24,7 @@ public String parse(FunctionalCase functionalCase, Map<String, List<FunctionalCa
             List<FunctionalCaseComment> caseComments = caseCommentMap.get(functionalCase.getId());
             caseComments.forEach(item -> {
                 String updateTime = DateUtils.getTimeString(item.getUpdateTime());
-                String content = item.getContent();
+                String content = parseHtml(item.getContent());
                 result.append(String.format(template, item.getCreateUser(), updateTime, content));
             });
             return result.toString();

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/converter/FunctionalCaseExportExecuteCommentConverter.java
Patch:
@@ -36,9 +36,10 @@ public String parse(FunctionalCase functionalCase, Map<String, List<FunctionalCa
             executeComment.forEach(item -> {
                 String status = getFromMapOfNullableWithTranslate(executeStatusMap, item.getStatus());
                 String createTime = DateUtils.getTimeString(item.getCreateTime());
-                String content = new String(item.getContent() == null ? new byte[0] : item.getContent(), StandardCharsets.UTF_8);
+                String content = parseHtml(new String(item.getContent() == null ? new byte[0] : item.getContent(), StandardCharsets.UTF_8));
                 result.append(String.format(template, item.getCreateUser(), status, createTime, content));
             });
+            return result.toString();
         }
         return StringUtils.EMPTY;
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/converter/FunctionalCaseExportReviewCommentConverter.java
Patch:
@@ -35,9 +35,10 @@ public String parse(FunctionalCase functionalCase, Map<String, List<FunctionalCa
             reviewComent.forEach(item -> {
                 String status = getFromMapOfNullableWithTranslate(reviewStatusMap, item.getStatus());
                 String createTime = DateUtils.getTimeString(item.getCreateTime());
-                String content = new String(item.getContent() == null ? new byte[0] : item.getContent(), StandardCharsets.UTF_8);
+                String content = parseHtml(new String(item.getContent() == null ? new byte[0] : item.getContent(), StandardCharsets.UTF_8));
                 result.append(String.format(template, item.getCreateUser(), status, createTime, content));
             });
+            return result.toString();
         }
         return StringUtils.EMPTY;
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/domain/FunctionalCaseExportColumns.java
Patch:
@@ -34,6 +34,9 @@ public FunctionalCaseExportColumns() {
         otherColumns.put("create_time", Translator.get("case.export.system.other.columns.create_time"));
         otherColumns.put("update_user", Translator.get("case.export.system.other.columns.update_user"));
         otherColumns.put("update_time", Translator.get("case.export.system.other.columns.update_time"));
+        otherColumns.put("case_comment", Translator.get("case.export.system.other.columns.case_comment"));
+        otherColumns.put("execute_comment", Translator.get("case.export.system.other.columns.execute_comment"));
+        otherColumns.put("review_comment", Translator.get("case.export.system.other.columns.review_comment"));
 
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanCollectionMinderEditDTO.java
Patch:
@@ -21,6 +21,9 @@ public class TestPlanCollectionMinderEditDTO implements Serializable {
     @Schema(description = "节点ID(新增的时候前端传UUid，更新的时候必填)")
     private String id;
 
+    @Schema(description = "是否临时节点 {新增节点时, 传入true}")
+    private Boolean tempCollectionNode = false;
+
     @Schema(description = "节点名称")
     @NotBlank(message = "{test_plan_collection.name.not_blank}")
     private String text;

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanCollectionMinderControllerTests.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.UUID;
 
 import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
 
@@ -157,7 +158,8 @@ void editMind() throws Exception {
         editList = new ArrayList<>();
         editList.addAll(parentList);
         testPlanCollectionMinderEditDTO = new TestPlanCollectionMinderEditDTO();
-        testPlanCollectionMinderEditDTO.setId(null);
+        testPlanCollectionMinderEditDTO.setId(UUID.randomUUID().toString());
+        testPlanCollectionMinderEditDTO.setTempCollectionNode(true);
         testPlanCollectionMinderEditDTO.setText("新建名称");
         testPlanCollectionMinderEditDTO.setNum(500L);
         testPlanCollectionMinderEditDTO.setLevel(2);

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseUpdateRequest.java
Patch:
@@ -41,7 +41,7 @@ public class ApiTestCaseUpdateRequest implements Serializable {
     @Schema(description = "标签")
     private List<
             @NotBlank
-            @Size(min = 1, max = 50, message = "{api_test_case.tag.length_range}")
+            @Size(min = 1, max = 64, message = "{api_test_case.tag.length_range}")
                     String> tags;
 
     @Schema(description = "环境fk")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -769,6 +769,8 @@ public TaskRequestDTO doExecute(TaskRequestDTO taskRequest, ApiResourceRunReques
 
         // 设置环境
         apiParamConfig.setEnvConfig(environmentService.get(envId));
+
+        taskRequest.getTaskInfo().getRunModeConfig().setEnvironmentId(envId);
         // 设置 method 等信息
         apiCommonService.setApiDefinitionExecuteInfo(runRequest.getTestElement(), apiDefinition);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseCheckEventListener.java
Patch:
@@ -61,7 +61,7 @@ public class FunctionalCaseCheckEventListener extends AnalysisEventListener<Map<
     protected List<ExcelErrData<FunctionalCaseExcelData>> errList = new ArrayList<>();
     private static final String ERROR_MSG_SEPARATOR = ";";
     private HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap;
-    protected static final int TAGS_COUNT = 15;
+    protected static final int TAGS_COUNT = 10;
     protected static final int TAG_LENGTH = 64;
     protected static final int STEP_LENGTH = 1000;
     private FunctionalCaseService functionalCaseService;

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseImportEventListener.java
Patch:
@@ -82,7 +82,7 @@ public class FunctionalCaseImportEventListener extends AnalysisEventListener<Map
     private SessionUser user;
     private int successCount = 0;
     private Map<String, String> pathMap = new HashMap<>();
-    protected static final int TAGS_COUNT = 15;
+    protected static final int TAGS_COUNT = 10;
     protected static final int TAG_LENGTH = 64;
 
     private AtomicLong lastPos;

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindParser.java
Patch:
@@ -66,7 +66,7 @@ public static List<JsonRootBean> parseObject(MultipartFile multipartFile) throws
         List<JsonRootBean> jsonRootBeans = new ArrayList<>();
         if (contents != null) {
             for (String content : contents) {
-                caseCount += content.split("(?:case-|CASE-)").length;
+                caseCount += content.split("((?i)case)").length;
                 JsonRootBean jsonRootBean = JSON.parseObject(content, JsonRootBean.class);
                 jsonRootBeans.add(jsonRootBean);
             }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleTextValidator.java
Patch:
@@ -57,8 +57,7 @@ public Object parse2Value(String keyOrValuesStr, TemplateCustomFieldDTO customFi
         if (StringUtils.isBlank(keyOrValuesStr) || StringUtils.equals(keyOrValuesStr, "[]")) {
             return JSON.toJSONString(new ArrayList<>());
         }
-        List<String> keyOrValues = parse2Array(keyOrValuesStr);
-
-        return JSON.toJSONString(keyOrValues);
+        String keyOrValues = String.join(",", JSON.parseArray(keyOrValuesStr));
+        return keyOrValues;
     }
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/domain/FunctionalCaseExportColumns.java
Patch:
@@ -24,6 +24,7 @@ public FunctionalCaseExportColumns() {
         systemColumns.put("module", Translator.get("case.export.system.columns.module"));
         systemColumns.put("text_description", Translator.get("case.export.system.columns.text_description"));
         systemColumns.put("expected_result", Translator.get("case.export.system.columns.expected_result"));
+        systemColumns.put("tags", Translator.get("xmind_tags"));
 
         // 其他字段
         otherColumns.put("last_execute_result", Translator.get("case.export.system.other.columns.last_execute_result"));

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseFileService.java
Patch:
@@ -630,6 +630,8 @@ private void buildBaseField(FunctionalCaseExcelData data, FunctionalCase functio
         buildExportStep(data, functionalCaseBlob, functionalCase.getCaseEditType(), textDescriptionList, expectedResultList);
         data.setPrerequisite(new String(functionalCaseBlob.getPrerequisite() == null ? new byte[0] : functionalCaseBlob.getPrerequisite(), StandardCharsets.UTF_8));
 
+        //标签
+        data.setTags(JSON.toJSONString(functionalCase.getTags()));
         // 设置超链接
         WriteCellData<String> hyperlink = new WriteCellData<>(functionalCase.getName());
         data.setHyperLinkName(hyperlink);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseXmindService.java
Patch:
@@ -236,7 +236,7 @@ private List<FunctionalCaseXmindDTO> buildXmindDTO(List<FunctionalCase> dataList
             dto.setNum(item.getNum().toString());
             dto.setProjectId(item.getProjectId());
             dto.setName(item.getName());
-            dto.setTags(item.getTags().toString());
+            dto.setTags(JSON.toJSONString(item.getTags()));
             dto.setCaseEditType(item.getCaseEditType());
             dto.setSteps(new String(functionalCaseBlob.getSteps() == null ? new byte[0] : functionalCaseBlob.getSteps(), StandardCharsets.UTF_8));
             dto.setTextDescription(new String(functionalCaseBlob.getTextDescription() == null ? new byte[0] : functionalCaseBlob.getTextDescription(), StandardCharsets.UTF_8));

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/converter/FunctionalCaseExportCreateUserConverter.java
Patch:
@@ -7,7 +7,6 @@
 import io.metersphere.project.service.ProjectApplicationService;
 import io.metersphere.sdk.util.CommonBeanFactory;
 import io.metersphere.system.domain.User;
-import io.metersphere.system.utils.SessionUtils;
 
 import java.util.HashMap;
 import java.util.List;
@@ -20,9 +19,9 @@ public class FunctionalCaseExportCreateUserConverter implements FunctionalCaseEx
 
     public Map<String, String> userMap = new HashMap<>();
 
-    public FunctionalCaseExportCreateUserConverter() {
+    public FunctionalCaseExportCreateUserConverter(String projectId) {
         ProjectApplicationService projectApplicationService = CommonBeanFactory.getBean(ProjectApplicationService.class);
-        List<User> memberOption = projectApplicationService.getProjectUserList(SessionUtils.getCurrentProjectId());
+        List<User> memberOption = projectApplicationService.getProjectUserList(projectId);
         memberOption.forEach(option -> userMap.put(option.getId(), option.getName()));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsJsonBodyConverter.java
Patch:
@@ -128,7 +128,7 @@ private void parseMock(Map map) {
      * @return
      */
     protected String replaceMockComma(String text) {
-        String pattern = "\\$\\{__Mock\\((.+)\\)\\}";
+        String pattern = "\\$\\{__Mock\\((.+?)\\)\\}";
         Pattern regex = Pattern.compile(pattern);
         Matcher matcher = regex.matcher(text);
         while (matcher.find()) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/TestPlanCaseExecuteHistoryDTO.java
Patch:
@@ -31,4 +31,7 @@ public class TestPlanCaseExecuteHistoryDTO extends TestPlanCaseExecuteHistory {
     @Schema(description =  "编辑模式")
     private String caseEditType;
 
+    @Schema(description = "是否显示步骤信息")
+    private boolean showResult = false;
+
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindCaseParser.java
Patch:
@@ -353,7 +353,7 @@ private void formatTestCase(String title, String nodePath, List<Attached> attach
                     if (StringUtils.isBlank(tag)) {
                         testCase.setTags("");
                     } else {
-                        String[] tagArr = tag.split("\\|");
+                        String[] tagArr = tag.split("\\s*[|｜]\\s*");
                         if (CollectionUtils.isNotEmpty(Arrays.asList(tagArr))) {
                             testCase.setTags(String.join(",", tagArr));
                         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseCheckEventListener.java
Patch:
@@ -71,7 +71,7 @@ public FunctionalCaseCheckEventListener(FunctionalCaseImportRequest request, Cla
         excelDataClass = clazz;
         //当前项目模板的自定义字段
         customFieldsMap = customFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldName, i -> i));
-        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap();
+        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
         functionalCaseService = CommonBeanFactory.getBean(FunctionalCaseService.class);
 
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseImportEventListener.java
Patch:
@@ -95,7 +95,7 @@ public FunctionalCaseImportEventListener(FunctionalCaseImportRequest request, Cl
         customFieldsMap = customFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldName, i -> i));
         moduleTree = CommonBeanFactory.getBean(FunctionalCaseModuleService.class).getTree(request.getProjectId());
         functionalCaseService = CommonBeanFactory.getBean(FunctionalCaseService.class);
-        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap();
+        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
         lastPos = new AtomicLong(pos);
         this.user = user;
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldValidatorFactory.java
Patch:
@@ -11,7 +11,8 @@
 public class CustomFieldValidatorFactory {
 
     private static final HashMap<String, AbstractCustomFieldValidator> validatorMap = new HashMap<>();
-    public static HashMap<String, AbstractCustomFieldValidator> getValidatorMap() {
+
+    public static HashMap<String, AbstractCustomFieldValidator> getValidatorMap(String projectId) {
         validatorMap.put(CustomFieldType.SELECT.name(), new CustomFieldSelectValidator());
         validatorMap.put(CustomFieldType.SELECT.name(), new CustomFieldSelectValidator());
         validatorMap.put(CustomFieldType.RADIO.name(), new CustomFieldSelectValidator());
@@ -27,7 +28,7 @@ public static HashMap<String, AbstractCustomFieldValidator> getValidatorMap() {
         validatorMap.put(CustomFieldType.DATE.name(), new CustomFieldDateValidator());
         validatorMap.put(CustomFieldType.DATETIME.name(), new CustomFieldDateTimeValidator());
 
-        validatorMap.put(CustomFieldType.MEMBER.name(), new CustomFieldMemberValidator());
+        validatorMap.put(CustomFieldType.MEMBER.name(), new CustomFieldMemberValidator(projectId));
         validatorMap.put(CustomFieldType.MULTIPLE_MEMBER.name(), new CustomFieldMultipleMemberValidator());
 
         validatorMap.put(CustomFieldType.INT.name(), new CustomFieldIntegerValidator());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseFileService.java
Patch:
@@ -755,7 +755,7 @@ private void buildExportCustomField(List<TemplateCustomFieldDTO> templateCustomF
         if (CollectionUtils.isEmpty(request.getCustomFields())) {
             return;
         }
-        HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap();
+        HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
         Map<String, TemplateCustomFieldDTO> customFieldsMap = templateCustomFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldId, i -> i));
         Map<String, String> caseFieldvalueMap = functionalCaseCustomFields.stream().collect(Collectors.toMap(FunctionalCaseCustomField::getFieldId, FunctionalCaseCustomField::getValue));
         Map<String, Object> map = new HashMap<>();

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/parser/XMindCaseParser.java
Patch:
@@ -72,7 +72,7 @@ public XMindCaseParser(FunctionalCaseImportRequest request, List<TemplateCustomF
         customFieldsMap = customFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldName, i -> i));
         functionalCaseService = CommonBeanFactory.getBean(FunctionalCaseService.class);
         moduleTree = CommonBeanFactory.getBean(FunctionalCaseModuleService.class).getTree(request.getProjectId());
-        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap();
+        customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
         lastPos = new AtomicLong(pos);
         this.user = user;
         process = new DetailUtil();

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/utils/XmindExportUtil.java
Patch:
@@ -518,7 +518,7 @@ private static void buildTopic(ITopic topic, IStyle style, FunctionalCaseXmindDT
         //自定义字段
         Map<String, String> customColumnsMap = request.getCustomFields().stream().collect(Collectors.toMap(FunctionalCaseHeader::getId, FunctionalCaseHeader::getName));
         Map<String, TemplateCustomFieldDTO> temCustomFieldsMap = templateCustomFields.stream().collect(Collectors.toMap(TemplateCustomFieldDTO::getFieldId, i -> i));
-        HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap();
+        HashMap<String, AbstractCustomFieldValidator> customFieldValidatorMap = CustomFieldValidatorFactory.getValidatorMap(request.getProjectId());
 
         customColumnsMap.forEach((k, v) -> {
             if (customFieldMap.containsKey(k) && temCustomFieldsMap.containsKey(k)) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseLogService.java
Patch:
@@ -236,7 +236,7 @@ public void batchRecoverLog(List<ApiTestCase> apiTestCases, String operator, Str
         saveBatchLog(projectId, apiTestCases, operator, OperationLogType.RECOVER.name(), false, OperationLogModule.API_TEST_MANAGEMENT_RECYCLE);
     }
 
-    public void batchSyncLog(Map<String, ApiTestCaseLogDTO> originMap, Map<String, ApiTestCaseLogDTO> modifiedMap, Project project) {
+    public void batchSyncLog(Map<String, ApiTestCaseLogDTO> originMap, Map<String, ApiTestCaseLogDTO> modifiedMap, Project project, String userId) {
         List<LogDTO> logs = new ArrayList<>();
         originMap.forEach((id, origin) -> {
             ApiTestCaseLogDTO modified = modifiedMap.get(id);
@@ -251,7 +251,7 @@ public void batchSyncLog(Map<String, ApiTestCaseLogDTO> originMap, Map<String, A
                     .method(HttpMethodConstants.POST.name())
                     .sourceId(id)
                     .content(origin.getName())
-                    .createUser(null)
+                    .createUser(userId)
                     .path(OperationLogAspect.getPath())
                     .originalValue(ApiDataUtils.toJSONBytes(origin))
                     .modifiedValue(ApiDataUtils.toJSONBytes(modified))

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -1062,7 +1062,7 @@ public void doBatchSyncApiChange(ApiCaseBatchSyncRequest request, List<String> i
                     modifiedMap.put(apiTestCase.getId(), originCase);
                 }
             }
-            apiTestCaseLogService.batchSyncLog(originMap, modifiedMap, project);
+            apiTestCaseLogService.batchSyncLog(originMap, modifiedMap, project, userId);
 
             User user = userMapper.selectByPrimaryKey(userId);
             apiTestCaseNoticeService.batchSyncSendNotice(new ArrayList<>(modifiedMap.values()), user, project.getId(), request.getNotificationConfig(), NoticeConstants.Event.CASE_UPDATE);

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -237,7 +237,7 @@ public FunctionalCaseImportResponse preCheckExcel(@RequestPart("request") Functi
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public FunctionalCaseImportResponse preCheckXMind(@RequestPart("request") FunctionalCaseImportRequest request, @RequestPart(value = "file", required = false) MultipartFile file) {
         SessionUser user = SessionUtils.getUser();
-        return functionalCaseFileService.preCheckXMind(request,user, file);
+        return functionalCaseFileService.preCheckXMind(request, user, file);
     }
 
 
@@ -274,7 +274,7 @@ public Pager<List<OperationHistoryDTO>> operationHistoryList(@Validated @Request
     @Operation(summary = "用例管理-功能用例-excel导出")
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_EXPORT)
     public String testCaseExport(@Validated @RequestBody FunctionalCaseExportRequest request) {
-        return functionalCaseFileService.export(SessionUtils.getUserId(), request);
+        return functionalCaseFileService.export(SessionUtils.getUserId(), request, SessionUtils.getCurrentOrganizationId());
     }
 
     @GetMapping("/stop/{taskId}")
@@ -314,7 +314,7 @@ public ResponseEntity<byte[]> downloadImgById(@PathVariable String projectId, @P
     @Operation(summary = "用例管理-功能用例-xmind导出")
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_EXPORT)
     public String caseExportXmind(@Validated @RequestBody FunctionalCaseExportRequest request) {
-        return functionalCaseXmindService.exportFunctionalCaseXmind(request, SessionUtils.getUserId());
+        return functionalCaseXmindService.exportFunctionalCaseXmind(request, SessionUtils.getUserId(), SessionUtils.getCurrentOrganizationId());
     }
 
     @GetMapping(value = "/check/export-task")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanApiCaseRequest.java
Patch:
@@ -48,4 +48,7 @@ public class TestPlanApiCaseRequest extends BasePageRequest {
     @Size(max = 50, message = "{api_definition.ref_id.length_range}")
     private String refId;
 
+    @Schema(description = "是否包含空执行人")
+    private boolean nullExecutorKey;
+
 }
\ No newline at end of file

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanApiScenarioRequest.java
Patch:
@@ -49,4 +49,7 @@ public class TestPlanApiScenarioRequest extends BasePageRequest {
     @Schema(description = "查询时排除的ID")
     private List<String> excludeIds = new ArrayList<>();
 
+    @Schema(description = "是否包含空执行人")
+    private boolean nullExecutorKey;
+
 }
\ No newline at end of file

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanCaseRequest.java
Patch:
@@ -35,4 +35,7 @@ public class TestPlanCaseRequest extends BasePageRequest implements Serializable
 
     @Schema(description = "计划集id")
     private String collectionId;
+
+    @Schema(description = "是否包含空执行人")
+    private boolean nullExecutorKey;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/provider/AssociateApiProvider.java
Patch:
@@ -38,6 +38,9 @@ public class AssociateApiProvider implements BaseAssociateApiProvider, BaseAssoc
 
     @Override
     public List<TestCaseProviderDTO> getApiTestCaseList(String sourceType, String sourceName, String apiCaseColumnName, TestCasePageProviderRequest testCasePageProviderRequest) {
+        if (CollectionUtils.isEmpty(testCasePageProviderRequest.getProtocols())) {
+            return new ArrayList<>();
+        }
         return extApiTestCaseMapper.listByProviderRequest(sourceType, sourceName, apiCaseColumnName, testCasePageProviderRequest, false);
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/TestPlanCaseExecuteHistoryDTO.java
Patch:
@@ -28,5 +28,7 @@ public class TestPlanCaseExecuteHistoryDTO extends TestPlanCaseExecuteHistory {
     @Schema(description =  "测试计划id")
     private String testPlanId;
 
+    @Schema(description =  "编辑模式")
+    private String caseEditType;
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseXmindService.java
Patch:
@@ -140,12 +140,12 @@ private String exportXmind(FunctionalCaseExportRequest request, String userId) {
             ExportMsgDTO exportMsgDTO = new ExportMsgDTO(request.getFileId(), taskId, ids.size(), true, MsgType.EXEC_RESULT.name());
             ExportWebSocketHandler.sendMessageSingle(exportMsgDTO);
         } catch (Exception e) {
-            ExportMsgDTO exportMsgDTO = new ExportMsgDTO(request.getFileId(), "", 0, false, MsgType.EXEC_RESULT.name());
-            ExportWebSocketHandler.sendMessageSingle(exportMsgDTO);
             List<ExportTask> exportTasks = functionalCaseFileService.getExportTasks(request.getProjectId(), userId);
             if (CollectionUtils.isNotEmpty(exportTasks)) {
                 functionalCaseFileService.updateExportTask(ExportConstants.ExportState.ERROR.name(), exportTasks.getFirst().getId(), XMIND);
             }
+            ExportMsgDTO exportMsgDTO = new ExportMsgDTO(request.getFileId(), "", 0, false, MsgType.EXEC_RESULT.name());
+            ExportWebSocketHandler.sendMessageSingle(exportMsgDTO);
             LogUtils.error(e);
             throw new MSException(e);
         } finally {

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleTextValidator.java
Patch:
@@ -54,7 +54,7 @@ public Object parse2Key(String keyOrValuesStr, TemplateCustomFieldDTO customFiel
 
     @Override
     public Object parse2Value(String keyOrValuesStr, TemplateCustomFieldDTO customField) {
-        if (StringUtils.isBlank(keyOrValuesStr)) {
+        if (StringUtils.isBlank(keyOrValuesStr) || StringUtils.equals(keyOrValuesStr, "[]")) {
             return JSON.toJSONString(new ArrayList<>());
         }
         List<String> keyOrValues = parse2Array(keyOrValuesStr);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanCaseExecHistoryResponse.java
Patch:
@@ -26,5 +26,5 @@ public class TestPlanCaseExecHistoryResponse extends TestPlanCaseExecuteHistory
     private String email;
 
     @Schema(description = "步骤描述")
-    private boolean stepModule = false;
+    private String caseEditType;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -705,7 +705,6 @@ public List<TestPlanCaseExecHistoryResponse> getCaseExecHistory(TestPlanCaseExec
                 item.setContentText(new String(item.getContent(), StandardCharsets.UTF_8));
             }
             if (item.getSteps() != null) {
-                item.setStepModule(true);
                 item.setStepsExecResult(new String(item.getSteps(), StandardCharsets.UTF_8));
             }
         });

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectTemplateService.java
Patch:
@@ -400,7 +400,7 @@ public Map<String, Boolean> getProjectTemplateEnableConfig(String projectId) {
         ProjectService.checkResourceExist(projectId);
         ProjectDTO project = projectService.getProjectById(projectId);
         HashMap<String, Boolean> templateEnableConfig = new HashMap<>();
-        Arrays.stream(TemplateScene.values())
+        List.of(TemplateScene.FUNCTIONAL, TemplateScene.BUG)
                 .forEach(scene ->
                         templateEnableConfig.put(scene.name(), !isOrganizationTemplateEnable(project.getOrganizationId(), scene.name())));
         return templateEnableConfig;

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectTemplateControllerTests.java
Patch:
@@ -493,7 +493,7 @@ public void getProjectTemplateEnableConfig() throws Exception {
         // @@请求成功
         MvcResult mvcResult = this.requestGetWithOkAndReturn(ENABLE_CONFIG, DEFAULT_PROJECT_ID);
         Map resultData = getResultData(mvcResult, Map.class);
-        Assertions.assertEquals(resultData.size(), TemplateScene.values().length);
+        Assertions.assertEquals(resultData.size(), 2);
         Assertions.assertFalse((Boolean) resultData.get(TemplateScene.FUNCTIONAL.name()));
         changeOrgTemplateEnable(false);
         mvcResult = this.requestGetWithOkAndReturn(ENABLE_CONFIG, DEFAULT_PROJECT_ID);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationTemplateService.java
Patch:
@@ -218,7 +218,7 @@ public void disableOrganizationTemplate(String orgId, String scene) {
     public Map<String, Boolean> getOrganizationTemplateEnableConfig(String organizationId) {
         OrganizationService.checkResourceExist(organizationId);
         HashMap<String, Boolean> templateEnableConfig = new HashMap<>();
-        Arrays.stream(TemplateScene.values())
+        List.of(TemplateScene.FUNCTIONAL, TemplateScene.BUG)
                 .forEach(scene ->
                         templateEnableConfig.put(scene.name(), isOrganizationTemplateEnable(organizationId, scene.name())));
         return templateEnableConfig;

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationTemplateControllerTests.java
Patch:
@@ -521,7 +521,7 @@ public void getOrganizationTemplateEnableConfig() throws Exception {
         // @@请求成功
         MvcResult mvcResult = this.requestGetWithOkAndReturn(ENABLE_CONFIG, DEFAULT_ORGANIZATION_ID);
         Map resultData = getResultData(mvcResult, Map.class);
-        Assertions.assertEquals(resultData.size(), TemplateScene.values().length);
+        Assertions.assertEquals(resultData.size(), 2);
         Assertions.assertTrue((Boolean) resultData.get(TemplateScene.FUNCTIONAL.name()));
         changeOrgTemplateEnable(false);
         mvcResult = this.requestGetWithOkAndReturn(ENABLE_CONFIG, DEFAULT_ORGANIZATION_ID);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsScriptElementConverter.java
Patch:
@@ -48,6 +48,8 @@ public void toHashTree(HashTree hashTree, MsScriptElement msScriptElement, Param
         Optional.ofNullable(ScriptProcessorConverter.getScriptArguments(scriptProcessor))
                 .ifPresent(hashTree::add);
 
-        hashTree.add(scriptElement);
+        HashTree scriptTree = hashTree.add(scriptElement);
+
+        parseChild(scriptTree, msScriptElement, config);
     }
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/xmind/utils/XmindExportUtil.java
Patch:
@@ -368,7 +368,7 @@ private static Map<String, IStyle> initTheme(IWorkbook workbook) {
     public static void export(FunctionalCaseXmindData xmindData, FunctionalCaseExportRequest request, File tmpFile, TemplateCustomFieldDTO priority) {
         IWorkbook workBook = createXmindByCaseData(xmindData, false, null, request, priority);
         try {
-            workBook.save(tmpFile.getAbsolutePath());
+            workBook.save(tmpFile.getPath());
         } catch (UnsupportedEncodingException e) {
             LogUtils.error(e.getMessage(), e);
             throw new MSException("Utf-8 encoding is not supported");

File: backend/services/system-setting/src/main/java/io/metersphere/system/utils/TaskRunnerClient.java
Patch:
@@ -48,6 +48,7 @@ public static ResultHolder get(String url, Object... uriVariables) throws Except
             HttpHeaders headers = new HttpHeaders();
             headers.add(MsHttpHeaders.OTP_TOKEN, token);
             headers.add(HttpHeaders.CONTENT_TYPE, "application/json");
+            headers.add(HttpHeaders.ACCEPT, "application/json");
             HttpEntity<String> httpEntity = new HttpEntity<>(headers);
             ResponseEntity<ResultHolder> entity = restTemplateWithTimeOut.exchange(u, HttpMethod.GET, httpEntity, ResultHolder.class, uriVariables);
             return entity.getBody();

File: backend/services/system-setting/src/main/java/io/metersphere/system/utils/TaskRunnerClient.java
Patch:
@@ -47,6 +47,7 @@ public static ResultHolder get(String url, Object... uriVariables) throws Except
             String token = totpGenerator.now();
             HttpHeaders headers = new HttpHeaders();
             headers.add(MsHttpHeaders.OTP_TOKEN, token);
+            headers.add(HttpHeaders.CONTENT_TYPE, "application/json");
             HttpEntity<String> httpEntity = new HttpEntity<>(headers);
             ResponseEntity<ResultHolder> entity = restTemplateWithTimeOut.exchange(u, HttpMethod.GET, httpEntity, ResultHolder.class, uriVariables);
             return entity.getBody();

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationProjectController.java
Patch:
@@ -150,7 +150,7 @@ public int removeProjectMember(@PathVariable String projectId, @PathVariable Str
     }
 
     @GetMapping("/user-admin-list/{organizationId}")
-    @Operation(summary = "系统设置-组织-项目-获取管理员列表")
+    @Operation(summary = "系统设置-组织-项目-获取项目管理员下拉选项")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_PROJECT_READ)
     @CheckOwner(resourceId = "#organizationId", resourceType = "organization")
     public List<UserExtendDTO> getUserAdminList(@PathVariable String organizationId, @Schema(description = "查询关键字，根据邮箱和用户名查询")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -319,11 +319,11 @@ public void clearApiChange(@PathVariable String id) {
     }
 
     @GetMapping("/api-change/ignore/{id}")
-    @Operation(summary = "清除接口参数变更标识")
+    @Operation(summary = "忽略接口变更提示")
     @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.PROJECT_API_DEFINITION_CASE_ADD, PermissionConstants.PROJECT_API_DEFINITION_CASE_UPDATE})
     @CheckOwner(resourceId = "#id", resourceType = "api_test_case")
-    public void ignoreApiChange(@PathVariable String id) {
-        apiTestCaseService.ignoreApiChange(id);
+    public void ignoreApiChange(@PathVariable String id, @RequestParam(name = "ignore") boolean ignore) {
+        apiTestCaseService.ignoreApiChange(id, ignore);
     }
 
     @GetMapping("/api/compare/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -101,6 +101,9 @@ public class ApiTestCaseDTO {
     @Schema(description = "与接口定义不一致")
     private Boolean inconsistentWithApi;
 
+    @Schema(description = "忽略接口与用例参数不一致")
+    private Boolean ignoreApiDiff;
+
     @Schema(description = "忽略接口定义参数变更")
     private Boolean ignoreApiChange;
 }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -2853,6 +2853,7 @@ public void testGetSystemRequest() throws Exception {
             apiTestCase.setLastReportStatus("未执行");
             apiTestCase.setApiChange(false);
             apiTestCase.setIgnoreApiChange(false);
+            apiTestCase.setIgnoreApiDiff(false);
             apiTestCases.add(apiTestCase);
         }
         apiTestCaseMapper.batchInsert(apiTestCases);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -298,7 +298,9 @@ public ApiDefinition update(ApiDefinitionUpdateRequest request, String userId) {
 
         AbstractMsTestElement originRequest = ApiDataUtils.parseObject(new String(originApiDefinitionBlob.getRequest()), AbstractMsTestElement.class);
         // 处理接口定义参数变更
-        apiTestCaseService.handleApiParamChange(apiDefinition.getId(), request.getRequest(), originRequest);
+        String requestStr = JSON.toJSONString(request.getRequest());
+        AbstractMsTestElement msTestElement = ApiDataUtils.parseObject(requestStr, AbstractMsTestElement.class);
+        apiTestCaseService.handleApiParamChange(apiDefinition.getId(), msTestElement, originRequest);
         return apiDefinition;
     }
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/FilterChainUtils.java
Patch:
@@ -48,6 +48,9 @@ public static Map<String, String> loadBaseFilterChain() {
         filterChainDefinitionMap.put("/bug/attachment/preview/md/**", "anon");
         //计划报告富文本访问
         filterChainDefinitionMap.put("/test-plan/report/preview/md/**", "anon");
+        //模板富文本框图片预览
+        filterChainDefinitionMap.put("/organization/template/img/preview/**", "anon");
+        filterChainDefinitionMap.put("/project/template/img/preview/**", "anon");
 
         filterChainDefinitionMap.put("/system/version/current", "anon");
 

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTemplateController.java
Patch:
@@ -108,12 +108,12 @@ public String upload(@RequestParam("file") MultipartFile file) {
         return commonFileService.uploadTempImgFile(file);
     }
 
-    @GetMapping(value = "/img/preview/{organizationId}/{fileId}/{compressed}")
+    @GetMapping(value = "/img/preview/{projectId}/{fileId}/{compressed}")
     @Operation(summary = "富文本图片-预览")
-    public ResponseEntity<byte[]> previewImg(@PathVariable String organizationId,
+    public ResponseEntity<byte[]> previewImg(@PathVariable String projectId,
                                              @PathVariable String fileId,
                                              @Schema(description = "是否是压缩图片")
                                              @PathVariable("compressed") boolean compressed) {
-        return projectTemplateservice.previewImg(organizationId, fileId, compressed);
+        return projectTemplateservice.previewImg(projectId, fileId, compressed);
     }
 }
\ No newline at end of file

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -76,4 +76,6 @@ public interface ExtTestPlanApiCaseMapper {
     List<TestPlanApiCase> getPlanApiCaseNotDeletedByCollectionIds(@Param("collectionIds") List<String> collectionIds);
 
     List<TestPlanResourceExecResultDTO> selectDistinctExecResult(String projectId);
+
+    List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -72,4 +72,6 @@ public interface ExtTestPlanApiScenarioMapper {
     List<TestPlanApiScenario> getPlanScenarioCaseNotDeletedByCollectionIds(@Param("collectionIds") List<String> collectionIds);
 
     List<TestPlanResourceExecResultDTO> selectDistinctExecResult(String projectId);
+
+    List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds(@Param("testPlanIds") List<String> testPlanIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanResourceService.java
Patch:
@@ -68,7 +68,9 @@ public TestPlanAssociationResponse disassociate(
 
     public abstract long copyResource(String originalTestPlanId, String newTestPlanId, Map<String, String> oldCollectionIdToNewCollectionId, String operator, long operatorTime);
 
-    public abstract List<TestPlanResourceExecResultDTO> selectDistinctExecResult(String projectId);
+    public abstract List<TestPlanResourceExecResultDTO> selectDistinctExecResultByProjectId(String projectId);
+
+    public abstract List<TestPlanResourceExecResultDTO> selectDistinctExecResultByTestPlanIds(List<String> testPlanIds);
 
     /**
      * 关联用例

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/domain/FunctionalCaseExcelDataCn.java
Patch:
@@ -30,7 +30,7 @@ public class FunctionalCaseExcelDataCn extends FunctionalCaseExcelData {
     private String name;
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 100)
     @ExcelProperty("所属模块")
     @ColumnWidth(30)
     private String module;

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/domain/FunctionalCaseExcelDataTw.java
Patch:
@@ -30,7 +30,7 @@ public class FunctionalCaseExcelDataTw extends FunctionalCaseExcelData {
     private String name;
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 100)
     @ExcelProperty("所屬模塊")
     @ColumnWidth(30)
     private String module;

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/domain/FunctionalCaseExcelDataUs.java
Patch:
@@ -30,7 +30,7 @@ public class FunctionalCaseExcelDataUs extends FunctionalCaseExcelData {
     private String name;
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 100)
     @ExcelProperty("Module")
     @ColumnWidth(30)
     private String module;

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtCaseReviewHistoryMapper.java
Patch:
@@ -13,6 +13,9 @@ public interface ExtCaseReviewHistoryMapper {
 
     List<CaseReviewHistoryDTO> list(@Param("caseId") String caseId, @Param("reviewId") String reviewId);
 
+    List<CaseReviewHistoryDTO> resultList(@Param("caseId") String caseId, @Param("reviewId") String reviewId);
+
+
     List<CaseReviewHistoryDTO> getHistoryListWidthAbandoned(@Param("caseId") String caseId, @Param("reviewId") String reviewId);
 
     List<CaseReviewHistoryDTO> getHistoryListWidthCaseId(@Param("caseId") String caseId, @Param("reviewId") String reviewId);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -642,16 +642,16 @@ private void handleApiData(List<BaseCollectionAssociateRequest> apiCaseList, Ses
                     }
 
                     if (CollectionUtils.isNotEmpty(dto.getSelectIds())) {
-                        CollectionUtils.removeAll(dto.getSelectIds(), apiTestCaseList.stream().map(ApiTestCase::getId).toList());
                         //获取选中的ids数据
                         List<ApiTestCase> selectIdList = extApiTestCaseMapper.getCaseListBySelectIds(isRepeat, apiCase.getModules().getProjectId(), dto.getSelectIds(), testPlan.getId(), apiCase.getModules().getProtocols());
                         apiTestCaseList.addAll(selectIdList);
                     }
 
                     if (CollectionUtils.isNotEmpty(dto.getExcludeIds())) {
                         //排除的ids
-                        List<String> excludeIds = dto.getExcludeIds();
-                        apiTestCaseList = apiTestCaseList.stream().filter(item -> !excludeIds.contains(item.getId())).toList();
+                        List<ApiTestCase> excludeList = extApiTestCaseMapper.getCaseListBySelectIds(isRepeat, apiCase.getModules().getProjectId(), dto.getExcludeIds(), testPlan.getId(), apiCase.getModules().getProtocols());
+                        List<String> excludeIds = excludeList.stream().map(ApiTestCase::getId).toList();
+                        apiTestCaseList = apiTestCaseList.stream().filter(item -> !excludeIds.contains(item.getId())).distinct().toList();
                     }
 
                     if (CollectionUtils.isNotEmpty(apiTestCaseList)) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiCaseMapper.java
Patch:
@@ -27,10 +27,10 @@ public interface ExtTestPlanReportApiCaseMapper {
 
 	/**
 	 * 获取项目下接口用例所属模块集合
-	 * @param projectId 计划ID
+	 * @param ids 模块ID集合
 	 * @return 模块集合
 	 */
-	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("id") String projectId);
+	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("ids") List<String> ids);
 
 	/**
 	 * 分页查询报告关联的用例

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportApiScenarioMapper.java
Patch:
@@ -27,10 +27,10 @@ public interface ExtTestPlanReportApiScenarioMapper {
 
 	/**
 	 * 获取项目下场景用例所属模块集合
-	 * @param projectId 计划ID
+	 * @param ids 模块ID集合
 	 * @return 模块集合
 	 */
-	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("id") String projectId);
+	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("ids") List<String> ids);
 
 	/**
 	 * 分页查询报告关联的用例

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportFunctionalCaseMapper.java
Patch:
@@ -21,10 +21,10 @@ public interface ExtTestPlanReportFunctionalCaseMapper {
 
 	/**
 	 * 获取项目下功能用例所属模块集合
-	 * @param projectId 计划ID
+	 * @param ids 模块ID集合
 	 * @return 模块集合
 	 */
-	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("id") String projectId);
+	List<TestPlanBaseModule> getPlanExecuteCaseModules(@Param("ids") List<String> ids);
 
 	/**
 	 * 获取用例等级

File: backend/services/project-management/src/main/java/io/metersphere/project/constants/PropertyConstant.java
Patch:
@@ -32,4 +32,6 @@ public class PropertyConstant {
     public final static String MAX_ITEMS = "maxItems";
     public final static String MIN_ITEMS = "minItems";
 
+    public final static String FILE = "file";
+
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/JsonSchemaBuilder.java
Patch:
@@ -265,7 +265,8 @@ private static boolean isTextNotBlank(JsonNode jsonNode) {
     }
 
     private static String getPropertyTextValue(JsonNode propertyNode, String key) {
-        return propertyNode.get(key) == null ? StringUtils.EMPTY : propertyNode.get(key).asText();
+        JsonNode jsonNode = propertyNode.get(key);
+        return jsonNode == null || jsonNode instanceof NullNode ? StringUtils.EMPTY : jsonNode.asText();
     }
 
     private static boolean isVariable(String value) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanCollectionMinderService.java
Patch:
@@ -85,7 +85,7 @@ public List<TestPlanCollectionMinderTreeDTO> getMindTestPlanCase(String planId)
                 t.setPoolName(Translator.get("resource_pool_not_exist"));
                 t.setNoResourcePool(true);
             } else {
-                t.setPoolName(t.getPoolName());
+                t.setPoolName(resourcePoolMap.get(t.getTestResourcePoolId()));
             }
         });
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtUserRoleRelationMapper.java
Patch:
@@ -1,15 +1,17 @@
 package io.metersphere.system.mapper;
 
-import io.metersphere.system.dto.user.UserRoleRelationUserDTO;
 import io.metersphere.system.domain.UserRoleRelation;
 import io.metersphere.system.dto.request.GlobalUserRoleRelationQueryRequest;
+import io.metersphere.system.dto.user.UserRoleRelationUserDTO;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtUserRoleRelationMapper {
     List<UserRoleRelation> selectGlobalRoleByUserIdList(@Param("userIds") List<String> userIdList);
 
+    List<UserRoleRelation> selectRoleByUserIdList(@Param("userIds") List<String> userIdList);
+
     List<UserRoleRelation> selectGlobalRoleByUserId(String userId);
 
     List<UserRoleRelationUserDTO> listGlobal(@Param("request") GlobalUserRoleRelationQueryRequest request);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserRoleRelationService.java
Patch:
@@ -98,7 +98,7 @@ public Map<Organization, List<Project>> selectOrganizationProjectByUserId(String
     }
 
     public Map<String, UserTableResponse> selectGlobalUserRoleAndOrganization(@Valid @NotEmpty List<String> userIdList) {
-        List<UserRoleRelation> userRoleRelationList = extUserRoleRelationMapper.selectGlobalRoleByUserIdList(userIdList);
+        List<UserRoleRelation> userRoleRelationList = extUserRoleRelationMapper.selectRoleByUserIdList(userIdList);
         List<String> userRoleIdList = userRoleRelationList.stream().map(UserRoleRelation::getRoleId).distinct().collect(Collectors.toList());
         List<String> sourceIdList = userRoleRelationList.stream().map(UserRoleRelation::getSourceId).distinct().collect(Collectors.toList());
         Map<String, UserRole> userRoleMap = new HashMap<>();
@@ -125,11 +125,11 @@ public Map<String, UserTableResponse> selectGlobalUserRoleAndOrganization(@Valid
             }
             UserRole userRole = userRoleMap.get(userRoleRelation.getRoleId());
             if (userRole != null && StringUtils.equalsIgnoreCase(userRole.getType(), UserRoleScope.SYSTEM)) {
-                userInfo.getUserRoleList().add(userRole);
+                userInfo.setUserRole(userRole);
             }
             Organization organization = organizationMap.get(userRoleRelation.getSourceId());
             if (organization != null && !userInfo.getOrganizationList().contains(organization)) {
-                userInfo.getOrganizationList().add(organization);
+                userInfo.setOrganization(organization);
             }
         }
         return returnMap;

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiTestCaseMapper.java
Patch:
@@ -108,5 +108,5 @@ public interface ExtApiTestCaseMapper {
 
     List<ApiTestCase> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId, @Param("protocols") List<String> protocols);
 
-    List<ApiTestCase> getCaseListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId, @Param("protocols") List<String> protocols);
+    List<ApiTestCase> getCaseListBySelectIds(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId, @Param("protocols") List<String> protocols);
 }
\ No newline at end of file

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -644,7 +644,7 @@ private void handleApiData(List<BaseCollectionAssociateRequest> apiCaseList, Ses
                     if (CollectionUtils.isNotEmpty(dto.getSelectIds())) {
                         CollectionUtils.removeAll(dto.getSelectIds(), apiTestCaseList.stream().map(ApiTestCase::getId).toList());
                         //获取选中的ids数据
-                        List<ApiTestCase> selectIdList = extApiTestCaseMapper.getCaseListBySelectIds(apiCase.getModules().getProjectId(), dto.getSelectIds(), testPlan.getId(), apiCase.getModules().getProtocols());
+                        List<ApiTestCase> selectIdList = extApiTestCaseMapper.getCaseListBySelectIds(isRepeat, apiCase.getModules().getProjectId(), dto.getSelectIds(), testPlan.getId(), apiCase.getModules().getProtocols());
                         apiTestCaseList.addAll(selectIdList);
                     }
 

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -1900,8 +1900,6 @@ public void testExport() throws Exception {
         request.setSelectAll(false);
         request.setSelectIds(List.of("1002"));
         this.requestPost(EXPORT + "swagger", request);
-        request.setSelectIds(List.of("1001"));
-        this.requestPost(EXPORT + "swagger", request);
     }
 
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/export/SwaggerParams.java
Patch:
@@ -9,7 +9,7 @@ public class SwaggerParams {
     //对应 API 请求参数名
     private String name;
     //参数值
-    private String value;
+    private String example;
     //参数类型，可选值为 path,header,query 等
     private String in;
     private String description;

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/Swagger3Parser.java
Patch:
@@ -257,6 +257,7 @@ private void parseResponse(ApiResponses responseBody, List<HttpResponse> respons
                     body.setBodyType(Body.BodyType.NONE.name());
                 }
                 httpResponse.setBody(body);
+                httpResponse.setId(IDGenerator.nextStr());
                 response.add(httpResponse);
             });
             // 判断  如果是200  默认defaultFlag为true 否则的话  随机挑一个为true

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugFileSourceRequest.java
Patch:
@@ -9,8 +9,7 @@
 @Data
 public class BugFileSourceRequest implements Serializable {
 
-    @Schema(description = "缺陷ID", requiredMode = Schema.RequiredMode.REQUIRED)
-    @NotBlank(message = "{bug.id.not_blank}")
+    @Schema(description = "缺陷ID")
     private String bugId;
 
     @Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -173,7 +173,7 @@ public TestPlanSingleOperationResponse copy(@PathVariable String id) {
     @Operation(summary = "测试计划-批量复制测试计划")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_ADD)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
-    public TestPlanOperationResponse TestPlanOperationResponse(@Validated @RequestBody TestPlanBatchRequest request) {
+    public TestPlanOperationResponse batchCopy(@Validated @RequestBody TestPlanBatchRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getProjectId(), TestPlanResourceConfig.CHECK_TYPE_PROJECT, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
         testPlanService.filterArchivedIds(request);
         return new TestPlanOperationResponse(

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanReportDetailResponse.java
Patch:
@@ -27,7 +27,7 @@ public class TestPlanReportDetailResponse {
     @Schema(description = "报告内容")
     private String summary;
     @Schema(description = "用例总数")
-    private Integer caseTotal = 0;
+    private Integer caseTotal;
 
     /**
      * 报告分析

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportMapper.java
Patch:
@@ -65,4 +65,6 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
     void batchUpdateExecuteTimeAndStatus(@Param("startTime") long startTime, @Param("ids") List<String> ids);
 
     List<ReportDTO> getReportsByIds(@Param("ids") List<String> ids);
+
+    void deleteGroupReport(@Param("id") String id);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -105,11 +105,12 @@ public class TestPlanService extends TestPlanBaseUtilsService {
     private TestPlanApiScenarioMapper testPlanApiScenarioMapper;
     @Resource
     private TestPlanReportCaseService testPlanReportCaseService;
-
     @Resource
     private TestPlanReportService testPlanReportService;
     @Resource
     private TestPlanReportMapper testPlanReportMapper;
+    @Resource
+    private ExtTestPlanReportMapper extTestPlanReportMapper;
 
     public void autoUpdateFunctionalCase(String testPlanReportId) {
         TestPlanReport testPlanReport = testPlanReportMapper.selectByPrimaryKey(testPlanReportId);
@@ -276,7 +277,6 @@ private void deleteGroupByList(List<String> testPlanGroupIds) {
                 /*
                  * 计划组删除逻辑{第一版需求: 删除组, 组下的子计划Group置为None}:
                  * 1. 查询计划组下的全部子计划并删除(级联删除这些子计划的关联资源)
-                 * 2. 删除所有计划组
                  */
                 TestPlanExample testPlanExample = new TestPlanExample();
                 testPlanExample.createCriteria().andGroupIdIn(deleteGroupIds);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/SimpleUserService.java
Patch:
@@ -126,6 +126,7 @@ public UserBatchCreateResponse addUser(UserBatchCreateRequest userCreateDTO, Str
         Map<String, String> errorEmails = this.validateUserInfo(userCreateDTO.getUserInfoList().stream().map(UserCreateInfo::getEmail).toList());
         if (MapUtils.isNotEmpty(errorEmails)) {
             response.setErrorEmails(errorEmails);
+            throw new MSException(SystemResultCode.INVITE_EMAIL_EXIST, JSON.toJSONString(errorEmails.keySet()));
         } else {
             response.setSuccessList(this.saveUserAndRole(userCreateDTO, source, operator, "/system/user/addUser"));
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -310,6 +310,7 @@ public Pager<List<ReferenceDTO>> getReference(@Validated @RequestBody ReferenceR
     }
 
     @PostMapping(value = "/export/{type}")
+    @Operation(summary = "接口测试-接口管理-导出接口定义")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_EXPORT)
     public ApiExportResponse export(@RequestBody ApiDefinitionBatchRequest request, @PathVariable String type) {
         return apiDefinitionExportService.export(request, type, SessionUtils.getUserId());

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/ModuleDTO.java
Patch:
@@ -13,7 +13,7 @@ public class ModuleDTO implements Serializable {
     @Schema(description = "模块", allowableValues = {"workstation", "testPlan", "bugManagement", "caseManagement", "apiTest", "uiTest", "loadTest"})
     private String module;
 
-    @Schema(description = "是否启用", allowableValues = {"true", "false"})
+    @Schema(description = "是否启用", type = "boolean")
     private Boolean moduleEnable;
 
     public ModuleDTO(String module, Boolean moduleEnable) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -128,7 +128,7 @@ public TableBatchProcessResponse resetPassword(@Validated @RequestBody TableBatc
 
     @GetMapping("/get/global/system/role")
     @Operation(summary = "系统设置-系统-用户-查找系统级用户组")
-    @RequiresPermissions(value = {PermissionConstants.SYSTEM_USER_ROLE_READ, PermissionConstants.SYSTEM_USER_INVITE}, logical = Logical.OR)
+    @RequiresPermissions(PermissionConstants.SYSTEM_USER_READ)
     public List<UserSelectOption> getGlobalSystemRole() {
         return globalUserRoleService.getGlobalSystemRoleList();
     }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/user/UserControllerPermissionTests.java
Patch:
@@ -96,7 +96,7 @@ public void permissionTest() throws Exception {
 
 
         //校验权限：系统全局用户组获取
-        this.requestGetPermissionTest(PermissionConstants.SYSTEM_USER_ROLE_READ, UserRequestUtils.URL_GET_GLOBAL_SYSTEM);
+        this.requestGetPermissionTest(PermissionConstants.SYSTEM_USER_READ, UserRequestUtils.URL_GET_GLOBAL_SYSTEM);
         //        查看组织
         this.requestGetPermissionsTest(List.of(PermissionConstants.SYSTEM_USER_ROLE_READ, PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ), UserRequestUtils.URL_GET_ORGANIZATION);
         //查看项目

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -128,7 +128,7 @@ public TableBatchProcessResponse resetPassword(@Validated @RequestBody TableBatc
 
     @GetMapping("/get/global/system/role")
     @Operation(summary = "系统设置-系统-用户-查找系统级用户组")
-    @RequiresPermissions(PermissionConstants.SYSTEM_USER_ROLE_READ)
+    @RequiresPermissions(value = {PermissionConstants.SYSTEM_USER_ROLE_READ, PermissionConstants.SYSTEM_USER_INVITE}, logical = Logical.OR)
     public List<UserSelectOption> getGlobalSystemRole() {
         return globalUserRoleService.getGlobalSystemRoleList();
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanCollectionAssociateDTO.java
Patch:
@@ -40,5 +40,8 @@ public class TestPlanCollectionAssociateDTO implements Serializable {
     @Schema(description = "场景计划集id")
     private String apiScenarioCollectionId;
 
+    @Schema(description = "协议")
+    private List<String> protocols;
+
 
 }

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiCaseControllerTests.java
Patch:
@@ -303,6 +303,7 @@ private TestPlanCollectionAssociateDTO buildModules(String type) {
         associateDTO.setAssociateType(type);
         associateDTO.setProjectId("wxx_1234");
         associateDTO.setModuleMaps(buildModuleMap());
+        associateDTO.setProtocols(List.of("HTTP"));
         return associateDTO;
     }
 
@@ -320,6 +321,7 @@ private TestPlanCollectionAssociateDTO buildModulesAll(String type) {
         associateDTO.setSelectAllModule(true);
         associateDTO.setAssociateType(type);
         associateDTO.setProjectId("wxx_1234");
+        associateDTO.setProtocols(List.of("HTTP"));
 
         Map<String, ModuleSelectDTO> moduleMap = new HashMap<>();
         ModuleSelectDTO moduleSelectDTO = new ModuleSelectDTO();

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/DingCustomNoticeSender.java
Patch:
@@ -25,7 +25,7 @@ public void sendDingCustom(MessageDetail messageDetail, NoticeModel noticeModel,
                 .map(Receiver::getUserId)
                 .distinct()
                 .collect(Collectors.toList());
-        List<User> users = super.getUsers(userIds, messageDetail.getProjectId());
+        List<User> users = super.getUsers(userIds, messageDetail.getProjectId(), true);
         List<String> mobileList = users.stream().map(User::getPhone).toList();
 
         LogUtils.info("钉钉自定义机器人收件人: {}", userIds);

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/LarkNoticeSender.java
Patch:
@@ -27,7 +27,7 @@ public void sendLark(MessageDetail messageDetail, NoticeModel noticeModel, Strin
                 .distinct()
                 .collect(Collectors.toList());
 
-        List<User> users = super.getUsers(userIds, messageDetail.getProjectId());
+        List<User> users = super.getUsers(userIds, messageDetail.getProjectId(), true);
         List<String> collect = users.stream()
                 .map(ud -> "<at email=\"" + ud.getEmail() + "\">" + ud.getName() + "</at>")
                 .toList();

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/MailNoticeSender.java
Patch:
@@ -42,7 +42,7 @@ public void sendMail(String context, NoticeModel noticeModel, String projectId,
                 .map(Receiver::getUserId)
                 .distinct()
                 .collect(Collectors.toList());
-        String[] users = super.getUsers(userIds, projectId).stream()
+        String[] users = super.getUsers(userIds, projectId, true).stream()
                 .map(User::getEmail)
                 .distinct()
                 .toArray(String[]::new);

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/WeComNoticeSender.java
Patch:
@@ -25,7 +25,7 @@ public void sendWeCom(MessageDetail messageDetail, NoticeModel noticeModel, Stri
                 .map(Receiver::getUserId)
                 .distinct()
                 .collect(Collectors.toList());
-        List<User> users = super.getUsers(userIds, messageDetail.getProjectId());
+        List<User> users = super.getUsers(userIds, messageDetail.getProjectId(), true);
         List<String> mobileList = users.stream().map(User::getPhone).toList();
         LogUtils.info("企业微信收件人: {}", userIds);
         WeComClient.send(messageDetail.getWebhook(), subjectText + ": \n" + context, mobileList);

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseMapper.java
Patch:
@@ -104,4 +104,6 @@ public interface ExtFunctionalCaseMapper {
     List<FunctionalCase> getListBySelectModules(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
 
     List<FunctionalCase> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId);
+
+    List<FunctionalCase> getProjectIdByIds(@Param("ids") List<String> ids);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioMapper.java
Patch:
@@ -87,7 +87,7 @@ public interface ExtApiScenarioMapper {
     List<ApiScenario> selectAllCase(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("testPlanId") String testPlanId);
 
 
-    List<ApiScenario> getListBySelectModules(@Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
+    List<ApiScenario> getListBySelectModules(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
 
     List<ApiScenario> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiTestCaseMapper.java
Patch:
@@ -105,7 +105,7 @@ public interface ExtApiTestCaseMapper {
 
     List<ApiTestCase> selectAllApiCase(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("testPlanId") String testPlanId);
 
-    List<ApiTestCase> getListBySelectModules(@Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
+    List<ApiTestCase> getListBySelectModules(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
 
     List<ApiTestCase> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseMapper.java
Patch:
@@ -101,7 +101,7 @@ public interface ExtFunctionalCaseMapper {
 
     List<FunctionalCase> selectAllFunctionalCase(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("testPlanId") String testPlanId);
 
-    List<FunctionalCase> getListBySelectModules(@Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
+    List<FunctionalCase> getListBySelectModules(@Param("isRepeat") boolean isRepeat, @Param("projectId") String projectId, @Param("moduleIds") List<String> moduleIds, @Param("testPlanId") String testPlanId);
 
     List<FunctionalCase> getListBySelectIds(@Param("projectId") String projectId, @Param("ids") List<String> ids, @Param("testPlanId") String testPlanId);
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseTestMapper.java
Patch:
@@ -25,9 +25,9 @@ public interface ExtFunctionalCaseTestMapper {
 
     List<TestPlanCaseExecuteHistoryDTO> getPlanExecuteHistoryList(@Param("caseId") String caseId, @Param("planId") String planId);
 
-    List<ApiTestCase> selectApiCaseByCaseIds(@Param("caseIds") List<String> caseIds);
+    List<ApiTestCase> selectApiCaseByCaseIds(@Param("isRepeat") boolean isRepeat, @Param("caseIds") List<String> caseIds, @Param("testPlanId") String testPlanId);
 
-    List<ApiScenario> selectApiScenarioByCaseIds(@Param("caseIds") List<String> caseIds);
+    List<ApiScenario> selectApiScenarioByCaseIds(@Param("isRepeat") boolean isRepeat, @Param("caseIds") List<String> caseIds, @Param("testPlanId") String testPlanId);
 
     List<FunctionalCaseTest> selectApiAndScenarioIdsFromCaseIds(@Param("caseIds") List<String> functionalCaseIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -596,7 +596,7 @@ private void handleApiCaseData(List<BaseCollectionAssociateRequest> apiCaseList,
                     List<ApiTestCase> apiTestCaseList = new ArrayList<>();
                     //获取全选的模块数据
                     if (CollectionUtils.isNotEmpty(dto.getModuleIds())) {
-                        apiTestCaseList = extApiTestCaseMapper.getListBySelectModules(apiCase.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
+                        apiTestCaseList = extApiTestCaseMapper.getListBySelectModules(isRepeat, apiCase.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
                     }
 
                     if (CollectionUtils.isNotEmpty(dto.getSelectIds())) {
@@ -638,7 +638,7 @@ private void handleApiData(List<BaseCollectionAssociateRequest> apiCaseList, Ses
                     List<ApiTestCase> apiTestCaseList = new ArrayList<>();
                     //获取全选的模块数据
                     if (CollectionUtils.isNotEmpty(dto.getModuleIds())) {
-                        apiTestCaseList = extApiTestCaseMapper.getListBySelectModules(apiCase.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
+                        apiTestCaseList = extApiTestCaseMapper.getListBySelectModules(isRepeat, apiCase.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
                     }
 
                     if (CollectionUtils.isNotEmpty(dto.getSelectIds())) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -207,7 +207,7 @@ private void handleApiScenarioData(List<BaseCollectionAssociateRequest> apiScena
                     List<ApiScenario> scenarioList = new ArrayList<>();
                     //获取全选的模块数据
                     if (CollectionUtils.isNotEmpty(dto.getModuleIds())) {
-                        scenarioList = extApiScenarioMapper.getListBySelectModules(apiScenario.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
+                        scenarioList = extApiScenarioMapper.getListBySelectModules(isRepeat, apiScenario.getModules().getProjectId(), dto.getModuleIds(), testPlan.getId());
                     }
 
                     if (CollectionUtils.isNotEmpty(dto.getSelectIds())) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -163,7 +163,6 @@ public Pager<List<ReportDetailCasePageDTO>> pageFunctionalCase(@Validated @Reque
     @GetMapping("/detail/functional/case/step/{reportId}")
     @Operation(summary = "测试计划-报告-详情-功能用例-执行步骤结果")
     @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_REPORT_READ, PermissionConstants.TEST_PLAN_READ_EXECUTE}, logical = Logical.OR)
-    @CheckOwner(resourceId = "#reportId", resourceType = "test_plan_case_execute_history")
     public TestPlanCaseExecHistoryResponse getFunctionalExecuteResult(@PathVariable String reportId) {
         return testPlanReportService.getFunctionalExecuteResult(reportId);
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -866,7 +866,7 @@ private void handleApiScenarioData(List<FunctionalCase> functionalCaseList, Base
             List<String> caseIds = functionalCaseList.stream().map(FunctionalCase::getId).toList();
             List<ApiScenario> scenarioList = extFunctionalCaseTestMapper.selectApiScenarioByCaseIds(caseIds);
             List<TestPlanApiScenario> testPlanApiScenarioList = new ArrayList<>();
-            testPlanApiScenarioService.buildTestPlanApiScenarioDTO(functional, scenarioList, testPlan, user, testPlanApiScenarioList);
+            testPlanApiScenarioService.buildTestPlanApiScenarioDTO(functional.getModules().getApiScenarioCollectionId(), scenarioList, testPlan, user, testPlanApiScenarioList);
             if (CollectionUtils.isNotEmpty(testPlanApiScenarioList)) {
                 testPlanApiScenarioMapper.batchInsert(testPlanApiScenarioList);
             }
@@ -886,7 +886,7 @@ private void handleApiCaseData(List<FunctionalCase> functionalCaseList, BaseColl
             List<String> caseIds = functionalCaseList.stream().map(FunctionalCase::getId).toList();
             List<ApiTestCase> apiTestCaseList = extFunctionalCaseTestMapper.selectApiCaseByCaseIds(caseIds);
             List<TestPlanApiCase> testPlanApiCaseList = new ArrayList<>();
-            testPlanApiCaseService.buildTestPlanApiCaseDTO(functional, apiTestCaseList, testPlan, user, testPlanApiCaseList);
+            testPlanApiCaseService.buildTestPlanApiCaseDTO(functional.getModules().getApiCaseCollectionId(), apiTestCaseList, testPlan, user, testPlanApiCaseList);
             if (CollectionUtils.isNotEmpty(testPlanApiCaseList)) {
                 testPlanApiCaseMapper.batchInsert(testPlanApiCaseList);
             }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -150,7 +150,7 @@ public void autoUpdateFunctionalCase(String testPlanReportId) {
                 testPlanFunctionalCaseMapper.updateByExampleSelective(updateRecord, updateExample);
                 // 报告-功能用例的执行结果同步刷新
                 TestPlanReportFunctionCaseExample caseExample = new TestPlanReportFunctionCaseExample();
-                caseExample.createCriteria().andTestPlanReportIdEqualTo(testPlanReportId).andTestPlanFunctionCaseIdIn(funcCaseIds);
+                caseExample.createCriteria().andTestPlanReportIdEqualTo(testPlanReportId).andFunctionCaseIdIn(funcCaseIds);
                 TestPlanReportFunctionCase reportFunctionCase = new TestPlanReportFunctionCase();
                 reportFunctionCase.setFunctionCaseExecuteResult(result);
                 reportFunctionCase.setFunctionCaseExecuteReportId(null);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -418,7 +418,9 @@ private Map<String, Long> getModuleCount(TestPlanCaseModuleRequest request) {
         request.setModuleIds(null);
         List<FunctionalCaseModuleCountDTO> projectModuleCountDTOList = extTestPlanFunctionalCaseMapper.countModuleIdByRequest(request, false);
         Map<String, List<FunctionalCaseModuleCountDTO>> projectCountMap = projectModuleCountDTOList.stream().collect(Collectors.groupingBy(FunctionalCaseModuleCountDTO::getProjectId));
-        Map<String, Long> projectModuleCountMap = projectModuleCountDTOList.stream().collect(Collectors.groupingBy(FunctionalCaseModuleCountDTO::getModuleId, Collectors.summingLong(FunctionalCaseModuleCountDTO::getDataCount)));
+        Map<String, Long> projectModuleCountMap = projectModuleCountDTOList.stream()
+                .filter(item -> StringUtils.equals(item.getModuleId(), item.getProjectId() + "_" + ModuleConstants.DEFAULT_NODE_ID))
+                .collect(Collectors.groupingBy(FunctionalCaseModuleCountDTO::getModuleId, Collectors.summingLong(FunctionalCaseModuleCountDTO::getDataCount)));
         projectCountMap.forEach((projectId, moduleCountDTOList) -> {
             List<ModuleCountDTO> moduleCountDTOS = new ArrayList<>();
             for (FunctionalCaseModuleCountDTO functionalCaseModuleCountDTO : moduleCountDTOList) {

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/api/task/ApiRunRetryConfig.java
Patch:
@@ -18,5 +18,5 @@ public class ApiRunRetryConfig implements Serializable {
     /**
      * 失败重试间隔(单位: ms)
      */
-    private Integer retryInterval;
+    private Integer retryInterval = 0;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanCollectionConfigDTO.java
Patch:
@@ -8,4 +8,6 @@ public class TestPlanCollectionConfigDTO extends TestPlanCollection {
     private String poolName;
 
     private String envName;
+
+    private boolean noResourcePool = false;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -385,11 +385,11 @@ public TestPlan update(TestPlanUpdateRequest request, String userId, String requ
                 updateTestPlan.setModuleId(testPlanGroup.getModuleId());
             }
         } else {
-            request.setGroupId(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID);
+            updateTestPlan.setGroupId(TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID);
             if (!StringUtils.equalsIgnoreCase(originalTestPlan.getGroupId(), request.getGroupId())) {
                 //移出了测试计划组
                 this.deleteScheduleConfig(request.getId());
-                updateTestPlan.setPos(testPlanGroupService.getNextOrder(request.getGroupId()));
+                updateTestPlan.setPos(testPlanGroupService.getNextOrder(updateTestPlan.getGroupId()));
             }
         }
         //判断有没有模块的变化

File: backend/services/project-management/src/main/java/io/metersphere/project/constants/PropertyConstant.java
Patch:
@@ -29,5 +29,7 @@ public class PropertyConstant {
     public final static String MIN_LENGTH = "minLength";
     public final static String MINIMUM = "minimum";
     public final static String MAXIMUM = "maximum";
+    public final static String MAX_ITEMS = "maxItems";
+    public final static String MIN_ITEMS = "minItems";
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -564,6 +564,8 @@ private static CaseReviewHistory buildCaseReviewHistory(BatchReviewFunctionalCas
         if (StringUtils.equalsIgnoreCase(request.getStatus(), FunctionalCaseReviewStatus.UN_PASS.toString())) {
             if (StringUtils.isBlank(request.getContent())) {
                 throw new MSException(Translator.get("case_review_content.not.exist"));
+            }else {
+                caseReviewHistory.setContent(request.getContent().getBytes());
             }
         } else {
             if (StringUtils.isNotBlank(request.getContent())) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/Swagger3ExportParser.java
Patch:
@@ -160,7 +160,7 @@ private JSONObject buildResponseBody(JSONArray response, List<JSONObject> schema
                     statusCodeInfo.put("description", responseJSONObject.optString("value"));
                 }
                 if (StringUtils.isNotBlank(responseJSONObject.optString("name"))) {
-                    responseBody.put(responseJSONObject.optString("name"), statusCodeInfo);
+                    responseBody.put(statusCode, statusCodeInfo);
                 }
             }
         }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanCollectionAssociateDTO.java
Patch:
@@ -19,7 +19,7 @@ public class TestPlanCollectionAssociateDTO implements Serializable {
     private static final long serialVersionUID = 1L;
 
     @Schema(description = "是否选择所有模块")
-    private boolean selectAllModule;
+    private boolean selectAllModule = false;
 
     @Schema(description = "模块下的id集合属性", requiredMode = Schema.RequiredMode.REQUIRED)
     private Map<String, ModuleSelectDTO> moduleMaps;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -1214,7 +1214,7 @@ private void filterDisableItem(JsonSchemaItem jsonSchemaItem) {
                     if (item == null) {
                         continue;
                     }
-                    if (BooleanUtils.isFalse(item.getEnable())) {
+                    if (BooleanUtils.isFalse(item.getEnable()) || StringUtils.isBlank(key)) {
                         iterator.remove();
                     } else if (isObjectItem(jsonSchemaItem) || isArrayItem(jsonSchemaItem)) {
                         filterDisableItem(item);

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -1729,7 +1729,7 @@ public void testPreview() throws Exception {
 
         // 校验转换是否正确
         String schema = """
-                {"type":"object","enable":true,"properties":{"array":{"type":"array","enable":true,"items":[{"type":"string","example":"1","enable":true},{"type":"number","example":"2","enable":true}]},"string":{"type":"string","example":"stringValue","enable":true},"int":{"type":"integer","example":"1","enable":true},"num":{"type":"number","example":"1.00","enable":true},"boolean":{"type":"boolean","example":"booleanValue","enable":true},"null":{"type":"null","enable":true}}}
+                {"type":"object","enable":true,"properties":{"array":{"type":"array","enable":true,"items":[{"type":"string","example":"1","enable":true},{"type":"number","example":"2","enable":true}]},"string":{"type":"string","example":"stringValue","enable":true},"int":{"type":"integer","example":"1","enable":true},"num":{"type":"number","example":"1.00","enable":true},"boolean":{"type":"boolean","example":"booleanValue","enable":true},"null":{"type":"null","enable":true},"":{"type":"string","enable":true}}}
                 """;
         String jsonResult = """
                 {

File: backend/services/api-test/src/main/java/io/metersphere/api/job/ApiScenarioScheduleJob.java
Patch:
@@ -64,6 +64,7 @@ protected void businessExecute(JobExecutionContext context) {
         taskInfo.getRunModeConfig().setPoolId(apiRunModeConfigDTO.getPoolId());
         taskInfo.setSaveResult(true);
         taskInfo.setRealTime(false);
+        taskInfo.setUserId(userId);
         taskInfo.getRunModeConfig().setEnvironmentId(parseParam.getEnvironmentId());
         taskItem.setRequestCount(tmpParam.getRequestCount().get());
 

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/body/BodyParamType.java
Patch:
@@ -28,6 +28,7 @@ public enum BodyParamType implements ValueEnum {
      * 默认 application/text
      */
     NUMBER("number"),
+    BOOLEAN("boolean"),
     /**
      * 数组
      * 默认 application/text

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionWithBlob.java
Patch:
@@ -76,6 +76,4 @@ public class ApiDefinitionWithBlob extends ApiDefinitionBlob {
     @Schema(description = "删除状态", requiredMode = Schema.RequiredMode.REQUIRED)
     private Boolean deleted;
 
-    @Schema(description = "模块名称")
-    private String moduleName;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/ExportParser.java
Patch:
@@ -4,7 +4,8 @@
 import io.metersphere.project.domain.Project;
 
 import java.util.List;
+import java.util.Map;
 
 public interface ExportParser<T> {
-    T parse(List<ApiDefinitionWithBlob> list, Project project) throws Exception;
+    T parse(List<ApiDefinitionWithBlob> list, Project project, Map<String, String> moduleMap) throws Exception;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBatchOperationService.java
Patch:
@@ -166,6 +166,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
         String moduleId = originalTestPlan.getModuleId();
         String groupId = originalTestPlan.getGroupId();
         long pos = originalTestPlan.getPos();
+        String sortRangeId = TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID;
         if (StringUtils.equals(targetType, TestPlanConstants.TEST_PLAN_TYPE_GROUP)) {
             if (!StringUtils.equalsIgnoreCase(targetId, TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID)) {
                 TestPlan group = testPlanMapper.selectByPrimaryKey(targetId);
@@ -174,6 +175,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
                     testPlanGroupService.validateGroupCapacity(targetId, 1);
                 }
                 moduleId = group.getModuleId();
+                sortRangeId = targetId;
             }
             groupId = targetId;
         } else {
@@ -192,7 +194,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
         testPlan.setUpdateTime(operatorTime);
         testPlan.setModuleId(moduleId);
         testPlan.setGroupId(groupId);
-        testPlan.setPos(testPlanGroupService.getNextOrder(targetId));
+        testPlan.setPos(testPlanGroupService.getNextOrder(sortRangeId));
         testPlan.setActualEndTime(null);
         testPlan.setActualStartTime(null);
         testPlan.setStatus(TestPlanConstants.TEST_PLAN_STATUS_NOT_ARCHIVED);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanCollectionMinderService.java
Patch:
@@ -260,7 +260,7 @@ public void editMindTestPlanCase(TestPlanCollectionMinderEditRequest request, Se
 
     private void dealEditList(TestPlanCollectionMinderEditRequest request, String userId, Map<String, List<BaseCollectionAssociateRequest>> associateMap) {
         if (CollectionUtils.isNotEmpty(request.getEditList())) {
-            // 根节点直接过滤后存在直接处理串并行参数
+            // 根节点直接过滤后存在直接处理串/并行参数, 后续不一起处理
             request.getEditList().stream()
                     .filter(minderNode -> StringUtils.equals(minderNode.getId(), ModuleConstants.DEFAULT_NODE_ID))
                     .findFirst()
@@ -271,6 +271,7 @@ private void dealEditList(TestPlanCollectionMinderEditRequest request, String us
                         config.setCaseRunMode(executeMethod);
                         testPlanConfigMapper.updateByPrimaryKeySelective(config);
                     });
+            request.getEditList().removeIf(minderNode -> StringUtils.equals(minderNode.getId(), ModuleConstants.DEFAULT_NODE_ID));
             Map<String, List<TestPlanCollection>> parentMap = getParentMap(request);
             SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
             TestPlanCollectionMapper collectionMapper = sqlSession.getMapper(TestPlanCollectionMapper.class);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanStatisticsResponse.java
Patch:
@@ -89,7 +89,7 @@ public void calculatePassRate() {
 	}
 
 	public void calculateExecuteRate() {
-		this.executeRate = RateCalculateUtils.divWithPrecision(this.successCount - this.pendingCount, this.caseTotal, 2);
+		this.executeRate = RateCalculateUtils.divWithPrecision(this.caseTotal - this.pendingCount, this.caseTotal, 2);
 	}
 
 	public void calculateAllNumber(TestPlanStatisticsResponse childResponse) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -709,6 +709,8 @@ public long batchMove(TestPlanBatchRequest request, String userId, String operat
                     testPlanGroupService.validateGroupCapacity(request.getTargetId(), moveTestPlanList.size());
                 }
                 moveCount = testPlanBatchOperationService.batchMoveGroup(moveTestPlanList, request.getTargetId(), userId);
+                //移动到计划组后要删除定时任务
+                moveTestPlanList.forEach(item -> this.deleteScheduleConfig(item.getId()));
             } else {
                 moveCount = testPlanBatchOperationService.batchMoveModule(moveTestPlanList, request.getTargetId(), userId);
             }
@@ -846,7 +848,7 @@ public TestPlanOperationResponse sort(PosRequest request, LogInsertModule logIns
     public void deleteScheduleConfig(String testPlanId) {
         scheduleService.deleteByResourceId(testPlanId, TestPlanScheduleJob.getJobKey(testPlanId), TestPlanScheduleJob.getTriggerKey(testPlanId));
 
-        //判断有没有测试计划组
+        //判断是不是测试计划组
         TestPlanExample testPlanExample = new TestPlanExample();
         testPlanExample.createCriteria().andGroupIdEqualTo(testPlanId);
         testPlanMapper.selectByExample(testPlanExample).forEach(

File: backend/services/test-plan/src/main/java/io/metersphere/plan/job/TestPlanScheduleJob.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.system.schedule.BaseScheduleJob;
+import io.metersphere.system.uid.IDGenerator;
 import org.quartz.JobExecutionContext;
 import org.quartz.JobKey;
 import org.quartz.TriggerKey;
@@ -28,7 +29,7 @@ protected void businessExecute(JobExecutionContext context) {
                 this.setExecuteId(resourceId);
                 this.setRunMode(runMode);
                 this.setExecutionSource(ApiExecuteRunMode.SCHEDULE.name());
-            }}, userId)
+            }}, IDGenerator.nextStr(), userId)
         );
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanLogService.java
Patch:
@@ -182,9 +182,8 @@ public void copyLog(TestPlan testPlan, String operator) {
      * @param requestUrl    请求URL
      * @param requestMethod 请求方法
      * @param requestType   请求类型
-     * @param typeKey       类型Key
      */
-    public void saveBatchLog(List<TestPlan> plans, String operator, String requestUrl, String requestMethod, String requestType, String typeKey) {
+    public void saveBatchLog(List<TestPlan> plans, String operator, String requestUrl, String requestMethod, String requestType) {
         if (CollectionUtils.isEmpty(plans)) {
             return;
         }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtUserMapper.java
Patch:
@@ -44,7 +44,7 @@ public interface ExtUserMapper {
      * 获取用户的安装时间，兼容历史用户使用问题
      * @return 安装时间
      */
-    long gaInstalledTime();
+    Long gaInstalledTime();
 
     void updateInstalled();
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -15,12 +15,10 @@
 import io.metersphere.api.service.definition.ApiDefinitionLogService;
 import io.metersphere.api.service.definition.ApiDefinitionNoticeService;
 import io.metersphere.api.service.definition.ApiDefinitionService;
-import io.metersphere.api.utils.JsonSchemaBuilder;
 import io.metersphere.project.service.FileModuleService;
 import io.metersphere.sdk.constants.DefaultRepositoryDir;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.sdk.dto.api.task.TaskRequestDTO;
-import io.metersphere.sdk.util.JSON;
 import io.metersphere.system.dto.OperationHistoryDTO;
 import io.metersphere.system.dto.request.OperationHistoryRequest;
 import io.metersphere.system.dto.request.OperationHistoryVersionRequest;
@@ -284,7 +282,7 @@ public String transfer(@Validated @RequestBody ApiTransferRequest request) {
     @Operation(summary = "接口测试-接口管理-接口-json-schema-预览")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_READ)
     public String preview(@RequestBody JsonSchemaItem jsonSchemaItem) {
-        return JsonSchemaBuilder.preview(JSON.toJSONString(jsonSchemaItem));
+        return apiDefinitionService.preview(jsonSchemaItem);
     }
 
     @PostMapping("/debug")

File: backend/services/project-management/src/main/java/io/metersphere/project/constants/PropertyConstant.java
Patch:
@@ -18,5 +18,6 @@ public class PropertyConstant {
     public final static String TYPE = "type";
     public final static String ITEMS = "items";
     public final static String PROPERTIES = "properties";
+    public final static String ENABLE = "enable";
 
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/schema/JsonSchemaItem.java
Patch:
@@ -51,7 +51,7 @@ public class JsonSchemaItem {
      * 当 type 为array 时，使用该值
      */
     @Valid
-    private JsonSchemaItem items;
+    private List<JsonSchemaItem> items;
     /**
      * 参数属性
      * 当 type 为 object 时，使用该值
@@ -126,7 +126,7 @@ private void initParam(String type) {
         if (type.equals(PropertyConstant.OBJECT)) {
             this.properties = new LinkedHashMap<>();
         } else if (type.equals(PropertyConstant.ARRAY)) {
-            this.items = new JsonSchemaItem();
+            this.items = List.of();
         }
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/Swagger3Parser.java
Patch:
@@ -577,7 +577,7 @@ private JsonSchemaItem parseProperty(Schema<?> value, boolean onlyOnce) {
                     JsonSchemaItem arrayItem = new JsonSchemaItem();
                     arrayItem.setId(IDGenerator.nextStr());
                     arrayItem.setType(PropertyConstant.ARRAY);
-                    arrayItem.setItems(new JsonSchemaItem());
+                    arrayItem.setItems(List.of());
                     yield arrayItem;
                 }
                 yield isRef(arraySchema.getItems(), 0) ? parseArraySchema(arraySchema, true) :
@@ -712,7 +712,7 @@ private JsonSchemaItem parseArraySchema(ArraySchema arraySchema, boolean onlyOnc
         }
 
         JsonSchemaItem itemsJsonSchema = parseProperty(itemsSchema, onlyOnce);
-        jsonSchemaArray.setItems(itemsJsonSchema);
+        jsonSchemaArray.setItems(List.of(itemsJsonSchema));
         jsonSchemaArray.setMaxItems(arraySchema.getMaxItems());
         jsonSchemaArray.setMinItems(arraySchema.getMinItems());
         return jsonSchemaArray;

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugTrashController.java
Patch:
@@ -44,7 +44,7 @@ public Pager<List<BugDTO>> page(@Validated @RequestBody BugPageRequest request)
 
     @GetMapping("/recover/{id}")
     @Operation(summary = "缺陷管理-回收站-恢复")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
     @Log(type = OperationLogType.RECOVER, expression = "#msClass.recoverLog(#id)", msClass = BugLogService.class)
     public void recover(@PathVariable String id) {
         bugService.recover(id);
@@ -59,7 +59,7 @@ public void deleteTrash(@PathVariable String id) {
 
     @PostMapping("/batch-recover")
     @Operation(summary = "缺陷管理-回收站-批量恢复")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void batchRecover(@Validated @RequestBody BugBatchRequest request) {
         request.setUseTrash(true);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanGroupService.java
Patch:
@@ -97,7 +97,7 @@ public void validateGroupCapacity(String groupId, int size) {
         if (!StringUtils.equals(groupId, TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID)) {
             // 判断测试计划组是否存在
             TestPlan groupPlan = testPlanMapper.selectByPrimaryKey(groupId);
-            if (StringUtils.equalsIgnoreCase(groupPlan.getStatus(), TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED)) {
+            if (groupPlan == null) {
                 throw new MSException(Translator.get("test_plan.group.error"));
             }
             //判断并未归档

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -126,7 +126,7 @@ public void batchUpdateExecutor(@Validated @RequestBody TestPlanApiCaseUpdateReq
     @GetMapping("/run/{id}")
     @Operation(summary = "用例执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_case", relationType = "test_plan")
+    @CheckOwner(resourceId = "#id", resourceType = "test_plan", relationType = "test_plan_api_case")
     public TaskRequestDTO run(@PathVariable String id,
                               @Schema(description = "报告ID，传了可以实时获取结果，不传则不支持实时获取")
                               @RequestParam(required = false) String reportId) {
@@ -137,7 +137,7 @@ public TaskRequestDTO run(@PathVariable String id,
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan_api_case", relationType = "test_plan")
+    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_case")
     public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest request) {
         testPlanApiCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -79,15 +79,15 @@ public List<BaseTreeNode> getTree(@Validated @RequestBody TestPlanTreeRequest re
     @GetMapping("/run/{id}")
     @Operation(summary = "接口测试-接口场景管理-场景执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_scenario", relationType = "test_plan")
+    @CheckOwner(resourceId = "#id", resourceType = "test_plan", relationType = "test_plan_api_scenario")
     public TaskRequestDTO run(@PathVariable String id, @RequestParam(required = false) String reportId) {
         return testPlanApiScenarioService.run(id, reportId, SessionUtils.getUserId());
     }
 
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan_api_scenario", relationType = "test_plan")
+    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan", relationType = "test_plan_api_scenario")
     public void batchRun(@Validated @RequestBody TestPlanApiScenarioBatchRunRequest request) {
         testPlanApiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -330,9 +330,9 @@ public void reReviewedCase(FunctionalCaseEditRequest request, FunctionalCaseBlob
         List<ProjectApplication> projectApplications = projectApplicationMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(projectApplications) && Boolean.valueOf(projectApplications.get(0).getTypeValue())) {
             if (!StringUtils.equals(name, request.getName())
-                    || !StringUtils.equals(new String(blob.getSteps(), StandardCharsets.UTF_8), request.getSteps())
-                    || !StringUtils.equals(new String(blob.getTextDescription(), StandardCharsets.UTF_8), request.getTextDescription())
-                    || !StringUtils.equals(new String(blob.getExpectedResult(), StandardCharsets.UTF_8), request.getExpectedResult())) {
+                    || !StringUtils.equals(new String(blob.getSteps() == null ? new byte[0] : blob.getSteps(), StandardCharsets.UTF_8), request.getSteps())
+                    || !StringUtils.equals(new String(blob.getTextDescription() == null ? new byte[0] : blob.getTextDescription(), StandardCharsets.UTF_8), request.getTextDescription())
+                    || !StringUtils.equals(new String(blob.getExpectedResult() == null ? new byte[0] : blob.getExpectedResult(), StandardCharsets.UTF_8), request.getExpectedResult())) {
                 doHandleStatusAndHistory(blob, userId);
             }
         }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanApiScenarioPageResponse.java
Patch:
@@ -76,4 +76,7 @@ public class TestPlanApiScenarioPageResponse implements Serializable {
 
     @Schema(description = "场景用例的id")
     private String apiScenarioId;
+
+    @Schema(description = "脚本错误标识")
+    private String scriptIdentifier;
 }
\ No newline at end of file

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -2030,7 +2030,7 @@ public ApiScenarioBatchOperationResponse batchGCOperation(ApiScenarioBatchReques
                 scenarioIds,
                 sublist -> operationGC(sublist, isDeleteOperation, deleteTime, logInsertModule.getOperator()));
         apiScenarioLogService.saveBatchOperationLog(response, request.getProjectId(),
-                isDeleteOperation ? OperationLogType.DELETE.name() : OperationLogType.RECOVER.name(), logInsertModule, OperationLogModule.API_TEST_SCENARIO_RECYCLE, false);
+                isDeleteOperation ? OperationLogType.DELETE.name() : OperationLogType.RECOVER.name(), logInsertModule, OperationLogModule.API_SCENARIO_MANAGEMENT_SCENARIO, false);
         apiScenarioNoticeService.batchSendNotice(scenarioIds, logInsertModule.getOperator(), request.getProjectId(), NoticeConstants.Event.DELETE);
         return response;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -26,7 +26,7 @@ public class OperationLogModule {
     // 场景管理
     public static final String API_SCENARIO_MANAGEMENT_SCENARIO = "API_TEST_SCENARIO_MANAGEMENT_SCENARIO";
     public static final String API_SCENARIO_MANAGEMENT_MODULE = "API_TEST_SCENARIO_MANAGEMENT_MODULE";
-    public static final String API_TEST_SCENARIO_RECYCLE = "API_TEST_SCENARIO_RECYCLE";
+    public static final String API_TEST_SCENARIO_RECYCLE = "API_TEST_SCENARIO_MANAGEMENT_RECYCLE";
     public static final String API_TEST_MANAGEMENT_RECYCLE = "API_TEST_MANAGEMENT_RECYCLE";
 
     public static final String API_REPORT = "API_TEST_REPORT_CASE";

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -137,7 +137,7 @@ public TaskRequestDTO run(@PathVariable String id,
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_case", relationType = "test_plan")
+    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan_api_case", relationType = "test_plan")
     public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest request) {
         testPlanApiCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -87,7 +87,7 @@ public TaskRequestDTO run(@PathVariable String id, @RequestParam(required = fals
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_scenario", relationType = "test_plan")
+    @CheckOwner(resourceId = "#request.getSelectIds()", resourceType = "test_plan_api_scenario", relationType = "test_plan")
     public void batchRun(@Validated @RequestBody TestPlanApiScenarioBatchRunRequest request) {
         testPlanApiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/FilterChainUtils.java
Patch:
@@ -41,6 +41,8 @@ public static Map<String, String> loadBaseFilterChain() {
         filterChainDefinitionMap.put("/review/functional/case/download/file/**", "anon");
         //缺陷管理富文本访问
         filterChainDefinitionMap.put("/bug/attachment/preview/md/**", "anon");
+        //计划报告富文本访问
+        filterChainDefinitionMap.put("/test-plan/report/preview/md/**", "anon");
 
         filterChainDefinitionMap.put("/system/version/current", "anon");
 

File: backend/services/project-management/src/main/java/io/metersphere/project/service/NoticeMessageTaskService.java
Patch:
@@ -167,11 +167,13 @@ private List<MessageTask> updateMessageTasks(MessageTaskRequest messageTaskReque
         MessageTaskBlobExample messageTaskBlobExample = new MessageTaskBlobExample();
         messageTaskBlobExample.createCriteria().andIdIn(messageTaskIds);
         List<MessageTaskBlob> messageTaskBlobs = messageTaskBlobMapper.selectByExample(messageTaskBlobExample);
+        List<String>messageTaskEqualsRobotIDs = new ArrayList<>();
         for (MessageTask messageTask : messageTasks) {
             messageTask.setUpdateTime(System.currentTimeMillis());
             messageTask.setUpdateUser(userId);
             //如果有机器人id,则是修改机器人开关和消息配置
             if (StringUtils.isNotBlank(messageTaskRequest.getRobotId()) && StringUtils.equalsIgnoreCase(messageTask.getProjectRobotId(), messageTaskRequest.getRobotId())) {
+                messageTaskEqualsRobotIDs.add(messageTask.getId());
                 messageTask.setEnable(enable);
                 messageTask.setUseDefaultSubject(useDefaultSubject);
                 messageTask.setUseDefaultTemplate(useDefaultTemplate);
@@ -183,7 +185,7 @@ private List<MessageTask> updateMessageTasks(MessageTaskRequest messageTaskReque
             mapper.updateByPrimaryKeySelective(messageTask);
         }
         for (MessageTaskBlob messageTaskBlob : messageTaskBlobs) {
-            if (StringUtils.isNotBlank(messageTaskRequest.getRobotId()) && !useDefaultTemplate) {
+            if (StringUtils.isNotBlank(messageTaskRequest.getRobotId()) && !useDefaultTemplate && messageTaskEqualsRobotIDs.contains(messageTaskBlob.getId())) {
                 messageTaskBlob.setTemplate(messageTaskRequest.getTemplate());
                 blobMapper.updateByPrimaryKeyWithBLOBs(messageTaskBlob);
             }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/AbstractCustomFieldValidator.java
Patch:
@@ -49,7 +49,7 @@ protected void validateRequired(TemplateCustomFieldDTO customField, String value
 
     protected void validateArrayRequired(TemplateCustomFieldDTO customField, String value) throws CustomFieldValidateException {
         if (customField.getRequired() && (StringUtils.isBlank(value) || StringUtils.equals(value, "[]"))) {
-            CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_required_tip"), customField.getFieldId()));
+            CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_required_tip"), customField.getFieldName()));
         }
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -290,6 +290,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
 
         TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, apiTestCase, runModeConfig);
         taskRequest.getTaskInfo().setQueueId(queue.getQueueId());
+        taskRequest.getTaskInfo().setUserId(queue.getUserId());
         taskRequest.getTaskItem().setRequestCount(1L);
 
         apiExecuteService.execute(taskRequest);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -260,6 +260,7 @@ public void parallelExecute(List<String> ids, ApiRunModeConfigDTO runModeConfig,
         TaskBatchRequestDTO taskRequest = getTaskBatchRequestDTO(projectId, runModeConfig);
         taskRequest.setTaskItems(taskItems);
         taskRequest.getTaskInfo().setParentQueueId(parentQueueId);
+        taskRequest.getTaskInfo().setUserId(userId);
         apiExecuteService.batchExecute(taskRequest);
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -28,6 +28,7 @@
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.SubListUtils;
+import io.metersphere.system.uid.IDGenerator;
 import jakarta.annotation.Resource;
 import jodd.util.StringUtil;
 import org.apache.commons.collections.CollectionUtils;
@@ -106,7 +107,7 @@ public boolean serialExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
      * @return 是否执行完毕
      */
     public boolean parallelExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
-        String parentQueueId = testPlanExecutionQueue.getQueueId();
+        String parentQueueId = testPlanExecutionQueue.getQueueId() + "_" + IDGenerator.nextStr();
         String testPlanReportId = testPlanExecutionQueue.getPrepareReportId();
         String userId = testPlanExecutionQueue.getCreateUser();
         TestPlanCollection collection = JSON.parseObject(testPlanExecutionQueue.getTestPlanCollectionJson(), TestPlanCollection.class);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -27,6 +27,7 @@
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.SubListUtils;
+import io.metersphere.system.uid.IDGenerator;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
@@ -100,7 +101,7 @@ public boolean serialExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
      * @return 是否执行完毕
      */
     public boolean parallelExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
-        String parentQueueId = testPlanExecutionQueue.getQueueId();
+        String parentQueueId = testPlanExecutionQueue.getQueueId() + "_" + IDGenerator.nextStr();
         String testPlanReportId = testPlanExecutionQueue.getPrepareReportId();
         String userId = testPlanExecutionQueue.getCreateUser();
         TestPlanCollection collection = JSON.parseObject(testPlanExecutionQueue.getTestPlanCollectionJson(), TestPlanCollection.class);

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -263,7 +263,7 @@ public List<BaseTreeNode> options(@PathVariable String projectId) {
     @Operation(summary = "用例调试")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_EXECUTE)
     public TaskRequestDTO debug(@Validated @RequestBody ApiCaseRunRequest request) {
-        return apiTestCaseService.debug(request);
+        return apiTestCaseService.debug(request, SessionUtils.getUserId());
     }
 
     @GetMapping("/run/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -717,6 +717,7 @@ public TaskRequestDTO executeRun(ApiResourceRunRequest runRequest, ApiTestCase a
         TaskInfo taskInfo = taskRequest.getTaskInfo();
         taskInfo.getRunModeConfig().setPoolId(poolId);
         taskInfo.setSaveResult(true);
+        taskInfo.setUserId(userId);
 
         if (StringUtils.isEmpty(taskItem.getReportId())) {
             taskInfo.setRealTime(false);
@@ -740,11 +741,12 @@ public TaskRequestDTO executeRun(ApiResourceRunRequest runRequest, ApiTestCase a
      * @param request
      * @return
      */
-    public TaskRequestDTO debug(ApiCaseRunRequest request) {
+    public TaskRequestDTO debug(ApiCaseRunRequest request, String userId) {
         TaskRequestDTO taskRequest = getTaskRequest(request.getReportId(), request.getId(),
                 request.getProjectId(), apiExecuteService.getDebugRunModule(request.getFrontendDebug()));
         taskRequest.getTaskInfo().setSaveResult(false);
         taskRequest.getTaskInfo().setRealTime(true);
+        taskRequest.getTaskInfo().setUserId(userId);
 
         ApiResourceRunRequest runRequest = apiExecuteService.getApiResourceRunRequest(request);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -93,7 +93,7 @@ private void batchRun(ApiScenarioBatchRunRequest request, String userId) {
      *
      * @param request
      */
-    public void serialExecute(ApiScenarioBatchRunRequest request, String userId) throws Exception {
+    public void serialExecute(ApiScenarioBatchRunRequest request, String userId) {
         List<String> ids = apiScenarioService.doSelectIds(request, false);
         ApiRunModeConfigDTO runModeConfig = getRunModeConfig(request);
         // 初始化集成报告
@@ -143,6 +143,7 @@ public void parallelExecute(ApiScenarioBatchRunRequest request, String userId) {
                 }).toList();
         TaskBatchRequestDTO taskRequest = getTaskBatchRequestDTO(request.getProjectId(), runModeConfig);
         taskRequest.setTaskItems(taskItems);
+        taskRequest.getTaskInfo().setUserId(userId);
 
         apiExecuteService.batchExecute(taskRequest);
     }
@@ -268,6 +269,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
         TaskItem taskItem = apiExecuteService.getTaskItem(reportId, queueDetail.getResourceId());
         taskRequest.setTaskItem(taskItem);
         taskRequest.getTaskInfo().setQueueId(queue.getQueueId());
+        taskRequest.getTaskInfo().setUserId(queue.getUserId());
 
         apiExecuteService.execute(taskRequest);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioRunService.java
Patch:
@@ -191,6 +191,7 @@ public TaskRequestDTO executeRun(ApiScenario apiScenario,
         taskInfo.setSaveResult(true);
         taskInfo.getRunModeConfig().setEnvironmentId(parseParam.getEnvironmentId());
         taskRequest.getTaskItem().setRequestCount(tmpParam.getRequestCount().get());
+        taskInfo.setUserId(userId);
 
         if (StringUtils.isEmpty(taskItem.getReportId())) {
             taskInfo.setRealTime(false);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -126,7 +126,7 @@ public void batchUpdateExecutor(@Validated @RequestBody TestPlanApiCaseUpdateReq
     @GetMapping("/run/{id}")
     @Operation(summary = "用例执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-//    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_case") todo
+    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_case", relationType = "test_plan")
     public TaskRequestDTO run(@PathVariable String id,
                               @Schema(description = "报告ID，传了可以实时获取结果，不传则不支持实时获取")
                               @RequestParam(required = false) String reportId) {
@@ -137,7 +137,7 @@ public TaskRequestDTO run(@PathVariable String id,
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-//    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_case") todo
+    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_case", relationType = "test_plan")
     public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest request) {
         testPlanApiCaseBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -79,15 +79,15 @@ public List<BaseTreeNode> getTree(@Validated @RequestBody TestPlanTreeRequest re
     @GetMapping("/run/{id}")
     @Operation(summary = "接口测试-接口场景管理-场景执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-//    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_scenario")
+    @CheckOwner(resourceId = "#id", resourceType = "test_plan_api_scenario", relationType = "test_plan")
     public TaskRequestDTO run(@PathVariable String id, @RequestParam(required = false) String reportId) {
         return testPlanApiScenarioService.run(id, reportId, SessionUtils.getUserId());
     }
 
     @PostMapping("/batch/run")
     @Operation(summary = "批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-//    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_case") todo
+    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_api_scenario", relationType = "test_plan")
     public void batchRun(@Validated @RequestBody TestPlanApiScenarioBatchRunRequest request) {
         testPlanApiScenarioBatchRunService.asyncBatchRun(request, SessionUtils.getUserId());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -88,8 +88,9 @@ public boolean serialExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
             return true;
         }
 
+        String queueId = testPlanExecutionQueue.getPrepareReportId() + "_" + collection.getId();
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.PLAN_RUN_API_CASE.name(), parentQueueId, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(queueId, ids, runModeConfig, ApiExecuteResourceType.PLAN_RUN_API_CASE.name(), parentQueueId, userId);
 
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -83,8 +83,10 @@ public boolean serialExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
             return true;
         }
 
+        String queueId = testPlanExecutionQueue.getPrepareReportId() + "_" + collection.getId();
+
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.PLAN_RUN_API_SCENARIO.name(), parentQueueId, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(queueId, ids, runModeConfig, ApiExecuteResourceType.PLAN_RUN_API_SCENARIO.name(), parentQueueId, userId);
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());
         executeNextTask(queue, nextDetail);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -297,6 +297,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
         TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, testPlanApiCase.getId(), apiTestCase, runModeConfig);
         taskRequest.getTaskInfo().setQueueId(queue.getQueueId());
         taskRequest.getTaskInfo().setParentQueueId(queue.getParentQueueId());
+        taskRequest.getTaskInfo().setUserId(queue.getUserId());
         taskRequest.getTaskItem().setRequestCount(1L);
 
         apiExecuteService.execute(taskRequest);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanTaskCenterService.java
Patch:
@@ -254,7 +254,7 @@ public void stopById(String id, String userId, String logModule) {
     }
 
     private void stopApiTask(TaskCenterBatchRequest request, List<String> projectIds, String userId, String module) {
-        List<ReportDTO> reports = new ArrayList<>();
+        List<ReportDTO> reports;
         if (request.isSelectAll()) {
             reports = extTestPlanReportMapper.getReports(request, projectIds, null, DateUtils.getDailyStartTime(), DateUtils.getDailyEndTime());
         } else {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/ReportDetailCasePageDTO.java
Patch:
@@ -28,4 +28,6 @@ public class ReportDetailCasePageDTO {
 	private Long bugCount;
 	@Schema(description = "报告详情ID")
 	private String reportId;
+	@Schema(description = "项目ID")
+	private String projectId;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteSupportService.java
Patch:
@@ -62,7 +62,9 @@ public void summaryTestPlanReport(String reportId, boolean isGroupReport, boolea
         LogUtils.info("开始合并报告： --- 报告ID[{}],是否是报告组[{}]", reportId, isGroupReport);
         try {
             // 如果是停止的计划任务, 报告用例状态改成STOPPED
-            updateReportDetailStopped(reportId);
+            if (isStop) {
+                updateReportDetailStopped(reportId);
+            }
 
             if (isGroupReport) {
                 testPlanReportService.summaryGroupReport(reportId);

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/TestPlanConstants.java
Patch:
@@ -13,7 +13,6 @@ public class TestPlanConstants {
 
     //测试计划状态-未开始
     public static final String TEST_PLAN_STATUS_PREPARED = "PREPARED";
-
     //测试计划状态-进行中
     public static final String TEST_PLAN_STATUS_UNDERWAY = "UNDERWAY";
     //测试计划状态-已完成

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanTableRequest.java
Patch:
@@ -23,6 +23,8 @@ public class TestPlanTableRequest extends BasePageRequest {
     @NotBlank(message = "{test_plan.type.not_blank}")
     private String type;
 
+    @Schema(description = "通过Keyword过滤出的测试子计划的测试计划组id")
+    private List<String> keywordFilterIds;
 
     public String getSortString() {
         if (StringUtils.isEmpty(super.getSortString())) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -62,4 +62,6 @@ public interface ExtTestPlanMapper {
     List<String> selectRightfulIdsForExecute(@Param("ids") List<String> ids);
 
     List<TestPlanExecuteHisDTO> listHis(@Param("request")TestPlanExecuteHisPageRequest request);
+
+    List<String> selectGroupIdByKeyword(@Param("projectId") String projectId, @Param("keyword") String keyword);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanLogService.java
Patch:
@@ -185,6 +185,9 @@ public void copyLog(TestPlan testPlan, String operator) {
      * @param typeKey       类型Key
      */
     public void saveBatchLog(List<TestPlan> plans, String operator, String requestUrl, String requestMethod, String requestType, String typeKey) {
+        if (CollectionUtils.isEmpty(plans)) {
+            return;
+        }
         Project project = projectMapper.selectByPrimaryKey(plans.get(0).getProjectId());
         List<LogDTO> list = new ArrayList<>();
         for (TestPlan plan : plans) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -433,7 +433,7 @@ public void batchArchived(TestPlanBatchProcessRequest request, String currentUse
             ).collect(Collectors.toList());
             archivedPlanList.forEach(item -> this.archived(item.getId(), currentUser));
             //日志
-            testPlanLogService.saveBatchLog(archivedPlanList, currentUser, "/test-plan/batch-archived", HttpMethodConstants.POST.name(), OperationLogType.UPDATE.name(), "archive");
+            testPlanLogService.saveBatchLog(archivedPlanList, currentUser, "/test-plan/batch-archived", HttpMethodConstants.POST.name(), OperationLogType.ARCHIVED.name(), "archive");
         }
     }
 
@@ -601,7 +601,7 @@ public long batchCopy(TestPlanBatchRequest request, String userId, String url, S
             //日志
             if (CollectionUtils.isNotEmpty(copyTestPlanList)) {
                 copyCount = testPlanBatchOperationService.batchCopy(copyTestPlanList, request.getTargetId(), request.getMoveType(), userId);
-                testPlanLogService.saveBatchLog(copyTestPlanList, userId, url, method, OperationLogType.COPY.name(), "copy");
+                testPlanLogService.saveBatchLog(copyTestPlanList, userId, url, method, OperationLogType.ADD.name(), "copy");
             }
 
         }
@@ -814,7 +814,7 @@ private void updateTestPlanGroupStatus(String testPlanGroupId) {
             }
         }
         TestPlanExample testPlanExample = new TestPlanExample();
-        testPlanExample.createCriteria().andIdEqualTo(testPlanGroupId).andStatusNotEqualTo(TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED);
+        testPlanExample.createCriteria().andIdEqualTo(testPlanGroupId);
         TestPlan updateGroupPlan = new TestPlan();
         updateGroupPlan.setStatus(groupStatus);
         testPlanMapper.updateByExampleSelective(updateGroupPlan, testPlanExample);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -708,6 +708,7 @@ public TestPlanCaseDetailResponse getFunctionalCaseDetail(String id, String user
         }
         TestPlanCaseDetailResponse response = new TestPlanCaseDetailResponse();
         BeanUtils.copyBean(response, functionalCaseDetail);
+        response.setLastExecuteResult(planFunctionalCase.getLastExecResult());
 
         TestPlanCaseExecuteHistoryExample testPlanCaseExecuteHistoryExample = new TestPlanCaseExecuteHistoryExample();
         testPlanCaseExecuteHistoryExample.createCriteria().andCaseIdEqualTo(caseId).andTestPlanCaseIdEqualTo(id).andDeletedEqualTo(false);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -487,7 +487,7 @@ public void postHandleReport(TestPlanReportPostParam postParam, boolean useManua
 
 		// 发送计划执行通知
 		if (!useManual) {
-			testPlanSendNoticeService.sendExecuteNotice(planReport.getCreateUser(), planReport.getTestPlanId(), planReport.getProjectId(), planReport.getResultStatus());
+			testPlanSendNoticeService.sendExecuteNotice(planReport.getCreateUser(), planReport.getTestPlanId(), planReport.getProjectId(), planReport.getResultStatus(), planReport.getTriggerMode());
 		}
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanResourceService.java
Patch:
@@ -57,7 +57,6 @@ public TestPlanAssociationResponse disassociate(
             TestPlanResourceAssociationParam associationParam = new TestPlanResourceAssociationParam(associationIdList, testPlan.getProjectId(), testPlan.getId(), testPlan.getNum(), logInsertModule.getOperator());
             disassociate.accept(associationParam);
             response.setAssociationCount(associationIdList.size());
-            testPlanResourceLogService.saveDisassociateLog(testPlan, new ResourceLogInsertModule(resourceType, logInsertModule));
         }
         return response;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskcenter/TaskCenterDTO.java
Patch:
@@ -24,6 +24,8 @@ public class TaskCenterDTO implements Serializable {
 
     @Schema(description = "项目id")
     private String projectId;
+    @Schema(description = "组织id")
+    private String organizationId;
 
     @Schema(description = "报告id")
     private String id;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskcenter/TaskCenterScheduleDTO.java
Patch:
@@ -25,6 +25,9 @@ public class TaskCenterScheduleDTO implements Serializable {
     @Schema(description = "项目id")
     private String projectId;
 
+    @Schema(description = "组织id")
+    private String organizationId;
+
     @Schema(description = "任务id")
     private String id;
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-import io.metersphere.api.service.scenario.ApiScenarioLogService;
 import io.metersphere.plan.constants.TestPlanResourceConfig;
 import io.metersphere.plan.domain.TestPlan;
 import io.metersphere.plan.dto.TestPlanExecuteHisDTO;
@@ -243,7 +242,7 @@ public TestPlanOperationResponse sortTestPlan(@Validated @RequestBody PosRequest
     @PostMapping(value = "/schedule-config")
     @Operation(summary = "接口测试-接口场景管理-定时任务配置")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#testPlanId)", msClass = TestPlanLogService.class)
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#request.getResourceId())", msClass = TestPlanLogService.class)
     @CheckOwner(resourceId = "#request.getResourceId()", resourceType = "test_plan")
     public String scheduleConfig(@Validated @RequestBody BaseScheduleConfigRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getResourceId(), TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
@@ -253,7 +252,7 @@ public String scheduleConfig(@Validated @RequestBody BaseScheduleConfigRequest r
     @GetMapping(value = "/schedule-config-delete/{testPlanId}")
     @Operation(summary = "接口测试-接口场景管理-删除定时任务配置")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#testPlanId)", msClass = ApiScenarioLogService.class)
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#testPlanId)", msClass = TestPlanLogService.class)
     @CheckOwner(resourceId = "#testPlanId", resourceType = "test_plan")
     public void deleteScheduleConfig(@PathVariable String testPlanId) {
         testPlanManagementService.checkModuleIsOpen(testPlanId, TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanExecuteController.java
Patch:
@@ -45,9 +45,9 @@ public String startExecute(@Validated @RequestBody TestPlanExecuteRequest reques
     }
 
     @PostMapping("/batch")
-    @Operation(summary = "测试计划-开始自行")
+    @Operation(summary = "测试计划-批量执行")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_EXECUTE)
-    @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @CheckOwner(resourceId = "#request.getExecuteIds()", resourceType = "test_plan")
     @Log(type = OperationLogType.EXECUTE, expression = "#msClass.batchExecuteLog(#request)", msClass = TestPlanLogService.class)
     public void startExecute(@Validated @RequestBody TestPlanBatchExecuteRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getProjectId(), TestPlanResourceConfig.CHECK_TYPE_PROJECT, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanExecuteController.java
Patch:
@@ -51,7 +51,9 @@ public String startExecute(@Validated @RequestBody TestPlanExecuteRequest reques
     @Log(type = OperationLogType.EXECUTE, expression = "#msClass.batchExecuteLog(#request)", msClass = TestPlanLogService.class)
     public void startExecute(@Validated @RequestBody TestPlanBatchExecuteRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getProjectId(), TestPlanResourceConfig.CHECK_TYPE_PROJECT, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
-        testPlanExecuteService.batchExecuteTestPlan(request, SessionUtils.getUserId());
+        Thread.startVirtualThread(() ->
+                testPlanExecuteService.batchExecuteTestPlan(request, SessionUtils.getUserId())
+        );
     }
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanLogService.java
Patch:
@@ -257,7 +257,7 @@ public void saveMoveLog(TestPlan testPlan, String moveId, LogInsertModule logIns
     }
 
     private String getLogModule(TestPlan testPlan) {
-        if (StringUtils.equalsIgnoreCase(testPlan.getStatus(), TestPlanConstants.TEST_PLAN_TYPE_PLAN)) {
+        if (StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_PLAN)) {
             return OperationLogModule.TEST_PLAN_TEST_PLAN;
         } else {
             return OperationLogModule.TEST_PLAN_TEST_PLAN_GROUP;

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanExecuteTests.java
Patch:
@@ -45,7 +45,6 @@ public class TestPlanExecuteTests extends BaseTest {
     private static TestPlan noGroupPlan;
 
     private static final String URL_POST_TEST_PLAN_SINGLE_EXECUTE = "/test-plan-execute/single";
-    private static final String URL_POST_TEST_PLAN_BATCH_EXECUTE = "/test-plan-execute/batch";
 
     @Resource
     private CommonProjectService commonProjectService;
@@ -242,8 +241,7 @@ private void executeBatch(List<String> execIds, String runMode) throws Exception
         batchExecuteRequest.setExecuteIds(execIds);
         batchExecuteRequest.setProjectId(project.getId());
         batchExecuteRequest.setRunMode(runMode);
-
-        this.requestPostWithOk(URL_POST_TEST_PLAN_BATCH_EXECUTE, batchExecuteRequest);
+        testPlanExecuteService.batchExecuteTestPlan(batchExecuteRequest, "admin");
 
         //检查队列
         List<String> allQueueIds = new ArrayList<>();

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseNoticeService.java
Patch:
@@ -100,6 +100,7 @@ private void setNotifier(FunctionalCaseCommentRequest functionalCaseCommentReque
                 List<String> notifierList = Arrays.asList(notifier.split(";"));
                 StringBuilder notifierStr = new StringBuilder();
                 if (notifierList.contains(replyUser)) {
+                    notifierStr.append(replyUser).append(";");
                     for (String notifierId : notifierList) {
                         if (!StringUtils.equals(notifierId, replyUser)) {
                             notifierStr.append(notifierId).append(";");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -223,7 +223,7 @@ private String executeTestPlanOrGroup(TestPlanExecutionQueue executionQueue) {
         genReportRequest.setTestPlanId(executionQueue.getSourceID());
         genReportRequest.setProjectId(testPlan.getProjectId());
         if (StringUtils.equalsIgnoreCase(testPlan.getType(), TestPlanConstants.TEST_PLAN_TYPE_GROUP)) {
-            //更改测试计划组的状态
+
             List<TestPlan> children = testPlanService.selectNotArchivedChildren(testPlan.getId());
             // 预生成计划组报告
             Map<String, String> reportMap = testPlanReportService.genReportByExecution(executionQueue.getPrepareReportId(), genReportRequest, executionQueue.getCreateUser());
@@ -251,12 +251,12 @@ private String executeTestPlanOrGroup(TestPlanExecutionQueue executionQueue) {
             }
 
             LogUtils.info("计划组的执行节点 --- 队列ID[{}],队列类型[{}],父队列ID[{}],父队列类型[{}]", queueId, queueType, executionQueue.getParentQueueId(), executionQueue.getParentQueueType());
-
-            testPlanService.setExecuteConfig(executionQueue.getSourceID(), executionQueue.getPrepareReportId());
             if (CollectionUtils.isEmpty(childrenQueue)) {
                 //本次的测试计划组执行完成
                 this.testPlanGroupQueueFinish(executionQueue.getQueueId(), executionQueue.getQueueType());
             } else {
+                //更改测试计划组的状态
+                testPlanService.setExecuteConfig(executionQueue.getSourceID(), executionQueue.getPrepareReportId());
                 testPlanExecuteSupportService.setRedisForList(testPlanExecuteSupportService.genQueueKey(queueId, queueType), childrenQueue.stream().map(JSON::toJSONString).toList());
 
                 if (StringUtils.equalsIgnoreCase(executionQueue.getRunMode(), ApiBatchRunMode.SERIAL.name())) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -308,6 +308,7 @@ public TestPlanReport preGenReport(String prepareId, TestPlanReportGenPreParam g
         report.setDeleted(false);
         report.setPassThreshold(config == null ? null : config.getPassThreshold());
         report.setParentId(genParam.getGroupReportId());
+		report.setTestPlanName(genParam.getTestPlanName());
         testPlanReportMapper.insertSelective(report);
 
 		TestPlanReportDetailCaseDTO reportCaseDetail;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanSendNoticeService.java
Patch:
@@ -196,7 +196,7 @@ public void sendExecuteNotice(String currentUser, String planId, String projectI
             paramMap.put("Language", user.getLanguage());
             NoticeModel noticeModel = NoticeModel.builder().operator(currentUser).excludeSelf(false)
                     .context(template).subject(subject).paramMap(paramMap).event(StringUtils.equals(executeResult, ReportStatus.SUCCESS.name()) ?
-                            NoticeConstants.TemplateText.TEST_PLAN_TASK_EXECUTE_SUCCESSFUL : NoticeConstants.TemplateText.TEST_PLAN_TASK_EXECUTE_FAILED).build();
+                            NoticeConstants.Event.EXECUTE_SUCCESSFUL : NoticeConstants.Event.EXECUTE_FAIL).build();
             noticeSendService.send(NoticeConstants.TaskType.TEST_PLAN_TASK, noticeModel);
         }
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -98,6 +98,9 @@ private static void buildSourceCount(List<NotificationDTO> notifications, List<O
             if (k.contains("TEST_PLAN")) {
                 countMap.merge("TEST_PLAN", v.size(), Integer::sum);
             }
+            if (k.contains("JENKINS")) {
+                countMap.merge("JENKINS", v.size(), Integer::sum);
+            }
         });
         countMap.forEach((k, v) -> {
             OptionDTO optionDTO = new OptionDTO();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -78,6 +78,7 @@ public List<TestPlanResponse> list(TestPlanTableRequest request) {
     public List<TestPlan> groupList(String projectId) {
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andTypeEqualTo(TestPlanConstants.TEST_PLAN_TYPE_GROUP).andProjectIdEqualTo(projectId).andStatusNotEqualTo(TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED);
+        example.setOrderByClause("num desc");
         return testPlanMapper.selectByExample(example);
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseDTO.java
Patch:
@@ -25,4 +25,7 @@ public class FunctionalCaseDTO extends FunctionalCaseMessageDTO {
     @Schema(description =  "触发方式：功能用例执行相关（测试计划/定时任务/用例评审）")
     private String triggerMode;
 
+    @Schema(description = "message.follow_people")
+    private List<String> followUsers;
+
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -73,4 +73,7 @@ public interface ExtTestPlanApiCaseMapper {
     List<ApiTestCase> selectApiCaseByDefinitionIds(@Param("ids") List<String> ids, @Param("isRepeat") boolean isRepeat, @Param("testPlanId") String testPlanId);
 
     List<TestPlanApiCase> getSelectIdAndCollectionId(@Param("request") TestPlanApiCaseBatchRequest request);
+
+    List<TestPlanApiCase> getPlanApiCaseNotDeletedByCollectionIds(@Param("collectionIds") List<String> collectionIds);
+
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -67,4 +67,6 @@ public interface ExtTestPlanApiScenarioMapper {
     List<TestPlanApiScenario> getSelectIdAndCollectionId(@Param("request")  TestPlanApiScenarioBatchRunRequest request);
 
     List<String> getIdsByReportIdAndCollectionId(@Param("testPlanReportId") String testPlanReportId, @Param("collectionId") String collectionId);
+
+    List<TestPlanApiScenario> getPlanScenarioCaseNotDeletedByCollectionIds(@Param("collectionIds") List<String> collectionIds);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanFunctionalCaseMapper.java
Patch:
@@ -64,4 +64,7 @@ public interface ExtTestPlanFunctionalCaseMapper {
     Long getMaxPosByCollectionId(String collectionId);
 
     List<ModuleCountDTO> collectionCountByRequest(@Param("request") TestPlanCaseModuleRequest request);
+
+    List<TestPlanFunctionalCase> getPlanCaseNotDeletedByCollectionIds(@Param("collectionIds") List<String> collectionIds);
+
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -65,7 +65,7 @@ public TestPlanOperationResponse sortNode(@Validated @RequestBody ResourceSortRe
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanApiCasePageResponse>> page(@Validated @RequestBody TestPlanApiCaseRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString("id")) ? request.getSortString("id") : "t.pos asc");
+                StringUtils.isNotBlank(request.getSortString("id")) ? request.getSortString("id") : "t.pos desc");
         return PageUtils.setPageInfo(page, testPlanApiCaseService.hasRelateApiCaseList(request, false));
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -56,7 +56,7 @@ public class TestPlanApiScenarioController {
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanApiScenarioPageResponse>> page(@Validated @RequestBody TestPlanApiScenarioRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString("id")) ? request.getSortString("id") : "test_plan_api_scenario.pos asc");
+                StringUtils.isNotBlank(request.getSortString("id")) ? request.getSortString("id") : "test_plan_api_scenario.pos desc");
         return PageUtils.setPageInfo(page, testPlanApiScenarioService.hasRelateApiScenarioList(request, false));
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanFunctionalCaseController.java
Patch:
@@ -66,7 +66,7 @@ public TestPlanOperationResponse sortNode(@Validated @RequestBody ResourceSortRe
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanCasePageResponse>> page(@Validated @RequestBody TestPlanCaseRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString("id", "functional_case")) ? request.getSortString("id", "functional_case") : "test_plan_functional_case.pos asc");
+                StringUtils.isNotBlank(request.getSortString("id", "functional_case")) ? request.getSortString("id", "functional_case") : "test_plan_functional_case.pos desc");
 
         return PageUtils.setPageInfo(page, testPlanFunctionalCaseService.getFunctionalCasePage(request, false));
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanCaseBatchRunRequest.java
Patch:
@@ -13,7 +13,6 @@
 public class TestPlanCaseBatchRunRequest extends BasePlanCaseBatchRequest {
 
     @Schema(description = "项目Id")
-    @NotBlank(message = "{test_plan.project_id.not_blank}")
     private String projectId;
 
     @Schema(description = "最终执行结果")

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseMinderService.java
Patch:
@@ -1162,7 +1162,7 @@ public List<FunctionalMinderTreeDTO> getPlanMindFunctionalCase(FunctionalCasePla
     }
 
 
-    public List<BaseTreeNode> getTree(FunctionalCaseMindRequest request) {
+    public List<BaseTreeNode> getTree(FunctionalCaseMindTreeRequest request) {
         List<BaseTreeNode> functionalModuleList = extFunctionalCaseModuleMapper.selectBaseByProjectId(request.getProjectId());
         List<BaseTreeNode> baseTreeNodes = extFunctionalCaseMapper.selectBaseMindNodeByProjectId(request.getProjectId());
         functionalModuleList.addAll(baseTreeNodes);

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseMinderControllerTest.java
Patch:
@@ -334,9 +334,8 @@ public void testEditList() throws Exception {
     @Test
     @Order(3)
     public void testGetCaseModuleNodeList() throws Exception {
-        FunctionalCaseMindRequest request = new FunctionalCaseMindRequest();
+        FunctionalCaseMindTreeRequest request = new FunctionalCaseMindTreeRequest();
         request.setProjectId("project-case-minder-test");
-        request.setCurrent(1);
         MvcResult mvcResultPage = this.requestPostWithOkAndReturn(FUNCTIONAL_CASE_NODE_MODULE_URL, request);
         String contentAsString = mvcResultPage.getResponse().getContentAsString(StandardCharsets.UTF_8);
         ResultHolder resultHolder = JSON.parseObject(contentAsString, ResultHolder.class);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanReportDetailResponse.java
Patch:
@@ -16,6 +16,8 @@ public class TestPlanReportDetailResponse {
     private String id;
     @Schema(description = "报告名称")
     private String name;
+    @Schema(description = "计划名称")
+    private String testPlanName;
     @Schema(description = "报告创建时间")
     private Long createTime;
     @Schema(description = "报告开始(执行)时间")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -290,7 +290,7 @@ public Map<String, String> genReport(String prepareReportId,TestPlanReportGenReq
 	 * 预生成报告内容(汇总前调用)
 	 * @return 报告
 	 */
-	public TestPlanReport preGenReport(String prepareId,TestPlanReportGenPreParam genParam, String currentUser, String logPath, TestPlanReportModuleParam moduleParam, List<String> childPlanIds) {
+	public TestPlanReport preGenReport(String prepareId, TestPlanReportGenPreParam genParam, String currentUser, String logPath, TestPlanReportModuleParam moduleParam, List<String> childPlanIds) {
 		// 计划配置
 		TestPlanConfig config = testPlanConfigMapper.selectByPrimaryKey(genParam.getTestPlanId());
 

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanTests.java
Patch:
@@ -599,6 +599,7 @@ public void testPlanAddTest() throws Exception {
                     testPlanReport.setProjectId(project.getId());
                     testPlanReport.setIntegrated(false);
                     testPlanReport.setDeleted(false);
+                    testPlanReport.setTestPlanName("test");
                     batchInsert.insert(testPlanReport);
                 }
                 sqlSession.flushStatements();

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -129,7 +129,6 @@ public List<FunctionalCaseVersionDTO> getVersion(@PathVariable @NotBlank(message
     @Operation(summary = "用例管理-功能用例-删除用例")
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_DELETE)
     @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteFunctionalCaseLog(#request)", msClass = FunctionalCaseLogService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.FUNCTIONAL_CASE_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getDeleteFunctionalCaseDTO(#request.id)", targetClass = FunctionalCaseNoticeService.class)
     @CheckOwner(resourceId = "#request.getId()", resourceType = "functional_case")
     public void deleteFunctionalCase(@Validated @RequestBody FunctionalCaseDeleteRequest request) {
         String userId = SessionUtils.getUserId();

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -154,7 +154,8 @@ public class OperationLogModule {
     public static final String BUG_MANAGEMENT_RECYCLE = "BUG_MANAGEMENT_BUG_RECYCLE";
     //测试计划
     public static final String TEST_PLAN = "TEST_PLAN";
-    public static final String TEST_PLAN_INDEX = "TEST_PLAN_INDEX";
+    public static final String TEST_PLAN_TEST_PLAN = "TEST_PLAN_PLAN";
+    public static final String TEST_PLAN_TEST_PLAN_GROUP = "TEST_PLAN_GROUP";
     public static final String TEST_PLAN_MODULE = "TEST_PLAN_MODULE";
     public static final String TEST_PLAN_REPORT = "TEST_PLAN_REPORT_TEST_PLAN";
     public static final String TEST_PLAN_GROUP_REPORT = "TEST_PLAN_REPORT_TEST_PLAN_GROUP";

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBatchOperationService.java
Patch:
@@ -170,7 +170,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
                     throw new MSException(Translator.get("test_plan.group.error"));
                 }
                 pos = testPlanGroupService.getNextOrder(targetId);
-                moduleId = group.getId();
+                moduleId = group.getModuleId();
             }
             groupId = targetId;
         } else {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -840,10 +840,11 @@ private void updateTestPlanGroupStatus(String testPlanGroupId) {
                 groupStatus = TestPlanConstants.TEST_PLAN_STATUS_UNDERWAY;
             }
         }
+        TestPlanExample testPlanExample = new TestPlanExample();
+        testPlanExample.createCriteria().andIdEqualTo(testPlanGroupId).andStatusNotEqualTo(TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED);
         TestPlan updateGroupPlan = new TestPlan();
-        updateGroupPlan.setId(testPlanGroupId);
         updateGroupPlan.setStatus(groupStatus);
-        testPlanMapper.updateByPrimaryKeySelective(updateGroupPlan);
+        testPlanMapper.updateByExampleSelective(updateGroupPlan, testPlanExample);
         if (StringUtils.equalsIgnoreCase(updateGroupPlan.getStatus(), TestPlanConstants.TEST_PLAN_STATUS_COMPLETED)) {
             extTestPlanMapper.setActualEndTime(testPlanGroupId, System.currentTimeMillis());
         }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -62,7 +62,7 @@ public Pager<List<TestPlanReportPageResponse>> page(@Validated @RequestBody Test
     @Operation(summary = "测试计划-报告-重命名")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_REPORT_READ_UPDATE)
     @CheckOwner(resourceId = "#id", resourceType = "test_plan_report")
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#id)", msClass = TestPlanReportLogService.class)
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.renameLog(#id, #name)", msClass = TestPlanReportLogService.class)
     public void rename(@PathVariable String id, @RequestBody Object name) {
         testPlanReportService.rename(id, name.toString());
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -521,7 +521,7 @@ public TestPlanReportDetailResponse getReport(String reportId) {
 			// 计划组报告, 需要统计计划的执行数据
 			planReportDetail.setPlanCount(reportSummary.getPlanCount().intValue());
 			TestPlanReportExample reportExample = new TestPlanReportExample();
-			reportExample.createCriteria().andParentIdEqualTo(reportId);
+			reportExample.createCriteria().andParentIdEqualTo(reportId).andIntegratedEqualTo(false);
 			List<TestPlanReport> testPlanReports = testPlanReportMapper.selectByExample(reportExample);
 			long planPassCount = testPlanReports.stream().filter(report -> StringUtils.equals(ExecStatus.SUCCESS.name(), report.getResultStatus())).count();
 			planReportDetail.setPassCountOfPlan((int) planPassCount);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -47,6 +47,8 @@ public class TestPlanController {
     @Resource
     private TestPlanService testPlanService;
     @Resource
+    private TestPlanScheduleService testPlanScheduleService;
+    @Resource
     private TestPlanManagementService testPlanManagementService;
     @Resource
     private TestPlanStatisticsService testPlanStatisticsService;
@@ -245,7 +247,7 @@ public TestPlanOperationResponse sortTestPlan(@Validated @RequestBody PosRequest
     @CheckOwner(resourceId = "#request.getResourceId()", resourceType = "test_plan")
     public String scheduleConfig(@Validated @RequestBody BaseScheduleConfigRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getResourceId(), TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
-        return testPlanService.scheduleConfig(request, SessionUtils.getUserId());
+        return testPlanScheduleService.scheduleConfig(request, SessionUtils.getUserId());
     }
 
     @GetMapping(value = "/schedule-config-delete/{testPlanId}")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -922,7 +922,7 @@ private CaseCount countMap(List<CaseStatusCountMap> resultMapList) {
         Map<String, Long> resultMap = resultMapList.stream().collect(Collectors.toMap(CaseStatusCountMap::getStatus, CaseStatusCountMap::getCount));
         caseCount.setSuccess(resultMap.getOrDefault(ExecStatus.SUCCESS.name(), 0L).intValue());
         caseCount.setError(resultMap.getOrDefault(ExecStatus.ERROR.name(), 0L).intValue());
-        caseCount.setPending(resultMap.getOrDefault(ExecStatus.PENDING.name(), 0L).intValue());
+        caseCount.setPending(resultMap.getOrDefault(ExecStatus.PENDING.name(), 0L).intValue() + resultMap.getOrDefault(ExecStatus.STOPPED.name(), 0L).intValue());
         caseCount.setBlock(resultMap.getOrDefault(ExecStatus.BLOCKED.name(), 0L).intValue());
         caseCount.setFakeError(resultMap.getOrDefault(ExecStatus.FAKE_ERROR.name(), 0L).intValue());
         return caseCount;

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseMinderService.java
Patch:
@@ -635,7 +635,7 @@ private Map<String, String> dealCase(FunctionalCaseMinderEditRequest request, St
                     FunctionalCaseCustomField customField = new FunctionalCaseCustomField();
                     customField.setCaseId(caseId);
                     customField.setFieldId(defaultCustomFieldValueMap.get("priorityFieldId").toString());
-                    customField.setValue("P" + (functionalCaseChangeRequest.getPriority() - 1));
+                    customField.setValue("P" + (functionalCaseChangeRequest.getPriority() == 0 ? 0 : functionalCaseChangeRequest.getPriority() - 1));
                     caseCustomFieldMapper.insertSelective(customField);
                     //日志
                     FunctionalCaseHistoryLogDTO historyLogDTO = new FunctionalCaseHistoryLogDTO(functionalCase, functionalCaseBlob, functionalCaseCustomFields, new ArrayList<>(), new ArrayList<>());

File: backend/services/bug-management/src/test/java/io/metersphere/bug/controller/BugControllerTests.java
Patch:
@@ -836,7 +836,7 @@ private BugEditRequest buildJiraBugRequest(boolean isUpdate) {
             handleUserField.setId("assignee");
             handleUserField.setName("处理人");
             handleUserField.setType("select");
-            handleUserField.setValue("60f68f7952162b0068de6a2d");
+            handleUserField.setValue("5f44bb528d89e300469effed");
             BugCustomFieldDTO statusField = new BugCustomFieldDTO();
             statusField.setId("status");
             statusField.setName("状态");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -367,6 +367,8 @@ public TestPlan update(TestPlanUpdateRequest request, String userId, String requ
             }
             if (CollectionUtils.isNotEmpty(request.getTags())) {
                 updateTestPlan.setTags(new ArrayList<>(request.getTags()));
+            } else {
+                updateTestPlan.setTags(new ArrayList<>());
             }
             updateTestPlan.setPlannedStartTime(request.getPlannedStartTime());
             updateTestPlan.setPlannedEndTime(request.getPlannedEndTime());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiCaseMapper.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.plan.dto.ResourceSelectParam;
 import io.metersphere.plan.dto.TestPlanCaseRunResultCount;
 import io.metersphere.plan.dto.request.TestPlanApiCaseBatchRequest;
+import io.metersphere.plan.dto.request.TestPlanApiCaseModuleRequest;
 import io.metersphere.plan.dto.request.TestPlanApiCaseRequest;
 import io.metersphere.plan.dto.request.TestPlanApiRequest;
 import io.metersphere.plan.dto.response.TestPlanApiCasePageResponse;
@@ -55,7 +56,7 @@ public interface ExtTestPlanApiCaseMapper {
 
     void batchUpdateExecutor(@Param("ids") List<String> ids, @Param("userId") String userId);
 
-    List<ModuleCountDTO> collectionCountByRequest(@Param("testPlanId") String testPlanId);
+    List<ModuleCountDTO> collectionCountByRequest(@Param("request") TestPlanApiCaseModuleRequest request);
 
     Long getMaxPosByCollectionId(String collectionId);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -44,7 +44,7 @@ public interface ExtTestPlanApiScenarioMapper {
 
     List<String> selectIdByProjectIdAndTestPlanId(@Param("projectId") String projectId, @Param("testPlanId") String testPlanId);
 
-    List<ModuleCountDTO> collectionCountByRequest(@Param("testPlanId") String testPlanId);
+    List<ModuleCountDTO> collectionCountByRequest(@Param("request") TestPlanApiScenarioModuleRequest request);
 
     List<ProjectOptionDTO> selectRootIdByTestPlanId(@Param("testPlanId") String testPlanId);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanFunctionalCaseMapper.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.plan.dto.ResourceSelectParam;
 import io.metersphere.plan.dto.TestPlanCaseRunResultCount;
 import io.metersphere.plan.dto.request.BasePlanCaseBatchRequest;
+import io.metersphere.plan.dto.request.TestPlanCaseModuleRequest;
 import io.metersphere.plan.dto.request.TestPlanCaseRequest;
 import io.metersphere.plan.dto.response.TestPlanCasePageResponse;
 import io.metersphere.project.dto.DropNode;
@@ -62,5 +63,5 @@ public interface ExtTestPlanFunctionalCaseMapper {
 
     Long getMaxPosByCollectionId(String collectionId);
 
-    List<ModuleCountDTO> collectionCountByRequest(@Param("testPlanId") String testPlanId);
+    List<ModuleCountDTO> collectionCountByRequest(@Param("request") TestPlanCaseModuleRequest request);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -344,7 +344,7 @@ public Map<String, Long> moduleCount(TestPlanApiCaseModuleRequest request) {
     private Map<String, Long> getCollectionCount(TestPlanApiCaseModuleRequest request) {
         request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
-        List<ModuleCountDTO> list = extTestPlanApiCaseMapper.collectionCountByRequest(request.getTestPlanId());
+        List<ModuleCountDTO> list = extTestPlanApiCaseMapper.collectionCountByRequest(request);
         list.forEach(item -> {
             projectModuleCountMap.put(item.getModuleId(), (long) item.getDataCount());
         });

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -478,7 +478,7 @@ public Map<String, Long> moduleCount(TestPlanApiScenarioModuleRequest request) {
     private Map<String, Long> getCollectionCount(TestPlanApiScenarioModuleRequest request) {
         request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
-        List<ModuleCountDTO> list = extTestPlanApiScenarioMapper.collectionCountByRequest(request.getTestPlanId());
+        List<ModuleCountDTO> list = extTestPlanApiScenarioMapper.collectionCountByRequest(request);
         list.forEach(item -> {
             projectModuleCountMap.put(item.getModuleId(), (long) item.getDataCount());
         });

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -371,7 +371,7 @@ public Map<String, Long> moduleCount(TestPlanCaseModuleRequest request) {
     private Map<String, Long> getCollectionCount(TestPlanCaseModuleRequest request) {
         request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
-        List<ModuleCountDTO> list = extTestPlanFunctionalCaseMapper.collectionCountByRequest(request.getTestPlanId());
+        List<ModuleCountDTO> list = extTestPlanFunctionalCaseMapper.collectionCountByRequest(request);
         list.forEach(item -> {
             projectModuleCountMap.put(item.getModuleId(), (long) item.getDataCount());
         });

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ApiStepParser.java
Patch:
@@ -83,6 +83,7 @@ private void replaceBodyParams(Body valueBody, Body refBody) {
         if (refBody == null || valueBody == null) {
             return;
         }
+        refBody.setBodyType(valueBody.getBodyType());
         if (StringUtils.equals(refBody.getBodyType(), Body.BodyType.FORM_DATA.name()) &&
                 valueBody.getFormDataBody() != null && refBody.getFormDataBody() != null) {
             replaceKvParam(valueBody.getFormDataBody().getFormValues(), valueBody.getFormDataBody().getFormValues());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.api.dto.definition.ApiReportDTO;
 import io.metersphere.api.dto.definition.ApiReportDetailDTO;
 import io.metersphere.api.service.definition.ApiReportService;
-import io.metersphere.plan.constants.TestPlanResourceConfig;
 import io.metersphere.plan.dto.request.*;
 import io.metersphere.plan.dto.response.TestPlanApiCasePageResponse;
 import io.metersphere.plan.dto.response.TestPlanAssociationResponse;
@@ -148,7 +147,7 @@ public void batchRun(@Validated @RequestBody TestPlanApiCaseBatchRunRequest requ
     @GetMapping("/report/get/{id}")
     @Operation(summary = "测试计划-用例列表-执行结果获取")
     @CheckOwner(resourceId = "#id", resourceType = "api_report")
-    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_READ, PermissionConstants.TEST_PLAN_REPORT_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_REPORT_READ, PermissionConstants.TEST_PLAN_READ_EXECUTE}, logical = Logical.OR)
     public ApiReportDTO get(@PathVariable String id) {
         testPlanApiCaseService.checkReportIsTestPlan(id);
         return apiReportService.get(id);
@@ -157,7 +156,7 @@ public ApiReportDTO get(@PathVariable String id) {
     @GetMapping("/report/get/detail/{reportId}/{stepId}")
     @Operation(summary = "测试计划-用例列表-执行结果获取-报告详情获取")
     @CheckOwner(resourceId = "#reportId", resourceType = "api_report")
-    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_READ, PermissionConstants.TEST_PLAN_REPORT_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_REPORT_READ, PermissionConstants.TEST_PLAN_READ_EXECUTE}, logical = Logical.OR)
     public List<ApiReportDetailDTO> getDetail(@PathVariable String reportId,
                                               @PathVariable String stepId) {
         testPlanApiCaseService.checkReportIsTestPlan(reportId);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiScenarioController.java
Patch:
@@ -128,7 +128,7 @@ public void batchUpdateExecutor(@Validated @RequestBody TestPlanApiScenarioUpdat
     @GetMapping("/report/get/{id}")
     @Operation(summary = "测试计划-计划详情-场景用例列表-查看执行结果")
     @CheckOwner(resourceId = "#id", resourceType = "api_scenario_report")
-    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_READ, PermissionConstants.TEST_PLAN_REPORT_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_REPORT_READ, PermissionConstants.TEST_PLAN_READ_EXECUTE}, logical = Logical.OR)
     public ApiScenarioReportDTO get(@PathVariable String id) {
         testPlanApiScenarioService.checkReportIsTestPlan(id);
         return apiScenarioReportService.get(id);
@@ -137,7 +137,7 @@ public ApiScenarioReportDTO get(@PathVariable String id) {
     @GetMapping("report/get/detail/{reportId}/{stepId}")
     @Operation(summary = "测试计划-计划详情-场景用例列表-执行结果详情获取")
     @CheckOwner(resourceId = "#reportId", resourceType = "api_scenario_report")
-    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_READ, PermissionConstants.TEST_PLAN_REPORT_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.TEST_PLAN_REPORT_READ, PermissionConstants.TEST_PLAN_READ_EXECUTE}, logical = Logical.OR)
     public List<ApiScenarioReportDetailDTO> getDetail(@PathVariable String reportId,
                                                       @PathVariable String stepId) {
         testPlanApiScenarioService.checkReportIsTestPlan(reportId);

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiCaseControllerTests.java
Patch:
@@ -453,7 +453,7 @@ public void testGet() throws Exception {
 
 
         // @@校验权限
-        requestGetPermissionTest(PermissionConstants.TEST_PLAN_READ, "/report/get/plan-test-report-id");
+        requestGetPermissionTest(PermissionConstants.TEST_PLAN_REPORT_READ, "/report/get/plan-test-report-id");
 
         List<ApiReportDetail> reportsDetail = new ArrayList<>();
         for (int i = 0; i < 2; i++) {
@@ -471,7 +471,7 @@ public void testGet() throws Exception {
 
         this.requestGetWithOk("/report/get/detail/plan-test-report-id" + "/" + "plan-test-report-step-id1")
                 .andReturn();
-        requestGetPermissionTest(PermissionConstants.TEST_PLAN_READ, "/report/get/detail/plan-test-report-id" + "/" + "plan-test-report-step-id1");
+        requestGetPermissionTest(PermissionConstants.TEST_PLAN_REPORT_READ, "/report/get/detail/plan-test-report-id" + "/" + "plan-test-report-step-id1");
     }
 
     @Test

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiScenarioControllerTests.java
Patch:
@@ -500,7 +500,7 @@ public void testGet() throws Exception {
         apiScenarioReportMapper.updateByPrimaryKeySelective(scenarioReport1);
 
         // @@校验权限
-        requestGetPermissionTest(PermissionConstants.TEST_PLAN_READ, "/report/get/plan-test-scenario-report-id");
+        requestGetPermissionTest(PermissionConstants.TEST_PLAN_REPORT_READ, "/report/get/plan-test-scenario-report-id");
         List<ApiScenarioReportDetail> reportsDetails = new ArrayList<>();
         List<ApiScenarioReportDetailBlob> reportBlogs = new ArrayList<>();
 
@@ -527,7 +527,7 @@ public void testGet() throws Exception {
 
         this.requestGetWithOk("/report/get/detail/plan-test-scenario-report-id/plan-test-scenario-report-step-id1")
                 .andReturn();
-        requestGetPermissionTest(PermissionConstants.TEST_PLAN_READ, "/report/get/detail/plan-test-scenario-report-id/plan-test-scenario-report-step-id1");
+        requestGetPermissionTest(PermissionConstants.TEST_PLAN_REPORT_READ, "/report/get/detail/plan-test-scenario-report-id/plan-test-scenario-report-step-id1");
     }
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanCollectionMapper.java
Patch:
@@ -13,4 +13,6 @@ public interface ExtTestPlanCollectionMapper {
     List<TestPlanCollectionEnvDTO> selectSecondCollectionEnv(@Param("type") String type, @Param("parentId") String parentId, @Param("testPlanId") String testPlanId);
 
     TestPlanCollectionEnvDTO selectFirstCollectionEnv(@Param("type") String type, @Param("parentId") String parentId, @Param("testPlanId") String testPlanId);
+
+    String selectDefaultCollectionId(@Param("testPlanId")String newTestPlanId,@Param("type") String key);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -148,8 +148,9 @@ public Map<String, Long> caseExecResultCount(String testPlanId) {
     }
 
     @Override
-    public long copyResource(String originalTestPlanId, String newTestPlanId, String operator, long operatorTime) {
+    public long copyResource(String originalTestPlanId, String newTestPlanId, Map<String, String> oldCollectionIdToNewCollectionId, String operator, long operatorTime) {
         List<TestPlanApiCase> copyList = new ArrayList<>();
+        String defaultCollectionId = extTestPlanCollectionMapper.selectDefaultCollectionId(newTestPlanId, CaseType.SCENARIO_CASE.getKey());
         extTestPlanApiCaseMapper.selectByTestPlanIdAndNotDeleted(originalTestPlanId).forEach(originalCase -> {
             TestPlanApiCase newCase = new TestPlanApiCase();
             BeanUtils.copyBean(newCase, originalCase);
@@ -158,6 +159,7 @@ public long copyResource(String originalTestPlanId, String newTestPlanId, String
             newCase.setCreateTime(operatorTime);
             newCase.setCreateUser(operator);
             newCase.setLastExecTime(0L);
+            newCase.setTestPlanCollectionId(oldCollectionIdToNewCollectionId.get(newCase.getTestPlanCollectionId()) == null ? defaultCollectionId : oldCollectionIdToNewCollectionId.get(newCase.getTestPlanCollectionId()));
             newCase.setLastExecResult(ExecStatus.PENDING.name());
             newCase.setLastExecReportId(null);
             copyList.add(newCase);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -139,8 +139,9 @@ public Map<String, Long> caseExecResultCount(String testPlanId) {
     }
 
     @Override
-    public long copyResource(String originalTestPlanId, String newTestPlanId, String operator, long operatorTime) {
+    public long copyResource(String originalTestPlanId, String newTestPlanId, Map<String, String> oldCollectionIdToNewCollectionId, String operator, long operatorTime) {
         List<TestPlanApiScenario> copyList = new ArrayList<>();
+        String defaultCollectionId = extTestPlanCollectionMapper.selectDefaultCollectionId(newTestPlanId,CaseType.SCENARIO_CASE.getKey());
         extTestPlanApiScenarioMapper.selectByTestPlanIdAndNotDeleted(originalTestPlanId).forEach(originalCase -> {
             TestPlanApiScenario newCase = new TestPlanApiScenario();
             BeanUtils.copyBean(newCase, originalCase);
@@ -149,6 +150,7 @@ public long copyResource(String originalTestPlanId, String newTestPlanId, String
             newCase.setCreateTime(operatorTime);
             newCase.setCreateUser(operator);
             newCase.setLastExecTime(0L);
+            newCase.setTestPlanCollectionId(oldCollectionIdToNewCollectionId.get(newCase.getTestPlanCollectionId()) == null ? defaultCollectionId : oldCollectionIdToNewCollectionId.get(newCase.getTestPlanCollectionId()));
             newCase.setLastExecResult(ExecStatus.PENDING.name());
             newCase.setLastExecReportId(null);
             copyList.add(newCase);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBatchOperationService.java
Patch:
@@ -198,6 +198,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
         TestPlanCollectionExample parentCollectionExample = new TestPlanCollectionExample();
         parentCollectionExample.createCriteria().andTestPlanIdEqualTo(originalTestPlan.getId()).andParentIdEqualTo(TestPlanConstants.DEFAULT_PARENT_ID);
         List<TestPlanCollection> testPlanCollectionList = testPlanCollectionMapper.selectByExample(parentCollectionExample);
+        Map<String, String> oldCollectionIdToNewCollectionId = new HashMap<>();
         if (CollectionUtils.isEmpty(testPlanCollectionList)) {
             //自动生成测试规划
             Objects.requireNonNull(CommonBeanFactory.getBean(TestPlanService.class)).initDefaultPlanCollection(testPlan.getId(), operator);
@@ -225,6 +226,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
                     childCollection.setCreateUser(operator);
                     childCollection.setCreateTime(operatorTime);
                     newTestPlanCollectionList.add(childCollection);
+                    oldCollectionIdToNewCollectionId.put(child.getId(), childCollection.getId());
                 }
             }
             testPlanCollectionMapper.batchInsert(newTestPlanCollectionList);
@@ -233,7 +235,7 @@ public TestPlan copyPlan(TestPlan originalTestPlan, String targetId, String targ
         //测试用例信息
         Map<String, TestPlanResourceService> beansOfType = applicationContext.getBeansOfType(TestPlanResourceService.class);
         beansOfType.forEach((k, v) -> {
-            v.copyResource(originalTestPlan.getId(), testPlan.getId(), operator, operatorTime);
+            v.copyResource(originalTestPlan.getId(), testPlan.getId(), oldCollectionIdToNewCollectionId, operator, operatorTime);
         });
         return testPlan;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBugService.java
Patch:
@@ -58,7 +58,7 @@ public Map<String, Long> caseExecResultCount(String testPlanId) {
     }
 
     @Override
-    public long copyResource(String originalTestPlanId, String newTestPlanId, String operator, long operatorTime) {
+    public long copyResource(String originalTestPlanId, String newTestPlanId, Map<String, String> oldCollectionIdToNewCollectionId, String operator, long operatorTime) {
         return 0;
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -371,7 +371,7 @@ private void executeByTestPlanCollection(TestPlanExecutionQueue executionQueue)
 
         String queueId = executionQueue.getPrepareReportId() + "_" + parentCollection.getId();
         String queueType = QUEUE_PREFIX_TEST_PLAN_COLLECTION;
-        String runMode = executionQueue.getRunMode();
+        String runMode = parentCollection.getExecuteMethod();
         for (TestPlanCollection collection : childrenList) {
             childrenQueue.add(
                     new TestPlanExecutionQueue(

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanResourceService.java
Patch:
@@ -55,7 +55,7 @@ public TestPlanAssociationResponse disassociate(
         return response;
     }
 
-    public abstract long copyResource(String originalTestPlanId, String newTestPlanId, String operator, long operatorTime);
+    public abstract long copyResource(String originalTestPlanId, String newTestPlanId, Map<String, String> oldCollectionIdToNewCollectionId, String operator, long operatorTime);
 
     /**
      * 关联用例

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseMinderService.java
Patch:
@@ -990,7 +990,7 @@ private FunctionalCase updateCase(FunctionalCaseChangeRequest request, String us
         functionalCase.setCreateTime(null);
         //更新用例
         caseMapper.updateByPrimaryKeySelective(functionalCase);
-        return functionalCase;
+        return caseMapper.selectByPrimaryKey(functionalCase.getId());
     }
 
     private FunctionalCaseBlob updateBlob(FunctionalCaseChangeRequest functionalCaseChangeRequest, String caseId, FunctionalCaseBlobMapper caseBlobMapper) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -158,7 +158,7 @@ public long copyResource(String originalTestPlanId, String newTestPlanId, String
             newCase.setCreateTime(operatorTime);
             newCase.setCreateUser(operator);
             newCase.setLastExecTime(0L);
-            newCase.setLastExecResult(null);
+            newCase.setLastExecResult(ExecStatus.PENDING.name());
             newCase.setLastExecReportId(null);
             copyList.add(newCase);
         });

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -149,7 +149,7 @@ public long copyResource(String originalTestPlanId, String newTestPlanId, String
             newCase.setCreateTime(operatorTime);
             newCase.setCreateUser(operator);
             newCase.setLastExecTime(0L);
-            newCase.setLastExecResult(null);
+            newCase.setLastExecResult(ExecStatus.PENDING.name());
             newCase.setLastExecReportId(null);
             copyList.add(newCase);
         });

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -136,7 +136,7 @@ public long copyResource(String originalTestPlanId, String newTestPlanId, String
             newCase.setCreateTime(operatorTime);
             newCase.setCreateUser(operator);
             newCase.setLastExecTime(0L);
-            newCase.setLastExecResult(null);
+            newCase.setLastExecResult(ExecStatus.PENDING.name());
             copyList.add(newCase);
         });
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -423,7 +423,7 @@ public void archived(String id, String userId) {
             //测试计划组归档
             updateGroupStatus(testPlan.getId(), userId);
             //关闭定时任务
-
+            this.deleteScheduleConfig(testPlan.getId());
         } else if (StringUtils.equals(testPlan.getStatus(), TestPlanConstants.TEST_PLAN_STATUS_COMPLETED) && StringUtils.equalsIgnoreCase(testPlan.getGroupId(), TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID)) {
             //测试计划
             testPlan.setStatus(TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED);
@@ -476,6 +476,7 @@ private void updateGroupStatus(String id, String userId) {
         if (CollectionUtils.isEmpty(ids)) {
             throw new MSException(Translator.get("test_plan.group.not_plan"));
         }
+        ids.add(id);
         extTestPlanMapper.batchUpdateStatus(TestPlanConstants.TEST_PLAN_STATUS_ARCHIVED, userId, System.currentTimeMillis(), ids);
     }
 
@@ -747,7 +748,7 @@ private void handleTags(TestPlanBatchEditRequest request, String userId, List<St
      * @param tags
      */
     private void checkTagsLength(List<String> tags) {
-        if (tags.size() > MAX_TAG_SIZE) {
+        if (CollectionUtils.size(tags) > MAX_TAG_SIZE) {
             throw new MSException(Translator.getWithArgs("tags_length_large_than", String.valueOf(MAX_TAG_SIZE)));
         }
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -156,7 +156,8 @@ public class OperationLogModule {
     public static final String TEST_PLAN = "TEST_PLAN";
     public static final String TEST_PLAN_INDEX = "TEST_PLAN_INDEX";
     public static final String TEST_PLAN_MODULE = "TEST_PLAN_MODULE";
-    public static final String TEST_PLAN_REPORT = "TEST_PLAN_REPORT";
+    public static final String TEST_PLAN_REPORT = "TEST_PLAN_REPORT_TEST_PLAN";
+    public static final String TEST_PLAN_GROUP_REPORT = "TEST_PLAN_REPORT_TEST_PLAN_GROUP";
 
     // 个人信息-基本信息
     public static final String PERSONAL_INFORMATION_BASE_INFO = "PERSONAL_INFORMATION_BASE_INFO";

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportLogService.java
Patch:
@@ -109,7 +109,7 @@ public void addLog(TestPlanReport report, String userId, String projectId, Strin
                 report.getId(),
                 userId,
                 OperationLogType.ADD.name(),
-                OperationLogModule.TEST_PLAN_REPORT,
+                report.getIntegrated() ? OperationLogModule.TEST_PLAN_GROUP_REPORT : OperationLogModule.TEST_PLAN_REPORT,
                 report.getName());
         log.setPath(path);
         log.setMethod(HttpMethodConstants.POST.name());

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -154,6 +154,7 @@ public class OperationLogModule {
     public static final String BUG_MANAGEMENT_RECYCLE = "BUG_MANAGEMENT_BUG_RECYCLE";
     //测试计划
     public static final String TEST_PLAN = "TEST_PLAN";
+    public static final String TEST_PLAN_INDEX = "TEST_PLAN_INDEX";
     public static final String TEST_PLAN_MODULE = "TEST_PLAN_MODULE";
     public static final String TEST_PLAN_REPORT = "TEST_PLAN_REPORT";
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -201,7 +201,7 @@ public TestPlanOperationResponse batchMove(@Validated @RequestBody TestPlanBatch
     @Operation(summary = "测试计划-批量归档")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
-    public void batchArchived(@Validated @RequestBody TestPlanBatchRequest request) {
+    public void batchArchived(@Validated @RequestBody TestPlanBatchProcessRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getProjectId(), TestPlanResourceConfig.CHECK_TYPE_PROJECT, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
         testPlanService.batchArchived(request, SessionUtils.getUserId());
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewLogService.java
Patch:
@@ -60,7 +60,7 @@ public LogDTO addCaseReviewLog(CaseReviewRequest requests) {
                 null,
                 null,
                 OperationLogType.ADD.name(),
-                OperationLogModule.CASE_REVIEW_CREATE,
+                OperationLogModule.CASE_REVIEW,
                 requests.getName());
 
         dto.setPath("/case/review/add");
@@ -82,7 +82,7 @@ public LogDTO copyCaseReviewLog(CaseReviewRequest requests) {
                 null,
                 null,
                 OperationLogType.COPY.name(),
-                OperationLogModule.CASE_REVIEW_CREATE,
+                OperationLogModule.CASE_REVIEW,
                 requests.getName());
 
         dto.setPath("/case/review/copy");
@@ -108,7 +108,7 @@ public LogDTO updateCaseReviewLog(CaseReviewRequest requests) {
                 caseReview.getId(),
                 caseReview.getCreateUser(),
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.CASE_REVIEW_UPDATE,
+                OperationLogModule.CASE_REVIEW,
                 caseReview.getName());
 
         dto.setPath("/case/review/edit");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -302,7 +302,7 @@ public TestPlanReport preGenReport(String prepareId,TestPlanReportGenPreParam ge
         report.setCreateUser(currentUser);
         report.setCreateTime(System.currentTimeMillis());
         report.setDeleted(false);
-        report.setPassThreshold(config.getPassThreshold());
+        report.setPassThreshold(config == null ? null : config.getPassThreshold());
         report.setParentId(genParam.getGroupReportId());
         testPlanReportMapper.insertSelective(report);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanBugController.java
Patch:
@@ -33,7 +33,7 @@ public class TestPlanBugController {
 	@PostMapping("/page")
 	@Operation(summary = "缺陷列表-分页查询")
 	@RequiresPermissions(PermissionConstants.TEST_PLAN_READ)
-	@CheckOwner(resourceId = "#requst.getPlanId()", resourceType = "test_plan")
+	@CheckOwner(resourceId = "#request.getPlanId()", resourceType = "test_plan")
 	public Pager<List<TestPlanBugPageResponse>> page(@Validated @RequestBody TestPlanBugPageRequest request) {
 		Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
 				StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "b.create_time desc");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -340,6 +340,7 @@ public Map<String, Long> moduleCount(TestPlanApiCaseModuleRequest request) {
      * @return
      */
     private Map<String, Long> getCollectionCount(TestPlanApiCaseModuleRequest request) {
+        request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
         List<ModuleCountDTO> list = extTestPlanApiCaseMapper.collectionCountByRequest(request.getTestPlanId());
         list.forEach(item -> {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -473,6 +473,7 @@ public Map<String, Long> moduleCount(TestPlanApiScenarioModuleRequest request) {
      * @return
      */
     private Map<String, Long> getCollectionCount(TestPlanApiScenarioModuleRequest request) {
+        request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
         List<ModuleCountDTO> list = extTestPlanApiScenarioMapper.collectionCountByRequest(request.getTestPlanId());
         list.forEach(item -> {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -365,6 +365,7 @@ public Map<String, Long> moduleCount(TestPlanCaseModuleRequest request) {
      * @return
      */
     private Map<String, Long> getCollectionCount(TestPlanCaseModuleRequest request) {
+        request.setCollectionId(null);
         Map<String, Long> projectModuleCountMap = new HashMap<>();
         List<ModuleCountDTO> list = extTestPlanFunctionalCaseMapper.collectionCountByRequest(request.getTestPlanId());
         list.forEach(item -> {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -211,7 +211,7 @@ public List<ApiTestCaseDTO> getApiCasePage(TestPlanApiCaseRequest request, boole
         if (CollectionUtils.isEmpty(request.getProtocols())) {
             return new ArrayList<>();
         }
-        return apiTestCaseService.page(request, isRepeat, false, request.getTestPlanId());
+        return apiTestCaseService.page(request, false, isRepeat, request.getTestPlanId());
     }
 
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanFunctionalCaseController.java
Patch:
@@ -66,7 +66,7 @@ public TestPlanOperationResponse sortNode(@Validated @RequestBody ResourceSortRe
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanCasePageResponse>> page(@Validated @RequestBody TestPlanCaseRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString("id", "test_plan_functional_case")) ? request.getSortString("id", "test_plan_functional_case") : "test_plan_functional_case.pos asc");
+                StringUtils.isNotBlank(request.getSortString("id", "functional_case")) ? request.getSortString("id", "functional_case") : "test_plan_functional_case.pos asc");
 
         return PageUtils.setPageInfo(page, testPlanFunctionalCaseService.getFunctionalCasePage(request, false));
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/SimpleUserService.java
Patch:
@@ -430,7 +430,7 @@ public UserInviteResponse saveInviteRecord(UserInviteRequest request, SessionUse
         //校验邮箱和角色的合法性
         Map<String, String> errorMap = this.validateUserInfo(request.getInviteEmails());
         if (MapUtils.isNotEmpty(errorMap)) {
-            throw new MSException(Translator.get("user.email.repeat"));
+            throw new MSException(Translator.get("user.email.repeat") + " : " + StringUtils.join(errorMap.keySet(), ", "));
         }
         List<UserInvite> inviteList = userInviteService.batchInsert(request.getInviteEmails(), inviteUser.getId(), request.getUserRoleIds());
         //记录日志

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -371,6 +371,7 @@ private void executeByTestPlanCollection(TestPlanExecutionQueue executionQueue)
 
         String queueId = executionQueue.getPrepareReportId() + "_" + parentCollection.getId();
         String queueType = QUEUE_PREFIX_TEST_PLAN_COLLECTION;
+        String runMode = executionQueue.getRunMode();
         for (TestPlanCollection collection : childrenList) {
             childrenQueue.add(
                     new TestPlanExecutionQueue(
@@ -382,7 +383,7 @@ private void executeByTestPlanCollection(TestPlanExecutionQueue executionQueue)
                             executionQueue.getQueueId(),
                             executionQueue.getQueueType(),
                             collection.getId(),
-                            collection.getExecuteMethod(),
+                            runMode,
                             executionQueue.getExecutionSource(),
                             executionQueue.getPrepareReportId()) {{
                         this.setTestPlanCollectionJson(JSON.toJSONString(collection));
@@ -395,7 +396,7 @@ private void executeByTestPlanCollection(TestPlanExecutionQueue executionQueue)
             this.caseTypeExecuteQueueFinish(executionQueue.getQueueId(), executionQueue.getQueueType());
         } else {
             this.setRedisForList(genQueueKey(queueId, queueType), childrenQueue.stream().map(JSON::toJSONString).toList());
-            if (StringUtils.equalsIgnoreCase(parentCollection.getExecuteMethod(), ApiBatchRunMode.SERIAL.name())) {
+            if (StringUtils.equalsIgnoreCase(runMode, ApiBatchRunMode.SERIAL.name())) {
                 //串行
                 TestPlanExecutionQueue nextQueue = this.getNextQueue(queueId, queueType);
                 this.executeCase(nextQueue);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiReportSendNoticeService.java
Patch:
@@ -166,8 +166,9 @@ public void sendNotice(ApiNoticeDTO noticeDTO) {
         // TODO 这里状态是否是国际化  还有分享链接需要补充
 
         // TODO 暂时取一个环境处理
-        if (StringUtils.isNotEmpty(noticeDTO.getEnvironmentId())) {
-            Environment environment = environmentMapper.selectByPrimaryKey(noticeDTO.getEnvironmentId());
+        String environmentId = noticeDTO.getRunModeConfig().getEnvironmentId();
+        if (StringUtils.isNotEmpty(environmentId)) {
+            Environment environment = environmentMapper.selectByPrimaryKey(environmentId);
             if (environment != null) {
                 paramMap.put("environment", environment.getName());
             }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiReportSendNoticeTests.java
Patch:
@@ -114,7 +114,7 @@ public void sendNoticeTest() throws Exception {
         noticeDTO.setResourceType("API_CASE");
         noticeDTO.setUserId("admin");
         noticeDTO.setProjectId(DEFAULT_PROJECT_ID);
-        noticeDTO.setEnvironmentId("api-environment-id");
+        noticeDTO.getRunModeConfig().setEnvironmentId("api-environment-id");
 
         apiReportSendNoticeService.sendNotice(noticeDTO);
         noticeDTO.setReportStatus(ReportStatus.ERROR.name());
@@ -188,7 +188,7 @@ public void sendNoticeTest() throws Exception {
         noticeDTO.setResourceType("API_SCENARIO");
         noticeDTO.setUserId("admin");
         noticeDTO.setProjectId(DEFAULT_PROJECT_ID);
-        noticeDTO.setEnvironmentId("api-environment-id");
+        noticeDTO.getRunModeConfig().setEnvironmentId("api-environment-id");
 
         apiReportSendNoticeService.sendNotice(noticeDTO);
         noticeDTO.setReportStatus(ReportStatus.ERROR.name());

File: backend/services/api-test/src/test/java/io/metersphere/api/listener/MessageListenerTest.java
Patch:
@@ -31,7 +31,7 @@ void testDebugConsume() {
         api.setReportStatus("exampleReportStatus");
         api.setUserId("exampleUserId");
         api.setProjectId("exampleProjectId");
-        api.setEnvironmentId("exampleEnvironmentId");
+        api.getRunModeConfig().setEnvironmentId("exampleEnvironmentId");
         api.setReportId("exampleReportId");
 
         ConsumerRecord<Object, String> record = new ConsumerRecord<>(KafkaTopicConstants.API_REPORT_TASK_TOPIC, 0, 0, "123", JSON.toJSONString(api));
@@ -47,7 +47,7 @@ void testDebugConsume() {
         scenario.setReportStatus("exampleReportStatus");
         scenario.setUserId("exampleUserId");
         scenario.setProjectId("exampleProjectId");
-        api.setEnvironmentId("exampleEnvironmentId");
+        api.getRunModeConfig().setEnvironmentId("exampleEnvironmentId");
         scenario.setReportId("exampleReportId");
 
         ConsumerRecord<Object, String> scenarioRecord = new ConsumerRecord<>(KafkaTopicConstants.API_REPORT_TASK_TOPIC, 0, 0, "123", JSON.toJSONString(scenario));
@@ -63,7 +63,7 @@ void testDebugConsume() {
         testCase.setReportStatus("exampleReportStatus");
         testCase.setUserId("exampleUserId");
         testCase.setProjectId("exampleProjectId");
-        api.setEnvironmentId("exampleEnvironmentId");
+        api.getRunModeConfig().setEnvironmentId("exampleEnvironmentId");
         testCase.setReportId("exampleReportId");
 
         ConsumerRecord<Object, String> testCaseRecord = new ConsumerRecord<>(KafkaTopicConstants.API_REPORT_TASK_TOPIC, 0, 0, "123", JSON.toJSONString(testCase));

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -635,6 +635,7 @@ public void summaryPlanReport(String reportId) {
 	 * @param reportId 报告ID
 	 */
 	public void summaryGroupReport(String reportId) {
+		// TODO: 更新计划组的用例明细执行结果
 		TestPlanReportSummaryExample summaryExample = new TestPlanReportSummaryExample();
 		summaryExample.createCriteria().andTestPlanReportIdEqualTo(reportId);
 		List<TestPlanReportSummary> testPlanReportSummaries = testPlanReportSummaryMapper.selectByExample(summaryExample);
@@ -645,14 +646,14 @@ public void summaryGroupReport(String reportId) {
 		TestPlanReportSummary groupSummary = testPlanReportSummaries.get(0);
 
 		TestPlanReportExample example = new TestPlanReportExample();
-		example.createCriteria().andParentIdEqualTo(reportId);
+		example.createCriteria().andParentIdEqualTo(reportId).andIntegratedEqualTo(false);
 		List<TestPlanReport> testPlanReports = testPlanReportMapper.selectByExample(example);
         if(CollectionUtils.isEmpty(testPlanReports)){
             return;
         }
 		List<String> ids = testPlanReports.stream().map(TestPlanReport::getId).toList();
 		summaryExample.clear();
-		summaryExample.createCriteria().andIdIn(ids);
+		summaryExample.createCriteria().andTestPlanReportIdIn(ids);
 		List<TestPlanReportSummary> summaryList = testPlanReportSummaryMapper.selectByExampleWithBLOBs(summaryExample);
 		List<CaseCount> functionalCaseCountList = new ArrayList<>();
 		List<CaseCount> apiCaseCountList = new ArrayList<>();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanReportMapper.java
Patch:
@@ -60,5 +60,5 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
 
     List<ReportDTO> getScenarioReports(@Param("ids") List<String> ids);
 
-    void batchUpdateExecuteTime(@Param("startTime") long startTime,@Param("ids")List<String> ids);
+    void batchUpdateExecuteTimeAndStatus(@Param("startTime") long startTime,@Param("ids")List<String> ids);
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -253,7 +253,7 @@ private String executeTestPlanOrGroup(TestPlanExecutionQueue executionQueue) {
                 this.setRedisForList(genQueueKey(queueId, queueType), childrenQueue.stream().map(JSON::toJSONString).toList());
 
                 // 更新报告的执行时间
-                extTestPlanReportMapper.batchUpdateExecuteTime(System.currentTimeMillis(), reportMap.values().stream().toList());
+                extTestPlanReportMapper.batchUpdateExecuteTimeAndStatus(System.currentTimeMillis(), reportMap.values().stream().toList());
 
                 if (StringUtils.equalsIgnoreCase(executionQueue.getRunMode(), ApiBatchRunMode.SERIAL.name())) {
                     //串行
@@ -271,7 +271,7 @@ private String executeTestPlanOrGroup(TestPlanExecutionQueue executionQueue) {
         } else {
             Map<String, String> reportMap = testPlanReportService.genReportByExecution(executionQueue.getPrepareReportId(), genReportRequest, executionQueue.getCreateUser());
             executionQueue.setPrepareReportId(reportMap.get(executionQueue.getSourceID()));
-            extTestPlanReportMapper.batchUpdateExecuteTime(System.currentTimeMillis(), reportMap.values().stream().toList());
+            extTestPlanReportMapper.batchUpdateExecuteTimeAndStatus(System.currentTimeMillis(), reportMap.values().stream().toList());
             this.executeTestPlan(executionQueue);
             return executionQueue.getPrepareReportId();
         }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiScenarioService.java
Patch:
@@ -217,6 +217,6 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
         ApiScenarioDetail apiScenarioDetail = apiScenarioRunService.getForRun(testPlanReportApiScenario.getApiScenarioId());
         apiScenarioDetail.setEnvironmentId(testPlanReportApiScenario.getEnvironmentId());
         apiScenarioDetail.setGrouped(testPlanReportApiScenario.getGrouped());
-        return apiScenarioRunService.getRunScript(request, testPlanReportApiScenario.getApiScenarioId());
+        return apiScenarioRunService.getRunScript(request, apiScenarioDetail);
     }
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -651,6 +651,7 @@ public TaskRequestDTO run(String id, String reportId, String userId) {
         taskInfo.setRunModeConfig(runModeConfig);
         taskInfo.setSaveResult(true);
         taskInfo.setRealTime(true);
+        taskInfo.setUserId(userId);
 
         if (StringUtils.isEmpty(taskItem.getReportId())) {
             taskInfo.setRealTime(false);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -302,6 +302,7 @@ public TaskRequestDTO run(String id, String reportId, String userId) {
         taskInfo.setRunModeConfig(runModeConfig);
         taskInfo.setSaveResult(true);
         taskInfo.setRealTime(true);
+        taskInfo.setUserId(userId);
 
         if (StringUtils.isEmpty(taskItem.getReportId())) {
             taskInfo.setRealTime(false);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanExecuteRequest.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.plan.dto.request;
 
 import io.metersphere.sdk.constants.ApiBatchRunMode;
-import io.metersphere.sdk.constants.ApiExecuteRunMode;
+import io.metersphere.sdk.constants.TaskTriggerMode;
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
@@ -16,7 +16,7 @@ public class TestPlanExecuteRequest {
     @Schema(description = "执行模式", allowableValues = {"SERIAL", "PARALLEL"}, requiredMode = Schema.RequiredMode.REQUIRED)
     private String runMode = ApiBatchRunMode.SERIAL.name();
 
-    @Schema(description = "执行来源", allowableValues = {"JENKINS", "SCENARIO", "RUN"}, requiredMode = Schema.RequiredMode.REQUIRED)
-    private String executionSource = ApiExecuteRunMode.RUN.name();
+    @Schema(description = "执行来源", allowableValues = {"MANUAL", "RUN", "SCHEDULE"}, requiredMode = Schema.RequiredMode.REQUIRED)
+    private String executionSource = TaskTriggerMode.MANUAL.name();
 
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanExecuteService.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.sdk.constants.ApiBatchRunMode;
 import io.metersphere.sdk.constants.CaseType;
 import io.metersphere.sdk.constants.ExecStatus;
+import io.metersphere.sdk.constants.TaskTriggerMode;
 import io.metersphere.sdk.constants.TestPlanConstants;
 import io.metersphere.sdk.dto.queue.TestPlanExecutionQueue;
 import io.metersphere.sdk.exception.MSException;
@@ -187,7 +188,7 @@ public void batchExecuteTestPlan(TestPlanBatchExecuteRequest request, String use
                                     null,
                                     testPlanId,
                                     runMode,
-                                    request.getExecutionSource(),
+                                    TaskTriggerMode.BATCH.name(),
                                     IDGenerator.nextStr()
                             )
                     );

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -572,6 +572,7 @@ private void handleApiData(List<BaseCollectionAssociateRequest> apiCaseList, Ses
      * @param testPlanApiCaseList
      */
     private void buildTestPlanApiCase(TestPlan testPlan, List<ApiTestCase> apiTestCases, String collectionId, SessionUser user, List<TestPlanApiCase> testPlanApiCaseList, List<LogDTO> logDTOS) {
+        AtomicLong nextOrder = new AtomicLong(getNextOrder(collectionId));
         apiTestCases.forEach(apiTestCase -> {
             TestPlanApiCase testPlanApiCase = new TestPlanApiCase();
             testPlanApiCase.setId(IDGenerator.nextStr());
@@ -581,7 +582,7 @@ private void buildTestPlanApiCase(TestPlan testPlan, List<ApiTestCase> apiTestCa
             testPlanApiCase.setEnvironmentId(apiTestCase.getEnvironmentId());
             testPlanApiCase.setCreateTime(System.currentTimeMillis());
             testPlanApiCase.setCreateUser(user.getId());
-            testPlanApiCase.setPos(getNextOrder(collectionId));
+            testPlanApiCase.setPos(nextOrder.getAndAdd(DEFAULT_NODE_INTERVAL_POS));
             testPlanApiCase.setExecuteUser(apiTestCase.getCreateUser());
             testPlanApiCaseList.add(testPlanApiCase);
             buildLog(logDTOS, testPlan, user, apiTestCase);
@@ -741,9 +742,8 @@ private void moveCaseToCollection(List<String> ids, String targetCollectionId) {
         ids.forEach(id -> {
             TestPlanApiCase testPlanApiCase = new TestPlanApiCase();
             testPlanApiCase.setId(id);
-            testPlanApiCase.setPos(nextOrder.get());
+            testPlanApiCase.setPos(nextOrder.getAndAdd(DEFAULT_NODE_INTERVAL_POS));
             testPlanApiCase.setTestPlanCollectionId(targetCollectionId);
-            nextOrder.addAndGet(DEFAULT_NODE_INTERVAL_POS);
             testPlanApiCaseMapper.updateByPrimaryKeySelective(testPlanApiCase);
         });
         sqlSession.flushStatements();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -210,6 +210,7 @@ private void handleApiScenarioData(List<BaseCollectionAssociateRequest> apiScena
      * @param testPlanApiScenarioList
      */
     private void buildTestPlanApiScenario(TestPlan testPlan, List<ApiScenario> scenarios, String collectionId, SessionUser user, List<TestPlanApiScenario> testPlanApiScenarioList, List<LogDTO> logDTOS) {
+        AtomicLong nextOrder = new AtomicLong(getNextOrder(collectionId));
         scenarios.forEach(scenario -> {
             TestPlanApiScenario testPlanApiScenario = new TestPlanApiScenario();
             testPlanApiScenario.setId(IDGenerator.nextStr());
@@ -220,7 +221,7 @@ private void buildTestPlanApiScenario(TestPlan testPlan, List<ApiScenario> scena
             testPlanApiScenario.setEnvironmentId(scenario.getEnvironmentId());
             testPlanApiScenario.setCreateTime(System.currentTimeMillis());
             testPlanApiScenario.setCreateUser(user.getId());
-            testPlanApiScenario.setPos(getNextOrder(collectionId));
+            testPlanApiScenario.setPos(nextOrder.getAndAdd(DEFAULT_NODE_INTERVAL_POS));
             testPlanApiScenario.setExecuteUser(scenario.getCreateUser());
             testPlanApiScenarioList.add(testPlanApiScenario);
             buildLog(logDTOS, testPlan, user, scenario);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -502,7 +502,7 @@ public TestPlanReportDetailResponse getReport(String reportId) {
         planReportDetail.setBugCount(reportSummary.getBugCount().intValue());
 		// 暂时只有功能用例能关联缺陷
 		Long functionalBugCount = extTestPlanReportFunctionalCaseMapper.countBug(reportId);
-		planReportDetail.setFunctionalBugCount(functionalBugCount.intValue());
+		planReportDetail.setFunctionalBugCount(functionalBugCount == null ? 0 : functionalBugCount.intValue());
 		if (planReport.getIntegrated()) {
 			// 计划组报告, 需要统计计划的执行数据
 			planReportDetail.setPlanCount(reportSummary.getPlanCount().intValue());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -85,7 +85,7 @@ public boolean serialExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
         }
 
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.API_CASE.name(), parentQueueId, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.PLAN_RUN_API_CASE.name(), parentQueueId, userId);
 
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseBatchRunService.java
Patch:
@@ -139,7 +139,7 @@ private void batchRun(TestPlanApiCaseBatchRunRequest request, String userId) {
                 List<String> serialCollectionIds = testPlanCollections.stream().map(TestPlanCollection::getId).toList();
                 // 生成测试集队列
                 ExecutionQueue collectionQueue = apiBatchRunBaseService.initExecutionqueue(serialCollectionIds,
-                        ApiExecuteResourceType.API_CASE.name(), userId);
+                        ApiExecuteResourceType.TEST_PLAN_API_CASE.name(), userId);
                 // 记录各测试集中要执行的用例
                 apiExecutionMapService.initMap(collectionQueue.getQueueId(), collectionMap);
 
@@ -192,7 +192,7 @@ private List<TestPlanCollection> getTestPlanCollections(String testPlanId) {
      */
     public void serialExecute(List<String> ids, ApiRunModeConfigDTO runModeConfig, String parentQueueId, String userId) {
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.API_CASE.name(), parentQueueId, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.TEST_PLAN_API_CASE.name(), parentQueueId, userId);
 
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioBatchRunService.java
Patch:
@@ -138,7 +138,7 @@ private void batchRun(TestPlanApiScenarioBatchRunRequest request, String userId)
                 List<String> serialCollectionIds = testPlanCollections.stream().map(TestPlanCollection::getId).toList();
                 // 生成测试集队列
                 ExecutionQueue collectionQueue = apiBatchRunBaseService.initExecutionqueue(serialCollectionIds,
-                        ApiExecuteResourceType.API_CASE.name(), userId);
+                        ApiExecuteResourceType.TEST_PLAN_API_SCENARIO.name(), userId);
                 // 记录各测试集中要执行的用例
                 apiExecutionMapService.initMap(collectionQueue.getQueueId(), collectionMap);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteResourceService.java
Patch:
@@ -42,9 +42,9 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
         ApiExecuteResourceType apiExecuteResourceType = EnumValidator.validateEnum(ApiExecuteResourceType.class, request.getResourceType());
 
         switch (apiExecuteResourceType) {
-            case API_SCENARIO, TEST_PLAN_API_SCENARIO ->
+            case API_SCENARIO, TEST_PLAN_API_SCENARIO, PLAN_RUN_API_SCENARIO ->
                     apiScenarioReportService.updateReportStatus(reportId, ExecStatus.RUNNING.name());
-            case API_CASE, TEST_PLAN_API_CASE ->
+            case API_CASE, TEST_PLAN_API_CASE, PLAN_RUN_API_CASE ->
                     apiReportService.updateReportStatus(reportId, ExecStatus.RUNNING.name());
             default -> throw new MSException("不支持的资源类型: " + request.getResourceType());
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -343,7 +343,7 @@ public List<ApiTestCaseRecord> initApiReport(ApiRunModeConfigDTO runModeConfig,
 
     public ApiReport getApiReport(ApiRunModeConfigDTO runModeConfig, ApiTestCase apiTestCase, String userId) {
         ApiReport apiReport = getApiReport(runModeConfig, userId);
-        apiReport.setEnvironmentId(apiTestCaseService.getEnvId(runModeConfig, apiTestCase));
+        apiReport.setEnvironmentId(apiTestCaseService.getEnvId(runModeConfig, apiTestCase.getEnvironmentId()));
         apiReport.setName(apiTestCase.getName() + "_" + DateUtils.getTimeString(System.currentTimeMillis()));
         apiReport.setProjectId(apiTestCase.getProjectId());
         apiReport.setTriggerMode(TaskTriggerMode.BATCH.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -327,7 +327,7 @@ public ApiScenarioRecord initScenarioReport(ApiRunModeConfigDTO runModeConfig, A
 
     private ApiScenarioReport getScenarioReport(ApiRunModeConfigDTO runModeConfig, ApiScenario apiScenario, String userId) {
         ApiScenarioReport apiScenarioReport = getScenarioReport(runModeConfig, userId);
-        apiScenarioReport.setEnvironmentId(apiScenarioRunService.getEnvId(runModeConfig, apiScenario));
+        apiScenarioReport.setEnvironmentId(apiScenarioRunService.getEnvId(runModeConfig, apiScenario.getEnvironmentId()));
         apiScenarioReport.setName(apiScenario.getName() + "_" + DateUtils.getTimeString(System.currentTimeMillis()));
         apiScenarioReport.setProjectId(apiScenario.getProjectId());
         apiScenarioReport.setTriggerMode(TaskTriggerMode.BATCH.name());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunApiCaseExecuteCallbackService.java
Patch:
@@ -22,7 +22,7 @@ public class PlanRunApiCaseExecuteCallbackService implements ApiExecuteCallbackS
     private TestPlanExecuteService testPlanExecuteService;
 
     @Resource
-    private TestPlanApiCasePlanRunService testPlanApiCasePlanRunService;
+    private PlanRunTestPlanApiCaseService planRunTestPlanApiCaseService;
 
     public PlanRunApiCaseExecuteCallbackService() {
         ApiExecuteCallbackServiceInvoker.register(ApiExecuteResourceType.PLAN_RUN_API_CASE, this);
@@ -33,7 +33,7 @@ public PlanRunApiCaseExecuteCallbackService() {
      */
     @Override
     public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
-        return testPlanApiCasePlanRunService.getRunScript(request);
+        return planRunTestPlanApiCaseService.getRunScript(request);
     }
 
     /**
@@ -43,7 +43,7 @@ public GetRunScriptResult getRunScript(GetRunScriptRequest request) {
      */
     @Override
     public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDetail) {
-        testPlanApiCasePlanRunService.executeNextTask(queue, queueDetail);
+        planRunTestPlanApiCaseService.executeNextTask(queue, queueDetail);
     }
 
     /**

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/PlanRunTestPlanApiCaseService.java
Patch:
@@ -38,7 +38,7 @@
 
 @Service
 @Transactional(rollbackFor = Exception.class)
-public class TestPlanApiCasePlanRunService {
+public class PlanRunTestPlanApiCaseService {
     @Resource
     private ApiTestCaseMapper apiTestCaseMapper;
     @Resource
@@ -153,6 +153,7 @@ public boolean parallelExecute(TestPlanExecutionQueue testPlanExecutionQueue) {
         TaskBatchRequestDTO taskRequest = apiTestCaseBatchRunService.getTaskBatchRequestDTO(testPlan.getProjectId(), runModeConfig);
         taskRequest.setTaskItems(taskItems);
         taskRequest.getTaskInfo().setParentQueueId(parentQueueId);
+        taskRequest.getTaskInfo().setUserId(userId);
         taskRequest.getTaskInfo().setResourceType(ApiExecuteResourceType.PLAN_RUN_API_CASE.name());
         apiExecuteService.batchExecute(taskRequest);
 
@@ -191,6 +192,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
         TaskRequestDTO taskRequest = testPlanApiCaseBatchRunService.getTaskRequestDTO(reportId, testPlanReportApiCase.getId(), apiTestCase, runModeConfig);
         taskRequest.getTaskInfo().setResourceType(ApiExecuteResourceType.PLAN_RUN_API_CASE.name());
         taskRequest.getTaskInfo().setQueueId(queue.getQueueId());
+        taskRequest.getTaskInfo().setUserId(queue.getUserId());
         taskRequest.getTaskInfo().setParentQueueId(queue.getParentQueueId());
         taskRequest.getTaskItem().setRequestCount(1L);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanExecuteHisDTO.java
Patch:
@@ -12,6 +12,8 @@ public class TestPlanExecuteHisDTO {
 	private String num;
 	@Schema(description = "执行方式")
 	private String triggerMode;
+	@Schema(description = "执行状态")
+	private String execStatus;
 	@Schema(description = "执行结果")
 	private String execResult;
 	@Schema(description = "操作人")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -261,7 +261,7 @@ public void deleteScheduleConfig(@PathVariable String testPlanId) {
     @Operation(summary = "测试计划-执行历史-列表分页查询")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ)
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
-    public Pager<List<TestPlanExecuteHisDTO>> pageHis(@Validated TestPlanExecuteHisPageRequest request) {
+    public Pager<List<TestPlanExecuteHisDTO>> pageHis(@Validated @RequestBody TestPlanExecuteHisPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
                 MapUtils.isEmpty(request.getSort()) ? "tpr.create_time desc" : request.getSortString());
         return PageUtils.setPageInfo(page, testPlanService.listHis(request));

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanExecuteHisPageRequest.java
Patch:
@@ -3,8 +3,10 @@
 import io.metersphere.system.dto.sdk.BasePageRequest;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class TestPlanExecuteHisPageRequest extends BasePageRequest {
 
 	@Schema(description = "测试计划ID", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiReportShareService.java
Patch:
@@ -114,6 +114,7 @@ public ShareInfoDTO gen(ApiReportShareRequest shareRequest, String userId) {
         request.setCreateUser(userId);
         request.setCustomData(shareRequest.getReportId().getBytes());
         request.setShareType(ShareInfoType.API_SHARE_REPORT.name());
+        request.setProjectId(shareRequest.getProjectId());
         ShareInfo shareInfo = createShareInfo(request);
         return conversionShareInfoToDTO(shareInfo);
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanController.java
Patch:
@@ -260,7 +260,7 @@ public void deleteScheduleConfig(@PathVariable String testPlanId) {
     @PostMapping(value = "/his/page")
     @Operation(summary = "测试计划-执行历史-列表分页查询")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ)
-    @CheckOwner(resourceId = "#request.getPlanId()", resourceType = "test_plan")
+    @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<TestPlanExecuteHisDTO>> pageHis(@Validated TestPlanExecuteHisPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
                 MapUtils.isEmpty(request.getSort()) ? "tpr.create_time desc" : request.getSortString());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanExecuteHisDTO.java
Patch:
@@ -12,10 +12,10 @@ public class TestPlanExecuteHisDTO {
 	private String num;
 	@Schema(description = "执行方式")
 	private String triggerMode;
-	@Schema(description = "执行状态")
-	private String execStatus;
+	@Schema(description = "执行结果")
+	private String execResult;
 	@Schema(description = "操作人")
-	private String createUser;
+	private String operationUser;
 	@Schema(description = "执行起始时间")
 	private Long startTime;
 	@Schema(description = "执行结束时间")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanExecuteHisPageRequest.java
Patch:
@@ -8,5 +8,5 @@
 public class TestPlanExecuteHisPageRequest extends BasePageRequest {
 
 	@Schema(description = "测试计划ID", requiredMode = Schema.RequiredMode.REQUIRED)
-	private String planId;
+	private String testPlanId;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -849,11 +849,11 @@ public List<TestPlanExecuteHisDTO> listHis(TestPlanExecuteHisPageRequest request
         if (CollectionUtils.isEmpty(hisList)) {
             return new ArrayList<>();
         }
-        List<String> userIds = hisList.stream().map(TestPlanExecuteHisDTO::getCreateUser).distinct().toList();
+        List<String> userIds = hisList.stream().map(TestPlanExecuteHisDTO::getOperationUser).distinct().toList();
         List<OptionDTO> userOptions = baseUserMapper.selectUserOptionByIds(userIds);
         Map<String, String> userMap = userOptions.stream().collect(Collectors.toMap(OptionDTO::getId, OptionDTO::getName));
         hisList.forEach(his -> {
-            his.setCreateUser(userMap.getOrDefault(his.getCreateUser(), his.getCreateUser()));
+            his.setOperationUser(userMap.getOrDefault(his.getOperationUser(), his.getOperationUser()));
         });
         return hisList;
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewLogService.java
Patch:
@@ -165,7 +165,7 @@ public List<LogDTO> associateCaseLog(CaseReviewAssociateRequest request) {
                     caseReview.getProjectId(),
                     null,
                     caseReview.getId(),
-                    caseReview.getCreateUser(),
+                    null,
                     OperationLogType.ASSOCIATE.name(),
                     OperationLogModule.CASE_REVIEW_DETAIL,
                     functionalCase.getName());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanCollectionMinderController.java
Patch:
@@ -44,8 +44,7 @@ public List<TestPlanCollectionMinderTreeDTO> getMindTestPlanCase(@PathVariable S
     }, logical = Logical.OR)
     @CheckOwner(resourceId = "#request.planId", resourceType = "test_plan")
     public void editMindTestPlanCase(@Validated @RequestBody TestPlanCollectionMinderEditRequest request) {
-        String userId = SessionUtils.getUserId();
-        testPlanCollectionMinderService.editMindTestPlanCase(request, userId);
+        testPlanCollectionMinderService.editMindTestPlanCase(request, SessionUtils.getUser());
     }
 
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanBugService.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.plan.mapper.ExtTestPlanBugMapper;
 import io.metersphere.plugin.platform.dto.SelectOption;
 import io.metersphere.system.dto.sdk.OptionDTO;
+import io.metersphere.system.dto.sdk.SessionUser;
 import io.metersphere.system.mapper.BaseUserMapper;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections4.CollectionUtils;
@@ -119,7 +120,7 @@ private List<TestPlanBugPageResponse> buildBugRelatedListExtraInfo(List<TestPlan
     }
 
     @Override
-    public void associateCollection(String planId, Map<String, List<BaseCollectionAssociateRequest>> collectionAssociates,String userId) {
+    public void associateCollection(String planId, Map<String, List<BaseCollectionAssociateRequest>> collectionAssociates, SessionUser user) {
         // TODO: 暂不支持缺陷关联测试集
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanResourceService.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.plan.dto.response.TestPlanAssociationResponse;
 import io.metersphere.plan.mapper.TestPlanMapper;
 import io.metersphere.system.dto.LogInsertModule;
+import io.metersphere.system.dto.sdk.SessionUser;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections4.CollectionUtils;
 import org.springframework.transaction.annotation.Transactional;
@@ -62,7 +63,7 @@ public TestPlanAssociationResponse disassociate(
      * @param planId               计划ID
      * @param collectionAssociates 测试集关联用例参数
      */
-    public abstract void associateCollection(String planId, Map<String, List<BaseCollectionAssociateRequest>> collectionAssociates, String userId);
+    public abstract void associateCollection(String planId, Map<String, List<BaseCollectionAssociateRequest>> collectionAssociates, SessionUser user);
 
 	/**
 	 * 初始化旧的关联资源到默认测试集

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanApiCaseController.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.api.dto.definition.ApiReportDTO;
 import io.metersphere.api.dto.definition.ApiReportDetailDTO;
 import io.metersphere.api.service.definition.ApiReportService;
-import io.metersphere.plan.constants.TestPlanResourceConfig;
 import io.metersphere.plan.dto.request.*;
 import io.metersphere.plan.dto.response.TestPlanApiCasePageResponse;
 import io.metersphere.plan.dto.response.TestPlanAssociationResponse;
@@ -32,7 +31,6 @@
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 
-import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanExecuteController.java
Patch:
@@ -53,4 +53,5 @@ public void startExecute(@Validated @RequestBody TestPlanBatchExecuteRequest req
         testPlanManagementService.checkModuleIsOpen(request.getProjectId(), TestPlanResourceConfig.CHECK_TYPE_PROJECT, Collections.singletonList(TestPlanResourceConfig.CONFIG_TEST_PLAN));
         testPlanExecuteService.batchExecuteTestPlan(request, SessionUtils.getUserId());
     }
+
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiCaseService.java
Patch:
@@ -581,7 +581,7 @@ public TestPlanOperationResponse sortNode(ResourceSortRequest request, LogInsert
         TestPlanOperationResponse response = new TestPlanOperationResponse();
         MoveNodeSortDTO sortDTO = super.getNodeSortDTO(
                 request.getTestCollectionId(),
-                super.getNodeMoveRequest(request, true),
+                super.getNodeMoveRequest(request, false),
                 extTestPlanApiCaseMapper::selectDragInfoById,
                 extTestPlanApiCaseMapper::selectNodeByPosOperator
         );

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanApiScenarioService.java
Patch:
@@ -245,7 +245,7 @@ public TestPlanOperationResponse sortNode(ResourceSortRequest request, LogInsert
         TestPlanOperationResponse response = new TestPlanOperationResponse();
         MoveNodeSortDTO sortDTO = super.getNodeSortDTO(
                 request.getTestCollectionId(),
-                super.getNodeMoveRequest(request, true),
+                super.getNodeMoveRequest(request, false),
                 extTestPlanApiScenarioMapper::selectDragInfoById,
                 extTestPlanApiScenarioMapper::selectNodeByPosOperator
         );
@@ -604,9 +604,8 @@ private void moveCaseToCollection(List<String> ids, String targetCollectionId) {
         ids.forEach(id -> {
             TestPlanApiScenario testPlanApiScenario = new TestPlanApiScenario();
             testPlanApiScenario.setId(id);
-            testPlanApiScenario.setPos(nextOrder.get());
+            testPlanApiScenario.setPos(nextOrder.getAndAdd(DEFAULT_NODE_INTERVAL_POS));
             testPlanApiScenario.setTestPlanCollectionId(targetCollectionId);
-            nextOrder.addAndGet(DEFAULT_NODE_INTERVAL_POS);
             testPlanApiScenarioMapper.updateByPrimaryKeySelective(testPlanApiScenario);
         });
         sqlSession.flushStatements();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -205,7 +205,7 @@ public TestPlanOperationResponse sortNode(ResourceSortRequest request, LogInsert
         TestPlanOperationResponse response = new TestPlanOperationResponse();
         MoveNodeSortDTO sortDTO = super.getNodeSortDTO(
                 request.getTestCollectionId(),
-                super.getNodeMoveRequest(request, true),
+                super.getNodeMoveRequest(request, false),
                 extTestPlanFunctionalCaseMapper::selectDragInfoById,
                 extTestPlanFunctionalCaseMapper::selectNodeByPosOperator
         );

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiCaseControllerTests.java
Patch:
@@ -151,7 +151,7 @@ public void testSort() throws Exception {
         request.setProjectId("wxx_1234");
         request.setMoveId(apiList.getLast().getId());
         request.setTargetId(apiList.getFirst().getId());
-        request.setMoveMode(MoveTypeEnum.AFTER.name());
+        request.setMoveMode(MoveTypeEnum.BEFORE.name());
 
         MvcResult result = this.requestPostWithOkAndReturn(URL_POST_RESOURCE_API_CASE_SORT, request);
         ResultHolder resultHolder = JSON.parseObject(result.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class);
@@ -164,7 +164,7 @@ public void testSort() throws Exception {
         //将这时的第30个放到第一位之后
         request.setTargetId(apiList.getLast().getId());
         request.setMoveId(apiList.getFirst().getId());
-        request.setMoveMode(MoveTypeEnum.BEFORE.name());
+        request.setMoveMode(MoveTypeEnum.AFTER.name());
         result = this.requestPostWithOkAndReturn(URL_POST_RESOURCE_API_CASE_SORT, request);
         resultHolder = JSON.parseObject(result.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class);
         response = JSON.parseObject(JSON.toJSONString(resultHolder.getData()), TestPlanOperationResponse.class);

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanApiScenarioControllerTests.java
Patch:
@@ -24,7 +24,6 @@
 import io.metersphere.plan.dto.request.*;
 import io.metersphere.plan.dto.response.TestPlanOperationResponse;
 import io.metersphere.plan.mapper.TestPlanApiScenarioMapper;
-import io.metersphere.plan.service.TestPlanApiScenarioLogService;
 import io.metersphere.plan.service.TestPlanApiScenarioService;
 import io.metersphere.project.api.assertion.MsResponseCodeAssertion;
 import io.metersphere.project.api.assertion.MsScriptAssertion;
@@ -316,7 +315,7 @@ public void testSort() throws Exception {
         request.setProjectId("wxx_project_1234");
         request.setMoveId(scenarioList.getLast().getId());
         request.setTargetId(scenarioList.getFirst().getId());
-        request.setMoveMode(MoveTypeEnum.AFTER.name());
+        request.setMoveMode(MoveTypeEnum.BEFORE.name());
 
         MvcResult result = this.requestPostWithOkAndReturn(URL_POST_RESOURCE_API_SCENARIO_SORT, request);
         ResultHolder resultHolder = JSON.parseObject(result.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class);
@@ -329,7 +328,7 @@ public void testSort() throws Exception {
         //将这时的第30个放到第一位之后
         request.setTargetId(scenarioList.getLast().getId());
         request.setMoveId(scenarioList.getFirst().getId());
-        request.setMoveMode(MoveTypeEnum.BEFORE.name());
+        request.setMoveMode(MoveTypeEnum.AFTER.name());
         result = this.requestPostWithOkAndReturn(URL_POST_RESOURCE_API_SCENARIO_SORT, request);
         resultHolder = JSON.parseObject(result.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class);
         response = JSON.parseObject(JSON.toJSONString(resultHolder.getData()), TestPlanOperationResponse.class);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanUpdateRequest.java
Patch:
@@ -51,5 +51,5 @@ public class TestPlanUpdateRequest {
     private Double passThreshold;
 
     @Schema(description = "测试计划组Id")
-    private String testPlanGroupId = TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID;
+    private String groupId = TestPlanConstants.TEST_PLAN_DEFAULT_GROUP_ID;
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -321,7 +321,7 @@ private void cascadeDeleteTestPlanIds(List<String> testPlanIds, TestPlanReportSe
     public TestPlan update(TestPlanUpdateRequest request, String userId, String requestUrl, String requestMethod) {
         this.checkTestPlanNotArchived(request.getId());
         TestPlan testPlan = testPlanMapper.selectByPrimaryKey(request.getId());
-        if (!ObjectUtils.allNull(request.getName(), request.getModuleId(), request.getTags(), request.getPlannedEndTime(), request.getPlannedStartTime(), request.getDescription(), request.getTestPlanGroupId())) {
+        if (!ObjectUtils.allNull(request.getName(), request.getModuleId(), request.getTags(), request.getPlannedEndTime(), request.getPlannedStartTime(), request.getDescription(), request.getGroupId())) {
             TestPlan updateTestPlan = new TestPlan();
             updateTestPlan.setId(request.getId());
             if (StringUtils.isNotBlank(request.getModuleId())) {
@@ -341,7 +341,7 @@ public TestPlan update(TestPlanUpdateRequest request, String userId, String requ
             updateTestPlan.setPlannedStartTime(request.getPlannedStartTime());
             updateTestPlan.setPlannedEndTime(request.getPlannedEndTime());
             updateTestPlan.setDescription(request.getDescription());
-            updateTestPlan.setGroupId(request.getTestPlanGroupId());
+            updateTestPlan.setGroupId(request.getGroupId());
             updateTestPlan.setType(testPlan.getType());
             testPlanMapper.updateByPrimaryKeySelective(updateTestPlan);
         }

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanTests.java
Patch:
@@ -1164,11 +1164,11 @@ public void testPlanUpdateTest() throws Exception {
 
         //修改a2节点下的数据（91,92）的所属测试计划组
         updateRequest = testPlanTestService.generateUpdateRequest(testPlanTestService.selectTestPlanByName("testPlan_91").getId());
-        updateRequest.setTestPlanGroupId(groupTestPlanId7);
+        updateRequest.setGroupId(groupTestPlanId7);
         this.requestPostWithOk(URL_POST_TEST_PLAN_UPDATE, updateRequest);
         a2NodeCount--;
         updateRequest = testPlanTestService.generateUpdateRequest(testPlanTestService.selectTestPlanByName("testPlan_92").getId());
-        updateRequest.setTestPlanGroupId(groupTestPlanId7);
+        updateRequest.setGroupId(groupTestPlanId7);
         this.requestPostWithOk(URL_POST_TEST_PLAN_UPDATE, updateRequest);
         a2NodeCount--;
 

File: backend/services/test-plan/src/test/java/io/metersphere/plan/service/TestPlanTestService.java
Patch:
@@ -299,8 +299,8 @@ public void checkTestPlanUpdateResult(TestPlan testPlan, TestPlanConfig testPlan
             }
         }
 
-        if (updateRequest.getTestPlanGroupId() != null) {
-            Assertions.assertEquals(newTestPlan.getGroupId(), updateRequest.getTestPlanGroupId());
+        if (updateRequest.getGroupId() != null) {
+            Assertions.assertEquals(newTestPlan.getGroupId(), updateRequest.getGroupId());
         } else {
             Assertions.assertEquals(newTestPlan.getGroupId(), testPlan.getGroupId());
         }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanBatchEditRequest.java
Patch:
@@ -12,7 +12,7 @@
 public class TestPlanBatchEditRequest extends TestPlanBatchProcessRequest {
 
     @Schema(description = "是否追加")
-    private boolean append;
+    private boolean append = true;
 
     @Schema(description = "标签")
     private List<String> tags;

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanTests.java
Patch:
@@ -1370,7 +1370,7 @@ public void scheduleTest() throws Exception {
                                 this.requestPostAndReturn(URL_POST_TEST_PLAN_STATISTICS, List.of(groupTestPlanId7))
                                         .getResponse().getContentAsString(), ResultHolder.class).getData()),
                 TestPlanStatisticsResponse.class);
-        Assertions.assertTrue(statisticsResponses.size() == 1);
+        Assertions.assertTrue(statisticsResponses.size() > 1);
         Assertions.assertTrue(statisticsResponses.getFirst().getNextTriggerTime() > 0);
         Assertions.assertTrue(statisticsResponses.getFirst().getScheduleConfig().isEnable());
 
@@ -1395,7 +1395,7 @@ public void scheduleTest() throws Exception {
                                 this.requestPostAndReturn(URL_POST_TEST_PLAN_STATISTICS, List.of(groupTestPlanId7))
                                         .getResponse().getContentAsString(), ResultHolder.class).getData()),
                 TestPlanStatisticsResponse.class);
-        Assertions.assertTrue(statisticsResponses.size() == 1);
+        Assertions.assertTrue(statisticsResponses.size() > 1);
         Assertions.assertTrue(statisticsResponses.getFirst().getNextTriggerTime() == null);
         Assertions.assertFalse(statisticsResponses.getFirst().getScheduleConfig().isEnable());
 
@@ -1474,7 +1474,7 @@ public void scheduleTest() throws Exception {
                                 this.requestPostAndReturn(URL_POST_TEST_PLAN_STATISTICS, List.of(groupTestPlanId7))
                                         .getResponse().getContentAsString(), ResultHolder.class).getData()),
                 TestPlanStatisticsResponse.class);
-        Assertions.assertTrue(statisticsResponses.size() == 1);
+        Assertions.assertTrue(statisticsResponses.size() > 1);
         Assertions.assertTrue(statisticsResponses.getFirst().getNextTriggerTime() == null);
         Assertions.assertTrue(statisticsResponses.getFirst().getScheduleConfig() == null);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemOrganizationController.java
Patch:
@@ -119,7 +119,7 @@ public void disable(@PathVariable String id) {
 
     @PostMapping("/option/all")
     @Operation(summary = "系统设置-系统-组织与项目-组织-获取系统所有组织下拉选项")
-    @RequiresPermissions(value = {PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ, PermissionConstants.ORGANIZATION_PROJECT_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ, PermissionConstants.ORGANIZATION_PROJECT_READ, PermissionConstants.PROJECT_BASE_INFO_READ}, logical = Logical.OR)
     public List<OptionDTO> listAll() {
         return organizationService.listAll();
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/constants/ApiConstants.java
Patch:
@@ -7,6 +7,7 @@
 public class ApiConstants {
     public static final String HTTP_PROTOCOL = "HTTP";
     public static final String CONTENT_TYPE = "Content-Type";
+    public static final String ASSOCIATE_RESULT_PROCESSOR_PREFIX = "ASSOCIATE_RESULT_PROCESSOR_";
 
     private ApiConstants() {}
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/MsProcessorConverterFactory.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.project.api.processor.TimeWaitingProcessor;
 import io.metersphere.project.dto.environment.processors.EnvRequestScriptProcessor;
 import io.metersphere.project.dto.environment.processors.EnvScenarioScriptProcessor;
+import io.metersphere.project.dto.environment.processors.EnvScenarioSqlProcessor;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -25,13 +26,15 @@ public class MsProcessorConverterFactory {
         preConverterMap.put(TimeWaitingProcessor.class, new TimeWaitingProcessorConverter());
         preConverterMap.put(EnvRequestScriptProcessor.class, new ScriptPreProcessorConverter());
         preConverterMap.put(EnvScenarioScriptProcessor.class, new ScenarioScriptProcessorConverter());
+        preConverterMap.put(EnvScenarioSqlProcessor.class, new ScenarioSqlProcessorConverter());
 
         postConverterMap.put(ScriptProcessor.class, new ScriptPostProcessorConverter());
         postConverterMap.put(SQLProcessor.class, new SqlPostProcessorConverter());
         postConverterMap.put(TimeWaitingProcessor.class, new TimeWaitingProcessorConverter());
         postConverterMap.put(ExtractPostProcessor.class, new ExtractPostProcessorConverter());
         postConverterMap.put(EnvRequestScriptProcessor.class, new ScriptPostProcessorConverter());
         postConverterMap.put(EnvScenarioScriptProcessor.class, new ScenarioScriptProcessorConverter());
+        postConverterMap.put(EnvScenarioSqlProcessor.class, new ScenarioSqlProcessorConverter());
     }
 
     public static MsProcessorConverter getPreConverter(Class<?> processorClass) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScenarioScriptProcessorConverter.java
Patch:
@@ -10,6 +10,8 @@
 
 import java.util.Optional;
 
+import static io.metersphere.api.constants.ApiConstants.ASSOCIATE_RESULT_PROCESSOR_PREFIX;
+
 /**
  * 环境场景级前置处理器处理
  *
@@ -40,7 +42,7 @@ public void parse(HashTree hashTree, ScriptProcessor scriptProcessor, ParameterC
                 .ifPresent(hashTree::add);
 
         // 标记当前处理器是否关联场景结果
-        processor.setName("ASSOCIATE_RESULT_PROCESSOR_" + associateScenarioResult);
+        processor.setName(ASSOCIATE_RESULT_PROCESSOR_PREFIX + associateScenarioResult);
         hashTree.add(processor);
     }
 }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -375,7 +375,7 @@ public TestPlanReportDetailResponse getReport(String reportId) {
 	public TestPlanReportDetailResponse edit(TestPlanReportDetailEditRequest request, String currentUser) {
 		TestPlanReport planReport = checkReport(request.getId());
 		TestPlanReportSummary reportSummary = new TestPlanReportSummary();
-		reportSummary.setSummary(request.getSummary());
+		reportSummary.setSummary(StringUtils.isBlank(request.getSummary()) ? StringUtils.EMPTY : request.getSummary());
 		TestPlanReportSummaryExample example = new TestPlanReportSummaryExample();
 		example.createCriteria().andTestPlanReportIdEqualTo(planReport.getId());
 		testPlanReportSummaryMapper.updateByExampleSelective(reportSummary, example);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseDemandService.java
Patch:
@@ -210,8 +210,9 @@ public void updateDemand(FunctionalCaseDemandRequest request, String userId) {
      * @param id 需求关系ID
      */
     public void deleteDemand(String id) {
+        FunctionalCaseDemand functionalCaseDemandInDb= functionalCaseDemandMapper.selectByPrimaryKey(id);
         FunctionalCaseDemandExample functionalCaseDemandExample = new FunctionalCaseDemandExample();
-        functionalCaseDemandExample.createCriteria().andParentEqualTo(id);
+        functionalCaseDemandExample.createCriteria().andParentEqualTo(functionalCaseDemandInDb.getDemandId());
         List<FunctionalCaseDemand> functionalCaseDemands = functionalCaseDemandMapper.selectByExample(functionalCaseDemandExample);
         if (CollectionUtils.isNotEmpty(functionalCaseDemands)) {
             SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/ApiFile.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.api.dto;
 
-import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;
 
@@ -13,12 +12,10 @@ public class ApiFile {
      * 记录文件的ID，防止重名
      * 生成脚本时，通过 fileId + fileName(文件名) 获取文件路径
      */
-    @NotBlank
     private String fileId;
     /**
      * 文件名
      */
-    @NotBlank
     private String fileName;
     /**
      * 是否是本地上传的文件

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -21,7 +21,7 @@ public interface ExtTestPlanMapper {
 
     List<String> selectGroupIdByConditions(TestPlanQueryConditions testPlanQueryConditions);
 
-    List<ModuleCountDTO> countModuleIdByConditions(TestPlanQueryConditions testPlanQueryConditions);
+    List<ModuleCountDTO> countModuleIdByConditions(@Param("request") TestPlanTableRequest testPlanQueryConditions);
 
     List<TestPlan> selectBaseInfoByIds(@Param("list") List<String> deleteIdList);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -3,7 +3,6 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.metersphere.plan.constants.TestPlanResourceConfig;
-import io.metersphere.plan.dto.TestPlanQueryConditions;
 import io.metersphere.plan.dto.request.TestPlanTableRequest;
 import io.metersphere.plan.dto.response.TestPlanResponse;
 import io.metersphere.plan.mapper.ExtTestPlanMapper;
@@ -43,8 +42,8 @@ public class TestPlanManagementService {
 
     public Map<String, Long> moduleCount(TestPlanTableRequest request) {
         //查出每个模块节点下的资源数量。 不需要按照模块进行筛选
-        TestPlanQueryConditions testPlanQueryConditions = new TestPlanQueryConditions(null, request.getProjectId(), request);
-        List<ModuleCountDTO> moduleCountDTOList = extTestPlanMapper.countModuleIdByConditions(testPlanQueryConditions);
+        request.setModuleIds(null);
+        List<ModuleCountDTO> moduleCountDTOList = extTestPlanMapper.countModuleIdByConditions(request);
         Map<String, Long> moduleCountMap = testPlanModuleService.getModuleCountMap(request.getProjectId(), moduleCountDTOList);
         long allCount = 0;
         for (ModuleCountDTO item : moduleCountDTOList) {

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/EnvironmentControllerTests.java
Patch:
@@ -934,7 +934,7 @@ public void testPos() throws Exception {
 
         NodeSortQueryParam sortParam = new NodeSortQueryParam();
         sortParam.setPos(environmentId1.getPos());
-        sortParam.setOperator("lessThan");
+        sortParam.setOperator("moreThan");
         sortParam.setParentId(DEFAULT_PROJECT_ID);
 
         DropNode dropNode = extEnvironmentMapper.selectNodeByPosOperator(sortParam);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/utils/RateCalculateUtils.java
Patch:
@@ -1,11 +1,13 @@
 package io.metersphere.plan.utils;
 
+import lombok.experimental.UtilityClass;
+
 import java.text.DecimalFormat;
 
 /**
  * 计划模块百分比计算工具类
  */
-
+@UtilityClass
 public class RateCalculateUtils {
 
 	public static final int MAX_BOUNDARY = 100;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/handler/result/CommonResultCode.java
Patch:
@@ -27,7 +27,7 @@ public enum CommonResultCode implements IResultCode {
     DEFAULT_TEMPLATE_PERMISSION(100014, "default_template_permission_error"),
     STATUS_ITEM_NOT_EXIST(100015, "status_item.not.exist"),
     STATUS_ITEM_EXIST(100016, "status_item.exist"),
-    FIELD_VALIDATE_ERROR(100017, "field_validate_error"),
+    FIELD_VALIDATE_ERROR(100017, "simple_field_validate_error_tips"),
     STATUS_DEFINITION_REQUIRED_ERROR(100018, "status_definition_required_error"),
     ADMIN_USER_ROLE_PERMISSION(100019, "internal_admin_user_role_permission_error");
 

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -639,8 +639,9 @@ public void update() throws Exception {
         Map<String, Object> steptDetailMap = new HashMap<>();
         MsHTTPElement msHttpElement = MsHTTPElementTest.getMsHttpElement();
         msHttpElement.setBody(ApiDebugControllerTests.addBodyLinkFile(msHttpElement.getBody(), fileMetadataId));
-        steptDetailMap.put(steps.get(0).getId(), getMsHttpElementStr(msHttpElement));
-        steptDetailMap.put(steps.get(1).getId(), getMsHttpElementStr(msHttpElement));
+        for (ApiScenarioStepRequest step : steps) {
+            steptDetailMap.put(step.getId(), getMsHttpElementStr(msHttpElement));
+        }
         fileMetadataStepId = steps.get(0).getId();
 
         request.setSteps(steps);

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectTemplateControllerTests.java
Patch:
@@ -40,6 +40,7 @@
 import org.springframework.test.context.jdbc.SqlConfig;
 import org.springframework.test.web.servlet.MvcResult;
 
+import java.text.MessageFormat;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -383,7 +384,7 @@ public void setDefaultTemplate() throws Exception {
         Assertions.assertEquals(defaultTemplateDTO.getId(), template.getId());
 
         // @@校验日志
-        checkLog(addTemplate.getId(), OperationLogType.UPDATE);
+        checkLog(addTemplate.getId(), OperationLogType.UPDATE, MessageFormat.format(BASE_PATH + SET_DEFAULT, DEFAULT_PROJECT_ID, addTemplate.getId()));
         // @@校验权限
         requestGetPermissionTest(PermissionConstants.PROJECT_TEMPLATE_UPDATE, SET_DEFAULT, DEFAULT_PROJECT_ID, addTemplate.getId());
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseNoticeService.java
Patch:
@@ -157,6 +157,7 @@ public FunctionalCaseDTO getMainFunctionalCaseDTO(FunctionalCaseEditRequest requ
             FunctionalCase functionalCase = functionalCaseMapper.selectByPrimaryKey(request.getId());
             BeanUtils.copyBean(functionalCaseDTO, functionalCase);
             setReviewName(request.getId(), functionalCaseDTO);
+            setPlanName(request.getId(), functionalCaseDTO);
         } else {
             BeanUtils.copyBean(functionalCaseDTO, request);
             functionalCaseDTO.setCreateUser(null);
@@ -176,7 +177,6 @@ public FunctionalCaseDTO getMainFunctionalCaseDTO(FunctionalCaseEditRequest requ
             }
         }
         functionalCaseDTO.setFields(fields);
-        setPlanName(request.getId(), functionalCaseDTO);
         return functionalCaseDTO;
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanManagementService.java
Patch:
@@ -18,6 +18,7 @@
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
 import jakarta.annotation.Resource;
+import org.apache.commons.collections4.MapUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -61,7 +62,7 @@ public Map<String, Long> moduleCount(TestPlanTableRequest request) {
      */
     public Pager<List<TestPlanResponse>> page(TestPlanTableRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "t.update_time desc");
+                MapUtils.isEmpty(request.getSort()) ? "t.num desc" : request.getSortString());
         return PageUtils.setPageInfo(page, this.getTableList(request));
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanModuleController.java
Patch:
@@ -52,7 +52,7 @@ public String add(@RequestBody @Validated TestPlanModuleCreateRequest request) {
     @PostMapping("/update")
     @Operation(summary = "测试计划管理-模块树-修改模块")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_UPDATE)
-    @CheckOwner(resourceId = "#request.getId()", resourceType = "file_module")
+    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_module")
     public boolean list(@RequestBody @Validated TestPlanModuleUpdateRequest request) {
         testPlanManagementService.checkModuleIsOpen(request.getId(), TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN_MODULE, Collections.singletonList(TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN));
         testPlanModuleService.update(request, SessionUtils.getUserId(),"/test-plan/module/update", HttpMethodConstants.POST.name());
@@ -62,7 +62,7 @@ public boolean list(@RequestBody @Validated TestPlanModuleUpdateRequest request)
     @GetMapping("/delete/{deleteId}")
     @Operation(summary = "测试计划管理-模块树-删除模块")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_READ_DELETE)
-    @CheckOwner(resourceId = "#deleteId", resourceType = "file_module")
+    @CheckOwner(resourceId = "#deleteId", resourceType = "test_plan_module")
     public void deleteNode(@PathVariable String deleteId) {
         testPlanManagementService.checkModuleIsOpen(deleteId, TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN_MODULE, Collections.singletonList(TestPlanResourceConfig.CHECK_TYPE_TEST_PLAN));
         testPlanModuleService.deleteModule(deleteId, SessionUtils.getUserId(),"/test-plan/module/delete",HttpMethodConstants.GET.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioStepMapper.java
Patch:
@@ -15,7 +15,7 @@ public interface ExtApiScenarioStepMapper {
 
     List<ApiScenarioStepDTO> getStepDTOByScenarioIds(@Param("scenarioIds") List<String> scenarioIds);
 
-    List<ApiScenarioCsvStep> getCsvStepByScenarioId(@Param("scenarioId") String scenarioId);
+    List<ApiScenarioCsvStep> getCsvStepByScenarioIds(@Param("scenarioIds") List<String> scenarioId);
 
     /**
      * 查询有步骤详情的请求类型的步骤

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/MockServerUtils.java
Patch:
@@ -46,11 +46,12 @@ public static HttpRequestParam getHttpRequestParam(HttpServletRequest request, S
 
         try {
             if (request instanceof ShiroHttpServletRequest shiroHttpServletRequest) {
+                List<String> contentTypeLists = List.of(MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE, MediaType.TEXT_XML_VALUE, MediaType.TEXT_PLAIN_VALUE);
                 if (StringUtils.equals(request.getContentType(), MediaType.APPLICATION_OCTET_STREAM_VALUE)) {
                     InputStream inputStream = shiroHttpServletRequest.getRequest().getInputStream();
                     byte[] binaryParams = inputStream.readAllBytes();
                     requestParam.setBinaryParamsObj(binaryParams);
-                } else if (StringUtils.equals(request.getContentType(), MediaType.APPLICATION_JSON_VALUE)) {
+                } else if (contentTypeLists.contains(request.getContentType())) {
                     String inputLine;
                     StringBuilder receiveData = new StringBuilder();
                     try (BufferedReader in = new BufferedReader(new InputStreamReader(

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioReportMapper.java
Patch:
@@ -51,7 +51,7 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
 
     void updateApiScenario(List<String> ids);
 
-    List<ApiScenarioReportStepDTO> selectStepDetailByReportId(@Param("id") String id, @Param("limit") int limit, @Param("offset") int offset);
+    List<ApiScenarioReportStepDTO> selectStepDetailByReportId(@Param("id") String id);
 
     List<ApiReportMessageDTO> getNoticeList(@Param("ids") List<String> ids);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanFunctionalCaseService.java
Patch:
@@ -400,6 +400,7 @@ public void run(TestPlanCaseRunRequest request, LogInsertModule logInsertModule)
 
         //执行记录
         TestPlanCaseExecuteHistory executeHistory = buildHistory(request, logInsertModule.getOperator());
+        handleFileAndNotice(request.getCaseId(), request.getProjectId(), request.getPlanCommentFileIds(), logInsertModule.getOperator(), CaseFileSourceType.PLAN_COMMENT.toString(), request.getNotifier(), request.getTestPlanId(), request.getLastExecResult());
         testPlanCaseExecuteHistoryMapper.insert(executeHistory);
 
     }
@@ -509,7 +510,7 @@ private void handleFileAndNotice(String caseId, String projectId, List<String> u
         //发通知
         if (StringUtils.isNotBlank(notifier)) {
             List<String> relatedUsers = Arrays.asList(notifier.split(";"));
-            testPlanSendNoticeService.sendNoticeCase(relatedUsers, userId, caseId, NoticeConstants.TaskType.FUNCTIONAL_CASE_TASK, NoticeConstants.Event.REVIEW_AT, testPlanId);
+            testPlanSendNoticeService.sendNoticeCase(relatedUsers, userId, caseId, NoticeConstants.TaskType.FUNCTIONAL_CASE_TASK, NoticeConstants.Event.EXECUTE_AT, testPlanId);
         }
 
         if (StringUtils.equalsIgnoreCase(lastExecResult, ExecStatus.SUCCESS.name())) {

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/response/TestPlanReportPageResponse.java
Patch:
@@ -1,5 +1,7 @@
 package io.metersphere.plan.dto.response;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import io.metersphere.plan.serializer.CustomRateSerializer;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -23,6 +25,7 @@ public class TestPlanReportPageResponse {
     @Schema(description = "执行结果")
     private String resultStatus;
     @Schema(description = "通过率")
+    @JsonSerialize(using = CustomRateSerializer.class)
     private Double passRate;
     @Schema(description = "创建人")
     private String createUser;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportShareService.java
Patch:
@@ -101,7 +101,7 @@ public TestPlanShareResponse get(String id) {
 		//检查报告ID是否存在
 		dto.setDeleted(false);
 		TestPlanReport testPlanReport = testPlanReportMapper.selectByPrimaryKey(dto.getReportId());
-		if (testPlanReport == null) {
+		if (testPlanReport == null || testPlanReport.getDeleted()) {
 			dto.setDeleted(true);
 		}
 		return dto;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -225,6 +225,7 @@ public void batchDelete(TestPlanBatchProcessRequest request, String operator, St
                         testPlanIdList.add(testPlan.getId());
                     }
                 }
+                testPlanSendNoticeService.batchSendNotice(request.getProjectId(), deleteIdList, userMapper.selectByPrimaryKey(operator), NoticeConstants.Event.DELETE);
                 this.deleteByList(testPlanIdList);
                 // 计划组的删除暂时预留
                 this.deleteGroupByList(testPlanGroupList);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiCommonService.java
Patch:
@@ -136,7 +136,7 @@ public void setLinkFileInfo(String resourceId, List<ApiFile> apiFiles) {
                     linkFile.setFileAlias(fileAssociations.get(0).getDeletedFileName());
                 }
             } else {
-                String fileName = fileMetadata.getName() + fileMetadata.getType();
+                String fileName = fileMetadata.getName();
                 if (StringUtils.isNotBlank(fileMetadata.getType())) {
                     // 前端展示别名加后缀
                     fileName += "." + fileMetadata.getType();

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanAssociateController.java
Patch:
@@ -38,9 +38,9 @@ public class TestPlanAssociateController {
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
     @CheckOwner(resourceId = "#request.getTestPlanId()", resourceType = "test_plan")
     public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @RequestBody FunctionalCasePageRequest request) {
-        Boolean isRepeat = false;
+        boolean isRepeat = false;
         if (StringUtils.isNotBlank(request.getTestPlanId())) {
-            isRepeat = testPlanConfigService.getConfigById(request.getTestPlanId());
+            isRepeat = testPlanConfigService.isRepeatCase(request.getTestPlanId());
         }
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
                 StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanConfigService.java
Patch:
@@ -27,7 +27,7 @@ public void deleteBatch(List<String> testPlanIdList) {
         testPlanConfigMapper.deleteByExample(example);
     }
 
-    public boolean getConfigById(String testPlanId) {
+    public boolean isRepeatCase(String testPlanId) {
         TestPlanConfig testPlanConfig = testPlanConfigMapper.selectByPrimaryKey(testPlanId);
         return testPlanConfig.getRepeatCase();
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/FilterChainUtils.java
Patch:
@@ -84,8 +84,8 @@ public static Map<String, String> loadBaseFilterChain() {
         filterChainDefinitionMap.put("/api/report/scenario/share/**", "anon");
         filterChainDefinitionMap.put("/api/report/share/get/**", "anon");
         // 测试计划报告分享接口
-        filterChainDefinitionMap.put("/test-plan/report/share/get/detail/**", "anon");
         filterChainDefinitionMap.put("/test-plan/report/share/detail/**", "anon");
+        filterChainDefinitionMap.put("/test-plan/report/share/get/**", "anon");
 
         return filterChainDefinitionMap;
     }

File: backend/services/test-plan/src/main/java/io/metersphere/plan/controller/TestPlanReportController.java
Patch:
@@ -60,7 +60,7 @@ public Pager<List<TestPlanReportPageResponse>> page(@Validated @RequestBody Test
     @PostMapping("/rename/{id}")
     @Operation(summary = "测试计划-报告-重命名")
     @RequiresPermissions(PermissionConstants.TEST_PLAN_REPORT_READ_UPDATE)
-    @CheckOwner(resourceId = "#request.getId()", resourceType = "test_plan_report")
+    @CheckOwner(resourceId = "#id", resourceType = "test_plan_report")
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#id)", msClass = TestPlanReportLogService.class)
     public void rename(@PathVariable String id, @RequestBody Object name) {
         testPlanReportService.rename(id, name.toString());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/request/TestPlanReportBatchRequest.java
Patch:
@@ -1,14 +1,14 @@
 package io.metersphere.plan.dto.request;
 
-import io.metersphere.system.dto.request.TableBatchRequest;
+import io.metersphere.system.dto.table.TableBatchProcessDTO;
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
 @Data
 @EqualsAndHashCode(callSuper = false)
-public class TestPlanReportBatchRequest extends TableBatchRequest {
+public class TestPlanReportBatchRequest extends TableBatchProcessDTO {
 
     @Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{test_plan.project_id.not_blank}")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanCaseExecuteHistoryMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.plan.mapper;
 
+import io.metersphere.plan.domain.TestPlanCaseExecuteHistory;
 import io.metersphere.plan.dto.request.TestPlanCaseExecHistoryRequest;
 import io.metersphere.plan.dto.response.TestPlanCaseExecHistoryResponse;
 import org.apache.ibatis.annotations.Param;
@@ -11,4 +12,6 @@ public interface ExtTestPlanCaseExecuteHistoryMapper {
     void updateDeleted(@Param("testPlanCaseIds") List<String> testPlanCaseIds, @Param("deleted") boolean deleted);
 
     List<TestPlanCaseExecHistoryResponse> getCaseExecHistory(@Param("request") TestPlanCaseExecHistoryRequest request);
+
+    List<TestPlanCaseExecuteHistory> selectSteps(@Param("testPlanCaseId") String testPlanCaseId, @Param("caseId") String caseId);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/child/MsCsvChildPreConverter.java
Patch:
@@ -67,9 +67,11 @@ private static void addCsvDataSet(HashTree tree, String shareMode, CsvVariable c
         csvDataSet.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass(JmeterAlias.TEST_BEAN_GUI));
         csvDataSet.setName(StringUtils.isEmpty(csvVariable.getName()) ? CSVDataSet.class.getSimpleName() : csvVariable.getName());
         csvDataSet.setProperty(JmeterProperty.FILE_ENCODING, StringUtils.isEmpty(csvVariable.getEncoding()) ? StandardCharsets.UTF_8.name() : csvVariable.getEncoding());
+        csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.IGNORE_FIRST_LINE, csvVariable.getIgnoreFirstLine());
+        csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.STOP_THREAD, csvVariable.getStopThreadOnEof());
         csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.FILE_NAME, path);
         csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.SHARE_MODE, shareMode);
-        csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.RECYCLE, true);
+        csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.RECYCLE, csvVariable.getRecycleOnEof());
         csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.VARIABLE_NAMES, csvVariable.getVariableNames());
         csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.DELIMITER, csvVariable.getDelimiter());
         csvDataSet.setProperty(JmeterProperty.CSVDataSetProperty.QUOTED_DATA, csvVariable.getAllowQuotedData());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterProperty.java
Patch:
@@ -14,6 +14,8 @@ public class JmeterProperty {
     public final static String FILE_ENCODING = "fileEncoding";
 
     public class CSVDataSetProperty {
+        public static final String IGNORE_FIRST_LINE = "ignoreFirstLine";
+        public static final String STOP_THREAD = "stopThread";
         public static final String FILE_NAME = "filename";
         public static final String SHARE_MODE = "shareMode";
         public static final String RECYCLE = "recycle";

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -102,6 +102,9 @@ public List<TestPlanReportPageResponse> page(TestPlanReportPageRequest request)
      * 报告重命名
      */
     public void rename(String id, String name) {
+		if (name.length() > 300) {
+			throw new MSException(Translator.get("test_plan_report_name_length_range"));
+		}
         TestPlanReport report = checkReport(id);
         report.setName(name);
         testPlanReportMapper.updateByPrimaryKeySelective(report);

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanModuleService.java
Patch:
@@ -104,7 +104,7 @@ protected void checkDataValidity(TestPlanModule module) {
                 example.clear();
             }
         }
-        example.createCriteria().andParentIdEqualTo(module.getParentId()).andNameEqualTo(module.getName()).andIdNotEqualTo(module.getId());
+        example.createCriteria().andParentIdEqualTo(module.getParentId()).andProjectIdEqualTo(module.getProjectId()).andNameEqualTo(module.getName()).andIdNotEqualTo(module.getId());
         if (testPlanModuleMapper.countByExample(example) > 0) {
             throw new MSException(Translator.get("node.name.repeat"));
         }
@@ -117,6 +117,7 @@ public void update(TestPlanModuleUpdateRequest request, String userId, String re
         updateModule.setId(request.getId());
         updateModule.setName(request.getName().trim());
         updateModule.setParentId(module.getParentId());
+        updateModule.setProjectId(module.getProjectId());
         this.checkDataValidity(updateModule);
         updateModule.setUpdateTime(System.currentTimeMillis());
         updateModule.setUpdateUser(userId);

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanTests.java
Patch:
@@ -562,12 +562,12 @@ public void testPlanAddTest() throws Exception {
                 groupTestPlanId7 = returnId;
             } else if (i == 15) {
                 groupTestPlanId15 = returnId;
-            } else if (i > 700) {
+            } else if (i > 700 && i < 750) {
 
 
                 SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
                 TestPlanReportMapper batchInsert = sqlSession.getMapper(TestPlanReportMapper.class);
-                //大于600要创建测试计划报告   每个测试计划创建250个报告
+                // 701-749 要创建测试计划报告   每个测试计划创建250个报告
                 for (int reportCount = 0; reportCount < 250; reportCount++) {
                     TestPlanReport testPlanReport = new TestPlanReport();
                     testPlanReport.setId(IDGenerator.nextStr());

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseCheckEventListener.java
Patch:
@@ -256,7 +256,8 @@ private List<Map<String, Object>> getSingleRowSteps(String cellDesc, String cell
         for (int i = 0; i < index; i++) {
             // 保持插入顺序，判断用例是否有相同的steps
             Map<String, Object> step = new LinkedHashMap<>();
-            step.put("num", startStepIndex + i + 1);
+            step.put("id", UUID.randomUUID().toString());
+            step.put("num", startStepIndex + i);
             if (i < stepDescList.size()) {
                 step.put("desc", stepDescList.get(i));
                 if (stepDescList.get(i).length() > STEP_LENGTH) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/mockserver/MockServerService.java
Patch:
@@ -242,15 +242,15 @@ private ResponseEntity<?> getResponseBody(ApiDefinitionMockConfig config, String
                 case "JSON" -> responseEntity(responseCode, responseBody.getJsonBody().getJsonWithSchema(), headers);
                 case "XML" -> responseEntity(responseCode, responseBody.getXmlBody().getValue(), headers);
                 case "RAW" -> responseEntity(responseCode, responseBody.getRawBody().getValue(), headers);
-                case "BINARY" -> handleBinaryBody(responseBody, projectId, resourceId, isMock);
+                case "BINARY" -> handleBinaryBody(responseCode, responseBody, projectId, resourceId, isMock);
                 default -> responseEntity(responseCode, StringUtils.EMPTY, headers);
             };
         }
 
         return requestNotFound();
     }
 
-    private ResponseEntity<?> handleBinaryBody(ResponseBody responseBody, String projectId, String resourceId, boolean isMock) {
+    private ResponseEntity<?> handleBinaryBody(int responseCode, ResponseBody responseBody, String projectId, String resourceId, boolean isMock) {
         String fileId = responseBody.getBinaryBody().getFile().getFileId();
         String fileName = responseBody.getBinaryBody().getFile().getFileName();
         String fileType = StringUtils.substring(fileName, fileName.lastIndexOf(".") + 1);
@@ -291,7 +291,7 @@ private ResponseEntity<?> handleBinaryBody(ResponseBody responseBody, String pro
             }
         }
 
-        return ResponseEntity.ok()
+        return ResponseEntity.status(responseCode)
                 .contentType(mediaType)
                 .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileName + "\"")
                 .body(bytes);

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseTestMapper.java
Patch:
@@ -14,6 +14,8 @@ public interface ExtFunctionalCaseTestMapper {
 
     List<String> getIds(@Param("request") DisassociateOtherCaseRequest request);
 
+    Integer getOtherCaseCount(@Param("caseId") String caseId);
+
     List<FunctionalCaseTestDTO> getList(@Param("request") FunctionalCaseTestRequest request);
 
     List<FunctionalCaseTestPlanDTO> getPlanList(@Param("request") AssociatePlanPageRequest request);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectController.java
Patch:
@@ -48,7 +48,7 @@ public List<Project> getUserProject(@PathVariable String organizationId) {
     }
 
     @GetMapping("/list/options/{organizationId}/{module}")
-    @Operation(summary = "根据组织ID获取所有开启某个模块的所有权限的项目")
+    @Operation(summary = "根据组织ID获取所有开启某个模块的所有有权限的项目")
     @CheckOwner(resourceId = "#organizationId", resourceType = "organization")
     public List<Project> getUserProjectWidthModule(@PathVariable String organizationId, @PathVariable String module) {
         return projectService.getUserProjectWidthModule(organizationId, module, SessionUtils.getUserId());

File: backend/services/test-plan/src/main/java/io/metersphere/plan/dto/TestPlanDTO.java
Patch:
@@ -11,6 +11,7 @@
 @Data
 @NoArgsConstructor
 public class TestPlanDTO {
+    private String id;
 
     @Schema(description = "message.domain.test_plan_num")
     private Long num;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/mockserver/MockServerService.java
Patch:
@@ -128,7 +128,7 @@ private ApiMockConfigDTO findMatchingMockConfig(String apiId, Map<String, String
         List<ApiDefinitionMockConfig> mockConfigs = apiDefinitionMockConfigMapper.selectByExampleWithBLOBs(mockConfigExample);
         // 寻找匹配的 ApiDefinitionMockConfig
         ApiDefinitionMockConfig apiDefinitionMockConfig = mockConfigs.stream()
-                .filter(mockConfig -> MockServerUtils.matchMockConfig(mockConfig.getMatching(), requestHeaderMap, param) && matchBinaryBody(mockConfig, param.getBinaryParamsObj(), apiId))
+                .filter(mockConfig -> MockServerUtils.matchMockConfig(mockConfig.getMatching(), requestHeaderMap, param) && matchBinaryBody(mockConfig, param.getBinaryParamsObj(), apiDefinitionMockList.getFirst().getProjectId()))
                 .findFirst()
                 .orElse(null);
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanModuleMapper.java
Patch:
@@ -16,6 +16,8 @@ public interface ExtTestPlanModuleMapper {
 
     List<String> selectChildrenIdsByParentIds(@Param("ids") List<String> strings);
 
+    List<String> selectPlanIdsByModuleIds(@Param("ids") List<String> strings);
+
     void deleteByIds(@Param("ids") List<String> deleteId);
 
     BaseModule selectBaseModuleById(String dragNodeId);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugModuleLogService.java
Patch:
@@ -75,7 +75,7 @@ public void saveUpdateLog(ApiDebugModule module, String projectId, String operat
 
     public void saveDeleteModuleLog(List<BaseTreeNode> deleteModule, String operator, String projectId) {
         Project project = projectMapper.selectByPrimaryKey(projectId);
-        List<LogDTO> dtos = new ArrayList<>();
+        List<LogDTO> dos = new ArrayList<>();
         deleteModule.forEach(item -> {
                     LogDTO dto = LogDTOBuilder.builder()
                             .projectId(project.getId())
@@ -88,10 +88,10 @@ public void saveDeleteModuleLog(List<BaseTreeNode> deleteModule, String operator
                             .content(item.getName() + " " + Translator.get("log.delete_module"))
                             .createUser(operator)
                             .build().getLogDTO();
-                    dtos.add(dto);
+                    dos.add(dto);
                 }
         );
-        operationLogService.batchAdd(dtos);
+        operationLogService.batchAdd(dos);
     }
 
     public void saveDeleteDataLog(List<ApiDebug> deleteData, String operator, String projectId) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -214,7 +214,8 @@ public void parallelExecute(ApiTestCaseBatchRunRequest request, String userId) {
     }
 
     /**
-     *  集成报告，执行前先设置成 RUNNING
+     * 集成报告，执行前先设置成 RUNNING
+     *
      * @param runModeConfig
      */
     private void setRunningIntegrateReport(ApiRunModeConfigDTO runModeConfig) {
@@ -326,7 +327,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
 
         TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, apiTestCase, runModeConfig);
         taskRequest.setQueueId(queue.getQueueId());
-        taskRequest.setRequestCount(1l);
+        taskRequest.setRequestCount(1L);
         execute(taskRequest, apiTestCase, apiTestCaseBlob, BeanUtils.copyBean(new ApiDefinitionExecuteInfo(), apiDefinition));
     }
 

File: backend/services/test-plan/src/main/java/io/metersphere/plan/mapper/ExtTestPlanMapper.java
Patch:
@@ -38,4 +38,6 @@ public interface ExtTestPlanMapper {
     void batchUpdate(@Param("testPlan") TestPlan testPlan, @Param("ids") List<String> ids);
 
     List<String> selectIdByProjectId(String projectId);
+
+    List<String> selectNotArchivedIds(@Param("ids") List<String> selectIds);
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileRepositoryService.java
Patch:
@@ -140,7 +140,7 @@ public String addFile(RepositoryFileAddRequest request, String operator) {
         if (fileAttachInfo == null || fileAttachInfo.fileIsNotExist()) {
             throw new MSException(Translator.get("file.not.exist"));
         }
-        FileMetadata fileMetadata = fileMetadataService.genFileMetadata(request.getFilePath(), StorageType.GIT.name(), fileAttachInfo.getSize(), request.isEnable(),
+        FileMetadata fileMetadata = fileMetadataService.genFileMetadata(null, request.getFilePath(), StorageType.GIT.name(), fileAttachInfo.getSize(), request.isEnable(),
                 fileModule.getProjectId(), fileModule.getId(), operator);
 
         //判断文件是否存在: 同一存储库下文件路径和分支不能重复

File: backend/framework/domain/src/main/java/io/metersphere/plan/domain/TestPlanReportFunctionCase.java
Patch:
@@ -53,7 +53,7 @@ public class TestPlanReportFunctionCase implements Serializable {
     private String functionCaseExecuteUser;
 
     @Schema(description = "功能用例关联缺陷数")
-    private String functionCaseBugCount;
+    private Long functionCaseBugCount;
 
     @Schema(description = "执行结果", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{test_plan_report_function_case.function_case_execute_result.not_blank}", groups = {Created.class})
@@ -72,7 +72,7 @@ public enum Column {
         functionCaseModule("function_case_module", "functionCaseModule", "VARCHAR", false),
         functionCasePriority("function_case_priority", "functionCasePriority", "VARCHAR", false),
         functionCaseExecuteUser("function_case_execute_user", "functionCaseExecuteUser", "VARCHAR", false),
-        functionCaseBugCount("function_case_bug_count", "functionCaseBugCount", "VARCHAR", false),
+        functionCaseBugCount("function_case_bug_count", "functionCaseBugCount", "BIGINT", false),
         functionCaseExecuteResult("function_case_execute_result", "functionCaseExecuteResult", "VARCHAR", false);
 
         private static final String BEGINNING_DELIMITER = "`";

File: backend/framework/domain/src/main/java/io/metersphere/plan/mapper/TestPlanReportBugMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.plan.domain.TestPlanReportBug;
 import io.metersphere.plan.domain.TestPlanReportBugExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface TestPlanReportBugMapper {
     long countByExample(TestPlanReportBugExample example);

File: backend/framework/domain/src/main/java/io/metersphere/plan/mapper/TestPlanReportFunctionCaseMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.plan.domain.TestPlanReportFunctionCase;
 import io.metersphere.plan.domain.TestPlanReportFunctionCaseExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface TestPlanReportFunctionCaseMapper {
     long countByExample(TestPlanReportFunctionCaseExample example);

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/OrganizationEditRequest.java
Patch:
@@ -25,7 +25,7 @@ public class OrganizationEditRequest implements Serializable {
     private String name;
 
     @Schema(description =  "描述")
-    @Size(max = 500, groups = {Created.class, Updated.class})
+    @Size(max = 1000, groups = {Created.class, Updated.class})
     private String description;
 
     @Schema(description = "成员ID集合")

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -364,9 +364,10 @@ public TestPlanReportDetailResponse getReport(String reportId) {
 	public TestPlanReportDetailResponse edit(TestPlanReportDetailEditRequest request, String currentUser) {
 		TestPlanReport planReport = checkReport(request.getId());
 		TestPlanReportSummary reportSummary = new TestPlanReportSummary();
-		reportSummary.setId(planReport.getId());
 		reportSummary.setSummary(request.getSummary());
-		testPlanReportSummaryMapper.updateByPrimaryKeySelective(reportSummary);
+		TestPlanReportSummaryExample example = new TestPlanReportSummaryExample();
+		example.createCriteria().andTestPlanReportIdEqualTo(planReport.getId());
+		testPlanReportSummaryMapper.updateByExampleSelective(reportSummary, example);
 		// 处理富文本文件
 		transferRichTextTmpFile(request.getId(), planReport.getProjectId(), request.getRichTextTmpFileIds(), currentUser, TestPlanReportAttachmentSourceType.RICH_TEXT.name());
 		return getReport(planReport.getId());

File: backend/services/project-management/src/main/java/io/metersphere/project/service/GlobalParamsLogService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.sdk.domain.ProjectParameter;
 import io.metersphere.sdk.mapper.ProjectParameterMapper;
 import io.metersphere.sdk.util.JSON;
+import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.log.dto.LogDTO;
@@ -32,7 +33,7 @@ public LogDTO addLog(GlobalParamsRequest request) {
                 null,
                 OperationLogType.ADD.name(),
                 OperationLogModule.PROJECT_MANAGEMENT_ENVIRONMENT,
-                null);
+                Translator.get("global_request_header"));
 
         dto.setOriginalValue(JSON.toJSONBytes(request.getGlobalParams()));
         return dto;
@@ -47,7 +48,7 @@ public LogDTO updateLog(GlobalParamsRequest request) {
                 null,
                 OperationLogType.UPDATE.name(),
                 OperationLogModule.PROJECT_MANAGEMENT_ENVIRONMENT,
-                null);
+                Translator.get("global_request_header"));
         ProjectParameter projectParameters = projectParametersMapper.selectByPrimaryKey(request.getId());
         dto.setOriginalValue(projectParameters.getParameters());
         dto.setModifiedValue(JSON.toJSONBytes(request.getGlobalParams()));

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalTestCaseController.java
Patch:
@@ -77,7 +77,7 @@ public void associateCase(@Validated @RequestBody AssociateOtherCaseRequest requ
     @Operation(summary = "用例管理-功能用例-关联其他用例-取消关联用例")
     @Log(type = OperationLogType.DISASSOCIATE, expression = "#msClass.disassociateCaseLog(#request)", msClass = FunctionalCaseLogService.class)
     @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
-    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
+    @CheckOwner(resourceId = "#request.caseId", resourceType = "functional_case")
     public void disassociateCase(@Validated @RequestBody DisassociateOtherCaseRequest request) {
         functionalTestCaseService.disassociateCase(request);
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/request/DisassociateOtherCaseRequest.java
Patch:
@@ -9,7 +9,7 @@
 public class DisassociateOtherCaseRequest extends BaseFunctionalCaseBatchDTO {
 
     @Schema(description = "功能用例选择的项目id", requiredMode = Schema.RequiredMode.REQUIRED)
-    @NotBlank(message = "{case_review_case.project_id.not_blank}")
+    @NotBlank(message = "{functional_case.id.not_blank}")
     private String caseId;
 
     @Schema(description = "关联用例的类型(API,SCENARIO,UI,PERFORMANCE)", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalTestCaseService.java
Patch:
@@ -191,7 +191,7 @@ public void disassociateCase(DisassociateOtherCaseRequest request) {
     public List<String> doSelectIds(DisassociateOtherCaseRequest request) {
         if (request.isSelectAll()) {
             List<String> ids = extFunctionalCaseTestMapper.getIds(request);
-            if (org.apache.commons.collections.CollectionUtils.isNotEmpty(request.getExcludeIds())) {
+            if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }
             return ids;

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanCaseService.java
Patch:
@@ -59,7 +59,8 @@ public void saveTestPlanResource(@Validated TestPlanResourceAssociationParam ass
     public long getNextOrder(String testPlanId) {
         Long maxPos = extTestPlanFunctionalCaseMapper.getMaxPosByTestPlanId(testPlanId);
         if (maxPos == null) {
-            return 0;
+            //默认返回POS_STEP，不能直接返回0， 否则无法进行“前置”排序
+            return ServiceUtils.POS_STEP;
         } else {
             return maxPos + ServiceUtils.POS_STEP;
         }

File: backend/services/system-setting/src/main/java/io/metersphere/system/utils/ServiceUtils.java
Patch:
@@ -19,7 +19,8 @@
 
 public class ServiceUtils {
 
-    public static final int POS_STEP = 5000;
+    //用于排序的pos
+    public static final int POS_STEP = 4096;
 
     /**
      * 保存资源名称，在处理 NOT_FOUND 异常时，拼接资源名称

File: backend/services/test-plan/src/main/java/io/metersphere/plan/service/TestPlanCaseService.java
Patch:
@@ -16,6 +16,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicLong;
@@ -36,6 +37,8 @@ public void saveTestPlanResource(@Validated TestPlanResourceAssociationParam ass
         long now = System.currentTimeMillis();
         List<TestPlanFunctionalCase> testPlanFunctionalCaseList = new ArrayList<>();
         List<String> associationIdList = associationParam.getResourceIdList();
+        // 批量添加时，按照列表顺序进行展示。所以这里将集合倒叙排列
+        Collections.reverse(associationIdList);
         for (int i = 0; i < associationIdList.size(); i++) {
             TestPlanFunctionalCase testPlanFunctionalCase = new TestPlanFunctionalCase();
             testPlanFunctionalCase.setId(IDGenerator.nextStr());

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/CsvVariable.java
Patch:
@@ -79,7 +79,7 @@ public class CsvVariable {
     private Boolean stopThreadOnEof = false;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(name) && file != null;
+        return StringUtils.isNotBlank(name) && file != null && file.isValid();
     }
 
     public boolean isEnable() {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterProperty.java
Patch:
@@ -21,6 +21,7 @@ public class CSVDataSetProperty {
         public static final String QUOTED_DATA = "quotedData";
         public static final String SHARE_MODE_GROUP = "shareMode.group";
         public static final String SHARE_MODE_THREAD = "shareMode.thread";
+        public static final String VARIABLE_NAMES = "variableNames";
 
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.node.TextNode;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-import io.metersphere.api.constants.ApiResourceType;
 import io.metersphere.api.domain.ApiDefinition;
 import io.metersphere.api.dto.ReferenceDTO;
 import io.metersphere.api.dto.ReferenceRequest;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionDTO.java
Patch:
@@ -45,6 +45,9 @@ public class ApiDefinitionDTO extends ApiDefinition{
     @Schema(description = "是否关注")
     private Boolean follow;
 
+    @Schema(description = "模块名称")
+    private String moduleName;
+
     @Schema(description = "自定义字段集合")
     private List<ApiDefinitionCustomFieldDTO> customFields;
 

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDefinitionMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.domain.ApiDefinition;
 import io.metersphere.api.domain.ApiDefinitionCustomField;
+import io.metersphere.api.domain.ApiTestCase;
 import io.metersphere.api.dto.ApiDefinitionExecuteInfo;
 import io.metersphere.api.dto.ReferenceDTO;
 import io.metersphere.api.dto.ReferenceRequest;
@@ -23,7 +24,7 @@ public interface ExtApiDefinitionMapper {
 
     List<ApiDefinitionDTO> listDoc(@Param("request") ApiDefinitionDocRequest request);
 
-    List<ApiCaseComputeDTO> selectApiCaseByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids, @Param("projectId") String projectId);
+    List<ApiTestCase> selectNotInTrashCaseIdsByApiIds(@Param("apiIds") List<String> apiIds);
 
     Long getPos(@Param("projectId") String projectId);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDefinitionModuleMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.mapper;
 
+import io.metersphere.api.domain.ApiDefinitionModule;
 import io.metersphere.api.dto.debug.ApiTreeNode;
 import io.metersphere.api.dto.definition.ApiModuleRequest;
 import io.metersphere.project.dto.ModuleCountDTO;
@@ -36,4 +37,6 @@ public interface ExtApiDefinitionModuleMapper {
     List<BaseTreeNode> selectBaseByIds(@Param("ids") List<String> ids);
 
     List<String> getModuleIdsByParentIds(@Param("parentIds") List<String> parentIds);
+
+    List<ApiDefinitionModule> getNameInfoByIds(@Param("ids") List<String> ids);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/child/MsCsvChildPreConverter.java
Patch:
@@ -47,7 +47,7 @@ public static void addCsvDataSet(HashTree tree, String shareMode, List<CsvVariab
     }
 
     private static void addCsvDataSet(HashTree tree, String shareMode, CsvVariable csvVariable) {
-        if (!csvVariable.isValid()) {
+        if (!csvVariable.isValid() || !csvVariable.isEnable()) {
             return;
         }
         // 执行机执行文件存放的缓存目录

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/debug/ApiDebugController.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.api.service.debug.ApiDebugLogService;
 import io.metersphere.api.service.debug.ApiDebugService;
 import io.metersphere.project.service.FileModuleService;
+import io.metersphere.sdk.constants.DefaultRepositoryDir;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.sdk.dto.api.task.TaskRequestDTO;
 import io.metersphere.system.dto.sdk.BaseTreeNode;
@@ -109,7 +110,8 @@ public void editPos(@Validated @RequestBody ApiEditPosRequest request) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     @RequiresPermissions(PermissionConstants.PROJECT_FILE_MANAGEMENT_READ_ADD)
     public String transfer(@Validated @RequestBody ApiTransferRequest request) {
-        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), ApiResourceType.API_DEBUG.name());
+        String apiDebugDir = DefaultRepositoryDir.getApiDebugDir(request.getProjectId(), request.getSourceId());
+        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), apiDebugDir);
     }
 
     @GetMapping("/transfer/options/{projectId}")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -18,6 +18,7 @@
 import io.metersphere.api.service.definition.ApiDefinitionService;
 import io.metersphere.api.utils.JsonSchemaBuilder;
 import io.metersphere.project.service.FileModuleService;
+import io.metersphere.sdk.constants.DefaultRepositoryDir;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.sdk.dto.api.task.TaskRequestDTO;
 import io.metersphere.system.dto.OperationHistoryDTO;
@@ -275,7 +276,8 @@ public List<BaseTreeNode> options(@PathVariable String projectId) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     @RequiresPermissions(PermissionConstants.PROJECT_FILE_MANAGEMENT_READ_ADD)
     public String transfer(@Validated @RequestBody ApiTransferRequest request) {
-        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), ApiResourceType.API.name());
+        String apiDefinitionDir = DefaultRepositoryDir.getApiDefinitionDir(request.getProjectId(), request.getSourceId());
+        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), apiDefinitionDir);
     }
 
     @PostMapping("/preview")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionMockController.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.api.service.definition.ApiDefinitionMockNoticeService;
 import io.metersphere.api.service.definition.ApiDefinitionMockService;
 import io.metersphere.project.service.FileModuleService;
+import io.metersphere.sdk.constants.DefaultRepositoryDir;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.system.dto.OperationHistoryDTO;
 import io.metersphere.system.dto.request.OperationHistoryRequest;
@@ -156,7 +157,8 @@ public List<BaseTreeNode> options(@PathVariable String projectId) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     @RequiresPermissions(PermissionConstants.PROJECT_FILE_MANAGEMENT_READ_ADD)
     public String transfer(@Validated @RequestBody ApiTransferRequest request) {
-        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), ApiResourceType.API_MOCK.name());
+        String apiMockDir = DefaultRepositoryDir.getApiMockDir(request.getProjectId(), request.getSourceId());
+        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), apiMockDir);
     }
 
     @GetMapping("/get-url/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-import io.metersphere.api.constants.ApiResourceType;
 import io.metersphere.api.domain.ApiTestCase;
 import io.metersphere.api.dto.ReferenceDTO;
 import io.metersphere.api.dto.ReferenceRequest;
@@ -11,6 +10,7 @@
 import io.metersphere.api.service.ApiFileResourceService;
 import io.metersphere.api.service.definition.*;
 import io.metersphere.project.service.FileModuleService;
+import io.metersphere.sdk.constants.DefaultRepositoryDir;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.sdk.dto.api.task.TaskRequestDTO;
 import io.metersphere.system.dto.OperationHistoryDTO;
@@ -245,7 +245,8 @@ public Pager<List<OperationHistoryDTO>> operationHistoryList(@Validated @Request
     @RequiresPermissions(PermissionConstants.PROJECT_FILE_MANAGEMENT_READ_ADD)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public String transfer(@Validated @RequestBody ApiTransferRequest request) {
-        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), ApiResourceType.API_CASE.name());
+        String apiCaseDir = DefaultRepositoryDir.getApiCaseDir(request.getProjectId(), request.getSourceId());
+        return apiFileResourceService.transfer(request, SessionUtils.getUserId(), apiCaseDir);
     }
 
     @GetMapping("/transfer/options/{projectId}")

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/debug/ApiFileResourceUpdateRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.api.dto.debug;
 
-import io.metersphere.api.constants.ApiResourceType;
+import io.metersphere.sdk.constants.ApiFileResourceType;
 import lombok.Data;
 
 import java.io.Serial;
@@ -24,7 +24,7 @@ public class ApiFileResourceUpdateRequest implements Serializable {
     /**
      * 资源类型
      */
-    private ApiResourceType apiResourceType;
+    private ApiFileResourceType apiResourceType;
     /**
      * 关联的资源ID
      */

File: backend/services/api-test/src/main/java/io/metersphere/api/job/ApiScenarioScheduleJob.java
Patch:
@@ -50,6 +50,7 @@ protected void businessExecute(JobExecutionContext context) {
             apiRunModeConfigDTO.setPoolId(apiExecuteService.getProjectApiResourcePoolId(apiScenarioDetail.getProjectId()));
         }
 
+        msScenario.setResourceId(apiScenarioDetail.getId());
         // 解析生成场景树，并保存临时变量
         ApiScenarioParseTmpParam tmpParam = apiScenarioService.parse(msScenario, apiScenarioDetail.getSteps(), parseParam);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugService.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.service.debug;
 
+import io.metersphere.sdk.constants.ApiFileResourceType;
 import io.metersphere.api.constants.ApiResourceType;
 import io.metersphere.api.domain.ApiDebug;
 import io.metersphere.api.domain.ApiDebugBlob;
@@ -128,7 +129,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setProjectId(projectId);
         resourceUpdateRequest.setFolder(apiDebugDir);
         resourceUpdateRequest.setResourceId(sourceId);
-        resourceUpdateRequest.setApiResourceType(ApiResourceType.API_DEBUG);
+        resourceUpdateRequest.setApiResourceType(ApiFileResourceType.API_DEBUG);
         resourceUpdateRequest.setOperator(operator);
         resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_DEBUG_MANAGEMENT_DEBUG);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEBUG);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionMockService.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.api.service.definition;
 
-import io.metersphere.api.constants.ApiResourceType;
+import io.metersphere.sdk.constants.ApiFileResourceType;
 import io.metersphere.api.controller.result.ApiResultCode;
 import io.metersphere.api.domain.*;
 import io.metersphere.api.dto.ApiFile;
@@ -218,7 +218,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceRequest(String sou
         resourceUpdateRequest.setProjectId(projectId);
         resourceUpdateRequest.setFolder(apiDefinitionMockDir);
         resourceUpdateRequest.setResourceId(sourceId);
-        resourceUpdateRequest.setApiResourceType(ApiResourceType.API_MOCK);
+        resourceUpdateRequest.setApiResourceType(ApiFileResourceType.API_MOCK);
         resourceUpdateRequest.setOperator(operator);
         resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_MOCK);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEFINITION_MOCK);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.constants.ApiConstants;
 import io.metersphere.api.constants.ApiDefinitionDocType;
+import io.metersphere.sdk.constants.ApiFileResourceType;
 import io.metersphere.api.constants.ApiResourceType;
 import io.metersphere.api.controller.result.ApiResultCode;
 import io.metersphere.api.domain.*;
@@ -241,7 +242,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setProjectId(projectId);
         resourceUpdateRequest.setFolder(apiDefinitionDir);
         resourceUpdateRequest.setResourceId(sourceId);
-        resourceUpdateRequest.setApiResourceType(ApiResourceType.API);
+        resourceUpdateRequest.setApiResourceType(ApiFileResourceType.API);
         resourceUpdateRequest.setOperator(operator);
         resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_DEFINITION);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEFINITION);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.service.definition;
 
+import io.metersphere.sdk.constants.ApiFileResourceType;
 import io.metersphere.api.constants.ApiResourceType;
 import io.metersphere.api.domain.*;
 import io.metersphere.api.dto.*;
@@ -147,7 +148,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setProjectId(projectId);
         resourceUpdateRequest.setFolder(apiDebugDir);
         resourceUpdateRequest.setResourceId(sourceId);
-        resourceUpdateRequest.setApiResourceType(ApiResourceType.API_CASE);
+        resourceUpdateRequest.setApiResourceType(ApiFileResourceType.API_CASE);
         resourceUpdateRequest.setOperator(operator);
         resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_CASE);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_TEST_CASE);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -333,6 +333,7 @@ public void execute(TaskRequestDTO taskRequest, ApiScenarioDetail apiScenarioDet
         // 记录请求数量
         taskRequest.setRequestCount(getRequestCount(apiScenarioDetail.getSteps()));
 
+        msScenario.setResourceId(apiScenarioDetail.getId());
         ApiScenarioParseTmpParam tmpParam = apiScenarioService.parse(msScenario, apiScenarioDetail.getSteps(), parseParam);
 
         ApiResourceRunRequest runRequest = apiScenarioService.getApiResourceRunRequest(msScenario, tmpParam);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseCodeAssertionConverter.java
Patch:
@@ -37,7 +37,7 @@ private ResponseAssertion parse2ResponseAssertion(MsResponseCodeAssertion msAsse
         assertion.setToContainsType();
         assertion.setTestFieldResponseCode();
 
-        setMsAssertionInfoProperty(assertion, ResponseAssertionResult.AssertionResultType.RESPONSE_CODE.name(), assertion.getName(), condition, expectedValue);
+        setMsAssertionInfoProperty(assertion, ResponseAssertionResult.AssertionResultType.RESPONSE_CODE.name(), expectedValue, condition, expectedValue);
         return assertion;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRunRequest.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.metersphere.api.dto.debug.ApiDebugRunRequest;
 import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
 
 
@@ -12,11 +11,9 @@ public class ApiDefinitionRunRequest extends ApiDebugRunRequest {
     private String environmentId;
 
     @Schema(description = "http协议类型post/get/其它协议则是协议名(mqtt)")
-    @NotBlank
     private String method;
 
     @Schema(description = "http协议路径/其它协议则为空")
-    @NotBlank
     private String path;
 
     @Schema(description = "模块fk")

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtSystemProjectMapper.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.system.dto.ProjectResourcePoolDTO;
 import io.metersphere.system.dto.request.ProjectMemberRequest;
 import io.metersphere.system.dto.request.ProjectRequest;
+import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.user.UserExtendDTO;
 import org.apache.ibatis.annotations.Param;
 
@@ -34,4 +35,6 @@ public interface ExtSystemProjectMapper {
     List<UserExtendDTO> getMemberByProjectId(@Param("projectId") String projectId, @Param("keyword") String keyword);
 
     List<User> getProjectMemberByUserId(@Param("projectId") String projectId, @Param("userIds") List<String> userIds);
+    List<OptionDTO> getSystemProject(@Param("keyword") String keyword);
+
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportLogService.java
Patch:
@@ -37,7 +37,7 @@ public LogDTO deleteLog(String id) {
                 apiReport.getProjectId(),
                 project.getOrganizationId(),
                 apiReport.getId(),
-                apiReport.getUpdateUser(),
+                null,
                 OperationLogType.DELETE.name(),
                 OperationLogModule.API_REPORT,
                 apiReport.getName());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -57,6 +57,7 @@ public List<OptionDTO> countNotification(NotificationRequest notificationRequest
         List<OptionDTO> optionDTOS = new ArrayList<>();
         buildParam(notificationRequest, userId);
         notificationRequest.setResourceType(StringUtils.EMPTY);
+        notificationRequest.setStatus(NotificationConstants.Status.UNREAD.name());
         List<NotificationDTO> notifications = baseNotificationMapper.listNotification(notificationRequest);
         OptionDTO totalOptionDTO = new OptionDTO();
         totalOptionDTO.setId("total");

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -198,9 +198,8 @@ public void parallelExecute(ApiTestCaseBatchRunRequest request, String userId) {
 
                     // 如果是集成报告则生成唯一的虚拟ID，非集成报告使用单用例的报告ID
                     reportId = runModeConfig.isIntegratedReport() ? UUID.randomUUID().toString() : caseReportMap.get(id);
-                    Long requestCount = runModeConfig.isIntegratedReport() ? ids.size() : 1L;
                     TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, apiTestCase, runModeConfig);
-                    taskRequest.setRequestCount(requestCount);
+                    taskRequest.setRequestCount(1L);
                     execute(taskRequest, apiTestCase, apiTestCaseBlob, definitionExecuteInfoMap.get(apiTestCase.getId()));
                 } catch (Exception e) {
                     LogUtils.error("执行用例失败 {}-{}", reportId, id);

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/CaseReviewControllerTests.java
Patch:
@@ -613,6 +613,9 @@ public void testBatchMove() throws Exception {
         caseReviews = getCaseReviews("创建评审更新1");
         String moduleIdNewOne = caseReviews.get(0).getModuleId();
         Assertions.assertTrue(StringUtils.equals(moduleIdNewOne, moduleIdNew));
+        request.setMoveModuleId(null);
+        request.setSelectAll(false);
+        this.requestPost(BATCH_MOVE_CASE_REVIEW, request).andExpect(status().is5xxServerError());
     }
 
     @Test

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugTrashController.java
Patch:
@@ -37,7 +37,7 @@ public class BugTrashController {
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public Pager<List<BugDTO>> page(@Validated @RequestBody BugPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc, num asc");
         request.setUseTrash(true);
         return PageUtils.setPageInfo(page, bugService.list(request));
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseTrashController.java
Patch:
@@ -42,7 +42,7 @@ public class FunctionalCaseTrashController {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @RequestBody FunctionalCasePageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc, id asc");
         return PageUtils.setPageInfo(page, functionalCaseService.getFunctionalCasePage(request, true));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportLogService.java
Patch:
@@ -30,7 +30,7 @@ public class ApiReportLogService {
     private ApiReportMapper apiReportMapper;
 
 
-    public void deleteLog(String id) {
+    public LogDTO deleteLog(String id) {
         ApiReport apiReport = apiReportMapper.selectByPrimaryKey(id);
         Project project = projectMapper.selectByPrimaryKey(apiReport.getProjectId());
         LogDTO dto = new LogDTO(
@@ -45,7 +45,7 @@ public void deleteLog(String id) {
         dto.setPath("/api/report/case/delete/" + apiReport.getId());
         dto.setMethod(HttpMethodConstants.GET.name());
         dto.setOriginalValue(JSON.toJSONBytes(apiReport));
-        operationLogService.add(dto);
+        return dto;
     }
 
     public void updateLog(String id) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioLogService.java
Patch:
@@ -128,7 +128,7 @@ public LogDTO updateLog(ApiScenarioUpdateRequest request) {
                 null,
                 OperationLogType.UPDATE.name(),
                 OperationLogModule.API_SCENARIO_MANAGEMENT_SCENARIO,
-                apiScenario.getName());
+                request.getName());
         dto.setHistory(true);
         dto.setOriginalValue(JSON.toJSONBytes(request));
         return dto;

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugAttachmentController.java
Patch:
@@ -138,10 +138,9 @@ public String update(@Validated @RequestBody BugDeleteFileRequest request) {
         return bugAttachmentService.upgrade(request, SessionUtils.getUserId());
     }
 
-    // 富文本相关接口
     @PostMapping("/upload/md/file")
     @Operation(summary = "缺陷管理-富文本附件-上传")
-    @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.PROJECT_BUG_ADD, PermissionConstants.PROJECT_BUG_UPDATE})
+    @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.PROJECT_BUG_ADD, PermissionConstants.PROJECT_BUG_UPDATE, PermissionConstants.PROJECT_BUG_COMMENT})
     public String upload(@RequestParam("file") MultipartFile file) throws Exception {
         return bugAttachmentService.uploadMdFile(file);
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugLogService.java
Patch:
@@ -75,6 +75,7 @@ public LogDTO deleteLog(String id) {
         Bug bug = bugMapper.selectByPrimaryKey(id);
         if (bug != null) {
             LogDTO dto = new LogDTO(bug.getProjectId(), null, bug.getId(), null, OperationLogType.DELETE.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, bug.getTitle());
+            dto.setHistory(true);
             dto.setPath("/bug/delete");
             dto.setMethod(HttpMethodConstants.GET.name());
             dto.setOriginalValue(JSON.toJSONBytes(bug));
@@ -93,6 +94,7 @@ public LogDTO recoverLog(String id) {
         Bug bug = bugMapper.selectByPrimaryKey(id);
         if (bug != null) {
             LogDTO dto = new LogDTO(bug.getProjectId(), null, bug.getId(), null, OperationLogType.RECOVER.name(), OperationLogModule.BUG_MANAGEMENT_RECYCLE, bug.getTitle());
+            dto.setHistory(true);
             dto.setPath("/bug/trash/recover");
             dto.setMethod(HttpMethodConstants.GET.name());
             dto.setOriginalValue(JSON.toJSONBytes(bug));

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -56,6 +56,7 @@ public int readAll(String resourceType, String userId) {
     public List<OptionDTO> countNotification(NotificationRequest notificationRequest, String userId) {
         List<OptionDTO> optionDTOS = new ArrayList<>();
         buildParam(notificationRequest, userId);
+        notificationRequest.setResourceType(StringUtils.EMPTY);
         List<NotificationDTO> notifications = baseNotificationMapper.listNotification(notificationRequest);
         OptionDTO totalOptionDTO = new OptionDTO();
         totalOptionDTO.setId("total");

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugHistoryService.java
Patch:
@@ -64,6 +64,8 @@ public List<OperationHistoryDTO> list(OperationHistoryRequest request) {
                 dto.setType(Translator.get("update"));
             } else if (StringUtils.equals(dto.getType(), OperationLogType.DELETE.name())) {
                 dto.setType(Translator.get("delete"));
+            } else if (StringUtils.equals(dto.getType(), OperationLogType.RECOVER.name())) {
+                dto.setType(Translator.get("recover"));
             }
             dto.setLatest(latestVersionId != null && latestVersionId.longValue() == dto.getId().longValue());
             return dto;

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -875,7 +875,7 @@ public void version() throws Exception {
     public void getPage() throws Exception {
         doApiDefinitionPage("All", PAGE);
         doApiDefinitionPage("KEYWORD", PAGE);
-        doApiDefinitionPage("FILTER", PAGE);
+        //doApiDefinitionPage("FILTER", PAGE);
         doApiDefinitionPage("COMBINE", PAGE);
         doApiDefinitionPage("DELETED", PAGE);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioModuleService.java
Patch:
@@ -249,6 +249,8 @@ public Map<String, Long> moduleCount(ApiScenarioModuleRequest request, boolean d
         //查找根据moduleIds查找模块下的接口数量 查非delete状态的
         List<ModuleCountDTO> moduleCountDTOList = extApiScenarioMapper.countModuleIdByRequest(request, deleted);
         long allCount = getAllCount(moduleCountDTOList);
+        request.setKeyword(null);
+        request.setScenarioId(null);
         Map<String, Long> moduleCountMap = getModuleCountMap(request, moduleCountDTOList);
         moduleCountMap.put(DEBUG_MODULE_COUNT_ALL, allCount);
         return moduleCountMap;

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/JSON.java
Patch:
@@ -31,6 +31,7 @@ public class JSON {
 
     static {
         objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
+        objectMapper.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);
         // 支持json字符中带注释符
         objectMapper.configure(JsonParser.Feature.ALLOW_COMMENTS, true);
         // 自动检测所有类的全部属性

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiReportStepDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition;
 
+import io.metersphere.sdk.constants.ApiReportStatus;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -21,7 +22,7 @@ public class ApiReportStepDTO {
     private String stepType;
 
     @Schema(description = "结果状态")
-    private String status;
+    private String status = ApiReportStatus.PENDING.name();
 
     @Schema(description = "误报编号/误报状态独有")
     private String fakeCode;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -140,7 +140,7 @@ public void delete(String id, String userId) {
 
     private ApiReport checkResource(String id) {
         ApiReportExample example = new ApiReportExample();
-        example.createCriteria().andIdEqualTo(id).andDeletedEqualTo(false);
+        example.createCriteria().andIdEqualTo(id);
         List<ApiReport> apiReport = apiReportMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(apiReport)) {
             throw new MSException(Translator.get("api_case_report_not_exist"));

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -413,7 +413,6 @@ private void deleteFollows(List<String> caseIds) {
     public List<String> doSelectIds(ApiTestCaseBatchRequest request, boolean deleted) {
         if (request.isSelectAll()) {
             List<String> ids = extApiTestCaseMapper.getIds(request, deleted);
-            ids.addAll(request.getSelectIds());
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -404,9 +404,6 @@ private void batchUpdatePriority(ApiScenarioExample example, ApiScenario updateS
     public List<String> doSelectIds(ApiScenarioBatchRequest request, boolean deleted) {
         if (request.isSelectAll()) {
             List<String> ids = extApiScenarioMapper.getIds(request, deleted);
-            if (CollectionUtils.isNotEmpty(request.getSelectIds())) {
-                ids.addAll(request.getSelectIds());
-            }
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -35,7 +35,6 @@
 import io.metersphere.system.notice.constants.NoticeConstants;
 import io.metersphere.system.service.BaseCustomFieldOptionService;
 import io.metersphere.system.service.BaseCustomFieldService;
-import io.metersphere.system.service.UserLoginService;
 import io.metersphere.system.uid.IDGenerator;
 import io.metersphere.system.utils.ServiceUtils;
 import jakarta.annotation.Resource;
@@ -111,8 +110,6 @@ public class CaseReviewFunctionalCaseService {
     private BaseCustomFieldService baseCustomFieldService;
     @Resource
     private BaseCustomFieldOptionService baseCustomFieldOptionService;
-    @Resource
-    private UserLoginService userLoginService;
 
 
     private static final String CASE_MODULE_COUNT_ALL = "all";

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1540,7 +1540,6 @@ public List<String> getBatchIdsByRequest(BugBatchRequest request) {
                 bugPageRequest.setFilter(request.getCondition().getFilter());
             }
             List<String> ids = extBugMapper.getIdsByPageRequest(bugPageRequest);
-            ids.addAll(request.getSelectIds());
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeIf(id -> request.getExcludeIds().contains(id));
             }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectLogService.java
Patch:
@@ -31,7 +31,7 @@ public LogDTO updateLog(ProjectRequest request) {
                     project.getId(),
                     project.getCreateUser(),
                     OperationLogType.UPDATE.name(),
-                    OperationLogModule.PROJECT_MANAGEMENT,
+                    OperationLogModule.PROJECT_MANAGEMENT_PERMISSION_BASIC_INFO,
                     request.getName());
 
             dto.setOriginalValue(JSON.toJSONBytes(project));

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -93,6 +93,8 @@ public class OperationLogModule {
 
     // 项目管理
     public static final String PROJECT_MANAGEMENT = "PROJECT_MANAGEMENT";
+    //项目管理-项目与权限-基本信息
+    public static final String PROJECT_MANAGEMENT_PERMISSION_BASIC_INFO = "PROJECT_MANAGEMENT_PERMISSION_BASIC_INFO";
     // 项目管理-项目与权限
     public static final String PROJECT_MANAGEMENT_PERMISSION = "PROJECT_MANAGEMENT_PERMISSION";
     // 项目管理-项目与权限-应用设置-误报库

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -358,8 +358,6 @@ private TaskRequestDTO getTaskRequestDTO(String reportId, ApiScenarioDetail apiS
         taskRequest.setSaveResult(true);
         taskRequest.setRealTime(false);
         taskRequest.setRunModeConfig(runModeConfig);
-        runModeConfig.setEnvironmentId(getEnvId(runModeConfig, apiScenarioDetail));
-        runModeConfig.setGrouped(getEnvGroup(runModeConfig, apiScenarioDetail));
         return taskRequest;
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -176,7 +176,7 @@ private List<ReviewFunctionalCaseDTO> doHandleDTO(List<ReviewFunctionalCaseDTO>
                         item.setMyStatus(getMyStatus(histories, viewStatusUserId));
                     } else {
                         //不存在评审历史
-                        item.setMyStatus(FunctionalCaseReviewStatus.UNDER_REVIEWED.name());
+                        item.setMyStatus(FunctionalCaseReviewStatus.UN_REVIEWED.name());
                     }
                 }
             });

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/NotificationController.java
Patch:
@@ -50,7 +50,7 @@ public Integer readAll(@RequestParam(value = "resourceType", required = false) S
     @Operation(summary = "消息中心-获取未读的消息")
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public Integer getUnRead(@PathVariable(value = "projectId") String projectId) {
-        return notificationService.getUnRead(projectId);
+        return notificationService.getUnRead(projectId, SessionUtils.getUserId());
     }
 
     @PostMapping(value = "/count")

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -107,12 +107,12 @@ public void sendAnnouncement(Notification notification) {
     }
 
 
-    public Integer getUnRead(String projectId) {
+    public Integer getUnRead(String projectId, String userId) {
         NotificationExample example = new NotificationExample();
         if (StringUtils.isBlank(projectId)) {
             return 0;
         }
-        example.createCriteria().andProjectIdEqualTo(projectId).andStatusEqualTo(NotificationConstants.Status.UNREAD.name());
+        example.createCriteria().andProjectIdEqualTo(projectId).andStatusEqualTo(NotificationConstants.Status.UNREAD.name()).andReceiverEqualTo(userId);
         return (int) notificationMapper.countByExample(example);
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiReportController.java
Patch:
@@ -64,7 +64,7 @@ public void rename(@PathVariable String id,  @RequestBody Object name) {
     @Operation(summary = "接口测试-接口报告-用例报告删除")
     @CheckOwner(resourceId = "#id", resourceType = "api_report")
     @RequiresPermissions(PermissionConstants.PROJECT_API_REPORT_DELETE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.deleteLog(#id)", msClass = ApiReportLogService.class)
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#id)", msClass = ApiReportLogService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getDto(#id)", targetClass = ApiReportNoticeService.class)
     public void delete(@PathVariable String id) {
         apiReportService.delete(id, SessionUtils.getUserId());

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioReportController.java
Patch:
@@ -64,7 +64,7 @@ public void rename(@PathVariable String id, @RequestBody Object name) {
     @Operation(summary = "接口测试-接口报告-场景报告删除")
     @CheckOwner(resourceId = "#id", resourceType = "api_scenario_report")
     @RequiresPermissions(PermissionConstants.PROJECT_API_REPORT_DELETE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.deleteLog(#id)", msClass = ApiScenarioReportLogService.class)
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#id)", msClass = ApiScenarioReportLogService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getDto(#id)", targetClass = ApiScenarioReportNoticeService.class)
     public void delete(@PathVariable String id) {
         apiScenarioReportService.delete(id, SessionUtils.getUserId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseHeaderAssertionConverter.java
Patch:
@@ -9,8 +9,6 @@
 import org.apache.jmeter.assertions.ResponseAssertion;
 import org.apache.jorphan.collections.HashTree;
 
-import java.util.regex.Pattern;
-
 /**
  * @Author: jianxing
  * @CreateTime: 2023-12-27  21:01

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1453,7 +1453,8 @@ public TaskRequestDTO executeRun(ApiScenario apiScenario,
     }
 
     public boolean isRequestStep(ApiScenarioStepCommonDTO step) {
-        return StringUtils.equalsAny(step.getStepType(), ApiScenarioStepType.API.name(), ApiScenarioStepType.API_CASE.name(), ApiScenarioStepType.CUSTOM_REQUEST.name());
+        ApiScenarioStepType scenarioStepType = EnumValidator.validateEnum(ApiScenarioStepType.class, step.getStepType());
+        return scenarioStepType == null ? false : scenarioStepType.isRequest();
     }
 
     /**

File: backend/services/project-management/src/main/java/io/metersphere/project/service/CustomFunctionService.java
Patch:
@@ -174,7 +174,7 @@ public void delete(String id) {
      */
     public List<OperationHistoryDTO> list(OperationHistoryRequest request) {
         OperationHistoryExample example = new OperationHistoryExample();
-        example.createCriteria().andProjectIdEqualTo(request.getProjectId()).andModuleIn(List.of(OperationLogModule.PROJECT_CUSTOM_FUNCTION))
+        example.createCriteria().andProjectIdEqualTo(request.getProjectId()).andModuleIn(List.of(OperationLogModule.PROJECT_MANAGEMENT_COMMON_SCRIPT))
                 .andSourceIdEqualTo(request.getSourceId());
         List<OperationHistory> history = operationHistoryMapper.selectByExample(example);
         if (org.apache.commons.collections4.CollectionUtils.isEmpty(history)) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -127,7 +127,7 @@ public class OperationLogModule {
     public static final String PROJECT_MANAGEMENT_TEMPLATE_BUG_FIELD = "PROJECT_MANAGEMENT_TEMPLATE_API_FIELD";
     public static final String PROJECT_MANAGEMENT_TEMPLATE_TEST_PLAN_FIELD = "PROJECT_MANAGEMENT_TEMPLATE_API_FIELD";
 
-    public static final String PROJECT_CUSTOM_FUNCTION = "PROJECT_CUSTOM_FUNCTION";// 项目公共脚本
+    public static final String PROJECT_MANAGEMENT_COMMON_SCRIPT = "PROJECT_MANAGEMENT_COMMON_SCRIPT";// 项目公共脚本
 
     //用例
     public static final String FUNCTIONAL_CASE = "CASE_MANAGEMENT_CASE";

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/mockserver/KeyValueInfo.java
Patch:
@@ -55,7 +55,7 @@ public boolean matchValue(String value) {
             }
         } else if (StringUtils.equals(this.condition, ParamConditionEnums.REGULAR_MATCH.name())) {
             try {
-                return this.value.matches(Pattern.quote(value));
+                return this.value.matches(value);
             } catch (Exception e) {
                 return false;
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseHeaderAssertionConverter.java
Patch:
@@ -61,8 +61,8 @@ private ResponseAssertion parse2ResponseAssertion(MsResponseHeaderAssertion.Resp
         String testString = expectedValue;
         if (StringUtils.isNotEmpty(regexTemplate)) {
             testString = regexTemplate
-                    .replace("%key", Pattern.quote(header))
-                    .replace("%value", Pattern.quote(expectedValue));
+                    .replace("%key", header)
+                    .replace("%value", expectedValue);
         }
 
         if (StringUtils.startsWith(msAssertionCondition.name(), "NOT")) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -82,7 +82,7 @@ private static String parse2BeanshellJSR233Script(MsVariableAssertion.VariableAs
                 """
                 import java.util.regex.Pattern;
                 if (variableValue != null) {
-                   result = Pattern.matches(Pattern.quote(expectation), variableValue);
+                   result = Pattern.matches(expectation, variableValue);
                 } else {
                    result = false;
                 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterAlias.java
Patch:
@@ -23,4 +23,5 @@ public class JmeterAlias {
     public static final String ARGUMENTS_PANEL = "ArgumentsPanel";
     public static final String BEAN_SHELL_ASSERTION_GUI = "BeanShellAssertionGui";
     public static final String BEAN_SHELL_SAMPLER_GUI = "BeanShellSamplerGui";
+    public static final String CRITICAL_SECTION_CONTROLLER_GUI = "CriticalSectionControllerGui";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -413,6 +413,7 @@ private void deleteFollows(List<String> caseIds) {
     public List<String> doSelectIds(ApiTestCaseBatchRequest request, boolean deleted) {
         if (request.isSelectAll()) {
             List<String> ids = extApiTestCaseMapper.getIds(request, deleted);
+            ids.addAll(request.getSelectIds());
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 ids.removeAll(request.getExcludeIds());
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiReportSendNoticeService.java
Patch:
@@ -115,6 +115,7 @@ public void sendNotice(ApiNoticeDTO noticeDTO) {
         User user = userMapper.selectByPrimaryKey(userId);
 
         Map paramMap = new HashMap<>(beanMap);
+        noticeSendService.setLanguage(user.getLanguage());
         paramMap.put(NoticeConstants.RelatedUser.OPERATOR, user != null ? user.getName() : "");
         // TODO 是否需要国际化   根据状态判断给不同的key
         String status = paramMap.containsKey("status") ? paramMap.get("status").toString() : null;
@@ -182,5 +183,4 @@ public void sendNotice(ApiNoticeDTO noticeDTO) {
 
         noticeSendService.send(project, noticeType, noticeModel);
     }
-
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/TaskCenterController.java
Patch:
@@ -131,7 +131,7 @@ public void updateOrg(@PathVariable String moduleType, @PathVariable String id,
     @CheckOwner(resourceId = "#id", resourceType = "schedule")
     public void updateProject(@PathVariable String moduleType, @PathVariable String id, @RequestBody Object cron) {
         hasPermission(PROJECT, moduleType);
-        taskCenterService.update(id, cron.toString(), SessionUtils.getUserId(), "/task/center/project/schedule/update/", OperationLogModule.PROJECT_PROJECT_MANAGER);
+        taskCenterService.update(id, cron.toString(), SessionUtils.getUserId(), "/task/center/project/schedule/update/", OperationLogModule.PROJECT_MANAGEMENT_TASK_CENTER);
     }
 
     @PostMapping("/system/schedule/batch-enable")

File: backend/services/system-setting/src/main/java/io/metersphere/system/schedule/ApiScheduleNoticeService.java
Patch:
@@ -40,6 +40,7 @@ public void sendScheduleNotice(Schedule schedule, String userId) {
             BeanMap beanMap = new BeanMap(schedule);
             Map paramMap = new HashMap<>(beanMap);
             User user = userMapper.selectByPrimaryKey(userId);
+            noticeSendService.setLanguage(user.getLanguage());
             paramMap.put(NoticeConstants.RelatedUser.OPERATOR, user != null ? user.getName() : "");
             String template = defaultTemplateMap.get(NoticeConstants.TaskType.SCHEDULE_TASK + "_" + event);
             Map<String, String> defaultSubjectMap = MessageTemplateUtils.getDefaultTemplateSubjectMap();

File: backend/framework/domain/src/main/java/io/metersphere/bug/domain/Bug.java
Patch:
@@ -24,7 +24,7 @@ public class Bug implements Serializable {
 
     @Schema(description = "缺陷标题", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{bug.title.not_blank}", groups = {Created.class})
-    @Size(min = 1, max = 300, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 255, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
     private String title;
 
     @Schema(description = "处理人集合;预留字段, 后续工作台统计可能需要")

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugEditRequest.java
Patch:
@@ -24,7 +24,7 @@ public class BugEditRequest implements Serializable {
     private String id;
 
     @Schema(description = "缺陷标题")
-    @Size(min = 1, max = 300, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 255, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
     private String title;
 
     @Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugDetailDTO.java
Patch:
@@ -21,7 +21,7 @@ public class BugDetailDTO {
     private Integer num;
 
     @Schema(description = "缺陷标题")
-    @Size(min = 1, max = 300, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 255, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
     private String title;
 
     @Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -820,6 +820,7 @@ public void batchCopyFunctionalCase(FunctionalCaseBatchMoveRequest request, Stri
                     functional.setPos(nextOrder.get());
                     functional.setLastExecuteResult(FunctionalCaseExecuteResult.UN_EXECUTED.name());
                     functional.setCreateUser(userId);
+                    functional.setUpdateUser(userId);
                     functional.setCreateTime(System.currentTimeMillis());
                     functional.setUpdateTime(System.currentTimeMillis());
                     functionalCaseMapper.insert(functional);

File: backend/services/project-management/src/main/java/io/metersphere/project/mapper/ExtProjectMapper.java
Patch:
@@ -28,5 +28,8 @@ public interface ExtProjectMapper {
     List<Project> getAllProject(@Param("organizationId") String organizationId);
     List<TestResourcePool> getResourcePoolOption(@Param("projectId") String projectId, @Param("type") String type);
 
+    List<Project> getAllProjectWidthModule(@Param("organizationId") String organizationId, @Param("module") String module);
+
+    List<Project> getUserProjectWidthModule(@Param("organizationId") String organizationId, @Param("userId") String userId, @Param("module") String module);
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseRelationshipController.java
Patch:
@@ -66,7 +66,7 @@ public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @Requ
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void add(@Validated @RequestBody RelationshipAddRequest request) {
         List<String> excludeIds = functionalCaseRelationshipEdgeService.getExcludeIds(request.getId());
-        request.setExcludeIds(excludeIds);
+        request.getExcludeIds().addAll(excludeIds);
         List<String> ids = functionalCaseService.doSelectIds(request, request.getProjectId());
         if (CollectionUtils.isNotEmpty(ids)) {
             functionalCaseRelationshipEdgeService.add(request, ids, SessionUtils.getUserId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -549,12 +549,13 @@ public void syncPlatformBugs(List<Bug> remainBugs, Project project, String curre
             // 分页同步
             SubListUtils.dealForSubList(remainBugs, 100, (subBugs) -> doSyncPlatformBugs(subBugs, project));
         } catch (Exception e) {
-            LogUtils.error(e);
+            LogUtils.error("Synchronization bugs exception occurred :" + e.getMessage());
             // 异常或正常结束都得删除当前项目执行同步的Key
             bugSyncExtraService.deleteSyncKey(project.getId());
             // 同步缺陷异常, 当前同步错误信息 -> Redis(check接口获取)
             bugSyncExtraService.setSyncErrorMsg(project.getId(), e.getMessage());
         } finally {
+            LogUtils.info("Synchronization bugs end......");
             // 异常或正常结束都得删除当前项目执行同步的Key
             bugSyncExtraService.deleteSyncKey(project.getId());
             // 发送同步通知

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncService.java
Patch:
@@ -13,7 +13,6 @@
 import io.metersphere.sdk.constants.TemplateScene;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.util.CommonBeanFactory;
-import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.Template;
 import io.metersphere.system.domain.TemplateExample;
@@ -162,7 +161,6 @@ public void syncPlatformAllBugBySchedule(String projectId, String scheduleUser)
                 }
             }
         } catch (Exception e) {
-            LogUtils.error(e);
             // 异常或正常结束都得删除当前项目执行同步的唯一Key
             bugSyncExtraService.deleteSyncKey(projectId);
             // 同步缺陷异常, 当前同步错误信息 -> Redis(check接口获取)

File: backend/services/system-setting/src/main/java/io/metersphere/system/schedule/BaseScheduleJob.java
Patch:
@@ -20,7 +20,6 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.expression = jobDataMap.getString("expression");
 
         LogUtils.info(jobKey.getGroup() + " Running: " + resourceId);
-        LogUtils.info("CronExpression: " + expression);
         businessExecute(context);
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserLocalConfigService.java
Patch:
@@ -92,7 +92,7 @@ public void disable(String id) {
     public void update(UserLocalConfigUpdateRequest request) {
         UserLocalConfig userLocalConfig = checkResourceById(request.getId());
         userLocalConfig.setUserUrl(request.getUserUrl());
-        userLocalConfigMapper.updateByPrimaryKeySelective(userLocalConfig);
+        userLocalConfigMapper.updateByPrimaryKey(userLocalConfig);
         LogDTO dto = LogDTOBuilder.builder()
                 .projectId(OperationLogConstants.SYSTEM)
                 .organizationId(OperationLogConstants.SYSTEM)

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -214,7 +214,7 @@ public String scheduleConfig(@Validated @RequestBody ApiScenarioScheduleConfigRe
     @GetMapping(value = "/schedule-config-delete/{scenarioId}")
     @Operation(summary = "接口测试-接口场景管理-删除定时任务配置")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#request.getScenarioId())", msClass = ApiScenarioLogService.class)
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#scenarioId)", msClass = ApiScenarioLogService.class)
     @CheckOwner(resourceId = "#scenarioId", resourceType = "api_scenario")
     public void deleteScheduleConfig(@PathVariable String scenarioId) {
         apiValidateService.validateApiMenuInProject(scenarioId, ApiResource.API_SCENARIO.name());

File: backend/services/system-setting/src/main/java/io/metersphere/system/schedule/ScheduleService.java
Patch:
@@ -118,7 +118,9 @@ public String scheduleConfig(ScheduleConfig scheduleConfig, JobKey jobKey, Trigg
         ScheduleExample example = new ScheduleExample();
         example.createCriteria().andResourceIdEqualTo(scheduleConfig.getResourceId()).andJobEqualTo(clazz.getName());
         List<Schedule> scheduleList = scheduleMapper.selectByExample(example);
+        boolean needSendNotice = false;
         if (CollectionUtils.isNotEmpty(scheduleList)) {
+            needSendNotice = !scheduleList.getFirst().getEnable().equals(scheduleConfig.getEnable());
             schedule = scheduleConfig.genCronSchedule(scheduleList.getFirst());
             schedule.setUpdateTime(System.currentTimeMillis());
             schedule.setJob(clazz.getName());
@@ -134,7 +136,7 @@ public String scheduleConfig(ScheduleConfig scheduleConfig, JobKey jobKey, Trigg
         }
         //通知
         if ((CollectionUtils.isEmpty(scheduleList) && BooleanUtils.isTrue(scheduleConfig.getEnable()))
-                || (CollectionUtils.isNotEmpty(scheduleList) && !scheduleList.getFirst().getEnable().equals(scheduleConfig.getEnable()))) {
+                || needSendNotice) {
             apiScheduleNoticeService.sendScheduleNotice(schedule, operator);
         }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/request/FunctionalCaseImportRequest.java
Patch:
@@ -27,4 +27,7 @@ public class FunctionalCaseImportRequest implements Serializable {
     @Schema(description = "是否覆盖原用例", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{functional_case.cover.not_blank}")
     private boolean cover;
+
+    @Schema(description = "导入数量")
+    private String count;
 }

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseControllerTests.java
Patch:
@@ -675,6 +675,7 @@ public void testImportExcel() throws Exception {
         FunctionalCaseImportRequest request = new FunctionalCaseImportRequest();
         request.setCover(true);
         request.setProjectId("100001100001");
+        request.setCount("1");
         LinkedMultiValueMap<String, Object> paramMap = new LinkedMultiValueMap<>();
         paramMap.add("request", JSON.toJSONString(request));
         paramMap.add("file", file);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectUserRoleController.java
Patch:
@@ -131,7 +131,6 @@ public Pager<List<User>> listMember(@Validated @RequestBody ProjectUserRoleMembe
     @Operation(summary = "项目管理-项目与权限-用户组-添加用户组成员")
     @RequiresPermissions(PermissionConstants.PROJECT_GROUP_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.editMemberLog(#request)", msClass = ProjectUserRoleLogService.class)
-    @CheckProjectOwner(resourceId = "#request.getUserRoleId()", resourceType = "user_role", resourceCol = "scope_id")
     public void addMember(@Validated @RequestBody ProjectUserRoleMemberEditRequest request) {
         projectUserRoleService.addMember(request, SessionUtils.getUserId());
     }
@@ -140,7 +139,6 @@ public void addMember(@Validated @RequestBody ProjectUserRoleMemberEditRequest r
     @Operation(summary = "项目管理-项目与权限-用户组-删除用户组成员")
     @RequiresPermissions(PermissionConstants.PROJECT_GROUP_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.editMemberLog(#request)", msClass = ProjectUserRoleLogService.class)
-    @CheckProjectOwner(resourceId = "#request.getUserRoleId()", resourceType = "user_role", resourceCol = "scope_id")
     public void removeMember(@Validated @RequestBody ProjectUserRoleMemberEditRequest request) {
         projectUserRoleService.removeMember(request);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationUserRoleController.java
Patch:
@@ -131,7 +131,6 @@ public Pager<List<User>> listMember(@Validated @RequestBody OrganizationUserRole
     @Operation(summary = "系统设置-组织-用户组-添加用户组成员")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_USER_ROLE_READ_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.editMemberLog(#request)", msClass = OrganizationUserRoleLogService.class)
-    @CheckOrgOwner(resourceId = "#request.getUserRoleId()", resourceType = "user_role", resourceCol = "scope_id")
     public void addMember(@Validated @RequestBody OrganizationUserRoleMemberEditRequest request) {
         organizationUserRoleService.addMember(request, SessionUtils.getUserId());
     }
@@ -140,7 +139,6 @@ public void addMember(@Validated @RequestBody OrganizationUserRoleMemberEditRequ
     @Operation(summary = "系统设置-组织-用户组-删除用户组成员")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_USER_ROLE_READ_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.editMemberLog(#request)", msClass = OrganizationUserRoleLogService.class)
-    @CheckOrgOwner(resourceId = "#request.getUserRoleId()", resourceType = "user_role", resourceCol = "scope_id")
     public void removeMember(@Validated @RequestBody OrganizationUserRoleMemberEditRequest request) {
         organizationUserRoleService.removeMember(request);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserPlatformAccountService.java
Patch:
@@ -49,6 +49,7 @@ public Map<String, Object> getAccountInfoList() {
             PluginWrapper pluginWrapper = pluginLoadService.getPluginWrapper(plugin.getId());
             MsPlugin msPlugin = (MsPlugin) pluginWrapper.getPlugin();
             ((Map) accountInfo).put("pluginName", msPlugin.getName());
+            ((Map) accountInfo).put("pluginLogo", ((AbstractPlatformPlugin) msPlugin).getLogo());
             accountInfoMap.put(plugin.getId(), accountInfo);
         });
         return accountInfoMap;

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioReportMapper.java
Patch:
@@ -52,7 +52,7 @@ List<ReportDTO> getReports(@Param("request") TaskCenterBatchRequest request, @Pa
 
     void updateApiScenario(List<String> ids);
 
-    List<ApiScenarioReportStepDTO> selectStepDeatilByReportId(String id);
+    List<ApiScenarioReportStepDTO> selectStepDetailByReportId(String id);
 
     List<ApiReportMessageDTO> getNoticeList(@Param("ids") List<String> ids);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -190,7 +190,7 @@ public ApiScenarioReportDTO get(String id) {
         //需要查询出所有的步骤
         List<ApiScenarioReportStepDTO> scenarioReportSteps = extApiScenarioReportMapper.selectStepByReportId(id);
         //查询所有步骤的detail
-        List<ApiScenarioReportStepDTO> deatilList = extApiScenarioReportMapper.selectStepDeatilByReportId(id);
+        List<ApiScenarioReportStepDTO> deatilList = extApiScenarioReportMapper.selectStepDetailByReportId(id);
         //根据stepId进行分组
         Map<String, List<ApiScenarioReportStepDTO>> detailMap = deatilList.stream().collect(Collectors.groupingBy(ApiScenarioReportStepDTO::getStepId));
         //只处理请求的

File: backend/services/system-setting/src/main/java/io/metersphere/system/schedule/ScheduleService.java
Patch:
@@ -16,7 +16,6 @@
 import org.quartz.TriggerKey;
 import org.springframework.transaction.annotation.Transactional;
 
-import java.util.ArrayList;
 import java.util.List;
 
 @Transactional(rollbackFor = Exception.class)
@@ -140,7 +139,7 @@ public String scheduleConfig(ScheduleConfig scheduleConfig, JobKey jobKey, Trigg
         }
 
 
-        JobDataMap jobDataMap = scheduleManager.getDefaultJobDataMap(schedule, scheduleConfig.getCron(), operator);
+        JobDataMap jobDataMap = scheduleManager.getDefaultJobDataMap(schedule, scheduleConfig.getCron(), schedule.getCreateUser());
 
         /*
         scheduleManager.modifyCronJobTime方法如同它的方法名所说，只能修改定时任务的触发时间。

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -109,6 +109,9 @@ public void sendAnnouncement(Notification notification) {
 
     public Integer getUnRead(String projectId) {
         NotificationExample example = new NotificationExample();
+        if (StringUtils.isBlank(projectId)) {
+            return 0;
+        }
         example.createCriteria().andProjectIdEqualTo(projectId).andStatusEqualTo(NotificationConstants.Status.UNREAD.name());
         return (int) notificationMapper.countByExample(example);
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -1138,6 +1138,7 @@ private void parseInsertDataToModule(FunctionalCaseExcelData functionalCaseExcel
         functionalCase.setLastExecuteResult(FunctionalCaseExecuteResult.UN_EXECUTED.name());
         functionalCase.setLatest(true);
         functionalCase.setCreateUser(userId);
+        functionalCase.setUpdateUser(userId);
         functionalCase.setCreateTime(System.currentTimeMillis());
         functionalCase.setUpdateTime(System.currentTimeMillis());
         caseMapper.insertSelective(functionalCase);

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectMemberControllerTests.java
Patch:
@@ -227,7 +227,7 @@ public void testAddMemberRoleError() throws Exception {
     public void testBatchRemoveMemberSuccess() throws Exception {
         ProjectMemberBatchDeleteRequest request = new ProjectMemberBatchDeleteRequest();
         request.setProjectId("default-project-member-test");
-        request.setUserIds(List.of("default-project-member-user-1", "default-project-member-user-2"));
+        request.setSelectIds(List.of("default-project-member-user-1", "default-project-member-user-2"));
         this.requestPost(BATCH_REMOVE_MEMBER, request, status().isOk());
         // 权限校验
         request.setProjectId(DEFAULT_PROJECT_ID);
@@ -239,7 +239,7 @@ public void testBatchRemoveMemberSuccess() throws Exception {
     public void testBatchRemoveMember() throws Exception {
         ProjectMemberBatchDeleteRequest request = new ProjectMemberBatchDeleteRequest();
         request.setProjectId("default-project-member-x");
-        request.setUserIds(List.of("default-project-member-user-1", "default-project-member-user-2"));
+        request.setSelectIds(List.of("default-project-member-user-1", "default-project-member-user-2"));
         this.requestPost(BATCH_REMOVE_MEMBER, request, status().is5xxServerError());
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -2798,7 +2798,7 @@ public void updatePos(String id, long pos) {
     public void refreshPos(String projectId) {
         List<String> posIds = extApiScenarioMapper.selectIdByProjectIdOrderByPos(projectId);
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
-        ExtApiTestCaseMapper batchUpdateMapper = sqlSession.getMapper(ExtApiTestCaseMapper.class);
+        ExtApiScenarioMapper batchUpdateMapper = sqlSession.getMapper(ExtApiScenarioMapper.class);
         for (int i = 0; i < posIds.size(); i++) {
             batchUpdateMapper.updatePos(posIds.get(i), i * DEFAULT_NODE_INTERVAL_POS);
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -81,7 +81,7 @@ private static String parse2BeanshellJSR233Script(MsVariableAssertion.VariableAs
         handleMap.put(MsAssertionCondition.REGEX.name(),
                 """
                 import java.util.regex.Pattern;
-                result = Pattern.matches(expectation, variableValue);
+                result = Pattern.matches(Pattern.quote(expectation), variableValue);
                 msg = variableValue + " not matching " + expectation;
                 """);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMemberValidator.java
Patch:
@@ -33,7 +33,7 @@ public CustomFieldMemberValidator() {
                 );
         userNameMap = new HashMap<>();
         memberOption.stream()
-                .forEach(user -> userNameMap.put(user.getName().toLowerCase(), user.getId()));
+                .forEach(user -> userNameMap.put(user.getEmail().toLowerCase(), user.getId()));
     }
 
     @Override

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AbstractNoticeSender.java
Patch:
@@ -172,7 +172,7 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
         LogUtils.info("userIds: ", JSON.toJSONString(userIds));
         List<User> users = getUsers(userIds, messageDetail.getProjectId());
         List<String> realUserIds = users.stream().map(User::getId).distinct().toList();
-        return toUsers.stream().filter(t -> realUserIds.contains(t.getUserId())).toList();
+        return toUsers.stream().filter(t -> realUserIds.contains(t.getUserId())).distinct().toList();
     }
 
     private Receiver handleCreateUser(MessageDetail messageDetail, NoticeModel noticeModel) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseNoticeService.java
Patch:
@@ -154,8 +154,8 @@ public FunctionalCaseDTO getMainFunctionalCaseDTO(FunctionalCaseEditRequest requ
                 if (customField == null) {
                     continue;
                 }
-                optionDTO.setId(customField.getId());
-                optionDTO.setName(customField.getName());
+                optionDTO.setId(customField.getName());
+                optionDTO.setName(customFieldDTO.getValue());
                 fields.add(optionDTO);
             }
         }
@@ -195,7 +195,7 @@ public FunctionalCaseDTO getDeleteFunctionalCaseDTO(String id) {
     }
     public Map<String, FunctionalCase> copyBaseCaseInfo(String projectId, List<String> ids) {
         FunctionalCaseExample example = new FunctionalCaseExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andDeletedEqualTo(false).andIdIn(ids);
+        example.createCriteria().andProjectIdEqualTo(projectId).andIdIn(ids);
         List<FunctionalCase> functionalCaseLists = functionalCaseMapper.selectByExample(example);
         return functionalCaseLists.stream().collect(Collectors.toMap(FunctionalCase::getId, functionalCase -> functionalCase));
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AbstractNoticeSender.java
Patch:
@@ -168,10 +168,10 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
         }
 
         // 去重复
-        List<String> userIds = toUsers.stream().map(Receiver::getUserId).distinct().toList();
+        List<String> userIds = toUsers.stream().map(Receiver::getUserId).toList();
         LogUtils.info("userIds: ", JSON.toJSONString(userIds));
         List<User> users = getUsers(userIds, messageDetail.getProjectId());
-        List<String> realUserIds = users.stream().map(User::getId).toList();
+        List<String> realUserIds = users.stream().map(User::getId).distinct().toList();
         return toUsers.stream().filter(t -> realUserIds.contains(t.getUserId())).toList();
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/utils/MessageTemplateUtils.java
Patch:
@@ -188,7 +188,8 @@ public static String getContent(String template, Map<String, Object> context) {
         // 处理人相关的数据
         handleUser(context);
         StringSubstitutor sub = new StringSubstitutor(context);
-        return sub.replace(template);
+        String replace = sub.replace(template);
+        return replace;
     }
 
     public static void handleTime(Map<String, Object> context) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -95,6 +95,8 @@ public class OperationLogModule {
     public static final String PROJECT_MANAGEMENT = "PROJECT_MANAGEMENT";
     // 项目管理-项目与权限
     public static final String PROJECT_MANAGEMENT_PERMISSION = "PROJECT_MANAGEMENT_PERMISSION";
+    // 项目管理-项目与权限-应用设置-误报库
+    public static final String PROJECT_MANAGEMENT_PERMISSION_MENU_MANAGEMENT_FAKE_ERROR = "PROJECT_MANAGEMENT_PERMISSION_MENU_MANAGEMENT_FAKE";
     // 项目管理-项目与权限-成员
     public static final String PROJECT_MANAGEMENT_PERMISSION_MEMBER = "PROJECT_MANAGEMENT_PERMISSION_MEMBER";
     // 项目管理-项目与权限-用户组

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -353,7 +353,7 @@ public void batchDownload(FileBatchProcessRequest request, HttpServletResponse h
 
     public void batchDownloadWithResponse(List<FileMetadata> fileMetadataList, HttpServletResponse response) {
         Map<String, File> fileMap = new HashMap<>();
-        fileMetadataList.forEach(fileMetadata -> fileMap.put(FileMetadataUtils.getFileName(fileMetadata), this.getTmpFile(fileMetadata)));
+        fileMetadataList.forEach(fileMetadata -> fileMap.put(FileMetadataUtils.getFileNameWithId(fileMetadata), this.getTmpFile(fileMetadata)));
         FileDownloadUtils.zipFilesWithResponse(fileMap, response);
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugRelateCaseMapper.java
Patch:
@@ -21,10 +21,9 @@ public interface ExtBugRelateCaseMapper {
     /**
      * 获取缺陷关联的用例模块树
      * @param request 请求参数
-     * @param deleted 是否删除状态
      * @return 模块树集合
      */
-    List<BaseTreeNode> getRelateCaseModule(@Param("request") AssociateCaseModuleRequest request, @Param("deleted") boolean deleted);
+    List<BaseTreeNode> getRelateCaseModule(@Param("request") AssociateCaseModuleRequest request);
 
     /**
      * 获取缺陷关联的用例模块树数量

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugRelateCaseCommonService.java
Patch:
@@ -68,7 +68,7 @@ public class BugRelateCaseCommonService extends ModuleTreeService {
      */
     public List<BaseTreeNode> getRelateCaseTree(AssociateCaseModuleRequest request) {
         // 目前只保留功能用例的左侧模块树方法调用, 后续其他用例根据RelateCaseType扩展
-        List<BaseTreeNode> relateCaseModules = extBugRelateCaseMapper.getRelateCaseModule(request, false);
+        List<BaseTreeNode> relateCaseModules = extBugRelateCaseMapper.getRelateCaseModule(request);
         // 构建模块树层级数量为通用逻辑
         return super.buildTreeAndCountResource(relateCaseModules, true, Translator.get("api_unplanned_request"));
     }
@@ -85,7 +85,7 @@ public Map<String, Long> countTree(TestCasePageProviderRequest request) {
         List<ModuleCountDTO> moduleCounts = extBugRelateCaseMapper.countRelateCaseModuleTree(request, false);
         AssociateCaseModuleRequest moduleRequest = new AssociateCaseModuleRequest();
         BeanUtils.copyBean(moduleRequest, request);
-        List<BaseTreeNode> relateCaseModules = extBugRelateCaseMapper.getRelateCaseModule(moduleRequest, false);
+        List<BaseTreeNode> relateCaseModules = extBugRelateCaseMapper.getRelateCaseModule(moduleRequest);
         List<BaseTreeNode> relateCaseModuleWithCount = buildTreeAndCountResource(relateCaseModules, moduleCounts, true, Translator.get("api_unplanned_request"));
         Map<String, Long> moduleCountMap = getIdCountMapByBreadth(relateCaseModuleWithCount);
         long total = getAllCount(moduleCounts);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -354,7 +354,7 @@ private void doHandleStatusAndHistory(FunctionalCaseBlob blob, String userId) {
                 provider.updateCaseReview(param);
 
             });
-            caseReviewHistoryMapper.batchInsertSelective(historyList);
+            caseReviewHistoryMapper.batchInsert(historyList);
         }
     }
 
@@ -367,6 +367,7 @@ private void insertHistory(CaseReviewFunctionalCase item, List<CaseReviewHistory
         caseReviewHistory.setCreateUser(UserRoleScope.SYSTEM);
         caseReviewHistory.setCreateTime(System.currentTimeMillis());
         caseReviewHistory.setDeleted(false);
+        caseReviewHistory.setAbandoned(false);
         historyList.add(caseReviewHistory);
     }
 
@@ -842,7 +843,7 @@ public void batchHandleStatusAndHistory(List<String> caseIds, String userId) {
         sqlSession.flushStatements();
         SqlSessionUtils.closeSqlSession(sqlSession, sqlSessionFactory);
         extCaseReviewHistoryMapper.batchUpdateAbandoned(null, caseIds);
-        caseReviewHistoryMapper.batchInsertSelective(historyList);
+        caseReviewHistoryMapper.batchInsert(historyList);
     }
 
     public List<CaseReviewFunctionalCaseUser> getReviewerList(String reviewId, String caseId) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/job/CleanHistoryJob.java
Patch:
@@ -36,7 +36,7 @@ public class CleanHistoryJob {
     /**
      * 清理变更历史 每天凌晨两点执行
      */
-    @QuartzScheduled(cron = "0 34 13 * * ?")
+    @QuartzScheduled(cron = "0 0 2 * * ?")
     public void cleanupLog() {
         LogUtils.info("clean up history start.");
         SystemParameter parameter = systemParameterMapper.selectByPrimaryKey(ParamConstants.CleanConfig.OPERATION_HISTORY.getValue());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/body/DocumentAssertionConverter.java
Patch:
@@ -31,7 +31,6 @@ public void parse(HashTree hashTree, MsDocumentAssertion msAssertion, ParameterC
         if (msAssertion == null) {
             return;
         }
-        // todo 定义好 jsonschema 再补充
         if (needParse(msAssertion, config)) {
             String documentType = msAssertion.getDocumentType();
             if (StringUtils.equals(documentType, MsDocumentAssertion.DocumentType.XML.name())) {

File: backend/framework/provider/src/main/java/io/metersphere/dto/TestCaseProviderDTO.java
Patch:
@@ -46,4 +46,7 @@ public class TestCaseProviderDTO {
     @Schema(description = "版本名称")
     private String versionName;
 
+    @Schema(description = "自定义字段集合")
+    private List<BaseCaseCustomFieldDTO> customFields;
+
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TestResourcePoolService.java
Patch:
@@ -240,7 +240,7 @@ public LogDTO updateLog(TestResourcePoolRequest request) {
                     OperationLogConstants.SYSTEM,
                     OperationLogConstants.SYSTEM,
                     pool.getId(),
-                    pool.getCreateUser(),
+                    null,
                     OperationLogType.UPDATE.name(),
                     OperationLogModule.SETTING_SYSTEM_RESOURCE_POOL,
                     request.getName());

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -58,7 +58,7 @@ public class ApiScenarioController {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<ApiScenarioDTO>> getPage(@Validated @RequestBody ApiScenarioPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
+                StringUtils.isNotBlank(request.getSortString("id")) ? request.getSortString("id") : "pos desc, id desc");
         return PageUtils.setPageInfo(page, apiScenarioService.getScenarioPage(request));
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/TestResourcePoolController.java
Patch:
@@ -36,7 +36,7 @@ public class TestResourcePoolController {
     @CacheNode // 把监控节点缓存起来
     @Operation(summary = "系统设置-系统-资源池-更新资源池")
     @RequiresPermissions(PermissionConstants.SYSTEM_TEST_RESOURCE_POOL_READ_UPDATE)
-    @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#request.getId())", msClass = TestResourcePoolService.class)
+    @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#request)", msClass = TestResourcePoolService.class)
     public void updateTestResourcePool(@Validated({Updated.class}) @RequestBody TestResourcePoolRequest request) {
         TestResourcePoolDTO testResourcePool = new TestResourcePoolDTO();
         BeanUtils.copyBean(testResourcePool, request);

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -75,7 +75,7 @@ public TemplateDTO getDefaultTemplateField(@PathVariable String projectId) {
     @PostMapping("/add")
     @Operation(summary = "用例管理-功能用例-新增用例")
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_ADD)
-    @SendNotice(taskType = NoticeConstants.TaskType.FUNCTIONAL_CASE_TASK, event = NoticeConstants.Event.CREATE, target = "#targetClass.getMainFunctionalCaseDTO(#request.name, #request.caseEditType, #request.projectId, #request.customFields)", targetClass = FunctionalCaseNoticeService.class)
+    @SendNotice(taskType = NoticeConstants.TaskType.FUNCTIONAL_CASE_TASK, event = NoticeConstants.Event.CREATE, target = "#targetClass.getAddMainFunctionalCaseDTO(#request,  #request.customFields)", targetClass = FunctionalCaseNoticeService.class)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public FunctionalCase addFunctionalCase(@Validated @RequestPart("request") FunctionalCaseAddRequest request, @RequestPart(value = "files", required = false) List<MultipartFile> files) {
         String userId = SessionUtils.getUserId();

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -104,7 +104,7 @@ public List<OptionDTO> getUserRoleList(@PathVariable(value = "organizationId") S
 
     @GetMapping("/not-exist/user/list/{organizationId}")
     @Operation(summary = "系统设置-组织-成员-获取不在当前组织的所有用户")
-    @RequiresPermissions(PermissionConstants.SYSTEM_USER_ROLE_READ)
+    @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_ADD)
     public List<OptionDisabledDTO> getUserList(@PathVariable(value = "organizationId") String organizationId, @Schema(description = "查询关键字，根据用户名查询", requiredMode = Schema.RequiredMode.REQUIRED)
     @RequestParam(value = "keyword", required = false) String keyword) {
         return organizationService.getUserList(organizationId, keyword);

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileAssociationService.java
Patch:
@@ -70,7 +70,7 @@ public List<FileAssociationResponse> selectFileAllVersionAssociation(String id)
         //组装返回参数
         List<FileAssociationResponse> responseList = new ArrayList<>();
         associationList.forEach(item -> {
-            if(fileIdMap.containsKey(item.getFileId())){
+            if (fileIdMap.containsKey(item.getFileId()) && sourceIdNameMap.containsKey(item.getSourceId())) {
                 FileAssociationResponse response = new FileAssociationResponse();
                 response.setId(item.getId());
                 response.setSourceId(item.getSourceId());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -138,7 +138,7 @@ public void delete(String id, String userId) {
 
     private ApiScenarioReport checkResource(String id) {
         ApiScenarioReportExample example = new ApiScenarioReportExample();
-        example.createCriteria().andIdEqualTo(id).andDeletedEqualTo(false);
+        example.createCriteria().andIdEqualTo(id);
         List<ApiScenarioReport> scenarioReport = apiScenarioReportMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(scenarioReport)) {
             throw new RuntimeException(Translator.get("api_scenario_report_not_exist"));

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTemplateController.java
Patch:
@@ -84,7 +84,6 @@ public void delete(@PathVariable String id) {
     @Operation(summary = "设置默认模板")
     @RequiresPermissions(PermissionConstants.PROJECT_TEMPLATE_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.setDefaultTemplateLog(#id)", msClass = ProjectTemplateLogService.class)
-    @CheckProjectOwner(resourceId = "#id", resourceType = "template", resourceCol = "scope_id")
     public void setDefaultTemplate(@PathVariable String projectId, @PathVariable String id) {
         projectTemplateservice.setDefaultTemplate(projectId, id);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectUserRoleController.java
Patch:
@@ -51,7 +51,6 @@ public class ProjectUserRoleController {
     @PostMapping("/list")
     @Operation(summary = "项目管理-项目与权限-用户组-获取用户组列表")
     @RequiresPermissions(PermissionConstants.PROJECT_GROUP_READ)
-    @CheckProjectOwner(resourceId = "#request.getProjectId()", resourceType = "user_role", resourceCol = "scope_id")
     public Pager<List<ProjectUserRoleDTO>> list(@Validated @RequestBody ProjectUserRoleRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize());
         return PageUtils.setPageInfo(page, projectUserRoleService.list(request));
@@ -61,7 +60,6 @@ public Pager<List<ProjectUserRoleDTO>> list(@Validated @RequestBody ProjectUserR
     @Operation(summary = "项目管理-项目与权限-用户组-添加用户组")
     @RequiresPermissions(PermissionConstants.PROJECT_GROUP_ADD)
     @Log(type = OperationLogType.ADD, expression = "#msClass.addLog(#request)", msClass = ProjectUserRoleLogService.class)
-    @CheckProjectOwner(resourceId = "#request.getScopeId()", resourceType = "user_role", resourceCol = "scope_id")
     public UserRole add(@Validated({Created.class}) @RequestBody ProjectUserRoleEditRequest request) {
         UserRole userRole = new UserRole();
         userRole.setCreateUser(SessionUtils.getUserId());
@@ -94,7 +92,6 @@ public void delete(@PathVariable String id) {
     @Operation(summary = "项目管理-项目与权限-用户组-获取用户组对应的权限配置")
     @Parameter(name = "id", description = "用户组ID", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED))
     @RequiresPermissions(PermissionConstants.PROJECT_GROUP_READ)
-    @CheckProjectOwner(resourceId = "#id", resourceType = "user_role", resourceCol = "scope_id")
     public List<PermissionDefinitionItem> getPermissionSetting(@PathVariable String id) {
         return projectUserRoleService.getPermissionSetting(id);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationUserRoleController.java
Patch:
@@ -92,7 +92,6 @@ public void delete(@PathVariable String id) {
     @Operation(summary = "系统设置-组织-用户组-获取用户组对应的权限配置")
     @Parameter(name = "id", description = "用户组ID", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED))
     @RequiresPermissions(PermissionConstants.ORGANIZATION_USER_ROLE_READ)
-    @CheckOrgOwner(resourceId = "#id", resourceType = "user_role", resourceCol = "scope_id")
     public List<PermissionDefinitionItem> getPermissionSetting(@PathVariable String id) {
         return organizationUserRoleService.getPermissionSetting(id);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionScheduleController.java
Patch:
@@ -45,15 +45,15 @@ public String updateSchedule(@RequestBody @Validated({Updated.class}) ApiSchedul
     @GetMapping(value = "/switch/{id}")
     @Operation(summary = "接口测试-接口管理-定时同步-开启/关闭")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_IMPORT)
-    @CheckOwner(resourceId = "#id", resourceType = "api_definition_swagger")
+    @CheckOwner(resourceId = "#id", resourceType = "schedule")
     public void updateScheduleEnable(@PathVariable String id) {
         apiDefinitionScheduleService.switchSchedule(id);
     }
 
     @GetMapping("/delete/{id}")
     @Operation(summary = "接口测试-接口管理-定时同步-删除")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_IMPORT)
-    @CheckOwner(resourceId = "#id", resourceType = "api_definition_swagger")
+    @CheckOwner(resourceId = "#id", resourceType = "schedule")
     public void deleteSchedule(@PathVariable String id) {
         apiDefinitionScheduleService.deleteSchedule(id);
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugNoticeService.java
Patch:
@@ -69,7 +69,7 @@ public BugNoticeDTO getNoticeByRequest(BugEditRequest request) {
                         fields.add(fieldDTO);
                     }
                 });
-                notice.setCustomFields(fields);
+                notice.setFields(fields);
             }
             return notice;
         } else {
@@ -101,7 +101,7 @@ public BugNoticeDTO getNoticeById(String id) {
                 fieldDTO.setName(field.getValue());
                 fields.add(fieldDTO);
             });
-            notice.setCustomFields(fields);
+            notice.setFields(fields);
         }
         return notice;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/BugNoticeDTO.java
Patch:
@@ -14,5 +14,5 @@
 public class BugNoticeDTO extends BugMessageDTO{
 
     @Schema(description = "自定义字段内容")
-    private List<OptionDTO> customFields;
+    private List<OptionDTO> fields;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.sdk.constants.MsAssertionCondition;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.text.StringEscapeUtils;
 import org.apache.jmeter.assertions.JSR223Assertion;
 import org.apache.jorphan.collections.HashTree;
 
@@ -75,7 +76,7 @@ private static String parse2BeanshellJSR233Script(MsVariableAssertion.VariableAs
                 variableValue = vars.get("%s");
                 expectation = "%s";
                 flag = true;
-                """, variableAssertionItem.getVariableName(), variableAssertionItem.getExpectedValue());
+                """, StringEscapeUtils.escapeJava(variableAssertionItem.getVariableName()), StringEscapeUtils.escapeJava(variableAssertionItem.getExpectedValue())); // 转义一下再填充
 
         handleMap.put(MsAssertionCondition.REGEX.name(),
                 """

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/api/result/ProcessResultDTO.java
Patch:
@@ -33,7 +33,7 @@ public class ProcessResultDTO {
     private String lastScriptIdentifier;
 
     public void computerTotal() {
-        this.total = this.pendingCount + this.errorCount + this.successCount;
+        this.total = this.pendingCount + this.errorCount + this.successCount + this.fakeErrorCount;
     }
 
     public void computerFakeError(long fakeErrorCount) {

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -207,7 +207,6 @@ public void updatePriority(@PathVariable String id, @PathVariable String priorit
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#request.getScenarioId())", msClass = ApiScenarioLogService.class)
     @CheckOwner(resourceId = "#request.getScenarioId()", resourceType = "api_scenario")
-    @SendNotice(taskType = NoticeConstants.TaskType.SCHEDULE_TASK, event = NoticeConstants.Event.UPDATE, target = "#targetClass.getScheduleNotice(#request)", targetClass = ApiScenarioNoticeService.class)
     public String scheduleConfig(@Validated @RequestBody ApiScenarioScheduleConfigRequest request) {
         apiValidateService.validateApiMenuInProject(request.getScenarioId(), ApiResource.API_SCENARIO.name());
         return apiScenarioService.scheduleConfig(request, SessionUtils.getUserId());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -188,6 +188,8 @@ public class ApiScenarioService extends MoveNodeService {
     private ApiScenarioReportService apiScenarioReportService;
     @Resource
     private ApiScenarioReportMapper apiScenarioReportMapper;
+    @Resource
+    private ApiScenarioNoticeService apiScenarioNoticeService;
 
     public static final String PRIORITY = "Priority";
     public static final String STATUS = "Status";
@@ -2667,6 +2669,7 @@ public String scheduleConfig(ApiScenarioScheduleConfigRequest scheduleRequest, S
                 .resourceType(ScheduleResourceType.API_SCENARIO.name())
                 .config(JSON.toJSONString(scheduleRequest.getConfig()))
                 .build();
+        apiScenarioNoticeService.sendScheduleNotice(scheduleRequest, operator);
 
         return scheduleService.scheduleConfig(
                 scheduleConfig,

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -12,7 +12,6 @@
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.log.annotation.Log;
 import io.metersphere.system.log.constants.OperationLogType;
-import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.service.OrganizationService;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
@@ -44,7 +43,6 @@ public class OrganizationController {
     @PostMapping("/member/list")
     @Operation(summary = "系统设置-组织-成员-获取组织成员列表")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_READ)
-    @CheckOwner(resourceId = "#organizationId", resourceType = "organization")
     public Pager<List<OrgUserExtend>> getMemberList(@Validated @RequestBody OrganizationRequest organizationRequest) {
         Page<Object> page = PageHelper.startPage(organizationRequest.getCurrent(), organizationRequest.getPageSize());
         return PageUtils.setPageInfo(page, organizationService.getMemberListByOrg(organizationRequest));

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -47,7 +47,7 @@ public int readAll(String resourceType, String userId) {
         record.setStatus(NotificationConstants.Status.READ.name());
         NotificationExample example = new NotificationExample();
         if (StringUtils.isNotBlank(resourceType)) {
-            example.createCriteria().andResourceTypeEqualTo("%" + resourceType + "%");
+            example.createCriteria().andResourceTypeLike("%" + resourceType + "%");
         }
         example.createCriteria().andReceiverEqualTo(userId);
         return notificationMapper.updateByExampleSelective(record, example);

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioReportStepDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.scenario;
 
+import io.metersphere.sdk.constants.ApiReportStatus;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -27,7 +28,7 @@ public class ApiScenarioReportStepDTO {
     private String parentId;
 
     @Schema(description = "结果状态")
-    private String status;
+    private String status = ApiReportStatus.PENDING.name();
 
     @Schema(description = "误报编号/误报状态独有")
     private String fakeCode;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionNoticeService.java
Patch:
@@ -36,6 +36,8 @@ public ApiDefinitionCaseDTO getApiDTO(ApiDefinitionAddRequest request) {
 
     public ApiDefinitionCaseDTO getUpdateApiDTO(ApiDefinitionUpdateRequest request) {
         ApiDefinitionCaseDTO caseDTO = new ApiDefinitionCaseDTO();
+        ApiDefinition apiDefinition = apiDefinitionMapper.selectByPrimaryKey(request.getId());
+        BeanUtils.copyBean(caseDTO, apiDefinition);
         BeanUtils.copyBean(caseDTO, request);
         return caseDTO;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/constants/NoticeConstants.java
Patch:
@@ -534,5 +534,6 @@ interface SensitiveField {
         String platformBugId = "platformBugId";
         String handleUsers = "handleUsers";
         String groupId = "groupId";
+        String job = "job";
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.log.annotation.Log;
 import io.metersphere.system.log.constants.OperationLogType;
+import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.service.OrganizationService;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
@@ -43,6 +44,7 @@ public class OrganizationController {
     @PostMapping("/member/list")
     @Operation(summary = "系统设置-组织-成员-获取组织成员列表")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_READ)
+    @CheckOwner(resourceId = "#organizationId", resourceType = "organization")
     public Pager<List<OrgUserExtend>> getMemberList(@Validated @RequestBody OrganizationRequest organizationRequest) {
         Page<Object> page = PageHelper.startPage(organizationRequest.getCurrent(), organizationRequest.getPageSize());
         return PageUtils.setPageInfo(page, organizationService.getMemberListByOrg(organizationRequest));

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/BugSyncNoticeDTO.java
Patch:
@@ -17,4 +17,7 @@ public class BugSyncNoticeDTO {
 
     @Schema(description ="message.domain.bug_sync_total_count")
     private Integer total;
+
+    @Schema(description ="message.domain.triggerMode")
+    private String triggerMode;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/utils/MessageTemplateUtils.java
Patch:
@@ -231,7 +231,7 @@ private static void addCustomFiled(String taskType, Map<String, List<CustomField
                 if (CollectionUtils.isNotEmpty(customFields)) {
                     Map <String,String>customFielddNameMap = new HashMap<>();
                     for (CustomField customField : customFields) {
-                        customFielddNameMap.put(customField.getName(), StringUtils.isBlank(customField.getName()) ? "-" : customField.getName());
+                        customFielddNameMap.put(customField.getName(), StringUtils.isBlank(customField.getName()) ? "-" : "<"+customField.getName()+">");
                     }
                     map.putAll(customFielddNameMap);
                 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NoticeSendService.java
Patch:
@@ -62,7 +62,7 @@ private AbstractNoticeSender getDingSender(String dingType) {
     /**
      * 在线操作发送通知
      */
-    @Async
+    @Async("threadPoolTaskExecutor")
     public void send(String taskType, NoticeModel noticeModel) {
         setLanguage(noticeModel);
         try {
@@ -96,7 +96,7 @@ private static void setLanguage(NoticeModel noticeModel) {
     /**
      * jenkins 和定时任务触发的发送
      */
-    @Async
+    @Async("threadPoolTaskExecutor")
     public void sendJenkins(String triggerMode, NoticeModel noticeModel) {
         // api和定时任务调用不排除自己
         noticeModel.setExcludeSelf(false);
@@ -127,7 +127,7 @@ public void sendJenkins(String triggerMode, NoticeModel noticeModel) {
     /**
      * 后台触发的发送，没有session
      */
-    @Async
+    @Async("threadPoolTaskExecutor")
     public void send(Project project, String taskType, NoticeModel noticeModel) {
         setLanguage(noticeModel);
         try {

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NotificationService.java
Patch:
@@ -47,7 +47,7 @@ public int readAll(String resourceType, String userId) {
         record.setStatus(NotificationConstants.Status.READ.name());
         NotificationExample example = new NotificationExample();
         if (StringUtils.isNotBlank(resourceType)) {
-            example.createCriteria().andResourceTypeEqualTo(resourceType);
+            example.createCriteria().andResourceTypeEqualTo("%" + resourceType + "%");
         }
         example.createCriteria().andReceiverEqualTo(userId);
         return notificationMapper.updateByExampleSelective(record, example);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TestResourcePoolService.java
Patch:
@@ -246,7 +246,7 @@ public LogDTO updateLog(String resourcePoolId) {
                     pool.getCreateUser(),
                     OperationLogType.UPDATE.name(),
                     OperationLogModule.SETTING_SYSTEM_RESOURCE_POOL,
-                    "更新资源池配置");
+                    pool.getName());
 
             dto.setPath("/update");
             dto.setMethod(HttpMethodConstants.POST.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/ApiParamConfig.java
Patch:
@@ -43,7 +43,7 @@ public class ApiParamConfig extends ParameterConfig {
      * value 为对应的接口协议
      * 环境前后置忽略协议需要使用
      */
-    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassProtocalMap = HashMap.newHashMap(0);
+    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassProtocolMap = HashMap.newHashMap(0);
 
 
     @Override

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsCommonElementConverter.java
Patch:
@@ -116,7 +116,7 @@ private void addProcessors(HashTree tree, MsCommonElement msCommonElement, Param
             protocol = ApiConstants.HTTP_PROTOCOL;
         } else {
             if (config instanceof ApiParamConfig apiParamConfig) {
-                protocol = apiParamConfig.getTestElementClassProtocalMap().get(parent.getClass());
+                protocol = apiParamConfig.getTestElementClassProtocolMap().get(parent.getClass());
             }
         }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -521,7 +521,7 @@ public TaskRequestDTO apiExecute(ApiResourceRunRequest runRequest, TaskRequestDT
     public ApiParamConfig getApiParamConfig(String reportId) {
         ApiParamConfig paramConfig = new ApiParamConfig();
         paramConfig.setTestElementClassPluginIdMap(apiPluginService.getTestElementPluginMap());
-        paramConfig.setTestElementClassProtocalMap(apiPluginService.getTestElementProtocolMap());
+        paramConfig.setTestElementClassProtocolMap(apiPluginService.getTestElementProtocolMap());
         paramConfig.setReportId(reportId);
         return paramConfig;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1540,7 +1540,7 @@ public ApiScenarioReport getScenarioReport(String userId) {
     public ApiScenarioParamConfig getApiScenarioParamConfig(ApiScenarioParseParam request, ApiScenarioParseEnvInfo scenarioParseEnvInfo) {
         ApiScenarioParamConfig parseConfig = new ApiScenarioParamConfig();
         parseConfig.setTestElementClassPluginIdMap(apiPluginService.getTestElementPluginMap());
-        parseConfig.setTestElementClassProtocalMap(apiPluginService.getTestElementProtocolMap());
+        parseConfig.setTestElementClassProtocolMap(apiPluginService.getTestElementProtocolMap());
         parseConfig.setGrouped(request.getGrouped());
         parseConfig.setRootScenarioConfig(request.getScenarioConfig());
         if (BooleanUtils.isTrue(request.getGrouped())) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -1207,7 +1207,7 @@ public void get() throws Exception {
         Assertions.assertEquals(apiScenarioDetail.getUpdateUserName(), userMapper.selectByPrimaryKey(apiScenarioDetail.getUpdateUser()).getName());
         Assertions.assertFalse(apiScenarioDetail.getFollow());
         // 验证数据
-        asserGetApiScenarioSteps(this.addApiScenarioSteps, apiScenarioDetail.getSteps());
+        assertGetApiScenarioSteps(this.addApiScenarioSteps, apiScenarioDetail.getSteps());
 
         apiScenarioService.follow(anOtherAddApiScenario.getId(), "admin");
         mvcResult = this.requestGetWithOkAndReturn(DEFAULT_GET, anOtherAddApiScenario.getId());
@@ -1274,7 +1274,7 @@ private void requestGetStepDetail(List<? extends ApiScenarioStepCommonDTO> steps
         }
     }
 
-    private void asserGetApiScenarioSteps(List<? extends ApiScenarioStepCommonDTO> addApiScenarioSteps, List<? extends ApiScenarioStepCommonDTO> steps) {
+    private void assertGetApiScenarioSteps(List<? extends ApiScenarioStepCommonDTO> addApiScenarioSteps, List<? extends ApiScenarioStepCommonDTO> steps) {
         if (addApiScenarioSteps == null || steps == null) {
             Assertions.assertEquals(addApiScenarioSteps, null);
             Assertions.assertEquals(steps, null);
@@ -1285,7 +1285,7 @@ private void asserGetApiScenarioSteps(List<? extends ApiScenarioStepCommonDTO> a
             ApiScenarioStepRequest stepRequest = (ApiScenarioStepRequest) addApiScenarioSteps.get(i);
             ApiScenarioStepDTO stepDTO = (ApiScenarioStepDTO) steps.get(i);
             Assertions.assertEquals(BeanUtils.copyBean(new ApiScenarioStepCommonDTO(), stepRequest), BeanUtils.copyBean(new ApiScenarioStepCommonDTO(), stepDTO));
-            asserGetApiScenarioSteps(stepRequest.getChildren(), stepDTO.getChildren());
+            assertGetApiScenarioSteps(stepRequest.getChildren(), stepDTO.getChildren());
         }
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseCheckEventListener.java
Patch:
@@ -18,7 +18,7 @@
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.Translator;
-import io.metersphere.system.dto.excel.ExcelValidateHelper;
+import io.metersphere.system.dto.excel.FunctionalCaseExcelValidateHelper;
 import io.metersphere.system.dto.sdk.TemplateCustomFieldDTO;
 import io.metersphere.system.excel.domain.ExcelErrData;
 import org.apache.commons.collections.CollectionUtils;
@@ -171,7 +171,7 @@ private void buildUpdateOrErrorList(Integer rowIndex, FunctionalCaseExcelData fu
         StringBuilder errMsg;
         try {
             //根据excel数据实体中的javax.validation + 正则表达式来校验excel数据
-            errMsg = new StringBuilder(ExcelValidateHelper.validateEntity(functionalCaseExcelData));
+            errMsg = new StringBuilder(FunctionalCaseExcelValidateHelper.validateEntity(functionalCaseExcelData));
             //自定义校验规则
             if (StringUtils.isEmpty(errMsg)) {
                 //开始校验

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseImportEventListener.java
Patch:
@@ -19,7 +19,7 @@
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.Translator;
-import io.metersphere.system.dto.excel.ExcelValidateHelper;
+import io.metersphere.system.dto.excel.FunctionalCaseExcelValidateHelper;
 import io.metersphere.system.dto.sdk.BaseTreeNode;
 import io.metersphere.system.dto.sdk.SessionUser;
 import io.metersphere.system.dto.sdk.TemplateCustomFieldDTO;
@@ -220,7 +220,7 @@ private void buildUpdateOrErrorList(Integer rowIndex, FunctionalCaseExcelData fu
         StringBuilder errMsg;
         try {
             //根据excel数据实体中的javax.validation + 正则表达式来校验excel数据
-            errMsg = new StringBuilder(ExcelValidateHelper.validateEntity(functionalCaseExcelData));
+            errMsg = new StringBuilder(FunctionalCaseExcelValidateHelper.validateEntity(functionalCaseExcelData));
             //自定义校验规则
             if (StringUtils.isEmpty(errMsg)) {
                 validate(functionalCaseExcelData, errMsg);

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/excel/FunctionalCaseExcelValidateHelper.java
Patch:
@@ -12,9 +12,9 @@
 import java.util.Set;
 
 @Component
-public class ExcelValidateHelper {
+public class FunctionalCaseExcelValidateHelper {
 
-    private static ExcelValidateHelper excelValidateHelper;
+    private static FunctionalCaseExcelValidateHelper excelValidateHelper;
 
     @Resource
     Validator validator;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/excel/UserExcel.java
Patch:
@@ -14,7 +14,7 @@ public class UserExcel {
     @ExcelProperty(index = 0)
     private String name;
 
-    @NotBlank(message = "{cannot_be_null}")
+    @NotBlank(message = "{user.email.not_blank}")
     @Size(min = 1, max = 64, message = "{user.email.length_range}")
     @Email(message = "{user.email.invalid}")
     @ExcelProperty(index = 1)

File: backend/services/system-setting/src/main/java/io/metersphere/system/utils/UserImportEventListener.java
Patch:
@@ -2,13 +2,13 @@
 
 import com.alibaba.excel.context.AnalysisContext;
 import com.alibaba.excel.event.AnalysisEventListener;
-import io.metersphere.system.dto.sdk.ExcelParseDTO;
 import io.metersphere.sdk.util.BeanUtils;
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.Translator;
-import io.metersphere.system.dto.excel.ExcelValidateHelper;
 import io.metersphere.system.dto.excel.UserExcel;
 import io.metersphere.system.dto.excel.UserExcelRowDTO;
+import io.metersphere.system.dto.excel.UserExcelValidateHelper;
+import io.metersphere.system.dto.sdk.ExcelParseDTO;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 
@@ -25,7 +25,7 @@ public void invoke(UserExcel data, AnalysisContext analysisContext) {
         Integer rowIndex = analysisContext.readRowHolder().getRowIndex();
         try {
             //使用javax.validation校验excel数据
-            errMsg = ExcelValidateHelper.validateEntity(data);
+            errMsg = UserExcelValidateHelper.validateEntity(data);
             if (StringUtils.isEmpty(errMsg)) {
                 errMsg = businessValidate(data);
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/TimeWaitingProcessorConverter.java
Patch:
@@ -18,6 +18,9 @@
 public class TimeWaitingProcessorConverter extends MsProcessorConverter<TimeWaitingProcessor> {
     @Override
     public void parse(HashTree hashTree, TimeWaitingProcessor processor, ParameterConfig config) {
+        if (!needParse(processor, config)) {
+            return;
+        }
         hashTree.add(getConstantTimer(processor));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsCommonElementConverter.java
Patch:
@@ -107,8 +107,8 @@ public static boolean isIgnoreAssertStatus(List<MsAssertion> assertions) {
     private void addProcessors(HashTree tree, MsCommonElement msCommonElement, ParameterConfig config,
                                EnvironmentInfoDTO envInfo, boolean isPre) {
         MsProcessorConfig processorConfig = isPre ? msCommonElement.getPreProcessorConfig() : msCommonElement.getPostProcessorConfig();
-        if (processorConfig == null || processorConfig.getProcessors() == null) {
-            return;
+        if (processorConfig == null) {
+            processorConfig = new MsProcessorConfig();
         }
         AbstractMsTestElement parent = msCommonElement.getParent();
         String protocol = null;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1542,6 +1542,7 @@ public ApiScenarioParamConfig getApiScenarioParamConfig(ApiScenarioParseParam re
         parseConfig.setTestElementClassPluginIdMap(apiPluginService.getTestElementPluginMap());
         parseConfig.setTestElementClassProtocalMap(apiPluginService.getTestElementProtocolMap());
         parseConfig.setGrouped(request.getGrouped());
+        parseConfig.setRootScenarioConfig(request.getScenarioConfig());
         if (BooleanUtils.isTrue(request.getGrouped())) {
             // 设置环境组 map
             parseConfig.setProjectEnvMap(getProjectEnvMap(scenarioParseEnvInfo, request.getEnvironmentId()));

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -64,7 +64,8 @@ private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.Variabl
     public boolean isValid(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {
         return StringUtils.isNotBlank(variableAssertionItem.getVariableName())
                 && StringUtils.isNotBlank(variableAssertionItem.getCondition())
-                && BooleanUtils.isTrue(variableAssertionItem.getEnable());
+                && BooleanUtils.isTrue(variableAssertionItem.getEnable())
+                && !StringUtils.equals(variableAssertionItem.getCondition(), MsAssertionCondition.UNCHECK.name());
     }
 
     private static String parse2BeanshellJSR233Script(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseHeaderAssertionConverter.java
Patch:
@@ -34,7 +34,8 @@ public void parse(HashTree hashTree, MsResponseHeaderAssertion msAssertion, Para
     public boolean isHeaderAssertionValid(MsResponseHeaderAssertion.ResponseHeaderAssertionItem headerAssertionItem) {
         return StringUtils.isNotBlank(headerAssertionItem.getHeader())
                 && StringUtils.isNotBlank(headerAssertionItem.getCondition())
-                && StringUtils.isNotBlank(headerAssertionItem.getExpectedValue());
+                && StringUtils.isNotBlank(headerAssertionItem.getExpectedValue())
+                && BooleanUtils.isTrue(headerAssertionItem.getEnable());
     }
 
     private ResponseAssertion parse2ResponseAssertion(MsResponseHeaderAssertion.ResponseHeaderAssertionItem msAssertion,

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -63,7 +63,8 @@ private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.Variabl
 
     public boolean isValid(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {
         return StringUtils.isNotBlank(variableAssertionItem.getVariableName())
-                && StringUtils.isNotBlank(variableAssertionItem.getCondition());
+                && StringUtils.isNotBlank(variableAssertionItem.getCondition())
+                && BooleanUtils.isTrue(variableAssertionItem.getEnable());
     }
 
     private static String parse2BeanshellJSR233Script(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/body/MsJSONPathAssertionItem.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.system.valid.EnumValue;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 
 /**
@@ -30,7 +31,7 @@ public class MsJSONPathAssertionItem extends MsBodyAssertionItem {
     private String expectedValue;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression) && StringUtils.isNotBlank(condition);
+        return StringUtils.isNotBlank(expression) && StringUtils.isNotBlank(condition) && BooleanUtils.isTrue(this.getEnable());
     }
 }
 

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/body/MsRegexAssertionItem.java
Patch:
@@ -16,6 +16,6 @@ public class MsRegexAssertionItem extends MsBodyAssertionItem {
     private String expression;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression);
+        return StringUtils.isNotBlank(expression) && Boolean.TRUE.equals(this.getEnable());
     }
 }
\ No newline at end of file

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/body/MsXPathAssertionItem.java
Patch:
@@ -21,6 +21,6 @@ public class MsXPathAssertionItem extends MsBodyAssertionItem {
     private String expectedValue;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression);
+        return StringUtils.isNotBlank(expression) && Boolean.TRUE.equals(this.getEnable());
     }
 }
\ No newline at end of file

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -345,7 +345,7 @@ public List<ApiScenarioReportDetailDTO> getDetail(String reportId, String stepId
         apiReportDetails.forEach(apiReportDetail -> {
             ApiScenarioReportDetailDTO apiReportDetailDTO = new ApiScenarioReportDetailDTO();
             BeanUtils.copyBean(apiReportDetailDTO, apiReportDetail);
-            apiReportDetailDTO.setContent(ApiDataUtils.parseObject(new String(apiReportDetail.getContent()), RequestResult.class));
+            apiReportDetailDTO.setContent(apiReportDetail.getContent() != null ? ApiDataUtils.parseObject(new String(apiReportDetail.getContent()), RequestResult.class) : null);
             results.add(apiReportDetailDTO);
         });
         return results;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/NotificationController.java
Patch:
@@ -41,8 +41,8 @@ public Integer read(@PathVariable long id) {
 
     @GetMapping(value = "/read/all")
     @Operation(summary = "消息中心-将消息中心所有信息设置为已读消息")
-    public Integer readAll() {
-        return notificationService.readAll(SessionUtils.getUserId());
+    public Integer readAll(@RequestParam(value = "resourceType", required = false) String resourceType) {
+        return notificationService.readAll(resourceType, SessionUtils.getUserId());
     }
 
     @PostMapping(value = "/count")

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/debug/ApiResourceRunRequest.java
Patch:
@@ -4,6 +4,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
+import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -19,12 +20,12 @@ public class ApiResourceRunRequest {
      * 创建时先按ID创建目录，再把文件放入目录
      */
     @Schema(description = "新上传的文件ID")
-    private List<String> uploadFileIds;
+    private List<String> uploadFileIds = new ArrayList<>(0);
     /**
      * 新关联的文件ID
      */
     @Schema(description = "关联文件ID")
-    private List<String> linkFileIds;
+    private List<String> linkFileIds = new ArrayList<>(0);
     /**
      * 执行的资源ID列表
      * 场景执行时，为关联的所有用例和场景列表

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiFileAssociationUpdateService.java
Patch:
@@ -34,8 +34,8 @@ public void handleUpgrade(FileAssociation originFileAssociation, FileMetadata ne
                     CommonBeanFactory.getBean(ApiDefinitionService.class).handleFileAssociationUpgrade(originFileAssociation, newFileMetadata);
             case FileAssociationSourceUtil.SOURCE_TYPE_API_TEST_CASE ->
                     CommonBeanFactory.getBean(ApiTestCaseService.class).handleFileAssociationUpgrade(originFileAssociation, newFileMetadata);
-            case FileAssociationSourceUtil.SOURCE_TYPE_API_SCENARIO ->
-                    CommonBeanFactory.getBean(ApiScenarioService.class).handleFileAssociationUpgrade(originFileAssociation, newFileMetadata);
+            case FileAssociationSourceUtil.SOURCE_TYPE_API_SCENARIO_STEP ->
+                    CommonBeanFactory.getBean(ApiScenarioService.class).handleStepFileAssociationUpgrade(originFileAssociation, newFileMetadata);
             default -> {
             }
         }

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/FileAssociationSource.java
Patch:
@@ -7,4 +7,5 @@ public class FileAssociationSource {
     private String sourceId;
     private String sourceNum;
     private String sourceName;
+    private String redirectId;
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/response/FileAssociationResponse.java
Patch:
@@ -13,6 +13,9 @@ public class FileAssociationResponse {
     @Schema(description = "资源Id")
     private String sourceId;
 
+    @Schema(description = "前端跳转Id")
+    private String redirectId;
+
     @Schema(description = "资源编号")
     private String sourceNum;
 

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileAssociationService.java
Patch:
@@ -77,6 +77,7 @@ public List<FileAssociationResponse> selectFileAllVersionAssociation(String id)
                 response.setFileId(item.getFileId());
                 response.setSourceName(sourceIdNameMap.get(item.getSourceId()).getSourceName());
                 response.setSourceNum(sourceIdNameMap.get(item.getSourceId()).getSourceNum());
+                response.setRedirectId(sourceIdNameMap.get(item.getSourceId()).getRedirectId());
                 response.setSourceType(item.getSourceType());
                 response.setFileVersion(fileIdMap.get(item.getFileId()).getFileVersion());
                 responseList.add(response);

File: backend/services/api-test/src/main/java/io/metersphere/api/listener/MessageListener.java
Patch:
@@ -112,7 +112,9 @@ private boolean isStopOnFailure(ApiNoticeDTO dto, ExecutionQueue queue, ApiExecu
         if (BooleanUtils.isTrue(queue.getRunModeConfig().getStopOnFailure()) && StringUtils.equals(dto.getReportStatus(), ApiReportStatus.ERROR.name())) {
             String reportId = queue.getRunModeConfig().isIntegratedReport() ? queue.getRunModeConfig().getCollectionReport().getReportId() : dto.getReportId();
             if (resourceType.equals(ApiExecuteResourceType.API_SCENARIO)) {
-                apiScenarioBatchRunService.UpdateStopOnFailureReport(queue);
+                apiScenarioBatchRunService.updateStopOnFailureReport(queue);
+            } else {
+                apiScenarioBatchRunService.updateStopOnFailureApiReport(queue);
             }
             switch (resourceType) {
                 case API_CASE -> apiReportService.updateReportStatus(reportId, ApiReportStatus.ERROR.name());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiReportSendNoticeTests.java
Patch:
@@ -19,9 +19,11 @@
 import org.junit.jupiter.api.TestMethodOrder;
 import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
 import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.context.i18n.LocaleContextHolder;
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Locale;
 
 
 @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@@ -46,6 +48,7 @@ public class ApiReportSendNoticeTests extends BaseTest {
     @Test
     @Order(0)
     public void sendNoticeTest() throws Exception {
+        LocaleContextHolder.setLocale(new Locale("zh", "CN"));
         Environment environment = new Environment();
         environment.setId("api-environment-id");
         environment.setName("api-environment-name");

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -281,6 +281,7 @@ private FunctionalCase addCase(String caseId, FunctionalCaseAddRequest request,
         functionalCase.setLastExecuteResult(FunctionalCaseExecuteResult.UN_EXECUTED.name());
         functionalCase.setLatest(true);
         functionalCase.setCreateUser(userId);
+        functionalCase.setUpdateUser(userId);
         functionalCase.setCreateTime(System.currentTimeMillis());
         functionalCase.setUpdateTime(System.currentTimeMillis());
         functionalCase.setVersionId(StringUtils.defaultIfBlank(request.getVersionId(), extBaseProjectVersionMapper.getDefaultVersion(request.getProjectId())));

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AbstractNoticeSender.java
Patch:
@@ -133,7 +133,7 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
                         LogUtils.error("查询关注人失败：{}", e);
                     }
                 }
-                default -> toUsers.add(new Receiver(userId, NotificationConstants.Type.MENTIONED_ME.name()));
+                default -> toUsers.add(new Receiver(userId, NotificationConstants.Type.SYSTEM_NOTICE.name()));
             }
             //TODO：接口同步时通知的接收人特殊处理（v2接口同步的通知，v3这里待讨论）
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseCustomFieldService.java
Patch:
@@ -82,7 +82,7 @@ public List<CustomFieldDTO> list(String scopeId, String scene) {
                 // 成员选项添加默认的选项
                 CustomFieldOption createUserOption = new CustomFieldOption();
                 createUserOption.setFieldId(item.getId());
-                createUserOption.setText(Translator.get("message.domain.create_user"));
+                createUserOption.setText(Translator.get("message.domain.createUser"));
                 createUserOption.setValue(CREATE_USER);
                 createUserOption.setInternal(false);
                 customFieldDTO.setOptions(List.of(createUserOption));

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -308,14 +308,16 @@ private static void getStepTree(List<ApiScenarioReportStepDTO> steps, Map<String
                     //需要把这些数据拿出来 如果没有子请求说明是最后一级的请求 不需要计算入状态
                     //获取所有的子请求的状态
                     List<String> requestStatus = children.stream().map(ApiScenarioReportStepDTO::getStatus).toList();
+                    //获取为执行的状态
+                    List<String> pendingStatus = requestStatus.stream().filter(status -> StringUtils.equals(ApiReportStatus.PENDING.name(), status) || StringUtils.isBlank(status)).toList();
                     //过滤出来SUCCESS的状态
                     List<String> successStatus = requestStatus.stream().filter(status -> StringUtils.equals(ApiReportStatus.SUCCESS.name(), status)).toList();
                     //只要包含ERROR 就是ERROR
                     if (requestStatus.contains(ApiReportStatus.ERROR.name())) {
                         step.setStatus(ApiReportStatus.ERROR.name());
                     } else if (requestStatus.contains(ApiReportStatus.FAKE_ERROR.name())) {
                         step.setStatus(ApiReportStatus.FAKE_ERROR.name());
-                    } else if (successStatus.size() == children.size()) {
+                    } else if (successStatus.size() + pendingStatus.size() == children.size() && !successStatus.isEmpty()) {
                         step.setStatus(ApiReportStatus.SUCCESS.name());
                     }
                 } else if (stepTypes.contains(step.getStepType())) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/OperationHistoryDTO.java
Patch:
@@ -23,4 +23,6 @@ public class OperationHistoryDTO extends OperationHistory implements Serializabl
     // 版本
     private String versionName;
 
+    //是否是最新
+    private boolean isLatest;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/BaseOperationHistoryMapper.java
Patch:
@@ -18,4 +18,6 @@ public interface BaseOperationHistoryMapper {
     List<OperationHistoryDTO> list(@Param("request") OperationHistoryRequest request);
 
     List<OperationHistoryDTO> listWidthTable(@Param("request") OperationHistoryRequest request, @Param("table") String table);
+
+    Long selectLatestIdByOperationId(String bugId);
 }
\ No newline at end of file

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -235,6 +235,8 @@ public ApiScenarioReportDTO get(String id) {
                     step.setRequestTime(details.getFirst().getRequestTime());
                     step.setResponseSize(details.getFirst().getResponseSize());
                     step.setStatus(details.getFirst().getStatus());
+                    step.setCode(details.getFirst().getCode());
+                    step.setFakeCode(details.getFirst().getFakeCode());
                     step.setScriptIdentifier(details.getFirst().getScriptIdentifier());
                 }
             }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -456,7 +456,6 @@ private ScenarioConfig getScenarioConfig() throws Exception {
         responseCodeAssertion.setName("test");
         scenarioConfig.getAssertionConfig().getAssertions().add(responseCodeAssertion);
         ScenarioOtherConfig scenarioOtherConfig = new ScenarioOtherConfig();
-        scenarioOtherConfig.setStepWaitTime(1000L);
         scenarioOtherConfig.setFailureStrategy(ScenarioOtherConfig.FailureStrategy.CONTINUE.name());
         scenarioOtherConfig.setEnableCookieShare(true);
         scenarioConfig.setOtherConfig(scenarioOtherConfig);

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/result/ApiResultCode.java
Patch:
@@ -15,7 +15,9 @@ public enum ApiResultCode implements IResultCode {
     EXECUTE_RESOURCE_POOL_NOT_CONFIG(104006, "execute_resource_pool_not_config_error"),
     API_DEFINITION_MOCK_EXIST(104007, "api_definition_mock_exist"),
     API_SCENARIO_EXIST(104008, "api_scenario_exist"),
-    API_RESPONSE_NAME_CODE_UNIQUE(104009, "api_response_name_code_unique");
+    API_RESPONSE_NAME_CODE_UNIQUE(104009, "api_response_name_code_unique"),
+    API_SCENARIO_CIRCULAR_REFERENCE(104010, "api_scenario_circular_reference_error")
+    ;
 
 
     private final int code;

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -285,6 +285,8 @@ public void editCaseReview(CaseReviewRequest request, String userId) {
         caseReview.setModuleId(request.getModuleId());
         if (CollectionUtils.isNotEmpty(request.getTags())) {
             caseReview.setTags(request.getTags());
+        } else {
+            caseReview.setTags(new ArrayList<>());
         }
         caseReview.setDescription(request.getDescription());
         checkAndSetStartAndEndTime(request, caseReview);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseNoticeService.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.functional.request.FunctionalCaseBatchRequest;
 import io.metersphere.functional.request.FunctionalCaseCommentRequest;
 import io.metersphere.sdk.util.BeanUtils;
+import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.CustomField;
 import io.metersphere.system.domain.CustomFieldExample;
 import io.metersphere.system.dto.sdk.OptionDTO;
@@ -52,6 +53,7 @@ public class FunctionalCaseNoticeService {
     public FunctionalCaseDTO getFunctionalCaseDTO(FunctionalCaseCommentRequest functionalCaseCommentRequest) {
         FunctionalCase functionalCase = functionalCaseMapper.selectByPrimaryKey(functionalCaseCommentRequest.getCaseId());
         FunctionalCaseDTO functionalCaseDTO = new FunctionalCaseDTO();
+        functionalCaseDTO.setTriggerMode(Translator.get("log.test_plan.functional_case"));
         BeanUtils.copyBean(functionalCaseDTO, functionalCase);
         setNotifier(functionalCaseCommentRequest, functionalCaseDTO);
         List<OptionDTO> customFields = getCustomFields(functionalCaseCommentRequest.getCaseId());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -1063,6 +1063,7 @@ private void batchSaveImportData(FunctionalCaseHistoryLogDTO historyLogDTO, Func
      */
     private void noticeModule(List<FunctionalCaseDTO> noticeList, FunctionalCaseExcelData functionalCaseExcelData, FunctionalCaseImportRequest request, String userId, Map<String, TemplateCustomFieldDTO> customFieldsMap) {
         FunctionalCaseDTO functionalCaseDTO = new FunctionalCaseDTO();
+        functionalCaseDTO.setTriggerMode(Translator.get("log.test_plan.functional_case"));
         functionalCaseDTO.setName(functionalCaseExcelData.getName());
         functionalCaseDTO.setProjectId(request.getProjectId());
         functionalCaseDTO.setCaseEditType(functionalCaseExcelData.getCaseEditType());

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/MailNoticeSender.java
Patch:
@@ -95,6 +95,9 @@ private void send(String subject, String context, String[] users, String[] cc) t
 
         LogUtils.debug("发件人地址" + javaMailSender.getUsername());
         LogUtils.debug("helper" + helper);
+        if (subject.length() > 60) {
+            subject = subject.substring(0,59);
+        }
         helper.setSubject("MeterSphere " + subject);
 
         LogUtils.info("收件人地址: {}", Arrays.asList(users));

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/utils/MessageTemplateUtils.java
Patch:
@@ -6,7 +6,7 @@
 import io.metersphere.plan.domain.TestPlan;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.Schedule;
-import io.metersphere.system.dto.BugNoticeDTO;
+import io.metersphere.system.dto.BugMessageDTO;
 import io.metersphere.system.dto.sdk.ApiDefinitionCaseDTO;
 import io.metersphere.system.dto.sdk.FunctionalCaseMessageDTO;
 import io.metersphere.system.notice.constants.NoticeConstants;
@@ -153,7 +153,7 @@ public static Field[] getDomainTemplateFields(String taskType) {
                 allFields = FieldUtils.getAllFields(FunctionalCaseMessageDTO.class);
             }
             case NoticeConstants.TaskType.BUG_TASK -> {
-                allFields = FieldUtils.getAllFields(BugNoticeDTO.class);
+                allFields = FieldUtils.getAllFields(BugMessageDTO.class);
             }
             case NoticeConstants.TaskType.UI_SCENARIO_TASK -> {
                 allFields = FieldUtils.getAllFields(UiScenario.class);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseDemandService.java
Patch:
@@ -334,7 +334,7 @@ public <T> List<String> doSelectIds(T dto, String projectId) {
 
     public PluginPager<PlatformDemandDTO> pageDemand(FunctionalThirdDemandPageRequest request) {
         DemandPageRequest demandPageRequest = new DemandPageRequest();
-        demandPageRequest.setQuery(request.getKeyword());
+        demandPageRequest.setQuery(StringUtils.replace(request.getKeyword(),"\\",""));
         demandPageRequest.setFilter(request.getFilter());
         demandPageRequest.setStartPage(request.getCurrent());
         demandPageRequest.setPageSize(request.getPageSize());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/MessageDetailService.java
Patch:
@@ -70,7 +70,7 @@ private void getMessageDetails(List<MessageDetail> messageDetails, List<MessageT
         MessageTaskBlobExample blobExample = new MessageTaskBlobExample();
         blobExample.createCriteria()
                 .andIdIn(messageTaskIds);
-        List<MessageTaskBlob> messageTaskBlobs = messageTaskBlobMapper.selectByExample(blobExample);
+        List<MessageTaskBlob> messageTaskBlobs = messageTaskBlobMapper.selectByExampleWithBLOBs(blobExample);
         Map<String, MessageTaskBlob> messageTaskBlobMap = messageTaskBlobs.stream().collect(Collectors.toMap(MessageTaskBlob::getId, item -> item));
 
         List<String> robotIds = messageTaskLists.stream().map(MessageTask::getProjectRobotId).distinct().collect(Collectors.toList());

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/taskcenter/TaskCenterDTO.java
Patch:
@@ -31,6 +31,9 @@ public class TaskCenterDTO implements Serializable {
     @Schema(description = "资源Id 单独报告显示模块业务id 集合报告显示报告id")
     private String resourceId;
 
+    @Schema(description = "资源编号 单独报告显示模块编号 集合报告显示报告编号")
+    private String resourceNum;
+
     @Schema(description = "资源名称 单独报告显示模块名称 集合报告显示报告名称")
     private String resourceName;
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/TaskCenterService.java
Patch:
@@ -13,6 +13,7 @@
 import io.metersphere.system.dto.taskcenter.enums.ScheduleTagType;
 import io.metersphere.system.dto.taskcenter.request.TaskCenterSchedulePageRequest;
 import io.metersphere.system.mapper.*;
+import io.metersphere.system.schedule.BaseScheduleJob;
 import io.metersphere.system.schedule.ScheduleService;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
@@ -206,7 +207,7 @@ public void enable(String id) {
         schedule.setEnable(!schedule.getEnable());
         scheduleService.editSchedule(schedule);
         scheduleService.addOrUpdateCronJob(schedule, new JobKey(schedule.getKey(), schedule.getJob()),
-                new TriggerKey(schedule.getKey(),schedule.getJob()), schedule.getJob().getClass());
+                new TriggerKey(schedule.getKey(),schedule.getJob()), BaseScheduleJob.class);
 
 
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiReportMapper.java
Patch:
@@ -17,7 +17,7 @@ public interface ExtApiReportMapper {
 
     List<String> getIds(@Param("request") ApiReportBatchRequest request);
 
-    List<ApiReport> selectApiReportByIds(@Param("ids") List<String> ids, @Param("deleted") boolean deleted);
+    List<ApiReport> selectApiReportByIds(@Param("ids") List<String> ids);
 
     List<ApiReportStepDTO> selectStepsByReportId(String id);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioReportMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ExtApiScenarioReportMapper {
 
     List<String> getIds(@Param("request") ApiReportBatchRequest request);
 
-    List<ApiScenarioReport> selectApiReportByIds(@Param("ids") List<String> ids, @Param("deleted") boolean deleted);
+    List<ApiScenarioReport> selectApiReportByIds(@Param("ids") List<String> ids);
 
     List<ApiScenarioReportStepDTO> selectStepByReportId(@Param("reportId") String reportId);
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportLogService.java
Patch:
@@ -68,7 +68,7 @@ public void updateLog(String id) {
 
     public void batchDeleteLog(List<String> ids, String userId, String projectId) {
         Project project = projectMapper.selectByPrimaryKey(projectId);
-        List<ApiReport> apiReports = extApiReportMapper.selectApiReportByIds(ids, true);
+        List<ApiReport> apiReports = extApiReportMapper.selectApiReportByIds(ids);
         List<LogDTO> logs = new ArrayList<>();
         apiReports.forEach(apiReport -> {
             LogDTO dto = new LogDTO(

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -151,7 +151,7 @@ public void batchDelete(ApiReportBatchRequest request, String userId) {
         if (CollectionUtils.isEmpty(ids)) {
             return;
         }
-        SubListUtils.dealForSubList(ids, 2000, subList -> {
+        SubListUtils.dealForSubList(ids, 500, subList -> {
             ApiReportExample example = new ApiReportExample();
             example.createCriteria().andIdIn(subList);
             ApiReport apiReport = new ApiReport();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportLogService.java
Patch:
@@ -70,7 +70,7 @@ public LogDTO updateLog(String id) {
     @Async
     public void batchDeleteLog(List<String> ids, String userId, String projectId) {
         Project project = projectMapper.selectByPrimaryKey(projectId);
-        List<ApiScenarioReport> apiReports = extApiScenarioReportMapper.selectApiReportByIds(ids, true);
+        List<ApiScenarioReport> apiReports = extApiScenarioReportMapper.selectApiReportByIds(ids);
         List<LogDTO> logs = new ArrayList<>();
         apiReports.forEach(apiReport -> {
             LogDTO dto = new LogDTO(

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/TaskCenterController.java
Patch:
@@ -32,7 +32,7 @@ public class TaskCenterController {
 
     @PostMapping("/project/schedule/page")
     @Operation(summary = "项目-任务中心-定时任务列表")
-    @RequiresPermissions(PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ)
+    @RequiresPermissions(PermissionConstants.PROJECT_BASE_INFO_READ)
     public Pager<List<TaskCenterScheduleDTO>> projectScheduleList(@Validated @RequestBody TaskCenterSchedulePageRequest request) {
         return taskCenterService.getProjectSchedulePage(request, SessionUtils.getCurrentProjectId());
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/NoticeMessageTaskService.java
Patch:
@@ -178,9 +178,6 @@ private List<MessageTask> updateMessageTasks(MessageTaskRequest messageTaskReque
                 if (!useDefaultSubject) {
                     messageTask.setSubject(messageTaskRequest.getSubject());
                 }
-            } else {
-                //如果没有机器人id,则只是修改人其余配置不变
-                useDefaultTemplate = messageTask.getUseDefaultTemplate();
             }
             messageTask.setReceivers(existUserIds);
             mapper.updateByPrimaryKeySelective(messageTask);

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/NoticeMessageTaskControllerTests.java
Patch:
@@ -77,7 +77,6 @@ public void addMessageTaskUserNoExistSuccess() throws Exception {
         messageTaskRequest.setEnable(true);
         messageTaskRequest.setSubject("看看改不改");
         messageTaskRequest.setUseDefaultSubject(false);
-        messageTaskRequest.setUseDefaultTemplate(false);
         MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.post("/notice/message/task/save")
                         .header(SessionConstants.HEADER_TOKEN, sessionId)
                         .header(SessionConstants.CSRF_TOKEN, csrfToken)
@@ -505,7 +504,7 @@ public void getMessageListUpdate() throws Exception {
         List<MessageTaskDetailDTO> collect2 = messageTaskDetailDTOList1.stream().filter(t -> t.event.equals(NoticeConstants.Event.CREATE)).toList();
         Map<String, ProjectRobotConfigDTO> projectRobotConfigMap = collect2.get(0).getProjectRobotConfigMap();
         ProjectRobotConfigDTO projectRobotConfigDTO = projectRobotConfigMap.get("test_message_robot2");
-        Assertions.assertFalse(StringUtils.equals(projectRobotConfigDTO.getTemplate(),"发送消息测试"));
+        Assertions.assertTrue(StringUtils.equals(projectRobotConfigDTO.getTemplate(),"发送消息测试"));
     }
 
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -215,7 +215,7 @@ public String scheduleConfig(@Validated @RequestBody ApiScenarioScheduleConfigRe
     @Operation(summary = "接口测试-接口场景管理-删除定时任务配置")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_EXECUTE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.scheduleLog(#request.getScenarioId())", msClass = ApiScenarioLogService.class)
-    @CheckOwner(resourceId = "#request.getScenarioId()", resourceType = "api_scenario")
+    @CheckOwner(resourceId = "#scenarioId", resourceType = "api_scenario")
     @SendNotice(taskType = NoticeConstants.TaskType.SCHEDULE_TASK, event = NoticeConstants.Event.UPDATE, target = "#targetClass.getScheduleNotice(#request)", targetClass = ApiScenarioNoticeService.class)
     public void deleteScheduleConfig(@PathVariable String scenarioId) {
         apiValidateService.validateApiMenuInProject(scenarioId, ApiResource.API_SCENARIO.name());

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseAttachmentController.java
Patch:
@@ -140,7 +140,7 @@ public String transfer(@Validated @RequestBody AttachmentTransferRequest request
             fileId = fileAssociationService.transferAndAssociation(fileAssociationDTO);
             functionalCaseAttachmentService.deleteCaseAttachment(Arrays.asList(request.getFileId()), request.getCaseId(), request.getProjectId());
         } catch (MSException e) {
-            throw new MSException(e);
+            throw new MSException(e.getMessage());
         } catch (Exception e) {
             throw new MSException(Translator.get("file.transfer.failed"));
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -132,7 +132,7 @@ public void follow(@PathVariable String id) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<ApiDefinitionDTO>> getPage(@Validated @RequestBody ApiDefinitionPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : request.getDeleted() ? "delete_time desc" : "pos desc");
         return PageUtils.setPageInfo(page, apiDefinitionService.getApiDefinitionPage(request, SessionUtils.getUserId()));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -197,7 +197,7 @@ public void batchRecover(@Validated @RequestBody ApiTestCaseBatchRequest request
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_READ)
     public Pager<List<ApiTestCaseDTO>> pageTrash(@Validated @RequestBody ApiTestCasePageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
         return PageUtils.setPageInfo(page, apiTestCaseService.page(request, true));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -68,7 +68,7 @@ public Pager<List<ApiScenarioDTO>> getPage(@Validated @RequestBody ApiScenarioPa
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<ApiScenarioDTO>> getTrashPage(@Validated @RequestBody ApiScenarioPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
         request.setDeleted(true);
         return PageUtils.setPageInfo(page, apiScenarioService.getScenarioPage(request));
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -150,7 +150,7 @@ public void sync(@PathVariable String projectId) {
     }
 
     @PostMapping("/sync/all")
-    @Operation(summary = "缺陷管理-列表-同步缺陷(全量)")
+    @Operation(summary = "缺陷管理-列表-同步缺陷(企业)")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void syncAll(@RequestBody BugSyncRequest request) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugTrashController.java
Patch:
@@ -37,7 +37,7 @@ public class BugTrashController {
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public Pager<List<BugDTO>> page(@Validated @RequestBody BugPageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
         request.setUseTrash(true);
         return PageUtils.setPageInfo(page, bugService.list(request));
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1611,6 +1611,7 @@ private List<LogDTO> getBatchLogByRequest(List<String> batchIds, String operatio
         bugs.forEach(bug -> {
             LogDTO log = new LogDTO(bug.getProjectId(), project.getOrganizationId(), bug.getId(), currentUser, operationType, module, bug.getTitle());
             log.setPath(path);
+            log.setHistory(true);
             log.setMethod(HttpMethodConstants.POST.name());
             if (batchUpdate) {
                 // 批量更新只记录TAG的变更内容

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseTrashController.java
Patch:
@@ -42,7 +42,7 @@ public class FunctionalCaseTrashController {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @RequestBody FunctionalCasePageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "delete_time desc");
         return PageUtils.setPageInfo(page, functionalCaseService.getFunctionalCasePage(request, true));
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioDTO.java
Patch:
@@ -26,4 +26,6 @@ public class ApiScenarioDTO extends ApiScenario {
     private ApiScenarioScheduleConfigRequest scheduleConfig;
     @Schema(description = "定时任务下一次执行时间")
     private Long nextTriggerTime;
+    @Schema(description = "脚本错误标识")
+    private String scriptIdentifier;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScenarioTimeWaitingProcessorConverter.java
Patch:
@@ -19,7 +19,9 @@
 public class ScenarioTimeWaitingProcessorConverter extends TimeWaitingProcessorConverter {
     @Override
     public void parse(HashTree hashTree, TimeWaitingProcessor processor, ParameterConfig config) {
-        hashTree.add(getConstantTimerDebugSampler(), getConstantTimer(processor));
+        DebugSampler constantTimerDebugSampler = getConstantTimerDebugSampler();
+        constantTimerDebugSampler.setProperty(ElementProperty.MS_STEP_ID.name(), processor.getStepId());
+        hashTree.add(constantTimerDebugSampler, getConstantTimer(processor));
     }
 
     private DebugSampler getConstantTimerDebugSampler() {

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/NoticeMessageTaskControllerTests.java
Patch:
@@ -77,6 +77,7 @@ public void addMessageTaskUserNoExistSuccess() throws Exception {
         messageTaskRequest.setEnable(true);
         messageTaskRequest.setSubject("看看改不改");
         messageTaskRequest.setUseDefaultSubject(false);
+        messageTaskRequest.setUseDefaultTemplate(false);
         MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.post("/notice/message/task/save")
                         .header(SessionConstants.HEADER_TOKEN, sessionId)
                         .header(SessionConstants.CSRF_TOKEN, csrfToken)

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/utils/MessageTemplateUtils.java
Patch:
@@ -276,11 +276,11 @@ private static void putDescription(Field[] domainTemplateFields, Map<String, Obj
         for (Field allField : domainTemplateFields) {
             Schema annotation = allField.getAnnotation(Schema.class);
             if (annotation != null) {
-                String description = annotation.description();
+                String description;
                 if (StringUtils.equals(allField.getName(), "name") || StringUtils.equals(allField.getName(), "title")) {
-                    description = "{{" + description + "}}";
+                    description = "{{" + Translator.get("message.domain."+ allField.getName()) + "}}";
                 } else {
-                    description = "<" + description + ">";
+                    description = "<" + Translator.get("message.domain."+ allField.getName()) + ">";
                 }
                 map.put(allField.getName(), description);
             }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioLogService.java
Patch:
@@ -35,7 +35,7 @@ public class ApiScenarioLogService {
     private ApiScenarioMapper apiScenarioMapper;
 
     public void batchEditLog(List<ApiScenario> scenarioList, String operator, String projectId) {
-        saveBatchLog(projectId, scenarioList, "/api/scenario/batch/edit", operator, OperationLogType.UPDATE.name(), false);
+        saveBatchLog(projectId, scenarioList, "/api/scenario/batch/edit", operator, OperationLogType.UPDATE.name(), true);
     }
 
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsLoopControllerConverter.java
Patch:
@@ -109,9 +109,6 @@ private LoopController initLoopController(MsLoopController element) {
         loopController.setProperty(TestElement.TEST_CLASS, LoopController.class.getName());
         loopController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("LoopControlPanel"));
         loopController.setLoops(element.getMsCountController().getLoops());
-        if (StringUtils.isNotEmpty(element.getMsCountController().getLoops())) {
-            loopController.setContinueForever(true);
-        }
         return loopController;
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioLogService.java
Patch:
@@ -172,7 +172,7 @@ public LogDTO deleteLog(String id) {
                 apiScenario.getId(),
                 null,
                 OperationLogType.DELETE.name(),
-                OperationLogModule.API_SCENARIO_MANAGEMENT_SCENARIO,
+                OperationLogModule.API_TEST_SCENARIO_RECYCLE,
                 apiScenario.getName());
         dto.setOriginalValue(JSON.toJSONBytes(apiScenario));
         return dto;
@@ -186,7 +186,7 @@ public LogDTO moveToGcLog(String id) {
                 apiScenario.getId(),
                 null,
                 OperationLogType.DELETE.name(),
-                OperationLogModule.API_TEST_SCENARIO_RECYCLE,
+                OperationLogModule.API_SCENARIO_MANAGEMENT_SCENARIO,
                 apiScenario.getName());
         dto.setOriginalValue(JSON.toJSONBytes(apiScenario));
         return dto;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioReportDTO.java
Patch:
@@ -22,8 +22,6 @@ public class ApiScenarioReportDTO extends ApiScenarioReport {
     private String creatUserName;
     @Schema(description = "请求总数")
     private Long requestTotal;
-    @Schema(description = "等待时间")
-    private Long waitingTime;
     @Schema(description = "步骤失败数")
     private Long stepErrorCount;
     @Schema(description = "步骤误报数")

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugRelateCaseLogService.java
Patch:
@@ -31,7 +31,7 @@ public class BugRelateCaseLogService {
     public LogDTO getRelateLog(String id) {
         BugRelationCase bugRelationCase = bugRelationCaseMapper.selectByPrimaryKey(id);
         BugRelateCaseDTO relateCase = extBugRelateCaseMapper.getRelateCase(bugRelationCase.getCaseId(), bugRelationCase.getCaseType());
-        LogDTO dto = new LogDTO(relateCase.getProjectId(), null, null, null, OperationLogType.DISASSOCIATE.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, relateCase.getRelateCaseName());
+        LogDTO dto = new LogDTO(relateCase.getProjectId(), null, bugRelationCase.getBugId(), null, OperationLogType.DISASSOCIATE.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, relateCase.getRelateCaseName());
         dto.setPath("/bug/un-relate");
         dto.setMethod(HttpMethodConstants.GET.name());
         dto.setModifiedValue(JSON.toJSONBytes(relateCase));

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionScheduleController.java
Patch:
@@ -8,7 +8,6 @@
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.system.log.annotation.Log;
 import io.metersphere.system.log.constants.OperationLogType;
-import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.utils.SessionUtils;
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;
@@ -31,7 +30,6 @@ public class ApiDefinitionScheduleController {
     @Operation(summary = "接口测试-接口管理-定时同步-创建")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_IMPORT)
     @Log(type = OperationLogType.ADD, expression = "#msClass.scheduleLog(#request)", msClass = ApiDefinitionLogService.class)
-    @CheckOwner(resourceId = "#request.getScenarioId()", resourceType = "api_scenario")
     public String createSchedule(@RequestBody @Validated({Created.class}) ApiScheduleRequest request) {
         return apiDefinitionScheduleService.createSchedule(request, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/OperationHistoryRequest.java
Patch:
@@ -33,7 +33,7 @@ public class OperationHistoryRequest extends BasePageRequest implements Serializ
     private List<String> types;
 
     @Schema(description =  "操作模块")
-    private List<String> modules;
+    private String modules;
 
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseLogService.java
Patch:
@@ -69,7 +69,7 @@ public LogDTO updateFunctionalCaseFileLog(FunctionalCaseAssociationFileRequest r
                 request.getCaseId(),
                 null,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.CASE_MANAGEMENT_CASE_UPDATE,
+                OperationLogModule.FUNCTIONAL_CASE,
                 historyLogDTO.getFunctionalCase().getName());
         dto.setHistory(true);
         dto.setPath("/attachment/upload/file");
@@ -94,7 +94,7 @@ public LogDTO deleteFunctionalCaseFileLog(FunctionalCaseDeleteFileRequest reques
                 request.getCaseId(),
                 null,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.CASE_MANAGEMENT_CASE_UPDATE,
+                OperationLogModule.FUNCTIONAL_CASE,
                 historyLogDTO.getFunctionalCase().getName());
         dto.setHistory(true);
         dto.setPath("/attachment/delete/file");
@@ -120,7 +120,7 @@ public LogDTO updateFunctionalCaseLog(FunctionalCaseEditRequest requests, List<M
                 requests.getId(),
                 null,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.CASE_MANAGEMENT_CASE_UPDATE,
+                OperationLogModule.FUNCTIONAL_CASE,
                 requests.getName());
         dto.setHistory(true);
         dto.setPath("/functional/case/update");

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/MsHTTPElement.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.api.dto.request.http;
 
-import io.metersphere.api.dto.request.http.auth.HTTPAuthConfig;
+import io.metersphere.project.dto.environment.auth.HTTPAuthConfig;
 import io.metersphere.api.dto.request.http.body.Body;
 import io.metersphere.plugin.api.spi.AbstractMsProtocolTestElement;
 import io.metersphere.sdk.constants.HttpMethodConstants;

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/Swagger3Parser.java
Patch:
@@ -8,7 +8,7 @@
 import io.metersphere.api.dto.request.ImportRequest;
 import io.metersphere.api.dto.request.MsCommonElement;
 import io.metersphere.api.dto.request.http.*;
-import io.metersphere.api.dto.request.http.auth.NoAuth;
+import io.metersphere.project.dto.environment.auth.NoAuth;
 import io.metersphere.api.dto.request.http.body.*;
 import io.metersphere.api.dto.schema.JsonSchemaItem;
 import io.metersphere.api.parser.ImportParser;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiTestService.java
Patch:
@@ -102,7 +102,6 @@ public EnvironmentConfig getEnvironmentConfig(String environmentId) {
         EnvironmentConfig newEnvironmentConfig = new EnvironmentConfig();
         newEnvironmentConfig.setHttpConfig(environmentConfig.getHttpConfig());
         newEnvironmentConfig.setCommonVariables(environmentConfig.getCommonVariables());
-        newEnvironmentConfig.setAuthConfig(null);
         newEnvironmentConfig.setPreProcessorConfig(null);
         newEnvironmentConfig.setPostProcessorConfig(null);
         newEnvironmentConfig.setAssertionConfig(null);

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDebugControllerTests.java
Patch:
@@ -16,9 +16,9 @@
 import io.metersphere.api.dto.request.MsCommonElement;
 import io.metersphere.api.dto.request.http.MsHTTPElement;
 import io.metersphere.api.dto.request.http.RestParam;
-import io.metersphere.api.dto.request.http.auth.BasicAuth;
-import io.metersphere.api.dto.request.http.auth.DigestAuth;
-import io.metersphere.api.dto.request.http.auth.HTTPAuthConfig;
+import io.metersphere.project.dto.environment.auth.BasicAuth;
+import io.metersphere.project.dto.environment.auth.DigestAuth;
+import io.metersphere.project.dto.environment.auth.HTTPAuthConfig;
 import io.metersphere.api.dto.request.http.body.*;
 import io.metersphere.api.mapper.ApiDebugBlobMapper;
 import io.metersphere.api.mapper.ApiDebugMapper;

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestControllerTests.java
Patch:
@@ -222,7 +222,6 @@ public void getEnvironmentConfig() throws Exception {
         Environment environment = baseEnvTestService.initEnv("111");
         MvcResult mvcResult = this.requestGetAndReturn(ENVIRONMENT, environment.getId());
         EnvironmentConfig environmentConfig = getResultData(mvcResult, EnvironmentConfig.class);
-        Assertions.assertNull(environmentConfig.getAuthConfig());
         Assertions.assertNull(environmentConfig.getPreProcessorConfig());
         Assertions.assertNull(environmentConfig.getPostProcessorConfig());
         Assertions.assertNull(environmentConfig.getAssertionConfig());

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/EnvironmentConfig.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.project.dto.environment;
 
-import io.metersphere.project.dto.environment.auth.AuthConfig;
 import io.metersphere.project.dto.environment.common.CommonParams;
 import io.metersphere.project.dto.environment.datasource.DataSource;
 import io.metersphere.project.dto.environment.host.HostConfig;
@@ -28,8 +27,6 @@ public class EnvironmentConfig {
 
     @Schema(description = "Host配置")
     private HostConfig hostConfig = new HostConfig();
-    @Schema(description = "认证配置")
-    private AuthConfig authConfig = new AuthConfig();
     @Schema(description = "全局前置脚本")
     private EnvProcessorConfig preProcessorConfig = new EnvProcessorConfig();
     @Schema(description = "全局后置脚本")

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/auth/BasicAuth.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.request.http.auth;
+package io.metersphere.project.dto.environment.auth;
 
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/auth/DigestAuth.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.request.http.auth;
+package io.metersphere.project.dto.environment.auth;
 
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/auth/HTTPAuth.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.request.http.auth;
+package io.metersphere.project.dto.environment.auth;
 
 import lombok.Data;
 

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/auth/HTTPAuthConfig.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.request.http.auth;
+package io.metersphere.project.dto.environment.auth;
 
 import io.metersphere.system.valid.EnumValue;
 import lombok.Data;

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/auth/NoAuth.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.request.http.auth;
+package io.metersphere.project.dto.environment.auth;
 
 import com.fasterxml.jackson.annotation.JsonTypeName;
 import lombok.Data;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepCommonDTO.java
Patch:
@@ -64,8 +64,7 @@ public class ApiScenarioStepCommonDTO<T extends ApiScenarioStepCommonDTO> {
     private String projectId;
 
     @Schema(description = "步骤名称")
-    @NotBlank(message = "{api_scenario_step.name.not_blank}")
-    @Size(min = 1, max = 255, message = "{api_scenario_step.name.length_range}")
+    @Size(max = 255, message = "{api_scenario_step.name.length_range}")
     private String name;
 
     @Schema(description = "资源编号")

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/extract/JSONPathExtractConverter.java
Patch:
@@ -23,6 +23,7 @@ public void parse(HashTree hashTree, JSONPathExtract msExtract, ParameterConfig
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass(JSON_POST_PROCESSOR_GUI));
         extractor.setRefNames(msExtract.getVariableName());
         extractor.setJsonPathExpressions(msExtract.getExpression());
+        extractor.setProperty("JSONPostProcessor.compute_concat", true);
         // 处理匹配多条等匹配规则
         extractor.setMatchNumbers(parseResultMatchingRule(msExtract).toString());
         extractor.setEnabled(msExtract.getEnable());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -238,6 +238,9 @@ public ApiReportDTO get(String id) {
             List<ApiReportStepDTO> apiReportSteps = new ArrayList<>();
             apiReportSteps.add(apiReportStepDTO);
             apiReportDTO.setChildren(apiReportSteps);
+        } else {
+            apiReportDTO.setTotal(1L);
+            apiReportDTO.setPendingCount(1L);
         }
         return apiReportDTO;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -141,6 +141,7 @@ public Pager<List<ApiDefinitionDTO>> getPage(@Validated @RequestBody ApiDefiniti
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_DELETE)
     @Log(type = OperationLogType.DELETE, expression = "#msClass.moveToGcLog(#id)", msClass = ApiDefinitionLogService.class)
     @CheckOwner(resourceId = "#id", resourceType = "api_definition")
+    @SendNotice(taskType = NoticeConstants.TaskType.API_DEFINITION_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getEditApiDTO(#id)", targetClass = ApiDefinitionNoticeService.class)
     public void deleteToGc(@PathVariable String id, @RequestParam(required = false) boolean deleteAllVersion) {
         apiDefinitionService.deleteToGc(id, deleteAllVersion, SessionUtils.getUserId());
     }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -87,6 +87,7 @@ public class ApiDefinitionControllerTests extends BaseTest {
     private final static String UPDATE = "update";
     private final static String BATCH_UPDATE = "batch-update";
     private final static String DELETE_TO_GC = "delete-to-gc/{0}?deleteAllVersion={1}";
+    private final static String SINGLE_DELETE_TO_GC = "delete-to-gc/";
     private final static String BATCH_DELETE_TO_GC = "batch/delete-to-gc";
     private final static String COPY = "copy";
     private final static String BATCH_MOVE = "batch-move";
@@ -1231,6 +1232,8 @@ public void testDel() throws Exception {
         Assertions.assertEquals("admin", apiDefinitionInfo.getDeleteUser());
         Assertions.assertNotNull(apiDefinitionInfo.getDeleteTime());
 
+        this.requestGetWithOk(SINGLE_DELETE_TO_GC+"/"+apiDefinition.getId());
+
         // @存在多个版本
         String id = "1004";
         // 列表删除

File: backend/services/system-setting/src/main/java/io/metersphere/system/job/CleanNotificationJob.java
Patch:
@@ -17,7 +17,7 @@ public class CleanNotificationJob {
     private BaseNotificationMapper baseNotificationMapper;
 
     /**
-     * 清理状态为删除的项目  每天凌晨三点执行
+     * 清理90天前的站内通知  每天凌晨三点执行
      */
     @QuartzScheduled(cron = "0 0 3 * * ?")
     public void cleanupNotification() {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -200,7 +200,8 @@ public ApiScenarioReportDTO get(String id) {
         //只处理请求的
         List<String> stepTypes = Arrays.asList(ApiScenarioStepType.API_CASE.name(),
                 ApiScenarioStepType.API.name(),
-                ApiScenarioStepType.CUSTOM_REQUEST.name());
+                ApiScenarioStepType.CUSTOM_REQUEST.name(),
+                ApiScenarioStepType.SCRIPT.name());
         scenarioReportSteps.parallelStream().forEach(step -> {
             if (stepTypes.contains(step.getStepType())) {
                 List<ApiScenarioReportStepDTO> details = detailMap.get(step.getStepId());

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -120,7 +120,7 @@ public void delete(@PathVariable String id) {
     @GetMapping("/delete-to-gc/{id}")
     @Operation(summary = "接口测试-接口场景管理-删除场景到回收站")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_DELETE)
-    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#id)", msClass = ApiScenarioLogService.class)
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.moveToGcLog(#id)", msClass = ApiScenarioLogService.class)
     @CheckOwner(resourceId = "#id", resourceType = "api_scenario")
     @SendNotice(taskType = NoticeConstants.TaskType.API_SCENARIO_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getScenarioDTO(#id)", targetClass = ApiScenarioNoticeService.class)
     public void deleteToGc(@PathVariable String id) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -24,8 +24,8 @@ public class OperationLogModule {
     public static final String API_TEST_MANAGEMENT_MOCK = "API_TEST_MANAGEMENT_MOCK";
     public static final String API_TEST_MANAGEMENT_CASE = "API_TEST_MANAGEMENT_CASE";
     // 场景管理
-    public static final String API_SCENARIO_MANAGEMENT_SCENARIO = "API_SCENARIO_MANAGEMENT_SCENARIO";
-    public static final String API_SCENARIO_MANAGEMENT_MODULE = "API_SCENARIO_MANAGEMENT_MODULE";
+    public static final String API_SCENARIO_MANAGEMENT_SCENARIO = "API_TEST_SCENARIO_MANAGEMENT_SCENARIO";
+    public static final String API_SCENARIO_MANAGEMENT_MODULE = "API_TEST_SCENARIO_MANAGEMENT_MODULE";
     public static final String API_TEST_SCENARIO_RECYCLE = "API_TEST_SCENARIO_RECYCLE";
     public static final String API_TEST_MANAGEMENT_RECYCLE = "API_TEST_MANAGEMENT_RECYCLE";
 

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioMapper.java
Patch:
@@ -13,7 +13,6 @@
 import io.metersphere.system.dto.sdk.BaseTreeNode;
 import org.apache.ibatis.annotations.Param;
 
-import java.util.Collection;
 import java.util.List;
 
 public interface ExtApiScenarioMapper {
@@ -58,4 +57,6 @@ public interface ExtApiScenarioMapper {
     Long getPos(String projectId);
 
     List<ApiScenario> getScenarioExecuteInfoByIds(@Param("ids") List<String> ids);
+
+    List<ModuleCountDTO> countModuleIdByRequest(@Param("request") ApiScenarioModuleRequest request, @Param("deleted") boolean deleted);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioModuleMapper.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.mapper;
 
 import io.metersphere.api.dto.scenario.ApiScenarioModuleRequest;
-import io.metersphere.project.dto.ModuleCountDTO;
 import io.metersphere.project.dto.NodeSortQueryParam;
 import io.metersphere.system.dto.sdk.BaseModule;
 import io.metersphere.system.dto.sdk.BaseTreeNode;
@@ -26,8 +25,6 @@ public interface ExtApiScenarioModuleMapper {
 
     BaseModule selectModuleByParentIdAndPosOperator(NodeSortQueryParam nodeSortQueryParam);
 
-    List<ModuleCountDTO> countModuleIdByRequest(@Param("request") ApiScenarioModuleRequest request, @Param("deleted") boolean deleted);
-
     List<BaseTreeNode> selectNodeByIds(@Param("ids") List<String> ids);
 
     List<BaseTreeNode> selectBaseByIds(@Param("ids") List<String> ids);

File: backend/framework/plugin/plugin-api-sdk/src/main/java/io/metersphere/plugin/api/constants/ElementProperty.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.plugin.api.constants;
 
 public enum ElementProperty {
-    MS_RESOURCE_ID, MS_STEP_ID, MS_FAKE_ERROR, MS_REPORT_ID, PROJECT_ID,SCENARIO_CONSTANT_TIMER
+    MS_RESOURCE_ID, MS_STEP_ID, MS_FAKE_ERROR, MS_REPORT_ID, PROJECT_ID, SCENARIO_CONSTANT_TIMER
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -255,6 +255,7 @@ public TaskRequestDTO runScript(CustomFunctionRunRequest runRequest) {
         MsScriptElement msScriptElement = new MsScriptElement();
         msScriptElement.setEnableCommonScript(true);
         msScriptElement.setName(runRequest.getReportId());
+        msScriptElement.setProjectId(runRequest.getProjectId());
         CommonScriptInfo commonScriptInfo = new CommonScriptInfo();
         commonScriptInfo.setId(runRequest.getProjectId());
         commonScriptInfo.setParams(runRequest.getParams());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -138,7 +138,7 @@ public void parallelExecute(ApiScenarioBatchRunRequest request, String userId) {
 
             String reportId = null;
             try {
-                ApiScenarioDetail apiScenarioDetail = apiScenarioService.get(id);
+                ApiScenarioDetail apiScenarioDetail = apiScenarioService.getForRun(id);
                 if (apiScenarioDetail == null) {
                     if (runModeConfig.isIntegratedReport()) {
                         // 用例不存在，则在执行集合中删除
@@ -281,7 +281,7 @@ private ApiScenarioReport initIntegratedReport(ApiRunModeConfigDTO runModeConfig
      * @param queueDetail
      */
     public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDetail) {
-        ApiScenarioDetail apiScenarioDetail = apiScenarioService.get(queueDetail.getResourceId());
+        ApiScenarioDetail apiScenarioDetail = apiScenarioService.getForRun(queueDetail.getResourceId());
         if (apiScenarioDetail == null) {
             LogUtils.info("当前执行任务的用例已删除 {}", queueDetail.getResourceId());
             return;
@@ -405,7 +405,7 @@ public void UpdateStopOnFailureReport(ExecutionQueue queue) {
             }
             Long requestCount = 0L;
             while (queueDetail != null) {
-                ApiScenarioDetail apiScenarioDetail = apiScenarioService.get(queueDetail.getResourceId());
+                ApiScenarioDetail apiScenarioDetail = apiScenarioService.getForRun(queueDetail.getResourceId());
                 if (apiScenarioDetail == null) {
                     LogUtils.info("当前场景已删除 {}", queueDetail.getResourceId());
                     continue;

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsScenarioConverter.java
Patch:
@@ -263,12 +263,12 @@ private boolean needParseEnv(MsScenario msScenario) {
     }
 
     private void addScenarioProcessor(HashTree tree, MsScenario msScenario, ParameterConfig config, boolean isPre) {
-        if (isCopy(msScenario.getRefType())) {
+        // 获取场景前后置
+        ScenarioConfig scenarioConfig = msScenario.getScenarioConfig();
+        if (isCopy(msScenario.getRefType()) || scenarioConfig == null) {
             // 复制的场景，没有前后置
             return;
         }
-        // 获取场景前后置
-        ScenarioConfig scenarioConfig = msScenario.getScenarioConfig();
         MsProcessorConfig processorConfig = isPre ? scenarioConfig.getPreProcessorConfig() : scenarioConfig.getPostProcessorConfig();
 
         if (processorConfig == null || CollectionUtils.isEmpty(processorConfig.getProcessors())) {

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectUserRoleControllerTests.java
Patch:
@@ -102,9 +102,9 @@ public void testProjectUserRoleListSuccess() throws Exception {
         this.requestPost(PROJECT_USER_ROLE_LIST, request);
         // 覆盖空数据
         request.setProjectId("default-project-3");
-        request.setKeyword("project_member");
+        request.initKeyword("project_member");
         this.requestPost(PROJECT_USER_ROLE_LIST, request);
-        request.setKeyword("not_exit");
+        request.initKeyword("not_exit");
         this.requestPost(PROJECT_USER_ROLE_LIST, request);
     }
 

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/filemanagement/FileManagementControllerTests.java
Patch:
@@ -1166,7 +1166,7 @@ public void fileUpdateSuccess() throws Exception {
             this.setCurrent(1);
             this.setPageSize(10);
             this.setProjectId(project.getId());
-            this.setKeyword(finalUpdateRequest.getName());
+            this.initKeyword(finalUpdateRequest.getName());
         }};
         MvcResult pageResult = this.requestPostWithOkAndReturn(FileManagementRequestUtils.URL_FILE_PAGE, request);
         String returnData = pageResult.getResponse().getContentAsString(StandardCharsets.UTF_8);

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationControllerTests.java
Patch:
@@ -293,14 +293,14 @@ public void getOrgMemberListError() throws Exception {
         OrganizationRequest organizationRequest = new OrganizationRequest();
         organizationRequest.setCurrent(0);
         organizationRequest.setPageSize(10);
-        organizationRequest.setKeyword("sys_default_user");
+        organizationRequest.initKeyword("sys_default_user");
         organizationRequest.setOrganizationId("sys_default_organization_3");
         this.requestPost(ORGANIZATION_MEMBER_LIST, organizationRequest, status().isBadRequest());
         // 页数有误
         organizationRequest = new OrganizationRequest();
         organizationRequest.setCurrent(1);
         organizationRequest.setPageSize(1);
-        organizationRequest.setKeyword("sys_default_user");
+        organizationRequest.initKeyword("sys_default_user");
         organizationRequest.setOrganizationId("sys_default_organization_3");
         this.requestPost(ORGANIZATION_MEMBER_LIST, organizationRequest, status().isBadRequest());
     }
@@ -478,7 +478,7 @@ private void listByKeyWord(String keyWord, String orgId, boolean compare, String
         OrganizationRequest organizationRequest = new OrganizationRequest();
         organizationRequest.setCurrent(1);
         organizationRequest.setPageSize(10);
-        organizationRequest.setKeyword(keyWord);
+        organizationRequest.initKeyword(keyWord);
         organizationRequest.setOrganizationId(orgId);
         MvcResult mvcResult = this.responsePost(organizationRequest);
         // 获取返回值

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/TestResourcePoolControllerTests.java
Patch:
@@ -575,7 +575,7 @@ public TestResourcePoolDTO listByKeyWord(String keyWord) throws Exception {
         QueryResourcePoolRequest request = new QueryResourcePoolRequest();
         request.setCurrent(1);
         request.setPageSize(5);
-        request.setKeyword(keyWord);
+        request.initKeyword(keyWord);
         MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.post("/test/resource/pool/page")
                         .header(SessionConstants.HEADER_TOKEN, sessionId)
                         .header(SessionConstants.CSRF_TOKEN, csrfToken)

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsLoopControllerConverter.java
Patch:
@@ -174,8 +174,8 @@ private ForeachController initForeachController(MsLoopController element) {
         controller.setName(StringUtils.isNotBlank(element.getName()) ? element.getName() : "Foreach Controller");
         controller.setProperty(TestElement.TEST_CLASS, ForeachController.class.getName());
         controller.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ForeachControlPanel"));
-        controller.setInputVal(element.getForEachController().getVariable());
-        controller.setReturnVal(element.getForEachController().getValue());
+        controller.setInputVal(element.getForEachController().getValue());
+        controller.setReturnVal(element.getForEachController().getVariable());
         controller.setUseSeparator(true);
         return controller;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.mapper.*;
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.sdk.constants.ApiExecuteResourceType;
+import io.metersphere.sdk.constants.ApiReportStatus;
 import io.metersphere.sdk.domain.Environment;
 import io.metersphere.sdk.domain.EnvironmentGroup;
 import io.metersphere.sdk.dto.api.result.RequestResult;
@@ -213,6 +214,8 @@ public ApiReportDTO get(String id) {
             }
             apiReportSteps.sort(Comparator.comparingLong(ApiReportStepDTO::getSort));
             apiReportDTO.setChildren(apiReportSteps);
+            apiReportDTO.setTotal((long) apiReportSteps.size());
+            apiReportDTO.setPendingCount(apiReportSteps.stream().filter(step -> StringUtils.equals(ApiReportStatus.PENDING.name(), step.getStatus()) || StringUtils.isBlank(step.getStatus())).count());
             return apiReportDTO;
         }
         ApiTestCaseRecordExample example = new ApiTestCaseRecordExample();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -246,7 +246,7 @@ public ApiScenarioReportDTO get(String id) {
 
         scenarioReportDTO.setStepErrorCount(steps.stream().filter(step -> StringUtils.equals(ApiReportStatus.ERROR.name(), step.getStatus())).count());
         scenarioReportDTO.setStepSuccessCount(steps.stream().filter(step -> StringUtils.equals(ApiReportStatus.SUCCESS.name(), step.getStatus())).count());
-        scenarioReportDTO.setStepPendingCount(steps.stream().filter(step -> StringUtils.equals(ApiReportStatus.PENDING.name(), step.getStatus())).count());
+        scenarioReportDTO.setStepPendingCount(steps.stream().filter(step -> StringUtils.equals(ApiReportStatus.PENDING.name(), step.getStatus()) || StringUtils.isBlank(step.getStatus())).count());
         scenarioReportDTO.setStepFakeErrorCount(steps.stream().filter(step -> StringUtils.equals(ApiReportStatus.FAKE_ERROR.name(), step.getStatus())).count());
         //控制台信息 console
         ApiScenarioReportLogExample example = new ApiScenarioReportLogExample();

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioController.java
Patch:
@@ -124,7 +124,7 @@ public void delete(@PathVariable String id) {
     @CheckOwner(resourceId = "#id", resourceType = "api_scenario")
     @SendNotice(taskType = NoticeConstants.TaskType.API_SCENARIO_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getScenarioDTO(#id)", targetClass = ApiScenarioNoticeService.class)
     public void deleteToGc(@PathVariable String id) {
-        apiScenarioService.deleteToGc(id);
+        apiScenarioService.deleteToGc(id, SessionUtils.getUserId());
     }
 
     @GetMapping("/get/{scenarioId}")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/scenario/ApiScenarioReportController.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.api.controller.scenario;
 
-import com.fasterxml.jackson.databind.node.TextNode;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.metersphere.api.dto.definition.ApiReportBatchRequest;
@@ -54,8 +53,8 @@ public Pager<List<ApiScenarioReportListDTO>> getPage(@Validated @RequestBody Api
     @CheckOwner(resourceId = "#id", resourceType = "api_scenario_report")
     @RequiresPermissions(PermissionConstants.PROJECT_API_REPORT_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#id)", msClass = ApiScenarioReportLogService.class)
-    public void rename(@PathVariable String id, @RequestBody TextNode name) {
-        apiScenarioReportService.rename(id, name.asText(), SessionUtils.getUserId());
+    public void rename(@PathVariable String id, @RequestBody Object name) {
+        apiScenarioReportService.rename(id, name.toString(), SessionUtils.getUserId());
     }
 
     @GetMapping("/delete/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -306,8 +306,6 @@ private static void getStepTree(List<ApiScenarioReportStepDTO> steps, Map<String
                         step.setStatus(ApiReportStatus.FAKE_ERROR.name());
                     } else if (successStatus.size() == children.size() - noControllerIds.size()) {
                         step.setStatus(ApiReportStatus.SUCCESS.name());
-                    } else {
-                        step.setStatus(ApiReportStatus.PENDING.name());
                     }
                 } else if (stepTypes.contains(step.getStepType())) {
                     step.setStatus(ApiReportStatus.PENDING.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiScenarioMapper.java
Patch:
@@ -57,5 +57,5 @@ public interface ExtApiScenarioMapper {
 
     Long getPos(String projectId);
 
-    List<ApiScenario> getApiCaseExecuteInfoByIds(List<String> subIds);
+    List<ApiScenario> getScenarioExecuteInfoByIds(@Param("ids") List<String> ids);
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -315,7 +315,7 @@ public void executeNextTask(ExecutionQueue queue, ExecutionQueueDetail queueDeta
 
         TaskRequestDTO taskRequest = getTaskRequestDTO(reportId, apiTestCase, runModeConfig);
         taskRequest.setQueueId(queue.getQueueId());
-        taskRequest.setRequestCount(queue.getRequestCount());
+        taskRequest.setRequestCount(1l);
         execute(taskRequest, apiTestCase, apiTestCaseBlob, BeanUtils.copyBean(new ApiDefinitionExecuteInfo(), apiDefinition));
     }
 

File: backend/services/project-management/src/main/java/io/metersphere/project/mapper/ExtFileMetadataMapper.java
Patch:
@@ -31,4 +31,6 @@ public interface ExtFileMetadataMapper {
     List<String> selectFileTypeByProjectId(@Param("projectId") String projectId, @Param("storage") String storage);
 
     long countRepositoryFileByFileNameAndBranch(@Param("projectId") String projectId, @Param("moduleId") String moduleId, @Param("filePath") String filePath, @Param("branch") String branch);
+
+    FileMetadata selectLatestById(String fileId);
 }

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseControllerTests.java
Patch:
@@ -590,6 +590,8 @@ public void testBatchEdit() throws Exception {
         request.setAppend(true);
         request.setTags(Arrays.asList("追加标签_1", "追加标签_2"));
         this.requestPostWithOkAndReturn(FUNCTIONAL_CASE_BATCH_EDIT_URL, request);
+        request.setTags(Arrays.asList("追加标签_1", "追加标签_2","追加标签_3","追加标签_4","追加标签_5","追加标签_6","追加标签_7","追加标签_8","追加标签_9","追加标签_10","追加标签_11"));
+        this.requestPost(FUNCTIONAL_CASE_BATCH_EDIT_URL, request);
         request.setAppend(false);
         request.setTags(Arrays.asList("覆盖标签1", "覆盖标签2"));
         request.setSelectAll(true);

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestCaseControllerTests.java
Patch:
@@ -929,6 +929,9 @@ public void batchEdit() throws Exception {
         //标签为空  报错
         request.setTags(new LinkedHashSet<>());
         this.requestPost(BATCH_EDIT, request, ERROR_REQUEST_MATCHER);
+        //标签超出10个报错
+        request.setTags(new LinkedHashSet<>(List.of("tag1", "tag2", "tag3", "tag4", "tag5", "tag6", "tag7", "tag8", "tag9", "tag10", "tag11")));
+        this.requestPost(BATCH_EDIT, request, ERROR_REQUEST_MATCHER);
         //ids为空的时候
         request.setTags(new LinkedHashSet<>(List.of("tag1")));
         request.setSelectAll(true);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiReportSendNoticeService.java
Patch:
@@ -96,9 +96,8 @@ public void sendNotice(ApiNoticeDTO noticeDTO) {
 
             // TODO 是否需要区分场景和用例
             noticeType = NoticeConstants.TaskType.API_DEFINITION_TASK;
-            reportUrl = String.format(reportUrl, project.getOrganizationId(), project.getId(), API_CASE, report.getId());
-
             ApiReport apiReport = apiReportMapper.selectByPrimaryKey(noticeDTO.getReportId());
+            reportUrl = String.format(reportUrl, project.getOrganizationId(), project.getId(), API_CASE, apiReport.getId());
             BeanUtils.copyBean(report, apiReport);
             if (StringUtils.endsWithIgnoreCase(noticeDTO.getReportStatus(), ApiReportStatus.SUCCESS.name())) {
                 event = NoticeConstants.Event.CASE_EXECUTE_SUCCESSFUL;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionModuleService.java
Patch:
@@ -178,7 +178,7 @@ public void deleteModule(List<String> deleteIds, String currentUser, String proj
 
     public void batchDeleteData(List<String> ids, String userId, String projectId) {
         ApiDefinitionExample example = new ApiDefinitionExample();
-        example.createCriteria().andModuleIdIn(ids).andDeletedEqualTo(false);
+        example.createCriteria().andModuleIdIn(ids);
         long apiCount = apiDefinitionMapper.countByExample(example);
         while (apiCount > 0) {
             PageHelper.startPage(1, 500);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioModuleService.java
Patch:
@@ -170,7 +170,7 @@ public void deleteModule(List<String> deleteIds, String currentUser, String proj
 
     public void batchDeleteData(List<String> ids, String userId, String projectId) {
         ApiScenarioExample example = new ApiScenarioExample();
-        example.createCriteria().andModuleIdIn(ids).andDeletedEqualTo(false);
+        example.createCriteria().andModuleIdIn(ids);
         long apiCount = apiScenarioMapper.countByExample(example);
         while (apiCount > 0) {
             PageHelper.startPage(1, 500);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiBatchRunBaseService.java
Patch:
@@ -26,6 +26,7 @@ public class ApiBatchRunBaseService {
      */
     public ExecutionQueue initExecutionqueue(List<String> resourceIds, ApiRunModeConfigDTO runModeConfig, String resourceType, Map<String, String> caseReportMap, String userId) {
         ExecutionQueue queue = getExecutionQueue(runModeConfig, resourceType, userId);
+        queue.setRequestCount(runModeConfig.isIntegratedReport() ? resourceIds.size() : 1L);
         List<ExecutionQueueDetail> queueDetails = getExecutionQueueDetails(resourceIds, caseReportMap);
         apiExecutionQueueService.insertQueue(queue, queueDetails);
         return queue;
@@ -57,6 +58,7 @@ public List<ExecutionQueueDetail> getExecutionQueueDetails(List<String> resource
             ExecutionQueueDetail queueDetail = new ExecutionQueueDetail();
             queueDetail.setResourceId(resourceId);
             queueDetail.setSort(sort.getAndIncrement());
+            queueDetail.setRequestCount(1L);
             // caseReportMap 为 null ，说明是集合报告，生成一个虚拟的报告ID
             queueDetail.setReportId(caseReportMap == null ? UUID.randomUUID().toString() : caseReportMap.get(resourceId));
             queueDetails.add(queueDetail);

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/ApiReportShareController.java
Patch:
@@ -28,7 +28,7 @@ public class ApiReportShareController {
     @Operation(summary = "接口测试-接口报告-生成分享链接")
     @RequiresPermissions(PermissionConstants.PROJECT_API_REPORT_SHARE)
     public ShareInfoDTO generateShareInfo(@Validated(Created.class) @RequestBody ApiReportShareRequest request) {
-        return apiReportShareService.gen(request, Objects.requireNonNull(SessionUtils.getUser()));
+        return apiReportShareService.gen(request, SessionUtils.getUserId());
     }
 
     @GetMapping("/get/{id}")

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiDefinitionController.java
Patch:
@@ -217,7 +217,8 @@ public ApiDefinitionDocDTO getDocInfo(@Validated @RequestBody ApiDefinitionDocRe
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_IMPORT)
     @Operation(summary = "接口测试-接口管理-导入接口定义")
     public void testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ImportRequest request) {
-        apiDefinitionService.apiTestImport(file, request, SessionUtils.getUser(), SessionUtils.getCurrentProjectId());
+        request.setUserId(SessionUtils.getUserId());
+        apiDefinitionService.apiTestImport(file, request, SessionUtils.getCurrentProjectId());
     }
 
     @PostMapping("/operation-history")

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -952,7 +952,7 @@ public ApiDefinitionDocDTO getDocInfo(ApiDefinitionDocRequest request) {
         return apiDefinitionDocDTO;
     }
 
-    public void apiTestImport(MultipartFile file, ImportRequest request, SessionUser user, String projectId) {
+    public void apiTestImport(MultipartFile file, ImportRequest request, String projectId) {
         if (file != null) {
             String originalFilename = file.getOriginalFilename();
             if (StringUtils.isNotBlank(originalFilename)) {
@@ -977,7 +977,7 @@ public void apiTestImport(MultipartFile file, ImportRequest request, SessionUser
         }
 
         try {
-            apiDefinitionImportUtilService.importApi(request, apiImport, user);
+            apiDefinitionImportUtilService.importApi(request, apiImport);
         } catch (Exception e) {
             LogUtils.error(e);
             throw new MSException(Translator.get("user_import_format_wrong"));

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterAlias.java
Patch:
@@ -22,4 +22,5 @@ public class JmeterAlias {
     public static final String AUTH_PANEL = "AuthPanel";
     public static final String ARGUMENTS_PANEL = "ArgumentsPanel";
     public static final String BEAN_SHELL_ASSERTION_GUI = "BeanShellAssertionGui";
+    public static final String BEAN_SHELL_SAMPLER_GUI = "BeanShellSamplerGui";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterProperty.java
Patch:
@@ -10,4 +10,5 @@ public class JmeterProperty {
     public static final String SCRIPT_LANGUAGE = "scriptLanguage";
     public final static String ASS_OPTION = "ASS_OPTION";
     public final static String BEAN_SHELL_ASSERTION_QUERY = "BeanShellAssertion.query";
+    public final static String BEAN_SHELL_SAMPLER_QUERY = "BeanShellSampler.query";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -256,6 +256,7 @@ public TaskRequestDTO runScript(CustomFunctionRunRequest runRequest) {
         msScriptElement.setEnableCommonScript(true);
         msScriptElement.setName(runRequest.getReportId());
         CommonScriptInfo commonScriptInfo = new CommonScriptInfo();
+        commonScriptInfo.setId(runRequest.getProjectId());
         commonScriptInfo.setParams(runRequest.getParams());
         commonScriptInfo.setScript(runRequest.getScript());
         commonScriptInfo.setScriptLanguage(runRequest.getType());

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/body/Body.java
Patch:
@@ -2,7 +2,6 @@
 
 import jakarta.validation.Valid;
 import jakarta.validation.constraints.NotBlank;
-import jakarta.validation.constraints.Size;
 import lombok.Data;
 
 import java.util.HashMap;
@@ -21,7 +20,6 @@ public class Body {
      * 同时持久化多个类型的请求体
      */
     @NotBlank
-    @Size(max = 20)
     private String bodyType;
     /**
      * None 请求体

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/body/FormDataKV.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.metersphere.api.dto.ApiFile;
 import jakarta.validation.Valid;
-import jakarta.validation.constraints.Size;
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;
 
@@ -26,7 +25,6 @@ public class FormDataKV extends WWWFormKV {
     /**
      * 参数的 contentType
      */
-    @Size(max = 100)
     private String contentType;
 
     public boolean isFile() {

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/body/WWWFormKV.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.metersphere.project.api.KeyValueEnableParam;
 import io.metersphere.system.valid.EnumValue;
-import jakarta.validation.constraints.Size;
 import lombok.Data;
 
 /**
@@ -16,7 +15,6 @@ public class WWWFormKV extends KeyValueEnableParam {
      * 参数类型
      * 取值参考 {@link BodyParamType} 中的 value 属性
      */
-    @Size(max = 20)
     @EnumValue(enumClass = BodyParamType.class)
     private String paramType = BodyParamType.STRING.getValue();
     /**

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/schema/JsonSchemaItem.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.system.valid.EnumValue;
 import jakarta.validation.Valid;
 import jakarta.validation.constraints.NotBlank;
-import jakarta.validation.constraints.Size;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -31,12 +30,10 @@ public class JsonSchemaItem {
      * 参数ID
      */
     @NotBlank
-    @Size(max = 50)
     private String id;
     /**
      * 参数名称
      */
-    @Size(max = 200)
     private String title;
     /**
      * 参数类型

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1019,7 +1019,7 @@ private boolean isApiOrCase(ApiScenarioStepCommonDTO step) {
     /**
      * 遍历步骤树
      */
-    private void traversalStepTree(List<? extends ApiScenarioStepCommonDTO> steps, Function<ApiScenarioStepCommonDTO, Boolean> handleStepFunc) {
+    public void traversalStepTree(List<? extends ApiScenarioStepCommonDTO> steps, Function<ApiScenarioStepCommonDTO, Boolean> handleStepFunc) {
         if (CollectionUtils.isEmpty(steps)) {
             return;
         }
@@ -1998,7 +1998,6 @@ private List<ApiScenarioStepDTO> buildStepTree(List<ApiScenarioStepDTO> steps,
                 scenarioSteps.forEach(item -> {
                     // 如果步骤的场景ID不等于当前场景的ID，说明是引用的步骤，如果 parentId 为空，说明是一级子步骤，重新挂载到对应的场景中
                     if (StringUtils.isEmpty(item.getParentId())) {
-                        item.setParentId(step.getId());
                         children.add(item);
                     }
                 });
@@ -2010,7 +2009,7 @@ private List<ApiScenarioStepDTO> buildStepTree(List<ApiScenarioStepDTO> steps,
                 // 如果当前步骤是引用的场景，获取该场景的子步骤
                 Map<String, List<ApiScenarioStepDTO>> childStepMap = scenarioSteps
                         .stream()
-                        .collect(Collectors.groupingBy(ApiScenarioStepDTO::getParentId));
+                        .collect(Collectors.groupingBy(item -> Optional.ofNullable(item.getParentId()).orElse(StringUtils.EMPTY)));
                 step.setChildren(buildStepTree(children, childStepMap, scenarioStepMap));
             } else {
                 if (CollectionUtils.isEmpty(children)) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/MsHTTPElementTest.java
Patch:
@@ -431,7 +431,6 @@ public static List<MsAssertion> getGeneralXmlAssertions() {
 
     public static MsHTTPElement getMsHttpElement() {
         MsHTTPElement msHTTPElement = new MsHTTPElement();
-        msHTTPElement.setUrl("http://www.test.com");
         msHTTPElement.setPath("/test");
         msHTTPElement.setMethod("GET");
         msHTTPElement.setName("name");

File: backend/services/project-management/src/main/java/io/metersphere/project/api/KeyValueEnableParam.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.project.api;
 
-import jakarta.validation.constraints.Size;
 import lombok.Data;
 
 /**
@@ -18,6 +17,5 @@ public class KeyValueEnableParam extends KeyValueParam {
     /**
      * 描述
      */
-    @Size(max = 500)
     private String description;
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/api/KeyValueParam.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.project.api;
 
-import jakarta.validation.constraints.Size;
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;
 
@@ -14,12 +13,10 @@ public class KeyValueParam {
     /**
      * 键
      */
-    @Size(max = 255)
     private String key;
     /**
      * 值
      */
-    @Size(max = 255)
     private String value;
 
     public boolean isValid() {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsScriptElementConverter.java
Patch:
@@ -29,6 +29,9 @@ public void toHashTree(HashTree hashTree, MsScriptElement msScriptElement, Param
             scriptElement = new BeanShellSampler();
         }
         ScriptProcessorConverter.parse(scriptElement, scriptProcessor, config);
+
+        setStepIdentification(msScriptElement, config, scriptElement);
+
         hashTree.add(scriptElement);
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepCommonDTO.java
Patch:
@@ -31,6 +31,9 @@ public class ApiScenarioStepCommonDTO<T extends ApiScenarioStepCommonDTO> {
     @Schema(description = "资源id")
     private String resourceId;
 
+    @Schema(description = "记录跨项目复制的步骤的原项目ID")
+    private String originProjectId;
+
     /**
      * @see ApiScenarioStepType
      */

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -298,13 +298,13 @@ public void insertData(Map<String, BaseTreeNode> modulePathMap,
         List<LogDTO> operationLogs = new ArrayList<>();
         List<ApiDefinitionImportDetail> updateRequestData = apiDetailWithDataUpdate.getUpdateRequestData();
         updateRequestData.forEach(t -> {
+            ApiDefinition apiDefinition = new ApiDefinition();
             if (CollectionUtils.isNotEmpty(updateModuleLists) && updateModuleLists.contains(t.getId())) {
-                ApiDefinition apiDefinition = new ApiDefinition();
                 apiDefinition.setId(t.getId());
                 apiDefinition.setUpdateUser(request.getUserId());
-                apiDefinition.setUpdateTime(System.currentTimeMillis());
-                apiMapper.updateByPrimaryKeySelective(apiDefinition);
             }
+            apiDefinition.setUpdateTime(System.currentTimeMillis());
+            apiMapper.updateByPrimaryKeySelective(apiDefinition);
             //更新blob数据
             ApiDefinitionBlob apiDefinitionBlob = new ApiDefinitionBlob();
             apiDefinitionBlob.setId(t.getId());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -327,7 +327,7 @@ public void insertData(Map<String, BaseTreeNode> modulePathMap,
                         project.getOrganizationId(),
                         v.getId(),
                         request.getUserId(),
-                        OperationLogType.IMPORT.name(),
+                        OperationLogType.UPDATE.name(),
                         OperationLogModule.API_TEST_MANAGEMENT_DEFINITION,
                         v.getName());
                 dto.setHistory(true);
@@ -376,6 +376,7 @@ public void insertData(Map<String, BaseTreeNode> modulePathMap,
             dto.setPath("/api/definition/import");
             dto.setMethod(HttpMethodConstants.POST.name());
             dto.setOriginalValue(JSON.toJSONBytes(apiDefinitionDTO));
+            operationLogs.add(dto);
 
             ApiDefinitionCaseDTO apiDefinitionCaseDTO = new ApiDefinitionCaseDTO();
             BeanUtils.copyBean(apiDefinitionCaseDTO, t);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/EnvironmentController.java
Patch:
@@ -132,7 +132,6 @@ public void editPos(@Validated @RequestBody PosRequest request) {
 
     @GetMapping("/get-options/{projectId}")
     @Operation(summary = "项目管理-环境-环境目录-列表")
-    @RequiresPermissions(PermissionConstants.PROJECT_ENVIRONMENT_READ)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public List<EnvironmentOptionsDTO> list(@PathVariable String projectId) {
         return environmentService.listOption(projectId);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1621,6 +1621,7 @@ private void parseStep2MsElement(AbstractMsTestElement parentElement,
                 msTestElement.setProjectId(step.getProjectId());
                 msTestElement.setResourceId(step.getResourceId());
                 msTestElement.setStepId(step.getId());
+                msTestElement.setName(step.getName());
 
                 // 记录引用的资源ID和项目ID，下载执行文件时需要使用
                 parseParam.getRefProjectIds().add(step.getProjectId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -62,7 +62,7 @@ private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.Variabl
     }
 
     public boolean isValid(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {
-        return StringUtils.isNotBlank(variableAssertionItem.getVariableName()) && StringUtils.isNotBlank(variableAssertionItem.getExpectedValue())
+        return StringUtils.isNotBlank(variableAssertionItem.getVariableName())
                 && StringUtils.isNotBlank(variableAssertionItem.getCondition());
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/body/JSONPathAssertionConverter.java
Patch:
@@ -35,6 +35,7 @@ private JSONPathAssertion parse2JSONPathAssertion(MsJSONPathAssertionItem msAsse
         String expression = msAssertion.getExpression();
         String expectedValue = msAssertion.getExpectedValue();
         assertion.setName(String.format("Response data JSONPath expect %s %s %s", expression, condition.toLowerCase().replace("_", ""), expectedValue));
+        assertion.setEnabled(msAssertion.getEnable());
         if (BooleanUtils.isFalse(globalEnable)) {
             // 如果整体禁用，则禁用
             assertion.setEnabled(false);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/body/RegexAssertionConverter.java
Patch:
@@ -35,6 +35,7 @@ private ResponseAssertion parse2RegexResponseAssertion(MsRegexAssertionItem msAs
         assertion.setName("Response data expect regex " + msAssertion.getExpression());
         assertion.addTestString(msAssertion.getExpression());
         assertion.setTestFieldResponseData();
+        assertion.setEnabled(msAssertion.getEnable());
         if (BooleanUtils.isFalse(globalEnable)) {
             // 如果整体禁用，则禁用
             assertion.setEnabled(false);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/body/XPathAssertionConverter.java
Patch:
@@ -51,6 +51,7 @@ private XPathAssertion parse2XPathAssertion(MsXPathAssertionItem msAssertion, Bo
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass(XPATH_ASSERTION_GUI));
         assertion.setXPathString(msAssertion.getExpression());
         assertion.setNegated(false);
+        assertion.setEnabled(msAssertion.getEnable());
         if (BooleanUtils.isFalse(globalEnable)) {
             // 如果整体禁用，则禁用
             assertion.setEnabled(false);
@@ -66,6 +67,7 @@ private XPath2Assertion parse2XPath2Assertion(MsXPathAssertionItem msAssertion,
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass(X_PATH_2_ASSERTION_GUI));
         assertion.setXPathString(msAssertion.getExpression());
         assertion.setNegated(false);
+        assertion.setEnabled(msAssertion.getEnable());
         if (BooleanUtils.isFalse(globalEnable)) {
             // 如果整体禁用，则禁用
             assertion.setEnabled(false);

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/body/MsJSONPathAssertionItem.java
Patch:
@@ -30,7 +30,7 @@ public class MsJSONPathAssertionItem extends MsBodyAssertionItem {
     private String expectedValue;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression) && StringUtils.isNotBlank(condition) && StringUtils.isNotBlank(expectedValue);
+        return StringUtils.isNotBlank(expression) && StringUtils.isNotBlank(condition);
     }
 }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterAlias.java
Patch:
@@ -21,4 +21,5 @@ public class JmeterAlias {
     public static final String HEADER_PANEL = "HeaderPanel";
     public static final String AUTH_PANEL = "AuthPanel";
     public static final String ARGUMENTS_PANEL = "ArgumentsPanel";
+    public static final String BEAN_SHELL_ASSERTION_GUI = "BeanShellAssertionGui";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/constants/JmeterProperty.java
Patch:
@@ -9,4 +9,5 @@ public class JmeterProperty {
     public static final String CACHE_KEY = "cacheKey";
     public static final String SCRIPT_LANGUAGE = "scriptLanguage";
     public final static String ASS_OPTION = "ASS_OPTION";
+    public final static String BEAN_SHELL_ASSERTION_QUERY = "BeanShellAssertion.query";
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -918,7 +918,7 @@ private void addSpecialStepDetails(List<ApiScenarioStepRequest> steps, Map<Strin
         });
 
         // 处理新copy的步骤的步骤详情
-        putCopyStepDetails(stepDetails, isNewApiCaseResourceMap, (subIds, copyFromBlobMap) -> {
+        putCopyStepDetails(stepDetails, copyFromStepIdMap, (subIds, copyFromBlobMap) -> {
             ApiScenarioStepBlobExample example = new ApiScenarioStepBlobExample();
             example.createCriteria().andIdIn(subIds);
             apiScenarioStepBlobMapper.selectByExampleWithBLOBs(example)

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationUserRoleService.java
Patch:
@@ -47,8 +47,8 @@ public List<UserRole> list(String organizationId) {
                 .andScopeIdIn(Arrays.asList(organizationId, UserRoleEnum.GLOBAL.toString()));
         example.setOrderByClause("create_time asc");
         List<UserRole> userRoles = userRoleMapper.selectByExample(example);
-        userRoles.sort(Comparator.comparing(UserRole::getInternal)
-                .thenComparing(UserRole::getScopeId).thenComparing(Comparator.comparing(UserRole::getCreateTime).reversed()).reversed());
+        userRoles.sort(Comparator.comparing(UserRole::getInternal).thenComparing(UserRole::getScopeId)
+                .thenComparing(Comparator.comparing(UserRole::getCreateTime).thenComparing(UserRole::getId).reversed()).reversed());
         return userRoles;
     }
 

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioReportControllerTests.java
Patch:
@@ -297,6 +297,7 @@ public void testGet() throws Exception {
             apiReportDetail.setId("test-report-detail-id" + i + 2);
             apiReportDetail.setReportId("test-scenario-report-id");
             apiReportDetail.setStepId("test-scenario-report-step-id" + i);
+            apiReportDetail.setSort((long) i);
             if (i % 2 == 0) {
                 apiReportDetail.setStatus(ApiReportStatus.SUCCESS.name());
                 apiReportDetail.setResponseSize(1L);
@@ -381,6 +382,7 @@ public void testGetDetail() throws Exception {
             apiReportDetail.setStatus("success");
             apiReportDetail.setResponseSize(0L);
             apiReportDetail.setRequestTime((long) i);
+            apiReportDetail.setSort((long) i);
             apiReportDetail.setContent("{\"resourceId\":\"\",\"stepId\":null,\"threadName\":\"Thread Group\",\"name\":\"HTTP Request1\",\"url\":\"https://www.baidu.com/\",\"requestSize\":195,\"startTime\":1705570589125,\"endTime\":1705570589310,\"error\":1,\"headers\":\"Connection: keep-alive\\nContent-Length: 0\\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\\nHost: www.baidu.com\\nUser-Agent: Apache-HttpClient/4.5.14 (Java/21)\\n\",\"cookies\":\"\",\"body\":\"POST https://www.baidu.com/\\n\\nPOST data:\\n\\n\\n[no cookies]\\n\",\"status\":\"ERROR\",\"method\":\"POST\",\"assertionTotal\":1,\"passAssertionsTotal\":0,\"subRequestResults\":[],\"responseResult\":{\"responseCode\":\"200\",\"responseMessage\":\"OK\",\"responseTime\":185,\"latency\":180,\"responseSize\":2559,\"headers\":\"HTTP/1.1 200 OK\\nContent-Length: 2443\\nContent-Type: text/html\\nServer: bfe\\nDate: Thu, 18 Jan 2024 09:36:29 GMT\\n\",\"body\":\"<!DOCTYPE html>\\r\\n<!--STATUS OK--><html> <head><meta http-equiv=content-type content=text/html;charset=utf-8><meta http-equiv=X-UA-Compatible content=IE=Edge><meta content=always name=referrer><link rel=stylesheet type=text/css href=https://ss1.bdstatic.com/5eN1bjq8AAUYm2zgoY3K/r/www/cache/bdorz/baidu.min.css><title>百度一下，你就知道</title></head> <body link=#0000cc> <div id=wrapper> <div id=head> <div class=head_wrapper> <div class=s_form> <div class=s_form_wrapper> <div id=lg> <img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129> </div> <form id=form name=f action=//www.baidu.com/s class=fm> <input type=hidden name=bdorz_come value=1> <input type=hidden name=ie value=utf-8> <input type=hidden name=f value=8> <input type=hidden name=rsv_bp value=1> <input type=hidden name=rsv_idx value=1> <input type=hidden name=tn value=baidu><span class=\\\"bg s_ipt_wr\\\"><input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus=autofocus></span><span class=\\\"bg s_btn_wr\\\"><input type=submit id=su value=百度一下 class=\\\"bg s_btn\\\" autofocus></span> </form> </div> </div> <div id=u1> <a href=http://news.baidu.com name=tj_trnews class=mnav>新闻</a> <a href=https://www.hao123.com name=tj_trhao123 class=mnav>hao123</a> <a href=http://map.baidu.com name=tj_trmap class=mnav>地图</a> <a href=http://v.baidu.com name=tj_trvideo class=mnav>视频</a> <a href=http://tieba.baidu.com name=tj_trtieba class=mnav>贴吧</a> <noscript> <a href=http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb>登录</a> </noscript> <script>document.write('<a href=\\\"http://www.baidu.com/bdorz/login.gif?login&tpl=mn&u='+ encodeURIComponent(window.location.href+ (window.location.search === \\\"\\\" ? \\\"?\\\" : \\\"&\\\")+ \\\"bdorz_come=1\\\")+ '\\\" name=\\\"tj_login\\\" class=\\\"lb\\\">登录</a>');\\r\\n                </script> <a href=//www.baidu.com/more/ name=tj_briicon class=bri style=\\\"display: block;\\\">更多产品</a> </div> </div> </div> <div id=ftCon> <div id=ftConw> <p id=lh> <a href=http://home.baidu.com>关于百度</a> <a href=http://ir.baidu.com>About Baidu</a> </p> <p id=cp>&copy;2017&nbsp;Baidu&nbsp;<a href=http://www.baidu.com/duty/>使用百度前必读</a>&nbsp; <a href=http://jianyi.baidu.com/ class=cp-feedback>意见反馈</a>&nbsp;京ICP证030173号&nbsp; <img src=//www.baidu.com/img/gs.gif> </p> </div> </div> </div> </body> </html>\\r\\n\",\"contentType\":\"text/html\",\"vars\":null,\"imageUrl\":null,\"socketInitTime\":14,\"dnsLookupTime\":0,\"tcpHandshakeTime\":0,\"sslHandshakeTime\":0,\"transferStartTime\":166,\"downloadTime\":5,\"bodySize\":2443,\"headerSize\":116,\"assertions\":[{\"name\":\"JSON Assertion\",\"content\":null,\"script\":null,\"message\":\"Expected to find an object with property ['test'] in path $ but found 'java.lang.String'. This is not a json object according to the JsonProvider: 'com.jayway.jsonpath.spi.json.JsonSmartJsonProvider'.\",\"pass\":false}]},\"isSuccessful\":false,\"fakeErrorMessage\":\"\",\"fakeErrorCode\":null}\n".getBytes());
             reports.add(apiReportDetail);
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/MsHTTPConfig.java
Patch:
@@ -14,11 +14,11 @@ public class MsHTTPConfig {
     /**
      * 连接超时
      */
-    private Long connectTimeout = 6000L;
+    private Long connectTimeout = 60000L;
     /**
      * 响应超时
      */
-    private Long responseTimeout = 6000L;
+    private Long responseTimeout = 60000L;
     /**
      * 证书别名
      */

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/environment/common/CommonParams.java
Patch:
@@ -11,7 +11,7 @@ public class CommonParams implements Serializable {
     @Serial
     private static final long serialVersionUID = 1L;
     @Schema(description = "链接超时时间")
-    private Long requestTimeout = 600000L;
+    private Long requestTimeout = 60000L;
     @Schema(description = "响应超时时间")
-    private Long responseTimeout = 600000L;
+    private Long responseTimeout = 60000L;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepCommonDTO.java
Patch:
@@ -19,7 +19,7 @@
  * @CreateTime: 2024-01-10  11:24
  */
 @Data
-public class ApiScenarioStepCommonDTO {
+public class ApiScenarioStepCommonDTO<T extends ApiScenarioStepCommonDTO> {
     @Schema(description = "步骤id", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{api_scenario_step.id.not_blank}")
     @Size(max = 50, message = "{api_scenario_step.id.length_range}")
@@ -75,5 +75,5 @@ public class ApiScenarioStepCommonDTO {
 
     @Valid
     @Schema(description = "子步骤")
-    private List<? extends ApiScenarioStepCommonDTO> children;
+    private List<T> children;
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepDTO.java
Patch:
@@ -8,7 +8,7 @@
  * @CreateTime: 2024-01-10  11:24
  */
 @Data
-public class ApiScenarioStepDTO extends ApiScenarioStepCommonDTO {
+public class ApiScenarioStepDTO extends ApiScenarioStepCommonDTO<ApiScenarioStepDTO> {
 
     @Schema(description = "场景id")
     private String scenarioId;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioStepRequest.java
Patch:
@@ -7,7 +7,7 @@
  * @CreateTime: 2024-01-10  11:24
  */
 @Data
-public class ApiScenarioStepRequest extends ApiScenarioStepCommonDTO {
+public class ApiScenarioStepRequest extends ApiScenarioStepCommonDTO<ApiScenarioStepRequest> {
     /**
      * 记录是从哪个步骤复制来的
      * 如果没有传步骤详情

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -809,14 +809,14 @@ private boolean hasDetail(ApiScenarioStepCommonDTO step) {
      * 解析步骤树结构
      * 获取待更新的 ApiScenarioStep 列表
      */
-    private List<ApiScenarioStep> getApiScenarioSteps(ApiScenarioStepCommonDTO parent,
-                                                      List<? extends ApiScenarioStepCommonDTO> steps, List<ApiScenarioCsvStep> csvSteps) {
+    private List<ApiScenarioStep> getApiScenarioSteps(ApiScenarioStepRequest parent,
+                                                      List<ApiScenarioStepRequest> steps, List<ApiScenarioCsvStep> csvSteps) {
         if (CollectionUtils.isEmpty(steps)) {
             return Collections.emptyList();
         }
         List<ApiScenarioStep> apiScenarioSteps = new ArrayList<>();
         long sort = 1;
-        for (ApiScenarioStepCommonDTO step : steps) {
+        for (ApiScenarioStepRequest step : steps) {
             ApiScenarioStep apiScenarioStep = new ApiScenarioStep();
             BeanUtils.copyBean(apiScenarioStep, step);
             apiScenarioStep.setSort(sort++);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncNoticeService.java
Patch:
@@ -23,7 +23,7 @@ public class BugSyncNoticeService {
     @Resource
     private NoticeSendService noticeSendService;
 
-    public void sendNotice(int total, String currentUser, String projectId) {
+    public void sendNotice(int total, String currentUser, String language, String projectId) {
         User user = userMapper.selectByPrimaryKey(currentUser);
         Map<String, String> defaultTemplateMap = MessageTemplateUtils.getDefaultTemplateMap();
         String template = defaultTemplateMap.get(NoticeConstants.TemplateText.BUG_SYNC_TASK_EXECUTE_COMPLETED);
@@ -34,6 +34,7 @@ public void sendNotice(int total, String currentUser, String projectId) {
         paramMap.put(NoticeConstants.RelatedUser.OPERATOR, user.getName());
         paramMap.put("total", total);
         paramMap.put("projectId", projectId);
+        paramMap.put("Language", language);
         NoticeModel noticeModel = NoticeModel.builder().operator(currentUser)
                 .context(template).subject(subject).paramMap(paramMap).event(NoticeConstants.Event.EXECUTE_COMPLETED).build();
         noticeSendService.send(NoticeConstants.TaskType.BUG_SYNC_TASK, noticeModel);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/XpackBugService.java
Patch:
@@ -20,7 +20,8 @@ public interface XpackBugService {
      * @param project 项目
      * @param request 同步请求参数
      * @param currentUser 当前用户
+     * @param language 语言环境
      */
-    void syncPlatformBugs(Project project, BugSyncRequest request, String currentUser);
+    void syncPlatformBugs(Project project, BugSyncRequest request, String currentUser, String language);
 
 }

File: backend/services/bug-management/src/test/java/io/metersphere/bug/mock/XpackBugMockServiceImpl.java
Patch:
@@ -14,7 +14,7 @@ public void syncPlatformBugsBySchedule(String projectId, String scheduleUser) {
     }
 
     @Override
-    public void syncPlatformBugs(Project project, BugSyncRequest request, String currentUser) {
+    public void syncPlatformBugs(Project project, BugSyncRequest request, String currentUser, String language) {
 
     }
 }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -981,7 +981,7 @@ public void testLoopController() throws Exception {
         constantTimer.setId(IDGenerator.nextStr());
         stepDetails.put(constantTimer.getId(), JSON.parseObject(ApiDataUtils.toJSONString(constantTimerController)));
         config = new LinkedHashMap<>();
-        config.put("waitTime", 1000);
+        config.put("delay", 1000L);
         constantTimer.setConfig(config);
         steps.add(constantTimer);
         constantTimerController = constantTimerController("test-constant-timer", false);
@@ -992,7 +992,7 @@ public void testLoopController() throws Exception {
         constantTimer.setId(IDGenerator.nextStr());
         stepDetails.put(constantTimer.getId(), JSON.parseObject(ApiDataUtils.toJSONString(constantTimerController)));
         config = new LinkedHashMap<>();
-        config.put("waitTime", 1000);
+        config.put("delay", 1000L);
         constantTimer.setConfig(config);
         steps.add(constantTimer);
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugLogService.java
Patch:
@@ -39,7 +39,7 @@ public class BugLogService {
      * @return 日志
      */
     public LogDTO addLog(BugEditRequest request, List<MultipartFile> files) {
-        LogDTO dto = new LogDTO(request.getProjectId(), null, null, null, OperationLogType.ADD.name(), OperationLogModule.BUG_MANAGEMENT_CREATE, request.getTitle());
+        LogDTO dto = new LogDTO(request.getProjectId(), null, null, null, OperationLogType.ADD.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, request.getTitle());
         dto.setHistory(true);
         dto.setPath("/bug/add");
         dto.setMethod(HttpMethodConstants.POST.name());
@@ -56,7 +56,7 @@ public LogDTO addLog(BugEditRequest request, List<MultipartFile> files) {
      */
     public LogDTO updateLog(BugEditRequest request, List<MultipartFile> files) {
         BugDTO history = getOriginalValue(request.getId());
-        LogDTO dto = new LogDTO(request.getProjectId(), null, request.getId(), null, OperationLogType.UPDATE.name(), OperationLogModule.BUG_MANAGEMENT_UPDATE, request.getTitle());
+        LogDTO dto = new LogDTO(request.getProjectId(), null, request.getId(), null, OperationLogType.UPDATE.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, request.getTitle());
         dto.setHistory(true);
         dto.setPath("/bug/update");
         dto.setMethod(HttpMethodConstants.POST.name());

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -145,8 +145,6 @@ public class OperationLogModule {
     // 缺陷管理
     public static final String BUG_MANAGEMENT_INDEX = "BUG_MANAGEMENT_BUG_INDEX";
     public static final String BUG_MANAGEMENT_RECYCLE = "BUG_MANAGEMENT_BUG_RECYCLE";
-    public static final String BUG_MANAGEMENT_CREATE = "BUG_MANAGEMENT_BUG_INDEX_CREATE";
-    public static final String BUG_MANAGEMENT_UPDATE = "BUG_MANAGEMENT_BUG_INDEX_UPDATE";
     //测试计划
     public static final String TEST_PLAN = "TEST_PLAN";
     public static final String TEST_PLAN_MODULE = "TEST_PLAN_MODULE";

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -187,12 +187,14 @@ public ApiReportDTO get(String id) {
         //查询资源池名称
         apiReportDTO.setPoolName(testResourcePoolMapper.selectByPrimaryKey(apiReportDTO.getPoolId()).getName());
         //查询环境名称
+        String environmentName = Translator.get("api_report_default_env");
         if (StringUtils.isNoneBlank(apiReportDTO.getEnvironmentId())) {
             Environment environment = environmentMapper.selectByPrimaryKey(apiReportDTO.getEnvironmentId());
             if (environment != null) {
-                apiReportDTO.setEnvironmentName(environment.getName());
+                environmentName = environment.getName();
             }
         }
+        apiReportDTO.setEnvironmentName(environmentName);
         apiReportDTO.setCreatUserName(userMapper.selectByPrimaryKey(apiReportDTO.getCreateUser()).getName());
         //需要查询出所有的步骤
         if (BooleanUtils.isTrue(apiReport.getIntegrated())) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -201,12 +201,14 @@ public ApiScenarioReportDTO get(String id) {
         //查询资源池名称
         scenarioReportDTO.setPoolName(testResourcePoolMapper.selectByPrimaryKey(scenarioReport.getPoolId()).getName());
         //查询环境名称
+        String environmentName = Translator.get("api_report_default_env");
         if (StringUtils.isNotBlank(scenarioReport.getEnvironmentId())) {
             Environment environment = environmentMapper.selectByPrimaryKey(scenarioReport.getEnvironmentId());
             if (environment != null) {
-                scenarioReportDTO.setEnvironmentName(environment.getName());
+                environmentName = environment.getName();
             }
         }
+        scenarioReportDTO.setEnvironmentName(environmentName);
         scenarioReportDTO.setCreatUserName(userMapper.selectByPrimaryKey(scenarioReport.getCreateUser()).getName());
         return scenarioReportDTO;
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/api/assertion/body/MsXPathAssertionItem.java
Patch:
@@ -21,6 +21,6 @@ public class MsXPathAssertionItem extends MsBodyAssertionItem {
     private String expectedValue;
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression) && StringUtils.isNotBlank(expectedValue);
+        return StringUtils.isNotBlank(expression);
     }
 }
\ No newline at end of file

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/ApiExecuteResourceController.java
Patch:
@@ -44,8 +44,8 @@ public String getScript(@RequestParam("reportId") String reportId, @RequestParam
         LogUtils.info("获取执行脚本: {}", key);
         String script = stringRedisTemplate.opsForValue().get(key);
         stringRedisTemplate.delete(key);
-        apiReportService.updateReportStatus(reportId, ApiReportStatus.RERUNNING.name());
-        apiScenarioReportService.updateReportStatus(reportId, ApiReportStatus.RERUNNING.name());
+        apiReportService.updateReportStatus(reportId, ApiReportStatus.RUNNING.name());
+        apiScenarioReportService.updateReportStatus(reportId, ApiReportStatus.RUNNING.name());
         return Optional.ofNullable(script).orElse(StringUtils.EMPTY);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/step/ApiStepParser.java
Patch:
@@ -62,7 +62,6 @@ public Object parseDetail(ApiScenarioStep step) {
         } else {
             return parse2MsTestElement(getStepBlobString(step.getId()));
         }
-
     }
 
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1432,10 +1432,9 @@ public FileRequest buildBugFileRequest(String projectId, String resourceId, Stri
      */
     private FileRequest buildTmpImageFileRequest(String fileId) {
         FileRequest fileRequest = new FileRequest();
-        fileRequest.setFolder(DefaultRepositoryDir.getSystemTempCompressDir() + "/" + fileId);
-        // 临时图片文件名称固定为image.png
-        fileRequest.setFileName("image.png");
+        fileRequest.setFolder(DefaultRepositoryDir.getSystemTempDir() + "/" + fileId);
         fileRequest.setStorage(StorageType.MINIO.name());
+        fileRequest.setFileName(bugAttachmentService.getTempFileNameByFileId(fileId));
         return fileRequest;
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -228,14 +228,14 @@ public TemplateDTO getTemplateDetail(@RequestBody BugTemplateRequest request) {
 
     @GetMapping("/follow/{id}")
     @Operation(summary = "缺陷管理-详情-关注缺陷")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public void follow(@PathVariable String id) {
         bugService.follow(id, SessionUtils.getUserId());
     }
 
     @GetMapping("/unfollow/{id}")
     @Operation(summary = "缺陷管理-详情-取消关注缺陷")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public void unfollow(@PathVariable String id) {
         bugService.unfollow(id, SessionUtils.getUserId());
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectController.java
Patch:
@@ -42,7 +42,6 @@ public ProjectDTO getProject(@PathVariable String id) {
 
     @GetMapping("/list/options/{organizationId}")
     @Operation(summary = "根据组织ID获取所有有权限的项目")
-    @RequiresPermissions(PermissionConstants.PROJECT_BASE_INFO_READ)
     public List<Project> getUserProject(@PathVariable String organizationId) {
         return projectService.getUserProject(organizationId, SessionUtils.getUserId());
     }

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectControllerTests.java
Patch:
@@ -252,9 +252,6 @@ public void testGetOptionsSuccess() throws Exception {
         list = parseObjectFromMvcResult(mvcResult, List.class);
         //断言list是空的
         Assertions.assertEquals(0, list.size());
-
-        //权限校验
-        requestGetPermissionTest(PermissionConstants.PROJECT_BASE_INFO_READ, getOptions + DEFAULT_ORGANIZATION_ID);
     }
 
     @Test

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseCodeAssertionConverter.java
Patch:
@@ -20,7 +20,7 @@ public void parse(HashTree hashTree, MsResponseCodeAssertion msAssertion, Parame
     }
 
     public boolean isValid(MsResponseCodeAssertion msAssertion) {
-        return StringUtils.isNotBlank(msAssertion.getExpectedValue()) && StringUtils.isNotBlank(msAssertion.getCondition());
+        return StringUtils.isNotBlank(msAssertion.getCondition());
     }
 
     private ResponseAssertion parse2ResponseAssertion(MsResponseCodeAssertion msAssertion, boolean isIgnoreStatus) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -2621,9 +2621,6 @@ public void testGetSystemRequest() throws Exception {
         apiScenarioSystemRequest.setScenarioRequest(scenarioSystemRequest);
         apiScenarioSystemRequest.setRefType(ApiScenarioStepRefType.COPY.name());
         this.requestPostWithOkAndReturn("/get/system-request", apiScenarioSystemRequest);
-
-        mockMvc.perform(getRequestBuilder(STEP_GET, "system-scenario-id1"))
-                .andExpect(status().isOk());
     }
 
     @Test

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiCaseBatchEditRequest.java
Patch:
@@ -26,7 +26,7 @@ public class ApiCaseBatchEditRequest extends ApiTestCaseBatchRequest implements
     @NotBlank
     private String type;
     @Schema(description = "默认覆盖原标签")
-    private boolean appendTag = false;
+    private boolean append = false;
     @Schema(description = "环境id")
     @Size(max = 50, message = "{api_test_case.env_id.length_range}")
     private String environmentId;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/scenario/ApiScenarioBatchEditRequest.java
Patch:
@@ -26,7 +26,7 @@ public class ApiScenarioBatchEditRequest extends ApiScenarioBatchRequest impleme
     @NotBlank
     private String type;
     @Schema(description = "默认覆盖原标签")
-    private boolean appendTag = false;
+    private boolean append = false;
     @Schema(description = "环境id")
     @Size(max = 50, message = "{api_test_case.environment_id.length_range}")
     private String envId;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -473,7 +473,7 @@ private void batchUpdateTags(ApiTestCaseExample example, ApiTestCase updateCase,
         if (CollectionUtils.isEmpty(request.getTags())) {
             throw new MSException(Translator.get("tags_is_null"));
         }
-        if (request.isAppendTag()) {
+        if (request.isAppend()) {
             Map<String, ApiTestCase> caseMap = extApiTestCaseMapper.getTagsByIds(ids, false)
                     .stream()
                     .collect(Collectors.toMap(ApiTestCase::getId, Function.identity()));

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -330,7 +330,7 @@ private void batchUpdateTags(ApiScenarioExample example, ApiScenario updateScena
         if (CollectionUtils.isEmpty(request.getTags())) {
             throw new MSException(Translator.get("tags_is_null"));
         }
-        if (request.isAppendTag()) {
+        if (request.isAppend()) {
             Map<String, ApiScenario> scenarioMap = extApiScenarioMapper.getTagsByIds(ids, false)
                     .stream()
                     .collect(Collectors.toMap(ApiScenario::getId, Function.identity()));

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -1397,7 +1397,7 @@ public void batchEdit() throws Exception {
         ApiScenarioBatchEditRequest request = new ApiScenarioBatchEditRequest();
         request.setProjectId(DEFAULT_PROJECT_ID);
         request.setType("Tags");
-        request.setAppendTag(true);
+        request.setAppend(true);
         request.setSelectAll(true);
         request.setTags(new LinkedHashSet<>(List.of("tag1", "tag3", "tag4")));
         requestPostAndReturn(BATCH_EDIT, request);
@@ -1411,7 +1411,7 @@ public void batchEdit() throws Exception {
         });
         //覆盖标签
         request.setTags(new LinkedHashSet<>(List.of("tag1")));
-        request.setAppendTag(false);
+        request.setAppend(false);
         requestPostAndReturn(BATCH_EDIT, request);
         apiScenarioMapper.selectByExample(example).forEach(scenario -> {
             Assertions.assertEquals(scenario.getTags(), List.of("tag1"));

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestCaseControllerTests.java
Patch:
@@ -895,7 +895,7 @@ public void batchEdit() throws Exception {
         ApiCaseBatchEditRequest request = new ApiCaseBatchEditRequest();
         request.setProjectId(DEFAULT_PROJECT_ID);
         request.setType("Tags");
-        request.setAppendTag(true);
+        request.setAppend(true);
         request.setSelectAll(true);
         request.setTags(new LinkedHashSet<>(List.of("tag1", "tag3", "tag4")));
         requestPostWithOkAndReturn(BATCH_EDIT, request);
@@ -909,7 +909,7 @@ public void batchEdit() throws Exception {
         });
         //覆盖标签
         request.setTags(new LinkedHashSet<>(List.of("tag1")));
-        request.setAppendTag(false);
+        request.setAppend(false);
         requestPostWithOkAndReturn(BATCH_EDIT, request);
         apiTestCaseMapper.selectByExample(example).forEach(apiTestCase -> {
             Assertions.assertEquals(apiTestCase.getTags(), List.of("tag1"));

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/ApiExecuteResourceController.java
Patch:
@@ -41,7 +41,7 @@ public class ApiExecuteResourceController {
     @GetMapping("script")
     public String getScript(@RequestParam("reportId") String reportId, @RequestParam("testId") String testId) {
         String key = apiExecuteService.getScriptRedisKey(reportId, testId);
-        LogUtils.info("获取执行脚本: ", key);
+        LogUtils.info("获取执行脚本: {}", key);
         String script = stringRedisTemplate.opsForValue().get(key);
         stringRedisTemplate.delete(key);
         apiReportService.updateReportStatus(reportId, ApiReportStatus.RERUNNING.name());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/JmeterTestElementParser.java
Patch:
@@ -45,12 +45,13 @@ public String parse(AbstractMsTestElement msTestElement, ParameterConfig config)
         name = msTestElement.getName();
         final HashTree testPlanTree = hashTree.add(testPlan);
         final HashTree groupTree = testPlanTree.add(getThreadGroup());
-        // 添加 debugSampler
-        groupTree.add(getDebugSampler());
 
         // 解析 msTestElement
         JmeterElementConverterRegister.getConverter(msTestElement.getClass()).toHashTree(groupTree, msTestElement, config);
 
+        // 添加 debugSampler，放最后才能采集到变量信息
+        groupTree.add(getDebugSampler());
+
         return getJmx(hashTree);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsCommentScriptElementConverter.java
Patch:
@@ -53,7 +53,7 @@ public void toHashTree(HashTree hashTree, MsCommentScriptElement msElement, Para
         } else {
             scriptElement = new BeanShellSampler();
         }
-        ScriptProcessorConverter.parse(scriptElement, scriptProcessor);
+        ScriptProcessorConverter.parse(scriptElement, scriptProcessor, config);
         // 添加公共脚本的参数
         Optional.ofNullable(ScriptProcessorConverter.getScriptArguments(scriptProcessor))
                 .ifPresent(hashTree::add);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScenarioScriptProcessorConverter.java
Patch:
@@ -22,6 +22,7 @@ public void parse(HashTree hashTree, ScriptProcessor scriptProcessor, ParameterC
         if (!needParse(scriptProcessor, config) || !scriptProcessor.isValid()) {
             return;
         }
+
         EnvScenarioScriptProcessor scenarioScriptProcessor = (EnvScenarioScriptProcessor) scriptProcessor;
         Boolean associateScenarioResult = scenarioScriptProcessor.getAssociateScenarioResult();
 
@@ -32,7 +33,7 @@ public void parse(HashTree hashTree, ScriptProcessor scriptProcessor, ParameterC
             processor = new BeanShellSampler();
         }
 
-        parse(processor, scriptProcessor);
+        parse(processor, scriptProcessor, config);
 
         // 添加公共脚本的参数
         Optional.ofNullable(getScriptArguments(scriptProcessor))

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScriptPostProcessorConverter.java
Patch:
@@ -25,7 +25,7 @@ public void parse(HashTree hashTree, ScriptProcessor scriptProcessor, ParameterC
         } else {
             processor = new BeanShellPostProcessor();
         }
-        parse(processor, scriptProcessor);
+        parse(processor, scriptProcessor, config);
 
         // 添加公共脚本的参数
         Optional.ofNullable(getScriptArguments(scriptProcessor))

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScriptPreProcessorConverter.java
Patch:
@@ -25,7 +25,7 @@ public void parse(HashTree hashTree, ScriptProcessor scriptProcessor, ParameterC
         } else {
             processor = new BeanShellPreProcessor();
         }
-        parse(processor, scriptProcessor);
+        parse(processor, scriptProcessor, config);
 
         // 添加公共脚本的参数
         Optional.ofNullable(getScriptArguments(scriptProcessor))

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ScriptAssertionConverter.java
Patch:
@@ -30,7 +30,7 @@ public void parse(HashTree hashTree, MsScriptAssertion msAssertion, ParameterCon
             assertion = new BeanShellAssertion();
         }
         ScriptProcessor scriptProcessor = BeanUtils.copyBean(new ScriptProcessor(), msAssertion);
-        ScriptProcessorConverter.parse(assertion, scriptProcessor);
+        ScriptProcessorConverter.parse(assertion, scriptProcessor, config);
 
         // 添加公共脚本的参数
         Optional.ofNullable(ScriptProcessorConverter.getScriptArguments(scriptProcessor))

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/VariableAssertionConverter.java
Patch:
@@ -29,7 +29,7 @@ public void parse(HashTree hashTree, MsVariableAssertion msAssertion, ParameterC
                 .filter(this::isValid)
                 .forEach(variableAssertionItem -> {
                     if (needParse(variableAssertionItem, config)) {
-                        JSR223Assertion jsr223Assertion = parse2JSR233Assertion(variableAssertionItem);
+                        JSR223Assertion jsr223Assertion = parse2JSR233Assertion(variableAssertionItem, config);
                         jsr223Assertion.setEnabled(variableAssertionItem.getEnable());
                         if (BooleanUtils.isFalse(globalEnable)) {
                             // 如果整体禁用，则禁用
@@ -45,7 +45,7 @@ protected boolean needParse(MsVariableAssertion.VariableAssertionItem variableAs
         return BooleanUtils.isTrue(variableAssertionItem.getEnable()) || config.getParseDisabledElement();
     }
 
-    private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.VariableAssertionItem variableAssertionItem) {
+    private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.VariableAssertionItem variableAssertionItem, ParameterConfig config) {
         ScriptProcessor scriptProcessor = new ScriptProcessor();
         scriptProcessor.setScript(parse2BeanshellJSR233Script(variableAssertionItem));
 
@@ -57,7 +57,7 @@ private static JSR223Assertion parse2JSR233Assertion(MsVariableAssertion.Variabl
 
         scriptProcessor.setScriptLanguage(ScriptLanguageType.GROOVY.name());
         JSR223Assertion jsr223Assertion = new JSR223Assertion();
-        ScriptProcessorConverter.parse(jsr223Assertion, scriptProcessor);
+        ScriptProcessorConverter.parse(jsr223Assertion, scriptProcessor, config);
         return jsr223Assertion;
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -353,6 +353,7 @@ private void setTaskRefFileParam(ApiResourceRunRequest runRequest, TaskRequestDT
                     ApiExecuteFileInfo apiExecuteFileInfo = getApiExecuteFileInfo(file.getFileId(), file.getFileName(), file.getProjectId());
                     // 本地上传的文件需要 resourceId 查询对应的目录
                     apiExecuteFileInfo.setResourceId(file.getResourceId());
+                    apiExecuteFileInfo.setResourceType(file.getResourceType());
                     return apiExecuteFileInfo;
                 })
                 .collect(Collectors.toList());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1134,7 +1134,7 @@ public TaskRequestDTO executeRun(ApiScenario apiScenario,
         parseConfig.setReportId(reportId);
 
         // 初始化报告
-        initApiReport(apiScenario, reportId, parseParam.getEnvironmentId(), poolId, userId);
+        initApiReport(apiScenario, parseParam.getEnvironmentId(), reportId, poolId, userId);
 
         // 初始化报告步骤
         initScenarioReportSteps(steps, taskRequest.getReportId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugPlatformService.java
Patch:
@@ -27,6 +27,9 @@ public class BugPlatformService {
 	public void syncAttachmentToPlatform(List<SyncAttachmentToPlatformRequest> platformAttachments, String projectId) {
 		// 平台缺陷需同步附件
 		Platform platform = projectApplicationService.getPlatform(projectId, true);
+		if (!platform.isSupportAttachment()) {
+			return;
+		}
 		platformAttachments.forEach(attachment -> {
 			platform.syncAttachmentToPlatform(attachment);
 			try {

File: backend/services/bug-management/src/test/java/io/metersphere/bug/controller/BugControllerTests.java
Patch:
@@ -605,13 +605,15 @@ void coverPlatformBugSyncTests() throws Exception {
         summary.setType("INPUT");
         summary.setValue("这是一个系统Jira模板创建的缺陷");
         addRequest.getCustomFields().add(summary);
+        addRequest.setRichTextTmpFileIds(List.of("rich-text-file-id"));
         MultiValueMap<String, Object> addParam3 = getMultiPartParam(addRequest, null);
         this.requestMultipart(BUG_ADD, addParam3).andExpect(status().is5xxServerError());
 
         // 同步Jira存量缺陷(存量数据为空)
         this.requestGetWithOk(BUG_SYNC + "/default-project-for-bug");
 
         // 添加没有附件的Jira缺陷
+        addRequest.setRichTextTmpFileIds(null);
         addRequest.setLinkFileIds(null);
         addRequest.setTemplateId("default-bug-template-id");
         MultiValueMap<String, Object> addParam2 = getMultiPartParam(addRequest, null);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -245,7 +245,7 @@ private static void getStepTree(List<ApiScenarioReportStepDTO> steps, Map<String
         }
     }
 
-    public List<ApiScenarioReportDetailDTO> getDetail(String stepId, String reportId) {
+    public List<ApiScenarioReportDetailDTO> getDetail(String reportId, String stepId) {
         List<ApiScenarioReportDetail> apiReportDetails = checkResourceStep(stepId, reportId);
         List<ApiScenarioReportDetailDTO> results = new ArrayList<>();
         apiReportDetails.forEach(apiReportDetail -> {

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsHTTPElementConverter.java
Patch:
@@ -325,7 +325,7 @@ private HeaderManager getHttpHeader(MsHTTPElement msHTTPElement, ApiParamConfig
         headerManager.setName(StringUtils.isNotEmpty(msHTTPElement.getName()) ? msHTTPElement.getName() + "_HeaderManager" : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass(HEADER_PANEL));
-        headerMap.forEach((k, v) -> headerManager.add(new Header(k, Mock.buildFunctionCallString(v))));
+        headerMap.forEach((k, v) -> headerManager.add(new org.apache.jmeter.protocol.http.control.Header(k, Mock.buildFunctionCallString(v))));
         return headerManager;
     }
 

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiScenarioControllerTests.java
Patch:
@@ -922,7 +922,7 @@ public void testLoopController() throws Exception {
     public MsIfController ifController(String name, boolean enable) {
         //条件控制器
         MsIfController msIfController = new MsIfController();
-        msIfController.setCondition("==");
+        msIfController.setCondition(MsAssertionCondition.EQUALS.name());
         msIfController.setName(StringUtils.isNotBlank(name) ? name : "条件控制器");
         msIfController.setEnable(enable);
         msIfController.setVariable("1");
@@ -972,7 +972,7 @@ public MsLoopController loopController(String loopType, String condition, boolea
                 if (StringUtils.isNotBlank(condition) && StringUtils.equals(condition, "CONDITION")) {
                     MsWhileVariable msWhileVariable = new MsWhileVariable();
                     msWhileVariable.setVariable("1");
-                    msWhileVariable.setCondition("==");
+                    msWhileVariable.setCondition(MsAssertionCondition.EQUALS.name());
                     msWhileVariable.setValue("1");
                     whileController.setMsWhileVariable(msWhileVariable);
                 } else {

File: backend/services/api-test/src/main/java/io/metersphere/api/utils/JsonSchemaBuilder.java
Patch:
@@ -60,6 +60,9 @@ public static String jsonSchemaToJson(String jsonSchemaString) {
     private static JsonNode generateJson(JsonNode jsonSchemaNode, Map<String, String> processMap) {
         ObjectNode jsonNode = objectMapper.createObjectNode();
 
+        if (jsonSchemaNode instanceof NullNode) {
+            return NullNode.getInstance();
+        }
         String type = jsonSchemaNode.get(PropertyConstant.TYPE).asText();
         if (StringUtils.equals(type, PropertyConstant.OBJECT)) {
             JsonNode propertiesNode = jsonSchemaNode.get(PropertyConstant.PROPERTIES);

File: backend/services/api-test/src/main/java/io/metersphere/api/constants/ApiConstants.java
Patch:
@@ -6,6 +6,7 @@
  */
 public class ApiConstants {
     public static final String HTTP_PROTOCOL = "HTTP";
+    public static final String CONTENT_TYPE = "Content-Type";
 
     private ApiConstants() {}
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/HttpResponse.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.api.dto.definition;
 
-import io.metersphere.api.dto.request.http.Header;
+import io.metersphere.api.dto.request.http.MsHeader;
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.Valid;
 import lombok.Data;
@@ -35,7 +35,7 @@ public class HttpResponse implements Serializable {
 
     @Schema(description = "响应请求头")
     @Valid
-    private List<Header> headers;
+    private List<MsHeader> headers;
 
     @Schema(description = "响应请求体")
     @Valid

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/mockserver/MockResponse.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.dto.mockserver;
 
 import io.metersphere.api.dto.definition.ResponseBody;
-import io.metersphere.api.dto.request.http.Header;
+import io.metersphere.api.dto.request.http.MsHeader;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -17,7 +17,7 @@ public class MockResponse implements Serializable {
     private int statusCode;
 
     @Schema(description = "响应请求头")
-    private List<Header> headers;
+    private List<MsHeader> headers;
 
     @Schema(description = "是否使用api响应体")
     private boolean useApiResponse;

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/MsHTTPElement.java
Patch:
@@ -51,7 +51,7 @@ public class MsHTTPElement extends AbstractMsProtocolTestElement {
      * 请求头
      */
     @Valid
-    private List<Header> headers;
+    private List<MsHeader> headers;
     /**
      * rest参数
      */

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/MsHeader.java
Patch:
@@ -9,6 +9,6 @@
  * @CreateTime: 2023-11-06  16:59
  */
 @Data
-public class Header extends KeyValueEnableParam {
+public class MsHeader extends KeyValueEnableParam {
 
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsBodyConverter.java
Patch:
@@ -29,12 +29,13 @@ public abstract class MsBodyConverter<T> {
 
     /**
      * 解析对应的请求体参数
+     * 返回 Content-Type
      *
      * @param sampler
      * @param body
      * @param config
      */
-    public abstract void parse(HTTPSamplerProxy sampler, T body, ParameterConfig config);
+    public abstract String parse(HTTPSamplerProxy sampler, T body, ParameterConfig config);
 
     /**
      * 解析文本类型的 kv 参数
@@ -110,7 +111,7 @@ protected String parseTextMock(String text) {
      * @param sampler
      * @param raw
      */
-    protected static void handleRowBody(HTTPSamplerProxy sampler, String raw) {
+    protected void handleRowBody(HTTPSamplerProxy sampler, String raw) {
         Arguments arguments = new Arguments();
         HTTPArgument httpArgument = new HTTPArgument();
         httpArgument.setValue(raw);

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsFormDataBodyConverter.java
Patch:
@@ -21,11 +21,11 @@
 public class MsFormDataBodyConverter extends MsBodyConverter<FormDataBody> {
 
     @Override
-    public void parse(HTTPSamplerProxy sampler, FormDataBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, FormDataBody body, ParameterConfig config) {
         List<FormDataKV> formValues = body.getFormValues();
         sampler.setDoMultipart(true);
         if (CollectionUtils.isEmpty(formValues)) {
-            return;
+            return null;
         }
         List<FormDataKV> validFormValues = formValues.stream()
                 .filter(FormDataKV::getEnable)
@@ -35,6 +35,7 @@ public void parse(HTTPSamplerProxy sampler, FormDataBody body, ParameterConfig c
         List<FormDataKV> textFormValues = validFormValues.stream().filter(kv -> !kv.isFile()).collect(Collectors.toList());
         sampler.setHTTPFiles(getHttpFileArg(fileFormValues));
         sampler.setArguments(getArguments(textFormValues));
+        return null;
     }
 
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsJsonBodyConverter.java
Patch:
@@ -9,6 +9,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.text.StringEscapeUtils;
 import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy;
+import org.springframework.http.MediaType;
 
 import java.util.HashMap;
 import java.util.List;
@@ -20,7 +21,7 @@
  */
 public class MsJsonBodyConverter extends MsBodyConverter<JsonBody> {
     @Override
-    public void parse(HTTPSamplerProxy sampler, JsonBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, JsonBody body, ParameterConfig config) {
         sampler.setPostBodyRaw(true);
         try {
             String raw;
@@ -34,6 +35,7 @@ public void parse(HTTPSamplerProxy sampler, JsonBody body, ParameterConfig confi
         } catch (Exception e) {
             LogUtils.error("json mock value is abnormal", e);
         }
+        return MediaType.APPLICATION_JSON_VALUE;
     }
 
 

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsNoneBodyConverter.java
Patch:
@@ -10,7 +10,8 @@
  */
 public class MsNoneBodyConverter extends MsBodyConverter<NoneBody> {
     @Override
-    public void parse(HTTPSamplerProxy sampler, NoneBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, NoneBody body, ParameterConfig config) {
         // do nothing
+        return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsRawBodyConverter.java
Patch:
@@ -11,7 +11,8 @@
  */
 public class MsRawBodyConverter extends MsBodyConverter<RawBody> {
     @Override
-    public void parse(HTTPSamplerProxy sampler, RawBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, RawBody body, ParameterConfig config) {
         handleRowBody(sampler, body.getValue());
+        return null;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsWWWFormBodyConverter.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.api.dto.request.http.body.WWWFormKV;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy;
+import org.springframework.http.MediaType;
 
 import java.util.List;
 import java.util.stream.Collectors;
@@ -14,12 +15,13 @@
  */
 public class MsWWWFormBodyConverter extends MsBodyConverter<WWWFormBody> {
     @Override
-    public void parse(HTTPSamplerProxy sampler, WWWFormBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, WWWFormBody body, ParameterConfig config) {
         List<WWWFormKV> formValues = body.getFormValues();
         List<WWWFormKV> validFormValues = formValues.stream()
                 .filter(WWWFormKV::getEnable)
                 .filter(WWWFormKV::isValid)
                 .collect(Collectors.toList());
         sampler.setArguments(getArguments(validFormValues));
+        return MediaType.APPLICATION_FORM_URLENCODED_VALUE;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsXmlBodyConverter.java
Patch:
@@ -3,14 +3,16 @@
 import io.metersphere.api.dto.request.http.body.XmlBody;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy;
+import org.springframework.http.MediaType;
 
 /**
  * @Author: jianxing
  * @CreateTime: 2023-12-14  21:15
  */
 public class MsXmlBodyConverter extends MsBodyConverter<XmlBody> {
     @Override
-    public void parse(HTTPSamplerProxy sampler, XmlBody body, ParameterConfig config) {
+    public String parse(HTTPSamplerProxy sampler, XmlBody body, ParameterConfig config) {
         handleRowBody(sampler, body.getValue());
+        return MediaType.TEXT_XML_VALUE;
     }
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/mockserver/MockServerService.java
Patch:
@@ -5,7 +5,7 @@
 import io.metersphere.api.dto.definition.ResponseBody;
 import io.metersphere.api.dto.mockserver.HttpRequestParam;
 import io.metersphere.api.dto.mockserver.MockResponse;
-import io.metersphere.api.dto.request.http.Header;
+import io.metersphere.api.dto.request.http.MsHeader;
 import io.metersphere.api.dto.request.http.body.Body;
 import io.metersphere.api.mapper.*;
 import io.metersphere.api.utils.MockServerUtils;
@@ -102,7 +102,7 @@ private ApiDefinitionMockConfig match(String apiId, Map<String, String> requestH
 
     private Object getReturn(ApiDefinitionMockConfig compareMockConfig, String apiId, String projectId, HttpServletResponse response) {
         ResponseBody responseBody = null;
-        List<Header> responseHeader = null;
+        List<MsHeader> responseHeader = null;
         int responseCode = -1;
         String useApiResponseId = null;
 

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionMockControllerTests.java
Patch:
@@ -13,7 +13,7 @@
 import io.metersphere.api.dto.mockserver.KeyValueInfo;
 import io.metersphere.api.dto.mockserver.MockMatchRule;
 import io.metersphere.api.dto.mockserver.MockResponse;
-import io.metersphere.api.dto.request.http.Header;
+import io.metersphere.api.dto.request.http.MsHeader;
 import io.metersphere.api.dto.request.http.MsHTTPElement;
 import io.metersphere.api.dto.request.http.body.Body;
 import io.metersphere.api.mapper.*;
@@ -629,7 +629,7 @@ public void mockServerTest() throws Exception {
                 ResultActions action = mockMvc.perform(requestBuilder);
 
                 //判断响应
-                List<Header> headers;
+                List<MsHeader> headers;
                 int statusCode;
                 ResponseBody responseBody;
                 if (mockResponse.isUseApiResponse()) {
@@ -646,7 +646,7 @@ public void mockServerTest() throws Exception {
                 //判断响应码
                 Assertions.assertEquals(mockServerResponse.getStatus(), statusCode);
                 //判断响应头
-                for (Header header : headers) {
+                for (MsHeader header : headers) {
                     if (header.getEnable()) {
                         Assertions.assertEquals(mockServerResponse.getHeader(header.getKey()), header.getValue());
                     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -27,7 +27,6 @@
 import io.metersphere.sdk.util.LogUtils;
 import io.metersphere.sdk.util.SubListUtils;
 import jakarta.annotation.Resource;
-import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -735,6 +735,7 @@ public ApiTestCaseRecord initApiReport(ApiTestCase apiTestCase, String reportId,
         apiReport.setName(apiTestCase.getName());
         apiReport.setRunMode(ApiBatchRunMode.PARALLEL.name());
         apiReport.setPoolId(poolId);
+        apiReport.setEnvironmentId(apiTestCase.getEnvironmentId());
         apiReport.setProjectId(apiTestCase.getProjectId());
 
         // 创建报告和用例的关联关系

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -17,6 +17,7 @@
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.BooleanUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.ibatis.session.ExecutorType;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;
@@ -183,7 +184,7 @@ public ApiReportDTO get(String id) {
         //查询资源池名称
         apiReportDTO.setPoolName(testResourcePoolMapper.selectByPrimaryKey(apiReportDTO.getPoolId()).getName());
         //查询环境名称
-        apiReportDTO.setEnvironmentName(environmentMapper.selectByPrimaryKey(apiReportDTO.getEnvironmentId()).getName());
+        apiReportDTO.setEnvironmentName(StringUtils.isNoneBlank(apiReportDTO.getEnvironmentId()) ? environmentMapper.selectByPrimaryKey(apiReportDTO.getEnvironmentId()).getName() : null);
         apiReportDTO.setCreatUserName(userMapper.selectByPrimaryKey(apiReportDTO.getCreateUser()).getName());
         //需要查询出所有的步骤
         if (BooleanUtils.isTrue(apiReport.getIntegrated())) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioReportService.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.system.service.UserLoginService;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.ibatis.session.ExecutorType;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;
@@ -196,7 +197,7 @@ public ApiScenarioReportDTO get(String id) {
         //查询资源池名称
         scenarioReportDTO.setPoolName(testResourcePoolMapper.selectByPrimaryKey(scenarioReport.getPoolId()).getName());
         //查询环境名称
-        scenarioReportDTO.setEnvironmentName(environmentMapper.selectByPrimaryKey(scenarioReport.getEnvironmentId()).getName());
+        scenarioReportDTO.setEnvironmentName(StringUtils.isNotBlank(scenarioReport.getEnvironmentId()) ? environmentMapper.selectByPrimaryKey(scenarioReport.getEnvironmentId()).getName(): null);
         scenarioReportDTO.setCreatUserName(userMapper.selectByPrimaryKey(scenarioReport.getCreateUser()).getName());
         return scenarioReportDTO;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/http/MsHTTPElement.java
Patch:
@@ -2,7 +2,7 @@
 
 import io.metersphere.api.dto.request.http.auth.HTTPAuthConfig;
 import io.metersphere.api.dto.request.http.body.Body;
-import io.metersphere.plugin.api.spi.AbstractMsTestElement;
+import io.metersphere.plugin.api.spi.AbstractMsProtocolTestElement;
 import io.metersphere.sdk.constants.HttpMethodConstants;
 import io.metersphere.system.valid.EnumValue;
 import jakarta.validation.Valid;
@@ -22,7 +22,7 @@
  */
 @Data
 @EqualsAndHashCode(callSuper = true)
-public class MsHTTPElement extends AbstractMsTestElement {
+public class MsHTTPElement extends AbstractMsProtocolTestElement {
     /**
      * 完整请求地址
      * 自定义请求时，使用该字段

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/api/Swagger3Parser.java
Patch:
@@ -278,7 +278,7 @@ private void setBodyData(String k, io.swagger.v3.oas.models.media.MediaType valu
                 body.setBodyType(Body.BodyType.JSON.name());
                 JsonBody jsonBody = new JsonBody();
                 jsonBody.setJsonSchema(jsonSchemaItem);
-                jsonBody.setEnableJsonSchema(true);
+                jsonBody.setEnableJsonSchema(false);
                 if (ObjectUtils.isNotEmpty(value.getExample())) {
                     jsonBody.setJsonValue(ApiDataUtils.toJSONString(value.getExample()));
                 }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseBatchRunService.java
Patch:
@@ -104,7 +104,7 @@ public void serialExecute(ApiTestCaseBatchRunRequest request, String userId) thr
             initIntegratedReport(runModeConfig, ids, userId, request.getProjectId());
         }
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.API_CASE.name(), userId);
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());
         executeNextTask(queue, nextDetail);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioBatchRunService.java
Patch:
@@ -98,7 +98,7 @@ public void serialExecute(ApiScenarioBatchRunRequest request, String userId) thr
             initIntegratedReport(runModeConfig, ids, userId, request.getProjectId());
         }
         // 先初始化集成报告，设置好报告ID，再初始化执行队列
-        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, userId);
+        ExecutionQueue queue = apiBatchRunBaseService.initExecutionqueue(ids, runModeConfig, ApiExecuteResourceType.API_SCENARIO.name(), userId);
         // 执行第一个任务
         ExecutionQueueDetail nextDetail = apiExecutionQueueService.getNextDetail(queue.getQueueId());
         executeNextTask(queue, nextDetail);

File: backend/framework/plugin/plugin-api-sdk/src/main/java/io/metersphere/plugin/api/spi/AbstractMsTestElement.java
Patch:
@@ -21,14 +21,17 @@
 public abstract class AbstractMsTestElement implements MsTestElement {
     /**
      * 步骤ID（唯一）
+     * 运行时设置
      */
     private String stepId;
     /**
      * 关联的资源ID（用例ID/接口ID/场景ID)等
+     * 运行时设置
      */
     private String resourceId;
     /**
      * 当前的项目ID
+     * 运行时设置
      */
     private String projectId;
     /**

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -499,6 +499,7 @@ public TaskRequestDTO apiExecute(ApiResourceRunRequest runRequest, TaskRequestDT
         apiCommonService.setEnableCommonScriptProcessorInfo(testElement);
         testElement.setResourceId(taskRequest.getResourceId());
         testElement.setStepId(taskRequest.getResourceId());
+        testElement.setProjectId(taskRequest.getProjectId());
         return execute(runRequest, taskRequest, apiParamConfig);
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -597,6 +597,9 @@ public List<ApiResourceModuleInfo> getModuleInfoByIds(List<String> ids) {
                 .collect(Collectors.toMap(ApiTestCase::getApiDefinitionId, ApiTestCase::getId));
 
         List<String> definitionIds = apiCaseDefinitionMap.keySet().stream().collect(Collectors.toList());
+        if (CollectionUtils.isEmpty(definitionIds)) {
+            return List.of();
+        }
         List<ApiResourceModuleInfo> moduleInfos = extApiDefinitionMapper.getModuleInfoByIds(definitionIds);
         // 将 resourceId 从定义ID替换成用例ID
         moduleInfos.forEach(moduleInfo ->

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseCommentController.java
Patch:
@@ -51,7 +51,7 @@ public void deleteComment(@PathVariable String commentId) {
 
     @GetMapping("/get/list/{caseId}")
     @Operation(summary = "用例管理-功能用例-用例评论-获取用例评论")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_COMMENT)
+    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
     @CheckOwner(resourceId = "#caseId", resourceType = "functional_case")
     public List<FunctionalCaseCommentDTO> getCommentList(@PathVariable String caseId) {
        return functionalCaseCommentService.getCommentList(caseId);

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/ReviewFunctionalCaseDTO.java
Patch:
@@ -61,4 +61,7 @@ public class ReviewFunctionalCaseDTO implements Serializable {
     @Schema(description = "只看我的评审状态")
     private String myStatus;
 
+    @Schema(description = "自定义字段集合")
+    private List<FunctionalCaseCustomFieldDTO> customFields;
+
 }

File: backend/framework/plugin/plugin-platform-sdk/src/main/java/io/metersphere/plugin/platform/dto/reponse/PlatformDemandDTO.java
Patch:
@@ -2,6 +2,7 @@
 
 import lombok.Data;
 
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -42,6 +43,6 @@ public static class Demand {
         /**
          * 自定义字段
          */
-        private Map<String, Object> customFields;
+        private Map<String, Object> customFields = new HashMap<>();
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/excel/ExcelValidateHelper.java
Patch:
@@ -27,7 +27,7 @@ public static <T> String validateEntity(T obj) throws NoSuchFieldException {
                 Field declaredField = obj.getClass().getDeclaredField(cv.getPropertyPath().toString());
                 ExcelProperty annotation = declaredField.getAnnotation(ExcelProperty.class);
                 //拼接错误信息，包含当前出错数据的标题名字+错误信息
-                result.append(annotation.value()[0] + cv.getMessage()).append("; ");
+                result.append("[").append(annotation.value()[0]).append("]").append(cv.getMessage()).append("; ");
             }
         }
         return result.toString();

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/extract/RegexExtractConverter.java
Patch:
@@ -36,8 +36,8 @@ public void parse(HashTree hashTree, RegexExtract msExtract, ParameterConfig con
     private String getTemplate(String expressionMatchingRule) {
         // $1$提取 JSON 响应中的第一个匹配项 $0$用于提取整个 JSON 响应
         HashMap<String, String> ruleValueMap = new HashMap<>() {{
-            put(RegexExtract.ExpressionRuleType.EXPRESSION.name(), "$1$");
-            put(RegexExtract.ExpressionRuleType.GROUP.name(), "$0$");
+            put(RegexExtract.ExpressionRuleType.EXPRESSION.name(), "$0$");
+            put(RegexExtract.ExpressionRuleType.GROUP.name(), "$1$");
         }};
         if (StringUtils.isBlank(expressionMatchingRule)) {
             return ruleValueMap.get(RegexExtract.ExpressionRuleType.EXPRESSION.name());

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalTestCaseController.java
Patch:
@@ -113,7 +113,6 @@ public void associateBug(@Validated @RequestBody AssociateBugRequest request) {
     @Operation(summary = "用例管理-功能用例-关联其他用例-取消关联缺陷")
     @Log(type = OperationLogType.DISASSOCIATE, expression = "#msClass.disassociateBugLog(#id)", msClass = FunctionalCaseLogService.class)
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_ADD)
-    @CheckOwner(resourceId = "#id", resourceType = "functional_case")
     public void disassociateBug(@PathVariable String id) {
         functionalTestCaseService.disassociateBug(id);
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/LoginController.java
Patch:
@@ -29,7 +29,7 @@
 
 @RestController
 @RequestMapping
-@Tag(name="登陆")
+@Tag(name="登录")
 public class LoginController {
 
     @Resource

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiReportService.java
Patch:
@@ -118,7 +118,7 @@ public void delete(String id, String userId) {
     private ApiReport checkResource(String id) {
         ApiReport apiReport = apiReportMapper.selectByPrimaryKey(id);
         if (apiReport == null) {
-            throw new RuntimeException(Translator.get("api_case_report_not_exist"));
+            throw new MSException(Translator.get("api_case_report_not_exist"));
         }
         return apiReport;
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugDetailDTO.java
Patch:
@@ -46,6 +46,9 @@ public class BugDetailDTO {
     @Schema(description = "是否平台默认模板")
     private Boolean platformDefault;
 
+    @Schema(description = "所属平台")
+    private String platform;
+
     @Schema(description = "是否关注")
     private Boolean followFlag;
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -254,6 +254,7 @@ public BugDetailDTO get(String id, String currentUser) {
         detail.setNum(bug.getNum());
         detail.setProjectId(bug.getProjectId());
         detail.setTemplateId(template.getId());
+        detail.setPlatform(bug.getPlatform());
         detail.setPlatformDefault(template.getPlatformDefault());
         detail.setStatus(bug.getStatus());
         detail.setPlatformBugId(bug.getPlatformBugId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -897,7 +897,9 @@ public boolean checkExist(String id) {
      */
     public void handleAndSaveCustomFields(BugEditRequest request, boolean merge) {
         // 处理ID, 值的映射关系
-        Map<String, String> customFieldMap = request.getCustomFields().stream().collect(HashMap::new, (m, field) -> m.put(field.getId(), field.getValue()), HashMap::putAll);
+        Map<String, String> customFieldMap = request.getCustomFields().stream()
+                .filter(f -> StringUtils.isNotBlank(f.getId()))
+                .collect(HashMap::new, (m, field) -> m.put(field.getId(), field.getValue()), HashMap::putAll);
         if (MapUtils.isEmpty(customFieldMap)) {
             return;
         }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugEditRequest.java
Patch:
@@ -60,4 +60,7 @@ public class BugEditRequest implements Serializable {
 
     @Schema(description = "复制的附件")
     private List<BugFileDTO> copyFiles;
+
+    @Schema(description = "富文本临时文件ID")
+    private List<String> richTextTmpFileIds;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/enums/BugAttachmentSourceType.java
Patch:
@@ -9,5 +9,5 @@ public enum BugAttachmentSourceType {
     /**
      * 缺陷内容
      */
-    CONTENT
+    RICH_TEXT
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectUserRoleService.java
Patch:
@@ -28,7 +28,6 @@
 import org.springframework.transaction.annotation.Transactional;
 
 import java.util.ArrayList;
-import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
@@ -74,7 +73,6 @@ public List<ProjectUserRoleDTO> list(ProjectUserRoleRequest request) {
                 role.setMemberCount(0);
             });
         }
-        roles.sort(Comparator.comparing(UserRole::getInternal).reversed());
         return roles;
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationUserRoleService.java
Patch:
@@ -47,7 +47,8 @@ public List<UserRole> list(String organizationId) {
                 .andScopeIdIn(Arrays.asList(organizationId, UserRoleEnum.GLOBAL.toString()));
         example.setOrderByClause("create_time asc");
         List<UserRole> userRoles = userRoleMapper.selectByExample(example);
-        userRoles.sort(Comparator.comparing(UserRole::getInternal).reversed());
+        userRoles.sort(Comparator.comparing(UserRole::getInternal)
+                .thenComparing(UserRole::getScopeId).thenComparing(Comparator.comparing(UserRole::getCreateTime).reversed()).reversed());
         return userRoles;
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncExtraService.java
Patch:
@@ -15,8 +15,8 @@ public class BugSyncExtraService {
     @Resource
     private StringRedisTemplate stringRedisTemplate;
 
-    private static final String SYNC_THIRD_PARTY_ISSUES_KEY = "ISSUE:SYNC";
-    private static final String SYNC_THIRD_PARTY_ISSUES_ERROR_KEY = "ISSUE:SYNC:ERROR";
+    private static final String SYNC_THIRD_PARTY_ISSUES_KEY = "MS:BUG:SYNC";
+    private static final String SYNC_THIRD_PARTY_ISSUES_ERROR_KEY = "MS:BUG:SYNC:ERROR";
 
     /**
      * 设置手动同步缺陷唯一Key

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncNoticeService.java
Patch:
@@ -35,7 +35,7 @@ public void sendNotice(int total, String currentUser, String projectId) {
         paramMap.put("total", total);
         paramMap.put("projectId", projectId);
         NoticeModel noticeModel = NoticeModel.builder().operator(currentUser)
-                .context(template).subject(subject).paramMap(paramMap).event(NoticeConstants.Event.SYNC_COMPLETED).build();
+                .context(template).subject(subject).paramMap(paramMap).event(NoticeConstants.Event.EXECUTE_COMPLETED).build();
         noticeSendService.send(NoticeConstants.TaskType.BUG_SYNC_TASK, noticeModel);
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/constants/NoticeConstants.java
Patch:
@@ -207,9 +207,6 @@ interface Event {
 
         @Schema(description = "message.close")
         String CLOSE = "CLOSE";
-
-        @Schema(description = "message.close")
-        String SYNC_COMPLETED = "SYNC_COMPLETED";
     }
 
     interface RelatedUser {

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AbstractNoticeSender.java
Patch:
@@ -251,6 +251,8 @@ protected List<Receiver> getReceivers(List<Receiver> receivers, Boolean excludeS
                     realReceivers.add(receiver);
                 }
             }
+        } else {
+            realReceivers = receivers;
         }
         return realReceivers;
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectMemberService.java
Patch:
@@ -41,7 +41,7 @@
  * @author song-cc-rock
  */
 @Service
-@Transactional
+@Transactional(rollbackFor = Exception.class)
 public class ProjectMemberService {
 
     @Resource

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugRelateCaseController.java
Patch:
@@ -68,7 +68,7 @@ public List<BaseTreeNode> getTree(@RequestBody @Validated AssociateCaseModuleReq
     @PostMapping("/relate")
     @Operation(summary = "缺陷管理-关联用例-关联")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
-    @CheckOwner(resourceId = "#request.sourceId", resourceType = "functional_case")
+    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
     public void relate(@Validated @RequestBody AssociateOtherCaseRequest request) {
         bugRelateCaseCommonService.relateCase(request, false, SessionUtils.getUserId());
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugTrashController.java
Patch:
@@ -13,6 +13,7 @@
 import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
+import io.metersphere.system.utils.SessionUtils;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
@@ -62,7 +63,7 @@ public void deleteTrash(@PathVariable String id) {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void batchRecover(@Validated @RequestBody BugBatchRequest request) {
         request.setUseTrash(true);
-        bugService.batchRecover(request);
+        bugService.batchRecover(request, SessionUtils.getUserId());
     }
 
     @PostMapping("/batch-delete")

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -567,7 +567,7 @@ private String getLocalFileType(String fileName) {
      */
     private FileLogRecord createFileLogRecord(String operator, String projectId){
         return FileLogRecord.builder()
-                .logModule(OperationLogModule.BUG_MANAGEMENT)
+                .logModule(OperationLogModule.BUG_MANAGEMENT_INDEX)
                 .operator(operator)
                 .projectId(projectId)
                 .build();

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugHistoryService.java
Patch:
@@ -39,7 +39,7 @@ public class BugHistoryService {
      */
     public List<OperationHistoryDTO> list(OperationHistoryRequest request) {
         OperationHistoryExample example = new OperationHistoryExample();
-        example.createCriteria().andProjectIdEqualTo(request.getProjectId()).andModuleEqualTo(OperationLogModule.BUG_MANAGEMENT)
+        example.createCriteria().andProjectIdEqualTo(request.getProjectId()).andModuleIn(List.of(OperationLogModule.BUG_MANAGEMENT_INDEX, OperationLogModule.BUG_MANAGEMENT_RECYCLE))
                 .andSourceIdEqualTo(request.getSourceId());
         List<OperationHistory> history = operationHistoryMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(history)) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugNoticeService.java
Patch:
@@ -85,6 +85,9 @@ public BugNoticeDTO getNoticeByRequest(BugEditRequest request) {
     public BugNoticeDTO getNoticeById(String id) {
         // 缺陷基础信息
         BugDTO bugDTO = bugLogService.getOriginalValue(id);
+        if (bugDTO == null) {
+            return null;
+        }
         // 构建通知对象
         BugNoticeDTO notice = new BugNoticeDTO();
         BeanUtils.copyBean(notice, bugDTO);

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugRelateCaseLogService.java
Patch:
@@ -31,7 +31,7 @@ public class BugRelateCaseLogService {
     public LogDTO getRelateLog(String id) {
         BugRelationCase bugRelationCase = bugRelationCaseMapper.selectByPrimaryKey(id);
         BugRelateCaseDTO relateCase = extBugRelateCaseMapper.getRelateCase(bugRelationCase.getCaseId(), bugRelationCase.getCaseType());
-        LogDTO dto = new LogDTO(relateCase.getProjectId(), null, null, null, OperationLogType.DISASSOCIATE.name(), OperationLogModule.BUG_MANAGEMENT, relateCase.getRelateCaseName());
+        LogDTO dto = new LogDTO(relateCase.getProjectId(), null, null, null, OperationLogType.DISASSOCIATE.name(), OperationLogModule.BUG_MANAGEMENT_INDEX, relateCase.getRelateCaseName());
         dto.setPath("/bug/un-relate");
         dto.setMethod(HttpMethodConstants.GET.name());
         dto.setModifiedValue(JSON.toJSONBytes(relateCase));

File: backend/services/system-setting/src/main/java/io/metersphere/system/constants/TemplateRequiredCustomField.java
Patch:
@@ -5,7 +5,7 @@
  * @CreateTime: 2024-03-14  16:33
  */
 public enum TemplateRequiredCustomField {
-    BUG_DEGREE("bug_degree");
+    BUG_DEGREE("functional_priority");
 
     private String name;
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/HttpMethodConstants.java
Patch:
@@ -8,5 +8,6 @@ public enum HttpMethodConstants {
     PATCH,
     DELETE,
     OPTIONS,
-    TRACE
+    TRACE,
+    CONNECT
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/controller/definition/ApiTestCaseController.java
Patch:
@@ -252,7 +252,7 @@ public List<BaseTreeNode> options(@PathVariable String projectId) {
     }
 
     @GetMapping("/run/{id}/{reportId}")
-    @Operation(summary = "用例执行，获取获取执行结果")
+    @Operation(summary = "用例执行，实时获取执行结果")
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_CASE_EXECUTE)
     public TaskRequestDTO run(@PathVariable String id, @PathVariable String reportId) {
         return apiTestCaseService.run(id, reportId, SessionUtils.getUserId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/MsHTTPElementConverter.java
Patch:
@@ -165,6 +165,7 @@ private AuthManager getAuthManager(HTTPAuthConfig authConfig) {
 
     /**
      * 添加场景和环境变量
+     *
      * @param msHTTPElement
      * @param envInfo
      */

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/body/MsBodyConverter.java
Patch:
@@ -51,7 +51,6 @@ protected Arguments getArguments(List<? extends WWWFormKV> textFormValues) {
                 value = StringUtils.EMPTY;
             }
             HTTPArgument httpArgument = new HTTPArgument(kv.getKey(), value);
-            httpArgument.setAlwaysEncoded(kv.getEncode());
             arguments.addArgument(httpArgument);
             if (kv instanceof FormDataKV formDataKV && formDataKV.getContentType() != null) {
                 httpArgument.setContentType(formDataKV.getContentType());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/MsHTTPElementTest.java
Patch:
@@ -15,7 +15,6 @@
 import io.metersphere.api.utils.ApiDataUtils;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import io.metersphere.plugin.api.spi.AbstractMsTestElement;
-import io.metersphere.project.api.KeyValueEnableParam;
 import io.metersphere.project.api.KeyValueParam;
 import io.metersphere.project.api.assertion.*;
 import io.metersphere.project.api.assertion.body.*;
@@ -61,7 +60,6 @@ public static Body getGeneralBody() {
         FormDataKV formDataKV = new FormDataKV();
         formDataKV.setEnable(false);
         formDataKV.setContentType("text/plain");
-        formDataKV.setEncode(true);
         formDataKV.setMaxLength(10);
         formDataKV.setMinLength(8);
         formDataKV.setDescription("test");

File: backend/services/bug-management/src/test/java/io/metersphere/bug/controller/BugControllerTests.java
Patch:
@@ -987,4 +987,4 @@ protected MultiValueMap<String, Object> getMultiPartParam(Object param, File fil
         paramMap.add("request", JSON.toJSONString(param));
         return paramMap;
     }
-}
+}
\ No newline at end of file

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalTestCaseController.java
Patch:
@@ -23,7 +23,6 @@
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
-import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
@@ -98,8 +97,7 @@ public Pager<List<FunctionalCaseTestDTO>> getAssociateOtherCaseList(@Validated @
     @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
     @CheckOwner(resourceId = "#request.getProjectId", resourceType = "project")
     public Pager<List<BugProviderDTO>> associateBugList(@Validated @RequestBody BugPageProviderRequest request) {
-        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize());
         return PageUtils.setPageInfo(page, functionalTestCaseService.bugPage(request));
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseCommentService.java
Patch:
@@ -268,7 +268,7 @@ private List<FunctionalCaseCommentDTO> buildData(List<FunctionalCaseComment> fun
                 List<String> notifiers = Arrays.asList(functionalCaseComment.getNotifier().split(";"));
                 notifiers.forEach(t-> commentUserInfos.add(userMap.get(t)));
             }
-            functionalCaseCommentDTO.setCommentUserInfos(commentUserInfos);
+            functionalCaseCommentDTO.setCommentUserInfos(commentUserInfos.stream().distinct().toList());
             list.add(functionalCaseCommentDTO);
         }
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/api/task/ApiRunModeConfigDTO.java
Patch:
@@ -17,12 +17,12 @@ public class ApiRunModeConfigDTO implements Serializable {
      * 是否并行执行
      * {@link io.metersphere.sdk.constants.ApiBatchRunMode}
      */
-    private String runMode;
+    private String runMode = ApiBatchRunMode.PARALLEL.name();
 
     /**
      * 是否是集成报告
      */
-    private Boolean integratedReport;
+    private Boolean integratedReport = false;
 
     /**
      * 集合报告配置

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/api/task/TaskRequestDTO.java
Patch:
@@ -88,7 +88,7 @@ public class TaskRequestDTO implements Serializable {
     private String projectId;
 
     /**
-     * {@link io.metersphere.sdk.constants.ApiBatchRunMode}
+     * {@link io.metersphere.sdk.constants.ApiExecuteRunMode}
      */
     @NotBlank
     private String runMode;
@@ -97,7 +97,7 @@ public class TaskRequestDTO implements Serializable {
      * 运行配置
      */
     @Valid
-    private ApiRunModeConfigDTO runModeConfig;
+    private ApiRunModeConfigDTO runModeConfig = new ApiRunModeConfigDTO();
 
     /**
      * TODO 要执行的请求总量，用于计算执行各种指标

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseDemandController.java
Patch:
@@ -76,7 +76,7 @@ public void batchRelevance(@RequestBody @Validated FunctionalCaseDemandBatchRequ
 
     @PostMapping("/third/list/page")
     @Operation(summary = "用例管理-功能用例-关联需求-获取三方需求列表")
-    @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
     public PluginPager<PlatformDemandDTO> pageDemand(@RequestBody @Validated FunctionalThirdDemandPageRequest request) {
        return functionalCaseDemandService.pageDemand(request);
     }

File: backend/framework/provider/src/main/java/io/metersphere/dto/BugProviderDTO.java
Patch:
@@ -46,6 +46,9 @@ public class BugProviderDTO implements Serializable {
     @Schema(description = "标签")
     private List<String> tags;
 
+    @Schema(description = "内容")
+    private String content;
+
     @Schema(description = "创建时间")
     private Long createTime;
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalTestCaseController.java
Patch:
@@ -45,8 +45,7 @@ public class FunctionalTestCaseController {
     @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<TestCaseProviderDTO>> associateOtherCaseList(@Validated @RequestBody TestCasePageProviderRequest request) {
-        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize());
         return PageUtils.setPageInfo(page, functionalTestCaseService.page(request));
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -1036,7 +1036,9 @@ private List<SyncAttachmentToPlatformRequest> uploadAttachment(BugEditRequest re
                     throw new MSException(Translator.get("bug_attachment_upload_error"));
                 }
             });
-            extBugLocalAttachmentMapper.batchInsert(copyFiles);
+            if (CollectionUtils.isNotEmpty(copyFiles)) {
+                extBugLocalAttachmentMapper.batchInsert(copyFiles);
+            }
             // 关联的附件, 直接合并, 后续逻辑会处理
             List<String> copyLinkFileIds = request.getCopyFiles().stream().filter(file -> !file.getLocal()).map(BugFileDTO::getFileId).collect(Collectors.toList());
             request.setLinkFileIds(ListUtils.union(request.getLinkFileIds(), copyLinkFileIds));

File: backend/framework/provider/src/main/java/io/metersphere/dto/BugProviderDTO.java
Patch:
@@ -31,6 +31,9 @@ public class BugProviderDTO implements Serializable {
     @Schema(description = "处理人")
     private String handleUser;
 
+    @Schema(description = "创建人")
+    private String createUser;
+
     @Schema(description = "处理人名称")
     private String handleUserName;
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -312,6 +312,8 @@ private void setTaskTmpFileParam(ApiResourceRunRequest runRequest, TaskRequestDT
                         String fileName = apiFileResourceService.getTempFileNameByFileId(tempFileId);
                         return getApiExecuteFileInfo(tempFileId, fileName, taskRequest.getProjectId());
                     })
+                    // uploadFileIds 查不到，则已经移动到正式目录
+                    .filter(i -> StringUtils.isNotBlank(i.getFileName()))
                     .collect(Collectors.toList());
             taskRequest.setLocalTempFiles(localTempFiles);
         }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDebugControllerTests.java
Patch:
@@ -263,6 +263,8 @@ public void update() throws Exception {
         request.setDeleteFileIds(null);
         request.setUnLinkFileIds(null);
         this.requestPostWithOk(DEFAULT_UPDATE, request);
+        // 校验 UploadFileIds 参数重复关联
+        this.requestPostWithOk(DEFAULT_UPDATE, request);
         // 校验请求成功数据
         assertUpdateApiDebug(request, msHttpElement, request.getId());
         assertUploadFile(addApiDebug.getId(), List.of(fileId));

File: backend/framework/plugin/plugin-platform-sdk/src/main/java/io/metersphere/plugin/platform/dto/reponse/PlatformCustomFieldItemDTO.java
Patch:
@@ -13,4 +13,6 @@ public class PlatformCustomFieldItemDTO extends PlatformCustomFieldDTO {
     private String defaultValue;
     private Boolean supportSearch;
     private String searchMethod;
+    private String placeHolder;
+    private Boolean systemField;
 }

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -944,13 +944,13 @@ private void configureCombineSearch(ApiDefinitionPageRequest request) {
         Map<String, Object> custom = new HashMap<>();
         custom.put("id", "test_field");
         custom.put("operator", "in");
-        custom.put("type", "multipleSelect");
+        custom.put("type", "MULTIPLE_SELECT");
         custom.put("value", JSON.toJSONString(List.of("test", "default")));
         customs.add(custom);
         Map<String, Object> currentUserCustom = new HashMap<>();
         currentUserCustom.put("id", "test_field");
         currentUserCustom.put("operator", "current user");
-        currentUserCustom.put("type", "multipleMember");
+        currentUserCustom.put("type", "MULTIPLE_MEMBER");
         currentUserCustom.put("value", "current user");
         customs.add(currentUserCustom);
         map.put("customs", customs);

File: backend/services/system-setting/src/main/java/io/metersphere/system/utils/CustomFieldUtils.java
Patch:
@@ -69,8 +69,8 @@ private static void handleCombineCustomFields(List<Map<String, Object>> customs,
             String fieldType = custom.get(COMBINE_CUSTOM_FIELD_TYPE).toString();
             String fieldValue = custom.get(COMBINE_CUSTOM_FIELD_VALUE).toString();
 
-            if (StringUtils.equalsAny(fieldType, CustomFieldType.MULTIPLE_MEMBER.getType(),
-                    CustomFieldType.CHECKBOX.getType(), CustomFieldType.MULTIPLE_SELECT.getType()) && StringUtils.isNotEmpty(fieldValue)) {
+            if (StringUtils.equalsAny(fieldType, CustomFieldType.MULTIPLE_MEMBER.name(),
+                    CustomFieldType.CHECKBOX.name(), CustomFieldType.MULTIPLE_SELECT.name()) && StringUtils.isNotEmpty(fieldValue)) {
                 List<String> customValues = JSON.parseArray(fieldValue, String.class);
                 List<String> jsonValues = customValues.stream().map(item -> "JSON_CONTAINS(`value`, '[\"".concat(item).concat("\"]')")).toList();
                 custom.put(COMBINE_CUSTOM_FIELD_VALUE, "(".concat(StringUtils.join(jsonValues, " OR ")).concat(")"));

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/CustomFieldTests.java
Patch:
@@ -38,13 +38,13 @@ void testSetBaseQueryRequestCustomMultipleFields() {
         Map<String, Object> custom = new HashMap<>();
         custom.put("id", "test_field");
         custom.put("operator", "in");
-        custom.put("type", "multipleSelect");
+        custom.put("type", "MULTIPLE_SELECT");
         custom.put("value",  JSON.toJSONString(List.of("test", "default")));
         customs.add(custom);
         Map<String, Object> currentUserCustom = new HashMap<>();
         currentUserCustom.put("id", "test_field");
         currentUserCustom.put("operator", "current user");
-        currentUserCustom.put("type", "multipleMember");
+        currentUserCustom.put("type", "MULTIPLE_MEMBER");
         currentUserCustom.put("value", "current user");
         customs.add(currentUserCustom);
         currentUserCustom.put("value", "");

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugRelateCaseDTO.java
Patch:
@@ -12,6 +12,9 @@ public class BugRelateCaseDTO{
     @Schema(description = "关联用例ID")
     private String relateCaseId;
 
+    @Schema(description = "关联用例业务ID")
+    private String relateCaseNum;
+
     @Schema(description = "关联用例名称")
     private String relateCaseName;
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseCommentService.java
Patch:
@@ -266,7 +266,7 @@ private List<FunctionalCaseCommentDTO> buildData(List<FunctionalCaseComment> fun
             }
             if (StringUtils.isNotBlank(functionalCaseComment.getNotifier())) {
                 List<String> notifiers = Arrays.asList(functionalCaseComment.getNotifier().split(";"));
-                notifiers.forEach(t-> commentUserInfos.add(userMap.get(functionalCaseComment.getReplyUser())));
+                notifiers.forEach(t-> commentUserInfos.add(userMap.get(t)));
             }
             functionalCaseCommentDTO.setCommentUserInfos(commentUserInfos);
             list.add(functionalCaseCommentDTO);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseCommentService.java
Patch:
@@ -308,7 +308,7 @@ private static List<String> getUserIds(List<FunctionalCaseComment> functionalCas
             List<String> notifiers = Arrays.asList(notifierStr.split(";"));
             userIds.addAll(notifiers);
         }
-        userIds = userIds.stream().distinct().toList();
+        userIds = userIds.stream().filter(StringUtils::isNotBlank).distinct().toList();
         return userIds;
     }
 

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/definition/ApiCaseBatchEditRequest.java
Patch:
@@ -29,7 +29,7 @@ public class ApiCaseBatchEditRequest extends ApiTestCaseBatchRequest implements
     private boolean appendTag = false;
     @Schema(description = "环境id")
     @Size(max = 50, message = "{api_test_case.env_id.length_range}")
-    private String envId;
+    private String environmentId;
     @Schema(description = "用例状态")
     @Size(max = 20, message = "{api_test_case.status.length_range}")
     private String status;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugService.java
Patch:
@@ -238,7 +238,7 @@ public void checkModuleExist(String moduleId) {
     }
 
     public void editPos(ApiEditPosRequest request, String userId) {
-        ApiDebug apiDebug = checkResourceExist(request.getTargetId());
+        ApiDebug apiDebug = checkResourceExist(request.getMoveId());
         if (!StringUtils.equals(request.getModuleId(), apiDebug.getModuleId())) {
             checkModuleExist(request.getModuleId());
             apiDebug.setModuleId(request.getModuleId());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -1057,7 +1057,7 @@ public List<ApiDefinitionBlob> getBlobByIds(List<String> apiIds) {
     }
 
     public void editPos(ApiEditPosRequest request, String userId) {
-        ApiDefinition apiDefinition = checkApiDefinition(request.getTargetId());
+        ApiDefinition apiDefinition = checkApiDefinition(request.getMoveId());
         if (!StringUtils.equals(request.getModuleId(), apiDefinition.getModuleId())) {
             checkModuleExist(request.getModuleId());
             apiDefinition.setUpdateTime(System.currentTimeMillis());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -454,7 +454,7 @@ private void batchEditByType(ApiCaseBatchEditRequest request, List<String> ids,
             case PRIORITY -> batchUpdatePriority(example, updateCase, request.getPriority(), mapper);
             case STATUS -> batchUpdateStatus(example, updateCase, request.getStatus(), mapper);
             case TAGS -> batchUpdateTags(example, updateCase, request, ids, mapper);
-            case ENVIRONMENT -> batchUpdateEnvironment(example, updateCase, request.getEnvId(), mapper);
+            case ENVIRONMENT -> batchUpdateEnvironment(example, updateCase, request.getEnvironmentId(), mapper);
             default -> throw new MSException(Translator.get("batch_edit_type_error"));
         }
         sqlSession.flushStatements();

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDebugControllerTests.java
Patch:
@@ -419,7 +419,7 @@ public void move() throws Exception {
         request.setMoveMode("AFTER");
         requestPost("edit/pos", request).andExpect(status().isOk());
         // @@请求成功
-        request.setMoveId(anotherAddApiDebug.getId());
+        request.setTargetId(anotherAddApiDebug.getId());
         this.requestPostWithOk("edit/pos", request);
         // 校验请求成功数据
         ApiDebug apiDebug = apiDebugMapper.selectByPrimaryKey(addApiDebug.getId());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestCaseControllerTests.java
Patch:
@@ -882,16 +882,16 @@ public void batchEdit() throws Exception {
         EnvironmentExample environmentExample = new EnvironmentExample();
         environmentExample.createCriteria().andProjectIdEqualTo(DEFAULT_PROJECT_ID).andMockEqualTo(true);
         List<Environment> environments = environmentMapper.selectByExample(environmentExample);
-        request.setEnvId(environments.get(0).getId());
+        request.setEnvironmentId(environments.get(0).getId());
         requestPostWithOkAndReturn(BATCH_EDIT, request);
         //判断数据的环境是不是environments.get(0).getId()
         caseList = apiTestCaseMapper.selectByExample(example);
         caseList.forEach(apiTestCase -> Assertions.assertEquals(apiTestCase.getEnvironmentId(), environments.get(0).getId()));
         //环境数据为空
-        request.setEnvId(null);
+        request.setEnvironmentId(null);
         this.requestPost(BATCH_EDIT, request, ERROR_REQUEST_MATCHER);
         //环境不存在
-        request.setEnvId("111");
+        request.setEnvironmentId("111");
         this.requestPost(BATCH_EDIT, request, ERROR_REQUEST_MATCHER);
         //类型错误
         request.setType("111");

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -190,7 +190,8 @@ public void batchMoveFunctionalCase(@Validated @RequestBody FunctionalCaseBatchM
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public void batchCopyFunctionalCase(@Validated @RequestBody FunctionalCaseBatchMoveRequest request) {
         String userId = SessionUtils.getUserId();
-        functionalCaseService.batchCopyFunctionalCase(request, userId);
+        String organizationId = SessionUtils.getCurrentOrganizationId();
+        functionalCaseService.batchCopyFunctionalCase(request, userId, organizationId);
     }
 
 
@@ -246,7 +247,7 @@ public FunctionalCaseImportResponse importExcel(@RequestPart("request") Function
     @CheckOwner(resourceId = "#request.getSourceId()", resourceType = "functional_case")
     public Pager<List<OperationHistoryDTO>> operationHistoryList(@Validated @RequestBody OperationHistoryRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-               StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
         return PageUtils.setPageInfo(page, functionalCaseService.operationHistoryList(request));
     }
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectTemplateLogService.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.project.service;
 
+import com.alibaba.excel.util.BooleanUtils;
 import io.metersphere.sdk.constants.TemplateScene;
 import io.metersphere.sdk.util.EnumValidator;
 import io.metersphere.system.log.dto.LogDTO;
@@ -66,7 +67,7 @@ public LogDTO updateLog(TemplateUpdateRequest request) {
                     null,
                     OperationLogType.UPDATE.name(),
                     getOperationLogModule(template.getScene()),
-                    template.getName());
+                    BooleanUtils.isTrue(template.getInternal()) ? Translator.get("template.default") : template.getName());
             dto.setOriginalValue(JSON.toJSONBytes(template));
         }
         return dto;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationTemplateLogService.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.system.service;
 
+import com.alibaba.excel.util.BooleanUtils;
 import io.metersphere.sdk.constants.OperationLogConstants;
 import io.metersphere.sdk.constants.TemplateScene;
 import io.metersphere.sdk.util.EnumValidator;
@@ -102,7 +103,7 @@ public LogDTO updateLog(TemplateUpdateRequest request) {
                     null,
                     OperationLogType.UPDATE.name(),
                     getOperationLogModule(template.getScene()),
-                    template.getName());
+                    BooleanUtils.isTrue(template.getInternal()) ? Translator.get("template.default") : template.getName());
             dto.setOriginalValue(JSON.toJSONBytes(template));
         }
         return dto;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -71,7 +71,7 @@ public void updateMember(@Validated @RequestBody OrganizationMemberUpdateRequest
 
     @PostMapping("/project/add-member")
     @Operation(summary = "系统设置-组织-成员-添加组织成员至项目")
-    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD})
+    @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_UPDATE)
     public void addMemberToProject(@Validated @RequestBody OrgMemberExtendProjectRequest orgMemberExtendProjectRequest) {
         organizationService.addMemberToProject(orgMemberExtendProjectRequest, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/CustomFieldDTO.java
Patch:
@@ -9,4 +9,5 @@
 @Data
 public class CustomFieldDTO extends CustomField {
     private List<CustomFieldOption> options;
+    private boolean used;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtCheckOwnerMapper.java
Patch:
@@ -8,4 +8,6 @@ public interface ExtCheckOwnerMapper {
     boolean checkoutOwner(@Param("table") String resourceType, @Param("userId") String userId, @Param("ids") List<String> ids);
 
     boolean checkoutOrganizationOwner(@Param("table") String resourceType, @Param("userId") String userId, @Param("ids") List<String> ids);
+
+    boolean checkoutOrganization(@Param("userId") String userId, @Param("ids") List<String> ids);
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -221,6 +221,8 @@ public String transfer(BugFileTransferRequest request, String currentUser) {
             fileId = fileAssociationService.transferAndAssociation(association);
             // 删除本地上传的附件
             deleteLocalFile(request.getBugId(), null, request.getProjectId(), null, attachment.getId(), null);
+        } catch (MSException e) {
+            throw e;
         } catch (Exception e) {
             throw new MSException(Translator.get("file.transfer.failed"));
         }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/UserPlatformAccountControllerTests.java
Patch:
@@ -85,8 +85,6 @@ public void validatePost() throws Exception {
         BasePluginTestService.JiraIntegrationConfig integrationConfig = new BasePluginTestService.JiraIntegrationConfig();
         integrationConfig.setAddress(String.format("http://%s:%s", mockServerHost, mockServerHostPort));
         Map<String, Object> integrationConfigMap = JSON.parseMap(JSON.toJSONString(integrationConfig));
-        // @@请求成功
-        this.requestPostWithOk(VALIDATE_POST, integrationConfigMap, plugin.getId(), "100001");
     }
 
     @Test

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -16,6 +16,7 @@
 import io.metersphere.sdk.constants.ApplicationNumScope;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.util.BeanUtils;
+import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.dto.sdk.request.PosRequest;
 import io.metersphere.system.dto.user.UserDTO;
 import io.metersphere.system.mapper.ExtUserMapper;
@@ -376,12 +377,12 @@ private CaseReview addCaseReview(CaseReviewRequest request, String userId, Strin
     private void checkAndSetStartAndEndTime(CaseReviewRequest request, CaseReview caseReview) {
         long currentZeroTime = getCurrentZeroTime();
         if (request.getStartTime() != null && request.getStartTime() < currentZeroTime) {
-            throw new MSException("评审周期开始时间不得早于当前时间");
+            throw new MSException(Translator.get("permission.case_review.start_time"));
         } else {
             caseReview.setStartTime(request.getStartTime());
         }
         if (request.getEndTime() != null && request.getEndTime() < currentZeroTime) {
-            throw new MSException("评审周期结束时间不得早于当前时间");
+            throw new MSException(Translator.get("permission.case_review.end_time"));
         } else {
             caseReview.setEndTime(request.getEndTime());
         }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugDetailDTO.java
Patch:
@@ -58,4 +58,7 @@ public class BugDetailDTO {
     @Schema(description = "缺陷状态")
     private String status;
 
+    @Schema(description = "缺陷关联的用例数")
+    private long linkCaseCount;
+
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/mapper/ExtBugRelateCaseMapper.java
Patch:
@@ -65,4 +65,6 @@ public interface ExtBugRelateCaseMapper {
      * @return 缺陷集合
      */
     List<BugProviderDTO> getAssociateBugs(@Param("request") AssociateBugPageRequest request, @Param("sort") String sort);
+
+    long countByCaseId(String caseId);
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -300,6 +300,7 @@ public BugDetailDTO get(String id, String currentUser) {
         BugFollowerExample example = new BugFollowerExample();
         example.createCriteria().andBugIdEqualTo(id).andUserIdEqualTo(currentUser);
         detail.setFollowFlag(bugFollowerMapper.countByExample(example) > 0);
+        detail.setLinkCaseCount(extBugRelateCaseMapper.countByCaseId(id));
         return detail;
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/resolver/field/AbstractCustomFieldResolver.java
Patch:
@@ -23,7 +23,7 @@ public abstract class AbstractCustomFieldResolver {
     abstract public void validate(CustomFieldDao customField, Object value);
 
     protected void throwValidateException(String name) {
-        throw new MSException(FIELD_VALIDATE_ERROR, Translator.get(FIELD_VALIDATE_ERROR.getMessage(), name));
+        throw new MSException(FIELD_VALIDATE_ERROR, Translator.getWithArgs(FIELD_VALIDATE_ERROR.getMessage(), name));
     }
 
     protected void validateRequired(CustomFieldDao customField, Object value) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -168,6 +168,7 @@ public BugExportColumns getExportColumns(@PathVariable String projectId) {
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_EXPORT)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public ResponseEntity<byte[]> export(@Validated @RequestBody BugExportRequest request) throws Exception {
+        request.setSort(StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
         request.setUseTrash(false);
         return bugService.export(request);
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugBatchRequest.java
Patch:
@@ -14,4 +14,7 @@ public class BugBatchRequest extends TableBatchProcessDTO {
 
     @Schema(description = "是否回收站")
     private boolean useTrash;
+
+    @Schema(description = "排序参数")
+    private String sort;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -168,7 +168,7 @@ public class BugService {
      * @return 缺陷列表
      */
     public List<BugDTO> list(BugPageRequest request) {
-        List<BugDTO> bugs = extBugMapper.list(request);
+        List<BugDTO> bugs = extBugMapper.list(request, null);
         if (CollectionUtils.isEmpty(bugs)) {
             return new ArrayList<>();
         }
@@ -1391,7 +1391,7 @@ private List<BugDTO> getExportDataByBatchRequest(BugBatchRequest request) {
             BugPageRequest bugPageRequest = new BugPageRequest();
             BeanUtils.copyBean(bugPageRequest, request);
             bugPageRequest.setUseTrash(false);
-            List<BugDTO> allBugs = extBugMapper.list(bugPageRequest);
+            List<BugDTO> allBugs = extBugMapper.list(bugPageRequest, request.getSort());
             if (CollectionUtils.isNotEmpty(request.getExcludeIds())) {
                 allBugs.removeIf(bug -> request.getExcludeIds().contains(bug.getId()));
             }
@@ -1401,7 +1401,7 @@ private List<BugDTO> getExportDataByBatchRequest(BugBatchRequest request) {
             if (CollectionUtils.isEmpty(request.getSelectIds())) {
                 throw new MSException(Translator.get("no_bug_select"));
             }
-            return extBugMapper.listByIds(request.getSelectIds());
+            return extBugMapper.listByIds(request.getSelectIds(), request.getSort());
         }
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/request/FunctionalCaseFileRequest.java
Patch:
@@ -21,7 +21,6 @@ public class FunctionalCaseFileRequest implements Serializable {
     private String projectId;
 
     @Schema(description = "用例id",requiredMode = Schema.RequiredMode.REQUIRED)
-    @NotBlank(message = "{case_review_functional_case.case_id.not_blank}")
     private String caseId;
 
     @Schema(description = "文件id",requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiFileResourceService.java
Patch:
@@ -366,7 +366,7 @@ public String transfer(ApiTransferRequest request, String currentUser, String ty
         try {
             fileId = fileMetadataService.transferFile(request.getFileName(), request.getProjectId(), request.getModuleId(), currentUser, bytes);
         } catch (Exception e) {
-            throw new MSException(Translator.get("file.transfer.error"));
+            throw new MSException(Translator.get("file.transfer.failed"));
         }
         return fileId;
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -210,7 +210,7 @@ public ResponseEntity<byte[]> downloadOrPreview(BugFileSourceRequest request) {
     public String transfer(BugFileTransferRequest request, String currentUser) {
         BugLocalAttachment attachment = getLocalFile(request);
         if (attachment == null) {
-            throw new MSException(Translator.get("file.transfer.error"));
+            throw new MSException(Translator.get("file.transfer.failed"));
         }
         byte[] bytes = getLocalFileBytes(attachment, request.getProjectId(), request.getBugId());
         String fileId;
@@ -222,7 +222,7 @@ public String transfer(BugFileTransferRequest request, String currentUser) {
             // 删除本地上传的附件
             deleteLocalFile(request.getBugId(), null, request.getProjectId(), null, attachment.getId(), null);
         } catch (Exception e) {
-            throw new MSException(Translator.get("file.transfer.error"));
+            throw new MSException(Translator.get("file.transfer.failed"));
         }
         return fileId;
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseAttachmentController.java
Patch:
@@ -136,7 +136,7 @@ public String transfer(@Validated @RequestBody AttachmentTransferRequest request
         } catch (MSException e) {
             throw new MSException(e);
         } catch (Exception e) {
-            throw new MSException(Translator.get("file.transfer.error"));
+            throw new MSException(Translator.get("file.transfer.failed"));
         }
         return fileId;
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugFileDTO.java
Patch:
@@ -18,6 +18,9 @@ public class BugFileDTO {
     @Schema(description = "文件ID")
     private String fileId;
 
+    @Schema(description = "缺陷ID")
+    private String bugId;
+
     @Schema(description = "文件名称")
     private String fileName;
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtCaseReviewHistoryMapper.java
Patch:
@@ -15,6 +15,8 @@ public interface ExtCaseReviewHistoryMapper {
 
     List<CaseReviewHistoryDTO> getHistoryListWidthAbandoned(@Param("caseId") String caseId, @Param("reviewId") String reviewId);
 
+    List<CaseReviewHistoryDTO> getHistoryListWidthCaseId(@Param("caseId") String caseId, @Param("reviewId") String reviewId);
+
     void updateDelete(@Param("caseIds") List<String> caseIds, @Param("reviewId") String reviewId, @Param("delete") boolean delete);
 
     void updateAbandoned(@Param("caseId") String caseId);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseReviewService.java
Patch:
@@ -37,7 +37,7 @@ public List<FunctionalCaseReviewDTO> getFunctionalCaseReviewPage(FunctionalCaseR
     }
 
     public List<CaseReviewHistoryDTO> getCaseReviewHistory(String caseId) {
-        List<CaseReviewHistoryDTO> list = extCaseReviewHistoryMapper.getHistoryListWidthAbandoned(caseId, null);
+        List<CaseReviewHistoryDTO> list = extCaseReviewHistoryMapper.getHistoryListWidthCaseId(caseId, null);
         for (CaseReviewHistoryDTO caseReviewHistoryDTO : list) {
             if (StringUtils.equalsIgnoreCase(caseReviewHistoryDTO.getCreateUser(), UserRoleScope.SYSTEM)) {
                 caseReviewHistoryDTO.setUserName(Translator.get("case_review_history.system"));

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/PermissionConstants.java
Patch:
@@ -253,6 +253,7 @@ public class PermissionConstants {
     public static final String PROJECT_BUG_UPDATE = "PROJECT_BUG:READ+UPDATE";
     public static final String PROJECT_BUG_DELETE = "PROJECT_BUG:READ+DELETE";
     public static final String PROJECT_BUG_EXPORT = "PROJECT_BUG:READ+EXPORT";
+    public static final String PROJECT_BUG_COMMENT = "PROJECT_BUG:READ+COMMENT";
     /*------ end: BUG ------*/
     /*------ start: API_MANAGEMENT ------*/
     public static final String PROJECT_API_DEFINITION_READ = "PROJECT_API_DEFINITION:READ";

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugCommentController.java
Patch:
@@ -33,23 +33,23 @@ public List<BugCommentDTO> get(@PathVariable String bugId) {
 
     @PostMapping("/add")
     @Operation(summary = "缺陷管理-评论-新增/回复评论")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_COMMENT)
     @CheckOwner(resourceId = "#request.getBugId()", resourceType = "bug")
     public BugComment add(@RequestBody BugCommentEditRequest request) {
         return bugCommentService.addComment(request, SessionUtils.getUserId());
     }
 
     @PostMapping("/update")
     @Operation(summary = "缺陷管理-评论-编辑评论")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_COMMENT)
     @CheckOwner(resourceId = "#request.getBugId()", resourceType = "bug")
     public BugComment update(@RequestBody BugCommentEditRequest request) {
         return bugCommentService.updateComment(request, SessionUtils.getUserId());
     }
 
     @GetMapping("/delete/{commentId}")
     @Operation(summary = "缺陷管理-评论-删除评论")
-    @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
+    @RequiresPermissions(PermissionConstants.PROJECT_BUG_COMMENT)
     public void delete(@PathVariable String commentId) {
         bugCommentService.deleteComment(commentId, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemOrganizationController.java
Patch:
@@ -26,6 +26,7 @@
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
@@ -125,7 +126,7 @@ public List<OptionDTO> listAll() {
 
     @PostMapping("/list-member")
     @Operation(summary = "系统设置-系统-组织与项目-组织-获取组织成员列表")
-    @RequiresPermissions(value = {PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ, PermissionConstants.SYSTEM_USER_READ})
+    @RequiresPermissions(value = {PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ, PermissionConstants.SYSTEM_USER_READ}, logical = Logical.OR)
     public Pager<List<UserExtendDTO>> listMember(@Validated @RequestBody OrganizationRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), true);
         return PageUtils.setPageInfo(page, organizationService.getMemberListBySystem(request));

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugRelateCaseCommonService.java
Patch:
@@ -78,6 +78,8 @@ public List<BaseTreeNode> getRelateCaseTree(AssociateCaseModuleRequest request)
      * @return 模块树集合
      */
     public Map<String, Long> countTree(TestCasePageProviderRequest request) {
+        // 统计模块数量不用传模块ID
+        request.setModuleIds(null);
         // 目前只保留功能用例的左侧模块树方法调用, 后续其他用例根据RelateCaseType扩展
         List<ModuleCountDTO> moduleCounts = extBugRelateCaseMapper.countRelateCaseModuleTree(request, false);
         AssociateCaseModuleRequest moduleRequest = new AssociateCaseModuleRequest();

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -246,7 +246,7 @@ public FunctionalCaseImportResponse importExcel(@RequestPart("request") Function
     @CheckOwner(resourceId = "#request.getSourceId()", resourceType = "functional_case")
     public Pager<List<OperationHistoryDTO>> operationHistoryList(@Validated @RequestBody OperationHistoryRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                org.apache.commons.lang3.StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+               StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
         return PageUtils.setPageInfo(page, functionalCaseService.operationHistoryList(request));
     }
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseModuleController.java
Patch:
@@ -62,7 +62,7 @@ public void moveNode(@Validated @RequestBody NodeMoveRequest request) {
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_DELETE)
     @CheckOwner(resourceId = "#moduleId", resourceType = "functional_case_module")
     public void deleteNode(@PathVariable String moduleId) {
-        functionalCaseModuleService.deleteModule(moduleId);
+        functionalCaseModuleService.deleteModule(moduleId, SessionUtils.getUserId());
     }
 
     @GetMapping("/trash/tree/{projectId}")

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseMapper.java
Patch:
@@ -27,7 +27,7 @@ public interface ExtFunctionalCaseMapper {
 
     List<String> getFunctionalCaseIds(@Param("projectId") String projectId);
 
-    void removeToTrashByModuleIds(@Param("moduleIds") List<String> deleteIds);
+    void removeToTrashByModuleIds(@Param("moduleIds") List<String> deleteIds, @Param("userId") String userId);
 
     List<FunctionalCase> checkCaseByModuleIds(@Param("moduleIds") List<String> deleteIds);
 

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseModuleControllerTests.java
Patch:
@@ -702,7 +702,7 @@ public void deleteModuleTestSuccess() throws Exception {
         this.requestGetWithOk(URL_MODULE_TREE_DELETE + ModuleConstants.DEFAULT_NODE_ID);
 
         //service层判断：测试删除空集合
-        functionalCaseModuleService.deleteModuleByIds(new ArrayList<>(), new ArrayList<>());
+        functionalCaseModuleService.deleteModuleByIds(new ArrayList<>(), new ArrayList<>(), "admin");
 
         checkLog(functionalCase.getId(), OperationLogType.DELETE, URL_MODULE_TREE_DELETE);
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/PermissionConstants.java
Patch:
@@ -326,6 +326,6 @@ public class PermissionConstants {
 
     /*------ start: ORGANIZATION_TASK_CENTER_READ ------*/
     public static final String ORGANIZATION_TASK_CENTER_READ = "ORGANIZATION_TASK_CENTER:READ";
-    public static final String ORGANIZATION_TASK_CENTER_READ_STOP = "ORGANIZATION_TASK_CENTER::READ+STOP";
+    public static final String ORGANIZATION_TASK_CENTER_READ_STOP = "ORGANIZATION_TASK_CENTER:READ+STOP";
     /*------ end: ORGANIZATION_TASK_CENTER_READ ------*/
 }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/debug/ApiDebugAddRequest.java
Patch:
@@ -33,7 +33,7 @@ public class ApiDebugAddRequest implements Serializable {
     private String method;
 
     @Schema(description = "http协议url/其它协议则为空")
-    @Size(min = 1, max = 500, message = "{api_debug.protocol.length_range}")
+    @Size(max = 500, message = "{api_debug.protocol.length_range}")
     private String path;
 
     @Schema(description = "项目fk", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/debug/ApiDebugUpdateRequest.java
Patch:
@@ -31,7 +31,7 @@ public class ApiDebugUpdateRequest implements Serializable {
     private String method;
 
     @Schema(description = "http协议路径/其它协议则为空")
-    @Size(min = 1, max = 500, message = "{api_debug.protocol.length_range}")
+    @Size(max = 500, message = "{api_debug.protocol.length_range}")
     private String path;
 
     @Schema(description = "模块fk", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDebugControllerTests.java
Patch:
@@ -206,6 +206,7 @@ public void add() throws Exception {
         request.setName("test1");
         request.setUploadFileIds(null);
         request.setLinkFileIds(null);
+        request.setPath("");
         mvcResult = this.requestPostWithOkAndReturn(DEFAULT_ADD, request);
         resultData = getResultData(mvcResult, ApiDebug.class);
         this.anotherAddApiDebug = assertUpdateApiDebug(request, msHttpElement, resultData.getId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -576,7 +576,7 @@ private List<SyncAttachmentToPlatformRequest> deleteLocalFile(String bugId, Stri
     private String getLocalFileType(String fileName) {
         int i = fileName.lastIndexOf(".");
         if (i > 0) {
-            return fileName.substring(i);
+            return fileName.substring(i + 1);
         } else {
             return StringUtils.EMPTY;
         }

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtSystemProjectMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.system.mapper;
 
+import io.metersphere.system.domain.User;
 import io.metersphere.system.dto.OrganizationProjectOptionsDTO;
 import io.metersphere.system.dto.ProjectDTO;
 import io.metersphere.system.dto.ProjectResourcePoolDTO;
@@ -31,4 +32,6 @@ public interface ExtSystemProjectMapper {
     String selectModuleSettingsByResourceIdAndTable(@Param("resourceId") String resourceId, @Param("resourceTable") String resourceTable);
 
     List<UserExtendDTO> getMemberByProjectId(@Param("projectId") String projectId, @Param("keyword") String keyword);
+
+    List<User> getProjectMemberByUserId(@Param("projectId") String projectId, @Param("userIds") List<String> userIds);
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/MessageDetail.java
Patch:
@@ -21,5 +21,6 @@ public class MessageDetail implements Serializable {
     private String template;
     private String appKey;
     private String appSecret;
+    private String projectId;
 
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/DingEnterPriseNoticeSender.java
Patch:
@@ -17,7 +17,7 @@
 @Component
 public class DingEnterPriseNoticeSender extends AbstractNoticeSender {
 
-    public void sendDing(MessageDetail messageDetail, NoticeModel noticeModel, String context) throws Exception {
+    public void sendDing(MessageDetail messageDetail, String context) throws Exception {
         Client client = DingEnterPriseNoticeSender.createClient();
         GetAccessTokenResponse accessToken = getAccessToken(messageDetail.getAppKey(), messageDetail.getAppSecret());
         OrgGroupSendHeaders orgGroupSendHeaders = new OrgGroupSendHeaders();
@@ -92,7 +92,7 @@ private GetAccessTokenResponse getAccessToken(String appKey, String appSecret) t
     public void send(MessageDetail messageDetail, NoticeModel noticeModel) {
         String context = super.getContext(messageDetail, noticeModel);
         try {
-            sendDing(messageDetail, noticeModel, context);
+            sendDing(messageDetail, context);
             LogUtils.debug("发送钉钉内部机器人结束");
         } catch (Exception e) {
             LogUtils.error(e);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/MessageDetailService.java
Patch:
@@ -89,6 +89,7 @@ private void getMessageDetails(List<MessageDetail> messageDetails, List<MessageT
             messageDetail.setTaskType(messageTask.getTaskType());
             messageDetail.setEvent(messageTask.getEvent());
             messageDetail.setCreateTime(messageTask.getCreateTime());
+            messageDetail.setProjectId(messageTask.getProjectId());
             String projectRobotId = messageTask.getProjectRobotId();
             ProjectRobot projectRobot = projectRobotMap.get(projectRobotId);
             //如果当前机器人停止，那么当前任务也失效

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/OptionDisabledDTO.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.system.dto;
 
-import io.metersphere.system.dto.sdk.OptionDTO;
+import io.metersphere.system.domain.User;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -9,7 +9,7 @@
 @Data
 @AllArgsConstructor
 @NoArgsConstructor
-public class OptionDisabledDTO extends OptionDTO {
+public class OptionDisabledDTO extends User {
     @Schema(description =  "是否已经关联过")
     private Boolean disabled = false;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugCommentController.java
Patch:
@@ -51,6 +51,6 @@ public BugComment update(@RequestBody BugCommentEditRequest request) {
     @Operation(summary = "缺陷管理-评论-删除评论")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     public void delete(@PathVariable String commentId) {
-        bugCommentService.deleteComment(commentId);
+        bugCommentService.deleteComment(commentId, SessionUtils.getUserId());
     }
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -35,6 +35,7 @@
 import io.metersphere.sdk.file.FileRequest;
 import io.metersphere.sdk.util.FileAssociationSourceUtil;
 import io.metersphere.sdk.util.LogUtils;
+import io.metersphere.sdk.util.MsFileUtils;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.log.constants.OperationLogModule;
@@ -478,6 +479,7 @@ private List<SyncAttachmentToPlatformRequest> uploadLinkFile(String bugId, Strin
      */
     private List<SyncAttachmentToPlatformRequest> uploadLocalFile(String bugId, String platformBugKey, String projectId, File tmpFileDir,
                                                                   MultipartFile file, String currentUser, String platformName) {
+        MsFileUtils.validateFileName(file.getOriginalFilename());
         BugLocalAttachment record = new BugLocalAttachment();
         record.setId(IDGenerator.nextStr());
         record.setBugId(bugId);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -186,6 +186,7 @@ public ApiDefinition create(ApiDefinitionAddRequest request, String userId) {
         ProjectService.checkResourceExist(request.getProjectId());
         ApiDefinition apiDefinition = new ApiDefinition();
         BeanUtils.copyBean(apiDefinition, request);
+        apiDefinition.setVersionId(StringUtils.defaultIfBlank(request.getVersionId(), extBaseProjectVersionMapper.getDefaultVersion(request.getProjectId())));
         checkAddExist(apiDefinition);
         checkResponseNameCode(request.getResponse());
         apiDefinition.setId(IDGenerator.nextStr());
@@ -197,7 +198,6 @@ public ApiDefinition create(ApiDefinitionAddRequest request, String userId) {
         apiDefinition.setUpdateUser(userId);
         apiDefinition.setCreateTime(System.currentTimeMillis());
         apiDefinition.setUpdateTime(System.currentTimeMillis());
-        apiDefinition.setVersionId(StringUtils.defaultIfBlank(request.getVersionId(), extBaseProjectVersionMapper.getDefaultVersion(request.getProjectId())));
         apiDefinition.setRefId(apiDefinition.getId());
         if (CollectionUtils.isNotEmpty(request.getTags())) {
             apiDefinition.setTags(request.getTags());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -248,8 +248,11 @@ public void testAdd() throws Exception {
         request.setPath("/api/admin/posts");
         request.setUploadFileIds(null);
         request.setLinkFileIds(null);
+        String versionId = request.getVersionId();
+        request.setVersionId(null);
         mvcResult = this.requestPostWithOkAndReturn(ADD, request);
         resultData = getResultData(mvcResult, ApiDefinition.class);
+        request.setVersionId(versionId);
         assertAddApiDefinition(request, msHttpElement, resultData.getId());
 
         testHandleFileAssociationUpgrade();

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugDetailDTO.java
Patch:
@@ -17,6 +17,9 @@ public class BugDetailDTO {
     @Size(min = 1, max = 50, message = "{bug.id.length_range}", groups = {Created.class, Updated.class})
     private String id;
 
+    @Schema(description = "业务ID")
+    private Integer num;
+
     @Schema(description = "缺陷标题")
     @Size(min = 1, max = 300, message = "{bug.title.length_range}", groups = {Created.class, Updated.class})
     private String title;

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -252,6 +252,7 @@ public BugDetailDTO get(String id, String currentUser) {
         List<BugCustomFieldDTO> allCustomFields = extBugCustomFieldMapper.getBugAllCustomFields(List.of(id), bug.getProjectId());
         BugDetailDTO detail = new BugDetailDTO();
         detail.setId(id);
+        detail.setNum(bug.getNum());
         detail.setProjectId(bug.getProjectId());
         detail.setTemplateId(template.getId());
         detail.setPlatformDefault(template.getPlatformDefault());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugRelateCaseDTO.java
Patch:
@@ -9,6 +9,9 @@ public class BugRelateCaseDTO{
     @Schema(description = "关联ID")
     private String relateId;
 
+    @Schema(description = "关联用例ID")
+    private String relateCaseId;
+
     @Schema(description = "关联用例名称")
     private String relateCaseName;
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/NotificationController.java
Patch:
@@ -3,10 +3,9 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-
-import io.metersphere.project.domain.Notification;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.sdk.request.NotificationRequest;
+import io.metersphere.system.log.dto.NotificationDTO;
 import io.metersphere.system.service.NotificationService;
 import io.metersphere.system.utils.PageUtils;
 import io.metersphere.system.utils.Pager;
@@ -29,7 +28,7 @@ public class NotificationController {
 
     @PostMapping(value = "/list/all/page")
     @Operation(summary = "消息中心-获取消息中心所有消息列表")
-    public Pager<List<Notification>> listNotification(@Validated @RequestBody NotificationRequest notificationRequest) {
+    public Pager<List<NotificationDTO>> listNotification(@Validated @RequestBody NotificationRequest notificationRequest) {
         Page<Object> page = PageHelper.startPage(notificationRequest.getCurrent(), notificationRequest.getPageSize(), true);
         return PageUtils.setPageInfo(page, notificationService.listNotification(notificationRequest, SessionUtils.getUserId()));
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/request/NotificationRequest.java
Patch:
@@ -22,7 +22,7 @@ public class NotificationRequest extends BasePageRequest {
     @Schema(description =  "状态")
     private String status;
 
-    @Schema(description =  "资源类型: TEST_PLAN/BUG/CASE/API/UI/LOAD/JENKINS")
+    @Schema(description =  "资源类型: TEST_PLAN/BUG/CASE/API/UI/LOAD/JENKINS/SCHEDULE")
     private String resourceType;
 
     @Schema(description =  "创建时间")

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/BaseNotificationMapper.java
Patch:
@@ -1,14 +1,14 @@
 package io.metersphere.system.mapper;
 
 
-import io.metersphere.project.domain.Notification;
 import io.metersphere.system.dto.sdk.request.NotificationRequest;
+import io.metersphere.system.log.dto.NotificationDTO;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface BaseNotificationMapper {
 
-    List<Notification> listNotification(@Param("request") NotificationRequest notificationRequest);
+    List<NotificationDTO> listNotification(@Param("request") NotificationRequest notificationRequest);
 
 }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/NotificationControllerTests.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.system.controller.handler.ResultHolder;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.sdk.request.NotificationRequest;
+import io.metersphere.system.log.dto.NotificationDTO;
 import io.metersphere.system.notice.constants.NotificationConstants;
 import io.metersphere.system.utils.Pager;
 import jakarta.annotation.Resource;
@@ -57,14 +58,14 @@ void getNotificationSuccess() throws Exception {
         notificationRequest.setCurrent(1);
         notificationRequest.setReceiver("admin");
         notificationRequest.setType("SYSTEM_NOTICE");
+        notificationRequest.setResourceType("CASE");
         MvcResult mvcResult = this.requestPostWithOkAndReturn(NOTIFICATION_LIST_PAGE, notificationRequest);
-        Pager<List<Notification>> tableData = JSON.parseObject(JSON.toJSONString(
+        Pager<List<NotificationDTO>> tableData = JSON.parseObject(JSON.toJSONString(
                         JSON.parseObject(mvcResult.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class).getData()),
                 Pager.class);
         //返回值的页码和当前页码相同
         Assertions.assertEquals(tableData.getCurrent(), notificationRequest.getCurrent());
         Assertions.assertFalse(tableData.getList().isEmpty());
-
     }
 
     @Test

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserRoleRelationService.java
Patch:
@@ -141,7 +141,7 @@ public Map<Organization, List<Project>> selectOrganizationProjectByUserId(String
             if (organization != null) {
                 returnMap.computeIfAbsent(organization, k -> new ArrayList<>());
                 Project project = projectMapper.selectByPrimaryKey(userRoleRelation.getSourceId());
-                if (project != null) {
+                if (project != null && !returnMap.get(organization).contains(project)) {
                     returnMap.get(organization).add(project);
                 }
             }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTemplateService.java
Patch:
@@ -114,7 +114,7 @@ public TemplateDTO getTemplateDTO(Template template) {
 
         // 封装自定义字段信息
         List<TemplateCustomFieldDTO> fieldDTOS = templateCustomFields.stream()
-                .filter(i -> !BooleanUtils.isTrue(i.getSystemField()))
+                .filter(i -> !BooleanUtils.isTrue(i.getSystemField()) && fieldMap.containsKey(i.getFieldId()))
                 .sorted(Comparator.comparingInt(TemplateCustomField::getPos))
                 .map(i -> {
                     CustomField customField = fieldMap.get(i.getFieldId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PlatformPluginService.java
Patch:
@@ -54,4 +54,4 @@ private ServiceIntegration getServiceIntegrationByPluginId(String pluginId) {
     public List<Plugin> getOrgEnabledPlatformPlugins(String orgId) {
         return basePluginService.getOrgEnabledPlugins(orgId, PluginScenarioType.PLATFORM);
     }
-}
+}
\ No newline at end of file

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -198,7 +198,7 @@ public void testAdd() throws Exception {
         msHttpResponse.get(0).setBody(ApiDebugControllerTests.addBodyLinkFile(msHttpResponse.get(0).getBody(), fileMetadataId));
         request.setResponse(msHttpResponse);
 
-        uploadFileId = doUploadTempFile(getMockMultipartFile("file_upload.JPG"));
+        uploadFileId = doUploadTempFile(getMockMultipartFile("api-add-file_upload.JPG"));
         request.setUploadFileIds(List.of(uploadFileId));
         request.setLinkFileIds(List.of(fileMetadataId));
 
@@ -216,7 +216,7 @@ public void testAdd() throws Exception {
         apiTransferRequest.setProjectId(DEFAULT_PROJECT_ID);
         apiTransferRequest.setModuleId("root");
         apiTransferRequest.setLocal(true);
-        String uploadFileId = doUploadTempFile(getMockMultipartFile("file_upload.JPG"));
+        String uploadFileId = doUploadTempFile(getMockMultipartFile("api-file_upload.JPG"));
         apiTransferRequest.setFileId(uploadFileId);
         this.requestPost("/api/definition/transfer", apiTransferRequest).andExpect(status().isOk());
         //文件不存在

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/BugNoticeDTO.java
Patch:
@@ -15,6 +15,9 @@
 @AllArgsConstructor
 public class BugNoticeDTO {
 
+    @Schema(description ="message.domain.bug_num")
+    private String id;
+
     @Schema(description ="message.domain.bug_title")
     private String title;
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugController.java
Patch:
@@ -125,8 +125,8 @@ public BugDetailDTO get(@PathVariable String id) {
     @GetMapping("/delete/{id}")
     @Operation(summary = "缺陷管理-列表-删除缺陷")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
-    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#id)", msClass = BugLogService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.BUG_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getNoticeById(#id)", targetClass = BugNoticeService.class)
+    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#id)", msClass = BugLogService.class)
     public void delete(@PathVariable String id) {
         bugService.delete(id, SessionUtils.getUserId());
     }
@@ -176,6 +176,7 @@ public ResponseEntity<byte[]> export(@Validated @RequestBody BugExportRequest re
     @Operation(summary = "缺陷管理-列表-批量删除缺陷")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_DELETE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @SendNotice(taskType = NoticeConstants.TaskType.BUG_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getBatchNoticeByRequest(#request)", targetClass = BugNoticeService.class)
     public void batchDelete(@Validated @RequestBody BugBatchRequest request) {
         request.setUseTrash(false);
         bugService.batchDelete(request, SessionUtils.getUserId());
@@ -185,6 +186,7 @@ public void batchDelete(@Validated @RequestBody BugBatchRequest request) {
     @Operation(summary = "缺陷管理-列表-批量编辑缺陷")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
+    @SendNotice(taskType = NoticeConstants.TaskType.BUG_TASK, event = NoticeConstants.Event.UPDATE, target = "#targetClass.getBatchNoticeByRequest(#request)", targetClass = BugNoticeService.class)
     public void batchUpdate(@Validated @RequestBody BugBatchUpdateRequest request) {
         request.setUseTrash(false);
         bugService.batchUpdate(request, SessionUtils.getUserId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugLogService.java
Patch:
@@ -106,7 +106,7 @@ public LogDTO recoverLog(String id) {
      * @param id 缺陷ID
      * @return 缺陷DTO
      */
-    private BugDTO getOriginalValue(String id) {
+    public BugDTO getOriginalValue(String id) {
         // 缺陷基础信息
         BugDTO originalBug = new BugDTO();
         Bug bug = bugMapper.selectByPrimaryKey(id);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -189,7 +189,7 @@ public FunctionalCase addFunctionalCase(FunctionalCaseAddRequest request, List<M
         if (CollectionUtils.isNotEmpty(request.getAttachments())) {
             copyAttachment(request, userId, uploadFileIds, caseId);
         }
-
+        LogUtils.info("保存用例的文件操作完成");
         addCaseReviewCase(request.getReviewId(), caseId, userId);
 
         //记录日志
@@ -223,6 +223,7 @@ private void copyAttachment(FunctionalCaseAddRequest request, String userId, Lis
             FunctionalCaseAttachment caseAttachment = functionalCaseAttachmentService.creatAttachment(saveAttachmentFileId, functionalCaseAttachmentDTO.getFileName(), functionalCaseAttachmentDTO.getSize(), caseId, functionalCaseAttachmentDTO.getLocal(), userId);
             if(functionalCaseAttachmentDTO.getLocal()) {
                 caseAttachment.setFileSource(CaseFileSourceType.ATTACHMENT.toString());
+                LogUtils.info("开始复制文件");
                 copyFile(request, caseId, saveAttachmentFileId, oldFileMap, functionalCaseAttachmentDTO, defaultRepository);
             }
             functionalCaseAttachmentMapper.insertSelective(caseAttachment);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseAttachmentService.java
Patch:
@@ -104,6 +104,9 @@ public List<String> uploadFile(String projectId, String caseId, List<MultipartFi
                 fileRequest.setFileName(file.getOriginalFilename());
                 fileRequest.setFolder(DefaultRepositoryDir.getFunctionalCaseDir(projectId, caseId) + "/" + fileId);
                 fileRequest.setStorage(StorageType.MINIO.name());
+                if (file.getSize() > maxFileSize.toBytes()) {
+                    throw new MSException(Translator.get("file.size.is.too.large"));
+                }
                 try {
                     fileService.upload(file, fileRequest);
                 } catch (Exception e) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/BugExportHeaderModel.java
Patch:
@@ -14,6 +14,8 @@
 @NoArgsConstructor
 @AllArgsConstructor
 public class BugExportHeaderModel {
+    //xlsx文件前缀
+    private String xlsxFileNamePrefix;
 
     /**
      * 导出的表头列

File: backend/services/project-management/src/main/java/io/metersphere/project/mapper/ExtProjectMapper.java
Patch:
@@ -23,4 +23,6 @@ public interface ExtProjectMapper {
     int resourcePoolIsExistByOrg(@Param("poolId") String string, @Param("projectId") String projectId, @Param("type") String type);
 
     List<ProjectTestResourcePool> getResourcePool(@Param("projectId") String projectId, @Param("type") String type);
+
+    List<Project> getAllProject(@Param("organizationId") String organizationId);
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -320,6 +320,8 @@ public void delete(String id, String currentUser) {
             Bug record = new Bug();
             record.setId(id);
             record.setDeleted(true);
+            record.setDeleteUser(currentUser);
+            record.setDeleteTime(System.currentTimeMillis());
             bugMapper.updateByPrimaryKeySelective(record);
         } else {
             // 需同步删除平台缺陷
@@ -820,8 +822,6 @@ private Bug handleAndSaveBug(BugEditRequest request, String currentUser, String
             bug.setCreateTime(System.currentTimeMillis());
             bug.setUpdateUser(currentUser);
             bug.setUpdateTime(System.currentTimeMillis());
-            bug.setDeleteUser(currentUser);
-            bug.setDeleteTime(System.currentTimeMillis());
             bug.setDeleted(false);
             bug.setPos(getNextPos(request.getProjectId()));
             bugMapper.insert(bug);

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -243,6 +243,7 @@ public String runScript(CustomFunctionRunRequest runRequest) {
         String testId = runRequest.getProjectId();
         // 生成执行脚本
         MsCommentScriptElement msCommentScriptElement = BeanUtils.copyBean(new MsCommentScriptElement(), runRequest);
+        msCommentScriptElement.setScriptLanguage(runRequest.getType());
         String executeScript = parseExecuteScript(msCommentScriptElement, new ApiParamConfig());
         // 设置执行参数
         TaskRequestDTO taskRequest = new TaskRequestDTO();

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugFileDTO.java
Patch:
@@ -33,6 +33,9 @@ public class BugFileDTO {
     @Schema(description = "创建人")
     private String createUser;
 
+    @Schema(description = "创建人名称")
+    private String createUserName;
+
     @Schema(description = "是否本地文件")
     private Boolean local;
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/listener/FunctionalCaseImportEventListener.java
Patch:
@@ -82,7 +82,7 @@ public class FunctionalCaseImportEventListener extends AnalysisEventListener<Map
     private int successCount = 0;
     private Map<String, String> pathMap = new HashMap<>();
     protected static final int TAGS_COUNT = 15;
-    protected static final int TAG_LENGTH = 15;
+    protected static final int TAG_LENGTH = 64;
 
     public FunctionalCaseImportEventListener(FunctionalCaseImportRequest request, Class clazz, List<TemplateCustomFieldDTO> customFields, Set<ExcelMergeInfo> mergeInfoSet, SessionUser user) {
         this.mergeInfoSet = mergeInfoSet;

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseAttachmentService.java
Patch:
@@ -122,7 +122,6 @@ public FunctionalCaseAttachment creatAttachment(String fileId, String fileName,
         caseAttachment.setCaseId(caseId);
         caseAttachment.setFileId(fileId);
         caseAttachment.setFileName(fileName);
-        caseAttachment.setFileSource(CaseFileSourceType.ATTACHMENT.toString());
         caseAttachment.setSize(fileSize);
         caseAttachment.setLocal(isLocal);
         caseAttachment.setCreateUser(userId);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -198,7 +198,7 @@ public FunctionalCase addFunctionalCase(FunctionalCaseAddRequest request, List<M
     private void copyAttachment(FunctionalCaseAddRequest request, String userId, List<String> uploadFileIds, String caseId) {
         //获取用例已经上传的文件ID
         Map<String, FunctionalCaseAttachmentDTO> attachmentDTOMap = request.getAttachments().stream().collect(Collectors.toMap(FunctionalCaseAttachmentDTO::getId, t -> t));
-        List<String> attachmentFileIds = request.getAttachments().stream().filter(t-> !t.isDeleted()).map(FunctionalCaseAttachmentDTO::getId).filter(t -> !uploadFileIds.contains(t)).toList();
+        List<String> attachmentFileIds = request.getAttachments().stream().filter(t -> !t.isDeleted()).map(FunctionalCaseAttachmentDTO::getId).filter(t -> !uploadFileIds.contains(t)).toList();
         if (CollectionUtils.isEmpty(attachmentFileIds)) {
             return;
         }
@@ -1020,7 +1020,7 @@ private void parseInsertDataToModule(FunctionalCaseExcelData functionalCaseExcel
      * @param tags 标签
      * @return
      */
-    private List<String> handleImportTags(String tags) {
+    public List<String> handleImportTags(String tags) {
         List<String> split = List.of(tags.split("[,;]"));
         return split.stream().map(String::trim).filter(StringUtils::isNotEmpty).collect(Collectors.toList());
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -378,7 +378,9 @@ private void handleCount(FunctionalCaseDetailDTO functionalCaseDetailDTO) {
 
         //获取变更历史数量数量
         OperationHistoryExample operationHistoryExample = new OperationHistoryExample();
-        operationHistoryExample.createCriteria().andSourceIdEqualTo(functionalCaseDetailDTO.getId());
+        List<String>types = List.of(OperationLogType.ADD.name(), OperationLogType.IMPORT.name(), OperationLogType.UPDATE.name());
+        List<String> modules = List.of(OperationLogModule.CASE_MANAGEMENT_CASE_CREATE, OperationLogModule.CASE_MANAGEMENT_CASE_UPDATE);
+        operationHistoryExample.createCriteria().andSourceIdEqualTo(functionalCaseDetailDTO.getId()).andTypeIn(types).andModuleIn(modules);
         functionalCaseDetailDTO.setHistoryCount((int) operationHistoryMapper.countByExample(operationHistoryExample));
 
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectStatusFlowSettingController.java
Patch:
@@ -77,7 +77,7 @@ public StatusItem addStatusItem(@Validated @RequestBody StatusItemAddRequest req
     @Operation(summary = "项目管理-模板-状态流设置-修改状态项")
     @RequiresPermissions(PermissionConstants.PROJECT_TEMPLATE_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateStatusItemLog(#request)", msClass = ProjectStatusFlowSettingLogService.class)
-    public StatusItem addStatusItem(@Validated @RequestBody StatusItemUpdateRequest request) {
+    public StatusItem updateStatusItem(@Validated @RequestBody StatusItemUpdateRequest request) {
         return projectStatusFlowSettingService.updateStatusItem(request);
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseAttachmentController.java
Patch:
@@ -133,6 +133,8 @@ public String transfer(@Validated @RequestBody AttachmentTransferRequest request
             fileAssociationDTO.setModuleId(request.getModuleId());
             fileId = fileAssociationService.transferAndAssociation(fileAssociationDTO);
             functionalCaseAttachmentService.deleteCaseAttachment(Arrays.asList(request.getFileId()), request.getCaseId(), request.getProjectId());
+        } catch (MSException e) {
+            throw new MSException(e);
         } catch (Exception e) {
             throw new MSException(Translator.get("file.transfer.error"));
         }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/EnvironmentService.java
Patch:
@@ -398,7 +398,8 @@ public List<EnvironmentPluginScriptDTO> getPluginScripts(String projectId) {
         orgApiPluginWrappers.stream().forEach(wrapper -> {
             Plugin plugin = wrapper.getPlugin();
             if (plugin instanceof AbstractProtocolPlugin protocolPlugin) {
-                pluginScripts.add(pluginScriptService.get(wrapper.getPluginId(), protocolPlugin.getEnvProtocolScriptId()));
+                Optional.ofNullable(pluginScriptService.get(wrapper.getPluginId(), protocolPlugin.getEnvProtocolScriptId()))
+                        .ifPresent(pluginScripts::add);
             }
         });
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/request/StatusItemUpdateRequest.java
Patch:
@@ -17,7 +17,6 @@ public class StatusItemUpdateRequest implements Serializable {
     private String id;
 
     @Schema(description = "状态名称", requiredMode = Schema.RequiredMode.REQUIRED)
-    @NotBlank(message = "{status_item.name.not_blank}")
     @Size(min = 1, max = 255, message = "{status_item.name.length_range}")
     private String name;
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugFileDTO.java
Patch:
@@ -33,6 +33,6 @@ public class BugFileDTO {
     @Schema(description = "创建人")
     private String createUser;
 
-    @Schema(description = "是否关联")
-    private Boolean associated;
+    @Schema(description = "是否本地文件")
+    private Boolean local;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugAttachmentService.java
Patch:
@@ -98,7 +98,7 @@ public List<BugFileDTO> getAllBugFiles(String bugId) {
         if (!CollectionUtils.isEmpty(bugLocalAttachments)) {
             bugLocalAttachments.forEach(localFile -> {
                 BugFileDTO localFileDTO = BugFileDTO.builder().refId(localFile.getId()).fileId(localFile.getFileId()).fileName(localFile.getFileName()).fileType(getLocalFileType(localFile.getFileName()))
-                        .fileSize(localFile.getSize()).createTime(localFile.getCreateTime()).createUser(localFile.getCreateUser()).associated(false).build();
+                        .fileSize(localFile.getSize()).createTime(localFile.getCreateTime()).createUser(localFile.getCreateUser()).local(true).build();
                 bugFiles.add(localFileDTO);
             });
         }
@@ -112,7 +112,7 @@ public List<BugFileDTO> getAllBugFiles(String bugId) {
                 FileMetadata associatedFileMetadata = fileMetadataMap.get(associatedFile.getFileId());
                 BugFileDTO associatedFileDTO = BugFileDTO.builder().refId(associatedFile.getId()).fileId(associatedFile.getFileId()).fileName(associatedFileMetadata.getName() + "." + associatedFileMetadata.getType())
                         .fileType(associatedFileMetadata.getType()).fileSize(associatedFileMetadata.getSize()).createTime(associatedFileMetadata.getCreateTime())
-                        .createUser(associatedFileMetadata.getCreateUser()).associated(true).build();
+                        .createUser(associatedFileMetadata.getCreateUser()).local(false).build();
                 bugFiles.add(associatedFileDTO);
             });
         }
@@ -385,7 +385,7 @@ public void deleteSyncAttachmentFromMs(Set<String> platformAttachmentSet, List<B
                 List<String> unLinkIds = new ArrayList<>();
                 List<String> deleteLocalIds = new ArrayList<>();
                 deleteMsAttachments.forEach(deleteMsFile -> {
-                    if (deleteMsFile.getAssociated()) {
+                    if (!deleteMsFile.getLocal()) {
                         unLinkIds.add(deleteMsFile.getRefId());
                     } else {
                         deleteLocalIds.add(deleteMsFile.getRefId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/ServiceIntegrationService.java
Patch:
@@ -15,7 +15,6 @@
 import io.metersphere.system.utils.ServiceUtils;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
@@ -127,9 +126,9 @@ private void checkAddExist(ServiceIntegration serviceIntegration) {
         }
     }
 
-    public void validate(String pluginId, Map<String, String> serviceIntegrationInfo) {
+    public void validate(String pluginId, String orgId, Map<String, String> serviceIntegrationInfo) {
         pluginService.checkResourceExist(pluginId);
-        Platform platform = platformPluginService.getPlatform(pluginId, StringUtils.EMPTY, JSON.toJSONString(serviceIntegrationInfo));
+        Platform platform = platformPluginService.getPlatform(pluginId, orgId, JSON.toJSONString(serviceIntegrationInfo));
         platform.validateIntegrationConfig();
     }
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -581,7 +581,7 @@ private List<FunctionalCasePageDTO> handleCustomFields(List<FunctionalCasePageDT
             functionalCasePageDTO.setCustomFields(collect.get(functionalCasePageDTO.getId()));
             functionalCasePageDTO.setCreateUserName(userMap.get(functionalCasePageDTO.getCreateUser()));
             functionalCasePageDTO.setUpdateUserName(userMap.get(functionalCasePageDTO.getUpdateUser()));
-            functionalCasePageDTO.setDeleteUserName(userMap.get(functionalCasePageDTO.getDeleteUserName()));
+            functionalCasePageDTO.setDeleteUserName(userMap.get(functionalCasePageDTO.getDeleteUser()));
         });
         return functionalCaseLists;
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/ModuleConstants.java
Patch:
@@ -23,5 +23,7 @@ public class ModuleConstants {
     /* 模块数量统计相关key */
     public static final String MODULE_COUNT_ALL = "all";
     public static final String MODULE_COUNT_MY = "my";
+    public static final String MODULE_COUNT_GIT = "git";
+    public static final String MODULE_COUNT_MINIO = "minio";
     /* 模块数量统计相关key end*/
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/response/FileInformationResponse.java
Patch:
@@ -40,10 +40,10 @@ public class FileInformationResponse {
     @Schema(description = "模块ID")
     private String moduleId;
 
-    @Schema(description = "更新人")
+    @Schema(description = "创建人")
     private String createUser;
 
-    @Schema(description = "更新时间")
+    @Schema(description = "创建时间")
     private long createTime;
 
     @Schema(description = "更新人")

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -457,6 +457,7 @@ public Map<String, Long> moduleCount(FileMetadataTableRequest request, String op
         FileManagementQuery myFileCountDTO = new FileManagementQuery();
         myFileCountDTO.setProjectId(request.getProjectId());
         myFileCountDTO.setStorage(null);
+        myFileCountDTO.setHiddenIds(pageDTO.getHiddenIds());
         long allCount = extFileMetadataMapper.fileCount(myFileCountDTO);
         myFileCountDTO.setOperator(operator);
         long myFileCount = extFileMetadataMapper.fileCount(myFileCountDTO);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseService.java
Patch:
@@ -355,11 +355,11 @@ private Boolean checkIsFollowCase(String caseId, String userId) {
     private FunctionalCase checkFunctionalCase(String functionalCaseId) {
         FunctionalCaseExample functionalCaseExample = new FunctionalCaseExample();
         functionalCaseExample.createCriteria().andIdEqualTo(functionalCaseId).andDeletedEqualTo(false);
-        FunctionalCase functionalCase = functionalCaseMapper.selectByPrimaryKey(functionalCaseId);
-        if (functionalCase == null) {
+        List<FunctionalCase> functionalCases = functionalCaseMapper.selectByExample(functionalCaseExample);
+        if (CollectionUtils.isEmpty(functionalCases)) {
             throw new MSException(CaseManagementResultCode.FUNCTIONAL_CASE_NOT_FOUND);
         }
-        return functionalCase;
+        return functionalCases.get(0);
     }
 
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseAttachmentService.java
Patch:
@@ -381,7 +381,7 @@ public void uploadMinioFile(String caseId, String projectId, List<String> upload
         functionalCaseAttachmentExample.createCriteria().andCaseIdEqualTo(caseId).andFileIdIn(uploadFileIds).andFileSourceEqualTo(fileSource);
         List<FunctionalCaseAttachment> existFiles = functionalCaseAttachmentMapper.selectByExample(functionalCaseAttachmentExample);
         List<String> existFileIds = existFiles.stream().map(FunctionalCaseAttachment::getFileId).distinct().toList();
-        List<String> filIds = uploadFileIds.stream().filter(t -> !existFileIds.contains(t)).toList();
+        List<String> filIds = uploadFileIds.stream().filter(t -> !existFileIds.contains(t) && StringUtils.isNotBlank(t)).toList();
         if (CollectionUtils.isEmpty(filIds)) {
             return;
         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseTrashController.java
Patch:
@@ -42,7 +42,7 @@ public class FunctionalCaseTrashController {
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @RequestBody FunctionalCasePageRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "pos desc");
         return PageUtils.setPageInfo(page, functionalCaseService.getFunctionalCasePage(request, true));
     }
 

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectTemplateService.java
Patch:
@@ -21,7 +21,6 @@
 import io.metersphere.system.service.BaseTemplateService;
 import io.metersphere.system.service.PlatformPluginService;
 import io.metersphere.system.service.PluginLoadService;
-import io.metersphere.system.service.ServiceIntegrationService;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -47,8 +46,6 @@ public class ProjectTemplateService extends BaseTemplateService {
     @Resource
     private ProjectService projectService;
     @Resource
-    private ServiceIntegrationService serviceIntegrationService;
-    @Resource
     private PluginLoadService pluginLoadService;
     @Resource
     private PlatformPluginService platformPluginService;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/request/StatusItemAddRequest.java
Patch:
@@ -34,6 +34,7 @@ public class StatusItemAddRequest implements Serializable {
     private String scene;
 
     @Schema(description = "状态说明")
+    @Size(max = 500)
     private String remark;
 
     @Schema(description = "所有状态都可以流转到该状态")

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/request/StatusItemUpdateRequest.java
Patch:
@@ -22,5 +22,6 @@ public class StatusItemUpdateRequest implements Serializable {
     private String name;
 
     @Schema(description = "状态说明")
+    @Size(max = 500)
     private String remark;
 }
\ No newline at end of file

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/plugin/MsPluginManager.java
Patch:
@@ -11,7 +11,6 @@ public class MsPluginManager extends DefaultPluginManager {
     @Override
     protected ExtensionFinder createExtensionFinder() {
         DefaultExtensionFinder extensionFinder = (DefaultExtensionFinder) super.createExtensionFinder();
-        extensionFinder.addServiceProviderExtensionFinder();
         extensionFinder.add(new JdbcDriverServiceProviderExtensionFinder(this));
         return extensionFinder;
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PluginLoadService.java
Patch:
@@ -90,7 +90,7 @@ public void loadPluginFromRepository(String fileName) {
         if (!file.exists()) {
             try (InputStream fileAsStream = FileCenter.getDefaultRepository().getFileAsStream(getDefaultRepositoryFileRequest(fileName))) {
                 FileUtils.copyInputStreamToFile(fileAsStream, file);
-                loadPlugin(filePath);
+                loadPlugin(fileName);
             } catch (Exception e) {
                 LogUtils.error("从对象存储加载插件异常", e);
             }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseReviewService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.functional.mapper.ExtCaseReviewFunctionalCaseMapper;
 import io.metersphere.functional.mapper.ExtCaseReviewHistoryMapper;
 import io.metersphere.functional.request.FunctionalCaseReviewListRequest;
+import io.metersphere.sdk.constants.UserRoleScope;
 import io.metersphere.sdk.util.Translator;
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
@@ -38,7 +39,7 @@ public List<FunctionalCaseReviewDTO> getFunctionalCaseReviewPage(FunctionalCaseR
     public List<CaseReviewHistoryDTO> getCaseReviewHistory(String caseId) {
         List<CaseReviewHistoryDTO> list = extCaseReviewHistoryMapper.getHistoryListWidthAbandoned(caseId, null);
         for (CaseReviewHistoryDTO caseReviewHistoryDTO : list) {
-            if (StringUtils.equalsIgnoreCase(caseReviewHistoryDTO.getCreateUser(), "system")) {
+            if (StringUtils.equalsIgnoreCase(caseReviewHistoryDTO.getCreateUser(), UserRoleScope.SYSTEM)) {
                 caseReviewHistoryDTO.setUserName(Translator.get("case_review_history.system"));
             }
             if (caseReviewHistoryDTO.getContent() != null) {

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectController.java
Patch:
@@ -1,12 +1,12 @@
 package io.metersphere.project.controller;
 
 import io.metersphere.project.domain.Project;
+import io.metersphere.project.dto.ProjectRequest;
 import io.metersphere.project.request.ProjectSwitchRequest;
 import io.metersphere.project.service.ProjectLogService;
 import io.metersphere.project.service.ProjectService;
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.system.dto.ProjectDTO;
-import io.metersphere.system.dto.UpdateProjectRequest;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.user.UserDTO;
 import io.metersphere.system.dto.user.UserExtendDTO;
@@ -58,8 +58,8 @@ public UserDTO switchProject(@RequestBody ProjectSwitchRequest request) {
     @Operation(summary = "项目管理-更新项目")
     @RequiresPermissions(PermissionConstants.PROJECT_BASE_INFO_READ_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.updateLog(#request)", msClass = ProjectLogService.class)
-    @CheckOwner(resourceId = "#request.id", resourceType = "project")
-    public ProjectDTO updateProject(@RequestBody @Validated({Updated.class}) UpdateProjectRequest request) {
+    @CheckOwner(resourceId = "#request.getId()", resourceType = "project")
+    public ProjectDTO updateProject(@RequestBody @Validated({Updated.class}) ProjectRequest request) {
         return projectService.update(request, SessionUtils.getUserId());
     }
 

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectLogService.java
Patch:
@@ -1,9 +1,9 @@
 package io.metersphere.project.service;
 
 import io.metersphere.project.domain.Project;
+import io.metersphere.project.dto.ProjectRequest;
 import io.metersphere.project.mapper.ProjectMapper;
 import io.metersphere.sdk.util.JSON;
-import io.metersphere.system.dto.UpdateProjectRequest;
 import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.log.dto.LogDTO;
@@ -22,7 +22,7 @@ public class ProjectLogService {
      * @param request
      * @return
      */
-    public LogDTO updateLog(UpdateProjectRequest request) {
+    public LogDTO updateLog(ProjectRequest request) {
         Project project = projectMapper.selectByPrimaryKey(request.getId());
         if (project != null) {
             LogDTO dto = new LogDTO(

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectService.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.project.service;
 
 import io.metersphere.project.domain.*;
+import io.metersphere.project.dto.ProjectRequest;
 import io.metersphere.project.mapper.ExtProjectMapper;
 import io.metersphere.project.mapper.ProjectMapper;
 import io.metersphere.project.mapper.ProjectTestResourcePoolMapper;
@@ -17,7 +18,6 @@
 import io.metersphere.system.domain.User;
 import io.metersphere.system.domain.UserRoleRelationExample;
 import io.metersphere.system.dto.ProjectDTO;
-import io.metersphere.system.dto.UpdateProjectRequest;
 import io.metersphere.system.dto.sdk.OptionDTO;
 import io.metersphere.system.dto.sdk.SessionUser;
 import io.metersphere.system.dto.user.UserDTO;
@@ -105,7 +105,7 @@ public ProjectDTO getProjectById(String id) {
         return commonProjectService.get(id);
     }
 
-    public ProjectDTO update(UpdateProjectRequest updateProjectDto, String updateUser) {
+    public ProjectDTO update(ProjectRequest updateProjectDto, String updateUser) {
         Project project = new Project();
         ProjectDTO projectDTO = new ProjectDTO();
         project.setId(updateProjectDto.getId());

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/ScriptProcessorConverter.java
Patch:
@@ -53,7 +53,7 @@ public static void parse(TestElement testElement, ScriptProcessor scriptProcesso
             scriptLanguage = scriptProcessor.getCommonScriptInfo().getScriptLanguage();
             script = scriptProcessor.getCommonScriptInfo().getScript();
         }
-        if (scriptLanguage == null) {
+        if (scriptLanguage == null || StringUtils.equalsIgnoreCase(scriptLanguage, ScriptLanguageType.BEANSHELL_JSR233.name())) {
             scriptLanguage = ScriptLanguageType.BEANSHELL.name();
         }
         testElement.setProperty(JmeterProperty.SCRIPT, script);

File: backend/services/project-management/src/main/java/io/metersphere/project/service/CustomFunctionService.java
Patch:
@@ -147,6 +147,7 @@ private CustomFunction checkCustomFunction(String id) {
     private void checkAddExist(CustomFunction customFunction) {
         CustomFunctionExample example = new CustomFunctionExample();
         example.createCriteria()
+                .andProjectIdEqualTo(customFunction.getProjectId())
                 .andNameEqualTo(customFunction.getName());
         if (customFunctionMapper.countByExample(example) > 0) {
             throw new MSException(ProjectResultCode.CUSTOM_FUNCTION_ALREADY_EXIST);
@@ -156,6 +157,7 @@ private void checkAddExist(CustomFunction customFunction) {
     private void checkUpdateExist(CustomFunction customFunction) {
         CustomFunctionExample example = new CustomFunctionExample();
         example.createCriteria()
+                .andProjectIdEqualTo(customFunction.getProjectId())
                 .andIdNotEqualTo(customFunction.getId())
                 .andNameEqualTo(customFunction.getName());
         if (customFunctionMapper.countByExample(example) > 0) {

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugModuleService.java
Patch:
@@ -213,7 +213,7 @@ public void deleteModule(List<String> deleteIds, String currentUser, String proj
             //删除文件关联关系
             apiDebugs.forEach(apiDebug -> {
                 String apiDebugDir = DefaultRepositoryDir.getApiDebugDir(apiDebug.getProjectId(), apiDebug.getId());
-                apiFileResourceService.deleteByResourceId(apiDebugDir, apiDebug.getId(), projectId, currentUser, OperationLogModule.API_DEBUG);
+                apiFileResourceService.deleteByResourceId(apiDebugDir, apiDebug.getId(), projectId, currentUser, OperationLogModule.API_TEST_DEBUG_MANAGEMENT_DEBUG);
             });
             apiDebugModuleLogService.saveDeleteDataLog(apiDebugs, currentUser, projectId);
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugService.java
Patch:
@@ -125,7 +125,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setResourceId(sourceId);
         resourceUpdateRequest.setApiResourceType(ApiResourceType.API_DEBUG);
         resourceUpdateRequest.setOperator(operator);
-        resourceUpdateRequest.setLogModule(OperationLogModule.API_DEBUG);
+        resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_DEBUG_MANAGEMENT_DEBUG);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEBUG);
         return resourceUpdateRequest;
     }
@@ -167,7 +167,7 @@ public void delete(String id, String operator) {
         ApiDebug apiDebug = apiDebugMapper.selectByPrimaryKey(id);
         checkResourceExist(id);
         String apiDebugDir = DefaultRepositoryDir.getApiDebugDir(apiDebug.getProjectId(), apiDebug.getId());
-        apiFileResourceService.deleteByResourceId(apiDebugDir, id, apiDebug.getProjectId(), operator, OperationLogModule.API_DEBUG);
+        apiFileResourceService.deleteByResourceId(apiDebugDir, id, apiDebug.getProjectId(), operator, OperationLogModule.API_TEST_DEBUG_MANAGEMENT_DEBUG);
         apiDebugMapper.deleteByPrimaryKey(id);
         apiDebugBlobMapper.deleteByPrimaryKey(id);
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -321,7 +321,7 @@ public void insertData(Map<String, BaseTreeNode> modulePathMap,
                         v.getId(),
                         request.getUserId(),
                         OperationLogType.IMPORT.name(),
-                        OperationLogModule.API_DEFINITION,
+                        OperationLogModule.API_TEST_MANAGEMENT_DEFINITION,
                         v.getName());
                 dto.setHistory(true);
                 dto.setPath("/api/definition/import");
@@ -363,7 +363,7 @@ public void insertData(Map<String, BaseTreeNode> modulePathMap,
                     t.getId(),
                     request.getUserId(),
                     OperationLogType.IMPORT.name(),
-                    OperationLogModule.API_DEFINITION,
+                    OperationLogModule.API_TEST_MANAGEMENT_DEFINITION,
                     t.getName());
             dto.setHistory(true);
             dto.setPath("/api/definition/import");

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionMockService.java
Patch:
@@ -147,7 +147,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceRequest(String sou
         resourceUpdateRequest.setResourceId(sourceId);
         resourceUpdateRequest.setApiResourceType(ApiResourceType.API_MOCK);
         resourceUpdateRequest.setOperator(operator);
-        resourceUpdateRequest.setLogModule(OperationLogModule.API_DEFINITION_MOCK);
+        resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_MOCK);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEFINITION_MOCK);
         return resourceUpdateRequest;
     }
@@ -205,7 +205,7 @@ public ApiDefinitionMock update(ApiDefinitionMockUpdateRequest request, String u
     public void delete(ApiDefinitionMockRequest request, String userId) {
         checkApiDefinitionMock(request.getId());
         String apiDefinitionMockDir = DefaultRepositoryDir.getApiDefinitionDir(request.getProjectId(), request.getId());
-        apiFileResourceService.deleteByResourceId(apiDefinitionMockDir, request.getId(), request.getProjectId(), userId, OperationLogModule.API_DEFINITION_MOCK);
+        apiFileResourceService.deleteByResourceId(apiDefinitionMockDir, request.getId(), request.getProjectId(), userId, OperationLogModule.API_TEST_MANAGEMENT_MOCK);
         apiDefinitionMockConfigMapper.deleteByPrimaryKey(request.getId());
         apiDefinitionMockMapper.deleteByPrimaryKey(request.getId());
     }
@@ -264,7 +264,7 @@ public void deleteByApiIds(List<String> apiIds, String userId) {
         if (!apiDefinitionMocks.isEmpty()) {
             apiDefinitionMocks.forEach(item -> {
                 String apiDefinitionMockDir = DefaultRepositoryDir.getApiDefinitionDir(item.getProjectId(), item.getId());
-                apiFileResourceService.deleteByResourceId(apiDefinitionMockDir, item.getId(), item.getProjectId(), userId, OperationLogModule.API_DEFINITION_MOCK);
+                apiFileResourceService.deleteByResourceId(apiDefinitionMockDir, item.getId(), item.getProjectId(), userId, OperationLogModule.API_TEST_MANAGEMENT_MOCK);
             });
 
             List<String> mockIds = apiDefinitionMocks.stream().map(ApiDefinitionMock::getId).toList();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionScheduleService.java
Patch:
@@ -80,7 +80,7 @@ public String createSchedule(ApiScheduleRequest request, String userId) {
                 request.getId(),
                 userId,
                 OperationLogType.ADD.name(),
-                OperationLogModule.API_DEFINITION,
+                OperationLogModule.API_TEST_MANAGEMENT_DEFINITION,
                 Translator.get("api_import_schedule") + ": " + request.getName());
         dto.setHistory(false);
         dto.setPath("/api/definition/schedule/add");
@@ -138,7 +138,7 @@ public String updateSchedule(ApiScheduleRequest request, String userId) {
                 request.getId(),
                 userId,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.API_DEFINITION,
+                OperationLogModule.API_TEST_MANAGEMENT_DEFINITION,
                 Translator.get("api_import_schedule") + ": " + request.getName());
         dto.setHistory(false);
         dto.setPath("/api/definition/schedule/update");

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiDefinitionService.java
Patch:
@@ -233,7 +233,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setResourceId(sourceId);
         resourceUpdateRequest.setApiResourceType(ApiResourceType.API);
         resourceUpdateRequest.setOperator(operator);
-        resourceUpdateRequest.setLogModule(OperationLogModule.API_DEFINITION);
+        resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_DEFINITION);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_DEFINITION);
         return resourceUpdateRequest;
     }
@@ -799,7 +799,7 @@ private void doTrashDel(List<String> ids, String userId, String projectId, boole
             // 删除上传的文件
             ids.forEach(id -> {
                 String apiDefinitionDir = DefaultRepositoryDir.getApiDefinitionDir(projectId, id);
-                apiFileResourceService.deleteByResourceId(apiDefinitionDir, id, projectId, userId, OperationLogModule.API_DEFINITION);
+                apiFileResourceService.deleteByResourceId(apiDefinitionDir, id, projectId, userId, OperationLogModule.API_TEST_MANAGEMENT_DEFINITION);
             });
             // 删除接口关注人
             ApiDefinitionFollowerExample apiDefinitionFollowerExample = new ApiDefinitionFollowerExample();

File: backend/services/api-test/src/main/java/io/metersphere/api/service/definition/ApiTestCaseService.java
Patch:
@@ -135,7 +135,7 @@ private static ApiFileResourceUpdateRequest getApiFileResourceUpdateRequest(Stri
         resourceUpdateRequest.setResourceId(sourceId);
         resourceUpdateRequest.setApiResourceType(ApiResourceType.API_CASE);
         resourceUpdateRequest.setOperator(operator);
-        resourceUpdateRequest.setLogModule(OperationLogModule.API_DEFINITION_CASE);
+        resourceUpdateRequest.setLogModule(OperationLogModule.API_TEST_MANAGEMENT_CASE);
         resourceUpdateRequest.setFileAssociationSourceType(FileAssociationSourceUtil.SOURCE_TYPE_API_TEST_CASE);
         return resourceUpdateRequest;
     }
@@ -365,7 +365,7 @@ public void deleteResourceByIds(List<String> ids, String projectId, String userI
         //删除文件关联关系
         ids.forEach(id -> {
             String apiCaseDir = DefaultRepositoryDir.getApiCaseDir(projectId, id);
-            apiFileResourceService.deleteByResourceId(apiCaseDir, id, projectId, userId, OperationLogModule.API_DEFINITION_CASE);
+            apiFileResourceService.deleteByResourceId(apiCaseDir, id, projectId, userId, OperationLogModule.API_TEST_MANAGEMENT_CASE);
         });
         ApiTestCaseExample example = new ApiTestCaseExample();
         example.createCriteria().andIdIn(ids);

File: backend/services/project-management/src/main/java/io/metersphere/project/api/KeyValueParam.java
Patch:
@@ -14,12 +14,12 @@ public class KeyValueParam {
     /**
      * 键
      */
-    @Size(max = 100)
+    @Size(max = 255)
     private String key;
     /**
      * 值
      */
-    @Size(max = 100)
+    @Size(max = 255)
     private String value;
 
     public boolean isValid() {

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseCustomFieldMapper.java
Patch:
@@ -17,4 +17,6 @@ public interface ExtFunctionalCaseCustomFieldMapper {
     void batchUpdate(@Param("functionalCaseCustomField") FunctionalCaseCustomField functionalCaseCustomField, @Param("ids") List<String> ids);
 
     List<FunctionalCaseCustomFieldDTO> getCustomFieldsByCaseIds(@Param("ids") List<String> ids);
+
+    void batchDelete(@Param("functionalCaseCustomField") FunctionalCaseCustomField functionalCaseCustomField, @Param("ids") List<String> ids);
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseLogService.java
Patch:
@@ -304,7 +304,7 @@ public List<LogDTO> batchEditFunctionalCaseLog(FunctionalCaseBatchEditRequest re
                         null,
                         functionalCase.getId(),
                         null,
-                        OperationLogType.DELETE.name(),
+                        OperationLogType.UPDATE.name(),
                         OperationLogModule.FUNCTIONAL_CASE,
                         functionalCase.getName());
                 dto.setHistory(true);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectApplicationController.java
Patch:
@@ -20,6 +20,7 @@
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
@@ -213,7 +214,7 @@ public void updateRelated(@PathVariable("projectId") String projectId, @RequestB
 
     @GetMapping("/case/related/info/{projectId}")
     @Operation(summary = "用例管理-获取关联需求信息")
-    @RequiresPermissions(PermissionConstants.PROJECT_APPLICATION_CASE_READ)
+    @RequiresPermissions(logical = Logical.OR, value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.PROJECT_APPLICATION_CASE_READ})
     public Map<String, String> getRelatedConfigInfo(@PathVariable("projectId") String projectId) {
         return projectApplicationService.getRelatedConfigInfo(projectId);
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.system.dto.sdk.TemplateCustomFieldDTO;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -32,7 +33,7 @@ public void validate(TemplateCustomFieldDTO customField, String value) throws Cu
     @Override
     public Object parse2Key(String keyOrValuesStr, TemplateCustomFieldDTO customField) {
         if (StringUtils.isBlank(keyOrValuesStr)) {
-            return StringUtils.EMPTY;
+            return JSON.toJSONString(new ArrayList<>());
         }
         List<String> keyOrValues = parse2Array(keyOrValuesStr);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleSelectValidator.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.system.dto.sdk.TemplateCustomFieldDTO;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -35,7 +36,7 @@ public void validate(TemplateCustomFieldDTO customField, String value) throws Cu
     @Override
     public Object parse2Key(String keyOrValuesStr, TemplateCustomFieldDTO customField) {
         if (StringUtils.isBlank(keyOrValuesStr)) {
-            return StringUtils.EMPTY;
+            return JSON.toJSONString(new ArrayList<>());
         }
         List<String> keyOrValues = parse2Array(keyOrValuesStr);
         Map<String, String> nameMap = optionTextMapCache.get(customField.getFieldId());

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldMultipleTextValidator.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.system.dto.sdk.TemplateCustomFieldDTO;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -33,7 +34,7 @@ public void validate(TemplateCustomFieldDTO customField, String value) throws Cu
     @Override
     public Object parse2Key(String keyOrValuesStr, TemplateCustomFieldDTO customField) {
         if (StringUtils.isBlank(keyOrValuesStr)) {
-            return StringUtils.EMPTY;
+            return JSON.toJSONString(new ArrayList<>());
         }
         List<String> keyOrValues = parse2Array(keyOrValuesStr);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -35,6 +35,7 @@
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.validation.constraints.NotBlank;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
@@ -86,7 +87,7 @@ public FunctionalCase addFunctionalCase(@Validated @RequestPart("request") Funct
 
     @GetMapping("/detail/{id}")
     @Operation(summary = "用例管理-功能用例-查看用例详情")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
+    @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.CASE_REVIEW_READ}, logical = Logical.OR)
     @CheckOwner(resourceId = "#id", resourceType = "functional_case")
     public FunctionalCaseDetailDTO getFunctionalCaseDetail(@PathVariable String id) {
         String userId = SessionUtils.getUserId();

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/ReviewFunctionalCaseController.java
Patch:
@@ -40,7 +40,7 @@ public void saveReview(@Validated @RequestBody ReviewFunctionalCaseRequest reque
 
     @GetMapping("/get/list/{reviewId}/{caseId}")
     @Operation(summary = "用例管理-用例评审-评审功能用例-获取用例评审历史")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
+    @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ)
     public List<CaseReviewHistoryDTO> getCaseReviewHistoryList(@PathVariable String reviewId, @PathVariable String caseId) {
         return reviewFunctionalCaseService.getCaseReviewHistoryList(reviewId,  caseId);
     }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -254,6 +254,8 @@ public BugDetailDTO get(String id, String currentUser) {
         detail.setProjectId(bug.getProjectId());
         detail.setTemplateId(template.getId());
         detail.setPlatformDefault(template.getPlatformDefault());
+        detail.setStatus(bug.getStatus());
+        detail.setPlatformBugId(bug.getPlatformBugId());
         if (!detail.getPlatformDefault()) {
             // 非平台默认模板 {标题, 内容, 标签, 自定义字段: 处理人, 状态}
             detail.setTitle(bug.getTitle());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -208,7 +208,7 @@ public CaseReview addCaseReview(CaseReviewRequest request, String userId) {
         BaseAssociateCaseRequest baseAssociateCaseRequest = request.getBaseAssociateCaseRequest();
         List<String> caseIds = doSelectIds(baseAssociateCaseRequest, baseAssociateCaseRequest.getProjectId());
         CaseReview caseReview = addCaseReview(request, userId, caseReviewId, caseIds);
-        addAssociate(request, userId, caseReviewId, caseIds, request.getReviewers());
+        addAssociate(request, userId, caseReviewId, caseIds, baseAssociateCaseRequest.getReviewers());
         return caseReview;
     }
 

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/ReviewFunctionalCaseControllerTests.java
Patch:
@@ -421,6 +421,7 @@ private  List<CaseReview> addReview(String name, List<String> caseIds, List<Stri
         baseAssociateCaseRequest.setSelectAll(false);
         baseAssociateCaseRequest.setProjectId(projectId);
         baseAssociateCaseRequest.setSelectIds(caseIds);
+        baseAssociateCaseRequest.setReviewers(reviewers);
         caseReviewRequest.setBaseAssociateCaseRequest(baseAssociateCaseRequest);
         List<String> tags = new ArrayList<>();
         tags.add("11");

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewFunctionalCaseController.java
Patch:
@@ -52,6 +52,7 @@ public List<String> getCaseIds(@PathVariable String reviewId) {
 
     @PostMapping("/page")
     @Operation(summary = "用例管理-用例评审-评审列表-评审详情-已关联用例列表")
+    @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ)
     public Pager<List<ReviewFunctionalCaseDTO>> page(@Validated @RequestBody ReviewFunctionalCasePageRequest request) {
         String userId = StringUtils.EMPTY;
         if (request.isViewFlag()) {
@@ -78,7 +79,7 @@ public List<BaseTreeNode> getTree(@PathVariable String reviewId) {
 
     @PostMapping("/module/count")
     @Operation(summary = "用例管理-用例评审-评审列表-评审详情-已关联用例统计模块数量")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
+    @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Map<String, Long> moduleCount(@Validated @RequestBody ReviewFunctionalCasePageRequest request) {
         String userId = StringUtils.EMPTY;

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/CaseReviewControllerTests.java
Patch:
@@ -142,6 +142,7 @@ private static CaseReviewCopyRequest getCaseReviewAddRequest(String name, String
             tags.add("11");
             caseReviewRequest.setTags(tags);
         }
+        baseAssociateCaseRequest.setReviewers(reviewers);
         caseReviewRequest.setBaseAssociateCaseRequest(baseAssociateCaseRequest);
         return caseReviewRequest;
     }

File: backend/services/api-test/src/main/java/io/metersphere/api/mapper/ExtApiDebugMapper.java
Patch:
@@ -17,8 +17,8 @@ public interface ExtApiDebugMapper {
 
     Long getPos(@Param("userId") String userId);
 
-    Long getPrePos(@Param("projectId") String projectId, @Param("basePos") Long basePos);
+    Long getPrePos(@Param("userId") String userId, @Param("basePos") Long basePos);
 
-    Long getLastPos(@Param("projectId") String projectId, @Param("basePos") Long basePos);
+    Long getLastPos(@Param("userId") String userId, @Param("basePos") Long basePos);
 
 }
\ No newline at end of file

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -573,7 +573,7 @@ public void batchMoveCaseReview(CaseReviewBatchRequest request, String userId) {
     }
 
     public void deleteCaseReview(String reviewId, String projectId) {
-        deleteCaseReviewService.deleteCaseReviewResource(List.of(reviewId), projectId, true);
+        deleteCaseReviewService.deleteCaseReviewResource(List.of(reviewId), projectId);
         //将评审历史状态置为true
         extCaseReviewHistoryMapper.updateDelete(new ArrayList<>(), reviewId, true);
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CleanupCaseReviewResourceService.java
Patch:
@@ -30,7 +30,7 @@ public void deleteResources(String projectId) {
         List<CaseReview> caseReviews = caseReviewMapper.selectByExample(caseReviewExample);
         List<String> ids = caseReviews.stream().map(CaseReview::getId).toList();
         if (CollectionUtils.isNotEmpty(ids)) {
-            deleteCaseReviewService.deleteCaseReviewResource(ids, projectId, true);
+            deleteCaseReviewService.deleteCaseReviewResource(ids, projectId);
         }
         //删除模块
         CaseReviewModuleExample caseReviewModuleExample = new CaseReviewModuleExample();

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/CaseReviewModuleControllerTests.java
Patch:
@@ -691,7 +691,7 @@ public void deleteModuleTestSuccess() throws Exception {
         this.requestGetWithOk(URL_MODULE_TREE_DELETE+a1a1Node.getId());
         this.checkModuleIsEmpty(a1a1Node.getId());
         CaseReview caseReviewDel = caseReviewMapper.selectByPrimaryKey(name.getId());
-        Assertions.assertNotNull(caseReviewDel);
+        Assertions.assertNull(caseReviewDel);
 
         //删除不存在的节点
         this.requestGetWithOk(URL_MODULE_TREE_DELETE+IDGenerator.nextNum());

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewController.java
Patch:
@@ -66,7 +66,7 @@ public Map<String, Long> moduleCount(@Validated @RequestBody CaseReviewPageReque
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ_ADD)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public CaseReview addCaseReview(@Validated @RequestBody CaseReviewRequest request) {
-       return caseReviewService.addCaseReview(request, SessionUtils.getUserId());
+        return caseReviewService.addCaseReview(request, SessionUtils.getUserId());
     }
 
     @PostMapping("/copy")
@@ -91,7 +91,7 @@ public void editCaseReview(@Validated({Updated.class}) @RequestBody CaseReviewRe
 
     @GetMapping("/user-option/{projectId}")
     @Operation(summary = "用例管理-用例评审-获取具有评审权限的用户")
-    @RequiresPermissions(value = {PermissionConstants.CASE_REVIEW_READ_ADD,PermissionConstants.CASE_REVIEW_READ_UPDATE}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.CASE_REVIEW_READ, PermissionConstants.CASE_REVIEW_READ_ADD, PermissionConstants.CASE_REVIEW_READ_UPDATE}, logical = Logical.OR)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public List<UserDTO> getReviewUserList(@PathVariable String projectId, @Schema(description = "查询关键字，根据邮箱和用户名查询")
     @RequestParam(value = "keyword", required = false) String keyword) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -573,7 +573,7 @@ public void batchMoveCaseReview(CaseReviewBatchRequest request, String userId) {
     }
 
     public void deleteCaseReview(String reviewId, String projectId) {
-        deleteCaseReviewService.deleteCaseReviewResource(List.of(reviewId), projectId, false);
+        deleteCaseReviewService.deleteCaseReviewResource(List.of(reviewId), projectId, true);
         //将评审历史状态置为true
         extCaseReviewHistoryMapper.updateDelete(new ArrayList<>(), reviewId, true);
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseController.java
Patch:
@@ -64,7 +64,7 @@ public class FunctionalCaseController {
 
     @GetMapping("/default/template/field/{projectId}")
     @Operation(summary = "用例管理-功能用例-获取默认模板自定义字段")
-    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ_ADD)
+    @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public TemplateDTO getDefaultTemplateField(@PathVariable String projectId) {
         TemplateDTO defaultTemplateDTO = projectTemplateService.getDefaultTemplateDTO(projectId, TemplateScene.FUNCTIONAL.name());

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/NoticeMessageTaskController.java
Patch:
@@ -39,7 +39,7 @@ public class NoticeMessageTaskController {
     @Operation(summary = "项目管理-消息管理-消息设置-保存消息设置")
     @RequiresPermissions(value = {PermissionConstants.PROJECT_MESSAGE_READ_ADD, PermissionConstants.PROJECT_MESSAGE_READ_UPDATE}, logical = Logical.OR)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.addLog(#messageTaskRequest)", msClass = MessageTaskLogService.class)
-    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
+    @CheckOwner(resourceId = "#messageTaskRequest.projectId", resourceType = "project")
     public ResultHolder saveMessage(@Validated({Created.class, Updated.class}) @RequestBody MessageTaskRequest messageTaskRequest) {
         return noticeMessageTaskService.saveMessageTask(messageTaskRequest, SessionUtils.getUserId());
     }

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectControllerTests.java
Patch:
@@ -337,8 +337,8 @@ public void testUpdateProject() throws Exception {
         project.setId(DEFAULT_PROJECT_ID);
         project.setOrganizationId(DEFAULT_ORGANIZATION_ID);
         requestPostPermissionTest(PermissionConstants.PROJECT_BASE_INFO_READ_UPDATE, updateProject, project);
-        // 校验日志
-        checkLog(DEFAULT_PROJECT_ID, OperationLogType.UPDATE);
+        // todo 校验日志
+//        checkLog(DEFAULT_PROJECT_ID, OperationLogType.UPDATE);
     }
 
     @Test

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtCheckOwnerMapper.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.List;
 
 public interface ExtCheckOwnerMapper {
-    boolean checkoutOwner(@Param("table") String resourceType, @Param("projectId") String projectId, @Param("ids") List<String> ids);
+    boolean checkoutOwner(@Param("table") String resourceType, @Param("userId") String userId, @Param("ids") List<String> ids);
 
-    boolean checkoutOrganizationOwner(@Param("table") String resourceType, @Param("organizationId") String organizationId, @Param("ids") List<String> ids);
+    boolean checkoutOrganizationOwner(@Param("table") String resourceType, @Param("userId") String userId, @Param("ids") List<String> ids);
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/ReviewFunctionalCaseService.java
Patch:
@@ -76,6 +76,7 @@ public void saveReview(ReviewFunctionalCaseRequest request, String userId) {
         if (!users.contains(userId)) {
             throw new MSException(Translator.get("case_review_user"));
         }
+
         CaseReviewHistory caseReviewHistory = buildReviewHistory(request, userId);
         CaseReviewHistoryExample caseReviewHistoryExample = new CaseReviewHistoryExample();
         caseReviewHistoryExample.createCriteria().andCaseIdEqualTo(request.getCaseId()).andReviewIdEqualTo(request.getReviewId()).andDeletedEqualTo(false).andAbandonedEqualTo(false);
@@ -85,6 +86,8 @@ public void saveReview(ReviewFunctionalCaseRequest request, String userId) {
             List<CaseReviewHistory> caseReviewHistoryList = new ArrayList<>();
             caseReviewHistoryList.add(caseReviewHistory);
             hasReviewedUserMap.put(userId, caseReviewHistoryList);
+        } else {
+            hasReviewedUserMap.get(userId).add(caseReviewHistory);
         }
         //根据评审规则更新用例评审和功能用例关系表中的状态 1.单人评审直接更新评审结果 2.多人评审需要计算
         String functionalCaseStatus = getFunctionalCaseStatus(request, hasReviewedUserMap, isAdmin, caseReviewFunctionalCaseUsers.size());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/controller/BugAttachmentController.java
Patch:
@@ -78,7 +78,7 @@ public void deleteFile(@RequestBody BugDeleteFileRequest request) {
     @Operation(summary = "缺陷管理-附件-预览")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
-    public ResponseEntity<byte[]> preview(@Validated @RequestBody BugFileSourceRequest request) throws Exception {
+    public ResponseEntity<byte[]> preview(@Validated @RequestBody BugFileSourceRequest request) {
         if (request.getAssociated()) {
             // 文件库
             return fileMetadataService.downloadPreviewImgById(request.getFileId());
@@ -92,7 +92,7 @@ public ResponseEntity<byte[]> preview(@Validated @RequestBody BugFileSourceReque
     @Operation(summary = "缺陷管理-附件-下载")
     @RequiresPermissions(PermissionConstants.PROJECT_BUG_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
-    public ResponseEntity<byte[]> download(@Validated @RequestBody BugFileSourceRequest request) throws Exception {
+    public ResponseEntity<byte[]> download(@Validated @RequestBody BugFileSourceRequest request) {
         if (request.getAssociated()) {
             // 文件库
             return fileMetadataService.downloadById(request.getFileId());

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/request/BugCommentEditRequest.java
Patch:
@@ -30,7 +30,7 @@ public class BugCommentEditRequest implements Serializable {
     @Schema(description = "评论内容", requiredMode = Schema.RequiredMode.REQUIRED)
     private String content;
 
-    @Schema(description =  "任务事件(仅评论: ’COMMENT‘; 评论并@: ’AT‘; 回复评论/回复并@: ’REPLAY‘;)", requiredMode = Schema.RequiredMode.REQUIRED)
+    @Schema(description =  "任务事件(仅评论: ’COMMENT‘; 评论并@: ’AT‘; 回复评论/回复并@: ’REPLY‘;)", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{bug_comment.event.not_blank}", groups = {Created.class})
     private String event;
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewController.java
Patch:
@@ -115,7 +115,7 @@ public void associateCase(@Validated @RequestBody CaseReviewAssociateRequest req
         caseReviewService.associateCase(request, SessionUtils.getUserId());
     }
 
-    @GetMapping("disassociate/{reviewId}/{caseId}")
+    @GetMapping("/disassociate/{reviewId}/{caseId}")
     @Operation(summary = "用例管理-用例评审-取消关联用例")
     @Log(type = OperationLogType.DISASSOCIATE, expression = "#msClass.disAssociateCaseLog(#reviewId, #caseId)", msClass = CaseReviewLogService.class)
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_RELEVANCE)
@@ -140,7 +140,7 @@ public CaseReviewDTO getCaseReviewDetail(@PathVariable String id) {
         return caseReviewService.getCaseReviewDetail(id, SessionUtils.getUserId());
     }
 
-    @PostMapping("batch/move")
+    @PostMapping("/batch/move")
     @Operation(summary = "用例管理-用例评审-批量移动用例评审")
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ_UPDATE)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")

File: backend/services/case-management/src/main/java/io/metersphere/functional/excel/validate/CustomFieldSelectValidator.java
Patch:
@@ -43,6 +43,9 @@ public void validate(TemplateCustomFieldDTO customField, String value) throws Cu
         prepareCache(customField);
         Set<String> idSet = optionValueSetCache.get(customField.getFieldId());
         Set<String> textSet = optionTextSetCache.get(customField.getFieldId());
+        if (customField.getFieldName().equals(Translator.get("custom_field.functional_priority"))) {
+            value = value.toUpperCase();
+        }
         if (!idSet.contains(value) && !textSet.contains(value)) {
             CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_select_tip"), customField.getFieldName(), textSet));
         }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/OrganizationEditRequest.java
Patch:
@@ -24,7 +24,8 @@ public class OrganizationEditRequest implements Serializable {
     @Size(min = 1, max = 255, message = "{organization.name.length_range}", groups = {Created.class, Updated.class})
     private String name;
 
-    @Schema(description = "描述")
+    @Schema(description =  "描述")
+    @Size(max = 500, groups = {Created.class, Updated.class})
     private String description;
 
     @Schema(description = "成员ID集合")

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/SystemOrganizationControllerTests.java
Patch:
@@ -545,4 +545,4 @@ private MvcResult responseGet(String url) throws Exception {
                 .andExpect(status().isOk())
                 .andExpect(content().contentType(MediaType.APPLICATION_JSON)).andReturn();
     }
-}
+}
\ No newline at end of file

File: backend/services/system-setting/src/test/java/io/metersphere/system/base/param/MaxParamGenerator.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.system.base.param;
 
 import jakarta.validation.constraints.Max;
-import org.testcontainers.shaded.org.apache.commons.lang3.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Field;

File: backend/services/system-setting/src/test/java/io/metersphere/system/base/param/MinParamGenerator.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.system.base.param;
 
 import jakarta.validation.constraints.Min;
-import org.testcontainers.shaded.org.apache.commons.lang3.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Field;

File: backend/services/system-setting/src/test/java/io/metersphere/system/base/param/SizeParamGenerator.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.system.base.param;
 
 import jakarta.validation.constraints.Size;
-import org.testcontainers.shaded.org.apache.commons.lang3.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Field;
@@ -22,7 +22,7 @@ public Object invalidGenerate(Annotation annotation, Field field) {
             return max + 1;
         } else {
             // todo 做缓存优化
-            return RandomStringUtils.random(max + 1);
+            return RandomStringUtils.randomAlphanumeric(max + 1);
         }
     }
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectTemplateService.java
Patch:
@@ -312,6 +312,7 @@ public Template update(TemplateUpdateRequest request) {
         Template originTemplate = super.getWithCheck(template.getId());
         checkProjectTemplateEnable(originTemplate.getScopeId(), originTemplate.getScene());
         template.setScopeId(originTemplate.getScopeId());
+        template.setScene(originTemplate.getScene());
         checkProjectResourceExist(originTemplate);
         return super.update(template, request.getCustomFields(), request.getSystemFields());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseCustomFieldService.java
Patch:
@@ -189,6 +189,7 @@ protected void checkAddExist(CustomField customField) {
         CustomFieldExample example = new CustomFieldExample();
         example.createCriteria()
                 .andScopeIdEqualTo(customField.getScopeId())
+                .andSceneEqualTo(customField.getScene())
                 .andNameEqualTo(customField.getName());
         if (CollectionUtils.isNotEmpty(customFieldMapper.selectByExample(example))) {
             throw new MSException(CUSTOM_FIELD_EXIST);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTemplateService.java
Patch:
@@ -248,6 +248,7 @@ protected void checkAddExist(Template template) {
         TemplateExample example = new TemplateExample();
         example.createCriteria()
                 .andScopeIdEqualTo(template.getScopeId())
+                .andSceneEqualTo(template.getScene())
                 .andNameEqualTo(template.getName());
         if (CollectionUtils.isNotEmpty(templateMapper.selectByExample(example))) {
             throw new MSException(TEMPLATE_EXIST);
@@ -262,6 +263,7 @@ protected void checkUpdateExist(Template template) {
         example.createCriteria()
                 .andScopeIdEqualTo(template.getScopeId())
                 .andIdNotEqualTo(template.getId())
+                .andSceneEqualTo(template.getScene())
                 .andNameEqualTo(template.getName());
         if (CollectionUtils.isNotEmpty(templateMapper.selectByExample(example))) {
             throw new MSException(TEMPLATE_EXIST);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationTemplateService.java
Patch:
@@ -100,6 +100,7 @@ public Template update(TemplateUpdateRequest request) {
         Template originTemplate = super.getWithCheck(template.getId());
         checkOrganizationTemplateEnable(originTemplate.getScopeId(), originTemplate.getScene());
         template.setScopeId(originTemplate.getScopeId());
+        template.setScene(originTemplate.getScene());
         checkOrgResourceExist(originTemplate);
         updateRefProjectTemplate(template, request.getCustomFields(), request.getSystemFields());
         template.setRefId(null);
@@ -122,6 +123,7 @@ public void updateRefProjectTemplate(Template orgTemplate, List<TemplateCustomFi
             template.setId(projectTemplate.getId());
             template.setScopeId(projectTemplate.getScopeId());
             template.setRefId(orgTemplate.getId());
+            template.setScene(orgTemplate.getScene());
             List<TemplateCustomFieldRequest> refCustomFields = getRefTemplateCustomFieldRequest(projectTemplate.getScopeId(), customFields);
             super.update(template, refCustomFields, systemFields);
         });

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/GlobalUserRoleLogService.java
Patch:
@@ -56,7 +56,7 @@ public LogDTO updateLog(UserRoleUpdateRequest request) {
                     OperationLogConstants.SYSTEM,
                     OperationLogConstants.SYSTEM,
                     userRole.getId(),
-                    userRole.getCreateUser(),
+                    null,
                     OperationLogType.UPDATE.name(),
                     OperationLogModule.SETTING_SYSTEM_USER_GROUP,
                     userRole.getName());
@@ -74,7 +74,7 @@ public LogDTO updateLog(PermissionSettingUpdateRequest request) {
                     OperationLogConstants.SYSTEM,
                     OperationLogConstants.SYSTEM,
                     request.getUserRoleId(),
-                    userRole.getCreateUser(),
+                    null,
                     OperationLogType.UPDATE.name(),
                     OperationLogModule.SETTING_SYSTEM_USER_GROUP,
                     userRole.getName());

File: backend/services/api-test/src/main/java/io/metersphere/api/service/debug/ApiDebugService.java
Patch:
@@ -187,7 +187,7 @@ private void checkUpdateExist(ApiDebug apiDebug, ApiDebug originApiDebug) {
     }
 
     private ApiDebug checkResourceExist(String id) {
-        return ServiceUtils.checkResourceExist(apiDebugMapper.selectByPrimaryKey(id), "permission.system_api_debug.name");
+        return ServiceUtils.checkResourceExist(apiDebugMapper.selectByPrimaryKey(id), "permission.api_debug.name");
     }
 
     public String uploadTempFile(MultipartFile file) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDebugControllerTests.java
Patch:
@@ -268,7 +268,6 @@ private ApiDebug assertUpdateApiDebug(Object request, MsHTTPElement msHttpElemen
         ApiDebug copyApiDebug = BeanUtils.copyBean(new ApiDebug(), apiDebug);
         copyApiDebug = BeanUtils.copyBean(copyApiDebug, request);
         Assertions.assertEquals(apiDebug, copyApiDebug);
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         Assertions.assertEquals(msHttpElement, ApiDataUtils.parseObject(new String(apiDebugBlob.getRequest()), AbstractMsTestElement.class));
         return apiDebug;
     }
@@ -343,7 +342,6 @@ public void get() throws Exception {
         // @@请求成功
         MvcResult mvcResult = this.requestGetWithOk(DEFAULT_GET, addApiDebug.getId())
                 .andReturn();
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         ApiDebugDTO apiDebugDTO = ApiDataUtils.parseObject(JSON.toJSONString(parseResponse(mvcResult).get("data")), ApiDebugDTO.class);
         // 校验数据是否正确
         ApiDebugDTO copyApiDebugDTO = BeanUtils.copyBean(new ApiDebugDTO(), apiDebugMapper.selectByPrimaryKey(addApiDebug.getId()));

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionMockControllerTests.java
Patch:
@@ -241,7 +241,6 @@ private ApiDefinitionMock assertAddApiDefinitionMock(Object request, MsHTTPEleme
         ApiDefinitionMock copyApiDefinitionMock = BeanUtils.copyBean(new ApiDefinitionMock(), apiDefinitionMock);
         BeanUtils.copyBean(copyApiDefinitionMock, request);
         Assertions.assertEquals(apiDefinitionMock, copyApiDefinitionMock);
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         if(apiDefinitionMockConfig != null){
             Assertions.assertEquals(msHttpElement, ApiDataUtils.parseObject(new String(apiDefinitionMockConfig.getMatching()), AbstractMsTestElement.class));
         }
@@ -257,7 +256,6 @@ public void get() throws Exception {
         apiDefinitionMockRequest.setApiDefinitionId(apiDefinitionMock.getApiDefinitionId());
         // @@请求成功
         MvcResult mvcResult = this.requestPostWithOkAndReturn(DETAIL, apiDefinitionMockRequest);
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         ApiDefinitionMockDTO apiDefinitionMockDTO = ApiDataUtils.parseObject(JSON.toJSONString(parseResponse(mvcResult).get("data")), ApiDefinitionMockDTO.class);
         // 校验数据是否正确
         ApiDefinitionMockDTO copyApiDefinitionMockDTO = BeanUtils.copyBean(new ApiDefinitionMockDTO(), apiDefinitionMock);

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestCaseControllerTests.java
Patch:
@@ -296,7 +296,6 @@ private ApiTestCase assertUpdateApiDebug(Object request, MsHTTPElement msHttpEle
         ApiTestCase copyApiDebug = BeanUtils.copyBean(new ApiTestCase(), apiCase);
         BeanUtils.copyBean(copyApiDebug, request);
         Assertions.assertEquals(apiCase, copyApiDebug);
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         Assertions.assertEquals(msHttpElement, ApiDataUtils.parseObject(new String(apiTestCaseBlob.getRequest()), AbstractMsTestElement.class));
         return apiCase;
     }
@@ -384,7 +383,6 @@ public void get() throws Exception {
         // @@请求成功
         MvcResult mvcResult = this.requestGetWithOk(GET + apiTestCase.getId())
                 .andReturn();
-        ApiDataUtils.setResolver(MsHTTPElement.class);
         ApiTestCaseDTO apiDebugDTO = ApiDataUtils.parseObject(JSON.toJSONString(parseResponse(mvcResult).get("data")), ApiTestCaseDTO.class);
         // 校验数据是否正确
         ApiTestCase testCase = apiTestCaseMapper.selectByPrimaryKey(apiTestCase.getId());

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/MsHTTPElementTest.java
Patch:
@@ -44,9 +44,6 @@
  * @CreateTime: 2023-11-07  11:17
  */
 public class MsHTTPElementTest {
-    public MsHTTPElementTest() {
-        ApiDataUtils.setResolver(MsHTTPElement.class);
-    }
 
     @Test
     public void bodyTest() {

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/NoticeMessageTaskController.java
Patch:
@@ -54,7 +54,7 @@ public List<MessageTaskDTO> getMessageList(@PathVariable String projectId) throw
 
     @GetMapping("message/task/get/user/{projectId}")
     @Operation(summary = "项目管理-消息管理-消息设置-获取用户列表")
-    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ_ADD)
+    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ)
     public List<OptionDTO> getUserList(@PathVariable String projectId, @Schema(description = "查询关键字，根据用户名查询")
     @RequestParam(value = "keyword", required = false) String keyword) {
         return noticeMessageTaskService.getUserList(projectId, keyword);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/NoticeMessageTaskController.java
Patch:
@@ -46,7 +46,7 @@ public ResultHolder saveMessage(@Validated({Created.class, Updated.class}) @Requ
 
     @GetMapping("message/task/get/{projectId}")
     @Operation(summary = "项目管理-消息管理-消息设置-获取消息设置")
-    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ_ADD)
+    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public List<MessageTaskDTO> getMessageList(@PathVariable String projectId) throws IOException {
         return noticeMessageTaskService.getMessageList(projectId);
@@ -62,7 +62,7 @@ public List<OptionDTO> getUserList(@PathVariable String projectId, @Schema(descr
 
     @GetMapping("message/template/detail/{projectId}")
     @Operation(summary = "项目管理-消息管理-消息设置-查看消息模版详情")
-    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ_ADD)
+    @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ)
     public MessageTemplateConfigDTO getTemplateDetail(@PathVariable String projectId, @Schema(description = "消息配置功能类型")
     @RequestParam(value = "taskType") String taskType, @Schema(description = "消息配置场景")
     @RequestParam(value = "event") String event, @Schema(description = "消息配置机器人id")

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -556,8 +556,8 @@ private void genNewFileVersionByOldFile(FileMetadata oldFile, FileMetadata fileM
         fileMetadata.setProjectId(oldFile.getProjectId());
         fileMetadata.setModuleId(oldFile.getModuleId());
         fileMetadata.setName(oldFile.getName());
-        fileMetadata.setCreateTime(operationTime);
-        fileMetadata.setCreateUser(operator);
+        fileMetadata.setCreateTime(oldFile.getCreateTime());
+        fileMetadata.setCreateUser(oldFile.getCreateUser());
         fileMetadata.setUpdateTime(operationTime);
         fileMetadata.setPath(oldFile.getPath());
         fileMetadata.setUpdateUser(operator);
@@ -652,7 +652,7 @@ public List<FileVersionResponse> getFileVersion(String fileId) {
             fileVersionResponse.setId(item.getId());
             fileVersionResponse.setFileVersion(item.getFileVersion());
             fileVersionResponse.setOperator(userName);
-            fileVersionResponse.setOperateTime(item.getCreateTime());
+            fileVersionResponse.setOperateTime(item.getUpdateTime());
 
             FileMetadataRepository fileRepository = fileIdMap.get(item.getId());
             if (fileRepository == null) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/excel/UserExcel.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import jakarta.validation.constraints.Email;
 import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Pattern;
 import jakarta.validation.constraints.Size;
 import lombok.Data;
 
@@ -20,6 +21,8 @@ public class UserExcel {
     private String email;
 
     @ExcelProperty(index = 2)
+    @Size(min = 1, max = 11, message = "{user.phone.error}")
+    @Pattern(regexp = "^[0-9]*[1-9][0-9]*$", message = "{user.phone.error}")
     private String phone;
 
     @ExcelProperty("workspace")

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserService.java
Patch:
@@ -307,7 +307,7 @@ private ExcelParseDTO<UserExcelRowDTO> validateExcelUserInfo(@Valid @NotNull Exc
             for (UserExcelRowDTO userExcelRow : prepareSaveList) {
                 //判断邮箱是否已存在数据库中
                 if (userInDbMap.containsKey(userExcelRow.getEmail())) {
-                    userExcelRow.setErrorMessage(Translator.get("user.email.repeat") + ": " + userExcelRow.getEmail());
+                    userExcelRow.setErrorMessage(Translator.get("user.email.import.in_system") + ": " + userExcelRow.getEmail());
                     excelParseDTO.addErrorRowData(userExcelRow.getDataIndex(), userExcelRow);
                 }
             }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/FakeErrorType.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.project.enums;
+package io.metersphere.sdk.constants;
 
 /**
  * @author: LAN

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/SocketMsgDTO.java
Patch:
@@ -33,6 +33,6 @@ public class SocketMsgDTO implements Serializable {
     /**
      * 结果内容
      */
-    private String taskResult;
+    private Object taskResult;
 
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/EnumValidator.java
Patch:
@@ -1,6 +1,5 @@
-package io.metersphere.api.parser.jmeter.validator;
+package io.metersphere.sdk.util;
 
-import io.metersphere.sdk.util.LogUtils;
 import org.apache.commons.lang3.StringUtils;
 
 public class EnumValidator {

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/ApiParamConfig.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.project.dto.environment.EnvironmentInfoDTO;
 import lombok.Data;
 
+import java.util.HashMap;
 import java.util.Map;
 
 /**
@@ -26,14 +27,14 @@ public class ApiParamConfig extends ParameterConfig {
      * key 为 AbstractMsTestElement 实现类对象
      * value 为对应的插件 ID
      */
-    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassPluginIdMap;
+    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassPluginIdMap = HashMap.newHashMap(0);
     /**
      * AbstractMsTestElement 实现类与接口协议的映射
      * key 为 AbstractMsTestElement 实现类对象
      * value 为对应的接口协议
      * 环境前后置忽略协议需要使用
      */
-    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassProtocalMap;
+    private Map<Class<? extends AbstractMsTestElement>, String> testElementClassProtocalMap = HashMap.newHashMap(0);
 
 
     @Override

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/AssertionConverter.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.parser.jmeter.processor.assertion;
 
 import io.metersphere.project.api.assertion.MsAssertion;
-import io.metersphere.api.parser.jmeter.validator.EnumValidator;
+import io.metersphere.sdk.util.EnumValidator;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import io.metersphere.sdk.constants.MsAssertionCondition;
 import org.apache.commons.lang3.BooleanUtils;

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/processor/assertion/ResponseHeaderAssertionConverter.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.parser.jmeter.processor.assertion;
 
 import io.metersphere.project.api.assertion.MsResponseHeaderAssertion;
-import io.metersphere.api.parser.jmeter.validator.EnumValidator;
+import io.metersphere.sdk.util.EnumValidator;
 import io.metersphere.plugin.api.dto.ParameterConfig;
 import io.metersphere.sdk.constants.MsAssertionCondition;
 import org.apache.commons.lang3.BooleanUtils;

File: backend/services/api-test/src/main/java/io/metersphere/api/service/scenario/ApiScenarioService.java
Patch:
@@ -1053,7 +1053,6 @@ public String debug(ApiScenarioDebugRequest request) {
         runRequest.setTestId(request.getId());
         runRequest.setReportId(request.getReportId());
         runRequest.setResourceType(ApiResourceType.API_SCENARIO.name());
-        runRequest.setRunMode(ApiExecuteRunMode.BACKEND_DEBUG.name());
         runRequest.setTempFileIds(request.getTempFileIds());
         runRequest.setGrouped(request.getGrouped());
         runRequest.setEnvironmentId(request.getEnvironmentId());

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/FakeErrorDTO.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.project.dto;
 
-import io.metersphere.project.enums.FakeErrorType;
-import io.metersphere.sdk.constants.TemplateScene;
+import io.metersphere.sdk.constants.FakeErrorType;
 import io.metersphere.system.valid.EnumValue;
 import io.metersphere.validation.groups.Created;
 import io.swagger.v3.oas.annotations.media.Schema;

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugCommentService.java
Patch:
@@ -46,7 +46,7 @@ public class BugCommentService {
     public List<BugCommentDTO> getComments(String bugId) {
         BugCommentExample example = new BugCommentExample();
         example.createCriteria().andBugIdEqualTo(bugId);
-        List<BugComment> bugComments = bugCommentMapper.selectByExample(example);
+        List<BugComment> bugComments = bugCommentMapper.selectByExampleWithBLOBs(example);
         return wrapperComments(bugComments);
     }
 

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/NoticeMessageTaskControllerTests.java
Patch:
@@ -147,7 +147,7 @@ public void addMessageTaskCheckUserSuccess() throws Exception {
         messageTaskExample = new MessageTaskExample();
         messageTaskExample.createCriteria().andProjectIdEqualTo("project-message-test").andTaskTypeEqualTo(NoticeConstants.TaskType.API_DEFINITION_TASK).andEventEqualTo(NoticeConstants.Event.CREATE);
         List<MessageTask> messageTasks = messageTaskMapper.selectByExample(messageTaskExample);
-        Assertions.assertEquals(2, messageTasks.size());
+        Assertions.assertEquals(1, messageTasks.size());
         messageTaskExample = new MessageTaskExample();
         messageTaskExample.createCriteria().andProjectIdEqualTo("project-message-test").andTaskTypeEqualTo(NoticeConstants.TaskType.API_DEFINITION_TASK).andEventEqualTo(NoticeConstants.Event.CREATE).andReceiverEqualTo("project-message-user-3");
         messageTasks = messageTaskMapper.selectByExample(messageTaskExample);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/NoticeSendService.java
Patch:
@@ -129,6 +129,7 @@ public void sendJenkins(String triggerMode, NoticeModel noticeModel) {
      */
     @Async
     public void send(Project project, String taskType, NoticeModel noticeModel) {
+        setLanguage(noticeModel);
         try {
             List<MessageDetail> messageDetails = messageDetailService.searchMessageByTypeAndProjectId(taskType, project.getId());
             // 异步发送通知

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/NoticeMessageTaskController.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.system.controller.handler.ResultHolder;
 import io.metersphere.system.log.annotation.Log;
 import io.metersphere.system.log.constants.OperationLogType;
+import io.metersphere.system.security.CheckOwner;
 import io.metersphere.system.utils.SessionUtils;
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;
@@ -38,13 +39,15 @@ public class NoticeMessageTaskController {
     @Operation(summary = "项目管理-消息管理-消息设置-保存消息设置")
     @RequiresPermissions(value = {PermissionConstants.PROJECT_MESSAGE_READ_ADD, PermissionConstants.PROJECT_MESSAGE_READ_UPDATE}, logical = Logical.OR)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.addLog(#messageTaskRequest)", msClass = MessageTaskLogService.class)
+    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
     public ResultHolder saveMessage(@Validated({Created.class, Updated.class}) @RequestBody MessageTaskRequest messageTaskRequest) {
         return noticeMessageTaskService.saveMessageTask(messageTaskRequest, SessionUtils.getUserId());
     }
 
     @GetMapping("message/task/get/{projectId}")
     @Operation(summary = "项目管理-消息管理-消息设置-获取消息设置")
     @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ_ADD)
+    @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public List<MessageTaskDTO> getMessageList(@PathVariable String projectId) throws IOException {
         return noticeMessageTaskService.getMessageList(projectId);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/mapper/ExtProjectUserRoleMapper.java
Patch:
@@ -49,7 +49,7 @@ public interface ExtProjectUserRoleMapper {
     List<User> getProjectUserList(@Param("sourceId") String sourceId);
 
     /**
-     * 根据关键字获取下拉框用户数据
+     * 根据关键字获取下拉框当前项目的用户数据
      * @param projectId 项目ID
      * @param keyword 远程搜索时的关键字 （name）
      * @return List<User>

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/impl/LarkNoticeSender.java
Patch:
@@ -28,7 +28,7 @@ public void sendLark(MessageDetail messageDetail, NoticeModel noticeModel, Strin
 
         LogUtils.info("飞书收件人: {}", userIds);
         context += StringUtils.join(collect, StringUtils.SPACE);
-        LarkClient.send(messageDetail.getWebhook(), "消息通知: \n" + context);
+        LarkClient.send(messageDetail.getWebhook(), messageDetail.getSubject()+": \n" + context);
     }
 
     @Override

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseLogService.java
Patch:
@@ -71,7 +71,7 @@ public LogDTO updateFunctionalCaseLog(FunctionalCaseEditRequest requests, List<M
                 requests.getId(),
                 null,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.FUNCTIONAL_CASE,
+                OperationLogModule.CASE_MANAGEMENT_CASE_UPDATE,
                 requests.getName());
         dto.setHistory(true);
         dto.setPath("/functional/case/update");

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -92,6 +92,9 @@ public class OperationLogModule {
 
     //用例
     public static final String FUNCTIONAL_CASE = "CASE_MANAGEMENT_CASE";
+    public static final String CASE_MANAGEMENT_CASE_CREATE = "CASE_MANAGEMENT_CASE_CREATE";
+    public static final String CASE_MANAGEMENT_CASE_UPDATE = "CASE_MANAGEMENT_CASE_UPDATE";
+    public static final String CASE_MANAGEMENT_CASE_RECYCLE = "CASE_MANAGEMENT_CASE_RECYCLE";
 
     public static final String CASE_REVIEW = "CASE_MANAGEMENT_REVIEW";
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/dto/response/BugDTO.java
Patch:
@@ -32,6 +32,9 @@ public class BugDTO extends Bug {
     @Schema(description = "关联用例数量")
     private Integer relationCaseCount;
 
+    @Schema(description = "状态名称")
+    private String statusName;
+
     @Schema(description = "自定义字段集合")
     private List<BugCustomFieldDTO> customFields;
 }

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugStatusService.java
Patch:
@@ -104,7 +104,7 @@ public List<SelectOption> getAllLocalStatusOptions(String projectId) {
 
    public String getJiraPlatformBugKeyLatest(String projectId) {
        BugExample example = new BugExample();
-       example.createCriteria().andTemplateIdEqualTo("jira").andProjectIdEqualTo(projectId);
+       example.createCriteria().andPlatformEqualTo("JIRA").andProjectIdEqualTo(projectId);
        example.setOrderByClause("create_time desc");
        List<Bug> bugs = bugMapper.selectByExample(example);
        if (CollectionUtils.isNotEmpty(bugs)) {

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileModuleService.java
Patch:
@@ -51,13 +51,13 @@ public class FileModuleService extends ModuleTreeService implements CleanupProje
 
     public List<BaseTreeNode> getTree(String projectId) {
         List<BaseTreeNode> fileModuleList = extFileModuleMapper.selectBaseByProjectId(projectId, ModuleConstants.NODE_TYPE_DEFAULT);
-        return super.buildTreeAndCountResource(fileModuleList, true, Translator.get("default.module"));
+        return super.buildTreeAndCountResource(fileModuleList, true, Translator.get("file.module.default.name"));
     }
 
     public List<BaseTreeNode> getTreeOnlyIdsAndResourceCount(String projectId, String storage, List<ModuleCountDTO> moduleCountDTOList) {
         //节点内容只有Id和parentId
         List<BaseTreeNode> fileModuleList = extFileModuleMapper.selectIdAndParentIdByProjectId(projectId, storage);
-        return super.buildTreeAndCountResource(fileModuleList, moduleCountDTOList, true, Translator.get("default.module"));
+        return super.buildTreeAndCountResource(fileModuleList, moduleCountDTOList, true, Translator.get("file.module.default.name"));
     }
 
     public String add(FileModuleCreateRequest request, String operator) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseRelationshipDTO.java
Patch:
@@ -30,4 +30,7 @@ public class FunctionalCaseRelationshipDTO implements Serializable {
     @Schema(description = "创建人名称")
     private String userName;
 
+    @Schema(description = "num")
+    private String num;
+
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectApplicationService.java
Patch:
@@ -204,7 +204,7 @@ public void syncBugConfig(String projectId, Map<String, Object> configs, String
         example.createCriteria().andProjectIdEqualTo(projectId).andTypeLike(ProjectApplicationType.BUG.BUG_SYNC.name() + "%");
         if (projectApplicationMapper.countByExample(example) > 0) {
             example.clear();
-            example.createCriteria().andTypeLike(ProjectApplicationType.BUG.BUG_SYNC.name() + "%");
+            example.createCriteria().andProjectIdEqualTo(projectId).andTypeLike(ProjectApplicationType.BUG.BUG_SYNC.name() + "%");
             projectApplicationMapper.deleteByExample(example);
             projectApplicationMapper.batchInsert(bugSyncConfigs);
         } else {
@@ -410,7 +410,7 @@ public void updateRelated(String projectId, Map<String, String> configs) {
         example.createCriteria().andProjectIdEqualTo(projectId).andTypeLike(ProjectApplicationType.CASE_RELATED_CONFIG.CASE_RELATED.name() + "%");
         if (projectApplicationMapper.countByExample(example) > 0) {
             example.clear();
-            example.createCriteria().andTypeLike(ProjectApplicationType.CASE_RELATED_CONFIG.CASE_RELATED.name() + "%");
+            example.createCriteria().andProjectIdEqualTo(projectId).andTypeLike(ProjectApplicationType.CASE_RELATED_CONFIG.CASE_RELATED.name() + "%");
             projectApplicationMapper.deleteByExample(example);
             projectApplicationMapper.batchInsert(relatedConfigs);
         } else {

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseDetailDTO.java
Patch:
@@ -62,6 +62,9 @@ public class FunctionalCaseDetailDTO implements Serializable {
     @Schema(description =  "创建人")
     private String createUser;
 
+    @Schema(description =  "创建人姓名")
+    private String createUserName;
+
     @Schema(description =  "创建时间")
     private Long createTime;
 

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseControllerTests.java
Patch:
@@ -244,6 +244,7 @@ public void testFunctionalCaseDetail() throws Exception {
             }
         });
         this.requestGetWithOkAndReturn(FUNCTIONAL_CASE_DETAIL_URL + "TEST_FUNCTIONAL_CASE_ID_3");
+        this.requestGetWithOkAndReturn(FUNCTIONAL_CASE_DETAIL_URL + "wx_test_root");
     }
 
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/GitRepositoryUtil.java
Patch:
@@ -140,11 +140,10 @@ private String genCommitMessageWithCommitTime(String commitMessage, int commitTi
 
     private String getFileLastCommitId(ObjectId objectId, String filePath) throws Exception {
         Iterable<RevCommit> logs = git.log().add(objectId).addPath(filePath).call();
-        String returnStr = StringUtils.EMPTY;
         for (RevCommit rev : logs) {
-            returnStr = rev.getName();
+            return rev.getName();
         }
-        return returnStr;
+        return null;
     }
 
     private RevCommit getRevTreeByRepositoryAndCommitId(InMemoryRepository repo, ObjectId fileCommitId) throws Exception {

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/file/GitRepository.java
Patch:
@@ -45,7 +45,7 @@ public byte[] getFile(FileRequest request) throws Exception {
             GitFileRequest gitFileInfo = request.getGitFileRequest();
             GitRepositoryUtil repositoryUtils = new GitRepositoryUtil(
                     gitFileInfo.getUrl(), gitFileInfo.getUserName(), gitFileInfo.getToken());
-            fileBytes = repositoryUtils.getFile(gitFileInfo.getUrl(), gitFileInfo.getCommitId());
+            fileBytes = repositoryUtils.getFile(request.getFileName(), gitFileInfo.getCommitId());
         }
         return fileBytes;
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/FilterChainUtils.java
Patch:
@@ -35,6 +35,7 @@ public static Map<String, String> loadBaseFilterChain() {
         filterChainDefinitionMap.put("/system/version/current", "anon");
 
         //用户通过邮箱邀请自行注册的接口
+        filterChainDefinitionMap.put("/system/user/check-invite/**", "anon");
         filterChainDefinitionMap.put("/system/user/register-by-invite", "anon");
 
         // 下载测试资源

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/FileAssociationSource.java
Patch:
@@ -5,5 +5,6 @@
 @Data
 public class FileAssociationSource {
     private String sourceId;
+    private String sourceNum;
     private String sourceName;
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/response/FileAssociationResponse.java
Patch:
@@ -13,6 +13,9 @@ public class FileAssociationResponse {
     @Schema(description = "资源Id")
     private String sourceId;
 
+    @Schema(description = "资源编号")
+    private String sourceNum;
+
     @Schema(description = "文件Id")
     private String fileId;
 

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileManagementService.java
Patch:
@@ -182,6 +182,7 @@ public byte[] getFile(FileMetadata fileMetadata) throws Exception {
             FileModuleRepositoryDTO repositoryDTO = getFileModuleRepositoryDTO(fileMetadata.getModuleId());
             FileMetadataRepositoryDTO metadataRepositoryDTO = getFileMetadataRepositoryDTO(fileMetadata.getId());
             fileRequest.setGitFileRequest(repositoryDTO, metadataRepositoryDTO);
+            fileRequest.setFileName(fileMetadata.getPath());
         }
 
         return fileService.download(fileRequest);

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileRepositoryService.java
Patch:
@@ -15,12 +15,12 @@
 import io.metersphere.project.mapper.FileModuleRepositoryMapper;
 import io.metersphere.sdk.constants.ModuleConstants;
 import io.metersphere.sdk.constants.StorageType;
+import io.metersphere.sdk.dto.RemoteFileAttachInfo;
 import io.metersphere.sdk.exception.MSException;
+import io.metersphere.sdk.util.GitRepositoryUtil;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.dto.sdk.BaseTreeNode;
-import io.metersphere.sdk.dto.RemoteFileAttachInfo;
 import io.metersphere.system.uid.IDGenerator;
-import io.metersphere.sdk.util.GitRepositoryUtil;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
@@ -137,7 +137,7 @@ public String addFile(RepositoryFileAddRequest request, String operator) {
         GitRepositoryUtil utils = new GitRepositoryUtil(repository.getUrl(), repository.getUserName(), repository.getToken());
 
         RemoteFileAttachInfo fileAttachInfo = utils.selectLastCommitIdByBranch(request.getBranch(), request.getFilePath());
-        if (fileAttachInfo == null) {
+        if (fileAttachInfo == null || fileAttachInfo.fileIsNotExist()) {
             throw new MSException(Translator.get("file.not.exist"));
         }
         FileMetadata fileMetadata = fileMetadataService.genFileMetadata(request.getFilePath(), StorageType.GIT.name(), fileAttachInfo.getSize(), request.isEnable(),

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserRoleRelationService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.sdk.constants.UserRoleEnum;
 import io.metersphere.sdk.constants.UserRoleScope;
 import io.metersphere.sdk.util.JSON;
+import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.*;
 import io.metersphere.system.dto.user.response.UserTableResponse;
 import io.metersphere.system.log.constants.OperationLogModule;
@@ -72,8 +73,8 @@ public List<LogDTO> getBatchLogs(@Valid @NotEmpty List<String> userRoleId,
             log.setCreateTime(operationTime);
             log.setSourceId(user.getId());
             log.setContent(user.getName() + StringUtils.SPACE
-                    + operationType + StringUtils.SPACE
-                    + "UserRole" + StringUtils.SPACE
+                    + Translator.get(StringUtils.lowerCase(operationType)) + StringUtils.SPACE
+                    + Translator.get("permission.project_group.name") + StringUtils.SPACE
                     + userRole.getName());
             log.setOriginalValue(JSON.toJSONBytes(userRole));
             logs.add(log);

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/DemandDTO.java
Patch:
@@ -18,7 +18,7 @@ public class DemandDTO implements Serializable {
     @Schema(description = "需求ID")
     private String demandId;
 
-    @Schema(description = "需求ID")
+    @Schema(description = "父需求ID")
     private String parent;
 
     @Schema(description = "需求标题", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseDemandMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.functional.mapper;
 
-import io.metersphere.functional.domain.FunctionalCaseDemand;
 import io.metersphere.functional.dto.FunctionalDemandDTO;
 import org.apache.ibatis.annotations.Param;
 
@@ -11,7 +10,6 @@
  */
 public interface ExtFunctionalCaseDemandMapper {
 
-    List<FunctionalDemandDTO> selectGroupByKeyword(@Param("keyword") String keyword, @Param("caseId") String caseId);
-    List<FunctionalCaseDemand> selectByKeyword(@Param("keyword") String keyword, @Param("caseId") String caseId, @Param("platforms") List<String> platforms, @Param("ids") List<String> ids);
+    List<FunctionalDemandDTO> selectParentDemandByKeyword(@Param("keyword") String keyword, @Param("caseId") String caseId);
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseDemandService.java
Patch:
@@ -60,14 +60,14 @@ public class FunctionalCaseDemandService {
      * @return List<FunctionalCaseDemand>
      */
     public List<FunctionalDemandDTO> listFunctionalCaseDemands(QueryDemandListRequest request) {
-        List<FunctionalDemandDTO> parentDemands = extFunctionalCaseDemandMapper.selectGroupByKeyword(request.getKeyword(), request.getCaseId());
+        List<FunctionalDemandDTO> parentDemands = extFunctionalCaseDemandMapper.selectParentDemandByKeyword(request.getKeyword(), request.getCaseId());
         if (CollectionUtils.isEmpty(parentDemands)) {
             return new ArrayList<>();
         }
+        Map<String, FunctionalDemandDTO> functionalCaseDemandMap = parentDemands.stream().filter(t -> StringUtils.isNotBlank(t.getDemandId())).collect(Collectors.toMap(FunctionalCaseDemand::getDemandId, t -> t));
         List<String> ids = parentDemands.stream().map(FunctionalCaseDemand::getId).toList();
         FunctionalCaseDemandExample functionalCaseDemandExample = new FunctionalCaseDemandExample();
         functionalCaseDemandExample.createCriteria().andIdNotIn(ids);
-        Map<String, FunctionalDemandDTO> functionalCaseDemandMap = parentDemands.stream().filter(t -> StringUtils.isNotBlank(t.getDemandId())).collect(Collectors.toMap(FunctionalCaseDemand::getDemandId, t -> t));
         List<FunctionalCaseDemand> functionalCaseDemands = functionalCaseDemandMapper.selectByExample(functionalCaseDemandExample);
         int lastSize = 0;
         while (CollectionUtils.isNotEmpty(functionalCaseDemands) && functionalCaseDemands.size() != lastSize) {

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseDemandControllerTests.java
Patch:
@@ -20,7 +20,6 @@
 import io.metersphere.system.controller.handler.ResultHolder;
 import io.metersphere.system.domain.SystemParameter;
 import io.metersphere.system.log.constants.OperationLogType;
-import io.metersphere.system.mapper.ServiceIntegrationMapper;
 import io.metersphere.system.mapper.SystemParameterMapper;
 import io.metersphere.system.utils.Pager;
 import jakarta.annotation.Resource;
@@ -59,8 +58,6 @@ public class FunctionalCaseDemandControllerTests extends BaseTest {
     @Resource
     private SystemParameterMapper systemParameterMapper;
     @Resource
-    private ServiceIntegrationMapper serviceIntegrationMapper;
-    @Resource
     private BasePluginTestService basePluginTestService;
     @Resource
     private MockServerClient mockServerClient;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserLoginService.java
Patch:
@@ -19,7 +19,6 @@
 import io.metersphere.system.dto.user.UserExcludeOptionDTO;
 import io.metersphere.system.dto.user.UserRolePermissionDTO;
 import io.metersphere.system.dto.user.UserRoleResourceDTO;
-import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.log.dto.LogDTO;
 import io.metersphere.system.log.service.OperationLogService;
@@ -121,7 +120,7 @@ public void saveLog(String userId, String method, String path, String content, S
                 OperationLogConstants.SYSTEM,
                 userId,
                 type,
-                OperationLogModule.SETTING_SYSTEM,
+                OperationLogConstants.SYSTEM,
                 StringUtils.join(user.getName(), StringUtils.EMPTY, content));
         dto.setMethod(method);
         dto.setPath(path);
@@ -367,7 +366,7 @@ public void updateUser(User user) {
         // last organization id 变了
         if (user.getLastOrganizationId() != null && !StringUtils.equals(user.getLastOrganizationId(), userFromDB.getLastOrganizationId())) {
             List<Project> projects = getProjectListByWsAndUserId(user.getId(), user.getLastOrganizationId());
-            if (projects.size() > 0) {
+            if (!projects.isEmpty()) {
                 // 如果传入的 last_project_id 是 last_organization_id 下面的
                 boolean present = projects.stream().anyMatch(p -> StringUtils.equals(p.getId(), user.getLastProjectId()));
                 if (!present) {

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugService.java
Patch:
@@ -519,7 +519,7 @@ public void syncPlatformBugs(List<Bug> remainBugs, Project project, String curre
             // 异常或正常结束都得删除当前项目执行同步的Key
             bugSyncExtraService.deleteSyncKey(project.getId());
             // 发送同步通知
-            bugSyncNoticeService.sendNotice(remainBugs.size(), currentUser);
+            bugSyncNoticeService.sendNotice(remainBugs.size(), currentUser, project.getId());
         }
     }
 

File: backend/services/bug-management/src/main/java/io/metersphere/bug/service/BugSyncNoticeService.java
Patch:
@@ -23,7 +23,7 @@ public class BugSyncNoticeService {
     @Resource
     private NoticeSendService noticeSendService;
 
-    public void sendNotice(int total, String currentUser) {
+    public void sendNotice(int total, String currentUser, String projectId) {
         User user = userMapper.selectByPrimaryKey(currentUser);
         Map<String, String> defaultTemplateMap = MessageTemplateUtils.getDefaultTemplateMap();
         String template = defaultTemplateMap.get(NoticeConstants.TemplateText.BUG_SYNC_TASK_EXECUTE_COMPLETED);
@@ -33,6 +33,7 @@ public void sendNotice(int total, String currentUser) {
         Map paramMap = new HashMap<>();
         paramMap.put(NoticeConstants.RelatedUser.OPERATOR, user.getName());
         paramMap.put("total", total);
+        paramMap.put("projectId", projectId);
         NoticeModel noticeModel = NoticeModel.builder().operator(currentUser)
                 .context(template).subject(subject).paramMap(paramMap).event(NoticeConstants.Event.SYNC_COMPLETED).build();
         noticeSendService.send(NoticeConstants.TaskType.BUG_SYNC_TASK, noticeModel);

File: backend/framework/plugin/plugin-platform-sdk/src/main/java/io/metersphere/plugin/platform/dto/reponse/PlatformDemandDTO.java
Patch:
@@ -15,7 +15,7 @@ public class PlatformDemandDTO {
     /**
      * 需求列表数据
      */
-    private List<Demand> demandList;
+    private List<Demand> list;
 
     @Data
     public static class Demand {

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/filemanagement/request/FileRepositoryCreateRequest.java
Patch:
@@ -23,6 +23,7 @@ public class FileRepositoryCreateRequest {
 
     @Schema(description = "存储库地址", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{file_repository.url.not_blank}")
+    @Size(min = 1, max = 255, message = "Url " + "{length.too.large}")
     private String url;
 
     @Schema(description = "存储库token", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -176,7 +176,7 @@ public FileMetadata genFileMetadata(String filePath, String storage, long size,
         fileMetadata.setPath(filePath);
         fileMetadata.setLatest(true);
         fileMetadata.setRefId(fileMetadata.getId());
-        fileMetadata.setEnable(false);
+        fileMetadata.setEnable(enable);
         return fileMetadata;
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/config/interceptor/ProjectInterceptor.java
Patch:
@@ -1,8 +1,9 @@
 package io.metersphere.system.config.interceptor;
 
 import io.metersphere.project.domain.CustomFunctionBlob;
-import io.metersphere.project.domain.FileMetadataRepository;
+import io.metersphere.project.domain.FileModuleRepository;
 import io.metersphere.sdk.util.CompressUtils;
+import io.metersphere.sdk.util.EncryptUtils;
 import io.metersphere.system.utils.MybatisInterceptorConfig;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -16,7 +17,7 @@ public class ProjectInterceptor {
     public List<MybatisInterceptorConfig> projectCompressConfigs() {
         List<MybatisInterceptorConfig> configList = new ArrayList<>();
 
-        configList.add(new MybatisInterceptorConfig(FileMetadataRepository.class, "gitInfo", CompressUtils.class, "zip", "unzip"));
+        configList.add(new MybatisInterceptorConfig(FileModuleRepository.class, "token", EncryptUtils.class, "aesEncrypt", "aesDecrypt"));
         configList.add(new MybatisInterceptorConfig(CustomFunctionBlob.class, "script", CompressUtils.class, "zip", "unzip"));
         configList.add(new MybatisInterceptorConfig(CustomFunctionBlob.class, "result", CompressUtils.class, "zip", "unzip"));
         configList.add(new MybatisInterceptorConfig(CustomFunctionBlob.class, "params", CompressUtils.class, "zip", "unzip"));

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PluginService.java
Patch:
@@ -224,7 +224,7 @@ public Plugin update(PluginUpdateRequest request) {
         Plugin plugin = new Plugin();
         BeanUtils.copyBean(plugin, request);
         plugin.setCreateTime(null);
-        plugin.setUpdateTime(null);
+        plugin.setUpdateTime(System.currentTimeMillis());
         // 校验重名
         checkPluginUpdateExist(plugin);
         pluginMapper.updateByPrimaryKeySelective(plugin);

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/OrganizationEditRequest.java
Patch:
@@ -20,7 +20,7 @@ public class OrganizationEditRequest implements Serializable {
 
     @Schema(description =  "组织名称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{organization.name.not_blank}", groups = {Created.class, Updated.class})
-    @Size(min = 1, max = 100, message = "{organization.name.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 255, message = "{organization.name.length_range}", groups = {Created.class, Updated.class})
     private String name;
 
     @Schema(description =  "描述")

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/OrganizationNameEditRequest.java
Patch:
@@ -22,6 +22,6 @@ public class OrganizationNameEditRequest implements Serializable {
 
     @Schema(description =  "组织名称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{organization.name.not_blank}", groups = {Created.class, Updated.class})
-    @Size(min = 1, max = 100, message = "{organization.name.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 255, message = "{organization.name.length_range}", groups = {Created.class, Updated.class})
     private String name;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/PluginUpdateRequest.java
Patch:
@@ -28,7 +28,7 @@ public class PluginUpdateRequest {
     private Boolean global;
 
     @Schema(description =  "插件描述")
-    @Size(max = 500, message = "{plugin.scenario.length_range}", groups = {Created.class, Updated.class})
+    @Size(max = 1000, message = "{plugin.scenario.length_range}", groups = {Created.class, Updated.class})
     private String description;
 
     @Schema(hidden = true)

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/request/CustomFieldUpdateRequest.java
Patch:
@@ -38,6 +38,7 @@ public class CustomFieldUpdateRequest {
     private String type;
 
     @Schema(title = "自定义字段备注")
+    @Size(max = 1000, message = "{custom_field.remark.length_range}", groups = {Created.class, Updated.class})
     private String remark;
 
     @Schema(title = "组织或项目ID", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/param/PluginUpdateRequestDefinition.java
Patch:
@@ -16,6 +16,6 @@ public class PluginUpdateRequestDefinition {
     @Size(min = 1, max = 255, groups = {Created.class, Updated.class})
     private String name;
 
-    @Size(max = 500, groups = {Created.class, Updated.class})
+    @Size(max = 1000, groups = {Created.class, Updated.class})
     private String description;
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -550,8 +550,8 @@ private void genNewFileVersionByOldFile(FileMetadata oldFile, FileMetadata fileM
         fileMetadata.setProjectId(oldFile.getProjectId());
         fileMetadata.setModuleId(oldFile.getModuleId());
         fileMetadata.setName(oldFile.getName());
-        fileMetadata.setCreateTime(oldFile.getCreateTime());
-        fileMetadata.setCreateUser(oldFile.getCreateUser());
+        fileMetadata.setCreateTime(operationTime);
+        fileMetadata.setCreateUser(operator);
         fileMetadata.setUpdateTime(operationTime);
         fileMetadata.setPath(oldFile.getPath());
         fileMetadata.setUpdateUser(operator);

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/UserRegisterRequest.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Size;
 import lombok.Data;
 
 @Data
@@ -12,6 +13,7 @@ public class UserRegisterRequest {
 
     @NotBlank
     @Schema(description = "用户名", requiredMode = Schema.RequiredMode.REQUIRED)
+    @Size(min = 1, max = 255, message = "{user.name.length_range}")
     private String name;
 
     @NotBlank

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserLogService.java
Patch:
@@ -319,7 +319,7 @@ public void addRegisterLog(User user, UserInvite userInvite) {
         LogDTO log = LogDTOBuilder.builder()
                 .projectId(OperationLogConstants.SYSTEM)
                 .module(OperationLogModule.SETTING_SYSTEM_USER_SINGLE)
-                .createUser(user.getName())
+                .createUser(user.getId())
                 .organizationId(OperationLogConstants.SYSTEM)
                 .sourceId(user.getId())
                 .type(OperationLogType.ADD.name())

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectCustomFieldService.java
Patch:
@@ -55,6 +55,7 @@ public CustomField update(CustomField customField, List<CustomFieldOptionRequest
             customField.setName(null);
         }
         customField.setScopeId(originCustomField.getScopeId());
+        customField.setScene(originCustomField.getScene());
         Project project = projectService.checkResourceExist(originCustomField.getScopeId());
         checkProjectTemplateEnable(project.getOrganizationId(), originCustomField.getScene());
         return super.update(customField, options);

File: backend/services/system-setting/src/main/java/io/metersphere/system/resolver/field/AbstractCustomFieldResolver.java
Patch:
@@ -58,7 +58,7 @@ protected void validateArray(String name, Object value) {
     }
 
     protected void validateString(String name, Object v) {
-        if (!(v instanceof String)) {
+        if (v != null && !(v instanceof String)) {
             throwValidateException(name);
         }
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseCustomFieldService.java
Patch:
@@ -203,6 +203,7 @@ protected void checkUpdateExist(CustomField customField) {
         example.createCriteria()
                 .andScopeIdEqualTo(customField.getScopeId())
                 .andIdNotEqualTo(customField.getId())
+                .andSceneEqualTo(customField.getScene())
                 .andNameEqualTo(customField.getName());
         if (CollectionUtils.isNotEmpty(customFieldMapper.selectByExample(example))) {
             throw new MSException(CUSTOM_FIELD_EXIST);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CreateTemplateResourceService.java
Patch:
@@ -117,7 +117,6 @@ private void createProjectTemplate(String projectId, String organizationId, Temp
                     .map(templateCustomField -> {
                         TemplateCustomFieldRequest templateCustomFieldRequest = BeanUtils.copyBean(new TemplateCustomFieldRequest(), templateCustomField);
                         CustomField customField = customFieldMap.get(templateCustomField.getFieldId());
-                        templateCustomFieldRequest.setDefaultValue(null);
                         try {
                             if (StringUtils.isNotBlank(templateCustomField.getDefaultValue())) {
                                 // 将字符串转成对应的对象，方便调用统一的创建方法
@@ -126,6 +125,7 @@ private void createProjectTemplate(String projectId, String organizationId, Temp
                             }
                         } catch (Exception e) {
                             LogUtils.error(e);
+                            templateCustomFieldRequest.setDefaultValue(null);
                         }
                         return templateCustomFieldRequest;
                     })

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationCustomFieldService.java
Patch:
@@ -87,6 +87,7 @@ public CustomField update(CustomField customField, List<CustomFieldOptionRequest
         }
         checkOrganizationTemplateEnable(customField.getScopeId(), originCustomField.getScene());
         customField.setScopeId(originCustomField.getScopeId());
+        customField.setScene(originCustomField.getScene());
         OrganizationService.checkResourceExist(originCustomField.getScopeId());
         // 同步创建项目级别字段
         updateRefProjectCustomField(customField, options);
@@ -109,6 +110,7 @@ public void updateRefProjectCustomField(CustomField orgCustomField, List<CustomF
             customField.setId(projectField.getId());
             customField.setScopeId(projectField.getScopeId());
             customField.setRefId(orgCustomField.getId());
+            customField.setScene(orgCustomField.getScene());
             super.update(customField, options);
         });
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationProjectController.java
Patch:
@@ -128,7 +128,7 @@ public Pager<List<UserExtendDTO>> getProjectMember(@Validated @RequestBody Proje
     @PostMapping("/add-members")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_PROJECT_MEMBER_ADD)
     @Operation(summary = "系统设置-组织-项目-添加成员")
-    @CheckOwner(resourceId = "#request.id", resourceType = "project")
+    @CheckOwner(resourceId = "#request.projectId", resourceType = "project")
     public void addProjectMember(@Validated @RequestBody ProjectAddMemberRequest request) {
         ProjectAddMemberBatchRequest batchRequest = new ProjectAddMemberBatchRequest();
         batchRequest.setProjectIds(List.of(request.getProjectId()));

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseModuleMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.functional.mapper;
 
 import io.metersphere.functional.dto.FunctionalCaseModuleDTO;
+import io.metersphere.functional.dto.ProjectOptionDTO;
 import io.metersphere.project.dto.NodeSortQueryParam;
 import io.metersphere.request.AssociateCaseModuleRequest;
 import io.metersphere.system.dto.sdk.BaseModule;
@@ -14,6 +15,8 @@ public interface ExtFunctionalCaseModuleMapper {
 
     List<FunctionalCaseModuleDTO> selectBaseByProjectIdAndReviewId(@Param("reviewId")String reviewId);
 
+    List<ProjectOptionDTO> selectFunRootIdByReviewId(@Param("reviewId")String reviewId);
+
     List<BaseTreeNode> selectBaseByIds(@Param("ids") List<String> ids);
 
     List<String> selectChildrenIdsByParentIds(@Param("ids") List<String> deleteIds);

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/CaseReviewFunctionalCaseControllerTests.java
Patch:
@@ -144,6 +144,9 @@ public void testReviewCasePage() throws Exception {
     @Test
     @Order(4)
     public void emptyDataTest() throws Exception {
+        List<BaseTreeNode> treeNodeDefaults = this.getCaseReviewModuleTreeNode("wx_test_project","wx_review_id_5");
+        String jsonStringD = JSON.toJSONString(treeNodeDefaults);
+        System.out.println(jsonStringD);
         List<BaseTreeNode> treeNodes = this.getCaseReviewModuleTreeNode("wx_test_project","wx_review_id_2");
         String jsonString = JSON.toJSONString(treeNodes);
         System.out.println(jsonString);

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemProjectController.java
Patch:
@@ -146,7 +146,6 @@ public void addProjectMember(@Validated @RequestBody ProjectAddMemberRequest req
     @Parameter(name = "userId", description = "用户id", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED))
     @Parameter(name = "projectId", description = "项目id", schema = @Schema(requiredMode = Schema.RequiredMode.REQUIRED))
     @RequiresPermissions(PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_MEMBER_DELETE)
-    @Log(type = OperationLogType.DELETE, expression = "#msClass.deleteLog(#projectId)", msClass = SystemProjectLogService.class)
     @CheckOwner(resourceId = "#projectId", resourceType = "project")
     public int removeProjectMember(@PathVariable String projectId, @PathVariable String userId) {
         return systemProjectService.removeProjectMember(projectId, userId, SessionUtils.getUserId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -106,7 +106,7 @@ public TableBatchProcessResponse updateUserEnable(@Validated @RequestBody UserCh
     @Operation(summary = "系统设置-系统-用户-导入用户")
     @RequiresPermissions(PermissionConstants.SYSTEM_USER_IMPORT)
     public UserImportResponse importUser(@RequestPart(value = "file", required = false) MultipartFile excelFile) {
-        return userService.importByExcel(excelFile, UserSource.LOCAL.name(), SessionUtils.getSessionId());
+        return userService.importByExcel(excelFile, UserSource.LOCAL.name(), SessionUtils.getUserId());
     }
 
     @PostMapping("/delete")

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AbstractNoticeSender.java
Patch:
@@ -144,7 +144,7 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
 
         // 去重复
         List<String> userIds = toUsers.stream().map(Receiver::getUserId).distinct().toList();
-        LogUtils.error("userIds: ", JSON.toJSONString(userIds));
+        LogUtils.info("userIds: ", JSON.toJSONString(userIds));
         List<User> users = getUsers(userIds);
         List<String> realUserIds = users.stream().map(User::getId).toList();
         return toUsers.stream().filter(t -> realUserIds.contains(t.getUserId())).toList();

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/handler/result/CommonResultCode.java
Patch:
@@ -28,7 +28,8 @@ public enum CommonResultCode implements IResultCode {
     STATUS_ITEM_NOT_EXIST(100015, "status_item.not.exist"),
     STATUS_ITEM_EXIST(100016, "status_item.exist"),
     FIELD_VALIDATE_ERROR(100017, "field_validate_error"),
-    STATUS_DEFINITION_REQUIRED_ERROR(100018, "status_definition_required_error");;
+    STATUS_DEFINITION_REQUIRED_ERROR(100018, "status_definition_required_error"),
+    ADMIN_USER_ROLE_PERMISSION(100019, "internal_admin_user_role_permission_error");
 
 
     private int code;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/GlobalUserRoleService.java
Patch:
@@ -61,6 +61,7 @@ private int getTypeOrder(UserRole userRole) {
     /**
      * 校验是否是全局用户组，非全局抛异常
      */
+    @Override
     public void checkGlobalUserRole(UserRole userRole) {
         if (!StringUtils.equals(userRole.getScopeId(), UserRoleScope.GLOBAL)) {
             throw new MSException(GLOBAL_USER_ROLE_PERMISSION);
@@ -153,7 +154,8 @@ public List<PermissionDefinitionItem> getPermissionSetting(String id) {
     public void updatePermissionSetting(PermissionSettingUpdateRequest request) {
         UserRole userRole = getWithCheck(request.getUserRoleId());
         checkGlobalUserRole(userRole);
-        checkInternalUserRole(userRole);
+        // 内置管理员级别用户组无法更改权限
+        checkAdminUserRole(userRole);
         super.updatePermissionSetting(request);
     }
 }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectUserRoleService.java
Patch:
@@ -7,14 +7,14 @@
 import io.metersphere.project.request.ProjectUserRoleRequest;
 import io.metersphere.sdk.constants.InternalUserRole;
 import io.metersphere.sdk.constants.UserRoleType;
-import io.metersphere.system.dto.permission.PermissionDefinitionItem;
-import io.metersphere.system.dto.sdk.request.PermissionSettingUpdateRequest;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.User;
 import io.metersphere.system.domain.UserRole;
 import io.metersphere.system.domain.UserRoleRelation;
 import io.metersphere.system.domain.UserRoleRelationExample;
+import io.metersphere.system.dto.permission.PermissionDefinitionItem;
+import io.metersphere.system.dto.sdk.request.PermissionSettingUpdateRequest;
 import io.metersphere.system.mapper.UserMapper;
 import io.metersphere.system.mapper.UserRoleMapper;
 import io.metersphere.system.mapper.UserRoleRelationMapper;
@@ -97,6 +97,7 @@ public void delete(String roleId, String currentUserId) {
         UserRole userRole = get(roleId);
         // 非项目用户组不允许删除, 内置用户组不允许删除
         checkProjectUserRole(userRole);
+        checkGlobalUserRole(userRole);
         super.delete(userRole, InternalUserRole.PROJECT_MEMBER.getValue(), currentUserId, userRole.getScopeId());
     }
 

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectUserRoleControllerTests.java
Patch:
@@ -36,7 +36,6 @@
 import java.util.Set;
 import java.util.stream.Collectors;
 
-import static io.metersphere.system.controller.handler.result.CommonResultCode.INTERNAL_USER_ROLE_PERMISSION;
 import static io.metersphere.system.controller.result.SystemResultCode.NO_GLOBAL_USER_ROLE_PERMISSION;
 import static io.metersphere.system.controller.result.SystemResultCode.NO_PROJECT_USER_ROLE_PERMISSION;
 import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
@@ -210,7 +209,7 @@ public void testProjectUserRoleDeleteError() throws Exception {
         // 非项目下用户组异常
         this.requestGet(PROJECT_USER_ROLE_DELETE + "/" + InternalUserRole.ADMIN.getValue()).andExpect(jsonPath("$.code").value(NO_PROJECT_USER_ROLE_PERMISSION.getCode()));
         // 非内置用户组异常
-        this.requestGet(PROJECT_USER_ROLE_DELETE + "/" + InternalUserRole.PROJECT_ADMIN.getValue()).andExpect(jsonPath("$.code").value(INTERNAL_USER_ROLE_PERMISSION.getCode()));
+        this.requestGet(PROJECT_USER_ROLE_DELETE + "/" + InternalUserRole.PROJECT_ADMIN.getValue()).andExpect(jsonPath("$.code").value(NO_GLOBAL_USER_ROLE_PERMISSION.getCode()));
     }
 
     @Test

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationUserRoleControllerTests.java
Patch:
@@ -35,7 +35,6 @@
 import java.util.Set;
 import java.util.stream.Collectors;
 
-import static io.metersphere.system.controller.handler.result.CommonResultCode.INTERNAL_USER_ROLE_PERMISSION;
 import static io.metersphere.system.controller.result.SystemResultCode.NO_GLOBAL_USER_ROLE_PERMISSION;
 import static io.metersphere.system.controller.result.SystemResultCode.NO_ORG_USER_ROLE_PERMISSION;
 import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
@@ -172,7 +171,7 @@ public void testOrganizationUserRoleDeleteError() throws Exception {
         // 非组织下用户组异常
         this.requestGet(ORGANIZATION_USER_ROLE_DELETE + "/" + InternalUserRole.ADMIN.getValue()).andExpect(jsonPath("$.code").value(NO_ORG_USER_ROLE_PERMISSION.getCode()));
         // 非内置用户组异常
-        this.requestGet(ORGANIZATION_USER_ROLE_DELETE + "/" + InternalUserRole.ORG_ADMIN.getValue()).andExpect(jsonPath("$.code").value(INTERNAL_USER_ROLE_PERMISSION.getCode()));
+        this.requestGet(ORGANIZATION_USER_ROLE_DELETE + "/" + InternalUserRole.ORG_ADMIN.getValue()).andExpect(jsonPath("$.code").value(NO_GLOBAL_USER_ROLE_PERMISSION.getCode()));
     }
 
     @Test

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -656,7 +656,7 @@ public List<FileVersionResponse> getFileVersion(String fileId) {
 
             FileMetadataRepository fileRepository = fileIdMap.get(item.getId());
             if (fileRepository == null) {
-                fileVersionResponse.setUpdateHistory(Translator.get("file.log.re-upload"));
+                fileVersionResponse.setUpdateHistory(Translator.get("file.log.upload_file"));
             } else {
                 fileVersionResponse.setUpdateHistory(fileRepository.getCommitMessage());
             }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ModuleTreeService.java
Patch:
@@ -66,7 +66,7 @@ public List<BaseTreeNode> buildTreeAndCountResource(List<BaseTreeNode> traverseL
             lastSize = traverseList.size();
             List<BaseTreeNode> notMatchedList = new ArrayList<>();
             for (BaseTreeNode treeNode : traverseList) {
-                if (!baseTreeNodeMap.containsKey(treeNode.getParentId()) && !StringUtils.equals(treeNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
+                if (!baseTreeNodeMap.containsKey(treeNode.getParentId()) && !StringUtils.equalsIgnoreCase(treeNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
                     notMatchedList.add(treeNode);
                     continue;
                 }
@@ -127,7 +127,7 @@ public NodeSortDTO getNodeSortDTO(NodeMoveRequest request, Function<String, Base
             sortParam.setOperator(MOVE_POS_OPERATOR_LATEST);
             previousNode = selectPosNodeFunc.apply(sortParam);
         } else {
-            if (StringUtils.equals(dropNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
+            if (StringUtils.equalsIgnoreCase(dropNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
                 parentModule = new BaseModule(ModuleConstants.ROOT_NODE_PARENT_ID, ModuleConstants.ROOT_NODE_PARENT_ID, 0, dragNode.getProjectId(), ModuleConstants.ROOT_NODE_PARENT_ID);
             } else {
                 parentModule = selectIdNodeFunc.apply(dropNode.getParentId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/user/UserEditRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.system.dto.request.user;
 
-import io.metersphere.system.dto.UserCreateInfo;
+import io.metersphere.system.dto.user.UserCreateInfo;
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;
 import io.swagger.v3.oas.annotations.media.Schema;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/user/UserCreateInfo.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system.dto;
+package io.metersphere.system.dto.user;
 
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/user/request/UserBatchCreateRequest.java
Patch:
@@ -1,5 +1,6 @@
-package io.metersphere.system.dto;
+package io.metersphere.system.dto.user.request;
 
+import io.metersphere.system.dto.user.UserCreateInfo;
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;
 import io.swagger.v3.oas.annotations.media.Schema;
@@ -11,7 +12,7 @@
 import java.util.List;
 
 @Data
-public class UserBatchCreateDTO {
+public class UserBatchCreateRequest {
 
     @Schema(description =  "用户信息集合", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotEmpty(groups = {Created.class, Updated.class}, message = "{user.info.not_empty}")

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/user/response/UserInviteResponse.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system.dto.response;
+package io.metersphere.system.dto.user.response;
 
 import io.metersphere.system.domain.UserInvite;
 import io.swagger.v3.oas.annotations.media.Schema;
@@ -14,6 +14,6 @@ public class UserInviteResponse {
     private List<String> inviteIds;
 
     public UserInviteResponse(List<UserInvite> userInvites) {
-        this.inviteIds = userInvites.stream().map(UserInvite::getId).collect(java.util.stream.Collectors.toList());
+        this.inviteIds = userInvites.stream().map(UserInvite::getId).toList();
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/user/response/UserSelectOption.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system.dto.response;
+package io.metersphere.system.dto.user.response;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/user/response/UserTableResponse.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system.dto.response;
+package io.metersphere.system.dto.user.response;
 
 import io.metersphere.system.domain.Organization;
 import io.metersphere.system.domain.User;

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/BaseUserMapper.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.system.dto.user.UserExcludeOptionDTO;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface BaseUserMapper {
@@ -24,7 +25,7 @@ public interface BaseUserMapper {
 
     String selectEmailInDB(@Param("email") String email, @Param("id") String id);
 
-    List<User> selectUserIdByEmailList(@Param("emailList") List<String> emailList);
+    List<User> selectUserIdByEmailList(@Param("emailList") Collection<String> emailList);
 
     List<User> selectByKeyword(@Param("keyword") String keyword, @Param("selectId") boolean selectId);
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/GlobalUserRoleService.java
Patch:
@@ -2,15 +2,15 @@
 
 import io.metersphere.sdk.constants.UserRoleScope;
 import io.metersphere.sdk.constants.UserRoleType;
-import io.metersphere.system.dto.permission.PermissionDefinitionItem;
-import io.metersphere.system.dto.sdk.request.PermissionSettingUpdateRequest;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.UserRole;
 import io.metersphere.system.domain.UserRoleExample;
+import io.metersphere.system.dto.permission.PermissionDefinitionItem;
+import io.metersphere.system.dto.sdk.request.PermissionSettingUpdateRequest;
+import io.metersphere.system.dto.user.response.UserSelectOption;
 import io.metersphere.system.mapper.ExtUserRoleMapper;
 import io.metersphere.system.mapper.UserRoleMapper;
-import io.metersphere.system.dto.response.UserSelectOption;
 import jakarta.annotation.Resource;
 import jakarta.validation.Valid;
 import jakarta.validation.constraints.NotEmpty;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserRoleRelationService.java
Patch:
@@ -7,7 +7,7 @@
 import io.metersphere.sdk.constants.UserRoleScope;
 import io.metersphere.sdk.util.JSON;
 import io.metersphere.system.domain.*;
-import io.metersphere.system.dto.response.UserTableResponse;
+import io.metersphere.system.dto.user.response.UserTableResponse;
 import io.metersphere.system.log.constants.OperationLogModule;
 import io.metersphere.system.log.constants.OperationLogType;
 import io.metersphere.system.log.dto.LogDTO;
@@ -67,7 +67,7 @@ public List<LogDTO> getBatchLogs(@Valid @NotEmpty List<String> userRoleId,
             log.setOrganizationId(OperationLogConstants.SYSTEM);
             log.setType(operationType);
             log.setCreateUser(operator);
-            log.setModule(OperationLogModule.SYSTEM_USER);
+            log.setModule(OperationLogModule.SETTING_SYSTEM_USER_SINGLE);
             log.setMethod(operationMethod);
             log.setCreateTime(operationTime);
             log.setSourceId(user.getId());

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/user/UserControllerPermissionTests.java
Patch:
@@ -2,12 +2,12 @@
 
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.system.base.BaseTest;
-import io.metersphere.system.dto.UserCreateInfo;
 import io.metersphere.system.dto.request.UserInviteRequest;
 import io.metersphere.system.dto.request.user.UserChangeEnableRequest;
 import io.metersphere.system.dto.request.user.UserRoleBatchRelationRequest;
-import io.metersphere.system.dto.response.UserSelectOption;
 import io.metersphere.system.dto.table.TableBatchProcessDTO;
+import io.metersphere.system.dto.user.UserCreateInfo;
+import io.metersphere.system.dto.user.response.UserSelectOption;
 import io.metersphere.system.utils.user.UserParamUtils;
 import io.metersphere.system.utils.user.UserRequestUtils;
 import org.junit.jupiter.api.MethodOrderer;

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/MessageDetail.java
Patch:
@@ -14,6 +14,7 @@ public class MessageDetail implements Serializable {
     private String taskType;
     private String webhook;
     private String type;
+    private String dingType;
     private String testId;
     private Long createTime;
     private String subject;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/MessageDetailService.java
Patch:
@@ -97,6 +97,9 @@ private void getMessageDetails(List<MessageDetail> messageDetails, List<MessageT
                 return;
             }
             messageDetail.setType(projectRobot.getPlatform());
+            if (StringUtils.isNotBlank(projectRobot.getType())) {
+                messageDetail.setDingType(projectRobot.getType());
+            }
             if (StringUtils.isNotBlank(projectRobot.getWebhook())) {
                 messageDetail.setWebhook(projectRobot.getWebhook());
             }

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/ProjectDTO.java
Patch:
@@ -24,6 +24,8 @@ public class ProjectDTO extends Project implements Serializable {
     private List<String> moduleIds;
     @Schema(description =  "资源池", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
     private List<ProjectResourcePoolDTO> resourcePoolList;
+    @Schema(description =  "剩余删除保留天数")
+    private Integer remainDayCount;
 
     private static final long serialVersionUID = 1L;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/job/CleanOrganizationJob.java
Patch:
@@ -10,7 +10,7 @@
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Component;
 
-import java.time.LocalDate;
+import java.time.LocalDateTime;
 import java.time.ZoneId;
 import java.util.List;
 
@@ -31,8 +31,8 @@ public class CleanOrganizationJob {
     public void cleanOrganization() {
         LogUtils.info("clean up organization start.");
         try {
-            LocalDate date = LocalDate.now().minusMonths(1);
-            long timestamp = date.atStartOfDay(ZoneId.systemDefault()).toInstant().toEpochMilli();
+            LocalDateTime dateTime = LocalDateTime.now().minusDays(30);
+            long timestamp = dateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();
             this.doCleanupOrganization(timestamp);
         } catch (Exception e) {
             LogUtils.error("clean up organization error.", e);

File: backend/services/system-setting/src/main/java/io/metersphere/system/job/CleanProjectJob.java
Patch:
@@ -12,7 +12,7 @@
 import jakarta.annotation.Resource;
 import org.springframework.stereotype.Component;
 
-import java.time.LocalDate;
+import java.time.LocalDateTime;
 import java.time.ZoneId;
 import java.util.List;
 
@@ -28,8 +28,8 @@ public class CleanProjectJob {
     @QuartzScheduled(cron = "0 0 3 * * ?")
     public void cleanupProject() {
         LogUtils.info("clean up project start.");
-        LocalDate date = LocalDate.now().minusMonths(1);
-        long timestamp = date.atStartOfDay(ZoneId.systemDefault()).toInstant().toEpochMilli();
+        LocalDateTime dateTime = LocalDateTime.now().minusDays(30);
+        long timestamp = dateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();
         this.doCleanupProject(timestamp);
         LogUtils.info("clean up project end.");
     }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/SystemProjectControllerTests.java
Patch:
@@ -302,6 +302,8 @@ public void initData() {
             initProject.setUpdateTime(System.currentTimeMillis());
             initProject.setEnable(true);
             initProject.setModuleSetting("[\"apiTest\",\"uiTest\"]");
+            initProject.setDeleted(true);
+            initProject.setDeleteTime(System.currentTimeMillis());
             projectMapper.insertSelective(initProject);
             serviceInvoker.invokeCreateServices(initProject.getId());
         }

File: backend/services/api-test/src/main/java/io/metersphere/api/dto/request/controller/MsCommentScriptElement.java
Patch:
@@ -20,7 +20,7 @@ public class MsCommentScriptElement extends AbstractMsTestElement {
     private String script;
     /**
      * 脚本语言
-     * @see ScriptProcessor.ScriptLanguageType
+     * @see io.metersphere.project.constants.ScriptLanguageType
      */
     private String scriptLanguage;
     /**

File: backend/services/api-test/src/main/java/io/metersphere/api/parser/jmeter/JmeterTestElementParser.java
Patch:
@@ -105,7 +105,7 @@ public ThreadGroup getThreadGroup() {
     private DebugSampler getDebugSampler() {
         DebugSampler debugSampler = new DebugSampler();
         debugSampler.setEnabled(true);
-        debugSampler.setName("DebugSampler");
+        debugSampler.setName("RunningDebugSampler");
         debugSampler.setProperty(TestElement.TEST_CLASS, DebugSampler.class.getName());
         debugSampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
 

File: backend/services/api-test/src/main/java/io/metersphere/api/service/ApiExecuteService.java
Patch:
@@ -117,6 +117,7 @@ public void debug(ApiResourceRunRequest request) {
         TaskRequestDTO taskRequest = new TaskRequestDTO();
         BeanUtils.copyBean(taskRequest, request);
         taskRequest.setRealTime(true);
+        taskRequest.setSaveResult(false);
         taskRequest.setResourceId(testId);
         setServerInfoParam(taskRequest);
 
@@ -205,6 +206,7 @@ public String runScript(CustomFunctionRunRequest runRequest) {
         TaskRequestDTO taskRequest = new TaskRequestDTO();
         setServerInfoParam(taskRequest);
         taskRequest.setRealTime(true);
+        taskRequest.setSaveResult(false);
         taskRequest.setReportId(reportId);
         taskRequest.setResourceId(testId);
         taskRequest.setResourceType(ApiExecuteResourceType.API_DEBUG.name());

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -28,7 +28,6 @@ public class OperationLogModule {
     public static final String PROJECT_PROJECT_MANAGER = "PROJECT_PROJECT_MANAGER";
     public static final String PROJECT_FILE_MANAGEMENT = "PROJECT_MANAGEMENT_FILE_MANAGEMENT";
     public static final String PROJECT_TEMPLATE_MANAGEMENT = "PROJECT_TEMPLATE_MANAGEMENT";
-    public static final String PROJECT_PROJECT_MEMBER = "PROJECT_PROJECT_MEMBER";
     public static final String PERSONAL_INFORMATION_PERSONAL_SETTINGS = "PERSONAL_INFORMATION_PERSONAL_SETTINGS";
     public static final String PERSONAL_INFORMATION_APIKEYS = "PERSONAL_INFORMATION_APIKEYS";
     public static final String PERSONAL_INFORMATION_LOCAL_CONFIG = "PERSONAL_INFORMATION_LOCAL_CONFIG";
@@ -75,7 +74,7 @@ public class OperationLogModule {
     // 项目管理-项目与权限-成员
     public static final String PROJECT_MANAGEMENT_PERMISSION_MEMBER = "PROJECT_MANAGEMENT_PERMISSION_MEMBER";
     // 项目管理-项目与权限-用户组
-    public static final String PROJECT_MANAGEMENT_PERMISSION_USER_ROLE = "PROJECT_USER_GROUP";
+    public static final String PROJECT_MANAGEMENT_PERMISSION_USER_ROLE = "PROJECT_MANAGEMENT_PERMISSION_USER_GROUP";
     // 项目管理-环境
     public static final String PROJECT_MANAGEMENT_ENVIRONMENT = "PROJECT_MANAGEMENT_ENVIRONMENT";
     // 项目管理-环境组

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectRobotController.java
Patch:
@@ -41,14 +41,14 @@ public List<ProjectRobot> listResourcePools(@PathVariable(value = "projectId") S
     @Operation(summary = "项目管理-消息管理-新增机器人")
     @RequiresPermissions(PermissionConstants.PROJECT_MESSAGE_READ_ADD)
     @Log(type = OperationLogType.ADD, expression = "#msClass.addRobotLog(#projectRobotDTO)", msClass = MessageTaskLogService.class)
-    public void add(@Validated({Created.class}) @RequestBody ProjectRobotDTO projectRobotDTO) {
+    public ProjectRobot add(@Validated({Created.class}) @RequestBody ProjectRobotDTO projectRobotDTO) {
         ProjectRobot projectRobot = new ProjectRobot();
         BeanUtils.copyBean(projectRobot, projectRobotDTO);
         projectRobot.setCreateUser(SessionUtils.getUserId());
         projectRobot.setCreateTime(System.currentTimeMillis());
         projectRobot.setUpdateUser(SessionUtils.getUserId());
         projectRobot.setUpdateTime(System.currentTimeMillis());
-        projectRobotService.add(projectRobot);
+        return projectRobotService.add(projectRobot);
     }
 
     @PostMapping("update")

File: backend/services/project-management/src/main/java/io/metersphere/project/service/NoticeMessageTaskService.java
Patch:
@@ -99,13 +99,15 @@ public ResultHolder saveMessageTask(MessageTaskRequest messageTaskRequest, Strin
     private void deleteUserData(MessageTaskRequest messageTaskRequest, String projectId) {
         MessageTaskExample messageTaskExample = new MessageTaskExample();
         messageTaskExample.createCriteria().andReceiverNotIn(messageTaskRequest.getReceiverIds())
-                .andProjectIdEqualTo(projectId).andProjectRobotIdEqualTo(messageTaskRequest.getRobotId()).andTaskTypeEqualTo(messageTaskRequest.getTaskType()).andEventEqualTo(messageTaskRequest.getEvent());
+                .andProjectIdEqualTo(projectId).andTaskTypeEqualTo(messageTaskRequest.getTaskType()).andEventEqualTo(messageTaskRequest.getEvent());
         List<MessageTask> delData = messageTaskMapper.selectByExample(messageTaskExample);
         List<String> delIds = delData.stream().map(MessageTask::getId).toList();
         if (CollectionUtils.isNotEmpty(delIds)) {
             MessageTaskBlobExample messageTaskBlobExample = new MessageTaskBlobExample();
             messageTaskBlobExample.createCriteria().andIdIn(delIds);
             messageTaskBlobMapper.deleteByExample(messageTaskBlobExample);
+            messageTaskExample = new MessageTaskExample();
+            messageTaskExample.createCriteria().andIdIn(delIds);
             messageTaskMapper.deleteByExample(messageTaskExample);
         }
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/notice/sender/AfterReturningNoticeSendService.java
Patch:
@@ -31,6 +31,7 @@ public void sendNotice(String taskType, String event, List<Map> resources, Sessi
             Map paramMap = new HashMap<>();
             paramMap.put("url", baseSystemConfigDTO.getUrl());
             paramMap.put(NoticeConstants.RelatedUser.OPERATOR, sessionUser.getName());
+            paramMap.put("Language",sessionUser.getLanguage());
             paramMap.putAll(resource);
             paramMap.putIfAbsent("projectId", currentProjectId);
             //TODO: 加来源处理

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/AfterReturningNoticeSendServiceTests.java
Patch:
@@ -115,7 +115,7 @@ public void noticeSuccess() {
         userDTO.setId(sessionId);
         userDTO.setName("admin");
         SessionUser user = SessionUser.fromUser(userDTO, sessionId);
-
+        user.setLanguage("zh-CN");
         for (String event : eventList) {
             afterReturningNoticeSendService.sendNotice(functionalCaseTask, event,resources, user, "100001100001");
         }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserService.java
Patch:
@@ -204,10 +204,12 @@ private void checkOldPassword(String id, String password) {
         }
     }
 
-
     public UserEditRequest updateUser(UserEditRequest userEditRequest, String operator) {
         //检查用户组合法性
         globalUserRoleService.checkRoleIsGlobalAndHaveMember(userEditRequest.getUserRoleIdList(), true);
+        //检查用户邮箱的合法性
+        this.checkUserEmail(userEditRequest.getId(), userEditRequest.getEmail());
+
         User user = new User();
         BeanUtils.copyBean(user, userEditRequest);
         user.setUpdateUser(operator);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserRoleRelationService.java
Patch:
@@ -184,7 +184,7 @@ public Map<String, UserTableResponse> selectGlobalUserRoleAndOrganization(@Valid
                 userInfo.getUserRoleList().add(userRole);
             }
             Organization organization = organizationMap.get(userRoleRelation.getSourceId());
-            if (organization != null) {
+            if (organization != null && !userInfo.getOrganizationList().contains(organization)) {
                 userInfo.getOrganizationList().add(organization);
             }
         }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/user/UserControllerTests.java
Patch:
@@ -528,7 +528,7 @@ public void testUserChangeEnableError() throws Exception {
 
     @Test
     @Order(7)
-    public void testUserImportSuccess() throws Exception {
+    public void testUserImport() throws Exception {
         this.checkUserList();
         //测试用户数据导入。  每个导入文件都有10条数据，不同文件出错的数据不同。
         int importSuccessData = 10;//应该导入成功的数据数量

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/LicenseController.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.system.utils.SessionUtils;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.*;
@@ -30,6 +31,8 @@ public LicenseDTO validate() {
     @RequiresPermissions(value= {PermissionConstants.SYSTEM_AUTH_READ, PermissionConstants.SYSTEM_AUTH_READ_UPDATE}, logical = Logical.OR)
     public LicenseDTO addLicense(@RequestBody String licenseCode) {
         LicenseService licenseService = CommonBeanFactory.getBean(LicenseService.class);
+        // 前端传入的JSON会被加上双引号，需要去掉
+        licenseCode = StringUtils.strip(licenseCode, "\"");
         if (licenseService != null) {
             return licenseService.addLicense(licenseCode, SessionUtils.getUserId());
         }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -568,7 +568,9 @@ private void handleReviewCaseUsers(BatchEditReviewerRequest request, List<String
                     list.add(caseUser);
                 });
             });
-            caseReviewFunctionalCaseUserMapper.batchInsert(list);
+            if (CollectionUtils.isNotEmpty(list)) {
+                caseReviewFunctionalCaseUserMapper.batchInsert(list);
+            }
         } else {
             //更新评审人
             extCaseReviewFunctionalCaseUserMapper.deleteByCaseIds(caseIds, request.getReviewId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/log/constants/OperationLogModule.java
Patch:
@@ -92,9 +92,9 @@ public class OperationLogModule {
     public static final String PROJECT_CUSTOM_FUNCTION = "PROJECT_CUSTOM_FUNCTION";// 项目公共脚本
 
     //用例
-    public static final String FUNCTIONAL_CASE = "FUNCTIONAL_CASE";
+    public static final String FUNCTIONAL_CASE = "CASE_MANAGEMENT_CASE";
 
-    public static final String CASE_REVIEW = "CASE_REVIEW";
+    public static final String CASE_REVIEW = "CASE_MANAGEMENT_REVIEW";
 
 
     //接口调试

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtCaseReviewFunctionalCaseMapper.java
Patch:
@@ -1,12 +1,12 @@
 package io.metersphere.functional.mapper;
 
 import io.metersphere.functional.domain.CaseReviewFunctionalCase;
+import io.metersphere.functional.dto.FunctionalCaseModuleCountDTO;
 import io.metersphere.functional.dto.FunctionalCaseReviewDTO;
 import io.metersphere.functional.dto.ReviewFunctionalCaseDTO;
 import io.metersphere.functional.request.BaseReviewCaseBatchRequest;
 import io.metersphere.functional.request.FunctionalCaseReviewListRequest;
 import io.metersphere.functional.request.ReviewFunctionalCasePageRequest;
-import io.metersphere.project.dto.ModuleCountDTO;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -41,7 +41,8 @@ public interface ExtCaseReviewFunctionalCaseMapper {
 
     List<CaseReviewFunctionalCase> getCaseIdsByIds(@Param("ids") List<String> ids);
 
-    List<ModuleCountDTO> countModuleIdByRequest(@Param("request") ReviewFunctionalCasePageRequest request, @Param("deleted") boolean deleted, @Param("userId") String userId);
+    List<FunctionalCaseModuleCountDTO> countModuleIdByRequest(@Param("request") ReviewFunctionalCasePageRequest request, @Param("deleted") boolean deleted, @Param("userId") String userId);
 
     long caseCount(@Param("request") ReviewFunctionalCasePageRequest request, @Param("deleted") boolean deleted, @Param("userId") String userId);
+
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseModuleMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.functional.mapper;
 
+import io.metersphere.functional.dto.FunctionalCaseModuleDTO;
 import io.metersphere.project.dto.NodeSortQueryParam;
 import io.metersphere.request.AssociateCaseModuleRequest;
 import io.metersphere.system.dto.sdk.BaseModule;
@@ -11,7 +12,7 @@
 public interface ExtFunctionalCaseModuleMapper {
     List<BaseTreeNode> selectBaseByProjectId(@Param("projectId")String projectId);
 
-    List<String> selectBaseByProjectIdAndReviewId(@Param("projectId")String projectId, @Param("reviewId")String reviewId);
+    List<FunctionalCaseModuleDTO> selectBaseByProjectIdAndReviewId(@Param("reviewId")String reviewId);
 
     List<BaseTreeNode> selectBaseByIds(@Param("ids") List<String> ids);
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/sdk/BaseTreeNode.java
Patch:
@@ -59,6 +59,7 @@ public BaseTreeNode(String id, String name, String type, String parentId) {
     }
 
     public void addChild(BaseTreeNode node) {
+        node.setParentId(this.getId());
         children.add(node);
     }
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/constants/ApplicationNumScope.java
Patch:
@@ -20,5 +20,6 @@ public enum ApplicationNumScope {
 
     BUG_MANAGEMENT,
 
-    CASE_MANAGEMENT
+    CASE_MANAGEMENT,
+    REVIEW_CASE_MANAGEMENT
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseDemandController.java
Patch:
@@ -38,7 +38,7 @@ public class FunctionalCaseDemandController {
 
     @PostMapping("/page")
     @Operation(summary = "用例管理-功能用例-关联需求-获取已关联的需求列表")
-    @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ,PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ, PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
     public Pager<List<FunctionalDemandDTO>> listFunctionalCaseDemands(@Validated @RequestBody QueryDemandListRequest request) {
         Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), true);
         return PageUtils.setPageInfo(page, functionalCaseDemandService.listFunctionalCaseDemands(request));
@@ -74,7 +74,7 @@ public void batchRelevance(@RequestBody @Validated FunctionalCaseDemandRequest r
     }
 
     @PostMapping("/third/list/page")
-    @Operation(summary = "用例管理-功能用例-关联需求-批量关联需求")
+    @Operation(summary = "用例管理-功能用例-关联需求-获取三方需求列表")
     @RequiresPermissions(value = {PermissionConstants.FUNCTIONAL_CASE_READ_ADD, PermissionConstants.FUNCTIONAL_CASE_READ_UPDATE, PermissionConstants.FUNCTIONAL_CASE_READ_DELETE}, logical = Logical.OR)
     public PluginPager<PlatformDemandDTO> pageDemand(@RequestBody @Validated FunctionalThirdDemandPageRequest request) {
        return functionalCaseDemandService.pageDemand(request);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -405,7 +405,7 @@ public Long getCaseFunctionalCaseNextPos(String caseReviewId) {
      * @return num
      */
     public long getNextNum(String projectId) {
-        return NumGenerator.nextNum(projectId, ApplicationNumScope.CASE_MANAGEMENT);
+        return NumGenerator.nextNum(projectId, ApplicationNumScope.REVIEW_CASE_MANAGEMENT);
     }
 
     /**

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/FunctionalCaseDemandService.java
Patch:
@@ -217,9 +217,9 @@ public void batchRelevance(FunctionalCaseDemandRequest request, String userId) {
 
     public PluginPager<PlatformDemandDTO> pageDemand(FunctionalThirdDemandPageRequest request) {
         DemandPageRequest demandPageRequest = new DemandPageRequest();
-        demandPageRequest.setQuery(request.getQuery());
-        demandPageRequest.setFilter(request.getFilter());
-        demandPageRequest.setStartPage(request.getStartPage());
+        demandPageRequest.setQuery(request.getKeyword());
+        //demandPageRequest.setFilter(request.getFilter());
+        demandPageRequest.setStartPage(request.getCurrent());
         demandPageRequest.setPageSize(request.getPageSize());
         demandPageRequest.setProjectConfig(projectApplicationService.getProjectDemandThirdPartConfig(request.getProjectId()));
         Platform platform = projectApplicationService.getPlatform(request.getProjectId(), false);

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/FunctionalCaseDemandControllerTests.java
Patch:
@@ -303,6 +303,7 @@ public void getDemandList() throws Exception {
     @NotNull
     private static QueryDemandListRequest getQueryDemandListRequest(String caseId) {
         QueryDemandListRequest queryDemandListRequest = new QueryDemandListRequest();
+        queryDemandListRequest.setProjectId("project-case-demand-test");
         queryDemandListRequest.setCurrent(1);
         queryDemandListRequest.setPageSize(5);
         queryDemandListRequest.setCaseId(caseId);
@@ -481,7 +482,7 @@ public void pageDemandSuccess() throws Exception {
         FunctionalThirdDemandPageRequest functionalThirdDemandPageRequest = new FunctionalThirdDemandPageRequest();
         functionalThirdDemandPageRequest.setProjectId("gyq_project-case-demand-test");
         functionalThirdDemandPageRequest.setPageSize(10);
-        functionalThirdDemandPageRequest.setStartPage(1);
+        functionalThirdDemandPageRequest.setCurrent(1);
         MvcResult mvcResultDemand= this.requestPostWithOkAndReturn(URL_DEMAND_PAGE_DEMAND, functionalThirdDemandPageRequest);
         PluginPager<PlatformDemandDTO> tableData = JSON.parseObject(JSON.toJSONString(
                         JSON.parseObject(mvcResultDemand.getResponse().getContentAsString(StandardCharsets.UTF_8), ResultHolder.class).getData()),

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/ReviewFunctionalCaseDTO.java
Patch:
@@ -55,4 +55,7 @@ public class ReviewFunctionalCaseDTO implements Serializable {
     @Schema(description = "用例创建人")
     private String createUser;
 
+    @Schema(description = "用例创建人名称")
+    private String createUserName;
+
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/ReviewFunctionalCaseDTO.java
Patch:
@@ -52,4 +52,7 @@ public class ReviewFunctionalCaseDTO implements Serializable {
     @Schema(description = "编辑模式(用于脑图的查询)")
     private String caseEditType;
 
+    @Schema(description = "用例创建人")
+    private String createUser;
+
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/provider/CaseReviewCaseProvider.java
Patch:
@@ -224,7 +224,7 @@ private void updateCaseReviewByReviewFunctionalCase(Map<String, Object> paramMap
             Object mapCount = paramMap.get(CaseEvent.Param.COUNT_MAP);
             Map<String,Integer> map = JSON.parseMap(JSON.toJSONString(mapCount));
             updateMapCount(map, caseCountMap);
-            updateCaseReview(reviewId, caseReview.getCaseCount(), caseCountMap, paramMap.get(CaseEvent.Param.USER_ID).toString());
+            updateCaseReview(reviewId, caseReviewFunctionalCases.size()+caseIdList.size(), caseCountMap, paramMap.get(CaseEvent.Param.USER_ID).toString());
 
         } catch (Exception e) {
             LogUtils.error(CaseEvent.Event.REVIEW_FUNCTIONAL_CASE + "事件更新失败", e.getMessage());
@@ -350,7 +350,7 @@ private void updateCaseReview(String reviewId, int caseCount, Map<String, Intege
             caseReview.setPassRate(BigDecimal.ZERO);
         } else {
             BigDecimal passRate = passCount.divide(totalCount, 2, RoundingMode.HALF_UP);
-            caseReview.setPassRate(passRate);
+            caseReview.setPassRate(passRate.multiply(BigDecimal.valueOf(100)));
         }
         boolean completed = false;
         //1.如果都是未评审，则用例评审状态为未开始

File: backend/services/case-management/src/main/java/io/metersphere/functional/constants/CaseEvent.java
Patch:
@@ -14,10 +14,10 @@ interface Event {
     interface Param {
         String REVIEW_ID = "reviewId";
         String CASE_IDS = "caseIds";
-        String STATUS = "status";
         String USER_ID = "userId";
         String EVENT_NAME = "eventName";
         String COUNT_MAP = "countMap";
+        String STATUS_MAP = "statusMap";
     }
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/FunctionalCaseTrashController.java
Patch:
@@ -47,7 +47,7 @@ public Pager<List<FunctionalCasePageDTO>> getFunctionalCasePage(@Validated @Requ
     }
 
     @PostMapping("/module/count")
-    @Operation(summary = "用例管理-功能用例-回收站-表格分页查询文件")
+    @Operation(summary = "用例管理-功能用例-回收站-模块树统计用例数量")
     @RequiresPermissions(PermissionConstants.FUNCTIONAL_CASE_READ)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
     public Map<String, Long> moduleCount(@Validated @RequestBody FunctionalCasePageRequest request) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtFunctionalCaseModuleMapper.java
Patch:
@@ -31,5 +31,5 @@ public interface ExtFunctionalCaseModuleMapper {
 
     List<BaseTreeNode> selectApiScenarioModuleByRequest(@Param("request") AssociateCaseModuleRequest request);
 
-    List<BaseTreeNode> selectIdAndParentIdByProjectIdAndReviewId(@Param("projectId")String projectId, @Param("reviewId")String reviewId);
+    List<String> selectIdByProjectIdAndReviewId(@Param("projectId")String projectId, @Param("reviewId")String reviewId);
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -575,8 +575,9 @@ public Map<String, Long> getModuleCountMap(String projectId, String reviewId, Li
 
     public List<BaseTreeNode> getTreeOnlyIdsAndResourceCount(String projectId, String reviewId, List<ModuleCountDTO> moduleCountDTOList) {
         //节点内容只有Id和parentId
-        List<BaseTreeNode> fileModuleList = extFunctionalCaseModuleMapper.selectIdAndParentIdByProjectIdAndReviewId(projectId, reviewId);
-        return functionalCaseModuleService.buildTreeAndCountResource(fileModuleList, moduleCountDTOList, true, Translator.get("default.module"));
+        List<String> moduleIds = extFunctionalCaseModuleMapper.selectIdByProjectIdAndReviewId(projectId, reviewId);
+        List<BaseTreeNode> nodeByNodeIds = functionalCaseModuleService.getNodeByNodeIds(moduleIds);
+        return functionalCaseModuleService.buildTreeAndCountResource(nodeByNodeIds, moduleCountDTOList, true, Translator.get("default.module"));
     }
 
     public List<OptionDTO> getUserStatus(String reviewId, String caseId) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/NotificationController.java
Patch:
@@ -46,6 +46,7 @@ public Integer readAll() {
     }
 
     @PostMapping(value = "/count")
+    @Operation(summary = "消息中心-获取消息中心消息具体类型具体状态的数量")
     public Integer countNotification(@RequestBody Notification notification) {
         return notificationService.countNotification(notification, SessionUtils.getUserId());
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectCustomFieldService.java
Patch:
@@ -52,7 +52,7 @@ public CustomField update(CustomField customField, List<CustomFieldOptionRequest
         CustomField originCustomField = getWithCheck(customField.getId());
         if (originCustomField.getInternal()) {
             // 内置字段不能修改名字
-            originCustomField.setName(null);
+            customField.setName(null);
         }
         customField.setScopeId(originCustomField.getScopeId());
         Project project = projectService.checkResourceExist(originCustomField.getScopeId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationCustomFieldService.java
Patch:
@@ -83,7 +83,7 @@ public CustomField update(CustomField customField, List<CustomFieldOptionRequest
         CustomField originCustomField = getWithCheck(customField.getId());
         if (originCustomField.getInternal()) {
             // 内置字段不能修改名字
-            originCustomField.setName(null);
+            customField.setName(null);
         }
         checkOrganizationTemplateEnable(customField.getScopeId(), originCustomField.getScene());
         customField.setScopeId(originCustomField.getScopeId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/request/DefaultFunctionalCustomField.java
Patch:
@@ -14,10 +14,10 @@ public enum DefaultFunctionalCustomField {
 
     PRIORITY("functional_priority", CustomFieldType.SELECT,
             Arrays.asList(
+                    getNewOption("P0", "P0"),
                     getNewOption("P1", "P1"),
                     getNewOption("P2", "P2"),
-                    getNewOption("P3", "P3"),
-                    getNewOption("P4", "P4")
+                    getNewOption("P3", "P3")
             )
     );
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseCustomFieldService.java
Patch:
@@ -144,7 +144,7 @@ public CustomField update(CustomField customField, List<CustomFieldOptionRequest
         customField.setScopeId(null);
         customField.setScene(null);
         customField.setScopeType(null);
-        customField.setInternal(false);
+        customField.setInternal(null);
         customField.setCreateUser(null);
         customField.setCreateTime(null);
         customField.setType(null);

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/ReviewFunctionalCaseService.java
Patch:
@@ -152,6 +152,8 @@ private static CaseReviewHistory buildReviewHistory(ReviewFunctionalCaseRequest
         if (StringUtils.equalsIgnoreCase(request.getStatus(), FunctionalCaseReviewStatus.UN_PASS.toString())) {
             if (StringUtils.isBlank(request.getContent())) {
                 throw new MSException(Translator.get("case_review_content.not.exist"));
+            } else {
+                caseReviewHistory.setContent(request.getContent().getBytes());
             }
         } else {
             if (StringUtils.isNotBlank(request.getContent())) {

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtCaseReviewFunctionalCaseMapper.java
Patch:
@@ -36,7 +36,6 @@ public interface ExtCaseReviewFunctionalCaseMapper {
 
     List<CaseReviewFunctionalCase> getList(@Param("reviewId") String reviewId, @Param("reviewIds") List<String> reviewIds, @Param("deleted") boolean deleted);
 
-    List<CaseReviewFunctionalCase> getListIncludes(@Param("reviewId") String reviewId, @Param("caseIds") List<String> caseIds, @Param("deleted") boolean deleted);
 
     List<CaseReviewFunctionalCase> getListExcludes(@Param("reviewIds") List<String> reviewIds, @Param("caseIds") List<String> caseIds, @Param("deleted") boolean deleted);
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/request/BatchReviewFunctionalCaseRequest.java
Patch:
@@ -7,11 +7,11 @@
 @Data
 public class BatchReviewFunctionalCaseRequest extends BaseReviewCaseBatchRequest{
 
-    @Schema(description = "评审规则")
+    @Schema(description = "评审规则:单人评审(SINGLE)/多人评审(MULTIPLE)")
     @NotBlank(message = "{case_review.review_pass_rule.not_blank}")
     private String reviewPassRule;
 
-    @Schema(description = "评审结果")
+    @Schema(description = "评审结果:未评审(UN_REVIEWED)/评审中(UNDER_REVIEWED)/PASS(通过)/UN_PASS(未通过)/RE_REVIEWED(重新提审)")
     @NotBlank(message = "{functional_case.status.not_blank}")
     private String status;
 

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -478,8 +478,7 @@ public void associateCase(CaseReviewAssociateRequest request, String userId) {
         Map<String, Object> param = new HashMap<>();
         param.put(CaseEvent.Param.USER_ID, userId);
         param.put(CaseEvent.Param.REVIEW_ID, caseReviewId);
-        param.put(CaseEvent.Param.CASE_IDS, castIds);
-        param.put(CaseEvent.Param.CASE_COUNT, CollectionUtils.isNotEmpty(caseRealIds) ? caseRealIds.size() : 0);
+        param.put(CaseEvent.Param.CASE_IDS, caseRealIds);
         param.put(CaseEvent.Param.EVENT_NAME, CaseEvent.Event.ASSOCIATE);
         provider.updateCaseReview(param);
     }

File: backend/services/case-management/src/test/java/io/metersphere/functional/controller/CaseReviewControllerTests.java
Patch:
@@ -437,7 +437,7 @@ public void getPageSuccess() throws Exception {
 
         request = new CaseReviewPageRequest();
         filters = new HashMap<>();
-        filters.put("status", Arrays.asList("UNDERWAY", "COMPLETED", "ARCHIVED"));
+        filters.put("status", Arrays.asList("PREPARED", "COMPLETED", "ARCHIVED"));
         request.setFilter(filters);
         request.setCombine(caseReviewCombine);
         request.setProjectId(projectId);

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/UserPlatformAccountControllerTests.java
Patch:
@@ -34,7 +34,7 @@ public class UserPlatformAccountControllerTests extends BaseTest {
     private int mockServerHostPort;
     @Resource
     private MockServerClient mockServerClient;
-    private static final String VALIDATE_POST = "/user/platform/validate/{0}";
+    private static final String VALIDATE_POST = "/user/platform/validate/{0}/{1}";
     private static final String SAVE_POST = "/user/platform/save";
     public static <T> T parseObjectFromMvcResult(MvcResult mvcResult, Class<T> parseClass) {
         try {
@@ -78,7 +78,7 @@ public void validatePost() throws Exception {
         integrationConfig.setAddress(String.format("http://%s:%s", mockServerHost, mockServerHostPort));
         Map<String, Object> integrationConfigMap = JSON.parseMap(JSON.toJSONString(integrationConfig));
         // @@请求成功
-        this.requestPostWithOk(VALIDATE_POST, integrationConfigMap, plugin.getId());
+        this.requestPostWithOk(VALIDATE_POST, integrationConfigMap, plugin.getId(), "100001");
     }
 
     @Test

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseCommentDTO.java
Patch:
@@ -22,6 +22,6 @@ public class FunctionalCaseCommentDTO extends FunctionalCaseComment {
     private String userLogo;
 
     @Schema(description =  "该条评论下的所有回复数据")
-    private List<FunctionalCaseCommentDTO> replies;
+    private List<FunctionalCaseCommentDTO> childComments;
 
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/mapper/ExtCaseReviewFunctionalCaseMapper.java
Patch:
@@ -38,11 +38,11 @@ public interface ExtCaseReviewFunctionalCaseMapper {
 
     List<CaseReviewFunctionalCase> getListIncludes(@Param("reviewId") String reviewId, @Param("caseIds") List<String> caseIds, @Param("deleted") boolean deleted);
 
-    List<CaseReviewFunctionalCase> getListExcludes(@Param("reviewIds")List<String> reviewIds, @Param("caseIds") List<String> caseIds, @Param("deleted") boolean deleted);
+    List<CaseReviewFunctionalCase> getListExcludes(@Param("reviewIds") List<String> reviewIds, @Param("caseIds") List<String> caseIds, @Param("deleted") boolean deleted);
 
     List<CaseReviewFunctionalCase> getCaseIdsByIds(@Param("ids") List<String> ids);
 
-    List<ModuleCountDTO> countModuleIdByRequest(ReviewFunctionalCasePageRequest request, boolean deleted);
+    List<ModuleCountDTO> countModuleIdByRequest(@Param("request") ReviewFunctionalCasePageRequest request, @Param("deleted") boolean deleted, @Param("userId") String userId);
 
-    long caseCount(ReviewFunctionalCasePageRequest request, boolean deleted);
+    long caseCount(@Param("request") ReviewFunctionalCasePageRequest request, @Param("deleted") boolean deleted, @Param("userId") String userId);
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/provider/CaseReviewCaseProvider.java
Patch:
@@ -111,9 +111,9 @@ private void updateCaseReviewByDisAssociate(Map<String, Object> paramMap) {
             Object caseIds = paramMap.get(CaseEvent.Param.CASE_IDS);
             List<String> caseIdList = JSON.parseArray(JSON.toJSONString(caseIds), String.class);
             //获取与选中case无关的其他case
-            List<CaseReviewFunctionalCase> caseReviewFunctionalCases = extCaseReviewFunctionalCaseMapper.getListIncludes(reviewId, caseIdList, false);
+            List<CaseReviewFunctionalCase> caseReviewFunctionalCases = extCaseReviewFunctionalCaseMapper.getListExcludes(List.of(reviewId), caseIdList, false);
             List<CaseReviewFunctionalCase> passList = caseReviewFunctionalCases.stream().filter(t -> StringUtils.equalsIgnoreCase(t.getStatus(), FunctionalCaseReviewStatus.PASS.toString())).toList();
-            int caseCount = caseReviewFunctionalCases.size() - caseIdList.size();
+            int caseCount = caseReviewFunctionalCases.size();
             int passNumber = passList.size();
             List<CaseReviewFunctionalCase> unCompletedCaseList = getUnCompletedCaseList(caseReviewFunctionalCases, new ArrayList<>());
             updateCaseReview(reviewId, caseReview.getCaseCount() - caseCount, passNumber, unCompletedCaseList.size(), paramMap.get(CaseEvent.Param.USER_ID).toString());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewFunctionalCaseService.java
Patch:
@@ -536,13 +536,13 @@ public List<BaseTreeNode> getTree(String projectId, String reviewId) {
         return super.buildTreeAndCountResource(functionalModuleList, true, Translator.get("default.module"));
     }
 
-    public Map<String, Long> moduleCount(ReviewFunctionalCasePageRequest request, boolean deleted) {
+    public Map<String, Long> moduleCount(ReviewFunctionalCasePageRequest request, boolean deleted, String userId) {
         //查出每个模块节点下的资源数量。 不需要按照模块进行筛选
         request.setModuleIds(null);
-        List<ModuleCountDTO> moduleCountDTOList = extCaseReviewFunctionalCaseMapper.countModuleIdByRequest(request, deleted);
+        List<ModuleCountDTO> moduleCountDTOList = extCaseReviewFunctionalCaseMapper.countModuleIdByRequest(request, deleted, userId);
         Map<String, Long> moduleCountMap = getModuleCountMap(request.getProjectId(), request.getReviewId(), moduleCountDTOList);
         //查出全部用例数量
-        long allCount = extCaseReviewFunctionalCaseMapper.caseCount(request, deleted);
+        long allCount = extCaseReviewFunctionalCaseMapper.caseCount(request, deleted, userId);
         moduleCountMap.put(CASE_MODULE_COUNT_ALL, allCount);
         return moduleCountMap;
     }

File: backend/services/case-management/src/main/java/io/metersphere/functional/controller/CaseReviewController.java
Patch:
@@ -74,8 +74,8 @@ public String addCaseReview(@Validated @RequestBody CaseReviewRequest request) {
     @SendNotice(taskType = NoticeConstants.TaskType.CASE_REVIEW_TASK, event = NoticeConstants.Event.CREATE, target = "#targetClass.getMainCaseReview(#request)", targetClass = CaseReviewNoticeService.class)
     @RequiresPermissions(PermissionConstants.CASE_REVIEW_READ_ADD)
     @CheckOwner(resourceId = "#request.getProjectId()", resourceType = "project")
-    public void copyCaseReview(@Validated @RequestBody CaseReviewRequest request) {
-        caseReviewService.addCaseReview(request, SessionUtils.getUserId());
+    public String copyCaseReview(@Validated @RequestBody CaseReviewCopyRequest request) {
+        return caseReviewService.copyCaseReview(request, SessionUtils.getUserId());
     }
 
     @PostMapping("/edit")

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/CaseReviewUserDTO.java
Patch:
@@ -9,4 +9,7 @@ public class CaseReviewUserDTO extends CaseReviewUser {
 
     @Schema(description = "用户名")
     private String userName;
+
+    @Schema(description = "头像")
+    private String avatar;
 }

File: backend/services/case-management/src/main/java/io/metersphere/functional/dto/FunctionalCaseReviewDTO.java
Patch:
@@ -16,7 +16,7 @@ public class FunctionalCaseReviewDTO extends CaseReviewFunctionalCase {
     @NotBlank(message = "{case_review_functional_case.review_name.not_blank}")
     private String reviewName;
 
-    @Schema(description = "用例评审状态", requiredMode = Schema.RequiredMode.REQUIRED)
+    @Schema(description = "用例评审状态:未开始(PREPARED)/进行中(UNDERWAY)/已完成(COMPLETED)/已归档(ARCHIVED)", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{case_review_functional_case.review_status.not_blank}")
     private String reviewStatus;
 

File: backend/framework/domain/src/main/java/io/metersphere/functional/domain/CaseReview.java
Patch:
@@ -7,6 +7,7 @@
 import java.math.BigDecimal;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.List;
 import lombok.Data;
 
 @Data
@@ -63,7 +64,7 @@ public class CaseReview implements Serializable {
     private BigDecimal passRate;
 
     @Schema(description = "标签")
-    private String tags;
+    private java.util.List<String> tags;
 
     @Schema(description = "描述")
     private String description;

File: backend/framework/domain/src/main/java/io/metersphere/functional/domain/FunctionalCase.java
Patch:
@@ -6,6 +6,7 @@
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.List;
 import lombok.Data;
 
 @Data
@@ -44,7 +45,7 @@ public class FunctionalCase implements Serializable {
     private String reviewStatus;
 
     @Schema(description = "标签（JSON)")
-    private String tags;
+    private java.util.List<String> tags;
 
     @Schema(description = "编辑模式：步骤模式/文本模式", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{functional_case.case_edit_type.not_blank}", groups = {Created.class})

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewNoticeService.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.functional.mapper.CaseReviewMapper;
 import io.metersphere.functional.mapper.ExtCaseReviewMapper;
 import io.metersphere.functional.request.CaseReviewRequest;
-import io.metersphere.sdk.util.JSON;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -39,7 +38,7 @@ public CaseReview getMainCaseReview(CaseReviewRequest request){
             caseReview.setCreateUser(null);
         }
         if (CollectionUtils.isNotEmpty(request.getTags())) {
-            caseReview.setTags(JSON.toJSONString(request.getTags()));
+            caseReview.setTags(request.getTags());
         }
         caseReview.setStartTime(request.getStartTime());
         caseReview.setEndTime(request.getEndTime());

File: backend/services/case-management/src/main/java/io/metersphere/functional/service/CaseReviewService.java
Patch:
@@ -17,7 +17,6 @@
 import io.metersphere.sdk.constants.PermissionConstants;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.util.BeanUtils;
-import io.metersphere.sdk.util.JSON;
 import io.metersphere.system.domain.User;
 import io.metersphere.system.dto.sdk.request.PosRequest;
 import io.metersphere.system.mapper.ExtUserMapper;
@@ -261,7 +260,7 @@ public void editCaseReview(CaseReviewRequest request, String userId) {
         caseReview.setName(request.getName());
         caseReview.setModuleId(request.getModuleId());
         if (CollectionUtils.isNotEmpty(request.getTags())) {
-            caseReview.setTags(JSON.toJSONString(request.getTags()));
+            caseReview.setTags(request.getTags());
         }
         caseReview.setStartTime(request.getStartTime());
         caseReview.setEndTime(request.getEndTime());
@@ -333,7 +332,7 @@ private void addCaseReview(CaseReviewRequest request, String userId, String case
         caseReview.setReviewPassRule(request.getReviewPassRule());
         caseReview.setPos(getNextPos(request.getProjectId()));
         if (CollectionUtils.isNotEmpty(request.getTags())) {
-            caseReview.setTags(JSON.toJSONString(request.getTags()));
+            caseReview.setTags(request.getTags());
         }
         caseReview.setPassRate(BigDecimal.valueOf(0.00));
         if (CollectionUtils.isEmpty(caseIds)) {

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiTestCaseControllerTests.java
Patch:
@@ -667,7 +667,8 @@ public void batchEdit() throws Exception {
         request.setTags(new LinkedHashSet<>(List.of("tag1", "tag3", "tag4")));
         responsePost(BATCH_EDIT, request);
         ApiTestCaseExample example = new ApiTestCaseExample();
-        example.createCriteria().andProjectIdEqualTo(DEFAULT_PROJECT_ID).andDeletedEqualTo(false);
+        List<String> ids = extApiTestCaseMapper.getIds(request, false);
+        example.createCriteria().andProjectIdEqualTo(DEFAULT_PROJECT_ID).andDeletedEqualTo(false).andIdIn(ids);
         apiTestCaseMapper.selectByExample(example).forEach(apiTestCase -> {
             Assertions.assertTrue(apiTestCase.getTags().contains("tag1"));
             Assertions.assertTrue(apiTestCase.getTags().contains("tag3"));

File: backend/services/api-test/src/test/java/io/metersphere/api/controller/ApiDefinitionControllerTests.java
Patch:
@@ -345,7 +345,7 @@ private void uploadFileMetadata() throws Exception {
         FileUploadRequest fileUploadRequest = new FileUploadRequest();
         fileUploadRequest.setProjectId(DEFAULT_PROJECT_ID);
         //导入正常文件
-        MockMultipartFile file = new MockMultipartFile("file", "file_upload.JPG", MediaType.APPLICATION_OCTET_STREAM_VALUE, "aa".getBytes());
+        MockMultipartFile file = new MockMultipartFile("file", "file_update_upload.JPG", MediaType.APPLICATION_OCTET_STREAM_VALUE, "aa".getBytes());
         fileMetadataId = fileMetadataService.upload(fileUploadRequest, "admin", file);
     }
 
@@ -365,7 +365,7 @@ public static void assertUploadFile(String id, List<String> fileIds) throws Exce
             FileRequest fileRequest = new FileRequest();
             if (!fileIds.isEmpty()) {
                 for (ApiFileResource apiFileResource : apiFileResources) {
-                    Assertions.assertEquals(apiFileResource.getProjectId(), DEFAULT_PROJECT_ID);
+                    Assertions.assertEquals(DEFAULT_PROJECT_ID, apiFileResource.getProjectId());
                     fileRequest.setFolder(apiDefinitionDir + "/" + apiFileResource.getFileId());
                     fileRequest.setFileName(apiFileResource.getFileName());
                     Assertions.assertNotNull(FileCenter.getDefaultRepository().getFile(fileRequest));

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileMetadataService.java
Patch:
@@ -470,6 +470,7 @@ public Map<String, Long> moduleCount(FileMetadataTableRequest request, String op
         //查出全部文件和我的文件的数量
         FileManagementQuery myFileCountDTO = new FileManagementQuery();
         myFileCountDTO.setProjectId(request.getProjectId());
+        myFileCountDTO.setStorage(null);
         long allCount = extFileMetadataMapper.fileCount(myFileCountDTO);
         myFileCountDTO.setOperator(operator);
         long myFileCount = extFileMetadataMapper.fileCount(myFileCountDTO);

File: backend/services/project-management/src/main/java/io/metersphere/project/service/FileModuleService.java
Patch:
@@ -94,7 +94,7 @@ protected Long countPos(String parentId, String fileType) {
      */
     protected void checkDataValidity(FileModule fileModule) {
         FileModuleExample example = new FileModuleExample();
-        if (!StringUtils.equals(fileModule.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
+        if (!StringUtils.equalsIgnoreCase(fileModule.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
             //检查父ID是否存在
             example.createCriteria().andIdEqualTo(fileModule.getParentId());
             if (fileModuleMapper.countByExample(example) == 0) {

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ModuleTreeService.java
Patch:
@@ -59,7 +59,7 @@ public List<BaseTreeNode> buildTreeAndCountResource(List<BaseTreeNode> traverseL
         while (CollectionUtils.isNotEmpty(traverseList) && traverseList.size() != lastSize) {
             List<BaseTreeNode> notMatchedList = new ArrayList<>();
             for (BaseTreeNode treeNode : traverseList) {
-                if (StringUtils.equals(treeNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
+                if (StringUtils.equalsIgnoreCase(treeNode.getParentId(), ModuleConstants.ROOT_NODE_PARENT_ID)) {
                     BaseTreeNode node = new BaseTreeNode(treeNode.getId(), treeNode.getName(), treeNode.getType(), treeNode.getParentId());
                     baseTreeNodeList.add(node);
                     baseTreeNodeMap.put(treeNode.getId(), node);

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectStatusFlowSettingController.java
Patch:
@@ -55,7 +55,9 @@ public void updateStatusDefinition(@RequestBody StatusDefinitionUpdateRequest re
     @Operation(summary = "系统设置-组织-状态流设置-状态项排序")
     @RequiresPermissions(PermissionConstants.PROJECT_TEMPLATE_UPDATE)
     public void sortStatusItem(@PathVariable
-                               String projectId, @PathVariable String scene,
+                               String projectId,
+                               @PathVariable
+                               String scene,
                                @RequestBody
                                @NotEmpty
                                List<String> statusIds) {

File: backend/services/project-management/src/main/java/io/metersphere/project/service/ProjectStatusFlowSettingService.java
Patch:
@@ -115,7 +115,7 @@ public void updateStatusFlow(StatusFlowUpdateRequest request) {
 
     @Override
     public List<StatusItem> sortStatusItem(String projectId, String scene, List<String> statusIds) {
-        OrganizationService.checkResourceExist(projectId);
+        ProjectService.checkResourceExist(projectId);
         projectTemplateService.checkProjectTemplateEnable(projectId, scene);
         return super.sortStatusItem(projectId, scene, statusIds);
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/TemplateCustomFieldDTO.java
Patch:
@@ -19,6 +19,6 @@ public class TemplateCustomFieldDTO {
     private String apiFieldId;
 
     @Schema(title = "默认值")
-    private String defaultValue;
+    private Object defaultValue;
 
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/request/TemplateCustomFieldRequest.java
Patch:
@@ -22,5 +22,5 @@ public class TemplateCustomFieldRequest {
     private String apiFieldId;
 
     @Schema(title = "默认值")
-    private String defaultValue;
+    private Object defaultValue;
 }

File: backend/services/project-management/src/test/java/io/metersphere/project/controller/ProjectTemplateControllerTests.java
Patch:
@@ -350,7 +350,7 @@ public void get() throws Exception {
             Assertions.assertEquals(customFieldDTO.getApiFieldId(), templateCustomField.getApiFieldId());
             Assertions.assertEquals(customFieldDTO.getRequired(), templateCustomField.getRequired());
             Assertions.assertEquals(templateCustomField.getTemplateId(), template.getId());
-            Assertions.assertEquals(customFieldDTO.getFieldName(), "优先级");
+            Assertions.assertEquals(customFieldDTO.getFieldName(), "用例等级");
         }
 
         // @@校验权限

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/handler/result/CommonResultCode.java
Patch:
@@ -26,7 +26,8 @@ public enum CommonResultCode implements IResultCode {
     TEMPLATE_EXIST(100013, "template.exist"),
     DEFAULT_TEMPLATE_PERMISSION(100014, "default_template_permission_error"),
     STATUS_ITEM_NOT_EXIST(100015, "status_item.not.exist"),
-    STATUS_ITEM_EXIST(100016, "status_item.exist");
+    STATUS_ITEM_EXIST(100016, "status_item.exist"),
+    FIELD_VALIDATE_ERROR(100017, "field_validate_error");
 
 
     private int code;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -97,7 +97,7 @@ public Pager<List<UserTableResponse>> list(@Validated @RequestBody BasePageReque
     @RequiresPermissions(PermissionConstants.SYSTEM_USER_UPDATE)
     @Log(type = OperationLogType.UPDATE, expression = "#msClass.batchUpdateEnableLog(#request)", msClass = UserLogService.class)
     public TableBatchProcessResponse updateUserEnable(@Validated @RequestBody UserChangeEnableRequest request) {
-        return userService.updateUserEnable(request, SessionUtils.getSessionId());
+        return userService.updateUserEnable(request, SessionUtils.getUserId(), SessionUtils.getUser().getName());
     }
 
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})

File: backend/framework/domain/src/main/java/io/metersphere/bug/mapper/BugMapper.java
Patch:
@@ -2,9 +2,10 @@
 
 import io.metersphere.bug.domain.Bug;
 import io.metersphere.bug.domain.BugExample;
-import java.util.List;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.List;
+
 public interface BugMapper {
     long countByExample(BugExample example);
 

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectCustomFieldController.java
Patch:
@@ -39,7 +39,7 @@ public class ProjectCustomFieldController {
     @RequiresPermissions(PermissionConstants.PROJECT_CUSTOM_FIELD_READ)
     public List<CustomField> list(@Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)
                                   @PathVariable String projectId,
-                                  @Schema(description = "模板的使用场景（FUNCTIONAL,ISSUE,API,UI）", requiredMode = Schema.RequiredMode.REQUIRED)
+                                  @Schema(description = "模板的使用场景（FUNCTIONAL,BUG,API,UI）", requiredMode = Schema.RequiredMode.REQUIRED)
                                   @PathVariable String scene) {
         return projectCustomFieldService.list(projectId, scene);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectTemplateController.java
Patch:
@@ -39,7 +39,7 @@ public class ProjectTemplateController {
     @RequiresPermissions(PermissionConstants.PROJECT_TEMPLATE_READ)
     public List<Template> list(@Schema(description = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)
                                @PathVariable String projectId,
-                               @Schema(description = "模板的使用场景（FUNCTIONAL,ISSUE,API,UI）", requiredMode = Schema.RequiredMode.REQUIRED)
+                               @Schema(description = "模板的使用场景（FUNCTIONAL,BUG,API,UI）", requiredMode = Schema.RequiredMode.REQUIRED)
                                @PathVariable String scene) {
         return projectTemplateservice.list(projectId, scene);
     }

File: backend/services/project-management/src/main/java/io/metersphere/project/dto/ModuleDTO.java
Patch:
@@ -10,7 +10,7 @@ public class ModuleDTO implements Serializable {
 
     private static final long serialVersionUID = 1L;
 
-    @Schema(description = "模块", allowableValues = {"WORKSTATION", "TEST_PLAN", "UI", "PERFORMANCE_TEST", "API", "CASE", "ISSUE"})
+    @Schema(description = "模块", allowableValues = {"WORKSTATION", "TEST_PLAN", "UI", "PERFORMANCE_TEST", "API", "CASE", "BUG"})
     private String module;
 
     @Schema(description = "是否启用", allowableValues = {"true", "false"})

File: backend/services/project-management/src/main/java/io/metersphere/project/request/ProjectApplicationRequest.java
Patch:
@@ -21,6 +21,6 @@ public class ProjectApplicationRequest implements Serializable {
     @NotBlank(message = "{project_application.project_id.not_blank}")
     private String projectId;
 
-    @Schema(description = "配置类型列表", allowableValues = {"WORKSTATION", "TEST_PLAN", "UI", "PERFORMANCE_TEST", "API", "CASE", "ISSUE"}, requiredMode = Schema.RequiredMode.REQUIRED)
+    @Schema(description = "配置类型列表", allowableValues = {"WORKSTATION", "TEST_PLAN", "UI", "PERFORMANCE_TEST", "API", "CASE", "BUG"}, requiredMode = Schema.RequiredMode.REQUIRED)
     private String type;
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseTemplateService.java
Patch:
@@ -303,7 +303,7 @@ public void initFunctionalDefaultTemplate(String scopeId, TemplateScopeType scop
      * @param scopeId
      * @param scopeType
      */
-    public void initIssueDefaultTemplate(String scopeId, TemplateScopeType scopeType) {
+    public void initBugDefaultTemplate(String scopeId, TemplateScopeType scopeType) {
         this.initDefaultTemplate(scopeId, "bug_default", scopeType, TemplateScene.BUG);
     }
     public void initApiDefaultTemplate(String scopeId, TemplateScopeType scopeType) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CreateTemplateResourceService.java
Patch:
@@ -62,7 +62,7 @@ private void initProjectTemplate(String projectId, TemplateScene scene) {
                 baseTemplateService.initFunctionalDefaultTemplate(projectId, TemplateScopeType.PROJECT);
                 break;
             case BUG:
-                baseTemplateService.initIssueDefaultTemplate(projectId, TemplateScopeType.PROJECT);
+                baseTemplateService.initBugDefaultTemplate(projectId, TemplateScopeType.PROJECT);
                 break;
             case API:
                 baseTemplateService.initApiDefaultTemplate(projectId, TemplateScopeType.PROJECT);

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationTemplateService.java
Patch:
@@ -32,8 +32,6 @@ public class OrganizationTemplateService extends BaseTemplateService {
     @Resource
     private BaseProjectMapper baseProjectMapper;
     @Resource
-    private BaseCustomFieldService baseCustomFieldService;
-    @Resource
     protected ExtOrganizationTemplateMapper extOrganizationTemplateMapper;
     @Resource
     protected BaseOrganizationParameterService baseOrganizationParameterService;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PluginLoadService.java
Patch:
@@ -156,7 +156,7 @@ public synchronized void loadPlugins() {
             try {
                 loadPlugin(fileName);
                 msPluginManager.startPlugin(plugin.getId());
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 LogUtils.error("初始化插件异常" + plugin.getFileName(), e);
             }
         });

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/BaseUserService.java
Patch:
@@ -265,6 +265,7 @@ public void switchUserResource(String sign, String sourceId, UserDTO sessionUser
         if (StringUtils.equals("organization", sign)) {
             user.setLastOrganizationId(sourceId);
             sessionUser.setLastOrganizationId(sourceId);
+            user.setLastProjectId(StringUtils.EMPTY);
             List<Project> projects = getProjectListByWsAndUserId(sessionUser.getId(), sourceId);
             if (CollectionUtils.isNotEmpty(projects)) {
                 user.setLastProjectId(projects.get(0).getId());
@@ -276,8 +277,6 @@ public void switchUserResource(String sign, String sourceId, UserDTO sessionUser
                     if (CollectionUtils.isNotEmpty(allWsProject)) {
                         user.setLastProjectId(allWsProject.get(0).getId());
                     }
-                } else {
-                    user.setLastProjectId(StringUtils.EMPTY);
                 }
             }
         }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/util/PageUtils.java
Patch:
@@ -7,7 +7,7 @@ public static <T> Pager<T> setPageInfo(Page page, T list) {
         try {
             Pager<T> pager = new Pager<>();
             pager.setList(list);
-            pager.setPageSize(page.getPages());
+            pager.setPageSize(page.getPageSize());
             pager.setCurrent(page.getPageNum());
             pager.setTotal(page.getTotal());
             return pager;

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -189,7 +189,7 @@ public UserInviteResponse invite(@Validated @RequestBody UserInviteRequest reque
 
     @PostMapping("/register-by-invite")
     @Operation(summary = "系统设置-系统-用户-用户邀请")
-    public String registerByInvite(@Validated @RequestBody UserRegisterRequest request) {
+    public String registerByInvite(@Validated @RequestBody UserRegisterRequest request) throws Exception {
         return userService.registerByInvite(request);
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/UserService.java
Patch:
@@ -304,7 +304,7 @@ private int deleteUserByList(List<String> updateUserList, String operator) {
     }
 
     public List<User> getUserList(String keyword) {
-        return extUserMapper.selectUserList(keyword.trim());
+        return extUserMapper.selectUserList(keyword);
     }
 
     /**

File: backend/services/project-management/src/main/java/io/metersphere/project/controller/ProjectMemberController.java
Patch:
@@ -83,7 +83,7 @@ public void updateMember(@RequestBody ProjectMemberEditRequest request) {
     })
     @RequiresPermissions(PermissionConstants.PROJECT_MEMBER_DELETE)
     public void removeMember(@PathVariable String projectId, @PathVariable String userId) {
-        projectMemberService.removeMember(projectId, userId);
+        projectMemberService.removeMember(projectId, userId, SessionUtils.getUserId());
     }
 
     @PostMapping("/add-role")
@@ -97,6 +97,6 @@ public void addMemberRole(@RequestBody ProjectMemberAddRequest request) {
     @Operation(summary = "项目管理-成员-批量从项目移除")
     @RequiresPermissions(PermissionConstants.PROJECT_MEMBER_DELETE)
     public void batchRemove(@RequestBody ProjectMemberBatchDeleteRequest request) {
-        projectMemberService.batchRemove(request);
+        projectMemberService.batchRemove(request, SessionUtils.getUserId());
     }
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/ServiceIntegrationLogService.java
Patch:
@@ -60,9 +60,6 @@ public LogDTO updateLog(ServiceIntegrationUpdateRequest request) {
 
     public LogDTO deleteLog(String id) {
         ServiceIntegration serviceIntegration = serviceIntegrationService.get(id);
-        if (serviceIntegration == null) {
-            return null;
-        }
         LogDTO dto = new LogDTO(
                 OperationLogConstants.ORGANIZATION,
                 null,

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/CommonProjectService.java
Patch:
@@ -371,7 +371,7 @@ public void addProjectMember(ProjectAddMemberBatchRequest request, String create
                     memberRole.setCreateUser(createUser);
                     memberRole.setOrganizationId(project.getOrganizationId());
                     userRoleRelations.add(memberRole);
-                    LogDTO logDTO = new LogDTO(projectId, project.getOrganizationId(), memberRole.getId(), createUser, type, module, content + Translator.get("project_member") + ": " + userMap.get(userId));
+                    LogDTO logDTO = new LogDTO(OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM, memberRole.getId(), createUser, type, module, content + Translator.get("project_member") + ": " + userMap.get(userId));
                     setLog(logDTO, path, HttpMethodConstants.POST.name(), logDTOList);
                 }
             });
@@ -400,7 +400,7 @@ public int removeProjectMember(String projectId, String userId, String createUse
         }
         List<LogDTO> logDTOList = new ArrayList<>();
         userRoleRelationMapper.selectByExample(userRoleRelationExample).forEach(userRoleRelation -> {
-            LogDTO logDTO = new LogDTO(projectId, projectMapper.selectByPrimaryKey(projectId).getOrganizationId(), userRoleRelation.getId(), createUser, OperationLogType.DELETE.name(), module, Translator.get("delete") + Translator.get("project_member") + ": " + user.getName());
+            LogDTO logDTO = new LogDTO(OperationLogConstants.SYSTEM, OperationLogConstants.SYSTEM, userRoleRelation.getId(), createUser, OperationLogType.DELETE.name(), module, Translator.get("delete") + Translator.get("project_member") + ": " + user.getName());
             setLog(logDTO, path, HttpMethodConstants.GET.name(), logDTOList);
         });
         operationLogService.batchAdd(logDTOList);

File: backend/services/system-setting/src/main/java/io/metersphere/system/request/OrganizationUserRoleMemberRequest.java
Patch:
@@ -20,7 +20,4 @@ public class OrganizationUserRoleMemberRequest extends BasePageRequest {
     @NotBlank(message = "{organization.id.not_blank}")
     @Size(min = 1, max = 50, message = "{organization.id.length_range}")
     private String organizationId;
-
-    @Schema(description =  "搜索关键字")
-    private String userKeyWord;
 }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationUserRoleControllerTests.java
Patch:
@@ -242,7 +242,7 @@ public void testOrganizationUserRoleListMemberSuccess() throws Exception {
         OrganizationUserRoleMemberRequest request = new OrganizationUserRoleMemberRequest();
         request.setOrganizationId("default-organization-2");
         request.setUserRoleId("default-org-role-id-3");
-        request.setUserKeyWord("admin");
+        request.setKeyword("admin");
         request.setCurrent(1);
         request.setPageSize(10);
         MvcResult mvcResult = this.responsePost(ORGANIZATION_USER_ROLE_LIST_MEMBER, request);
@@ -262,8 +262,8 @@ public void testOrganizationUserRoleListMemberSuccess() throws Exception {
         List<User> userList = JSON.parseArray(JSON.toJSONString(pageData.getList()), User.class);
         if(CollectionUtils.isNotEmpty(userList)) {
             User user = userList.get(0);
-            Assertions.assertTrue(StringUtils.contains(user.getName(), request.getUserKeyWord())
-                    || StringUtils.contains(user.getId(), request.getUserKeyWord()));
+            Assertions.assertTrue(StringUtils.contains(user.getName(), request.getKeyword())
+                    || StringUtils.contains(user.getId(), request.getKeyword()));
         }
         // 权限校验
         request.setOrganizationId(getDefault().getId());

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationService.java
Patch:
@@ -675,9 +675,11 @@ public List<IdNameStructureDTO> getUserList(String organizationId) {
         List<UserRoleRelation> userRoleRelations = userRoleRelationMapper.selectByExample(userRoleRelationExample);
         List<String> userIds = userRoleRelations.stream().map(UserRoleRelation::getUserId).distinct().toList();
         UserExample userExample = new UserExample();
+        UserExample.Criteria criteria = userExample.createCriteria();
         if (CollectionUtils.isNotEmpty(userIds)) {
-            userExample.createCriteria().andIdNotIn(userIds);
+            criteria.andIdNotIn(userIds);
         }
+        criteria.andDeletedEqualTo(false);
         List<User> users = userMapper.selectByExample(userExample);
         List<IdNameStructureDTO> userList = new ArrayList<>();
         for (User user : users) {

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationProjectController.java
Patch:
@@ -21,7 +21,6 @@
 import io.metersphere.system.request.ProjectMemberRequest;
 import io.metersphere.system.service.OrganizationProjectLogService;
 import io.metersphere.system.service.OrganizationProjectService;
-import io.metersphere.system.service.UserService;
 import io.metersphere.validation.groups.Created;
 import io.metersphere.validation.groups.Updated;
 import io.swagger.v3.oas.annotations.Operation;
@@ -43,8 +42,6 @@
 public class OrganizationProjectController {
     @Resource
     private OrganizationProjectService organizationProjectService;
-    @Resource
-    private UserService userService;
 
     @PostMapping("/add")
     @RequiresPermissions(PermissionConstants.ORGANIZATION_PROJECT_READ_ADD)

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/SystemOrganizationController.java
Patch:
@@ -67,8 +67,7 @@ public List<OptionDTO> listAll() {
     @Operation(summary = "获取组织成员")
     @RequiresPermissions(value = {PermissionConstants.SYSTEM_ORGANIZATION_PROJECT_READ, PermissionConstants.SYSTEM_USER_READ})
     public Pager<List<UserExtend>> listMember(@Validated @RequestBody OrganizationRequest request) {
-        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(),
-                StringUtils.isNotBlank(request.getSortString()) ? request.getSortString() : "create_time desc");
+        Page<Object> page = PageHelper.startPage(request.getCurrent(), request.getPageSize(), true);
         return PageUtils.setPageInfo(page, organizationService.getMemberListBySystem(request));
     }
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/PluginLogService.java
Patch:
@@ -29,7 +29,7 @@ public LogDTO addLog(PluginUpdateRequest request) {
                 null,
                 null,
                 OperationLogType.ADD.name(),
-                OperationLogModule.SYSTEM_PLUGIN,
+                OperationLogModule.SETTING_SYSTEM_PLUGIN_MANAGEMENT,
                 request.getName());
         dto.setOriginalValue(JSON.toJSONBytes(request));
         return dto;
@@ -43,7 +43,7 @@ public LogDTO updateLog(PluginUpdateRequest request) {
                 plugin.getId(),
                 null,
                 OperationLogType.UPDATE.name(),
-                OperationLogModule.SYSTEM_PLUGIN,
+                OperationLogModule.SETTING_SYSTEM_PLUGIN_MANAGEMENT,
                 plugin.getName());
         dto.setOriginalValue(JSON.toJSONBytes(plugin));
         return dto;
@@ -60,7 +60,7 @@ public LogDTO deleteLog(String id) {
                 plugin.getId(),
                 null,
                 OperationLogType.DELETE.name(),
-                OperationLogModule.SYSTEM_PLUGIN,
+                OperationLogModule.SETTING_SYSTEM_PLUGIN_MANAGEMENT,
                 plugin.getName());
         dto.setOriginalValue(JSON.toJSONBytes(plugin));
         return dto;

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/GlobalUserRoleRelationControllerTests.java
Patch:
@@ -122,7 +122,7 @@ void add() throws Exception {
         addUserRoleRelation = userRoleRelations.get(0);
 
         // @@校验日志
-        checkLog(addUserRoleRelation.getRoleId(), OperationLogType.ADD);
+        checkLog(addUserRoleRelation.getRoleId(), OperationLogType.UPDATE);
 
         // @@重复添加校验
         request.setUserIds(Arrays.asList(ADMIN.getValue()));
@@ -182,7 +182,7 @@ void delete() throws Exception {
         Assertions.assertNull(userRoleRelation);
 
         // @@校验日志
-        checkLog(addUserRoleRelation.getRoleId(), OperationLogType.DELETE);
+        checkLog(addUserRoleRelation.getRoleId(), OperationLogType.UPDATE);
 
         // @@操作非系统级别用户组异常
         assertErrorCode(this.requestGet(DEFAULT_DELETE, getNonSystemUserRoleRelation().getId()),

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -33,5 +33,7 @@ public interface BaseUserMapper {
 
     List<ExcludeOptionDTO> getExcludeSelectOption();
 
-    List<OptionDTO> getSelectOptionByIds(List<String> ids);
+    List<OptionDTO> getSelectOptionByIdsWithDeleted(List<String> ids);
+
+    List<OptionDTO> getSelectOptionWithDeleted();
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -33,4 +33,5 @@ public interface BaseUserMapper {
 
     List<ExcludeOptionDTO> getExcludeSelectOption();
 
+    List<OptionDTO> getSelectOptionByIds(List<String> ids);
 }

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationUserRoleService.java
Patch:
@@ -59,6 +59,7 @@ public List<UserRole> list(String organizationId) {
     @Override
     public UserRole add(UserRole userRole) {
         userRole.setInternal(false);
+        userRole.setType(ORGANIZATION_ROLE_TYPE);
         checkNewRoleExist(userRole);
         return super.add(userRole);
     }
@@ -69,6 +70,7 @@ public UserRole update(UserRole userRole) {
         // 非组织用户组不允许修改, 内置用户组不允许修改
         checkOrgUserRole(oldRole);
         checkInternalUserRole(oldRole);
+        userRole.setType(ORGANIZATION_ROLE_TYPE);
         checkNewRoleExist(userRole);
         return super.update(userRole);
     }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.List;
 
 public interface BaseUserMapper {
-    UserDTO selectByEmail(String email);
+    UserDTO selectDTOByKeyword(String keyword);
 
     UserDTO selectById(String id);
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/mapper/ExtUserRoleRelationMapper.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.List;
 
 public interface ExtUserRoleRelationMapper {
-    List<UserRoleRelation> listByUserIdAndScope(@Param("userIds") List<String> userIdList);
+    List<UserRoleRelation> selectGlobalRoleByUserIdList(@Param("userIds") List<String> userIdList);
 
     List<UserRoleRelation> selectGlobalRoleByUserId(String userId);
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/GlobalUserRoleRelationLogService.java
Patch:
@@ -34,6 +34,8 @@ public class GlobalUserRoleRelationLogService {
     private BaseUserMapper baseUserMapper;
     @Resource
     private UserRoleMapper userRoleMapper;
+    @Resource
+    private UserService userService;
 
     /**
      * 添加接口日志
@@ -62,7 +64,7 @@ public List<LogDTO> batchAddLog(UserRoleBatchRelationRequest request) {
         UserRoleExample example = new UserRoleExample();
         example.createCriteria().andIdIn(request.getRoleIds());
         List<UserRole> userRoles = userRoleMapper.selectByExample(example);
-        List<String> userIds = request.getSelectIds();
+        List<String> userIds = userService.getBatchUserIds(request);
         List<OptionDTO> users = baseUserMapper.selectUserOptionByIds(userIds);
 
         List<LogDTO> returnList = new ArrayList<>();

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationService.java
Patch:
@@ -191,7 +191,6 @@ public void addMemberBySystem(OrganizationMemberBatchRequest batchRequest, Strin
             userRoleRelationMapper.batchInsert(userRoleRelations);
         }
     }
-
     /**
      * 删除组织成员
      *

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/OptionDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.sdk.dto;
 
+import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -8,6 +9,8 @@
 @AllArgsConstructor
 @NoArgsConstructor
 public class OptionDTO {
+    @Schema(description =  "选项ID")
     private String id;
+    @Schema(description =  "选项名称")
     private String name;
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.sdk.mapper;
 
+import io.metersphere.sdk.dto.ExcludeOptionDTO;
 import io.metersphere.sdk.dto.OptionDTO;
 import io.metersphere.sdk.dto.UserDTO;
 import io.metersphere.system.domain.User;
@@ -28,4 +29,6 @@ public interface BaseUserMapper {
 
     long deleteUser(String id, String deleteUser, long deleteTime);
     List<OptionDTO> selectUserOptionByIds(List<String> userIds);
+
+    List<ExcludeOptionDTO> getExcludeSelectOption();
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/service/BaseUserRoleService.java
Patch:
@@ -199,7 +199,7 @@ public String getLogDetails(String id) {
     public void checkOneLimitRole(String roleId, String defaultRoleId, String currentUserId) {
 
         // 查询要删除的用户组关联的用户ID
-        List<String> userIds = baseUserRoleRelationService.getUserIdRoleId(roleId);
+        List<String> userIds = baseUserRoleRelationService.getUserIdByRoleId(roleId);
 
         if (CollectionUtils.isEmpty(userIds)) {
            return;

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/GlobalUserRoleRelationService.java
Patch:
@@ -40,10 +40,11 @@ public class GlobalUserRoleRelationService extends BaseUserRoleRelationService {
     private UserService userService;
 
     public List<UserRoleRelationUserDTO> list(GlobalUserRoleRelationQueryRequest request) {
+        List<UserRoleRelationUserDTO> userRoleRelationUserDTOS = extUserRoleRelationMapper.listGlobal(request);
         UserRole userRole = globalUserRoleService.get(request.getRoleId());
         globalUserRoleService.checkSystemUserGroup(userRole);
         globalUserRoleService.checkGlobalUserRole(userRole);
-        return extUserRoleRelationMapper.listGlobal(request);
+        return userRoleRelationUserDTOS;
     }
 
     //校验用户组

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/service/NodeResourcePoolService.java
Patch:
@@ -50,7 +50,7 @@ public boolean validate(TestResourceDTO testResourceDTO, Boolean usedApiType) {
             }
             if (!usedApiType) {
                 if (StringUtils.isBlank(testResourceNodeDTO.getMonitor())) {
-                    throw new MSException(Translator.get("monitor_number_is_null"));
+                    throw new MSException(Translator.get("monitor_is_null"));
                 }
             }
             isValid = validateNode(testResourceNodeDTO);

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -28,9 +28,9 @@
 import java.util.List;
 
 /**
- * @author song-cc-rock
+ * @author guoyuqi
  */
-@Tag(name = "组织")
+@Tag(name = "组织-成员")
 @RestController
 @RequestMapping("/organization")
 public class OrganizationController {

File: backend/services/system-setting/src/main/java/io/metersphere/system/service/OrganizationService.java
Patch:
@@ -585,7 +585,7 @@ private void updateUserRoleRelation(String createUserId, String organizationId,
         List<String> userRoleInDBInOrgIds = userRoleMap.values().stream().map(UserRole::getId).collect(Collectors.toList());
         //删除旧的关系
         UserRoleRelationExample userRoleRelationExample = new UserRoleRelationExample();
-        userRoleRelationExample.createCriteria().andUserIdEqualTo(memberId).andRoleIdIn(userRoleInDBInOrgIds);
+        userRoleRelationExample.createCriteria().andUserIdEqualTo(memberId).andSourceIdEqualTo(organizationId);
         userRoleRelationMapper.deleteByExample(userRoleRelationExample);
         UserRoleRelationMapper userRoleRelationMapper = sqlSession.getMapper(UserRoleRelationMapper.class);
         userRoleInDBInOrgIds.forEach(userRoleId -> {

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -18,6 +18,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.annotation.Resource;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
@@ -39,7 +40,7 @@ public class OrganizationController {
 
     @PostMapping("/member/list")
     @Operation(summary = "组织级别获取组织成员")
-    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_READ, PermissionConstants.SYSTEM_USER_READ})
+    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_READ, PermissionConstants.SYSTEM_USER_READ}, logical = Logical.OR)
     public Pager<List<OrgUserExtend>> getMemberList(@Validated @RequestBody OrganizationRequest organizationRequest) {
         Page<Object> page = PageHelper.startPage(organizationRequest.getCurrent(), organizationRequest.getPageSize());
         return PageUtils.setPageInfo(page, organizationService.getMemberListByOrg(organizationRequest));
@@ -61,7 +62,7 @@ public void addMemberRole(@Validated @RequestBody OrganizationMemberExtendReques
 
     @PostMapping("/update-member")
     @Operation(summary = "更新用户")
-    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD,  PermissionConstants.PROJECT_USER_READ_DELETE})
+    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD, PermissionConstants.PROJECT_USER_READ_DELETE}, logical = Logical.OR)
     public void updateMember(@Validated @RequestBody OrganizationMemberUpdateRequest organizationMemberExtendRequest) {
         organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/OrganizationControllerTests.java
Patch:
@@ -226,7 +226,7 @@ public void addOrgMemberToProjectSuccess() throws Exception {
         organizationMemberRequest.setProjectIds(Arrays.asList("sys_org_projectId2", "sys_org_projectId3"));
         this.requestPost(ORGANIZATION_PROJECT_ADD_MEMBER, organizationMemberRequest, status().isOk());
         // 批量添加成员成功后, 验证是否添加成功
-        listByKeyWord("testUserOne", "sys_default_organization_3", true, InternalUserRole.PROJECT_MEMBER.getValue(), "sys_org_projectId2", false, null, null);
+        listByKeyWord("testUserOne", "sys_default_organization_3", false, InternalUserRole.PROJECT_MEMBER.getValue(), "sys_org_projectId2", false, null, null);
     }
 
     @Test
@@ -491,8 +491,6 @@ private void listByKeyWord(String keyWord, String orgId, boolean compare, String
             Assertions.assertNotNull(orgUserExtend.getUserRoleIdNameMap());
             List<String> userRoleIds = orgUserExtend.getUserRoleIdNameMap().stream().map(IdNameStructureDTO::getId).toList();
             Assertions.assertTrue(userRoleIds.contains(userRoleId));
-            List<String> userRoleNames = orgUserExtend.getUserRoleIdNameMap().stream().map(IdNameStructureDTO::getName).toList();
-            Assertions.assertTrue(userRoleNames.contains(userRoleId) || userRoleNames.contains("项目成员"));
 
             if (StringUtils.isNotBlank(projectId)) {
                 Assertions.assertNotNull(orgUserExtend.getProjectIdNameMap());

File: backend/services/system-setting/src/main/java/io/metersphere/system/request/PluginUpdateRequest.java
Patch:
@@ -22,10 +22,10 @@ public class PluginUpdateRequest {
     private String name;
 
     @Schema(title = "是否启用插件, 默认启用")
-    private Boolean enable = true;
+    private Boolean enable;
 
     @Schema(title = "是否是全局插件, 默认全局")
-    private Boolean global = true;
+    private Boolean global;
 
     @Schema(title = "插件描述")
     @Size(min = 1, max = 500, message = "{plugin.scenario.length_range}", groups = {Created.class, Updated.class})

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/OrganizationController.java
Patch:
@@ -61,14 +61,14 @@ public void addMemberRole(@Validated @RequestBody OrganizationMemberExtendReques
 
     @PostMapping("/update-member")
     @Operation(summary = "更新用户")
-    @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_UPDATE)
+    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD,  PermissionConstants.PROJECT_USER_READ_DELETE})
     public void updateMember(@Validated @RequestBody OrganizationMemberUpdateRequest organizationMemberExtendRequest) {
         organizationService.updateMember(organizationMemberExtendRequest, SessionUtils.getUserId());
     }
 
     @PostMapping("/project/add-member")
     @Operation(summary = "添加组织成员至项目")
-    @RequiresPermissions(PermissionConstants.ORGANIZATION_MEMBER_UPDATE)
+    @RequiresPermissions(value = {PermissionConstants.ORGANIZATION_MEMBER_UPDATE, PermissionConstants.PROJECT_USER_READ_ADD})
     public void addMemberToProject(@Validated @RequestBody OrgMemberExtendProjectRequest orgMemberExtendProjectRequest) {
         organizationService.addMemberToProject(orgMemberExtendProjectRequest, SessionUtils.getUserId());
     }

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/AuthSourceController.java
Patch:
@@ -41,7 +41,7 @@ public Pager<List<AuthSource>> list(@Validated @RequestBody BasePageRequest requ
 
     @PostMapping("/add")
     @Operation(summary = "新增认证设置")
-    @RequiresPermissions(PermissionConstants.SYSTEM_PARAMETER_SETTING_AUTH_READ_CREAT)
+    @RequiresPermissions(PermissionConstants.SYSTEM_PARAMETER_SETTING_AUTH_READ_ADD)
     @Log(type = OperationLogType.ADD, expression = "#msClass.addLog(#authSource)", msClass = AuthSourceLogService.class)
     public AuthSource add(@Validated @RequestBody AuthSourceRequest authSource) {
         return authSourceService.addAuthSource(authSource);

File: backend/services/system-setting/src/test/java/io/metersphere/system/controller/AuthSourceControllerTests.java
Patch:
@@ -61,7 +61,7 @@ public void testAddSource() throws Exception {
         this.requestPost(AUTH_SOURCE_ADD, authSource);
 
         // @@校验权限
-        requestPostPermissionTest(PermissionConstants.SYSTEM_PARAMETER_SETTING_AUTH_READ_CREAT, AUTH_SOURCE_ADD, authSource);
+        requestPostPermissionTest(PermissionConstants.SYSTEM_PARAMETER_SETTING_AUTH_READ_ADD, AUTH_SOURCE_ADD, authSource);
     }
 
     @Test

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/controller/LoginController.java
Patch:
@@ -16,7 +16,6 @@
 import jakarta.servlet.http.HttpServletResponse;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.reflect.MethodUtils;
 import org.apache.shiro.SecurityUtils;
 import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.web.bind.annotation.*;
@@ -34,7 +33,7 @@ public ResultHolder isLogin() throws Exception {
         RsaKey rsaKey = RsaUtil.getRsaKey();
         SessionUser user = SessionUtils.getUser();
         if (user != null) {
-            UserDTO userDTO = baseUserService.getUserDTO((String) MethodUtils.invokeMethod(user, "getId"));
+            UserDTO userDTO = baseUserService.getUserDTO(user.getId());
             if (StringUtils.isBlank(userDTO.getLanguage())) {
                 userDTO.setLanguage(LocaleContextHolder.getLocale().toString());
             }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/log/service/OperationLogService.java
Patch:
@@ -3,13 +3,13 @@
 import io.metersphere.project.domain.Project;
 import io.metersphere.sdk.domain.OperationLogBlob;
 import io.metersphere.sdk.dto.LogDTO;
+import io.metersphere.sdk.dto.OptionDTO;
 import io.metersphere.sdk.exception.MSException;
 import io.metersphere.sdk.log.vo.OperationLogRequest;
 import io.metersphere.sdk.log.vo.OperationLogResponse;
 import io.metersphere.sdk.mapper.*;
 import io.metersphere.sdk.util.Translator;
 import io.metersphere.system.domain.Organization;
-import io.metersphere.system.domain.User;
 import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -105,8 +105,8 @@ public List<OperationLogResponse> list(OperationLogRequest request) {
             List<String> userIds = list.stream().map(OperationLogResponse::getCreateUser).collect(Collectors.toList());
             List<String> projectIds = list.stream().map(OperationLogResponse::getProjectId).collect(Collectors.toList());
             List<String> organizationIds = list.stream().map(OperationLogResponse::getOrganizationId).collect(Collectors.toList());
-            List<User> userList = baseUserMapper.selectUserByIdList(userIds);
-            Map<String, String> userMap = userList.stream().collect(Collectors.toMap(User::getId, User::getName));
+            List<OptionDTO> userList = baseUserMapper.selectUserOptionByIds(userIds);
+            Map<String, String> userMap = userList.stream().collect(Collectors.toMap(OptionDTO::getId, OptionDTO::getName));
             List<Project> projects = baseProjectMapper.selectProjectByIdList(projectIds);
             Map<String, String> projectMap = projects.stream().collect(Collectors.toMap(Project::getId, Project::getName));
             List<Organization> organizations = baseOrganizationMapper.selectOrganizationByIdList(organizationIds);

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.sdk.mapper;
 
+import io.metersphere.sdk.dto.OptionDTO;
 import io.metersphere.sdk.dto.UserDTO;
 import io.metersphere.system.domain.User;
 import org.apache.ibatis.annotations.Param;
@@ -25,7 +26,6 @@ public interface BaseUserMapper {
 
     List<String> selectUnDeletedUserIdByIdList(@Param("idList") List<String> userIdList);
 
-    List<User> selectUserByIdList(List<String> userIds);
-
     long deleteUser(String id);
+    List<OptionDTO> selectUserOptionByIds(List<String> userIds);
 }

File: backend/framework/sdk/src/test/java/base/param/ParamGeneratorFactory.java
Patch:
@@ -24,6 +24,7 @@ public class ParamGeneratorFactory {
     private static final Map<String, ParamGenerator> paramGeneratorMap = new HashMap<>() {{
         put(Size.class.getName(), new SizeParamGenerator());
         put(NotBlank.class.getName(), new NotBlankParamGenerator());
+        put(NotEmpty.class.getName(), new NotEmptyParamGenerator());
         put(NotNull.class.getName(), new NotNullParamGenerator());
         put(EnumValue.class.getName(), new EnumValueParamGenerator());
         put(Min.class.getName(), new MinParamGenerator());

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/mapper/BaseUserMapper.java
Patch:
@@ -26,4 +26,6 @@ public interface BaseUserMapper {
     List<String> selectUnDeletedUserIdByIdList(@Param("idList") List<String> userIdList);
 
     List<User> selectUserByIdList(List<String> userIds);
+
+    long deleteUser(String id);
 }

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/LogDTO.java
Patch:
@@ -3,10 +3,12 @@
 import io.metersphere.sdk.domain.OperationLog;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 import java.util.UUID;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class LogDTO extends OperationLog {
     @Schema(title = "变更前内容")
     private byte[] originalValue;

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/TestResourcePoolDTO.java
Patch:
@@ -3,8 +3,10 @@
 import io.metersphere.system.domain.TestResourcePool;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class TestResourcePoolDTO extends TestResourcePool {
     private TestResourceDTO testResourceDTO;
 

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/TestResourcePoolReturnDTO.java
Patch:
@@ -3,8 +3,10 @@
 import io.metersphere.system.domain.TestResourcePool;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class TestResourcePoolReturnDTO  extends TestResourcePool {
     private TestResourceReturnDTO testResourceReturnDTO;
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/dto/PluginDTO.java
Patch:
@@ -4,11 +4,13 @@
 import io.metersphere.system.domain.Plugin;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 import java.io.Serializable;
 import java.util.List;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class PluginDTO extends Plugin implements Serializable {
     private static final long serialVersionUID = 1L;
 

File: backend/services/system-setting/src/main/java/io/metersphere/system/request/OrgMemberExtendProjectRequest.java
Patch:
@@ -3,13 +3,15 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotEmpty;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 import java.util.List;
 
 /**
  * @author guoyuqi
  */
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class OrgMemberExtendProjectRequest extends OrganizationMemberRequest{
 
     /**

File: backend/services/system-setting/src/main/java/io/metersphere/system/request/ProjectMemberRequest.java
Patch:
@@ -4,8 +4,10 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 @Data
+@EqualsAndHashCode(callSuper = false)
 public class ProjectMemberRequest extends BasePageRequest {
     @Schema(title = "项目ID", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{project.id.not_blank}")

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/TestResourceDTO.java
Patch:
@@ -82,7 +82,7 @@ public class TestResourceDTO {
     private String uiGrid;
 
     @Schema(title = "grid最大线程数")
-    private String girdConcurrentNumber;
+    private Integer girdConcurrentNumber;
 
     /**
      * 关联的组织id集合

File: backend/framework/sdk/src/main/java/io/metersphere/sdk/dto/TestResourcePoolRequest.java
Patch:
@@ -13,7 +13,7 @@ public class TestResourcePoolRequest {
 
     @Schema(title = "资源池ID", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotBlank(message = "{test_resource_pool.id.not_blank}", groups = {Updated.class})
-    @Size(min = 1, max = 50, message = "{test_resource_pool.id.length_range}", groups = {Created.class, Updated.class})
+    @Size(min = 1, max = 50, message = "{test_resource_pool.id.length_range}", groups = {Updated.class})
     private String id;
 
     @Schema(title = "名称", requiredMode = Schema.RequiredMode.REQUIRED)

File: backend/services/system-setting/src/main/java/io/metersphere/system/controller/UserController.java
Patch:
@@ -51,7 +51,7 @@ public List<UserRoleOption> getGlobalSystemRole() {
     @PostMapping("/add")
     @RequiresPermissions(PermissionConstants.SYSTEM_USER_READ_ADD)
     public UserBatchCreateDTO addUser(@Validated({Created.class}) @RequestBody UserBatchCreateDTO userCreateDTO) {
-        userCreateDTO.setCreateUserToList(SessionUtils.getSessionId());
+        userCreateDTO.setCreateUserToList(SessionUtils.getUserId());
         return userService.addBatch(userCreateDTO);
     }
 
@@ -60,7 +60,7 @@ public UserBatchCreateDTO addUser(@Validated({Created.class}) @RequestBody UserB
     @RequestLog(type = OperationLogType.UPDATE, module = OperationLogModule.SYSTEM_USER,
             sourceId = "#request.id", details = "#request.name")
     public UserEditRequest updateUser(@Validated({Updated.class}) @RequestBody UserEditRequest request) {
-        request.setUpdateUser(SessionUtils.getSessionId());
+        request.setUpdateUser(SessionUtils.getUserId());
         return userService.updateUser(request);
     }
 

File: backend/framework/domain/src/main/java/io/metersphere/plan/domain/TestPlanFollow.java
Patch:
@@ -5,7 +5,6 @@
 import io.swagger.annotations.ApiModelProperty;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
-import org.springframework.data.annotation.Id;
 import org.springframework.data.relational.core.mapping.Table;
 
 import java.io.Serializable;
@@ -15,12 +14,10 @@
 @Data
 public class TestPlanFollow implements Serializable {
     private static final long serialVersionUID = 1L;
-    @Id
     @NotBlank(message = "{test_plan_follow.test_plan_id.not_blank}", groups = {Updated.class})
     @ApiModelProperty(name = "测试计划ID", required = true, allowableValues = "range[1, 50]")
     private String testPlanId;
 
-    @Id
     @NotBlank(message = "{test_plan_follow.user_id.not_blank}", groups = {Updated.class})
     @ApiModelProperty(name = "用户ID", required = true, allowableValues = "range[1, 50]")
     private String userId;

File: backend/framework/domain/src/main/java/io/metersphere/plan/domain/TestPlanPrincipal.java
Patch:
@@ -5,7 +5,6 @@
 import io.swagger.annotations.ApiModelProperty;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;
-import org.springframework.data.annotation.Id;
 import org.springframework.data.relational.core.mapping.Table;
 
 import java.io.Serializable;
@@ -15,12 +14,10 @@
 @Data
 public class TestPlanPrincipal implements Serializable {
     private static final long serialVersionUID = 1L;
-    @Id
     @NotBlank(message = "{test_plan_principal.test_plan_id.not_blank}", groups = {Updated.class})
     @ApiModelProperty(name = "测试计划ID", required = true, allowableValues = "range[1, 50]")
     private String testPlanId;
 
-    @Id
     @NotBlank(message = "{test_plan_principal.user_id.not_blank}", groups = {Updated.class})
     @ApiModelProperty(name = "用户ID", required = true, allowableValues = "range[1, 50]")
     private String userId;

File: backend/services/test-plan/src/test/java/io/metersphere/plan/Application.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system;
+package io.metersphere.plan;
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;

File: backend/services/test-plan/src/test/java/io/metersphere/plan/controller/TestPlanControllerTests.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.system.controller;
+package io.metersphere.plan.controller;
 
 import io.metersphere.plan.domain.TestPlan;
 import io.metersphere.sdk.util.JSON;

File: backend/framework/plugin/src/main/java/io/metersphere/plugin/platform/dto/TestCaseDemandDTO.java
Patch:
@@ -1,12 +1,11 @@
 package io.metersphere.plugin.platform.dto;
 
-import io.metersphere.base.domain.TestCaseWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 
 @Getter
 @Setter
-public class TestCaseDemandDTO extends TestCaseWithBLOBs {
+public class TestCaseDemandDTO {
 
     /**
      * 修改前的需求ID

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtMockExpectConfigMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.api.dto.mock.config.MockConfigImportDTO;
 import io.metersphere.base.domain.MockExpectConfigWithBLOBs;
 import org.apache.ibatis.annotations.Param;
 
@@ -11,7 +12,7 @@ public interface ExtMockExpectConfigMapper {
 
     List<MockExpectConfigWithBLOBs> selectByApiId(String apiId);
 
-    List<MockExpectConfigWithBLOBs> selectByApiIdIn(@Param("values") List<String> apiIds);
+    List<MockConfigImportDTO> selectByApiIdIn(@Param("values") List<String> apiIds);
 
     List<String> selectExlectNumByMockConfigId(String mockConfigId);
 

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -437,7 +437,7 @@ public List<IssuesPlatform> getUpdatePlatforms(IssuesUpdateRequest updateRequest
     public List<IssuesDao> getIssues(String caseResourceId, String refType) {
         IssuesRequest issueRequest = new IssuesRequest();
         issueRequest.setCaseResourceId(caseResourceId);
-        ServiceUtils.getDefaultOrder(issueRequest.getOrders());
+        issueRequest.setOrders(ServiceUtils.getDefaultOrder(issueRequest.getOrders(),"relate_time"));
         issueRequest.setRefType(refType);
         List<IssuesDao> issues = extIssuesMapper.getIssuesByCaseId(issueRequest);
         Map<String, User> userMap = getUserMap(issues);

File: api-test/backend/src/main/java/io/metersphere/listener/ApiExecutionQueueListener.java
Patch:
@@ -1,15 +1,15 @@
 package io.metersphere.listener;
 
+import com.fit2cloud.quartz.anno.QuartzScheduled;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.service.ApiExecutionQueueService;
-import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.stereotype.Component;
 
 @Component
 public class ApiExecutionQueueListener {
     private ApiExecutionQueueService queueService;
 
-    @Scheduled(cron = "0 0/10 0/1 * * ?")
+    @QuartzScheduled(cron = "0 0/10 0/1 * * ?")
     public void execute() {
         if (queueService == null) {
             queueService = CommonBeanFactory.getBean(ApiExecutionQueueService.class);

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -1746,7 +1746,7 @@ private void validateExportTextField(TestCaseDTO data) {
     private void validateExportText(String name, String textValue) {
         // poi 导出的单个单元格最大字符数量为 32767 ，这里添加校验提示
         int maxLength = 32767;
-        if (textValue.length() > maxLength) {
+        if (StringUtils.isNotBlank(textValue) && textValue.length() > maxLength) {
             MSException.throwException(String.format(Translator.get("case_export_text_validate_tip"), name, maxLength));
         }
     }

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -1057,6 +1057,9 @@ public TestPlanReportDataStruct getReport(String reportId) {
             TestPlanWithBLOBs testPlan = testPlanMapper.selectByPrimaryKey(testPlanReport.getTestPlanId());
             testPlanReportDTO = testPlanService.generateReportStruct(testPlan, testPlanReport, testPlanReportContent, false);
         }
+        if (StringUtils.isNotEmpty(testPlanReportContent.getSummary())) {
+            testPlanReportDTO.setSummary(testPlanReportContent.getSummary());
+        }
         testPlanReportDTO.setId(reportId);
         testPlanReportDTO.setName(testPlanReport.getName());
         return testPlanReportDTO;

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionExecResultService.java
Patch:
@@ -198,7 +198,9 @@ private void sendNotice(ApiDefinitionExecResult result, User user) {
                     user = userMapper.selectByPrimaryKey(result.getUserId());
                 }
             }
-
+            if (result.getUserId() == null && user != null) {
+                result.setUserId(user.getId());
+            }
             Map paramMap = new HashMap<>(beanMap);
             paramMap.put("operator", user != null ? user.getName() : result.getUserId());
             paramMap.put("status", result.getStatus());

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockApiUtils.java
Patch:
@@ -371,7 +371,7 @@ public static RequestMockParams genRequestMockParamsFromHttpRequest(HttpServletR
             } catch (Exception e) {
                 LogUtil.error(e);
             }
-        } else if (StringUtils.startsWithIgnoreCase(request.getContentType(), "text/xml")) {
+        } else if (StringUtils.startsWithIgnoreCase(request.getContentType(), "text/xml") || StringUtils.startsWithIgnoreCase(request.getContentType(), "application/xml")) {
             mockParams.setParamType(MockRequestType.XML.name());
             String xmlString = readXml(request);
             JSONObject xmlJsonObject = XMLUtil.xmlStringToJSONObject(xmlString);

File: performance-test/backend/src/main/java/io/metersphere/engine/EngineFactory.java
Patch:
@@ -120,9 +120,6 @@ public static EngineContext createContext(LoadTestReportWithBLOBs loadTestReport
                         }
                         if (values instanceof List) {
                             Object value = b.get("value");
-                            if (value == null) {
-                                MSException.throwException(Translator.get("load_configuration_value_is_null") + ", key:" + key);
-                            }
                             if ("TargetLevel".equals(key)) {
                                 switch (strategy) {
                                     default:

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseNodeService.java
Patch:
@@ -369,6 +369,7 @@ public List<TestCaseNodeDTO> getRelatePlanNodes(QueryTestCaseRequest request) {
         if (testPlanService.isAllowedRepeatCase(request.getPlanId())) {
             request.setRepeatCase(true);
         }
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         List<TestCaseNodeDTO> countMNodes = extTestCaseMapper.getTestPlanRelateCountNodes(request);
         List<TestCaseNodeDTO> testCaseNodes = extTestCaseNodeMapper.getNodeTreeByProjectId(request.getProjectId());
         return getNodeTreeWithPruningTreeByCaseCount(testCaseNodes, getCountMap(countMNodes));
@@ -378,6 +379,7 @@ public List<TestCaseNodeDTO> getRelateReviewNodes(QueryTestCaseRequest request)
         request.setNodeIds(null);
         List<TestCaseNodeDTO> countMNodes = extTestCaseMapper.getTestReviewRelateCountNodes(request);
         List<TestCaseNodeDTO> testCaseNodes = extTestCaseNodeMapper.getNodeTreeByProjectId(request.getProjectId());
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         return getNodeTreeWithPruningTreeByCaseCount(testCaseNodes, getCountMap(countMNodes));
     }
 

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -975,6 +975,7 @@ public Pager<List<TestCaseDTO>> getTestCaseRelateList(QueryTestCaseRequest reque
     }
 
     public List<TestCaseDTO> getTestCaseByNotInPlan(QueryTestCaseRequest request) {
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         return extTestCaseMapper.getTestCaseByNotInPlan(request);
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -107,6 +107,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         ParameterConfig newConfig = new ParameterConfig();
         if (this.isEnvironmentEnable()) {
             this.setNewConfig(envConfig, newConfig);
+            newConfig.setRetryNum(config.getRetryNum());
         }
         if (config != null && StringUtils.equals(this.getId(), config.getScenarioId())) {
             config.setTransferVariables(this.variables);

File: performance-test/backend/src/main/java/io/metersphere/engine/EngineFactory.java
Patch:
@@ -120,6 +120,9 @@ public static EngineContext createContext(LoadTestReportWithBLOBs loadTestReport
                         }
                         if (values instanceof List) {
                             Object value = b.get("value");
+                            if (value == null) {
+                                MSException.throwException(Translator.get("load_configuration_value_is_null") + ", key:" + key);
+                            }
                             if ("TargetLevel".equals(key)) {
                                 switch (strategy) {
                                     default:

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanReportContentMapper.java
Patch:
@@ -14,4 +14,6 @@ public interface ExtTestPlanReportContentMapper {
     boolean hasRunningReport(@Param("planId") String planId);
 
     boolean hasRunningReportByPlanIds(@Param("planIds") List<String> planIds);
+
+    boolean isApiBasicCountIsNull(String testPlanReportId);
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2779,6 +2779,8 @@ public List<TestCaseTestDao> getRelateTest(String caseId) {
             getTestCaseTestDaoList(TestCaseTestType.uiAutomation.name(), item.getNum(), item.getName(), item.getId(), projectNameMap.get(item.getProjectId()), versionNameMap.get(item.getVersionId()),
                     testCaseTestList, testCaseTestsMap);
         });
+        // 根据关联记录时间展示
+        Collections.sort(testCaseTestList, Comparator.comparingLong(TestCaseTestDao::getCreateTime));
         return testCaseTestList;
     }
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1383,7 +1383,7 @@ public void buildLoadReport(TestPlanReportDataStruct report, Map config, String
      * @param testPlanReportContentWithBLOBs 测试计划报告内容
      * @return
      */
-    public TestPlanReportDataStruct buildTestPlanReportStruct(TestPlanWithBLOBs testPlan, TestPlanReport testPlanReport, TestPlanReportContentWithBLOBs testPlanReportContentWithBLOBs) {
+    public TestPlanReportDataStruct buildReportStruct(TestPlanWithBLOBs testPlan, TestPlanReport testPlanReport, TestPlanReportContentWithBLOBs testPlanReportContentWithBLOBs, boolean rebuildReport) {
         TestPlanReportDataStruct testPlanReportStruct = null;
         if (ObjectUtils.allNotNull(testPlanReport, testPlanReportContentWithBLOBs)) {
             Map config = null;
@@ -1392,7 +1392,7 @@ public TestPlanReportDataStruct buildTestPlanReportStruct(TestPlanWithBLOBs test
             }
             testPlanReportStruct = this.getTestPlanReportStructByCreated(testPlanReportContentWithBLOBs);
             //检查是否有已经生成过的测试计划报告内容。如若没有则进行动态计算
-            if (testPlanReportStruct == null) {
+            if (rebuildReport || testPlanReportStruct == null) {
                 //查询测试计划内的用例信息，然后进行测试计划报告的结果统计
                 TestPlanCaseReportResultDTO testPlanExecuteReportDTO = testPlanReportService.selectCaseDetailByTestPlanReport(config, testPlan.getId(), testPlanReportContentWithBLOBs);
                 testPlanReportStruct = initTestPlanReportStructData(
@@ -2112,7 +2112,7 @@ public TestPlanReportDataStruct buildTestPlanReportStructByTestPlanReport(TestPl
         TestPlanWithBLOBs testPlanWithBLOBs = this.testPlanMapper.selectByPrimaryKey(testPlanReport.getTestPlanId());
         TestPlanReportDataStruct testPlanReportDataStruct = new TestPlanReportDataStruct();
         try {
-            testPlanReportDataStruct = this.buildTestPlanReportStruct(testPlanWithBLOBs, testPlanReport, testPlanReportContent);
+            testPlanReportDataStruct = this.buildReportStruct(testPlanWithBLOBs, testPlanReport, testPlanReportContent, false);
         } catch (Exception e) {
             LoggerUtil.error("统计测试计划数据出错！", e);
         }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2276,6 +2276,9 @@ public TestCase edit(EditTestCaseRequest request) {
         if (testCaseWithBLOBs == null) {
             MSException.throwException(Translator.get("edit_load_test_not_found") + request.getId());
         }
+        if (StringUtils.equals(testCaseWithBLOBs.getStatus(), CommonConstants.TrashStatus)) {
+            MSException.throwException(Translator.get("edit_trash_case_error"));
+        }
         request.setNum(testCaseWithBLOBs.getNum());
         this.setNode(request);
         return editTestCase(request);

File: api-test/backend/src/main/java/io/metersphere/api/exec/generator/TestDataGenerator.java
Patch:
@@ -147,7 +147,7 @@ public static String analyzeString(JsonObject object) {
         if (object.has(MINLENGTH)) {
             minLength = object.get(MINLENGTH).getAsInt();
         }
-        String value = RandomStringUtils.randomAlphanumeric(minLength, maxLength);
+        String value = minLength > maxLength ? mockValue.toString() : RandomStringUtils.randomAlphanumeric(minLength, maxLength);
         Object enumObj = analyzeEnumProperty(object);
         String v = enumObj == null ? "" : String.valueOf(enumObj);
         value = StringUtils.isNotBlank(v) ? v : value;
@@ -174,7 +174,7 @@ public static String analyzeString(JsonObject object) {
         } catch (Exception e) {
             return value;
         }
-    } 
+    }
 
     public static Object analyzeInteger(JsonObject object) {
         // 先设置空值

File: project-management/backend/src/main/java/io/metersphere/code/snippet/listener/MsDebugListener.java
Patch:
@@ -155,7 +155,7 @@ public void sampleOccurred(SampleEvent event) {
                 dto.setReportId("send." + this.getName());
                 dto.setToReport(this.getName());
 
-                String console = FixedCapacityUtils.getJmeterLogger(this.getName(), false);
+                String console = FixedCapacityUtils.getJmeterLogger(this.getName());
                 if (StringUtils.isNotEmpty(requestResult.getName()) && requestResult.getName().startsWith("Transaction=")) {
                     requestResult.getSubRequestResults().forEach(transactionResult -> {
                         transactionResult.getResponseResult().setConsole(console);//解析误报内容

File: test-track/backend/src/main/java/io/metersphere/plan/job/TestPlanTestJob.java
Patch:
@@ -60,7 +60,7 @@ protected void businessExecute(JobExecutionContext context) {
 
         // 定时任务指定调用微服务的user
         HttpHeaderUtils.runAsUser(baseUserService.getUserDTO(runUserId));
-        testPlanService.run(runResourceId, runProjectId, runUserId, ReportTriggerMode.SCHEDULE.name(), null, ExecutionWay.RUN.name(), config);
+        testPlanService.runTestPlan(runResourceId, runProjectId, runUserId, ReportTriggerMode.SCHEDULE.name(), null, ExecutionWay.RUN.name(), config);
         HttpHeaderUtils.clearUser();
     }
 

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanScenarioCaseController.java
Patch:
@@ -79,7 +79,7 @@ public Pager<List<ApiScenarioDTO>> relevanceList(@PathVariable int goPage, @Path
     }
 
     @PostMapping("/relevance/projectIds")
-    public List<String> relevanceProjectIds(@RequestBody ApiScenarioRequest request) {
+    public ScenarioProjectDTO relevanceProjectIds(@RequestBody ApiScenarioRequest request) {
         return testPlanScenarioCaseService.relevanceProjectIds(request);
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanScenarioCaseService.java
Patch:
@@ -178,7 +178,7 @@ public Pager<List<ApiScenarioDTO>> relevanceList(ApiScenarioRequest request, int
         return PageUtils.setPageInfo(page, apiAutomationService.list(request));
     }
 
-    public List<String> relevanceProjectIds(ApiScenarioRequest request) {
+    public ScenarioProjectDTO relevanceProjectIds(ApiScenarioRequest request) {
         request.setNotInTestPlan(true);
         if (request.getAllowedRepeatCase()) {
             request.setNotInTestPlan(false);

File: test-track/backend/src/main/java/io/metersphere/service/TestReviewTestCaseService.java
Patch:
@@ -494,7 +494,9 @@ public void editTestCaseBatchReviewer(TestReviewCaseBatchRequest request) {
 
             if (!request.getAppendTag()) {
                 // 如果不是追加，则先删除，然后批量新增
-                example.createCriteria().andCaseIdIn(subList);
+                example.createCriteria()
+                        .andCaseIdIn(subList)
+                        .andReviewIdEqualTo(request.getReviewId());
                 testCaseReviewTestCaseUsersMapper.deleteByExample(example);
 
                 subList.forEach(caseId ->

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2273,10 +2273,10 @@ public TestCase add(EditTestCaseRequest request, List<MultipartFile> files) {
 
     public TestCase edit(EditTestCaseRequest request) {
         TestCaseWithBLOBs testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(request.getId());
-        request.setNum(testCaseWithBLOBs.getNum());
         if (testCaseWithBLOBs == null) {
             MSException.throwException(Translator.get("edit_load_test_not_found") + request.getId());
         }
+        request.setNum(testCaseWithBLOBs.getNum());
         this.setNode(request);
         return editTestCase(request);
     }

File: test-track/backend/src/main/java/io/metersphere/service/TestReviewTestCaseService.java
Patch:
@@ -251,7 +251,7 @@ public List<TestCaseComment> getReviewerStatusComment(String id) {
         String reviewPassRule = testCaseReviewService.getTestReview(testCaseReviewTestCase.getReviewId())
                 .getReviewPassRule();
 
-        List<String> users = testCaseReviewTestCaseUsersService.getUsersByCaseId(testCaseReviewTestCase.getCaseId());
+        List<String> users = testCaseReviewTestCaseUsersService.getUsersByCaseId(testCaseReviewTestCase.getCaseId(), testCaseReviewTestCase.getReviewId());
         Set<String> reviewerSet = users.stream().collect(Collectors.toSet());
 
         comments = filterAgainComments(comments);
@@ -292,7 +292,7 @@ private String updateReviewCaseStatus(TestCaseReviewTestCase testCaseReviewTestC
         String originStatus = originReviewTestCase.getStatus();
         String status = originStatus;
 
-        List<String> reviewers = testCaseReviewTestCaseUsersService.getUsersByCaseId(testCaseReviewTestCase.getCaseId());
+        List<String> reviewers = testCaseReviewTestCaseUsersService.getUsersByCaseId(testCaseReviewTestCase.getCaseId(), testCaseReviewTestCase.getReviewId());
 
         Set<String> reviewerSet = reviewers.stream().collect(Collectors.toSet());
 

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -63,6 +63,6 @@ public interface ExtTestPlanApiCaseMapper {
 
     List<TestPlanApiCase> selectByRefIds(@Param("ids") List<String> ids);
 
-    List<String> selectResourcePoolIdByTestPlanApiIds(@Param("ids") List<String> resourceIds);
+    List<String> selectResourcePoolIdByReportIds(@Param("ids") List<String> resourceIds);
 }
 

File: test-track/backend/src/main/java/io/metersphere/constants/IssueStatus.java
Patch:
@@ -12,7 +12,9 @@ public enum IssueStatus {
     status_in_progress("in_progress", "in_progress"),
     status_rejected("rejected", "rejected"),
     status_upcoming("upcoming", "upcoming"),
-    status_reopened("reopened", "reopened");
+    status_reopened("reopened", "reopened"),
+    status_verified("verified", "verified"),
+    status_suspended("suspended", "suspended");
 
     private String name;
     private String i18nKey;

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -792,6 +792,8 @@ public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request) {
     }
 
     public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request, boolean isSampleInfo) {
+        boolean queryUi = DiscoveryUtil.hasService(MicroServiceName.UI_TEST);
+        request.setQueryUi(queryUi);
         this.initRequest(request, true);
         setDefaultOrder(request);
         ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -204,7 +204,7 @@ private TestElement jsr223Assertion(MsAssertionJSR223 assertionJSR223) {
         }
         assertion.setProperty(TestElement.TEST_CLASS, JSR223Assertion.class.getName());
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
-        assertion.setProperty("cacheKey", "true");
+        assertion.setProperty("cacheKey", "false");
         String scriptLanguage = assertionJSR223.getScriptLanguage();
         if (StringUtils.equals(scriptLanguage, "nashornScript")) {
             scriptLanguage = "nashorn";

File: test-track/backend/src/main/java/io/metersphere/service/wapper/UserService.java
Patch:
@@ -21,7 +21,7 @@ public class UserService {
     public UserDTO.PlatformInfo getCurrentPlatformInfo(String workspaceId) {
         String currentPlatformInfoStr = getCurrentPlatformInfoStr(workspaceId);
         if (StringUtils.isNotBlank(currentPlatformInfoStr)) {
-            JSON.parseObject(currentPlatformInfoStr, UserDTO.PlatformInfo.class);
+            return JSON.parseObject(currentPlatformInfoStr, UserDTO.PlatformInfo.class);
         }
         return null;
     }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -85,4 +85,6 @@ public interface ExtApiScenarioMapper {
     List<String> selectScenarioIdInExecutionInfoByProjectIdIsNull();
 
     long countSourceIdByProjectIdIsNull();
+
+    List<String> selectIdByScenarioRequest(@Param("request") ApiScenarioRequest request);
 }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiModuleService.java
Patch:
@@ -514,7 +514,6 @@ public ApiModule saveDefault(String projectId, String protocol) {
             module.setCreateTime(System.currentTimeMillis());
             module.setUpdateTime(System.currentTimeMillis());
             module.setProjectId(projectId);
-            module.setCreateUser(SessionUtils.getUserId());
             apiModuleMapper.insert(module);
             return module;
         } else {

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioModuleService.java
Patch:
@@ -463,7 +463,7 @@ public void initDefaultModule() {
                 module.setCreateTime(System.currentTimeMillis());
                 module.setUpdateTime(System.currentTimeMillis());
                 module.setProjectId(projects.get(0).getId());
-                module.setCreateUser(SessionUtils.getUserId());
+                module.setCreateUser(projects.get(0).getCreateUser());
                 apiScenarioModuleMapper.insert(module);
             }
         }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -805,6 +805,7 @@ public void run(String testId, String reportId) {
         request.setEnvironmentId(testPlanApiCase.getEnvironmentId());
         request.setBloBs(apiCase);
         request.setReportId(reportId);
+        request.setTestPlanId(testPlanApiCase.getTestPlanId());
         Map<String, Object> extendedParameters = new HashMap<>();
         extendedParameters.put(ExtendedParameter.SYNC_STATUS, true);
         apiExecuteService.exec(request, extendedParameters);

File: test-track/backend/src/main/java/io/metersphere/controller/TrackController.java
Patch:
@@ -90,6 +90,8 @@ private List<ExecutedCaseInfoDTO> getResultList(int goPage, int pageSize, List<E
                 dataDTO.setCaseType(selectData.getCaseType());
                 dataDTO.setId(selectData.getId());
                 dataDTO.setTestPlanDTOList(selectData.getTestPlanDTOList());
+                dataDTO.setProtocol(selectData.getProtocol());
+                dataDTO.setProjectId(selectData.getProjectId());
                 returnList.add(dataDTO);
             }
         }

File: test-track/backend/src/main/java/io/metersphere/dto/ExecutedCaseInfoDTO.java
Patch:
@@ -28,4 +28,6 @@ public class ExecutedCaseInfoDTO {
     private String id;
     //测试计划集合
     private List<TestPlanDTO> testPlanDTOList;
+    private String protocol;
+    private String projectId;
 }

File: test-track/backend/src/main/java/io/metersphere/dto/ExecutedCaseInfoResult.java
Patch:
@@ -23,4 +23,6 @@ public class ExecutedCaseInfoResult {
     //案例类型
     private String caseType;
     private List<TestPlanDTO> testPlanDTOList;
+    private String protocol;
+    private String projectId;
 }

File: system-setting/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -84,7 +84,7 @@ public PluginWithBLOBs addPlatformPlugin(MultipartFile file) {
         if (pluginMapper.countByExample(example) > 0) {
             // 校验插件类型是否存在
             unload(id);
-            MSException.throwException(pluginMetaInfo.getKey() + " plugin is already exist!");
+            MSException.throwException(pluginMetaInfo.getKey() + Translator.get("platform_plugin_exit"));
         }
 
         PluginManagerUtil.uploadPlugin(id, file);

File: api-test/backend/src/main/java/io/metersphere/controller/scenario/ApiScenarioReportController.java
Patch:
@@ -19,9 +19,9 @@
 import io.metersphere.notice.annotation.SendNotice;
 import io.metersphere.service.ShareInfoService;
 import io.metersphere.service.scenario.ApiScenarioReportService;
+import jakarta.annotation.Resource;
 import org.springframework.web.bind.annotation.*;
 
-import jakarta.annotation.Resource;
 import java.util.List;
 import java.util.Map;
 
@@ -42,7 +42,7 @@ public ApiScenarioReportResult get(@PathVariable String reportId) {
     @GetMapping("/get/{shareId}/{reportId}")
     public ApiScenarioReportResult get(@PathVariable String shareId, @PathVariable String reportId) {
         shareInfoService.validateExpired(shareId);
-        return apiReportService.get(reportId, true);
+        return apiReportService.get(reportId, false);
     }
 
     @GetMapping("/get/detail/{reportId}")

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/quota/service/QuotaManagementService.java
Patch:
@@ -122,7 +122,7 @@ public void saveQuota(Quota quota) {
 
         BigDecimal vumTotal = quota.getVumTotal();
         BigDecimal max = BigDecimal.valueOf(99999999.00);
-        if (vumTotal.compareTo(max) > 0) {
+        if (vumTotal != null && vumTotal.compareTo(max) > 0) {
             MSException.throwException("总vum数量不能超过99999999！");
         }
         quotaMapper.insert(quota);

File: performance-test/backend/src/main/java/io/metersphere/plan/controller/TestPlanLoadCaseController.java
Patch:
@@ -181,7 +181,7 @@ public List<String> getExecResultByPlanId(@PathVariable String planId) {
 
     @GetMapping("/resource/pool/{planId}")
     public List<String> getResourcePoolByPlanId(@PathVariable String planId) {
-        return testPlanLoadCaseService.getResourcePoolByPlanId(planId);
+        return testPlanLoadCaseService.getResourcePoolFromReportByPlanId(planId);
     }
 
     @GetMapping("/resource/pool/case/{planId}")

File: performance-test/backend/src/main/java/io/metersphere/plan/service/TestPlanLoadCaseService.java
Patch:
@@ -713,7 +713,7 @@ public Boolean isExecuting(String planId, String projectId) {
                 .collect(Collectors.toList()).isEmpty();
     }
 
-    public List<String> getResourcePoolByPlanId(String planId) {
+    public List<String> getResourcePoolFromReportByPlanId(String planId) {
         return extTestPlanLoadCaseMapper.getResourcePoolByPlanId(planId);
     }
 

File: api-test/backend/src/main/java/io/metersphere/commons/constants/ElementConstants.java
Patch:
@@ -62,4 +62,6 @@ public class ElementConstants {
     public static final String MS_KEYSTORE_FILE_PASSWORD = "MS-KEYSTORE-FILE-PASSWORD";
     public static final String VIRTUAL_STEPS = "VIRTUAL_STEPS";
     public static final String REF = "$ref";
+    public static final String TYPE = "type";
+
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/KafkaTopicConstants.java
Patch:
@@ -10,8 +10,6 @@ public interface KafkaTopicConstants {
     String DEBUG_TOPICS = "MS-API-DEBUG-TOPIC";
     // 测试计划接收执行结果TOPIC
     String TEST_PLAN_REPORT_TOPIC = "TEST_PLAN_REPORT_TOPIC";
-    // 保存当前站点时检查MOCK环境
-    String CHECK_MOCK_ENV_TOPIC = "CHECK_MOCK_ENV_TOPIC";
     // 上传插件后，通知各服务从 minio 加载插件, 删除插件后卸载插件
     String PLATFORM_PLUGIN = "PLATFORM_PLUGIN";
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -3209,7 +3209,7 @@ public List<TestCase> selectByIds(QueryTestCaseRequest request) {
     public TestCaseWithBLOBs getSimpleCaseForEdit(String testCaseId) {
         TestCaseWithBLOBs testCase = testCaseMapper.selectByPrimaryKey(testCaseId);
         Project project = baseProjectService.getProjectById(testCase.getProjectId());
-        if (!SessionUtils.hasPermission(project.getWorkspaceId(), project.getId(), PermissionConstants.PROJECT_TRACK_CASE_READ_EDIT)) {
+        if (!SessionUtils.hasPermission(project.getWorkspaceId(), project.getId(), PermissionConstants.PROJECT_TRACK_CASE_READ)) {
             MSException.throwException(Translator.get("check_owner_project"));
         }
         return testCaseMapper.selectByPrimaryKey(testCaseId);

File: test-track/backend/src/main/java/io/metersphere/request/testplancase/TestReviewCaseBatchRequest.java
Patch:
@@ -11,8 +11,9 @@
 @Setter
 public class TestReviewCaseBatchRequest extends TestCaseReviewTestCase {
     private String reviewId;
+    private List<String> reviewerIds;
     private List<String> ids;
     private QueryCaseReviewCondition condition;
-    private Boolean appendTag;
+    private Boolean appendTag = false;
     private String description;
 }

File: performance-test/backend/src/main/java/io/metersphere/plan/dto/TestPlanLoadCaseDTO.java
Patch:
@@ -22,6 +22,7 @@ public class TestPlanLoadCaseDTO extends TestPlanLoadCaseWithBLOBs {
     private String reportId;
     private String versionId;
     private String versionName;
+    private String description;
 
     @Getter
     @Setter

File: test-track/backend/src/main/java/io/metersphere/plan/utils/TestCaseSyncStatusUtil.java
Patch:
@@ -239,7 +239,7 @@ public static CaseExecResult getPriorityStatusFromCaseExecResult(CaseExecResult.
                 errorStatus = execResult;
             } else if (StringUtils.equalsIgnoreCase(ApiReportStatus.FAKE_ERROR.name(), execResult.getExecResult())) {
                 fakeErrorStatus = execResult;
-            } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), ApiReportStatus.FAKE_ERROR.name(), TestPlanStatus.Completed.name())) {
+            } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), ApiReportStatus.SUCCESS.name(), TestPlanStatus.Completed.name())) {
                 successStatus = execResult;
             } else if (StringUtils.isEmpty(execResult.getExecResult())) {
                 hasNoneStatus = true;

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1651,6 +1651,8 @@ public List<IssuesDao> getExportIssues(IssueExportRequest exportRequest, Boolean
         request.setWorkspaceId(exportRequest.getWorkspaceId());
         request.setSelectAll(exportRequest.getIsSelectAll());
         request.setExportIds(exportRequest.getExportIds());
+        // 列表搜索条件
+        request.setName(exportRequest.getName());
         // 高级搜索条件
         request.setCombine(exportRequest.getCombine());
         // 列表排序

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -72,9 +72,10 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<String> getCaseIdsByIds(@Param("ids") List<String> ids);
 
-    void updateExecResultByTestPlanCaseIdList(@Param("ids") List<String> testPlanCaseIdList, @Param("execResult") String execResult);
+    int updateDiffExecResultByTestPlanCaseIdList(@Param("ids") List<String> testPlanCaseIdList, @Param("execResult") String execResult);
 
-    void updateExecResultByTestCaseIdAndTestPlanId(@Param("testCaseId") String testCaseId, @Param("testPlanId") String testPlanId, @Param("execResult") String execResult);
+    //修改
+    int updateDiffExecResultByTestCaseIdAndTestPlanId(@Param("testCaseId") String testCaseId, @Param("testPlanId") String testPlanId, @Param("execResult") String execResult);
 
     List<TestPlanTestCase> selectByAutomationCaseIdAndTestPlanId(@Param("automationCaseId") String automationCaseId, @Param("test_plan_id") String testPlanId);
 

File: test-track/backend/src/main/java/io/metersphere/dto/TestPlanLoadCaseDTO.java
Patch:
@@ -6,11 +6,9 @@
 import io.metersphere.plan.dto.Errors;
 import io.metersphere.plan.dto.ErrorsTop5;
 import io.metersphere.plan.dto.Statistics;
-import io.opentelemetry.sdk.metrics.data.MetricData;
 import lombok.Getter;
 import lombok.Setter;
 
-import javax.management.monitor.Monitor;
 import java.util.List;
 import java.util.Map;
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/performance/PlanTestPlanLoadCaseService.java
Patch:
@@ -138,7 +138,8 @@ public List<TestPlanLoadCaseDTO> buildResponse(List<TestPlanLoadCaseDTO> loadCas
         if (CollectionUtils.isEmpty(loadCases)) {
             return null;
         }
-        return microService.postForDataArray(serviceName, BASE_UEL + "/build/response", loadCases, TestPlanLoadCaseDTO.class);
+        List<TestPlanLoadCaseDTO> returnList = microService.postForDataArray(serviceName, BASE_UEL + "/build/response", loadCases, TestPlanLoadCaseDTO.class);
+        return returnList;
     }
 
     public Object relevanceList(int pageNum, int pageSize, LoadCaseRequest request) {

File: test-track/backend/src/main/java/io/metersphere/plan/utils/TestCaseSyncStatusUtil.java
Patch:
@@ -3,7 +3,6 @@
 import io.metersphere.base.domain.TestCaseTest;
 import io.metersphere.commons.constants.TestPlanStatus;
 import io.metersphere.dto.*;
-import io.metersphere.i18n.Translator;
 import io.metersphere.plan.constant.ApiReportStatus;
 import io.metersphere.plan.dto.CaseExecResult;
 import io.metersphere.plan.enums.FunctionCaseExecResult;
@@ -259,6 +258,6 @@ public static CaseExecResult getPriorityStatusFromCaseExecResult(CaseExecResult.
     }
 
     public static String generateCommentDesc(String testPlanName, String caseName, String status) {
-        return String.format(Translator.get("test_case_sync_status_comment"), caseName, testPlanName, status);
+        return String.format("关联的case %s 在测试计划【%s】内的执行结果出现%s。", caseName, testPlanName, status);
     }
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestReviewTestCaseService.java
Patch:
@@ -521,6 +521,9 @@ private void checkReviewCase(String reviewId, List<String> caseIds) {
 
     public void editTestCaseForMinder(String reviewId, List<TestCaseReviewTestCase> testCaseReviewTestCases) {
         List<String> caseIds = testCaseReviewTestCases.stream().map(TestCaseReviewTestCase::getCaseId).collect(Collectors.toList());
+        if (CollectionUtils.isEmpty(caseIds)) {
+            return;
+        }
         checkReviewCase(reviewId, caseIds);
         if (!CollectionUtils.isEmpty(testCaseReviewTestCases)) {
             testCaseReviewTestCases.forEach((item) -> {

File: performance-test/backend/src/main/java/io/metersphere/plan/service/TestPlanLoadCaseService.java
Patch:
@@ -531,7 +531,7 @@ public LoadPlanReportDTO buildLoadReport(PlanSubReportRequest request) {
     }
 
     public void buildLoadResponse(List<TestPlanLoadCaseDTO> cases) {
-        if (!org.apache.commons.collections.CollectionUtils.isEmpty(cases)) {
+        if (!CollectionUtils.isEmpty(cases)) {
             cases.forEach(item -> {
                 LoadCaseReportRequest request = new LoadCaseReportRequest();
                 String reportId = item.getLoadReportId();

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/ui/PlanTestPlanUiScenarioCaseService.java
Patch:
@@ -9,8 +9,8 @@
 import io.metersphere.dto.*;
 import io.metersphere.plan.constant.ApiReportStatus;
 import io.metersphere.plan.dto.*;
-import io.metersphere.plan.request.api.ApiPlanReportRequest;
 import io.metersphere.plan.request.api.ApiScenarioRequest;
+import io.metersphere.plan.request.ui.UiPlanReportRequest;
 import io.metersphere.plan.service.TestPlanService;
 import io.metersphere.plan.service.remote.api.PlanTestPlanScenarioCaseService;
 import io.metersphere.plan.service.remote.api.PlanUiScenarioReportService;
@@ -45,7 +45,7 @@ public List<String> getExecResultByPlanId(String planId) {
         return (List<String>) microService.getForData(serviceName, BASE_URL + "/plan/exec/result/" + planId);
     }
 
-    public UiPlanReportDTO getUiReport(ApiPlanReportRequest request) {
+    public UiPlanReportDTO getUiReport(UiPlanReportRequest request) {
         return microService.postForData(serviceName, BASE_URL + "/plan/report", request, UiPlanReportDTO.class);
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/PermissionConstants.java
Patch:
@@ -93,6 +93,7 @@ public class PermissionConstants {
     public static final String PROJECT_TRACK_CASE_READ_CREATE = "PROJECT_TRACK_CASE:READ+CREATE";
     public static final String PROJECT_TRACK_CASE_READ_EDIT = "PROJECT_TRACK_CASE:READ+EDIT";
     public static final String PROJECT_TRACK_CASE_READ_DELETE = "PROJECT_TRACK_CASE:READ+DELETE";
+    public static final String PROJECT_TRACK_CASE_MINDER_OPERATE = "PROJECT_TRACK_CASE_MINDER:OPERATE";
     public static final String PROJECT_TRACK_CASE_READ_COPY = "PROJECT_TRACK_CASE:READ+COPY";
     public static final String PROJECT_TRACK_CASE_READ_IMPORT = "PROJECT_TRACK_CASE:READ+IMPORT";
     public static final String PROJECT_TRACK_CASE_READ_EXPORT = "PROJECT_TRACK_CASE:READ+EXPORT";

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -1335,8 +1335,8 @@ public TestPlanCaseReportResultDTO selectCaseDetailByTestPlanReport(Map reportCo
         //查找UI测试报告结果
         if (DiscoveryUtil.hasService(MicroServiceName.UI_TEST)) {
             LogUtil.info("测试计划报告【" + testPlanReportContentWithBLOBs.getTestPlanReportId() + "】开始查找UI测试报告结果");
-            Map<String, String> testPlanLoadCaseIdAndReportIdMap = this.parseCaseReportMap(testPlanReportContentWithBLOBs.getPlanLoadCaseReportStruct());
-            if (MapUtils.isNotEmpty(testPlanLoadCaseIdAndReportIdMap)) {
+            Map<String, String> testPlanUiCaseIdAndReportIdMap = this.parseCaseReportMap(testPlanReportContentWithBLOBs.getPlanUiScenarioReportStruct());
+            if (MapUtils.isNotEmpty(testPlanUiCaseIdAndReportIdMap)) {
                 ApiPlanReportRequest request = new ApiPlanReportRequest();
                 request.setConfig(reportConfig);
                 request.setPlanId(testPlanId);

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -911,14 +911,13 @@ public String run(String testPlanId, String projectId, String userId, String tri
                 LogUtil.error("测试计划执行查询场景用例失败!", e);
             }
         }
-        if (MapUtils.isNotEmpty(reportInfoDTO.getPlanScenarioIdMap())) {
+        if (MapUtils.isNotEmpty(reportInfoDTO.getUiScenarioIdMap())) {
             try {
-                uiScenarios = planTestPlanUiScenarioCaseService.getFailureListByIds(reportInfoDTO.getPlanScenarioIdMap().keySet());
+                uiScenarios = planTestPlanUiScenarioCaseService.getFailureListByIds(reportInfoDTO.getUiScenarioIdMap().keySet());
             } catch (Exception e) {
                 LogUtil.error("测试计划执行查询UI用例失败!", e);
             }
         }
-
         if (CollectionUtils.isNotEmpty(apiTestCases)) {
             //执行接口案例任务
             LoggerUtil.info("开始执行测试计划接口用例 " + planReportId);

File: test-track/backend/src/main/java/io/metersphere/plan/utils/TestPlanStatusCalculator.java
Patch:
@@ -73,7 +73,8 @@ public static void buildStatusResultMap(List<PlanReportCaseDTO> planReportCaseDT
             String status = item.getStatus();
             if (StringUtils.isNotBlank(status)
                     && !StringUtils.equalsAnyIgnoreCase(status, TestPlanTestCaseStatus.Underway.name(), TestPlanTestCaseStatus.Prepare.name(),
-                    ExecuteResult.UN_EXECUTE.getValue(), ExecuteResult.STOP.getValue(), ApiReportStatus.PENDING.name(), ApiReportStatus.STOPPED.name())) {
+                    ExecuteResult.UN_EXECUTE.getValue(), ExecuteResult.STOP.getValue(), ApiReportStatus.PENDING.name(), ApiReportStatus.STOPPED.name(),
+                    ApiReportStatus.RUNNING.name(), ApiReportStatus.RERUNNING.name())) {
                 // 计算执行过的数量
                 report.setExecuteCount(report.getExecuteCount() + 1);
                 if (StringUtils.equalsIgnoreCase(successStatus, status)) {

File: test-track/backend/src/main/java/io/metersphere/service/TrackService.java
Patch:
@@ -308,7 +308,7 @@ private double getPlanPassRage(String planId) {
         return testPlan.getPassRate();
     }
 
-    public List<ExecutedCaseInfoResult> findFailureCaseInfoByProjectIDAndLimitNumberInSevenDays(String projectId, String versionId, int limitNumber) {
+    public List<ExecutedCaseInfoResult> findFailureCaseInfoByProjectIDAndLimitNumberInSevenDays(String projectId, String versionId) {
 
         //获取7天之前的日期
         Date startDay = DateUtils.dateSum(new Date(), -6);
@@ -323,6 +323,7 @@ public List<ExecutedCaseInfoResult> findFailureCaseInfoByProjectIDAndLimitNumber
         if (startTime == null) {
             return new ArrayList<>(0);
         } else {
+            int limitNumber = 10;
             List<ExecutedCaseInfoResult> returnList = new ArrayList<>(limitNumber);
             ArrayList<ExecutedCaseInfoResult> allCaseExecList = new ArrayList<>();
             allCaseExecList.addAll(extTestPlanTestCaseMapper.findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(projectId, versionId, startTime.getTime(), limitNumber));

File: test-track/backend/src/main/java/io/metersphere/controller/TestCaseController.java
Patch:
@@ -200,8 +200,6 @@ public TestCase addTestCase(@RequestPart("request") EditTestCaseRequest request,
         if (StringUtils.isBlank(request.getId())) {
             //新增 后端生成 id
             request.setId(UUID.randomUUID().toString());
-        } else {
-            //复制，前端生成 id
         }
         return testCaseService.add(request, files);
     }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.api.dto.QueryAPIReportRequest;
-import io.metersphere.api.dto.datacount.ExecutedCaseInfoResult;
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiDefinitionExecResultExpand;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;
@@ -26,8 +25,6 @@ public interface ExtApiDefinitionExecResultMapper {
 
     long countByProjectIDAndCreateInThisWeek(@Param("projectId") String projectId, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
-    List<ExecutedCaseInfoResult> findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("versionId") String version, @Param("selectFunctionCase") boolean selectFunctionCase, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
-
     String selectExecResult(String resourceId);
 
     ApiDefinitionExecResultWithBLOBs selectPlanApiMaxResultByTestIdAndType(String resourceId, String type);

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.TestPlanApiCase;
+import io.metersphere.dto.ExecutedCaseInfoResult;
 import io.metersphere.plan.dto.CaseExecResult;
 import io.metersphere.plan.dto.TestPlanApiCaseInfoDTO;
 import org.apache.ibatis.annotations.Param;
@@ -17,6 +18,8 @@ public interface ExtTestPlanApiCaseMapper {
     @Select("SELECT id,test_plan_id,api_case_id,status FROM test_plan_api_case WHERE id = #{0} ")
     TestPlanApiCase selectBaseInfoById(String testId);
 
+    List<ExecutedCaseInfoResult> findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("versionId") String version, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
+
     List<ApiDefinitionExecResult> selectReportStatusByReportIds(@Param("ids") List<String> apiReportIdList);
 }
 

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.ApiScenarioReport;
 import io.metersphere.base.domain.TestPlanApiScenario;
+import io.metersphere.dto.ExecutedCaseInfoResult;
 import io.metersphere.plan.dto.CaseExecResult;
 import io.metersphere.plan.dto.TestPlanApiScenarioInfoDTO;
 import org.apache.ibatis.annotations.Param;
@@ -20,4 +21,6 @@ public interface ExtTestPlanScenarioCaseMapper {
     TestPlanApiScenario selectBaseInfoById(String testId);
 
     List<ApiScenarioReport> selectReportStatusByReportIds(@Param("ids") List<String> scenarioReportIdList);
+
+    List<ExecutedCaseInfoResult> findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("versionId") String version, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
 }

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.i18n.Translator;
 import io.metersphere.log.vo.OperatingLogDetails;
 import io.metersphere.plan.constant.ApiReportStatus;
+import io.metersphere.plan.dto.TestPlanDTO;
 import io.metersphere.plan.dto.*;
 import io.metersphere.plan.request.QueryTestPlanRequest;
 import io.metersphere.plan.request.TestPlanReportSaveRequest;

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -22,6 +22,7 @@
 import io.metersphere.log.vo.DetailColumn;
 import io.metersphere.log.vo.OperatingLogDetails;
 import io.metersphere.log.vo.track.TestPlanReference;
+import io.metersphere.plan.dto.TestPlanDTO;
 import io.metersphere.plan.dto.*;
 import io.metersphere.plan.job.TestPlanTestJob;
 import io.metersphere.plan.request.AddTestPlanRequest;

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -106,7 +106,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                     break;
                 case "xml":
                     if (CollectionUtils.isNotEmpty(this.xmlDataStruct)) {
-                        request = TcpTreeTableDataParser.treeTableData2Xml(this.xmlDataStruct);
+                        request = TcpTreeTableDataParser.treeTableData2Xml(this.xmlDataStruct, this.connectEncoding);
                     }
                     break;
                 case "raw":

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioModuleMapper.java
Patch:
@@ -12,4 +12,6 @@ public interface ExtApiScenarioModuleMapper {
     void updatePos(String id, Double pos);
 
     List<ApiScenarioModuleDTO> selectByIds(@Param("ids") Collection<String> ids);
+
+    List<String> selectResourcePoolIdByTestPlanScenarioIds(@Param("ids") List<String> resourceIds);
 }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -62,5 +62,7 @@ public interface ExtTestPlanApiCaseMapper {
     String selectProjectId(String id);
 
     List<TestPlanApiCase> selectByRefIds(@Param("ids") List<String> ids);
+
+    List<String> selectResourcePoolIdByTestPlanApiIds(@Param("ids") List<String> resourceIds);
 }
 

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanApiCaseController.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.automation.TestPlanApiDTO;
 import io.metersphere.api.dto.automation.TestPlanDTO;
 import io.metersphere.api.dto.definition.*;
+import io.metersphere.api.dto.plan.AutomationsRunInfoDTO;
 import io.metersphere.api.dto.plan.TestPlanApiCaseBatchRequest;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;
 import io.metersphere.base.domain.ApiScenarioReportWithBLOBs;
@@ -140,7 +141,7 @@ public List<Map> selectStatusForPlanReport(@PathVariable("planId") String planId
     }
 
     @PostMapping("/get/plan/env/map")
-    public Map<String, List<String>> getPlanProjectEnvMap(@RequestBody List<String> resourceIds) {
+    public AutomationsRunInfoDTO getPlanProjectEnvMap(@RequestBody List<String> resourceIds) {
         return testPlanApiCaseService.getPlanProjectEnvMap(resourceIds);
     }
 

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanScenarioCaseController.java
Patch:
@@ -226,7 +226,7 @@ public List<TestPlanScenarioDTO> buildResponse(@RequestBody List<TestPlanScenari
     }
 
     @PostMapping("/get/plan/env/map")
-    public Map<String, List<String>> getPlanProjectEnvMap(@RequestBody List<String> resourceIds) {
+    public AutomationsRunInfoDTO getPlanProjectEnvMap(@RequestBody List<String> resourceIds) {
         return testPlanScenarioCaseService.getPlanProjectEnvMap(resourceIds);
     }
 

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanReportRunInfoDTO.java
Patch:
@@ -17,7 +17,7 @@ public class TestPlanReportRunInfoDTO {
     private String runMode;
     private Map<String, List<String>> requestEnvMap;
 
-    private String resourcePool;
+    private List<String> resourcePools;
 
     // <测试计划场景关联表ID, <项目ID，环境ID>>
     private Map<String, Map<String, List<String>>> scenarioRunInfo;

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanSimpleReportDTO.java
Patch:
@@ -29,6 +29,8 @@ public class TestPlanSimpleReportDTO extends TestPlanReportContent {
      */
     private String runMode;
     private String resourcePool;
+
+    private List<String> resourcePools;
     private String envGroupName;
     private Map<String, List<String>> projectEnvMap;
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -876,6 +876,7 @@ public String run(String testPlanId, String projectId, String userId, String tri
         if (haveExecCase(testPlanId, true)) {
             this.verifyPool(projectId, runModeConfig);
         }
+
         //创建测试报告，然后返回的ID重新赋值为resourceID，作为后续的参数
         TestPlanScheduleReportInfoDTO reportInfoDTO = this.genTestPlanReport(planReportId, testPlanId, userId, triggerMode, runModeConfig);
         //定时任务执行重新设置实际开始时间

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanReportRunInfoDTO.java
Patch:
@@ -17,6 +17,8 @@ public class TestPlanReportRunInfoDTO {
     private String runMode;
     private Map<String, List<String>> requestEnvMap;
 
+    private String resourcePool;
+
     // <测试计划场景关联表ID, <项目ID，环境ID>>
     private Map<String, Map<String, List<String>>> scenarioRunInfo;
     // <测试计划场景关联表ID, <项目ID，环境ID>>

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -429,7 +429,8 @@ public static void mergeHashTree(MsTestElement element, LinkedList<MsTestElement
                             Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(MsTestElement::getId))),
                             ArrayList::new));
 
-            element.setHashTree((LinkedList<MsTestElement>) sourceList);
+            element.getHashTree().clear();
+            element.getHashTree().addAll(sourceList);
         } catch (Exception e) {
             element.setHashTree(targetHashTree);
         }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -718,7 +718,7 @@ public Boolean isExecuting(String planId) {
     }
 
     public List<TestPlanApiDTO> getFailureListByIds(Set<String> planApiCaseIds) {
-        return extTestPlanApiCaseMapper.getFailureListByIds(planApiCaseIds, null);
+        return buildCases(extTestPlanApiCaseMapper.getFailureListByIds(planApiCaseIds, null));
     }
 
     public List<ApiModuleDTO> getNodeByPlanId(List<String> projectIds, String planId, String protocol) {

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanScenarioCaseService.java
Patch:
@@ -994,7 +994,7 @@ public Boolean isExecuting(String planId) {
     }
 
     public List<TestPlanScenarioDTO> getListByIds(Set<String> ids) {
-        return extTestPlanScenarioCaseMapper.getFailureListByIds(ids, null);
+        return this.buildCases(extTestPlanScenarioCaseMapper.getFailureListByIds(ids, null));
     }
 
     public TestPlanEnvInfoDTO generateEnvironmentInfo(TestPlanReport testPlanReport) {

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -890,7 +890,6 @@ public String run(String testPlanId, String projectId, String userId, String tri
 
         LoggerUtil.info("预生成测试计划报告【" + reportInfoDTO.getTestPlanReport() != null ? reportInfoDTO.getTestPlanReport().getName() : StringUtils.EMPTY + "】计划报告ID[" + planReportId + "]");
 
-
         List<TestPlanApiDTO> apiTestCases = null;
         List<TestPlanScenarioDTO> scenarioCases = null;
         List<TestPlanUiScenarioDTO> uiScenarios = null;

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/UpdateApiModuleDTO.java
Patch:
@@ -18,5 +18,8 @@ public class UpdateApiModuleDTO {
     private Map<String, ApiModule> moduleMap;
     private List<ApiDefinitionWithBLOBs> definitionWithBLOBs;
     private List<ApiTestCaseWithBLOBs> caseWithBLOBs;
+    private List<ApiTestCaseWithBLOBs> repeatCaseList;
+    private Map<String, List<ApiDefinitionWithBLOBs>> repeatApiMap;
+
 
 }

File: test-track/backend/src/main/java/io/metersphere/controller/AttachmentController.java
Patch:
@@ -73,11 +73,13 @@ public List<FileAttachmentMetadata> listMetadata(@RequestBody AttachmentRequest
     }
 
     @PostMapping("/metadata/relate")
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.UPDATE, title = "#request.belongType", content = "#msClass.getLogDetails(#request.belongId, #request.belongType, #request.metadataRefIds, true)", msClass = AttachmentService.class)
     public void relate(@RequestBody AttachmentRequest request) {
         attachmentService.relate(request);
     }
 
     @PostMapping("/metadata/unrelated")
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.UPDATE, title = "#request.belongType", beforeEvent = "#msClass.getLogDetails(#request.belongId, #request.belongType, #request.metadataRefIds)", msClass = AttachmentService.class)
     public void unrelated(@RequestBody AttachmentRequest request) {
         attachmentService.unrelated(request);
     }

File: test-track/backend/src/main/java/io/metersphere/listener/ExecReportListener.java
Patch:
@@ -34,11 +34,12 @@ public class ExecReportListener {
 
     @KafkaListener(id = CONSUME_ID, topics = KafkaTopicConstants.TEST_PLAN_REPORT_TOPIC, groupId = "${spring.application.name}")
     public void consume(ConsumerRecord<?, String> record) {
-        LoggerUtil.info("Execute message received：", record.value());
         Object testIdObj = record.key();
         if (ObjectUtils.isEmpty(testIdObj)) {
+            LoggerUtil.info("Execute message. received：", record.value());
             this.testPlanReportTestEnded(record.value());
         } else {
+            LoggerUtil.info("Execute message. key:[" + testIdObj.toString() + "], received：", record.value());
             this.automationCaseTestEnd(testIdObj.toString());
         }
 

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseReviewMapper.java
Patch:
@@ -26,4 +26,6 @@ public interface ExtTestCaseReviewMapper {
      * @return Review ID
      */
     int checkIsHave(@Param("reviewId") String reviewId, @Param("projectIds") Set<String> projectIds);
+
+    String selectStatusById(@Param("id") String id);
 }

File: test-track/backend/src/main/java/io/metersphere/dto/TestReviewCaseDTO.java
Patch:
@@ -21,4 +21,5 @@ public class TestReviewCaseDTO extends TestCaseWithBLOBs {
     private String projectName;
     private String versionName;
     private List<TestCaseTestDTO> list;
+    private List<CustomFieldDao> fields;
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/FakeErrorLibraryDTO.java
Patch:
@@ -11,12 +11,12 @@
 
 @Getter
 @Setter
-public class ErrorReportLibraryParseDTO {
+public class FakeErrorLibraryDTO {
     private List<String> errorCodeList;
     private RequestResult result;
     private String requestStatus;
 
-    public ErrorReportLibraryParseDTO() {
+    public FakeErrorLibraryDTO() {
         this.errorCodeList = new ArrayList<>();
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -126,7 +126,7 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
         //添加csv
         ElementUtil.addApiVariables(config, tree, this.getProjectId());
         //增加误报、全局断言
-        HashTreeUtil.addPositive(envConfig, samplerHashTree, config, this.getProjectId());
+        HashTreeUtil.addPositive(envConfig, samplerHashTree, config, this.getProjectId(), jdbcSampler);
         //处理全局前后置脚本(步骤内)
         String environmentId = this.getEnvironmentId();
         if (environmentId == null) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/HttpConfig.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.scenario;
 
+import io.metersphere.api.dto.definition.FakeError;
 import io.metersphere.api.dto.definition.request.assertions.MsAssertions;
 import io.metersphere.api.dto.definition.request.processors.post.MsJSR223PostProcessor;
 import io.metersphere.api.dto.definition.request.processors.pre.MsJSR223PreProcessor;
@@ -30,6 +31,7 @@ public class HttpConfig {
     private List<MsAssertions> assertions;
     private List<MsAssertions> errorReportAssertions;
     private String description;
+    private FakeError fakeError;
 
 
     public HttpConfig initHttpConfig(HttpConfigCondition configCondition) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ResponseUtil.java
Patch:
@@ -3,7 +3,7 @@
 import com.fasterxml.jackson.core.util.DefaultIndenter;
 import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import io.metersphere.api.dto.ErrorReportLibraryParseDTO;
+import io.metersphere.api.dto.FakeErrorLibraryDTO;
 import io.metersphere.api.dto.RequestResultExpandDTO;
 import io.metersphere.commons.enums.ApiReportStatus;
 import io.metersphere.commons.enums.ResponseFormatType;
@@ -24,7 +24,7 @@ public static RequestResultExpandDTO parseByRequestResult(RequestResult baseResu
         //根据responseheader的信息来处理返回数据
         baseResult = ResponseUtil.parseResponseBodyByHeader(baseResult);
         //解析是否含有误报库信息
-        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(baseResult);
+        FakeErrorLibraryDTO errorCodeDTO = FakeErrorParse.parseAssertions(baseResult);
         RequestResult requestResult = errorCodeDTO.getResult();
         RequestResultExpandDTO expandDTO = new RequestResultExpandDTO();
         BeanUtils.copyBean(expandDTO, requestResult);

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/dto/RequestResult.java
Patch:
@@ -53,4 +53,6 @@ public void addPassAssertions() {
         this.passAssertions++;
     }
 
+    private String fakeErrorMessage;
+
 }

File: api-test/backend/src/main/java/io/metersphere/commons/constants/ElementConstants.java
Patch:
@@ -61,5 +61,5 @@ public class ElementConstants {
     public static final String MS_KEYSTORE_FILE_PATH = "MS-KEYSTORE-FILE-PATH";
     public static final String MS_KEYSTORE_FILE_PASSWORD = "MS-KEYSTORE-FILE-PASSWORD";
     public static final String VIRTUAL_STEPS = "VIRTUAL_STEPS";
-
+    public static final String REF = "$ref";
 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/JSONUtil.java
Patch:
@@ -37,7 +37,6 @@ public class JSONUtil {
             .disableHtmlEscaping()
             .serializeNulls()
             .create();
-    ;
 
     static {
         objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtTestPlanApiScenarioMapper {
     List<TestPlanApiScenario> selectPlanByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
 
     List<TestPlanApiScenario> selectByScenarioIds(@Param("ids") List<String> ids);
+
+    String selectPlanIdByTestPlanId(@Param("id") String id);
 }

File: api-test/backend/src/main/java/io/metersphere/controller/plan/ShareTestPlanApiReportController.java
Patch:
@@ -3,13 +3,12 @@
 import io.metersphere.api.dto.ApiReportResult;
 import io.metersphere.service.ShareInfoService;
 import io.metersphere.service.definition.ApiDefinitionService;
+import jakarta.annotation.Resource;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
 
-import jakarta.annotation.Resource;
-
 @RestController
 @RequestMapping("/share")
 public class ShareTestPlanApiReportController {
@@ -21,7 +20,7 @@ public class ShareTestPlanApiReportController {
 
     @GetMapping("/api/definition/report/getReport/{shareId}/{testId}")
     public ApiReportResult getApiReport(@PathVariable String shareId, @PathVariable String testId) {
-        shareInfoService.validateExpired(shareId);
+        shareInfoService.validate(shareId);
         return apiDefinitionService.getDbResult(testId);
     }
 }

File: performance-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -41,4 +41,6 @@ public interface ExtTestPlanLoadCaseMapper {
     List<String> selectIdByLoadCaseReportIdAndStatusIsRun(String reportId);
 
     void updateStatusNullById(String id);
+
+    String selectPlanIdByTestPlanId(@Param("id") String id);
 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1604,6 +1604,8 @@ public List<IssuesDao> getExportIssues(IssueExportRequest exportRequest, Boolean
         request.setWorkspaceId(exportRequest.getWorkspaceId());
         request.setSelectAll(exportRequest.getIsSelectAll());
         request.setExportIds(exportRequest.getExportIds());
+        // 高级搜索条件
+        request.setCombine(exportRequest.getCombine());
         // 列表排序
         request.setOrders(exportRequest.getOrders());
         request.setOrders(ServiceUtils.getDefaultOrderByField(request.getOrders(), "create_time"));

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -93,6 +93,8 @@ public interface ExtApiTestCaseMapper {
 
     List<ApiTestCaseWithBLOBs> unTrashCaseListByIds(@Param("ids") List<String> ids);
 
+    List<ApiTestCaseWithBLOBs> unTrashCaseListByApiIds(@Param("ids") List<String> apiIds);
+
     List<ApiCountChartResult> countByRequest(ApiCountRequest request);
 
     List<ApiTestCaseDTO> relevanceApiList(@Param("request") ApiTestCaseRequest request);

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -285,8 +285,10 @@ private List<ApiDefinitionWithBLOBs> dealHttpUrlRepeat(ApiModuleDTO chooseModule
         Boolean fullCoverageApi = getFullCoverageApi(request);
         String projectId = request.getProjectId();
         //系统内重复的数据
+        if (StringUtils.isBlank(request.getModuleId())) {
+            request.setModuleId(null);
+        }
         List<ApiDefinitionWithBLOBs> repeatApiDefinitionWithBLOBs = extApiDefinitionMapper.selectRepeatByBLOBsSameUrl(optionData, projectId, request.getModuleId());
-
         //这个是名称加请求方式加路径加模块为key的map 就是为了去重
         Map<String, ApiDefinitionWithBLOBs> optionMap = new HashMap<>();
         //这个是系统内重复的数据

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiTestCaseService.java
Patch:
@@ -609,7 +609,7 @@ public List<ApiTestCase> selectCasesBydIds(List<String> caseIds) {
     }
 
     public List<ApiTestCaseWithBLOBs> selectCasesBydApiIds(List<String> apiIds) {
-        return extApiTestCaseMapper.unTrashCaseListByIds(apiIds);
+        return extApiTestCaseMapper.unTrashCaseListByApiIds(apiIds);
     }
 
     public Map<String, String> getRequest(ApiTestCaseRequest request) {

File: performance-test/backend/src/main/java/io/metersphere/service/MetricQueryService.java
Patch:
@@ -133,7 +133,7 @@ private List<MetricData> handleResult(String seriesName, Map response, String in
                         LogUtil.error(e.getMessage(), e);
                         LogUtil.error(e);
                     }
-                    values.add((double) ja.get(1));
+                    values.add(Double.valueOf(ja.get(1).toString()));
                 });
 
                 if (CollectionUtils.isNotEmpty(values)) {

File: test-track/backend/src/main/java/io/metersphere/excel/converter/TestReviewCaseStatus.java
Patch:
@@ -6,7 +6,8 @@ public enum TestReviewCaseStatus {
     UnPass("execute_not_pass", 2),
     Underway("test_case_review_status_underway", 3),
     Again("test_case_status_again", 4),
-    Prepare("test_case_status_prepare", 5);
+    Prepare("test_case_status_prepare", 5),
+    Rereview("test_case_review_status_re_review", 6);
 
     private String i18nKey;
     private Integer order;

File: test-track/backend/src/main/java/io/metersphere/controller/TestCaseController.java
Patch:
@@ -65,6 +65,7 @@ public Pager<List<TestCaseDTO>> list(@PathVariable int goPage, @PathVariable int
     @PostMapping("/public/list/{goPage}/{pageSize}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ)
     public Pager<List<TestCaseDTO>> publicList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestCaseRequest request) {
+        testCaseService.setPublicListRequestParam(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testCaseService.publicListTestCase(request));
     }

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger3Parser.java
Patch:
@@ -709,7 +709,9 @@ public SwaggerApiExportResult swagger3Export(List<ApiDefinitionWithBLOBs> apiDef
             paths.optJSONObject(apiDefinition.getPath()).put(apiDefinition.getMethod().toLowerCase(), methodDetail);
         }
         result.setPaths(JSONUtil.parseObjectNode(paths.toString()));
-        components.put("schemas", schemas.get(0));
+        if (CollectionUtils.isNotEmpty(schemas)) {
+            components.put("schemas", schemas.get(0));
+        }
         result.setComponents(JSONUtil.parseObjectNode(components.toString()));
         return result;
     }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.dto.definition.*;
 import io.metersphere.api.dto.definition.request.assertions.document.DocumentElement;
+import io.metersphere.api.dto.definition.request.auth.MsAuthManager;
 import io.metersphere.api.dto.definition.request.sampler.MsHTTPSamplerProxy;
 import io.metersphere.api.dto.definition.request.sampler.MsJDBCSampler;
 import io.metersphere.api.dto.definition.request.sampler.MsTCPSampler;
@@ -1369,7 +1370,8 @@ public String setAuthParams(ScheduleRequest request) {
         configObj.put(ARGUMENTS, request.getArguments());
         // 设置 BaseAuth 参数
         if (request.getAuthManager() != null && StringUtils.isNotBlank(request.getAuthManager().getUsername()) && StringUtils.isNotBlank(request.getAuthManager().getPassword())) {
-            configObj.put("authManager", request.getAuthManager());
+            MsAuthManager authManager = request.getAuthManager();
+            configObj.put("authManager", JSONUtil.parseObject(JSONUtil.toJSONString(authManager)));
         }
         return configObj.toString();
     }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -285,7 +285,7 @@ private List<ApiDefinitionWithBLOBs> dealHttpUrlRepeat(ApiModuleDTO chooseModule
         Boolean fullCoverageApi = getFullCoverageApi(request);
         String projectId = request.getProjectId();
         //系统内重复的数据
-        List<ApiDefinitionWithBLOBs> repeatApiDefinitionWithBLOBs = extApiDefinitionMapper.selectRepeatByBLOBs(optionData, projectId);
+        List<ApiDefinitionWithBLOBs> repeatApiDefinitionWithBLOBs = extApiDefinitionMapper.selectRepeatByBLOBsSameUrl(optionData, projectId, request.getModuleId());
 
         //这个是名称加请求方式加路径加模块为key的map 就是为了去重
         Map<String, ApiDefinitionWithBLOBs> optionMap = new HashMap<>();

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -2325,7 +2325,7 @@ private void copyMockByVersion(Map<String, String> sourceApiIdRefIdMap, Map<Stri
     private void copyCaseByVersion(List<String> chooseApiIdList, Map<String, String> sourceApiIdRefIdMap, Map<String, ApiDefinition> refIdMap, SqlSession batchSqlSession) {
         long timeStamp = System.currentTimeMillis();
         List<ApiTestCaseWithBLOBs> sourceApiCaseList = apiTestCaseService.selectCasesBydApiIds(new ArrayList<>(sourceApiIdRefIdMap.keySet()));
-        List<ApiTestCase> caseInChooseApi = apiTestCaseService.selectSimpleCasesBydApiIds(chooseApiIdList);
+        List<ApiTestCaseWithBLOBs> caseInChooseApi = apiTestCaseService.selectCasesBydApiIds(chooseApiIdList);
         Map<String, Map<String, ApiTestCase>> apiIdOldCaseMap = new HashMap<>();
         caseInChooseApi.forEach(item -> {
             String caseName = StringUtils.trim(item.getName());

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -25,7 +25,7 @@ public interface ExtApiScenarioReportMapper {
 
     long countByProjectIdAndCreateAndByScheduleInThisWeek(@Param("projectId") String projectId, @Param("executeType") String executeType, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
-    List<ApiDataCountResult> countByProjectIdGroupByExecuteResult(@Param("projectId") String projectId, @Param("version") String version);
+    List<ApiDataCountResult> countByProjectIdGroupByExecuteResult(@Param("projectId") String projectId, @Param("executeType") String executeType, @Param("version") String version);
 
     List<ApiScenarioReport> selectLastReportByIds(@Param("scenarioIdList") List<String> ids);
 

File: api-test/backend/src/main/java/io/metersphere/controller/home/ApiHomeController.java
Patch:
@@ -26,11 +26,11 @@
 import io.metersphere.service.scenario.ApiScenarioReportService;
 import io.metersphere.service.scenario.ApiScenarioService;
 import io.metersphere.task.service.TaskService;
+import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 
-import jakarta.annotation.Resource;
 import java.text.DecimalFormat;
 import java.util.ArrayList;
 import java.util.Date;
@@ -196,7 +196,7 @@ public ApiDataCountDTO scheduleTaskCount(@PathVariable String projectId, @PathVa
         long executedTimes = apiAutomationService.countExecuteTimesByProjectID(projectId, ReportTriggerMode.SCHEDULE.name(), ExecutionExecuteTypeEnum.BASIC.name(), versionId);
         apiCountResult.setExecutedTimes(executedTimes);
         //统计 失败 成功 以及总数
-        List<ApiDataCountResult> allExecuteResult = apiScenarioReportService.countByProjectIdGroupByExecuteResult(projectId, versionId);
+        List<ApiDataCountResult> allExecuteResult = apiScenarioReportService.countByProjectIdGroupByExecuteResult(projectId, ExecutionExecuteTypeEnum.BASIC.name(), versionId);
         apiCountResult.countScheduleExecute(allExecuteResult);
         if (executedTimes != 0) {
             float passRateNumber = (float) apiCountResult.getPassCount() * 100 / executedTimes;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/dto/CustomFieldItemDTO.java
Patch:
@@ -10,4 +10,5 @@ public class CustomFieldItemDTO {
     private String type;
     private String key;
     private String customData;
+    private String optionLabel;
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/dto/CustomFieldResourceDTO.java
Patch:
@@ -18,5 +18,6 @@
 public class CustomFieldResourceDTO extends CustomFieldTestCase implements Serializable {
     private String name;
     private String type;
+    private String optionLabel;
     private static final long serialVersionUID = 1L;
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/service/BaseCustomFieldService.java
Patch:
@@ -78,6 +78,7 @@ private CustomFieldResourceDTO constructorCustomFieldResourceDTO(CustomFieldItem
         } else {
             resource.setValue(JSON.toJSONString(dto.getValue()));
         }
+        resource.setOptionLabel(dto.getOptionLabel());
         return resource;
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -321,10 +321,9 @@ private void assemblyPlanScenario(RunScenarioRequest request, Map<String, RunMod
                 }
                 //对报告的envMap做过滤，过滤多余的key
                 Map<String, String> diffEnvMap = new HashMap<>();
-                Map<String, String> envMap = runModeConfig.getEnvMap();
                 planEnvMap.forEach((k, v) -> {
-                    if (envMap != null && envMap.get(k) != null) {
-                        diffEnvMap.put(k, envMap.get(k));
+                    if (StringUtils.equals(planApiScenario.getProjectId(), k)) {
+                        diffEnvMap.put(k, v);
                     }
                 });
                 runModeConfig.setEnvMap(diffEnvMap);

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1482,7 +1482,9 @@ public void render(TestPlanSimpleReportDTO report, HttpServletResponse response)
     }
 
     public TestPlanSimpleReportDTO getShareReport(ShareInfo shareInfo, String planId) {
-        HttpHeaderUtils.runAsUser(shareInfo.getCreateUserId());
+        if (SessionUtils.getUser() == null) {
+            HttpHeaderUtils.runAsUser(shareInfo.getCreateUserId());
+        }
         try {
             return getReport(planId, null);
         } finally {

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportStructureService.java
Patch:
@@ -567,6 +567,8 @@ private ApiScenarioReportDTO getReport(String reportId, boolean selectContent) {
         if (CollectionUtils.isNotEmpty(reportStructureWithBLOBs) && CollectionUtils.isNotEmpty(reportResults)) {
             ApiScenarioReportStructureWithBLOBs scenarioReportStructure = reportStructureWithBLOBs.get(0);
             List<StepTreeDTO> stepList = JSON.parseArray(new String(scenarioReportStructure.getResourceTree(), StandardCharsets.UTF_8), StepTreeDTO.class);
+            //过滤掉前后置脚本。否则会影响到下面几行的统计数据。
+            reportResults = this.filterProcessResult(reportResults);
 
             reportDTO.setTotal(reportResults.size());
             reportDTO.setError(reportResults.stream().filter(e -> StringUtils.equals(e.getStatus(), ApiReportStatus.ERROR.name())).collect(Collectors.toList()).size());

File: test-track/backend/src/main/java/io/metersphere/controller/TestCaseController.java
Patch:
@@ -337,7 +337,6 @@ public void deleteToGcBatch(@RequestBody TestCaseBatchRequest request) {
     }
 
     @PostMapping("/batch/movePublic/deleteToGc")
-    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ_DELETE)
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#request.ids)", msClass = TestCaseService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, target = "#targetClass.findByBatchRequest(#request)", targetClass = TestCaseService.class,
             event = NoticeConstants.Event.DELETE, subject = "测试用例通知")

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/aspect/MsLogAspect.java
Patch:
@@ -21,7 +21,7 @@
 import org.aspectj.lang.reflect.MethodSignature;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.ApplicationContext;
-import org.springframework.core.LocalVariableTableParameterNameDiscoverer;
+import org.springframework.core.StandardReflectionParameterNameDiscoverer;
 import org.springframework.expression.EvaluationContext;
 import org.springframework.expression.Expression;
 import org.springframework.expression.ExpressionParser;
@@ -50,7 +50,7 @@ public class MsLogAspect {
     /**
      * 将方法参数纳入Spring管理
      */
-    LocalVariableTableParameterNameDiscoverer discoverer = new LocalVariableTableParameterNameDiscoverer();
+    StandardReflectionParameterNameDiscoverer discoverer = new StandardReflectionParameterNameDiscoverer();
 
     @Autowired
     private ApplicationContext applicationContext;

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/dto/RunModeConfigDTO.java
Patch:
@@ -26,6 +26,9 @@ public class RunModeConfigDTO {
      * 运行环境
      */
     private Map<String, String> envMap;
+
+    //测试计划整体执行时的默认环境
+    private Map<String, List<String>> testPlanDefaultEnvMap;
     private String environmentType;
     private String environmentGroupId;
     //ui 测试

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanReportRunInfoDTO.java
Patch:
@@ -15,7 +15,7 @@ public class TestPlanReportRunInfoDTO {
     private String envGroupId;
 
     private String runMode;
-    private Map<String, String> requestEnvMap;
+    private Map<String, List<String>> requestEnvMap;
 
     // <测试计划场景关联表ID, <项目ID，环境ID>>
     private Map<String, Map<String, List<String>>> scenarioRunInfo;

File: test-track/backend/src/main/java/io/metersphere/plan/request/api/TestPlanRunRequest.java
Patch:
@@ -20,6 +20,7 @@ public class TestPlanRunRequest {
     private boolean runWithinResourcePool;//是否选择资源池
     private String resourcePoolId;//资源池Id
     private Map<String, String> envMap;
+    private Map<String, List<String>> testPlanDefaultEnvMap;
     private String environmentType;
     private String environmentGroupId;
     private List<String> testPlanIds;

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -840,7 +840,7 @@ public String run(String testPlanId, String projectId, String userId, String tri
 
         //环境参数为空时，依据测试计划保存的环境执行
         if (((StringUtils.equals("GROUP", runModeConfig.getEnvironmentType()) && StringUtils.isBlank(runModeConfig.getEnvironmentGroupId()))
-                || (!StringUtils.equals("GROUP", runModeConfig.getEnvironmentType()) && MapUtils.isEmpty(runModeConfig.getEnvMap())))
+                || (!StringUtils.equals("GROUP", runModeConfig.getEnvironmentType()) && MapUtils.isEmpty(runModeConfig.getEnvMap()) && MapUtils.isEmpty(runModeConfig.getTestPlanDefaultEnvMap())))
                 && !StringUtils.equals(executionWay, ExecutionWay.RUN.name())) {
             TestPlanWithBLOBs testPlanWithBLOBs = testPlanMapper.selectByPrimaryKey(testPlanId);
             if (StringUtils.isNotEmpty(testPlanWithBLOBs.getRunModeConfig())) {
@@ -853,6 +853,7 @@ public String run(String testPlanId, String projectId, String userId, String tri
                         Map<String, String> envMap = testPlanRunRequest.getEnvMap();
                         String environmentGroupId = testPlanRunRequest.getEnvironmentGroupId();
                         runModeConfig = getRunModeConfigDTO(testPlanRunRequest, envType, envMap, environmentGroupId, testPlanId);
+                        runModeConfig.setTestPlanDefaultEnvMap(testPlanRunRequest.getTestPlanDefaultEnvMap());
                         if (!testPlanRunRequest.isRunWithinResourcePool()) {
                             runModeConfig.setResourcePoolId(null);
                         }
@@ -1637,6 +1638,7 @@ public String runPlan(TestPlanRunRequest testplanRunRequest) {
         String environmentGroupId = testplanRunRequest.getEnvironmentGroupId();
         String testPlanId = testplanRunRequest.getTestPlanId();
         RunModeConfigDTO runModeConfig = getRunModeConfigDTO(testplanRunRequest, envType, envMap, environmentGroupId, testPlanId);
+        runModeConfig.setTestPlanDefaultEnvMap(testplanRunRequest.getTestPlanDefaultEnvMap());
 
         String apiRunConfig = JSON.toJSONString(runModeConfig);
         return this.run(testPlanId, testplanRunRequest.getProjectId(),

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -88,6 +88,7 @@ public class MsHashTreeService {
     private static final String FOLLOW_REDIRECTS = "followRedirects";
     private static final String AUTO_REDIRECTS = "autoRedirects";
     private static final String ALIAS = "alias";
+    private static final String INDEX = "index";
 
     public void setHashTree(JSONArray hashTree) {
         // 将引用转成复制
@@ -145,6 +146,7 @@ private JSONObject setRequest(JSONObject element) {
             if (apiTestCase != null) {
                 if (StringUtils.equalsIgnoreCase(element.optString(REFERENCED), REF)) {
                     JSONObject refElement = JSONUtil.parseObject(apiTestCase.getRequest());
+                    refElement.remove(INDEX);
                     ElementUtil.dataFormatting(refElement);
                     JSONArray array = refElement.optJSONArray(HASH_TREE);
                     ElementUtil.copyBean(element, refElement);

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/EnterpriseTestReportService.java
Patch:
@@ -374,8 +374,8 @@ private String genReportContent(EnterpriseTestReportWithBLOBs report, boolean is
                 }
                 reportContent.append(previweContent);
             } else if (isReportStep(step.getType())) {
-                if (isSchedule) {
-                    //定时任务触发的数据，需要检查图片是否需要重新生成。如果生成不成功就不贴图
+                if (isSchedule && syncReportMap.containsKey(step.getReportRecordId())) {
+                    //定时任务触发的数据，需要检查图片是否需要重新生成。如果生成失败，syncReportMap里有对应的步骤id，但是没有图片数据
                     String imageFile = syncReportMap.get(step.getReportRecordId());
                     if (StringUtils.isNotEmpty(imageFile)) {
                         step.setRecordImageContent(imageFile);

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseNodeService.java
Patch:
@@ -96,6 +96,7 @@ private void validateNode(TestCaseNode node) {
             throw new RuntimeException(Translator.get("test_case_node_level_tip")
                     + TestCaseConstants.MAX_NODE_DEPTH + Translator.get("test_case_node_level"));
         }
+        this.checkTestCaseNodeExist(node);
     }
 
     private void checkTestCaseNodeExist(TestCaseNode node) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -277,7 +277,7 @@ private void setNewConfig(Map<String, EnvironmentConfig> envConfig, ParameterCon
                 String environmentGroupId = scenario.getEnvironmentGroupId();
                 if (StringUtils.equals(environmentType, EnvironmentType.GROUP.name())) {
                     this.environmentMap = environmentGroupProjectService.getEnvMap(environmentGroupId);
-                } else if (StringUtils.equals(environmentType, EnvironmentType.JSON.name())) {
+                } else if (StringUtils.isNotEmpty(environmentJson) && StringUtils.equals(environmentType, EnvironmentType.JSON.name())) {
                     this.environmentMap = JSON.parseObject(environmentJson, Map.class);
                 }
             } else {

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -293,7 +293,7 @@ public void addDemandHyperLinkBatch(List<String> testcaseIds, String projectId)
         // AzureDevops 才处理
         if (StringUtils.equals(project.getPlatform(), IssuesManagePlatform.AzureDevops.name())) {
             testcaseIds.forEach(id -> {
-                TestCaseWithBLOBs testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(testcaseIds.get(0));
+                TestCaseWithBLOBs testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(id);
                 if (testCaseWithBLOBs != null) {
                     EditTestCaseRequest request = new EditTestCaseRequest();
                     BeanUtils.copyBean(request, testCaseWithBLOBs);

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanReportRunInfoDTO.java
Patch:
@@ -15,6 +15,8 @@ public class TestPlanReportRunInfoDTO {
     private String envGroupId;
 
     private String runMode;
+    private Map<String, String> requestEnvMap;
+
     // <测试计划场景关联表ID, <项目ID，环境ID>>
     private Map<String, Map<String, List<String>>> scenarioRunInfo;
     // <测试计划场景关联表ID, <项目ID，环境ID>>
@@ -47,7 +49,7 @@ public void putScenarioRunInfo(String scenarioResourceId, String projectId, Stri
             }});
         }
     }
-    
+
     public void putUiScenarioRunInfo(String scenarioResourceId, String projectId, String environmentId) {
         if (uiScenarioRunInfo.containsKey(scenarioResourceId)) {
             if (uiScenarioRunInfo.get(scenarioResourceId).containsKey(projectId)) {

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1332,6 +1332,7 @@ public TestPlanReportBuildResultDTO buildPlanReport(TestPlanReport testPlanRepor
                 config = JSON.parseMap(reportConfig);
             }
             TestPlanExecuteReportDTO testPlanExecuteReportDTO = testPlanReportService.genTestPlanExecuteReportDTOByTestPlanReportContent(testPlanReportContentWithBLOBs);
+
             TestPlanSimpleReportDTO report = null;
             boolean apiBaseInfoChanged = false;
             if (StringUtils.isEmpty(testPlanReportContentWithBLOBs.getApiBaseCount())) {

File: test-track/backend/src/main/java/io/metersphere/excel/handler/FunctionCaseTemplateWriteHandler.java
Patch:
@@ -92,15 +92,15 @@ public void afterRowDispose(RowWriteHandlerContext context) {
             if (CollectionUtils.isEmpty(list)) {
                 setComment(priorityIndex, Translator.get("options").concat("（P0、P1、P2、P3）"));
             } else {
-                setComment(priorityIndex, Translator.get("options").concat(JSON.toJSONString(list)));
+                setComment(priorityIndex, Translator.get("options").concat(JSON.toJSONString(list)).concat(Translator.get("cannot_ignore_case")));
             }
 
             list.clear();
             if (MapUtils.isNotEmpty(caseLevelAndStatusValueMap) && caseLevelAndStatusValueMap.containsKey("caseStatus")) {
                 list = caseLevelAndStatusValueMap.get("caseStatus");
             }
             if (CollectionUtils.isNotEmpty(list)) {
-                setComment(statusIndex, Translator.get("options").concat(JSON.toJSONString(list)));
+                setComment(statusIndex, Translator.get("options").concat(JSON.toJSONString(list)).concat(Translator.get("cannot_ignore_case")));
             }
         }
 

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1018,6 +1018,9 @@ private void syncPluginIssueAttachment(Platform platform, Map<String, List<Platf
                         .collect(Collectors.toSet());
 
                 List<PlatformAttachment> syncAttachments = attachmentMap.get(issueId);
+                if (CollectionUtils.isEmpty(syncAttachments)) {
+                    continue;
+                }
                 for (PlatformAttachment syncAttachment : syncAttachments) {
                     String fileName = syncAttachment.getFileName();
                     String fileKey = syncAttachment.getFileKey();

File: test-track/backend/src/main/java/io/metersphere/service/AttachmentService.java
Patch:
@@ -246,11 +246,11 @@ public List<FileAttachmentMetadata> listMetadata(AttachmentRequest request) {
                         file.setIsRelatedDeleted(Boolean.FALSE);
                         file.setName(fileMetadata.getName());
                         file.setSize(fileMetadata.getSize());
-                        List<User> users = userMap.get(fileMetadata.getCreateUser());
+                        List<User> users = userMap.get(file.getCreator());
                         if (CollectionUtils.isNotEmpty(users)) {
                             file.setCreator(users.get(0).getName());
                         } else {
-                            file.setCreator(fileMetadata.getCreateUser());
+                            file.setCreator(file.getCreator());
                         }
                         file.setCreateTime(fileMetadata.getCreateTime());
                     } else {
@@ -294,7 +294,7 @@ public void relate(AttachmentRequest request) {
                 FileAttachmentMetadata fileAttachmentMetadata = new FileAttachmentMetadata();
                 BeanUtils.copyBean(fileAttachmentMetadata, fileMetadata);
                 fileAttachmentMetadata.setId(record.getAttachmentId());
-                fileAttachmentMetadata.setCreator(fileMetadata.getCreateUser() == null ? StringUtils.EMPTY : fileMetadata.getCreateUser());
+                fileAttachmentMetadata.setCreator(SessionUtils.getUserId());
                 fileAttachmentMetadata.setFilePath(fileMetadata.getPath() == null ? StringUtils.EMPTY : fileMetadata.getPath());
                 fileAttachmentMetadataBatchMapper.insert(fileAttachmentMetadata);
                 // 缺陷类型的附件, 关联时需单独同步第三方平台

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2213,7 +2213,7 @@ public TestCase add(EditTestCaseRequest request, List<MultipartFile> files) {
                     FileAttachmentMetadata fileAttachmentMetadata = new FileAttachmentMetadata();
                     BeanUtils.copyBean(fileAttachmentMetadata, fileMetadata);
                     fileAttachmentMetadata.setId(record.getAttachmentId());
-                    fileAttachmentMetadata.setCreator(fileMetadata.getCreateUser() == null ? StringUtils.EMPTY : fileMetadata.getCreateUser());
+                    fileAttachmentMetadata.setCreator(SessionUtils.getUserId());
                     fileAttachmentMetadata.setFilePath(fileMetadata.getPath() == null ? StringUtils.EMPTY : fileMetadata.getPath());
                     fileAttachmentMetadataBatchMapper.insert(fileAttachmentMetadata);
                 });

File: api-test/backend/src/main/java/io/metersphere/service/RemakeReportService.java
Patch:
@@ -23,7 +23,6 @@ public void testEnded(JmeterRunRequestDTO request, String errorMsg) {
             BeanUtils.copyBean(dto, request);
             dto.setQueueId(request.getQueueId());
             dto.setTestId(request.getTestId());
-            dto.setRemake(true);
             LoggerUtil.info("进入异常结果处理：" + dto.getRunMode() + " 整体处理完成", dto.getReportId());
             // 全局并发队列
             PoolExecBlockingQueueUtil.offer(dto.getReportId());

File: api-test/backend/src/main/java/io/metersphere/service/TestResultService.java
Patch:
@@ -263,7 +263,7 @@ public void testEnded(ResultDTO dto) {
                     sendTask(reportTask, dto.getTestId());
                 }
             }
-        } else if (apiRunModes.contains(dto.getRunMode()) && dto.isRemake()) {
+        } else if (apiRunModes.contains(dto.getRunMode())) {
             // 只处理RUNNING中的执行报告
             updateRunningResult(dto);
         }

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/dto/ResultDTO.java
Patch:
@@ -17,7 +17,6 @@ public class ResultDTO {
     private String runType;
     private String console;
     private String runningDebugSampler;
-    private boolean isRemake;
     // 失败重试
     private boolean retryEnable;
     /**

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -195,7 +195,9 @@ public List<ApiScenarioWithBLOBs> get(RunScenarioRequest request) {
             // 测试计划执行数据查询
             List<TestPlanApiScenarioInfoDTO> testPlanApiScenarioList;
             if (CollectionUtils.isNotEmpty(request.getPlanScenarioIds())) {
-                testPlanApiScenarioList = extTestPlanScenarioCaseMapper.selectByPlanIds(request.getPlanScenarioIds());
+                testPlanApiScenarioList = extTestPlanScenarioCaseMapper.selectByPlanScenarioIds(request.getPlanScenarioIds(),
+                        "\"" + StringUtils.join(request.getPlanScenarioIds(), ",") + "\"");
+
             } else {
                 testPlanApiScenarioList = extTestPlanScenarioCaseMapper.selectLegalDataByTestPlanId(request.getTestPlanId());
             }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/service/FileMetadataService.java
Patch:
@@ -252,7 +252,8 @@ private byte[] loadFileAsBytes(FileMetadataWithBLOBs fileMetadata) {
             request.setUpdateTime(fileMetadata.getUpdateTime());
             bytes = fileManagerService.downloadFile(request);
         }
-        return bytes;
+
+        return Objects.requireNonNullElseGet(bytes, () -> new byte[0]);
     }
 
     public ResponseEntity<byte[]> getFile(String fileId) {

File: framework/gateway/src/main/java/io/metersphere/gateway/filter/LoginFilter.java
Patch:
@@ -37,6 +37,8 @@ public void init() {
         basePattern = new PathPatternParser().parse("/**");
         // 网关首页
         excludePatterns.add(new PathPatternParser().parse("/"));
+        // 认证源查询
+        excludePatterns.add(new PathPatternParser().parse("/authsource/*"));
 
         // 各模块首页
         swaggerUiConfigProperties.getUrls().forEach(v -> excludePatterns.add(new PathPatternParser().parse("/" + v.getName())));

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -6,4 +6,6 @@
 
 public interface ExtTestPlanScenarioCaseMapper {
     List<TestPlanApiScenarioInfoDTO> selectLegalDataByTestPlanId(String planId);
+
+    List<TestPlanApiScenarioInfoDTO> selectLegalUiDataByTestPlanId(String planId);
  }

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1602,6 +1602,8 @@ private Map<String, List<String>> mergeUiScenarioEnv(String planId, Map<String,
                             environmentIds.add(eId);
                         }
                     });
+                } else {
+                    scenarioEnv.put(entry.getKey(), entry.getValue());
                 }
             });
         }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiFileUtil.java
Patch:
@@ -204,6 +204,7 @@ private static void getAttachmentFileByTestElement(TestElement testElement, Stri
                 attachmentBodyFile.setFileUpdateTime(fileMetadata.getUpdateTime());
                 attachmentBodyFile.setProjectId(fileMetadata.getProjectId());
                 attachmentBodyFile.setFilePath(path);
+                attachmentBodyFile.setFileType(fileMetadata.getType());
                 if (StringUtils.isNotBlank(fileMetadata.getAttachInfo())) {
                     attachmentBodyFile.setFileAttachInfoJson(fileMetadata.getAttachInfo());
                 }
@@ -212,10 +213,11 @@ private static void getAttachmentFileByTestElement(TestElement testElement, Stri
                 if (!isLocal) {
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_STORAGE.name(), fileMetadata.getStorage());
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_NAME.name(), fileMetadata.getName());
+                    testElement.setProperty(JmxFileMetadataColumns.REF_FILE_TYPE.name(), fileMetadata.getType());
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_UPDATE_TIME.name(), fileMetadata.getUpdateTime());
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_PROJECT_ID.name(), fileMetadata.getProjectId());
                 } else {
-                    path = temporaryFileUtil.generateFilePath(attachmentBodyFile.getProjectId(), attachmentBodyFile.getFileMetadataId(), attachmentBodyFile.getFileUpdateTime(), attachmentBodyFile.getName());
+                    path = temporaryFileUtil.generateFilePath(attachmentBodyFile.getProjectId(), attachmentBodyFile.getFileMetadataId(), attachmentBodyFile.getFileUpdateTime(), attachmentBodyFile.getName(), attachmentBodyFile.getFileType());
                 }
 
                 testElement.setProperty(ElementConstants.FILENAME, path);

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/dto/AttachmentBodyFile.java
Patch:
@@ -8,6 +8,7 @@
 public class AttachmentBodyFile {
     private String id;
     private String name;
+    private String fileType;
     // 调试附件处理
     private String refResourceId;
 

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/enums/JmxFileMetadataColumns.java
Patch:
@@ -5,5 +5,6 @@ public enum JmxFileMetadataColumns {
     REF_FILE_UPDATE_TIME,
     REF_FILE_PROJECT_ID,
     REF_FILE_NAME,
+    REF_FILE_TYPE,
     JAR_PATH_CONFIG,
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/dto/FileInfoDTO.java
Patch:
@@ -8,6 +8,8 @@
 public class FileInfoDTO {
     private String id;
     private String fileName;
+
+    private String type;
     private String projectId;
     private long fileLastUpdateTime;
     private String storage;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/GitFileRepository.java
Patch:
@@ -101,6 +101,7 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> allRequests) throws Exce
                         FileInfoDTO repositoryFileDTO = new FileInfoDTO(
                                 fileRequest.getResourceId(),
                                 MetadataUtils.getFileNameByRemotePath(gitFileInfo.getFilePath()),
+                                fileRequest.getType(),
                                 fileRequest.getProjectId(),
                                 fileRequest.getUpdateTime(),
                                 StorageConstants.GIT.name(),

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/LocalFileRepository.java
Patch:
@@ -118,7 +118,7 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce
                     throw new RuntimeException(e);
                 }
                 return new FileInfoDTO(
-                        fileRequest.getResourceId(), fileRequest.getFileName(),
+                        fileRequest.getResourceId(), fileRequest.getFileName(), fileRequest.getType(),
                         fileRequest.getProjectId(), fileRequest.getUpdateTime(),
                         fileRequest.getStorage(), fileRequest.getPath(), content);
             }).collect(Collectors.toList());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/MinIOFileRepository.java
Patch:
@@ -133,7 +133,7 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce
         List<FileInfoDTO> list = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(requestList)) {
             for (FileRequest fileRequest : requestList) {
-                FileInfoDTO fileInfoDTO = new FileInfoDTO(fileRequest.getResourceId(), fileRequest.getFileName(), fileRequest.getProjectId(), fileRequest.getUpdateTime(), fileRequest.getStorage(), fileRequest.getPath(), this.getFile(fileRequest));
+                FileInfoDTO fileInfoDTO = new FileInfoDTO(fileRequest.getResourceId(), fileRequest.getFileName(), fileRequest.getType(), fileRequest.getProjectId(), fileRequest.getUpdateTime(), fileRequest.getStorage(), fileRequest.getPath(), this.getFile(fileRequest));
                 list.add(fileInfoDTO);
             }
         }

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportStructureService.java
Patch:
@@ -567,8 +567,6 @@ private ApiScenarioReportDTO getReport(String reportId, boolean selectContent) {
         if (CollectionUtils.isNotEmpty(reportStructureWithBLOBs) && CollectionUtils.isNotEmpty(reportResults)) {
             ApiScenarioReportStructureWithBLOBs scenarioReportStructure = reportStructureWithBLOBs.get(0);
             List<StepTreeDTO> stepList = JSON.parseArray(new String(scenarioReportStructure.getResourceTree(), StandardCharsets.UTF_8), StepTreeDTO.class);
-            //判断是否含有全局前后置脚本，如果有的话需要将脚本内容添加到stepDTO中
-            reportResults = this.filterProcessResult(reportResults);
 
             reportDTO.setTotal(reportResults.size());
             reportDTO.setError(reportResults.stream().filter(e -> StringUtils.equals(e.getStatus(), ApiReportStatus.ERROR.name())).collect(Collectors.toList()).size());

File: project-management/backend/src/main/java/io/metersphere/remote/service/ApiRelateService.java
Patch:
@@ -76,7 +76,7 @@ public void updateFileMetadataIdByRequestList(List<ReplaceFileIdRequest> request
         if (CollectionUtils.isNotEmpty(requestList)) {
             try {
                 microService.postForData(MicroServiceName.API_TEST,
-                        "/api/definition/update/file/",
+                        "/api/definition/update/file",
                         requestList);
             } catch (Exception e) {
                 LogUtil.error(e);

File: api-test/backend/src/main/java/io/metersphere/api/parse/ApiImportParser.java
Patch:
@@ -1,11 +1,10 @@
 package io.metersphere.api.parse;
 
 import io.metersphere.api.dto.ApiTestImportRequest;
-import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
 
 import java.io.IOException;
 import java.io.InputStream;
 
 public interface ApiImportParser<T> {
-    T parse(InputStream source, ApiTestImportRequest request) throws IOException, InvalidFormatException, Exception;
+    T parse(InputStream source, ApiTestImportRequest request) throws IOException, Exception;
 }

File: api-test/backend/src/main/java/io/metersphere/controller/scenario/ApiScenarioController.java
Patch:
@@ -328,11 +328,11 @@ public void stop(@PathVariable String reportId) {
             List<TaskRequestDTO> reportIds = new ArrayList<>();
             TaskRequestDTO taskRequest = new TaskRequestDTO();
             taskRequest.setReportId(reportId);
-            taskRequest.setType(ElementConstants.SCENARIO);
+            taskRequest.setType(ElementConstants.SCENARIO_UPPER);
             reportIds.add(taskRequest);
 
             WebSocketUtil.onClose(reportId);
-            apiTaskService.stop(reportIds);
+            apiTaskService.apiStop(reportIds);
         }
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportService.java
Patch:
@@ -44,6 +44,7 @@
 import org.springframework.transaction.annotation.Transactional;
 
 import jakarta.annotation.Resource;
+
 import java.nio.charset.StandardCharsets;
 import java.util.*;
 import java.util.stream.Collectors;
@@ -262,7 +263,8 @@ public ApiScenarioReportWithBLOBs editReport(String reportType, String reportId,
             report = new ApiScenarioReportWithBLOBs();
             report.setId(reportId);
         }
-        if (StringUtils.equals(reportType, RunModeConstants.SET_REPORT.toString())) {
+        if (StringUtils.equals(reportType, RunModeConstants.SET_REPORT.toString())
+                || StringUtils.equals(report.getStatus(), ApiReportStatus.STOPPED.name())) {
             return report;
         }
         if (StringUtils.equals(runMode, CommonConstants.CASE)) {

File: project-management/backend/src/main/java/io/metersphere/remote/service/LoadTestRemoteService.java
Patch:
@@ -5,11 +5,11 @@
 import io.metersphere.remote.dto.LoadTestBatchRequest;
 import io.metersphere.remote.dto.LoadTestFileDTO;
 import io.metersphere.service.MicroService;
+import jakarta.annotation.Resource;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
-import jakarta.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -28,7 +28,7 @@ public List<LoadTestFileDTO> selectByFileIds(List<String> idList) {
             request.setIds(idList);
             try {
                 return microService.postForDataArray(SERVICE_NAME,
-                        "/performance/file/list/",
+                        "/performance/file/list",
                         request, LoadTestFileDTO.class);
             } catch (Exception e) {
                 LogUtil.error("调用 性能测试服务 失败", e);

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/NewDriverManager.java
Patch:
@@ -63,8 +63,8 @@ public static Map<String, List<ProjectJarConfig>> getJars(List<String> projectId
 
                 FileMetadataService fileMetadataService = CommonBeanFactory.getBean(FileMetadataService.class);
                 map.forEach((key, value) -> {
+                    loaderProjectIds.add(key);
                     if (CollectionUtils.isNotEmpty(value)) {
-                        loaderProjectIds.add(key);
                         //历史数据
                         value.stream().distinct().filter(s -> s.isHasFile()).forEach(s -> {
                             //获取文件内容

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiFileUtil.java
Patch:
@@ -215,7 +215,7 @@ private static void getAttachmentFileByTestElement(TestElement testElement, Stri
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_UPDATE_TIME.name(), fileMetadata.getUpdateTime());
                     testElement.setProperty(JmxFileMetadataColumns.REF_FILE_PROJECT_ID.name(), fileMetadata.getProjectId());
                 } else {
-                    path = temporaryFileUtil.generateFilePath(attachmentBodyFile.getProjectId(), attachmentBodyFile.getFileUpdateTime(), attachmentBodyFile.getName());
+                    path = temporaryFileUtil.generateFilePath(attachmentBodyFile.getProjectId(), attachmentBodyFile.getFileMetadataId(), attachmentBodyFile.getFileUpdateTime(), attachmentBodyFile.getName());
                 }
 
                 testElement.setProperty(ElementConstants.FILENAME, path);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -110,6 +110,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         if (config != null && StringUtils.equals(this.getId(), config.getScenarioId())) {
             config.setTransferVariables(this.variables);
+            ElementUtil.setHeader(scenarioTree, this.headers, this.getName());
         }
         if (config != null && !config.getExcludeScenarioIds().contains(this.getId())) {
             scenarioTree = MsCriticalSectionController.createHashTree(tree, this.getName(), this.isEnable());

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseReviewTestCaseMapper.java
Patch:
@@ -1,17 +1,17 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.base.domain.TestCase;
 import io.metersphere.base.domain.TestCaseReviewTestCase;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtTestCaseReviewTestCaseMapper {
-    List<TestCase> getTestCaseWithNodeInfo(@Param("reviewId") String reviewId);
 
     List<TestCaseReviewTestCase> getCaseStatusByReviewIds(@Param("reviewIds") List<String> reviewIds);
 
     List<TestCaseReviewTestCase> selectForReviewChange(@Param("reviewId") String reviewId);
 
     List<TestCaseReviewTestCase> selectForReReview(@Param("caseId") String caseId);
+
+    List<TestCaseReviewTestCase> selectForReviewerChange(@Param("reviewId") String reviewId);
 }

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseCommentMapper.java
Patch:
@@ -12,5 +12,6 @@ public interface ExtTestCaseCommentMapper {
      * @param caseId
      * @return
      */
-    List<TestCaseCommentDTO> getCaseComments(@Param("caseId") String caseId, @Param("type") String type, @Param("belongId") String belongId);
+    List<TestCaseCommentDTO> getCaseComments(@Param("caseId") String caseId, @Param("type") String type,
+                                             @Param("belongId") String belongId,  @Param("withStatus") boolean withStatus);
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseReviewService.java
Patch:
@@ -291,9 +291,9 @@ public TestCaseReview editCaseReview(SaveTestCaseReviewRequest testCaseReview) {
         editCaseRevieweFollow(testCaseReview);
         testCaseReview.setUpdateTime(System.currentTimeMillis());
         checkCaseReviewExist(testCaseReview);
+        TestCaseReview originReview = testCaseReviewMapper.selectByPrimaryKey(testCaseReview.getId());
         testCaseReviewMapper.updateByPrimaryKeySelective(testCaseReview);
 
-        TestCaseReview originReview = testCaseReviewMapper.selectByPrimaryKey(testCaseReview.getId());
         if (!StringUtils.equals(testCaseReview.getReviewPassRule(), originReview.getReviewPassRule())) {
             // 如果通过标准发生变化，则重新计算用例的状态
             testReviewTestCaseService.handlePassRuleChange(originReview.getReviewPassRule(), testCaseReview);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -429,7 +429,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
             } else {
                 String url = this.getUrl();
                 if (StringUtils.isEmpty(url)) {
-                    MSException.throwException("请重新选择环境");
+                    MSException.throwException("当前步骤：" + this.getName() + " 环境为空，请重新选择环境");
                 }
                 String envPath = url;
                 sampler.setProperty("HTTPSampler.path", envPath, StandardCharsets.UTF_8.name());

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/ApiScenarioImportUtil.java
Patch:
@@ -250,6 +250,7 @@ public static ApiDefinitionResult structureApiDefinitionByJson(ApiDefinitionServ
         JSONObject objectNew = JSONUtil.parseObject(object.toString());
         objectNew.remove("refType");
         objectNew.remove("referenced");
+        objectNew.put("enable", true);
         test.setRequest(objectNew.toString());
         HttpResponse httpResponse = new HttpResponse();
         KeyValue keyValue = new KeyValue();
@@ -305,6 +306,7 @@ public static void structureCaseByJson(JSONObject object, ApiTestCaseService tes
         JSONObject objectNew = JSONUtil.parseObject(object.toString());
         objectNew.remove("refType");
         objectNew.remove("referenced");
+        objectNew.put("enable", true);
         apiTestCase.setRequest(objectNew.toString());
         apiTestCase.setOrder(apiDefinitionImportUtilService.getImportNextCaseOrder(projectId));
         if (apiTestCase.getName().length() > 255) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/JMeterParser.java
Patch:
@@ -146,7 +146,9 @@ private List<ApiScenarioWithBLOBs> parseObj(MsScenario msScenario, ApiTestImport
         scenarioWithBLOBs.setProjectId(request.getProjectId());
         if (msScenario != null && CollectionUtils.isNotEmpty(msScenario.getHashTree())) {
             scenarioWithBLOBs.setStepTotal(msScenario.getHashTree().size());
-            scenarioWithBLOBs.setModulePath("/" + msScenario.getName());
+            if (StringUtils.isNotBlank(msScenario.getName())) {
+                scenarioWithBLOBs.setModulePath("/" + msScenario.getName());
+            }
         }
         scenarioWithBLOBs.setId(UUID.randomUUID().toString());
         scenarioWithBLOBs.setScenarioDefinition(JSON.toJSONString(msScenario));

File: test-track/backend/src/main/java/io/metersphere/service/TestReviewTestCaseService.java
Patch:
@@ -131,6 +131,7 @@ public int deleteTestCase(DeleteRelevanceRequest request) {
             testCaseReviewTestCaseUsersExample.createCriteria().andReviewIdEqualTo(request.getReviewId()).andCaseIdEqualTo(testCaseReviewTestCase.getCaseId());
             testCaseReviewTestCaseUsersMapper.deleteByExample(testCaseReviewTestCaseUsersExample);
         }
+        testCaseCommentService.deleteByBelongIdAndCaseId(testCaseReviewTestCase.getCaseId(), request.getReviewId());
         return testCaseReviewTestCaseMapper.deleteByPrimaryKey(request.getId());
     }
 

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseReviewTestCaseUsersService.java
Patch:
@@ -4,10 +4,10 @@
 import io.metersphere.base.domain.TestCaseReviewTestCaseUsers;
 import io.metersphere.base.domain.TestCaseReviewTestCaseUsersExample;
 import io.metersphere.base.mapper.TestCaseReviewTestCaseUsersMapper;
+import jakarta.annotation.Resource;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
-import javax.annotation.Resource;
 import java.util.List;
 import java.util.stream.Collectors;
 

File: test-track/backend/src/main/java/io/metersphere/service/TestReviewTestCaseService.java
Patch:
@@ -30,10 +30,11 @@
 import io.metersphere.xpack.version.service.ProjectVersionService;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
-import javax.annotation.Resource;
+import jakarta.annotation.Resource;
 import java.util.*;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
@@ -54,6 +55,7 @@ public class TestReviewTestCaseService {
     @Resource
     TestCaseReviewMapper testCaseReviewMapper;
     @Resource
+    @Lazy
     TestCaseReviewService testCaseReviewService;
     @Resource
     TestCaseMapper testCaseMapper;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/sechedule/ScheduleManager.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.sechedule;
 
 import io.metersphere.base.domain.Schedule;
+import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import org.quartz.*;
 
@@ -81,7 +82,7 @@ public void addCronJob(JobKey jobKey, TriggerKey triggerKey, Class jobClass, Str
 
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
-            throw new RuntimeException(e);
+            MSException.throwException("定时任务配置异常: " + e.getMessage());
         }
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/service/BaseScheduleService.java
Patch:
@@ -48,6 +48,7 @@ public class BaseScheduleService {
 
     private final String API_SCENARIO_JOB = "io.metersphere.sechedule.ApiScenarioTestJob";
     private final String API_SWAGGER_IMPORT_JOB = "io.metersphere.sechedule.SwaggerUrlImportJob";
+    private final String TEST_PLAN_JOB = "io.metersphere.plan.job.TestPlanTestJob";
 
     public void addSchedule(Schedule schedule) {
         schedule.setId(UUID.randomUUID().toString());
@@ -143,6 +144,7 @@ private void jobConvert(Schedule schedule, ScheduleGroup group) {
         switch (group) {
             case API_SCENARIO_TEST -> schedule.setJob(API_SCENARIO_JOB);
             case SWAGGER_IMPORT -> schedule.setJob(API_SWAGGER_IMPORT_JOB);
+            case TEST_PLAN_TEST -> schedule.setJob(TEST_PLAN_JOB);
         }
     }
 

File: performance-test/backend/src/main/java/io/metersphere/job/sechedule/PerformanceTestJob.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.commons.constants.ScheduleGroup;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.request.RunTestPlanRequest;
+import io.metersphere.sechedule.MsScheduleJob;
 import io.metersphere.service.PerformanceTestService;
 import org.quartz.JobExecutionContext;
 import org.quartz.JobKey;
@@ -18,7 +19,7 @@ public PerformanceTestJob() {
     }
 
     @Override
-    void businessExecute(JobExecutionContext context) {
+    protected void businessExecute(JobExecutionContext context) {
         RunTestPlanRequest request = new RunTestPlanRequest();
         request.setId(resourceId);
         request.setUserId(userId);

File: api-test/backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -55,6 +55,8 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         } else {
             request.setFollowRedirects(true);
         }
+        request.setResponseTimeout("60000");
+        request.setConnectTimeout("60000");
         return request;
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/HarParser.java
Patch:
@@ -103,6 +103,8 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Har har, ApiTestImportRequest
             if (harRequest != null) {
                 MsHTTPSamplerProxy request = super.buildRequest(reqName, url, harRequest.method, null);
                 request.setFollowRedirects(true);
+                request.setResponseTimeout("60000");
+                request.setConnectTimeout("60000");
                 ApiDefinitionWithBLOBs apiDefinition = super.buildApiDefinition(request.getId(), reqName, url, harRequest.method, importRequest);
                 parseParameters(harRequest, request);
                 parseRequestBody(harRequest, request.getBody());

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger2Parser.java
Patch:
@@ -140,6 +140,8 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
                 Operation operation = operationMap.get(method);
                 MsHTTPSamplerProxy request = buildRequest(operation, pathName, method.name());
                 request.setFollowRedirects(true);
+                request.setResponseTimeout("60000");
+                request.setConnectTimeout("60000");
                 ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method.name(), importRequest);
                 apiDefinition.setDescription(operation.getDescription());
                 parseParameters(operation, request);

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger3Parser.java
Patch:
@@ -151,6 +151,8 @@ private List<ApiDefinitionWithBLOBs> parseRequests(OpenAPI openAPI, ApiTestImpor
                 if (operation != null) {
                     MsHTTPSamplerProxy request = buildRequest(operation, pathName, method);
                     request.setFollowRedirects(true);
+                    request.setResponseTimeout("60000");
+                    request.setConnectTimeout("60000");
                     ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method, importRequest);
                     apiDefinition.setDescription(operation.getDescription());
                     parseParameters(operation, request);

File: test-track/backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -400,7 +400,7 @@ private void validateCustomField(TestCaseExcelData data, StringBuilder stringBui
             Object value = customData.get(fieldName);
             String originFieldName = fieldName;
             if (TestCaseImportFiled.MAINTAINER.getFiledLangMap().containsValue(fieldName.replace("(ID)", StringUtils.EMPTY))) {
-                fieldName = fieldName.replace("(ID)", StringUtils.EMPTY); // 兼容旧模板的 责任人(ID)
+                fieldName = TestCaseImportFiled.MAINTAINER.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE); // 兼容旧模板的 责任人(ID)
             }
             CustomFieldDao customField = customFieldsMap.get(fieldName);
             if (customField == null) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -65,6 +65,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/share-api-report", "anon");
         filterChainDefinitionMap.put("/api/scenario/report/get/**", "anon");
         filterChainDefinitionMap.put("/shareUiReport", "anon");
+        filterChainDefinitionMap.put("/ui/automation/download/**", "anon");
 
         filterChainDefinitionMap.put("/system/theme", "anon");
         filterChainDefinitionMap.put("/system/save/baseurl/**", "anon");

File: performance-test/backend/src/main/java/io/metersphere/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -263,8 +263,8 @@ private void splitCsvFile(Node item) {
         if (!BooleanUtils.toBoolean(csvSplit)) {
             return;
         }
-        boolean csvHasHeader = (Boolean) ((Map) (config)).get("csvHasHeader");
-        if (csvHasHeader) {
+        Boolean csvHasHeader = (Boolean) ((Map) (config)).get("csvHasHeader");
+        if (BooleanUtils.toBoolean(csvHasHeader)) {
             String header = tokenizer.nextToken();
             csv.append(header).append(StringUtils.LF);
         }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -127,6 +127,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             if (BooleanUtils.isTrue(this.variableEnable) || BooleanUtils.isTrue(this.mixEnable)) {
                 scenarioTree.add(ElementUtil.argumentsToUserParameters(valueSupposeMock));
             } else if (config != null && (this.isAllEnable() || config.isApi())) {
+                valueSupposeMock.setProperty(ElementConstants.COVER, true);
                 scenarioTree.add(valueSupposeMock);
             }
         }

File: api-test/backend/src/main/java/io/metersphere/commons/constants/ElementConstants.java
Patch:
@@ -56,4 +56,6 @@ public class ElementConstants {
     public static final String FILE_ID = "fileId";
     public static final String RESOURCE_ID = "resourceId";
     public static final String FILENAME = "filename";
+    public static final String COVER = "COVER";
+
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -876,11 +876,11 @@ public static void initScript(TestElement testElement, ScriptProcessorVO vo) {
         }
     }
 
-    public static String getScriptEnv(String environmentId, ParameterConfig config) {
+    public static String getScriptEnv(String environmentId, ParameterConfig config, String projectId) {
         if (StringUtils.isEmpty(environmentId)) {
             if (config.getConfig() != null) {
-                if (config.getProjectId() != null && config.getConfig().containsKey(config.getProjectId())) {
-                    return config.getConfig().get(config.getProjectId()).getEnvironmentId();
+                if (StringUtils.isNotBlank(projectId) && config.getConfig().containsKey(projectId)) {
+                    return config.getConfig().get(projectId).getEnvironmentId();
                 } else {
                     if (CollectionUtils.isNotEmpty(config.getConfig().values())) {
                         Optional<EnvironmentConfig> values = config.getConfig().entrySet().stream().findFirst().map(Map.Entry::getValue);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -44,7 +44,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config));
+        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config, this.getProjectId()));
 
         TestElement processor = new BeanShellSampler();
         if (jsrEnable == null || BooleanUtils.isTrue(jsrEnable)) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -43,7 +43,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config));
+        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config, this.getProjectId()));
 
         TestElement processor = new BeanShellPostProcessor();
         if (jsrEnable == null || BooleanUtils.isTrue(jsrEnable)) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -43,7 +43,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             }
         }
         ScriptFilter.verify(this.getScriptLanguage(), this.getName(), script);
-        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config));
+        this.setEnvironmentId(ElementUtil.getScriptEnv(this.getEnvironmentId(), config, this.getProjectId()));
 
         final HashTree jsr223PreTree = tree.add(getShellProcessor());
         if (CollectionUtils.isNotEmpty(hashTree)) {

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanMessageService.java
Patch:
@@ -323,6 +323,7 @@ private Map<String, Long> calculateCaseCount(TestPlanSimpleReportDTO report) {
                         result.put("apiScenarioFailedCount", v);
                         break;
                     case "unexecute":
+                    case "pending":
                         result.put("apiScenarioUnExecuteCount", v);
                         break;
                     case "errorreportresult":
@@ -351,6 +352,7 @@ private Map<String, Long> calculateCaseCount(TestPlanSimpleReportDTO report) {
                         break;
                     case "unexecute":
                     case "stop":
+                    case "pending":
                         result.put("uiScenarioUnExecuteCount", v);
                         break;
                     default:

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -125,7 +125,7 @@ private static void addCsv(HashTree tree, ParameterConfig config, String shareMo
                 boolean isRepository = false;
                 BodyFile file = item.getFiles().get(0);
                 boolean isRef = StringUtils.equalsIgnoreCase(file.getStorage(), StorageConstants.FILE_REF.name());
-                String path = StringUtils.join(BODY_FILE_DIR, File.pathSeparator, item.getFiles().get(0).getId(), "_", item.getFiles().get(0).getName());
+                String path = StringUtils.join(BODY_FILE_DIR, File.separator, item.getFiles().get(0).getId(), "_", item.getFiles().get(0).getName());
                 if (StringUtils.equalsIgnoreCase(file.getStorage(), StorageConstants.FILE_REF.name())) {
                     fileId = file.getFileId();
                     FileMetadata fileMetadata = fileMetadataService.getFileMetadataById(fileId);

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -453,6 +453,7 @@ private void createNewVersionOrNot(EditTestCaseRequest testCase) {
         if (StringUtils.isBlank(testCase.getVersionId())) {
             return;
         }
+        testCase.setLatest(false);
         TestCaseExample example = new TestCaseExample();
         example.createCriteria().andIdEqualTo(testCase.getId())
                 .andVersionIdEqualTo(testCase.getVersionId());

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -428,9 +428,6 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                 }
             } else {
                 String url = this.getUrl();
-                if (StringUtils.isNotEmpty(this.getPort()) && this.getPort().startsWith("${")) {
-                    url = url.replace(this.getPort(), "10990");
-                }
                 if (StringUtils.isEmpty(url)) {
                     MSException.throwException("请重新选择环境");
                 }

File: test-track/backend/src/main/java/io/metersphere/excel/domain/IssueExcelData.java
Patch:
@@ -48,6 +48,8 @@ public class IssueExcelData implements Serializable {
     @ExcelIgnore
     private Boolean addFlag;
     @ExcelIgnore
+    private Boolean updateFlag = true;
+    @ExcelIgnore
     private String title;
     @ExcelIgnore
     private String description;

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -78,6 +78,7 @@ public class MsTCPSampler extends MsTestElement {
     private String jsonDataStruct;
     private String rawDataStruct;
     private boolean customizeReq;
+    private Boolean isRefEnvironment;
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -155,6 +155,8 @@ public interface ExtTestCaseMapper {
 
     List<TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
 
+    List<TestCase> getMaintainerMapForPlanRepeat(@Param("request") QueryTestCaseRequest request);
+
     List<TestCaseDTO> getForNodeEdit(@Param("ids") List<String> ids);
 
     List<CustomFieldResourceCompatibleDTO> getForCompatibleCustomField(String projectId, int offset, int pageSize);

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -166,7 +166,7 @@ public void sampleOccurred(SampleEvent event) {
                         transactionResult.getResponseResult().setConsole(console);
                         //对响应内容进行进一步解析和处理。
                         RequestResultExpandDTO expandDTO = ResponseUtil.parseByRequestResult(transactionResult);
-                        if (StringUtils.equals(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
+                        if (StringUtils.equalsAnyIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name())) {
                             apiDefinitionEnvService.setEnvAndPoolName(transactionResult, expandDTO);
                         }
                         dto.setContent("result_" + JSON.toJSONString(expandDTO));
@@ -176,7 +176,7 @@ public void sampleOccurred(SampleEvent event) {
                     requestResult.getResponseResult().setConsole(console);
                     //对响应内容进行进一步解析和处理。
                     RequestResultExpandDTO expandDTO = ResponseUtil.parseByRequestResult(requestResult);
-                    if (StringUtils.equals(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
+                    if (StringUtils.equalsAnyIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name())) {
                         apiDefinitionEnvService.setEnvAndPoolName(requestResult, expandDTO);
                     }
                     dto.setContent("result_" + JSON.toJSONString(expandDTO));

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -74,7 +74,7 @@ public void debugConsume(ConsumerRecord<?, String> record) {
             LoggerUtil.info("接收到执行结果：", record.key());
             if (ObjectUtils.isNotEmpty(record.value()) && WebSocketUtil.has(record.key().toString())) {
                 MsgDTO dto = JSONUtil.parseObject(record.value(), MsgDTO.class);
-                if (StringUtils.equals(ApiRunMode.DEFINITION.name(), dto.getRunMode()) && dto.getContent().startsWith("result_")) {
+                if (StringUtils.equalsAnyIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name()) && dto.getContent().startsWith("result_")) {
                     ApiDefinitionEnvService apiDefinitionEnvService = CommonBeanFactory.getBean(ApiDefinitionEnvService.class);
                     apiDefinitionEnvService.setEnvAndPoolName(dto);
                 }

File: api-test/backend/src/main/java/io/metersphere/service/TestResultService.java
Patch:
@@ -253,6 +253,7 @@ public void testEnded(ResultDTO dto) {
                 ApiTestCaseWithBLOBs apiTestCase = new ApiTestCaseWithBLOBs();
                 apiTestCase.setLastResultId(dto.getReportId());
                 apiTestCase.setId(dto.getTestId());
+                apiTestCase.setStatus(record.getStatus());
                 apiTestCaseService.updateByPrimaryKeySelective(apiTestCase);
             }
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanMessageService.java
Patch:
@@ -298,6 +298,7 @@ private Map<String, Long> calculateCaseCount(TestPlanSimpleReportDTO report) {
                         result.put("apiCaseUnExecuteCount", v);
                         break;
                     case "errorreportresult":
+                    case "fakeerror":
                         result.put("apiCaseErrorReportCount", v);
                         break;
                     default:
@@ -318,12 +319,14 @@ private Map<String, Long> calculateCaseCount(TestPlanSimpleReportDTO report) {
                         result.put("apiScenarioSuccessCount", v);
                         break;
                     case "fail":
+                    case "error":
                         result.put("apiScenarioFailedCount", v);
                         break;
                     case "unexecute":
                         result.put("apiScenarioUnExecuteCount", v);
                         break;
                     case "errorreportresult":
+                    case "fakeerror":
                         result.put("apiScenarioErrorReportCount", v);
                         break;
                     default:

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -1183,6 +1183,9 @@ private void generateEnvironmentInfo(TestPlanSimpleReportDTO testPlanReportDTO,
             if (DiscoveryUtil.hasService(MicroServiceName.API_TEST)) {
                 TestPlanEnvInfoDTO testPlanEnvInfo = planTestPlanScenarioCaseService.generateEnvironmentInfo(testPlanReport);
                 BeanUtils.copyBean(testPlanReportDTO, testPlanEnvInfo);
+            } else if (DiscoveryUtil.hasService(MicroServiceName.UI_TEST)) {
+                TestPlanEnvInfoDTO testPlanEnvInfo = planTestPlanUiScenarioCaseService.generateEnvironmentInfo(testPlanReport);
+                BeanUtils.copyBean(testPlanReportDTO, testPlanEnvInfo);
             }
         } catch (Exception e) {
             LogUtil.error(e);

File: api-test/backend/src/main/java/io/metersphere/commons/constants/CommonConstants.java
Patch:
@@ -11,4 +11,7 @@ public class CommonConstants {
     public static final String USER_ID = "userId";
     public static final String METHODS_KEY = "methods";
     public static final String CASE = "CASE";
+    public static final String USER = "user";
+    public static final String USER_NAME = "userName";
+
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/ApiReportEnvConfigDTO.java
Patch:
@@ -5,7 +5,7 @@
 
 @Setter
 @Getter
-public class ApiReportEnvConfigUtil {
+public class ApiReportEnvConfigDTO {
 
     private String envName;
 

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionEnvService.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.service.definition;
 
-import io.metersphere.api.dto.ApiReportEnvConfigUtil;
+import io.metersphere.api.dto.ApiReportEnvConfigDTO;
 import io.metersphere.api.dto.MsgDTO;
 import io.metersphere.api.dto.RequestResultExpandDTO;
 import io.metersphere.base.domain.ApiDefinitionEnv;
@@ -80,7 +80,7 @@ public void setEnvAndPoolName(RequestResult baseResult, RequestResultExpandDTO e
         if (StringUtils.isNotBlank(baseResult.getThreadName())) {
             ApiDefinitionExecResultWithBLOBs result = apiDefinitionExecResultMapper.selectByPrimaryKey(baseResult.getThreadName());
             if (result != null && StringUtils.isNotEmpty(result.getEnvConfig())) {
-                ApiReportEnvConfigUtil envConfig = apiDefinitionService.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
+                ApiReportEnvConfigDTO envConfig = apiDefinitionService.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
                 if (envConfig != null) {
                     expandDTO.setEnvName(envConfig.getEnvName());
                     expandDTO.setPoolName(envConfig.getResourcePoolName());
@@ -93,7 +93,7 @@ public void setEnvAndPoolName(MsgDTO dto) {
         if (StringUtils.isNotBlank(dto.getToReport())) {
             ApiDefinitionExecResultWithBLOBs result = apiDefinitionExecResultMapper.selectByPrimaryKey(dto.getToReport());
             if (result != null && StringUtils.isNotEmpty(result.getEnvConfig())) {
-                ApiReportEnvConfigUtil envConfig = apiDefinitionService.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
+                ApiReportEnvConfigDTO envConfig = apiDefinitionService.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
                 if (envConfig != null) {
                     Map map = JSON.parseObject(dto.getContent().substring(7), Map.class);
                     map.put("envName", envConfig.getEnvName());

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -960,7 +960,7 @@ public ApiReportResult buildAPIReportResult(ApiDefinitionExecResultWithBLOBs res
             if (StringUtils.isNotBlank(contentStr)) {
                 JSONObject content = JSONUtil.parseObject(contentStr);
                 if (StringUtils.isNotEmpty(result.getEnvConfig())) {
-                    ApiReportEnvConfigUtil envNameByEnvConfig = this.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
+                    ApiReportEnvConfigDTO envNameByEnvConfig = this.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig());
                     if (envNameByEnvConfig != null) {
                         content.put("envName", envNameByEnvConfig.getEnvName());
                         content.put("poolName", envNameByEnvConfig.getResourcePoolName());
@@ -975,8 +975,8 @@ public ApiReportResult buildAPIReportResult(ApiDefinitionExecResultWithBLOBs res
         return reportResult;
     }
 
-    public ApiReportEnvConfigUtil getEnvNameByEnvConfig(String projectId, String envConfig) {
-        ApiReportEnvConfigUtil apiReportEnvConfig = new ApiReportEnvConfigUtil();
+    public ApiReportEnvConfigDTO getEnvNameByEnvConfig(String projectId, String envConfig) {
+        ApiReportEnvConfigDTO apiReportEnvConfig = new ApiReportEnvConfigDTO();
         RunModeConfigDTO runModeConfigDTO = null;
         try {
             runModeConfigDTO = JSON.parseObject(envConfig, RunModeConfigDTO.class);

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -750,7 +750,9 @@ public TestPlanReportContentWithBLOBs parseReportDaoToReportContent(TestPlanSimp
         if (testPlanReportContentWithBLOBs.getEndTime() != null) {
             reportDTO.setEndTime(testPlanReportContentWithBLOBs.getEndTime());
         }
+        String summary = testPlanReportContentWithBLOBs.getSummary();
         BeanUtils.copyBean(testPlanReportContentWithBLOBs, reportDTO);
+        testPlanReportContentWithBLOBs.setSummary(summary);
         testPlanReportContentWithBLOBs.setId(id);
         testPlanReportContentWithBLOBs.setTestPlanReportId(testPlanReportId);
         if (reportDTO.getFunctionResult() != null) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/service/BaseScheduleService.java
Patch:
@@ -59,6 +59,8 @@ public Schedule getSchedule(String ScheduleId) {
 
     public int editSchedule(Schedule schedule) {
         schedule.setUpdateTime(System.currentTimeMillis());
+        schedule.setCreateTime(null);
+        schedule.setUserId(null);
         return scheduleMapper.updateByPrimaryKeySelective(schedule);
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -99,7 +99,7 @@ private void parseJonBodyMock() {
         if (StringUtils.isNotBlank(this.type) && StringUtils.equals(this.type, JSON_STR)) {
             if (StringUtils.isNotEmpty(this.format) && this.getJsonSchema() != null
                     && JSON_SCHEMA.equals(this.format)) {
-                this.raw = StringEscapeUtils.unescapeJava(JSONSchemaRunTest.getJson(JSON.toJSONString(this.getJsonSchema())));
+                this.raw = StringEscapeUtils.unescapeJava(JSONSchemaRunTest.getJson(JSONUtil.toJSONString(this.getJsonSchema())));
             } else {
                 try {
                     if (StringUtils.isNotEmpty(this.getRaw())) {
@@ -109,13 +109,13 @@ private void parseJonBodyMock() {
                             if (!this.getRaw().contains("$ref")) {
                                 jsonMockParse(list);
                             }
-                            this.raw = JSONUtil.parser(JSONUtil.toJSONString(list));
+                            this.raw = JSONUtil.parserArray(JSONUtil.toJSONString(list));
                         } else {
                             Map<String, Object> map = JSON.parseObject(this.getRaw(), Map.class);
                             if (!this.getRaw().contains("$ref")) {
                                 jsonMockParse(map);
                             }
-                            this.raw = JSONUtil.parser(JSONUtil.toJSONString(map));
+                            this.raw = JSONUtil.parserObject(JSONUtil.toJSONString(map));
                         }
                     }
                 } catch (Exception e) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/MsgDTO.java
Patch:
@@ -16,5 +16,6 @@ public class MsgDTO {
     private String reportId;
     private String toReport;
     private boolean execEnd;
+    private String runMode;
     private String content;
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/RequestResultExpandDTO.java
Patch:
@@ -21,6 +21,8 @@ public class RequestResultExpandDTO extends RequestResult {
     private String reportId;
     private long time;
     private Map<String, String> attachInfoMap;
+    private String poolName;
+    private String envName;
 
     public RequestResultExpandDTO() {
     }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiFileUtil.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.metadata.service.FileMetadataService;
 import io.metersphere.metadata.vo.FileRequest;
 import io.metersphere.request.BodyFile;
+import io.metersphere.utils.LoggerUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -90,6 +91,7 @@ private static FileRequest getRequest(String requestId) {
         request.setProjectId(path);
         request.setFileName(requestId);
         request.setStorage(StorageConstants.MINIO.name());
+        LoggerUtil.info("开始从MinIO处理文件：", path);
         return request;
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/request/BodyFile.java
Patch:
@@ -15,6 +15,8 @@ public class BodyFile {
     private String fileType;
     // 正常/已删除
     private String status;
+    // 调试附件处理
+    private String refResourceId;
 
     public boolean isRef() {
         return StringUtils.equals(storage, StorageConstants.FILE_REF.name()) && StringUtils.isNotEmpty(fileId);

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -861,6 +861,7 @@ private HashTreeInfoDTO generateJmx(ApiScenarioWithBLOBs apiScenario) {
         ParameterConfig config = new ParameterConfig();
         config.setOperating(true);
         config.getExcludeScenarioIds().add(apiScenario.getId());
+        config.setScenarioId(apiScenario.getId());
         try {
             MsScenario scenario = JSON.parseObject(apiScenario.getScenarioDefinition(), MsScenario.class);
             if (scenario == null) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/SaveApiTestCaseRequest.java
Patch:
@@ -24,4 +24,7 @@ public class SaveApiTestCaseRequest extends ApiTestCase {
     private List<String> follows;
 
     private String versionId;
+
+    //复制用例时的源ID。主要用于复制本地文件等操作。
+    private String sourceIdByCopy;
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -127,7 +127,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             // 这里加入自定义变量解决ForEach循环控制器取值问题，循环控制器无法从vars中取值
             if (BooleanUtils.isTrue(this.variableEnable) || BooleanUtils.isTrue(this.mixEnable)) {
                 scenarioTree.add(ElementUtil.argumentsToUserParameters(valueSupposeMock));
-            } else if (config != null && StringUtils.equals(this.getId(), config.getScenarioId())) {
+            } else if (config != null
+                    && (StringUtils.equals(this.getId(), config.getScenarioId()) || config.isApi())) {
                 scenarioTree.add(valueSupposeMock);
             }
         }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -92,7 +92,7 @@ public class ParameterConfig extends MsParameter {
     private boolean runLocal;
 
     private String browserLanguage;
-
+    private boolean isApi;
     /**
      * 排除生成临界控制器的场景
      */

File: api-test/backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -204,7 +204,7 @@ public String getHashTree(MsJSR223Processor request) {
     private JmeterRunRequestDTO initRunRequest(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         ParameterConfig config = new ParameterConfig();
         config.setProjectId(request.getProjectId());
-
+        config.setApi(true);
         Map<String, EnvironmentConfig> envConfig = new HashMap<>();
         Map<String, String> map = request.getEnvironmentMap();
         if (map != null && map.size() > 0) {
@@ -308,7 +308,7 @@ public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs te
         BaseEnvironmentService apiTestEnvironmentService = CommonBeanFactory.getBean(BaseEnvironmentService.class);
         ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(request.getEnvironmentId());
         ParameterConfig parameterConfig = new ParameterConfig();
-
+        parameterConfig.setApi(true);
         Map<String, EnvironmentConfig> envConfig = new HashMap<>(16);
         if (environment != null && environment.getConfig() != null) {
             EnvironmentConfig environmentConfig = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);

File: api-test/backend/src/main/java/io/metersphere/commons/utils/BatchProcessingUtil.java
Patch:
@@ -1,7 +1,6 @@
-package io.metersphere.utils;
+package io.metersphere.commons.utils;
 
 import io.metersphere.api.dto.definition.BatchDataCopyRequest;
-import io.metersphere.commons.utils.BeanUtils;
 import org.apache.commons.collections.CollectionUtils;
 
 import java.util.ArrayList;

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -35,6 +35,8 @@ public interface ExtTestPlanApiCaseMapper {
 
     List<TestPlanApiCaseInfoDTO> selectLegalDataByTestPlanId(String planId);
 
+    List<TestPlanApiCaseInfoDTO> selectByPlanCaseIds(List<String> planCaseIds);
+
     List<Map> selectForPlanReport(String planId);
 
     List<TestPlanFailureApiDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -1,12 +1,10 @@
 package io.metersphere.base.mapper.plan.ext;
 
-import io.metersphere.api.dto.plan.TestPlanApiScenarioInfoDTO;
 import io.metersphere.api.dto.automation.ApiScenarioDTO;
 import io.metersphere.api.dto.automation.TestPlanFailureScenarioDTO;
 import io.metersphere.api.dto.automation.TestPlanScenarioRequest;
 import io.metersphere.api.dto.plan.TestPlanApiScenarioInfoDTO;
 import io.metersphere.base.domain.TestPlanApiScenario;
-
 import io.metersphere.dto.PlanReportCaseDTO;
 import org.apache.ibatis.annotations.Param;
 
@@ -30,6 +28,8 @@ public interface ExtTestPlanScenarioCaseMapper {
 
     List<TestPlanApiScenarioInfoDTO> selectLegalDataByTestPlanId(String planId);
 
+    List<TestPlanApiScenarioInfoDTO> selectByPlanIds(List<String> planScenarioIds);
+
     List<PlanReportCaseDTO> selectForPlanReport(String planId);
 
     List<TestPlanFailureScenarioDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);

File: api-test/backend/src/main/java/io/metersphere/commons/constants/CommonConstants.java
Patch:
@@ -2,7 +2,7 @@
 
 public class CommonConstants {
     public static final String TrashStatus = "Trash";
-    public static final String PROJECT_TEMPLATE = "PROJECT_TEMPLATE";
+    public static final String TEST_PLAN = "TEST_PLAN";
     public static final String LOCAL_STATUS_KEY = "LOCAL_STATUS_KEY";
     public static final String REPORT_STATUS = "REPORT_STATUS";
     public static final String TRIGGER_MODE = "trigger_mode";

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiDefinitionExecResultUtil.java
Patch:
@@ -2,9 +2,9 @@
 
 
 import io.metersphere.api.dto.definition.BatchRunDefinitionRequest;
+import io.metersphere.api.dto.plan.TestPlanApiCaseInfoDTO;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;
 import io.metersphere.base.domain.ApiTestCase;
-import io.metersphere.base.domain.TestPlanApiCase;
 import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.constants.ReportTypeConstants;
 import io.metersphere.commons.constants.TriggerMode;
@@ -45,7 +45,7 @@ public static ApiDefinitionExecResultWithBLOBs initBase(String resourceId, Strin
     public static ApiDefinitionExecResultWithBLOBs addResult(
             BatchRunDefinitionRequest request,
             RunModeConfigDTO runModeConfigDTO,
-            TestPlanApiCase key,
+            TestPlanApiCaseInfoDTO key,
             String status,
             ApiTestCase testCase,
             String poolId) {

File: api-test/backend/src/main/java/io/metersphere/service/ApiExecutionQueueService.java
Patch:
@@ -69,7 +69,7 @@ public class ApiExecutionQueueService {
 
     @Transactional(propagation = Propagation.REQUIRES_NEW)
     public DBTestQueue add(Object runObj, String poolId, String type, String reportId, String reportType, String runMode, RunModeConfigDTO config) {
-        LoggerUtil.info("报告【" + reportId + "】开始生成执行链");
+        LoggerUtil.info("报告【" + type + "】开始生成执行链", reportId);
         if (config.getEnvMap() == null) {
             config.setEnvMap(new LinkedHashMap<>());
         }
@@ -99,7 +99,7 @@ else if (StringUtils.equalsIgnoreCase(type, ApiRunMode.TEST_PLAN_PERFORMANCE_TES
             extApiExecutionQueueMapper.sqlInsert(queueDetails);
         }
         resQueue.setDetailMap(detailMap);
-        LoggerUtil.info("报告【" + reportId + "】生成执行链结束");
+        LoggerUtil.info("报告【" + type + "】生成执行链结束", reportId);
         return resQueue;
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/autoconfigure/RestTemplateConfig.java
Patch:
@@ -35,7 +35,7 @@ public class RestTemplateConfig implements WebMvcConfigurer {
     private final static int MAX_PER_ROUTE = 500;
     private final static int CONN_REQUEST_TIMEOUT = 5000;
     private final static int CONNECT_TIMEOUT = 8000;
-    private final static int SOCKET_TIMEOUT = 20 * 1000;
+    private final static int SOCKET_TIMEOUT = 200 * 1000;
 
     @Bean
     public RestTemplate restTemplate() {

File: test-track/backend/src/main/java/io/metersphere/plan/dto/BatchRunDefinitionRequest.java
Patch:
@@ -25,6 +25,8 @@ public class BatchRunDefinitionRequest {
     private String planReportId;
     // 失败重跑
     private boolean rerun;
+
     private Map<String, ApiDefinitionExecResultWithBLOBs> executeQueue;
 
+    private String testPlanId;
 }

File: test-track/backend/src/main/java/io/metersphere/plan/request/api/RunScenarioRequest.java
Patch:
@@ -53,4 +53,6 @@ public class RunScenarioRequest {
     private String serialReportId;
 //    private Map<String, ApiScenarioReportResult> reportMap;
 
+    private String testPlanId;
 }
+

File: framework/gateway/src/main/java/io/metersphere/gateway/service/SSOService.java
Patch:
@@ -43,6 +43,7 @@
 import java.security.KeyManagementException;
 import java.security.KeyStoreException;
 import java.security.NoSuchAlgorithmException;
+import java.time.Duration;
 import java.util.HashMap;
 import java.util.Locale;
 import java.util.Map;
@@ -200,8 +201,8 @@ public Optional<SessionUser> serviceValidate(String ticket, String authId, WebSe
         session.getAttributes().put("authId", authSource.getId());
         session.getAttributes().put("casTicket", ticket);
         // 记录cas对应关系
-        Long timeout = env.getProperty("spring.session.timeout", Long.class);
-        stringRedisTemplate.opsForValue().set(ticket, name, timeout, TimeUnit.SECONDS);
+        Duration timeout = env.getProperty("spring.session.timeout", Duration.class, Duration.ofHours(12));
+        stringRedisTemplate.opsForValue().set(ticket, name, timeout);
 
         return userOptional;
     }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -17,6 +17,7 @@
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
+import java.time.Duration;
 import java.util.HashMap;
 import java.util.List;
 
@@ -54,7 +55,7 @@ public String getTheme() {
 
     @GetMapping("timeout")
     public long getTimeout() {
-        return env.getProperty("spring.session.timeout", Long.class, 43200L); // 默认43200s, 12个小时
+        return env.getProperty("spring.session.timeout", Duration.class, Duration.ofHours(12)).getSeconds(); // 默认43200s, 12个小时
     }
 
     @GetMapping("/mail/info")

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger3Parser.java
Patch:
@@ -330,7 +330,7 @@ private void parseBody(Content content, Body body) {
         Set<String> refSet = new HashSet<>();
         Map<String, Schema> infoMap = new HashMap();
         Schema schema = getSchema(mediaType.getSchema());
-        if (content.get(contentType).getExample() != null && schema.getExample() == null) {
+        if (content.get(contentType) != null && content.get(contentType).getExample() != null && schema.getExample() == null) {
             schema.setExample(content.get(contentType).getExample());
         }
         Object bodyData = null;

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -555,8 +555,7 @@ private String getRestParameters(String path) {
                     String value = keyValue.getValue() != null && keyValue.getValue().startsWith("@") ?
                             ScriptEngineUtils.buildFunctionCallString(keyValue.getValue()) : keyValue.getValue();
                     value = keyValue.isUrlEncode() ? StringUtils.join(StringUtils.join("${__urlencode(", value), ")}") : value;
-                    String key = keyValue.isUrlEncode() ? StringUtils.join(StringUtils.join("${__urlencode(", keyValue.getName()), ")}") : keyValue.getName();
-                    keyValueMap.put(key, value);
+                    keyValueMap.put(keyValue.getName(), value);
                 } catch (Exception e) {
                     LogUtil.error(e);
                 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/GenerateHashTreeUtil.java
Patch:
@@ -94,10 +94,11 @@ public static void setScenarioEnv(MsScenario scenario, ApiScenarioWithBLOBs apiS
         String environmentType = apiScenarioWithBLOBs.getEnvironmentType();
         String environmentJson = apiScenarioWithBLOBs.getEnvironmentJson();
         String environmentGroupId = apiScenarioWithBLOBs.getEnvironmentGroupId();
+
         if (StringUtils.isBlank(environmentType)) {
             environmentType = EnvironmentType.JSON.toString();
         }
-        if (StringUtils.equals(environmentType, EnvironmentType.JSON.toString())) {
+        if (StringUtils.equals(environmentType, EnvironmentType.JSON.toString()) && StringUtils.isNotBlank(environmentJson)) {
             scenario.setEnvironmentMap(JSON.parseObject(environmentJson, Map.class));
         } else if (StringUtils.equals(environmentType, EnvironmentType.GROUP.toString())) {
             Map<String, String> map = CommonBeanFactory.getBean(BaseEnvGroupProjectService.class).getEnvMap(environmentGroupId);
@@ -133,7 +134,7 @@ public static HashTree generateHashTree(ApiScenarioWithBLOBs item, Map<String, S
             String definition = element.toString();
             MsScenario scenario = JSON.parseObject(definition, MsScenario.class);
             group.setOnSampleError(scenario.getOnSampleError());
-            if (planEnvMap != null && planEnvMap.size() > 0) {
+            if (MapUtils.isNotEmpty(planEnvMap)) {
                 scenario.setEnvironmentMap(planEnvMap);
             } else {
                 setScenarioEnv(scenario, item);

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -105,6 +105,9 @@ public Platform getPlatform(String platformKey) {
 
     public static String getCompatibleProjectConfig(Project project) {
         String issueConfig = project.getIssueConfig();
+        if (StringUtils.isBlank(issueConfig)) {
+            return StringUtils.EMPTY;
+        }
         Map map = JSON.parseMap(issueConfig);
         compatibleProjectKey(map, "jiraKey", project.getJiraKey());
         compatibleProjectKey(map, "tapdId", project.getTapdId());

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -131,7 +131,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                 scenarioTree.add(valueSupposeMock);
             }
         }
-        if (BooleanUtils.isTrue(this.variableEnable) || BooleanUtils.isTrue(this.mixEnable)) {
+        if ((this.variableEnable == null && this.mixEnable == null)
+                || BooleanUtils.isTrue(this.variableEnable) || BooleanUtils.isTrue(this.mixEnable)) {
             ElementUtil.addCsvDataSet(scenarioTree, variables, this.isEnvironmentEnable() ? newConfig : config, "shareMode.group");
             ElementUtil.addCounter(scenarioTree, variables);
             ElementUtil.addRandom(scenarioTree, variables);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/MinIOFileRepository.java
Patch:
@@ -28,7 +28,7 @@ public class MinIOFileRepository implements FileRepository {
 
     @Override
     public String saveFile(MultipartFile file, FileRequest request) throws Exception {
-        FileUtils.validateMinIOFileName(request.getFileName());
+        FileUtils.validateFileName(request.getFileName());
         String bucket = minioProperties.getBucket();
         String fileName = request.getProjectId() + "/" + request.getFileName();
         minioClient.putObject(PutObjectArgs.builder()

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/MinIOFileRepository.java
Patch:
@@ -28,7 +28,7 @@ public class MinIOFileRepository implements FileRepository {
 
     @Override
     public String saveFile(MultipartFile file, FileRequest request) throws Exception {
-        FileUtils.validateFileName(request.getFileName());
+        FileUtils.validateMinIOFileName(request.getFileName());
         String bucket = minioProperties.getBucket();
         String fileName = request.getProjectId() + "/" + request.getFileName();
         minioClient.putObject(PutObjectArgs.builder()

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiProjectMapper.java
Patch:
@@ -9,4 +9,5 @@
 public interface ExtApiProjectMapper {
     List<ProjectDTO> getUserProject(@Param("proRequest") ApiProjectRequest request);
 
+    ProjectDTO getProject(String scenarioId);
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -60,7 +60,6 @@ public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
     }
 
     public static void createFile(String filePath, byte[] fileBytes) {
-        validateFileName(filePath);
         File file = new File(filePath);
         if (file.exists()) {
             file.delete();

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1996,6 +1996,9 @@ public void deleteTestPlanBatch(BatchOperateRequest request) {
                 ids.removeAll(request.getUnSelectIds());
             }
         }
+        if (testPlanReportService.hasRunningReport(ids)) {
+            MSException.throwException(Translator.get("test_plan_delete_exec_error"));
+        }
         this.deleteTestPlans(ids);
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/LocalFileRepository.java
Patch:
@@ -127,12 +127,13 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce
 
 
     private File createFile(FileRequest request) {
-        String path = StringUtils.join(FileUtils.BODY_FILE_DIR, "/", request.getProjectId());
+        FileUtils.validateFileName(request.getFileName());
+        String path = StringUtils.join(FileUtils.BODY_FILE_DIR, File.separator, request.getProjectId());
         File fileDir = new File(path);
         if (!fileDir.exists()) {
             fileDir.mkdirs();
         }
-        File file = new File(StringUtils.join(path, "/", request.getFileName()));
+        File file = new File(StringUtils.join(path, File.separator, request.getFileName()));
         return file;
     }
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -1739,7 +1739,9 @@ private void buildExportCustomField(Map<String, Map<String, String>> customSelec
                         List<String> results = new ArrayList<>();
                         List values = (List) value;
                         values.forEach(item -> {
-                            if (MapUtils.isNotEmpty(optionMap) && optionMap.containsKey(item.toString())) {
+                            if (MapUtils.isEmpty(optionMap)) {
+                                results.add(item.toString());
+                            } else if (optionMap.containsKey(item.toString())) {
                                 results.add(optionMap.get(item.toString()));
                             }
                         });

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiModuleService.java
Patch:
@@ -189,7 +189,6 @@ public List<ApiModuleDTO> getNodeTreeByProjectId(String projectId, String protoc
 
     public List<ApiModuleDTO> getNodeTreeByCondition(String projectId, String protocol, String versionId, ApiDefinitionRequest request) {
         // 判断当前项目下是否有默认模块，没有添加默认模块
-        this.getDefaultNode(projectId, protocol);
         List<ApiModuleDTO> apiModules = getApiModulesByProjectAndPro(projectId, protocol);
         request.setProjectId(projectId);
         request.setProtocol(protocol);

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioModuleService.java
Patch:
@@ -103,7 +103,6 @@ public List<ApiScenarioModuleDTO> getNodeTreeByProjectId(String projectId) {
 
     public List<ApiScenarioModuleDTO> getNodeTreeByProjectId(String projectId, ApiScenarioRequest request) {
         // 判断当前项目下是否有默认模块，没有添加默认模块
-        this.getDefaultNode(projectId);
         List<ApiScenarioModuleDTO> nodes = extApiScenarioModuleMapper.getNodeTreeByProjectId(projectId);
         request.setProjectId(projectId);
         List<String> list = new ArrayList<>();

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionImportUtil.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.base.mapper.ApiModuleMapper;
 import io.metersphere.base.mapper.ApiTestCaseMapper;
 import io.metersphere.commons.constants.NoticeConstants;
+import io.metersphere.commons.constants.ProjectModuleDefaultNodeEnum;
 import io.metersphere.commons.constants.PropertyConstant;
 import io.metersphere.commons.enums.ApiTestDataStatus;
 import io.metersphere.commons.utils.BeanUtils;
@@ -355,7 +356,7 @@ public static ApiTestCaseWithBLOBs addNewCase(ApiDefinitionWithBLOBs apiDefiniti
     public static void setModule(ApiDefinitionWithBLOBs item, ApiModuleMapper apiModuleMapper) {
         if (item != null && StringUtils.isEmpty(item.getModuleId()) || "default-module".equals(item.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
-            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("未规划接口");
+            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo(ProjectModuleDefaultNodeEnum.API_MODULE_DEFAULT_NODE.getNodeName());
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(modules)) {
                 item.setModuleId(modules.get(0).getId());

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -1003,7 +1003,7 @@ public ApiReportResult getDbResult(String testId, String type) {
     private void setModule(ApiDefinitionWithBLOBs item) {
         if (item != null && StringUtils.isEmpty(item.getModuleId()) || "default-module".equals(item.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
-            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("未规划接口");
+            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo(ProjectModuleDefaultNodeEnum.API_MODULE_DEFAULT_NODE.getNodeName());
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(modules)) {
                 item.setModuleId(modules.get(0).getId());
@@ -1840,7 +1840,7 @@ public ApiDefinition getApiDefinition(ApiDefinitionExample apiDefinitionExample)
 
     public void initModulePathAndId(String projectId, ApiDefinitionWithBLOBs test) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("未规划接口").andLevelEqualTo(1);
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo(ProjectModuleDefaultNodeEnum.API_MODULE_DEFAULT_NODE.getNodeName()).andLevelEqualTo(1);
         List<ApiModule> modules = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             test.setModuleId(modules.get(0).getId());

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -1478,7 +1478,7 @@ private static ApiScenarioParamDTO buildParamDto(ApiScenarioMapper batchMapper,
 
     private void replenishScenarioModuleIdPath(String request, ApiScenarioModuleMapper apiScenarioModuleMapper, ApiScenarioWithBLOBs item) {
         ApiScenarioModuleExample example = new ApiScenarioModuleExample();
-        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo("未规划场景");
+        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo(ProjectModuleDefaultNodeEnum.API_SCENARIO_DEFAULT_NODE.getNodeName());
         List<ApiScenarioModule> modules = apiScenarioModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             item.setApiScenarioModuleId(modules.get(0).getId());

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanReportService.java
Patch:
@@ -198,7 +198,7 @@ public void setTestPlanReportPassRate(List<TestPlanReportDTO> list) {
                             if (MapUtils.isNotEmpty(testPlanExecuteReportDTO.getTestPlanUiScenarioIdAndReportIdMap())) {
                                 // 场景用例
                                 reportIds = new ArrayList<>(testPlanExecuteReportDTO.getTestPlanUiScenarioIdAndReportIdMap().values());
-                                planReportCaseDTOS = planApiScenarioReportService.selectForPlanReport(reportIds);
+                                planReportCaseDTOS = planUiScenarioReportService.selectForPlanReport(reportIds);
                                 TestPlanStatusCalculator.buildStatusResultMap(planReportCaseDTOS, statusResultMap, report, ApiReportStatus.SUCCESS.name());
                             }
                         }

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanReportContentMapper.java
Patch:
@@ -8,4 +8,6 @@ public interface ExtTestPlanReportContentMapper {
     boolean isDynamicallyGenerateReport(@Param("reportId") String reportId);
 
     TestPlanReportContentWithBLOBs selectForPassRate(@Param("reportId") String reportId);
+
+    boolean hasRunningReport(@Param("planId") String planId);
 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1375,7 +1375,7 @@ public List<CustomFieldDao> getPluginCustomFields(String projectId) {
                 return fields;
             }
 
-            char filedKey = 'A';
+            char filedKey = 'K';
             for (ThirdPartIssueField item : thirdPartIssueFields) {
                 CustomFieldDao customField = new CustomFieldDao();
                 BeanUtils.copyBean(customField, item);

File: api-test/backend/src/main/java/io/metersphere/sechedule/SwaggerUrlImportJob.java
Patch:
@@ -43,7 +43,6 @@ protected void businessExecute(JobExecutionContext context) {
         request.setPlatform("Swagger2");
         request.setUserId(jobDataMap.getString("userId"));
         request.setType("schedule");
-        request.setUserId(jobDataMap.getString("userId"));
         request.setResourceId(resourceId);
         apiDefinitionService.apiTestImport(null, request);
     }
@@ -59,7 +58,7 @@ public static TriggerKey getTriggerKey(String resourceId) {
     public void setAuthInfo(String config, ApiTestImportRequest request) {
         // 获取鉴权设置
         if (StringUtils.isNotBlank(config)) {
-            JSONObject configObj = JSON.parseObject(config, JSONObject.class);
+            JSONObject configObj = JSONUtil.parseObject(config);
             List<KeyValue> headers = JSONUtil.parseArray(configObj.optString("headers"), KeyValue.class);
             if (CollectionUtils.isNotEmpty(headers)) {
                 request.setHeaders(headers);

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -29,7 +29,7 @@ public interface ExtApiDefinitionExecResultMapper {
 
     long countByTestCaseIDInProject(String projectId);
 
-    List<ExecutedCaseInfoResult> findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("version") String version, @Param("selectFunctionCase") boolean selectFunctionCase, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
+    List<ExecutedCaseInfoResult> findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("versionId") String version, @Param("selectFunctionCase") boolean selectFunctionCase, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
 
     String selectExecResult(String resourceId);
 

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/JMeterParser.java
Patch:
@@ -744,15 +744,15 @@ else if (key instanceof BeanShellSampler) {
                 elementNode = new MsJSR223Processor();
                 BeanUtils.copyBean(elementNode, jsr223Sampler);
                 ((MsJSR223Processor) elementNode).setJsrEnable(false);
-                ((MsJSR223Processor) elementNode).setScript(jsr223Sampler.getPropertyAsString(ElementConstants.SCRIPT));
+                ((MsJSR223Processor) elementNode).setScript(jsr223Sampler.getPropertyAsString("BeanShellSampler.query"));
                 ((MsJSR223Processor) elementNode).setScriptLanguage(jsr223Sampler.getPropertyAsString("scriptLanguage"));
             }
             // 后置脚本
             else if (key instanceof JSR223PostProcessor) {
                 JSR223PostProcessor jsr223Sampler = (JSR223PostProcessor) key;
                 elementNode = new MsJSR223PostProcessor();
                 BeanUtils.copyBean(elementNode, jsr223Sampler);
-                ((MsJSR223PostProcessor) elementNode).setScript(jsr223Sampler.getPropertyAsString("BeanShellSampler.query"));
+                ((MsJSR223PostProcessor) elementNode).setScript(jsr223Sampler.getPropertyAsString(ElementConstants.SCRIPT));
                 ((MsJSR223PostProcessor) elementNode).setScriptLanguage(jsr223Sampler.getPropertyAsString("scriptLanguage"));
             } else if (key instanceof BeanShellPostProcessor) {
                 elementNode = getMsTestElement((BeanShellPostProcessor) key);

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -292,7 +292,9 @@ protected IssuesWithBLOBs insertIssues(IssuesWithBLOBs issues) {
             issues.setId(UUID.randomUUID().toString());
         }
         issues.setCreateTime(System.currentTimeMillis());
-        issues.setUpdateTime(System.currentTimeMillis());
+        if (issues.getUpdateTime() == null) {
+            issues.setUpdateTime(System.currentTimeMillis());
+        }
         issues.setNum(getNextNum(issues.getProjectId()));
         issues.setCreator(SessionUtils.getUserId());
         issuesMapper.insert(issues);

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -77,7 +77,7 @@ public boolean isThirdPartTemplateSupport(String platform) {
         }
         PluginMetaInfo pluginMetaInfo = pluginManager.getPluginMetaInfoByKey(platform);
         if (PlatformPluginService.isPluginPlatform(platform) && pluginMetaInfo == null) {
-            MSException.throwException(Translator.get("platform_plugin_not_exit") + PlatformPluginService.PLUGIN_DOWNLOAD_URL);
+            return false;
         }
         return pluginMetaInfo == null ? false : pluginMetaInfo.isThirdPartTemplateSupport();
     }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -532,6 +532,7 @@ private static void startCoverModule(List<ApiDefinitionWithBLOBs> toUpdateList,
                                     updateApiList.add(definitionWithBLOBs);
                                 }
                             }
+                            apiDefinitionWithBLOBs.setRefId(latestApi.getRefId());
                             apiDefinitionWithBLOBs.setVersionId("trash");
                         } else {
                             addNewVersionApi(apiDefinitionWithBLOBs, latestApi, "update");

File: framework/sdk-parent/jmeter/src/main/java/org/apache/jmeter/util/JSR223TestElement.java
Patch:
@@ -185,7 +185,8 @@ protected Object processFileOrScript(ScriptEngine scriptEngine, final Bindings p
         File scriptFile = new File(getFilename());
         // Hack: bsh-2.0b5.jar BshScriptEngine implements Compilable but throws
         // "java.lang.Error: unimplemented"
-        boolean supportsCompilable = false;
+        boolean supportsCompilable = scriptEngine instanceof Compilable
+                && !"bsh.engine.BshScriptEngine".equals(scriptEngine.getClass().getName()); // NOSONAR // $NON-NLS-1$
         try {
             if (!StringUtils.isEmpty(getFilename())) {
                 if (scriptFile.exists() && scriptFile.canRead()) {

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -85,6 +85,8 @@ public interface ExtApiDefinitionMapper {
 
     void addLatestVersion(String refId);
 
+    void updateVersionModule(@Param("refId") String refId, @Param("versionId") String versionId, @Param("moduleId") String moduleId, @Param("modulePath") String modulePath);
+
     List<String> selectRefIdsForVersionChange(@Param("versionId") String versionId, @Param("projectId") String projectId);
 
     String selectNameById(String testId);

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -90,6 +90,8 @@ public interface ExtApiScenarioMapper {
 
     void addLatestVersion(String refId);
 
+    void updateVersionModule(@Param("refId") String refId, @Param("versionId") String versionId, @Param("moduleId") String moduleId, @Param("modulePath") String modulePath);
+
     List<String> selectRefIdsForVersionChange(@Param("versionId") String versionId, @Param("projectId") String projectId);
 
     List<ApiScenarioWithBLOBs> selectByStatusIsNotTrash();

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -829,6 +829,6 @@ public List<String> getApiCaseProjectIds(String planId) {
         ApiTestCaseExample example = new ApiTestCaseExample();
         example.createCriteria().andIdIn(apiCaseIds);
         List<ApiTestCase> apiTestCases = apiTestCaseMapper.selectByExample(example);
-        return apiTestCases.stream().map(ApiTestCase::getProjectId).collect(Collectors.toList());
+        return apiTestCases.stream().map(ApiTestCase::getProjectId).distinct().collect(Collectors.toList());
     }
 }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanScenarioCaseService.java
Patch:
@@ -1257,6 +1257,6 @@ public List<String> getApiScenarioProjectIds(String planId) {
         ApiScenarioExample example = new ApiScenarioExample();
         example.createCriteria().andIdIn(scenarioIds);
         List<ApiScenario> apiScenarios = apiScenarioMapper.selectByExample(example);
-        return apiScenarios.stream().map(ApiScenario::getProjectId).collect(Collectors.toList());
+        return apiScenarios.stream().map(ApiScenario::getProjectId).distinct().collect(Collectors.toList());
     }
 }

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -150,6 +150,9 @@ public interface ExtTestCaseMapper {
 
     int addLatestVersion(@Param("refId") String refId);
 
+    void updateVersionModule(@Param("refId") String refId, @Param("versionId") String versionId, @Param("moduleId") String moduleId, @Param("modulePath") String modulePath);
+
+
     List<TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> getForNodeEdit(@Param("ids") List<String> ids);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/notice/sender/AbstractNoticeSender.java
Patch:
@@ -190,9 +190,9 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
                                     .collect(Collectors.toList());
                             toUsers.addAll(receivers);
                         }
-                        // 评审评论时这个维护人是创建人
-                        if (paramMap.containsKey("creator")) {
-                            toUsers.add(new Receiver((String) paramMap.get("creator"), NotificationConstants.Type.SYSTEM_NOTICE.name()));
+
+                        if (paramMap.containsKey("maintainer")) {
+                            toUsers.add(new Receiver((String) paramMap.get("maintainer"), NotificationConstants.Type.SYSTEM_NOTICE.name()));
                         }
                     }
                     break;

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseCommentService.java
Patch:
@@ -65,7 +65,7 @@ public TestCaseComment saveComment(SaveCommentRequest request) {
      */
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE_REVIEW, type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseCommentService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, target = "#targetClass.getTestReview(#request.reviewId)", targetClass = TestCaseReviewService.class,
+    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, target = "#targetClass.getTestReviewWithMaintainer(#request)", targetClass = TestCaseReviewService.class,
             event = NoticeConstants.Event.COMMENT, subject = "测试评审通知")
     public void saveComment(TestCaseReviewTestCaseEditRequest request) {
         SaveCommentRequest saveCommentRequest = new SaveCommentRequest();

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiModuleService.java
Patch:
@@ -106,6 +106,7 @@ public List<ApiModuleDTO> getTrashNodeTreeByProtocolAndProjectId(String projectI
         //回收站数据初始化：检查是否存在模块被删除的接口，则把接口挂再默认节点上
         initTrashDataModule(projectId, protocol, versionId);
         //通过回收站里的接口模块进行反显
+        request.setModuleIds(null);
         Map<String, List<ApiDefinition>> trashApiMap =
                 apiDefinitionService.selectApiBaseInfoGroupByModuleId(projectId, protocol, versionId,
                         ApiTestDataStatus.TRASH.getValue(), request);

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioModuleService.java
Patch:
@@ -161,6 +161,7 @@ public List<ApiScenarioModuleDTO> getTrashNodeTreeByProjectId(String projectId,
             List<String> statusList = new ArrayList<>();
             statusList.add(ApiTestDataStatus.TRASH.getValue());
             request.getFilters().put("status", statusList);
+            request.setModuleIds(null);
         }
         Map<String, List<ApiScenario>> trashApiMap = apiAutomationService.selectApiBaseInfoGroupByModuleId(projectId,
                 ApiTestDataStatus.TRASH.getValue(), request);

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/utils/DocumentUtils.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.utils;
 
-import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
 import io.metersphere.vo.Condition;
 import io.metersphere.vo.ElementCondition;
 import net.minidev.json.JSONArray;
@@ -106,7 +106,7 @@ public static String objectToString(Object subj, ThreadLocal<DecimalFormat> deci
         if (subj == null) {
             str = "null";
         } else if (subj instanceof Map) {
-            str = new Gson().toJson(subj);
+            str = new GsonBuilder().serializeNulls().create().toJson(subj);
         } else if (!(subj instanceof Double) && !(subj instanceof Float)) {
             str = subj.toString();
         } else {

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionImportUtilService.java
Patch:
@@ -663,7 +663,7 @@ private static void updateExitData(ApiDefinitionMapper batchMapper, ApiDefinitio
         }
         if (apiDefinition.getLatest()) {
             for (ApiDefinitionWithBLOBs apiDefinitionWithBLOBs : repeatList) {
-                if (apiDefinitionWithBLOBs.getLatest()) {
+                if (apiDefinitionWithBLOBs.getLatest() && !apiDefinition.getId().equalsIgnoreCase(apiDefinitionWithBLOBs.getId())) {
                     apiDefinitionWithBLOBs.setLatest(false);
                 }
                 batchMapper.updateByPrimaryKey(apiDefinitionWithBLOBs);

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -621,7 +621,6 @@ public void copyPlan(String sourcePlanId, String targetPlanId) {
             List<TestPlanApiCase> testPlanApiCases = testPlanApiCaseMapper.selectByExample(testPlanApiCaseExample);
             TestPlanApiCaseMapper apiCaseMapper = sqlSession.getMapper(TestPlanApiCaseMapper.class);
             if (!CollectionUtils.isEmpty(testPlanApiCases)) {
-                Long nextApiOrder = ServiceUtils.getNextOrder(targetPlanId, extTestPlanApiCaseMapper::getLastOrder);
                 for (TestPlanApiCase apiCase : testPlanApiCases) {
                     TestPlanApiCase api = new TestPlanApiCase();
                     api.setId(UUID.randomUUID().toString());
@@ -631,8 +630,7 @@ public void copyPlan(String sourcePlanId, String targetPlanId) {
                     api.setCreateTime(System.currentTimeMillis());
                     api.setUpdateTime(System.currentTimeMillis());
                     api.setCreateUser(SessionUtils.getUserId());
-                    api.setOrder(nextApiOrder);
-                    nextApiOrder += 5000;
+                    api.setOrder(apiCase.getOrder());
                     apiCaseMapper.insert(api);
                 }
             }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanScenarioCaseService.java
Patch:
@@ -711,7 +711,6 @@ public void copyPlan(String sourcePlanId, String targetPlanId) {
             List<TestPlanApiScenario> apiScenarios = testPlanApiScenarioMapper.selectByExampleWithBLOBs(testPlanApiScenarioExample);
             TestPlanApiScenarioMapper apiScenarioMapper = sqlSession.getMapper(TestPlanApiScenarioMapper.class);
             if (!CollectionUtils.isEmpty(apiScenarios)) {
-                Long nextScenarioOrder = ServiceUtils.getNextOrder(targetPlanId, extTestPlanScenarioCaseMapper::getLastOrder);
                 for (TestPlanApiScenario apiScenario : apiScenarios) {
                     TestPlanApiScenario planScenario = new TestPlanApiScenario();
                     planScenario.setId(UUID.randomUUID().toString());
@@ -724,8 +723,7 @@ public void copyPlan(String sourcePlanId, String targetPlanId) {
                     planScenario.setCreateTime(System.currentTimeMillis());
                     planScenario.setUpdateTime(System.currentTimeMillis());
                     planScenario.setCreateUser(SessionUtils.getUserId());
-                    planScenario.setOrder(nextScenarioOrder);
-                    nextScenarioOrder += 5000;
+                    planScenario.setOrder(apiScenario.getOrder());
                     apiScenarioMapper.insert(planScenario);
                 }
             }

File: api-test/backend/src/main/java/io/metersphere/service/MockConfigService.java
Patch:
@@ -137,7 +137,8 @@ public MockConfigResponse genMockConfig(MockConfigRequest request) {
         }
         if (request.getApiId() != null) {
             criteria.andApiIdEqualTo(request.getApiId());
-        } else {
+        } else if (StringUtils.isEmpty(request.getId())) {
+            //todo 刚子有时间把这里优化下： 如果不满足什么条件需要直接返回的话，增加一个check，提前返回。 尽可能不要在逻辑中途返回。会很难维护。
             return new MockConfigResponse(null, new ArrayList<>());
         }
         if (request.getProjectId() != null) {

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiDefinitionExecResultExpand;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;
+import io.metersphere.commons.vo.TaskResultVO;
 import io.metersphere.dto.PlanReportCaseDTO;
 import io.metersphere.task.dto.TaskCenterRequest;
 import org.apache.ibatis.annotations.InsertProvider;
@@ -43,7 +44,7 @@ public interface ExtApiDefinitionExecResultMapper {
     @InsertProvider(type = ExtApiDefinitionExecResultProvider.class, method = "insertListSql")
     void sqlInsert(List<ApiDefinitionExecResult> list);
 
-    List<ApiDefinitionExecResult> findByProjectIds(@Param("request") TaskCenterRequest request);
+    List<TaskResultVO> findByProjectIds(@Param("request") TaskCenterRequest request);
 
     List<String> selectDistinctStatusByReportId(String reportId);
 

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.api.dto.automation.ApiScenarioReportResult;
 import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.base.domain.ApiScenarioReport;
+import io.metersphere.commons.vo.TaskResultVO;
 import io.metersphere.dto.ApiReportCountDTO;
 import io.metersphere.dto.PlanReportCaseDTO;
 import io.metersphere.task.dto.TaskCenterRequest;
@@ -45,7 +46,7 @@ public interface ExtApiScenarioReportMapper {
     @InsertProvider(type = ExtApiScenarioReportProvider.class, method = "insertListSql")
     void sqlInsert(List<ApiScenarioReportResult> list);
 
-    List<ApiScenarioReport> findByProjectIds(@Param("request") TaskCenterRequest request);
+    List<TaskResultVO> findByProjectIds(@Param("request") TaskCenterRequest request);
 
     List<String> selectByProjectIdAndLessThanTime(@Param("projectId") String projectId, @Param("time") long time);
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -904,7 +904,7 @@ public static void initScript(TestElement testElement, ScriptProcessorVO vo) {
             testElement.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("BeanShellSamplerGui"));
         } else {
             testElement.setProperty("scriptLanguage", vo.getScriptLanguage());
-            testElement.setProperty("script", vo.getScript());
+            testElement.setProperty(ElementConstants.SCRIPT, vo.getScript());
         }
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -222,7 +222,7 @@ private TestElement jsr223Assertion(MsAssertionJSR223 assertionJSR223) {
             scriptLanguage = "rhino";
         }
         assertion.setProperty("scriptLanguage", scriptLanguage);
-        assertion.setProperty("script", assertionJSR223.getScript());
+        assertion.setProperty(ElementConstants.SCRIPT, assertionJSR223.getScript());
         return assertion;
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -74,7 +74,7 @@ private void addRequestExtractors(HashTree samplerHashTree, ParameterConfig conf
             shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
             shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
             shell.setProperty("cacheKey", false);
-            shell.setProperty("script", "io.metersphere.utils.JMeterVars.addVars(prev.getResourceId(),vars," + "\"" + extract.toString() + "\"" + ");");
+            shell.setProperty(ElementConstants.SCRIPT, "io.metersphere.utils.JMeterVars.addVars(prev.getResourceId(),vars," + "\"" + extract.toString() + "\"" + ");");
             samplerHashTree.add(shell);
         }
     }

File: api-test/backend/src/main/java/io/metersphere/api/dto/shell/filter/ScriptFilter.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.shell.filter;
 
+import io.metersphere.commons.constants.ElementConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.plugin.core.utils.LogUtil;
 import org.apache.commons.io.IOUtils;
@@ -34,7 +35,7 @@ public static void verify(String language, String label, String script) {
         if (StringUtils.isNotEmpty(script)) {
             final StringBuffer buffer = new StringBuffer();
             switch (language) {
-                case "beanshell":
+                case ElementConstants.BEANSHELL:
                     blackList(buffer, script, beanshell);
                     break;
                 case "python":

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/ScenarioImportParserFactory.java
Patch:
@@ -11,7 +11,7 @@ public static ApiImportParser getImportParser(String platform) {
         } else if (StringUtils.equals(ApiImportPlatform.Postman.name(), platform)) {
             return new PostmanScenarioParser();
         } else if (StringUtils.equals(ApiImportPlatform.Jmeter.name(), platform)) {
-            return new MsJmeterParser();
+            return new JMeterParser();
         } else if (StringUtils.equals(ApiImportPlatform.Har.name(), platform)) {
             return new HarScenarioParser();
         }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiTestDefinitionDiffUtilImpl.java
Patch:
@@ -37,7 +37,7 @@ public class ApiTestDefinitionDiffUtilImpl implements ApiDefinitionDiffUtil {
     public static final String BODY_RAW = "body_raw";
     public static final String REQUEST = "request";
     public static final String BODY_XML = "body_xml";
-    public static final String SCRIPT = "script";
+    public static final String SCRIPT = ElementConstants.SCRIPT;
 
     @Override
     public String diffResponse(String newValue, String oldValue) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.dto.definition.request.assertions.MsAssertions;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
+import io.metersphere.commons.constants.ElementConstants;
 import io.metersphere.commons.constants.StorageConstants;
 import io.metersphere.dto.FileInfoDTO;
 import io.metersphere.dto.JmeterRunRequestDTO;
@@ -36,7 +37,7 @@ public class HashTreeUtil {
     public static final String VALUE = "value";
     public static final String ENABLE = "enable";
     public static final String NAME = "name";
-    public static final String SCRIPT = "script";
+    public static final String SCRIPT = ElementConstants.SCRIPT;
 
     public Map<String, Map<String, String>> getEnvParamsDataByHashTree(HashTree hashTree, BaseEnvironmentService apiTestEnvironmentService) {
         Map<String, Map<String, String>> returnMap = new HashMap<>();

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockApiUtils.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.api.dto.mock.RequestMockParams;
 import io.metersphere.api.dto.shell.filter.ScriptFilter;
 import io.metersphere.api.exec.generator.JSONSchemaGenerator;
+import io.metersphere.commons.constants.ElementConstants;
 import io.metersphere.commons.constants.PropertyConstant;
 import io.metersphere.commons.enums.MockParamConditionEnums;
 import io.metersphere.commons.exception.MSException;
@@ -268,14 +269,14 @@ public static ApiDefinitionResponseDTO getApiResponse(String response) {
     public String getResultByResponseResult(String projectId, JSONObject bodyObj, String url, Map<String, String> headerMap, RequestMockParams requestMockParams, boolean useScript) {
         MockScriptEngineUtils scriptEngineUtils = new MockScriptEngineUtils();
         ScriptEngine scriptEngine = null;
-        String scriptLanguage = "beanshell";
+        String scriptLanguage = ElementConstants.BEANSHELL;
         String script = null;
         if (useScript) {
             if (bodyObj.has("scriptObject")) {
                 try {
                     JSONObject scriptObj = bodyObj.optJSONObject("scriptObject");
                     scriptLanguage = scriptObj.optString("scriptLanguage");
-                    script = scriptObj.optString("script");
+                    script = scriptObj.optString(ElementConstants.SCRIPT);
                 } catch (Exception e) {
                     LogUtil.error(e);
                 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockScriptEngineUtils.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import io.metersphere.api.dto.mock.RequestMockParams;
+import io.metersphere.commons.constants.ElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.JSON;
 import io.metersphere.commons.utils.JSONUtil;
@@ -86,9 +87,9 @@ public ScriptEngine getBaseScriptEngine(String projectId, String scriptLanguage,
                 return null;
             }
             String preScript = StringUtils.EMPTY;
-            if (StringUtils.equalsIgnoreCase(scriptLanguage, "beanshell")) {
+            if (StringUtils.equalsIgnoreCase(scriptLanguage, ElementConstants.BEANSHELL)) {
                 ScriptEngineManager scriptEngineFactory = new ScriptEngineManager();
-                engine = scriptEngineFactory.getEngineByName("beanshell");
+                engine = scriptEngineFactory.getEngineByName(ElementConstants.BEANSHELL);
                 preScript = this.genBeanshellPreScript(url, headerMap, requestMockParams);
             } else if (StringUtils.equalsIgnoreCase(scriptLanguage, "python")) {
                 ScriptEngineManager scriptEngineFactory = new ScriptEngineManager();

File: performance-test/backend/src/main/java/io/metersphere/service/PerformanceTestService.java
Patch:
@@ -321,6 +321,9 @@ public LoadTest edit(EditTestPlanRequest request, List<MultipartFile> files) {
             loadTest.setCreateUser(SessionUtils.getUserId());
             loadTest.setOrder(oldLoadTest.getOrder());
             loadTest.setRefId(oldLoadTest.getRefId());
+            if (oldLoadTest.getLatest()) {
+                loadTest.setLatest(false);
+            }
             //插入文件
             copyLoadTestFiles(testId, loadTest.getId());
             loadTestMapper.insertSelective(loadTest);

File: api-test/backend/src/main/java/io/metersphere/service/MockConfigService.java
Patch:
@@ -137,6 +137,8 @@ public MockConfigResponse genMockConfig(MockConfigRequest request) {
         }
         if (request.getApiId() != null) {
             criteria.andApiIdEqualTo(request.getApiId());
+        } else {
+            return new MockConfigResponse(null, new ArrayList<>());
         }
         if (request.getProjectId() != null) {
             criteria.andProjectIdEqualTo(request.getProjectId());

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1691,6 +1691,7 @@ private IssueTemplateDao getIssueTemplateByProjectId(String projectId) {
         IssueTemplateDao issueTemplateDao;
         Project project = baseProjectService.getProjectById(projectId);
         if (PlatformPluginService.isPluginPlatform(project.getPlatform())
+                && platformPluginService.isThirdPartTemplateSupport(project.getPlatform())
                 && project.getThirdPartTemplate()) {
             // 第三方Jira平台
             issueTemplateDao = getThirdPartTemplate(project.getId());

File: api-test/backend/src/main/java/io/metersphere/controller/home/ApiHomeController.java
Patch:
@@ -79,7 +79,7 @@ public ApiDataCountDTO apiCount(@PathVariable String projectId, @PathVariable St
         long effectiveApiCount = apiDefinitionService.countEffectiveByProjectId(projectId, versionId);
         long apiHasCase = apiDefinitionService.countApiByProjectIdAndHasCase(projectId, versionId);
         List<ApiDefinition> apiNoCaseList = apiDefinitionService.selectEffectiveIdByProjectIdAndHaveNotCase(projectId, versionId);
-        Map<String, Map<String, String>> scenarioUrlList = apiAutomationService.selectScenarioUseUrlByProjectId(projectId, versionId);
+        Map<String, Map<String, String>> scenarioUrlList = apiAutomationService.selectScenarioUseUrlByProjectId(projectId, null);
         int apiInScenario = apiAutomationService.getApiIdInScenario(projectId, scenarioUrlList, apiNoCaseList).size();
 
         if (effectiveApiCount == 0) {
@@ -185,7 +185,6 @@ public ApiDataCountDTO scenarioCount(@PathVariable String projectId, @PathVariab
         apiCountResult.setCoveredCount(coveredDTO.covered);
         apiCountResult.setNotCoveredCount(coveredDTO.notCovered);
         apiCountResult.setApiCoveredRate(coveredDTO.rateOfCovered);
-
         return apiCountResult;
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -1669,9 +1669,11 @@ public long countEffectiveByProjectId(String projectId, String versionId) {
         } else {
             ApiDefinitionExample example = new ApiDefinitionExample();
             ApiDefinitionExample.Criteria criteria = example.createCriteria();
-            criteria.andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andLatestEqualTo(true);
+            criteria.andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash");
             if (StringUtils.isNotBlank(versionId)) {
                 criteria.andVersionIdEqualTo(versionId);
+            } else {
+                criteria.andLatestEqualTo(true);
             }
             return apiDefinitionMapper.countByExample(example);
         }

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -30,9 +30,9 @@ public class MsKafkaListener {
     @Resource
     private TestResultService testResultService;
     // 线程池维护线程的最少数量
-    private final static int CORE_POOL_SIZE = 20;
+    private final static int CORE_POOL_SIZE = 5;
     // 线程池维护线程的最大数量
-    private final static int MAX_POOL_SIZE = 20;
+    private final static int MAX_POOL_SIZE = 5;
     // 线程池维护线程所允许的空闲时间
     private final static int KEEP_ALIVE_TIME = 1;
     // 线程池所使用的缓冲队列大小

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -421,15 +421,15 @@ public static void getExecuteFiles(HashTree tree, String reportId, List<BodyFile
     public static byte[] fileToByte(File tradeFile) {
         byte[] buffer = null;
         try (FileInputStream fis = new FileInputStream(tradeFile);
-             ByteArrayOutputStream bos = new ByteArrayOutputStream();) {
+             ByteArrayOutputStream bos = new ByteArrayOutputStream()) {
             byte[] b = new byte[1024];
             int n;
             while ((n = fis.read(b)) != -1) {
                 bos.write(b, 0, n);
             }
             buffer = bos.toByteArray();
         } catch (Exception e) {
-            LoggerUtil.error(e);
+            LogUtil.error(e);
         }
         return buffer;
     }

File: test-track/backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.controller;
 
+import com.fasterxml.jackson.core.JsonProcessingException;
 import io.metersphere.dto.TestPlanCaseDTO;
 import io.metersphere.plan.dto.TestPlanSimpleReportDTO;
 import io.metersphere.plan.service.TestPlanReportService;
@@ -44,7 +45,7 @@ public TestPlanSimpleReportDTO getReport(@PathVariable String shareId, @PathVari
 
     @GetMapping("/report/export/{shareId}/{planId}/{lang}")
     public void exportHtmlReport(@PathVariable String shareId, @PathVariable String planId,
-                                 @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException {
+                                 @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException, JsonProcessingException {
         shareInfoService.validate(shareId, planId);
         testPlanService.exportPlanReport(planId, lang, response);
     }

File: test-track/backend/src/main/java/io/metersphere/controller/TestPlanController.java
Patch:
@@ -252,7 +252,7 @@ public void runBatch(@RequestBody TestPlanRunRequest request) {
     }
 
     @GetMapping("/report/export/{planId}/{lang}")
-    public void exportHtmlReport(@PathVariable String planId, @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException {
+    public void exportHtmlReport(@PathVariable String planId, @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException, JsonProcessingException {
         testPlanService.exportPlanReport(planId, lang, response);
     }
 
@@ -262,7 +262,7 @@ public TestPlanSimpleReportDTO getExportHtmlReport(@PathVariable String planId,
     }
 
     @GetMapping("/report/db/export/{reportId}/{lang}")
-    public void exportHtmlDbReport(@PathVariable String reportId, @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException {
+    public void exportHtmlDbReport(@PathVariable String reportId, @PathVariable(required = false) String lang, HttpServletResponse response) throws UnsupportedEncodingException, JsonProcessingException {
         testPlanService.exportPlanDbReport(reportId, lang, response);
     }
 

File: test-track/backend/src/main/java/io/metersphere/plan/dto/TestPlanSimpleReportDTO.java
Patch:
@@ -28,6 +28,7 @@ public class TestPlanSimpleReportDTO extends TestPlanReportContent {
      * projectEnvMap: <项目,运行环境>
      */
     private String runMode;
+    private String resourcePool;
     private String envGroupName;
     private Map<String, List<String>> projectEnvMap;
 

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -170,9 +170,9 @@ public IssuesWithBLOBs addIssues(IssuesUpdateRequest issuesRequest, List<Multipa
             issues = platformPluginService.getPlatform(project.getPlatform())
                     .addIssue(platformIssuesUpdateRequest);
 
+            issues.setPlatform(project.getPlatform());
             insertIssues(issues);
             issuesRequest.setId(issues.getId());
-            issues.setPlatform(project.getPlatform());
             // 用例与第三方缺陷平台中的缺陷关联
             handleTestCaseIssues(issuesRequest);
 

File: system-setting/backend/src/main/java/io/metersphere/service/PluginService.java
Patch:
@@ -115,7 +115,7 @@ public void addPlugin(MultipartFile file, String scenario) {
         checkPluginExist(file);
         if (StringUtils.equalsIgnoreCase(scenario, PluginScenario.platform.name())) {
             PluginWithBLOBs plugin = platformPluginService.addPlatformPlugin(file);
-            addPlugin(plugin);
+            platformPluginService.notifiedPlatformPluginAdd(plugin.getId());
         } else {
             List<PluginWithBLOBs> plugins = apiPluginService.addApiPlugin(file);
             plugins.forEach(this::addPlugin);

File: api-test/backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -297,8 +297,8 @@ public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs te
 
         // 线程组
         MsThreadGroup group = new MsThreadGroup();
-        group.setLabel(testCaseWithBLOBs.getName());
-        group.setName(testCaseWithBLOBs.getId());
+        group.setLabel(request.getReportId());
+        group.setName(request.getReportId());
         group.setOnSampleError(true);
         LinkedList<MsTestElement> hashTrees = new LinkedList<>();
         hashTrees.add(element);

File: api-test/backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -53,4 +53,6 @@ public class RunScenarioRequest {
     private String serialReportId;
     private Map<String, ApiScenarioReportResult> reportMap;
 
+    private String versionId;
+
 }

File: framework/gateway/src/main/java/io/metersphere/gateway/filter/SessionFilter.java
Patch:
@@ -21,7 +21,7 @@ public class SessionFilter implements WebFilter {
     private static final String[] TO_SUB_SERVICE = new String[]{"/license", "/system", "/resource", "/sso/callback/logout", "/sso/callback/cas/logout"};
     private static final String PERFORMANCE_DOWNLOAD_PREFIX = "/jmeter/";
     private static final String API_DOWNLOAD_PREFIX = "/api/jmeter/";
-    private static final String TRACK_IMAGE_PREFIX = "/resource/md/get/url";
+    private static final String TRACK_IMAGE_PREFIX = "/resource/md/get/path";
 
     @Resource
     private DiscoveryClient discoveryClient;

File: framework/sdk-parent/xpack-interface/src/main/java/io/metersphere/xpack/track/issue/IssuesPlatform.java
Patch:
@@ -106,10 +106,10 @@ public interface IssuesPlatform {
 
     /**
      * Get请求的代理
-     * @param url
+     * @param path
      * @return
      */
-    ResponseEntity proxyForGet(String url, Class responseEntityClazz);
+    ResponseEntity proxyForGet(String path, Class responseEntityClazz);
 
     /**
      * 同步MS缺陷附件到第三方平台

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -88,6 +88,7 @@ public Platform getPlatform(String platformKey, String workspaceId) {
         ServiceIntegration serviceIntegration = baseIntegrationService.get(integrationRequest);
 
         PlatformRequest pluginRequest = new PlatformRequest();
+        pluginRequest.setWorkspaceId(workspaceId);
         pluginRequest.setIntegrationConfig(serviceIntegration.getConfiguration());
         Platform platform = getPluginManager().getPlatformByKey(platformKey, pluginRequest);
         if (platform == null) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/HarParser.java
Patch:
@@ -43,8 +43,7 @@ public class HarParser extends HarAbstractParser {
     public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest request) {
         Har har = null;
         try {
-            String sourceStr = getApiTestStr(source);
-            har = HarUtils.read(sourceStr);
+            har = HarUtils.read(source);
         } catch (Exception e) {
             MSException.throwException(e.getMessage());
             LogUtil.error(e.getMessage(), e);

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/HarScenarioParser.java
Patch:
@@ -27,8 +27,7 @@ public class HarScenarioParser extends HarScenarioAbstractParser<ScenarioImport>
     public ScenarioImport parse(InputStream source, ApiTestImportRequest request) {
         Har har = null;
         try {
-            String sourceStr = getApiTestStr(source);
-            har = HarUtils.read(sourceStr);
+            har = HarUtils.read(source);
         } catch (Exception e) {
             MSException.throwException(e.getMessage());
             LogUtil.error(e.getMessage(), e);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -230,7 +230,7 @@ public static JSONObject setRefEnable(MsTestElement targetElement, JSONObject or
                     orgJSONArray.forEach(obj -> {
                         JSONObject orgJsonObject = (JSONObject) obj;
                         hashTree.forEach(targetObj -> {
-                            if (StringUtils.equals(orgJsonObject.optString(MsHashTreeService.ID), targetObj.getId())) {
+                            if (StringUtils.equals(orgJsonObject.optString(MsHashTreeService.RESOURCE_ID), targetObj.getResourceId())) {
                                 setRefEnable(targetObj, orgJsonObject);
                             }
                         });

File: test-track/backend/src/main/java/io/metersphere/controller/IssueProxyResourceController.java
Patch:
@@ -17,7 +17,7 @@ public class IssueProxyResourceController {
 
     @GetMapping(value = "/md/get/url")
     public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url, @RequestParam (value = "platform", required = false) String platform,
-                                               @RequestParam ("project_id") String projectId, @RequestParam ("workspace_id") String workspaceId) {
-        return issueProxyResourceService.getMdImageByUrl(url, platform, projectId, workspaceId);
+                                               @RequestParam (value = "workspace_id", required = false) String workspaceId) {
+        return issueProxyResourceService.getMdImageByUrl(url, platform, workspaceId);
     }
 }

File: test-track/backend/src/main/java/io/metersphere/service/wapper/IssueProxyResourceService.java
Patch:
@@ -29,7 +29,7 @@ public class IssueProxyResourceService {
      * @param platform
      * @return
      */
-    public ResponseEntity<byte[]> getMdImageByUrl(String url, String platform, String projectId, String workspaceId) {
+    public ResponseEntity<byte[]> getMdImageByUrl(String url, String platform, String workspaceId) {
         if (url.contains("md/get/url")) {
             MSException.throwException(Translator.get("invalid_parameter"));
         }

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -81,6 +81,7 @@ public class MsHashTreeService {
     public static final String CUSTOM_NUM = "customNum";
     public static final String SHOW_CUSTOM_NUM = "showCustomNum";
     public static final String VERSION_ID = "versionId";
+    public static final String RESOURCE_ID = "resourceId";
 
     public void setHashTree(JSONArray hashTree) {
         // 将引用转成复制
@@ -255,7 +256,7 @@ public static JSONObject setRefEnable(JSONObject targetElement, JSONObject orgEl
                         JSONObject orgJsonObject = (JSONObject) obj;
                         targetJSONArray.forEach(targetObj -> {
                             JSONObject targetJsonObject = (JSONObject) targetObj;
-                            if (StringUtils.equals(orgJsonObject.optString(ID), targetJsonObject.optString(ID))) {
+                            if (StringUtils.equals(orgJsonObject.optString(RESOURCE_ID), targetJsonObject.optString(RESOURCE_ID))) {
                                 setRefEnable(targetJsonObject, orgJsonObject);
                             }
                         });

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -80,6 +80,7 @@ public class MsHashTreeService {
     private static final String ASSERTIONS = ElementConstants.ASSERTIONS;
     public static final String CUSTOM_NUM = "customNum";
     public static final String SHOW_CUSTOM_NUM = "showCustomNum";
+    public static final String VERSION_ID = "versionId";
 
     public void setHashTree(JSONArray hashTree) {
         // 将引用转成复制
@@ -181,6 +182,7 @@ private JSONObject setRequest(JSONObject element) {
             if (definition != null) {
                 Project project = projectMapper.selectByPrimaryKey(definition.getProjectId());
                 element.put(ID, definition.getId());
+                element.put(VERSION_ID, definition.getVersionId());
                 this.setElement(element, definition.getNum(), enable, definition.getVersionName(), project.getVersionEnable());
                 isExist = true;
             }

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
+import io.metersphere.constants.DataStatus;
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.dto.*;
 import io.metersphere.excel.constants.TestPlanTestCaseStatus;
@@ -420,7 +421,7 @@ void calcExecResultStatus(String planId, TestPlanDTOWithMetric testPlan, Functio
         try {
             List<String> execResults = getResultFunc.apply(planId);
             execResults.forEach(item -> {
-                if (StringUtils.isNotBlank(item) && !StringUtils.equalsIgnoreCase("UnExecute", item)) {
+                if (StringUtils.isNotBlank(item) && !StringUtils.equalsIgnoreCase(DataStatus.UNEXECUTE.getValue(), item) && !StringUtils.equalsIgnoreCase(DataStatus.PREPARE.getValue(), item)) {
                     testPlan.setTested(testPlan.getTested() + 1);
                     if (StringUtils.equalsIgnoreCase(item, APITestStatus.Success.name())) {
                         testPlan.setPassed(testPlan.getPassed() + 1);

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger2Parser.java
Patch:
@@ -51,7 +51,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
             sourceStr = getApiTestStr(source);  //  导入的二进制文件转换为 String
             //注：有一特殊情况，swagger2.0 文件里如果在response的parameter参数下的properties的参数里存在 required 为string类型，
             //swagger2.0不会导入，需替换一下
-            sourceStr = replaceStr(sourceStr);
+           sourceStr = replaceStr(sourceStr);
 
             JSONObject jsonObject = JSONUtil.parseObject(sourceStr);
             if (jsonObject.opt("swagger") == null || jsonObject.opt("swagger") == "null" || jsonObject.opt("swagger") == StringUtils.SPACE) {
@@ -73,7 +73,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
     }
 
     public static String replaceStr(String sourceStr) {
-        return sourceStr.replaceAll("\"required\": \".*\"", "\"required\": []");
+        return sourceStr.replaceAll("\"required\": \"(.*?)\"", "\"required\": []");
     }
 
     // 鉴权设置

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -861,18 +861,18 @@ public String run(String testPlanId, String projectId, String userId, String tri
         Map<String, String> scenarioReportMap = null;
         Map<String, String> loadCaseReportMap = null;
         Map<String, String> uiScenarioReportMap = null;
-        if (reportInfoDTO.getApiTestCaseDataMap() != null) {
+        if (MapUtils.isNotEmpty(reportInfoDTO.getApiTestCaseDataMap())) {
             //执行接口案例任务
             LoggerUtil.info("开始执行测试计划接口用例 " + planReportId);
             apiCaseReportMap = this.executeApiTestCase(triggerMode, planReportId, userId, new ArrayList<>(reportInfoDTO.getApiTestCaseDataMap().keySet()), runModeConfig);
         }
-        if (reportInfoDTO.getPlanScenarioIdMap() != null) {
+        if (MapUtils.isNotEmpty(reportInfoDTO.getPlanScenarioIdMap())) {
             //执行场景执行任务
             LoggerUtil.info("开始执行测试计划场景用例 " + planReportId);
             scenarioReportMap = this.executeScenarioCase(planReportId, testPlanId, projectId, runModeConfig, triggerMode, userId, reportInfoDTO.getPlanScenarioIdMap());
         }
 
-        if (reportInfoDTO.getPerformanceIdMap() != null) {
+        if (MapUtils.isNotEmpty(reportInfoDTO.getPerformanceIdMap())) {
             //执行性能测试任务
             LoggerUtil.info("开始执行测试计划性能用例 " + planReportId);
             loadCaseReportMap = perfExecService.executeLoadCase(planReportId, runModeConfig, transformationPerfTriggerMode(triggerMode), reportInfoDTO.getPerformanceIdMap());

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiTestCaseService.java
Patch:
@@ -1289,4 +1289,7 @@ private ApiCaseBasicInfoDTO selectApiCaseBasicInfoById(String id) {
         return extApiTestCaseMapper.selectApiCaseBasicInfoById(id);
     }
 
+    public void updateByPrimaryKeySelective(ApiTestCaseWithBLOBs apiTestCase) {
+        apiTestCaseMapper.updateByPrimaryKeySelective(apiTestCase);
+    }
 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -774,7 +774,8 @@ private void buildCustomField(List<IssuesDao> data, Boolean isThirdTemplate, Lis
                             fieldDao.setValue("\"" + format + "\"");
                         }
                         if (StringUtils.equalsAnyIgnoreCase(customField.getType(), CustomFieldType.SELECT.getValue(),
-                                CustomFieldType.MULTIPLE_SELECT.getValue(), CustomFieldType.CHECKBOX.getValue(), CustomFieldType.RADIO.getValue())) {
+                                CustomFieldType.MULTIPLE_SELECT.getValue(), CustomFieldType.CHECKBOX.getValue(), CustomFieldType.RADIO.getValue())
+                                && !StringUtils.equalsAnyIgnoreCase(customField.getName(), SystemCustomField.ISSUE_STATUS)) {
                             fieldDao.setValue(parseOptionValue(customField.getOptions(), fieldDao.getValue()));
                         }
                     }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiTestCaseService.java
Patch:
@@ -1289,4 +1289,7 @@ private ApiCaseBasicInfoDTO selectApiCaseBasicInfoById(String id) {
         return extApiTestCaseMapper.selectApiCaseBasicInfoById(id);
     }
 
+    public void updateByPrimaryKeySelective(ApiTestCaseWithBLOBs apiTestCase) {
+        apiTestCaseMapper.updateByPrimaryKeySelective(apiTestCase);
+    }
 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -774,7 +774,8 @@ private void buildCustomField(List<IssuesDao> data, Boolean isThirdTemplate, Lis
                             fieldDao.setValue("\"" + format + "\"");
                         }
                         if (StringUtils.equalsAnyIgnoreCase(customField.getType(), CustomFieldType.SELECT.getValue(),
-                                CustomFieldType.MULTIPLE_SELECT.getValue(), CustomFieldType.CHECKBOX.getValue(), CustomFieldType.RADIO.getValue())) {
+                                CustomFieldType.MULTIPLE_SELECT.getValue(), CustomFieldType.CHECKBOX.getValue(), CustomFieldType.RADIO.getValue())
+                                && !StringUtils.equalsAnyIgnoreCase(customField.getName(), SystemCustomField.ISSUE_STATUS)) {
                             fieldDao.setValue(parseOptionValue(customField.getOptions(), fieldDao.getValue()));
                         }
                     }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/variable/JsonSchemaItem.java
Patch:
@@ -28,6 +28,8 @@ public class JsonSchemaItem {
     private BigDecimal minimum;
     private BigDecimal maximum;
     private String schema;
+    protected Object defaultValue;
+
 
     public JsonSchemaItem() {
         this.mock = new LinkedHashMap<>();

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanTestPlanApiCaseService.java
Patch:
@@ -147,6 +147,9 @@ public List<ApiModuleDTO> getNodeByPlanId(List<String> projectIds, String planId
     }
 
     public List<TestPlanFailureApiDTO> buildResponse(List<TestPlanFailureApiDTO> apiAllCases) {
+        if (CollectionUtils.isEmpty(apiAllCases)) {
+            return null;
+        }
         return microService.postForDataArray(serviceName, BASE_UEL + "/build/response", apiAllCases, TestPlanFailureApiDTO.class);
     }
 

File: framework/sdk-parent/xpack-interface/src/main/java/io/metersphere/xpack/track/dto/IssueSyncRequest.java
Patch:
@@ -29,5 +29,5 @@ public class IssueSyncRequest {
 
     private String defaultCustomFields;
 
-    private Map<String, List<io.metersphere.xpack.track.dto.PlatformAttachment>> attachmentMap = new HashMap<>();
+    private Map<String, List<PlatformAttachment>> attachmentMap = new HashMap<>();
 }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseIssueService.java
Patch:
@@ -121,7 +121,7 @@ public void add(String issuesId, String resourceId, String refId, String refType
             testCaseIssues.setIssuesId(issuesId);
             testCaseIssues.setResourceId(resourceId);
             testCaseIssues.setRefType(refType);
-            testCaseIssues.setRefId(StringUtils.isNotBlank(refId) ? null : refId);
+            testCaseIssues.setRefId(StringUtils.isNotBlank(refId) ? refId : null);
             testCaseIssues.setRelateTime(System.currentTimeMillis());
             testCaseIssuesMapper.insert(testCaseIssues);
         }

File: framework/sdk-parent/xpack-interface/src/main/java/io/metersphere/xpack/track/dto/AttachmentRequest.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.request.attachment;
+package io.metersphere.xpack.track.dto;
 
 import lombok.Data;
 

File: framework/sdk-parent/xpack-interface/src/main/java/io/metersphere/xpack/track/service/XpackIssueService.java
Patch:
@@ -1,10 +1,11 @@
 package io.metersphere.xpack.track.service;
 
+import io.metersphere.base.domain.Project;
 import io.metersphere.xpack.track.dto.IssueSyncRequest;
 
 public interface XpackIssueService {
 
-    boolean syncThirdPartyIssues(IssueSyncRequest request);
+    boolean syncThirdPartyIssues(Project project, IssueSyncRequest request);
 
     void syncThirdPartyIssues();
 }

File: test-track/backend/src/main/java/io/metersphere/controller/AttachmentController.java
Patch:
@@ -3,7 +3,7 @@
 import io.metersphere.base.domain.FileAttachmentMetadata;
 import io.metersphere.metadata.service.FileMetadataService;
 import io.metersphere.request.attachment.AttachmentDumpRequest;
-import io.metersphere.request.attachment.AttachmentRequest;
+import io.metersphere.xpack.track.dto.AttachmentRequest;
 import io.metersphere.service.AttachmentService;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.MediaType;

File: test-track/backend/src/main/java/io/metersphere/service/AttachmentService.java
Patch:
@@ -13,7 +13,7 @@
 import io.metersphere.metadata.service.FileMetadataService;
 import io.metersphere.metadata.utils.MetadataUtils;
 import io.metersphere.platform.domain.SyncIssuesAttachmentRequest;
-import io.metersphere.request.attachment.AttachmentRequest;
+import io.metersphere.xpack.track.dto.AttachmentRequest;
 import io.metersphere.service.issue.platform.IssueFactory;
 import io.metersphere.xmind.utils.FileUtil;
 import io.metersphere.xpack.track.dto.AttachmentSyncType;

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -35,7 +35,7 @@
 import io.metersphere.request.OrderRequest;
 import io.metersphere.request.ProjectVersionRequest;
 import io.metersphere.request.ResetOrderRequest;
-import io.metersphere.request.attachment.AttachmentRequest;
+import io.metersphere.xpack.track.dto.AttachmentRequest;
 import io.metersphere.request.member.QueryMemberRequest;
 import io.metersphere.request.testcase.*;
 import io.metersphere.service.issue.platform.IssueFactory;

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/ZentaoPlatform.java
Patch:
@@ -11,7 +11,7 @@
 import io.metersphere.xpack.track.dto.AttachmentSyncType;
 import io.metersphere.constants.AttachmentType;
 import io.metersphere.dto.*;
-import io.metersphere.request.attachment.AttachmentRequest;
+import io.metersphere.xpack.track.dto.AttachmentRequest;
 import io.metersphere.xpack.track.dto.DemandDTO;
 import io.metersphere.xpack.track.dto.IssuesDao;
 import io.metersphere.xpack.track.dto.request.IssuesRequest;
@@ -27,8 +27,6 @@
 import io.metersphere.xpack.track.dto.PlatformStatusDTO;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.http.entity.mime.MultipartEntity;
-import org.apache.http.entity.mime.content.FileBody;
 import org.apache.logging.log4j.util.Strings;
 import org.springframework.core.io.FileSystemResource;
 import org.springframework.http.HttpEntity;

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger3Parser.java
Patch:
@@ -350,7 +350,9 @@ private void parseBody(Content content, Body body) {
             JsonSchemaItem jsonSchemaItem = parseSchema(schema, refSet);
             if (jsonSchemaItem == null) {
                 jsonSchemaItem = new JsonSchemaItem();
-                jsonSchemaItem.setType(schema.getType());
+                if (StringUtils.isNotBlank(schema.getType())) {
+                    jsonSchemaItem.setType(schema.getType());
+                }
             }
             if (MapUtils.isEmpty(jsonSchemaItem.getProperties())) {
                 jsonSchemaItem.setProperties(new HashMap<>());

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -1462,6 +1462,7 @@ public ExcelResponse issueImport(IssueImportRequest request, MultipartFile impor
     }
 
     public void issueExport(IssueExportRequest request, HttpServletResponse response) {
+        EasyExcelExporter.resetCellMaxTextLength();
         Map<String, String> userMap = baseUserService.getProjectMemberOption(request.getProjectId()).stream().collect(Collectors.toMap(User::getId, User::getName));
         // 获取缺陷模板及自定义字段
         IssueTemplateDao issueTemplate = getIssueTemplateByProjectId(request.getProjectId());

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -7,7 +7,6 @@
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.Project;
-import io.metersphere.base.mapper.ApiDefinitionMapper;
 import io.metersphere.base.mapper.ApiScenarioMapper;
 import io.metersphere.base.mapper.ProjectMapper;
 import io.metersphere.base.mapper.ext.ExtApiScenarioMapper;
@@ -39,8 +38,6 @@ public class MsHashTreeService {
     @Resource
     private ApiDefinitionService apiDefinitionService;
     @Resource
-    private ApiDefinitionMapper apiDefinitionMapper;
-    @Resource
     private ExtApiScenarioMapper extApiScenarioMapper;
     @Resource
     private BaseProjectApplicationService baseProjectApplicationService;

File: project-management/backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -149,6 +149,7 @@ public void editGroup(EditGroupRequest request) {
         Group group = new Group();
         request.setScopeId(null);
         BeanUtils.copyBean(group, request);
+        group.setCreator(SessionUtils.getUserId());
         group.setUpdateTime(System.currentTimeMillis());
         groupMapper.updateByPrimaryKeySelective(group);
     }

File: system-setting/backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -147,6 +147,7 @@ public void editGroup(EditGroupRequest request) {
         Group group = new Group();
         request.setScopeId(null);
         BeanUtils.copyBean(group, request);
+        group.setCreator(SessionUtils.getUserId());
         group.setUpdateTime(System.currentTimeMillis());
         groupMapper.updateByPrimaryKeySelective(group);
     }

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/MsApiBackendListener.java
Patch:
@@ -68,7 +68,6 @@ public void handleSampleResults(List<SampleResult> sampleResults, BackendListene
             sampleResults = RetryResultUtil.clearLoops(sampleResults);
             JMeterBase.resultFormatting(sampleResults, dto);
             testResultService.saveResults(dto);
-
             resultVO = ReportStatusUtil.getStatus(dto, resultVO);
             dto.getArbitraryData().put(CommonConstants.LOCAL_STATUS_KEY, resultVO);
             sampleResults.clear();

File: api-test/backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioRequest.java
Patch:
@@ -35,6 +35,9 @@ public class ApiScenarioRequest extends BaseQueryRequest {
      */
     private boolean selectEnvironment = false;
 
+    // 查询功能用例需要关联的场景测试列表
+    private String testCaseId;
+
     //测试计划关联场景过滤掉步骤为0的场景
     private String stepTotal;
 }

File: performance-test/backend/src/main/java/io/metersphere/plan/request/LoadCaseRequest.java
Patch:
@@ -26,5 +26,8 @@ public class LoadCaseRequest extends TestPlanLoadCase {
 
     private List<String> notInIds;
 
+    // 查询功能用例需要关联的性能测试列表
+    private String testCaseId;
+
     private Boolean allowedRepeatCase = false;
 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -6,8 +6,6 @@
 import com.alibaba.fastjson.JSONObject;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-import io.metersphere.constants.IssueStatus;
-import io.metersphere.platform.api.Platform;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.base.mapper.ext.ExtIssueCommentMapper;
@@ -16,8 +14,8 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
 import io.metersphere.constants.AttachmentType;
+import io.metersphere.constants.IssueStatus;
 import io.metersphere.constants.SystemCustomField;
-import io.metersphere.platform.domain.*;
 import io.metersphere.dto.*;
 import io.metersphere.excel.constants.IssueExportHeadField;
 import io.metersphere.excel.domain.ExcelErrData;
@@ -38,6 +36,8 @@
 import io.metersphere.plan.service.TestPlanService;
 import io.metersphere.plan.service.TestPlanTestCaseService;
 import io.metersphere.plan.utils.TestPlanStatusCalculator;
+import io.metersphere.platform.api.Platform;
+import io.metersphere.platform.domain.*;
 import io.metersphere.request.IntegrationRequest;
 import io.metersphere.request.attachment.AttachmentRequest;
 import io.metersphere.request.issues.IssueExportRequest;

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -91,7 +91,7 @@ public interface ExtTestCaseMapper {
 
     List<String> getTestPlanBug(@Param("planId") String planId);
 
-    Long getTestPlanThisWeekBugCount(@Param("planId") String planId, @Param("ids") List<String> ids);
+    Long getTestPlanThisWeekBugCount(@Param("projectId") String projectId, @Param("ids") List<String> ids);
 
     int getTestPlanCase(@Param("planId") String planId);
 

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -167,7 +167,7 @@ public IssuesWithBLOBs addIssues(IssuesUpdateRequest issuesRequest, List<Multipa
 
             insertIssues(issues);
             issuesRequest.setId(issues.getId());
-
+            issues.setPlatform(project.getPlatform());
             // 用例与第三方缺陷平台中的缺陷关联
             handleTestCaseIssues(issuesRequest);
 
@@ -261,6 +261,7 @@ public IssuesWithBLOBs addIssues(IssuesUpdateRequest issuesRequest, List<Multipa
                     // 下载文件管理文件, 同步到第三方平台
                     File refFile = attachmentService.downloadMetadataFile(filemetaId, fileMetadata.getName());
                     if (PlatformPluginService.isPluginPlatform(platform)) {
+                        issuesRequest.setPlatform(platform);
                         attachmentService.syncIssuesAttachment(issuesRequest, refFile, AttachmentSyncType.UPLOAD);
                     } else {
                         IssuesRequest addIssueRequest = new IssuesRequest();

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -104,7 +104,7 @@ private void parseJonBodyMock() {
                         if (!this.getRaw().contains("$ref")) {
                             jsonMockParse(jsonObject);
                         }
-                        this.raw = jsonObject.toString();
+                        this.raw = JSONUtil.parser(jsonObject.toString());
                     }
                 } catch (Exception e) {
                     LoggerUtil.error("json mock value is abnormal", e);

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -2999,8 +2999,6 @@ public Map<String, List<String>> getProjectEnvNameByEnvConfig(Map<String, List<S
                 }
             }
         }
-
-
         return returnMap;
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -520,7 +520,7 @@ public Map<String, List<String>> getPlanProjectEnvMap(List<String> resourceIds)
                     }});
                 }
             });
-            Map<String, List<String>> projectEnvMap = apiDefinitionService.getProjectEnvNameByEnvConfig(projectConfigMap);
+            result = apiDefinitionService.getProjectEnvNameByEnvConfig(projectConfigMap);
         }
         return result;
     }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/base/mapper/ext/BaseApiTestEnvironmentMapper.java
Patch:
@@ -13,4 +13,5 @@ public interface BaseApiTestEnvironmentMapper {
 
     List<ApiModuleDTO> getNodeTreeByProjectId(@Param("projectId") String projectId, @Param("protocol") String protocol);
 
+    List<String> selectNameByIdList(@Param("ids") List<String> envIdList);
 }

File: test-track/backend/src/main/java/io/metersphere/constants/IssueStatus.java
Patch:
@@ -4,6 +4,7 @@
 
 public enum IssueStatus {
     status_new("new", "new"),
+    status_created("created", "new"),
     status_resolved("resolved", "resolved"),
     status_closed("closed", "closed"),
     status_active("active", "active"),

File: api-test/backend/src/main/java/io/metersphere/api/exec/engine/KubernetesTestEngine.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.fabric8.kubernetes.api.model.Pod;
 import io.fabric8.kubernetes.client.KubernetesClient;
-import io.metersphere.api.dto.definition.request.MsTestPlan;
 import io.metersphere.base.domain.TestResource;
 import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.constants.ExtendedParameter;
@@ -66,7 +65,6 @@ private void runApi(TestResource resource) {
                 } else if (!runRequest.isDebug()) {
                     runRequest.getExtendedParameters().put(ExtendedParameter.SAVE_RESULT, true);
                 }
-                runRequest.setJmxScript(new MsTestPlan().getJmx(runRequest.getHashTree()));
                 runRequest.setHashTree(null);
                 LoggerUtil.info("进入DEBUG执行模式", runRequest.getReportId());
             }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -39,6 +39,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/api/jmeter/download/jar", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/jar/**", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/plug/jar", "anon");
+        filterChainDefinitionMap.put("/api/jmeter/get-script", "anon");
 
         // for swagger
         filterChainDefinitionMap.put("/swagger-ui.html", "anon");

File: test-track/backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -568,7 +568,7 @@ private void buildTestCaseCustomFieldMap(TestCaseExcelData data, TestCaseWithBLO
                 if (customFieldDao != null) {
                     CustomFieldResourceDTO customFieldResource = new CustomFieldResourceDTO();
                     customFieldResource.setFieldId(customFieldDao.getId());
-                    if (textFieldSet.contains(customFieldDao.getId())) {
+                    if (textFieldSet.contains(k)) {
                         customFieldResource.setTextValue(v.toString());
                     } else {
                         customFieldResource.setValue(JSON.toJSONString(v));

File: performance-test/backend/src/main/java/io/metersphere/service/PerformanceTestService.java
Patch:
@@ -30,6 +30,7 @@
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.collections4.ListUtils;
 import org.apache.commons.collections4.MapUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.redisson.api.RLock;
 import org.redisson.api.RedissonClient;
@@ -594,7 +595,7 @@ public void copy(SaveTestPlanRequest request) {
         request.setProjectId(copy.getProjectId());
         checkQuota(request, true);
         // copy test
-        String copyName = copy.getName() + " Copy";
+        String copyName = copy.getName() + "_" + RandomStringUtils.randomAlphanumeric(5);
 
         if (StringUtils.length(copyName) > 30) {
             MSException.throwException(Translator.get("load_test_name_length"));

File: test-track/backend/src/main/java/io/metersphere/constants/SystemCustomField.java
Patch:
@@ -7,4 +7,5 @@
 public class SystemCustomField {
     public static final String ISSUE_STATUS = "状态";
     public static final String ISSUE_DEGREE = "严重程度";
+    public static final String CASE_PRIORITY = "用例等级";
 }

File: api-test/backend/src/main/java/io/metersphere/service/PluginService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.base.domain.PluginExample;
 import io.metersphere.base.domain.PluginWithBLOBs;
 import io.metersphere.base.mapper.PluginMapper;
+import io.metersphere.commons.constants.PluginScenario;
 import io.metersphere.commons.utils.BeanUtils;
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.commons.utils.LogUtil;
@@ -63,6 +64,7 @@ private boolean loadJar(String jarPath) {
     public void loadPlugins() {
         try {
             PluginExample example = new PluginExample();
+            example.createCriteria().andScenarioEqualTo(PluginScenario.api.name());
             List<Plugin> plugins = pluginMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(plugins)) {
                 plugins = plugins.stream().collect(Collectors.collectingAndThen(Collectors.toCollection(()

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ErrorReportLibraryUtil.java
Patch:
@@ -143,8 +143,8 @@ private static AssertionFilterResult filterAssertions(Map<String, List<ResponseA
                     }
                 });
             }
-
-            if (MapUtils.isNotEmpty(errorReportAssertionMap)) {
+            LogUtil.info(" FAKE_ERROR result:  config-higherThanError:" + higherThanError + ", config-higherThanSuccess:" + higherThanSuccess + ", resultIsSuccess: " + resultIsSuccess);
+            if (CollectionUtils.isNotEmpty(result.errorCodeList)) {
                 if ((higherThanError && !resultIsSuccess) || (higherThanSuccess && resultIsSuccess)) {
                     result.requestStatus = ApiReportStatus.FAKE_ERROR.name();
                 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/OperLogModule.java
Patch:
@@ -43,6 +43,7 @@ public class OperLogModule {
     public static final String UI_ELEMENT = "UI_ELEMENT";
     public static final String UI_AUTOMATION = "UI_AUTOMATION";
     public static final String UI_AUTOMATION_REPORT = "UI_AUTOMATION_REPORT";
+    public static final String UI_AUTOMATION_SCHEDULE = "UI_AUTOMATION_SCHEDULE";
 
 
 }

File: system-setting/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -248,7 +248,9 @@ public List<SelectOption> getPlatformOptions() {
                     integrations.stream()
                             .filter(integration -> StringUtils.equals(integration.getPlatform(), option.getValue()))
                             .collect(Collectors.toList()).size() > 0
-                ).collect(Collectors.toList());
+                )
+                .distinct()
+                .collect(Collectors.toList());
     }
 
     public List<String> getThirdPartTemplateSupportPlatform() {

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -130,6 +130,8 @@ public List<SelectOption> getPlatformOptions() {
                         integrations.stream()
                                 .filter(integration -> StringUtils.equals(integration.getPlatform(), option.getValue()))
                                 .collect(Collectors.toList()).size() > 0
-                ).collect(Collectors.toList());
+                )
+                .distinct()
+                .collect(Collectors.toList());
     }
 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockApiUtils.java
Patch:
@@ -103,6 +103,7 @@ public static Object getExpectBodyParams(JSONObject bodyObj) {
             } else if (StringUtils.equalsIgnoreCase(type, "XML")) {
                 if (bodyObj.has("raw")) {
                     String xmlStr = bodyObj.optString("raw");
+                    xmlStr = xmlStr.replaceAll("\r","").replaceAll("\n","");
                     JSONObject matchObj = XMLUtil.xmlStringToJSONObject(xmlStr);
                     returnJson = matchObj;
                 }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -942,6 +942,7 @@ public boolean syncThirdPartyIssues(String projectId) {
             List<IssuesDao> issues = extIssuesMapper.getIssueForSync(projectId, project.getPlatform());
 
             if (CollectionUtils.isEmpty(issues)) {
+                deleteSyncKey(projectId);
                 return true;
             }
 

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/ZentaoPlatform.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.commons.constants.IssuesStatus;
 import io.metersphere.commons.constants.ZentaoIssuePlatformStatus;
 import io.metersphere.commons.exception.MSException;
+import io.metersphere.commons.utils.DateUtils;
 import io.metersphere.commons.utils.JSON;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.xpack.track.dto.AttachmentSyncType;
@@ -219,9 +220,9 @@ public IssuesWithBLOBs getUpdateIssues(IssuesWithBLOBs issue, Map bug) {
             String openedDate = bug.get("openedDate").toString();
             String lastEditedDate = bug.get("lastEditedDate").toString();
             if (StringUtils.isNotBlank(openedDate) && !openedDate.startsWith("0000-00-00"))
-                issue.setCreateTime((Long) bug.get("openedDate"));
+                issue.setCreateTime(DateUtils.getTime(openedDate).getTime());
             if (StringUtils.isNotBlank(lastEditedDate) && !lastEditedDate.startsWith("0000-00-00"))
-                issue.setUpdateTime((Long) bug.get("lastEditedDate"));
+                issue.setUpdateTime(DateUtils.getTime(lastEditedDate).getTime());
         } catch (Exception e) {
             LogUtil.error("update zentao time" + e.getMessage());
         }

File: test-track/backend/src/main/java/io/metersphere/base/mapper/TestCaseIssuesMapper.java
Patch:
@@ -3,7 +3,6 @@
 import io.metersphere.base.domain.TestCaseIssues;
 import io.metersphere.base.domain.TestCaseIssuesExample;
 import java.util.List;
-
 import org.apache.ibatis.annotations.Param;
 
 public interface TestCaseIssuesMapper {
@@ -29,4 +28,4 @@ public interface TestCaseIssuesMapper {
 
     int updateByPrimaryKey(TestCaseIssues record);
 
-}
+}
\ No newline at end of file

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -91,6 +91,8 @@ public interface ExtTestCaseMapper {
 
     List<String> getTestPlanBug(@Param("planId") String planId);
 
+    Long getTestPlanThisWeekBugCount(@Param("planId") String planId, @Param("ids") List<String> ids);
+
     int getTestPlanCase(@Param("planId") String planId);
 
     int getTestPlanPassCase(@Param("planId") String planId);

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseIssueService.java
Patch:
@@ -122,6 +122,7 @@ public void add(String issuesId, String resourceId, String refId, String refType
             testCaseIssues.setResourceId(resourceId);
             testCaseIssues.setRefType(refType);
             testCaseIssues.setRefId(StringUtils.isNotBlank(refId) ? null : refId);
+            testCaseIssues.setRelateTime(System.currentTimeMillis());
             testCaseIssuesMapper.insert(testCaseIssues);
         }
     }

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -487,6 +487,7 @@ private void dealWithOtherInfoOfNewVersion(EditTestCaseRequest testCase, String
                         t.setId(UUID.randomUUID().toString());
                         t.setResourceId(testCase.getId());
                         t.setIssuesId(issue.getId());
+                        t.setRelateTime(System.currentTimeMillis());
                         testCaseIssuesMapper.insertSelective(t);
                     });
                 }

File: test-track/backend/src/main/java/io/metersphere/service/TrackService.java
Patch:
@@ -188,7 +188,7 @@ private Map<String, Integer> getPlanBugSize(String planId, String projectId) {
 
         int thisWeekCount = 0;
         if (CollectionUtils.isNotEmpty(unClosedIds)) {
-            thisWeekCount = extIssuesMapper.getThisWeekIssueCount(unClosedIds, projectId).intValue();
+            thisWeekCount = extTestCaseMapper.getTestPlanThisWeekBugCount(planId, unClosedIds).intValue();
         }
         bugSizeMap.put("thisWeekCount", thisWeekCount);
         return bugSizeMap;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/request/OrderRequest.java
Patch:
@@ -41,7 +41,7 @@ public static boolean checkSqlInjection(String script) {
         if (StringUtils.isEmpty(script)) {
             return false;
         }
-        Pattern pattern = Pattern.compile("^\\w+$");
+        Pattern pattern = Pattern.compile("^[\\w|\\-]+$");
         Matcher matcher = pattern.matcher(script.toLowerCase());
         return !matcher.find();
     }

File: test-track/backend/src/main/java/io/metersphere/controller/IssuesController.java
Patch:
@@ -153,9 +153,9 @@ public List<ZentaoBuild> getZentaoBuilds(@RequestBody IssuesRequest request) {
         return issuesService.getZentaoBuilds(request);
     }
 
-    @PostMapping("/sync")
-    public boolean getPlatformIssue(@RequestBody IssueSyncRequest request) {
-        return issuesService.syncThirdPartyIssues(request);
+    @GetMapping("/sync/{projectId}")
+    public boolean getPlatformIssue(@PathVariable String projectId) {
+        return issuesService.syncThirdPartyIssues(projectId);
     }
 
     @GetMapping("/sync/check/{projectId}")

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiExecutionInfoService.java
Patch:
@@ -56,7 +56,7 @@ public void insertExecutionInfo(ApiDefinitionExecResult result) {
                 } else {
                     String apiCaseIdInTestPlan = extTestPlanApiCaseMapper.getApiTestCaseIdById(resourceID);
                     if (StringUtils.isNotEmpty(apiCaseIdInTestPlan)) {
-                        apiBasieInfoByCaseId = extApiTestCaseMapper.selectApiBasicInfoByCaseId(resourceID);
+                        apiBasieInfoByCaseId = extApiTestCaseMapper.selectApiBasicInfoByCaseId(apiCaseIdInTestPlan);
                         if (apiBasieInfoByCaseId != null) {
                             this.insertApiCaseExecutionInfo(resourceID, result.getStatus(), result.getTriggerMode(), result.getProjectId(), ExecutionExecuteTypeEnum.TEST_PLAN.name(), apiBasieInfoByCaseId.getVersionId());
                         }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -399,8 +399,7 @@ public void checkFilterHasCoverage(ApiDefinitionRequest request) {
             if (StringUtils.equalsAnyIgnoreCase(request.getApiCoverage(), ApiHomeFilterEnum.NOT_COVERED, ApiHomeFilterEnum.COVERED)) {
                 //计算没有用例接口的覆盖数量
                 definitionList = this.selectEffectiveIdByProjectIdAndHaveNotCase(request.getProjectId());
-            }
-            if (StringUtils.equalsAnyIgnoreCase(request.getScenarioCoverage(), ApiHomeFilterEnum.NOT_COVERED, ApiHomeFilterEnum.COVERED)) {
+            } else if (StringUtils.equalsAnyIgnoreCase(request.getScenarioCoverage(), ApiHomeFilterEnum.NOT_COVERED, ApiHomeFilterEnum.COVERED)) {
                 //计算全部用例
                 definitionList = this.selectEffectiveIdByProjectId(request.getProjectId());
             }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/service/FileMetadataService.java
Patch:
@@ -124,6 +124,9 @@ public FileMetadata saveFile(MultipartFile file, FileMetadataWithBLOBs fileMetad
         // 上传文件
         FileRequest request = new FileRequest(fileMetadata.getProjectId(), fileMetadata.getName(), fileMetadata.getType());
         String path = fileManagerService.upload(file, request);
+        if (StringUtils.isBlank(path)) {
+            MSException.throwException(Translator.get("upload_file_fail_get_file_path_fail"));
+        }
         fileMetadata.setPath(path);
         if (fileMetadataMapper.selectByPrimaryKey(fileMetadata.getId()) == null) {
             fileMetadata.setLatest(true);

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -63,7 +63,7 @@ public boolean isThirdPartTemplateSupport(String platform) {
             return false;
         }
         PluginMetaInfo pluginMetaInfo = pluginManager.getPluginMetaInfoByKey(platform);
-        return pluginMetaInfo.isThirdPartTemplateSupport();
+        return pluginMetaInfo == null ? false : pluginMetaInfo.isThirdPartTemplateSupport();
     }
 
     public Platform getPlatform(String platformKey, String workspaceId) {

File: test-track/backend/src/main/java/io/metersphere/service/PlatformPluginService.java
Patch:
@@ -30,8 +30,6 @@ public class PlatformPluginService {
     private BasePluginService basePluginService;
     @Resource
     private BaseIntegrationService baseIntegrationService;
-    @Resource
-    private BaseProjectService baseProjectService;
 
     private PlatformPluginManager pluginManager;
 

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -298,7 +298,8 @@ private void assemblyPlanScenario(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
                 Map<String, String> diffEnvMap = new HashMap<>();
                 Map<String, String> envMap = runModeConfig.getEnvMap();
                 planEnvMap.forEach((k,v)->{
-                    if (envMap.get(k)!=null){
+                    if (envMap != null && envMap.get(k)!=null){
+
                         diffEnvMap.put(k,envMap.get(k));
                     }
                 });

File: api-test/backend/src/main/java/io/metersphere/listener/ApiAppStartListener.java
Patch:
@@ -18,8 +18,6 @@
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.boot.ApplicationArguments;
 import org.springframework.boot.ApplicationRunner;
-import org.springframework.boot.context.event.ApplicationReadyEvent;
-import org.springframework.context.ApplicationListener;
 import org.springframework.stereotype.Component;
 
 import javax.annotation.Resource;

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -1,9 +1,9 @@
 package io.metersphere.service;
 
 import io.metersphere.api.dto.automation.ApiScenarioDTO;
+import io.metersphere.api.dto.definition.ApiDefinitionResult;
 import io.metersphere.api.dto.definition.ApiTestCaseInfo;
 import io.metersphere.api.dto.definition.request.ElementUtil;
-import io.metersphere.base.domain.ApiDefinition;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.Project;
@@ -174,11 +174,11 @@ private JSONObject setRequest(JSONObject element) {
                 this.setElement(element, apiTestCase.getNum(), enable, apiTestCase.getVersionName(), apiTestCase.getVersionEnable());
             }
         } else if (StringUtils.equalsIgnoreCase(element.optString(REFERENCED), COPY)) {
-            ApiDefinition definition = apiDefinitionMapper.selectByPrimaryKey(element.optString(ID));
+            ApiDefinitionResult definition = apiDefinitionService.getById(element.optString(ID));
             if (definition != null) {
                 Project project = projectMapper.selectByPrimaryKey(definition.getProjectId());
                 element.put(ID, definition.getId());
-                this.setElement(element, definition.getNum(), enable, project.getName(), project.getVersionEnable());
+                this.setElement(element, definition.getNum(), enable, definition.getVersionName(), project.getVersionEnable());
                 isExist = true;
             }
         }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -20,9 +20,9 @@ public interface ExtApiScenarioReportMapper {
 
     long countByProjectID(String projectId);
 
-    long countByProjectIdAndCreateInThisWeek(@Param("projectId") String projectId, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
+    long countByProjectIdAndCreateInThisWeek(@Param("projectId") String projectId, @Param("executeType") String executeType, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
-    long countByProjectIdAndCreateAndByScheduleInThisWeek(@Param("projectId") String projectId, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
+    long countByProjectIdAndCreateAndByScheduleInThisWeek(@Param("projectId") String projectId, @Param("executeType") String executeType, @Param("version") String version, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
     List<ApiDataCountResult> countByProjectIdGroupByExecuteResult(@Param("projectId") String projectId, @Param("version") String version);
 

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -2010,8 +2010,8 @@ public DeleteCheckResult checkBeforeDelete(ApiScenarioBatchRequest request) {
         return result;
     }
 
-    public long countExecuteTimesByProjectID(String projectId, String triggerMode, String version) {
-        return scenarioExecutionInfoService.countExecuteTimesByProjectID(projectId, triggerMode, version);
+    public long countExecuteTimesByProjectID(String projectId, String triggerMode, String executeType, String version) {
+        return scenarioExecutionInfoService.countExecuteTimesByProjectID(projectId, triggerMode, executeType, version);
     }
 
     /**

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -745,6 +745,7 @@ public void run(String testId, String reportId) {
         if (apiCase == null) {
             MSException.throwException("用例已经被删除");
         }
+
         String reportName = apiCase.getName();
         ApiDefinitionExecResultWithBLOBs result = ApiDefinitionExecResultUtil.add(testId, ApiReportStatus.RUNNING.name(), reportId, Objects.requireNonNull(SessionUtils.getUser()).getId());
         result.setName(reportName);

File: framework/gateway/src/main/java/io/metersphere/gateway/service/SSOService.java
Patch:
@@ -3,6 +3,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import io.metersphere.base.domain.AuthSource;
 import io.metersphere.base.domain.User;
+import io.metersphere.commons.constants.UserSource;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.user.SessionUser;
 import io.metersphere.commons.utils.*;
@@ -303,8 +304,8 @@ private Optional<SessionUser> doOauth2Login(AuthSource authSource, String access
             user.setSource(authSource.getType());
             userLoginService.createOssUser(user);
         } else {
-            if (StringUtils.equals(u.getEmail(), email) && !StringUtils.equals(u.getId(), userid)) {
-                MSException.throwException("email already exists!");
+            if (!StringUtils.equals(u.getSource(), UserSource.OAuth2.name())) {
+                MSException.throwException("user already exist, user source type is " + u.getSource());
             }
         }
 

File: performance-test/backend/src/main/java/io/metersphere/engine/KubernetesTestEngine.java
Patch:
@@ -92,6 +92,7 @@ private void runTest(TestResource resource, Object[] ratios, int resourceIndex)
             kubernetesProvider.deployJmeter(request, clientCredential);
         } catch (Exception e) {
             LogUtil.error(e);
+            MSException.throwException("kubernetes deploy jmeter error please check the yaml file");
         }
     }
 

File: test-track/backend/src/main/java/io/metersphere/controller/TestReviewTestCaseController.java
Patch:
@@ -36,14 +36,14 @@ public Pager<List<TestReviewCaseDTO>> getTestPlanCases(@PathVariable int goPage,
     }
 
     @PostMapping("/delete")
-    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_DELETE)
+    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_RELEVANCE_OR_CANCEL)
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE_REVIEW, type = OperLogConstants.UN_ASSOCIATE_CASE, beforeEvent = "#msClass.getLogDetails(#request)", msClass = TestReviewTestCaseService.class)
     public int deleteTestCase(@RequestBody DeleteRelevanceRequest request) {
         return testReviewTestCaseService.deleteTestCase(request);
     }
 
     @PostMapping("/batch/delete")
-    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_DELETE)
+    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_RELEVANCE_OR_CANCEL)
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE_REVIEW, type = OperLogConstants.UN_ASSOCIATE_CASE, beforeEvent = "#msClass.getLogDetails(#request)", msClass = TestReviewTestCaseService.class)
     public void deleteTestCaseBatch(@RequestBody TestReviewCaseBatchRequest request) {
         testReviewTestCaseService.deleteTestCaseBatch(request);

File: api-test/backend/src/main/java/io/metersphere/controller/ext/ExtProjectController.java
Patch:
@@ -55,7 +55,7 @@ public void updateCurrentUserByResourceId(@PathVariable String resourceId) {
         extProjectApplicationService.updateCurrentUserByResourceId(resourceId);
     }
 
-    @PostMapping("/list/related")
+    @PostMapping("/api/project/list/related")
     public List<ProjectDTO> getUserProject(@RequestBody ApiProjectRequest request) {
         return extProjectApplicationService.getUserProject(request);
     }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -26,7 +26,6 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.config.Arguments;
 import org.apache.jorphan.collections.HashTree;
@@ -230,7 +229,7 @@ public static JSONObject setRefEnable(MsTestElement targetElement, JSONObject or
         if (JSONObject.NULL.equals(orgElement) || targetElement == null) {
             return orgElement;
         }
-        if (BooleanUtils.isFalse(orgElement.optBoolean(MsHashTreeService.ENABLE))) {
+        if (!orgElement.optBoolean(MsHashTreeService.ENABLE)) {
             orgElement.put(MsHashTreeService.ENABLE, false);
         } else {
             orgElement.put(MsHashTreeService.ENABLE, targetElement.isEnable());

File: api-test/backend/src/main/java/io/metersphere/api/exec/engine/KubernetesTestEngine.java
Patch:
@@ -4,7 +4,6 @@
 import io.fabric8.kubernetes.client.KubernetesClient;
 import io.metersphere.api.dto.definition.request.MsTestPlan;
 import io.metersphere.base.domain.TestResource;
-import io.metersphere.commons.constants.ExtendedParameter;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.JSON;
 import io.metersphere.commons.utils.LogUtil;
@@ -60,7 +59,7 @@ private void runApi(TestResource resource) {
             String path = "api/start";
             if (runRequest.getHashTree() != null) {
                 path = "debug";
-                runRequest.getExtendedParameters().put(ExtendedParameter.JMX, new MsTestPlan().getJmx(runRequest.getHashTree()));
+                runRequest.setJmxScript(new MsTestPlan().getJmx(runRequest.getHashTree()));
                 runRequest.setHashTree(null);
                 LoggerUtil.info("进入DEBUG执行模式", runRequest.getReportId());
             }

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -172,7 +172,7 @@ private synchronized void nodeDebug(JmeterRunRequestDTO request) {
             ApiPoolDebugService apiPoolDebugService = CommonBeanFactory.getBean(ApiPoolDebugService.class);
             if (apiPoolDebugService != null) {
                 List<TestResource> resources = GenerateHashTreeUtil.setPoolResource(request.getPoolId());
-                request.getExtendedParameters().put(ExtendedParameter.JMX, new MsTestPlan().getJmx(request.getHashTree()));
+                request.setJmxScript(new MsTestPlan().getJmx(request.getHashTree()));
                 request.setHashTree(null);
                 apiPoolDebugService.run(request, resources);
             }

File: api-test/backend/src/main/java/io/metersphere/commons/constants/ExtendedParameter.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.commons.constants;
 
 public class ExtendedParameter {
-    public static final String JMX = "JMX";
     public static final String SYNC_STATUS = "SYN_RES";
     public static final String SAVE_RESULT = "SAVE_RESULT";
+    public static final String PROJECT_ID = "projectId";
 }

File: framework/sdk-parent/jmeter/src/main/java/io/metersphere/utils/CustomizeFunctionUtil.java
Patch:
@@ -31,6 +31,7 @@ public static void initCustomizeClass(TestPlan testPlan) {
             JMeterContext context = JMeterContextService.getContext();
             if (StringUtils.isNotEmpty(pathStr) && context != null) {
                 List<String> jarPaths = JsonUtils.parseObject(pathStr, List.class);
+                LoggerUtil.info(testPlan.getName() + "加载JAR:", jarPaths);
                 if (CollectionUtils.isNotEmpty(jarPaths)) {
                     // 初始化类加载器
                     GroovyClassLoader loader = MsClassLoader.getDynamic(jarPaths);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -36,6 +36,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/api/jmeter/download", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/files", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/jar", "anon");
+        filterChainDefinitionMap.put("/api/jmeter/download/jar/**", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/plug/jar", "anon");
 
         // for swagger

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiTestCaseService.java
Patch:
@@ -373,7 +373,7 @@ public void deleteBodyFiles(String testId) {
 
     public void checkNameExist(SaveApiTestCaseRequest request) {
         if (hasSameCase(request)) {
-            MSException.throwException(Translator.get("load_test_already_exists") + ": " + request.getName());
+            MSException.throwException(Translator.get("case_name_is_already_exist") + ": " + request.getName());
         }
     }
 

File: performance-test/backend/src/main/java/io/metersphere/service/PerformanceTestService.java
Patch:
@@ -835,7 +835,7 @@ public Integer getGranularity(String reportId) {
         try {
             LoadTestReportWithBLOBs report = loadTestReportMapper.selectByPrimaryKey(reportId);
             Map advancedConfig = JSON.parseObject(report.getAdvancedConfiguration(), Map.class);
-            if (advancedConfig.get("granularity") != null) {
+            if (advancedConfig.get("granularity") != null && StringUtils.isNotEmpty(advancedConfig.get("granularity").toString())) {
                 return (int) advancedConfig.get("granularity") * 1000;// 单位是ms
             }
             AtomicReference<Integer> maxDuration = new AtomicReference<>(0);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/UserSource.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum UserSource {
-    LOCAL, LDAP, CAS, OIDC
+    LOCAL, LDAP, CAS, OIDC, OAuth2
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/ScheduleGroup.java
Patch:
@@ -2,5 +2,5 @@
 
 public enum ScheduleGroup {
     API_TEST, PERFORMANCE_TEST, API_SCENARIO_TEST, TEST_PLAN_TEST, SWAGGER_IMPORT, ISSUE_SYNC,
-    SCHEDULE_SEND_REPORT, CLEAN_UP_REPORT
+    SCHEDULE_SEND_REPORT, CLEAN_UP_REPORT, UI_SCENARIO_TEST
 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/GenerateHashTreeUtil.java
Patch:
@@ -123,6 +123,9 @@ public static void setScenarioEnv(MsScenario scenario, ApiScenarioWithBLOBs apiS
     }
 
     public static HashTree generateHashTree(ApiScenarioWithBLOBs item, Map<String, String> planEnvMap, JmeterRunRequestDTO runRequest) {
+        // 检查执行内容合规性
+        PerformInspectionUtil.countMatches(item.getScenarioDefinition(), item.getId());
+
         HashTree jmeterHashTree = new HashTree();
         MsTestPlan testPlan = new MsTestPlan();
         if (!runRequest.getPool().isPool()) {

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/utils/ReportStatusUtil.java
Patch:
@@ -64,7 +64,7 @@ public static ResultVO getStatus(ResultDTO dto, ResultVO resultVO) {
         // 默认状态
         String status = dto.getRequestResults().isEmpty() && StringUtils.isEmpty(resultVO.getStatus())
                 ? ApiReportStatus.PENDING.name()
-                : ApiReportStatus.SUCCESS.name();
+                : StringUtils.defaultIfEmpty(resultVO.getStatus(), ApiReportStatus.SUCCESS.name());
 
         if (errorSize > 0) {
             status = ApiReportStatus.ERROR.name();

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiDefinitionController.java
Patch:
@@ -72,7 +72,6 @@ public Pager<List<ApiDefinitionResult>> list(@PathVariable int goPage, @PathVari
     }
 
     @PostMapping("/list/week/{projectId}/{goPage}/{pageSize}")
-    @RequiresPermissions("PROJECT_API_DEFINITION:READ")
     public Pager<List<ApiDefinitionResult>> weekList(@PathVariable String projectId, @PathVariable int goPage, @PathVariable int pageSize) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, apiDefinitionService.weekList(projectId));

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiCaseExecutionInfoService.java
Patch:
@@ -43,9 +43,9 @@ public void deleteByProjectId(String projectId) {
         }
     }
 
-    public long countExecutedTimesByProjectId(String projectId) {
+    public long countExecutedTimesByProjectId(String projectId, String executeType) {
         ApiCaseExecutionInfoExample example = new ApiCaseExecutionInfoExample();
-        example.createCriteria().andProjectIdEqualTo(projectId);
+        example.createCriteria().andProjectIdEqualTo(projectId).andExecuteTypeEqualTo(executeType);
         return apiCaseExecutionInfoMapper.countByExample(example);
     }
 

File: api-test/backend/src/main/java/io/metersphere/controller/home/ApiHomeController.java
Patch:
@@ -117,7 +117,7 @@ public ApiDataCountDTO apiCaseCount(@PathVariable String projectId) {
             DecimalFormat coveredRateFormat = new DecimalFormat("0.0");
             apiCountResult.setPassRate(coveredRateFormat.format(coveredRateNumber) + "%");
 
-            float executedRateNumber = (float) apiCountResult.getExecutedCount() * 100 / apiCountResult.getTotal();
+            float executedRateNumber = (float) apiCountResult.getExecutedData() * 100 / apiCountResult.getTotal();
             DecimalFormat executedRateFormat = new DecimalFormat("0.0");
             apiCountResult.setExecutedRate(executedRateFormat.format(executedRateNumber) + "%");
         } else {
@@ -137,6 +137,7 @@ public ApiDataCountDTO scenarioCount(@PathVariable String projectId) {
         apiCountResult.setCreatedInWeek(dateCountByCreateInThisWeek);
         long executedInThisWeekCountNumber = apiScenarioReportService.countByProjectIdAndCreateInThisWeek(projectId);
         apiCountResult.setExecutedTimesInWeek(executedInThisWeekCountNumber);
+        //所有执行次数
         long executedCount = apiAutomationService.countExecuteTimesByProjectID(projectId, null);
         apiCountResult.setExecutedCount(executedCount);
         //未执行、未通过、已通过
@@ -148,7 +149,7 @@ public ApiDataCountDTO scenarioCount(@PathVariable String projectId) {
             float coveredRateNumber = (float) apiCountResult.getPassCount() * 100 / executedCount;
             apiCountResult.setPassRate(df.format(coveredRateNumber) + "%");
             //执行率
-            float executedRateNumber = (float) apiCountResult.getExecutedCount() * 100 / apiCountResult.getTotal();
+            float executedRateNumber = (float) apiCountResult.getExecutedData() * 100 / apiCountResult.getTotal();
             apiCountResult.setExecutedRate(df.format(executedRateNumber) + "%");
         }
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanTestPlanApiCaseService.java
Patch:
@@ -1,12 +1,14 @@
 package io.metersphere.plan.service.remote.api;
 
+import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.*;
 import io.metersphere.plan.dto.*;
 import io.metersphere.plan.request.api.ApiTestCaseRequest;
 import io.metersphere.plan.service.TestPlanService;
 import io.metersphere.plan.utils.TestPlanStatusCalculator;
+import io.metersphere.utils.DiscoveryUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
@@ -36,15 +38,13 @@ public class PlanTestPlanApiCaseService extends ApiTestService {
      * @return 接口用例的最新执行报告
      */
     public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
-        try {
+        if (DiscoveryUtil.hasService(MicroServiceName.API_TEST)) {
             List<PlanReportCaseDTO> planReportCaseDTOS = selectStatusForPlanReport(planId);
             //计算测试计划中接口用例的相关数据
             calculatePlanReport(report, planReportCaseDTOS);
             //记录接口用例的运行环境信息
             List<String> idList = planReportCaseDTOS.stream().map(PlanReportCaseDTO::getId).collect(Collectors.toList());
             report.setProjectEnvMap(getPlanProjectEnvMap(idList));
-        } catch (MSException e) {
-            LogUtil.error(e);
         }
     }
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanTestPlanScenarioCaseService.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.plan.service.remote.api;
 
 import io.metersphere.base.domain.TestPlanReport;
+import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.*;
@@ -10,6 +11,7 @@
 import io.metersphere.plan.request.api.ApiScenarioRequest;
 import io.metersphere.plan.service.TestPlanService;
 import io.metersphere.plan.utils.TestPlanStatusCalculator;
+import io.metersphere.utils.DiscoveryUtil;
 import org.jetbrains.annotations.NotNull;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
@@ -31,14 +33,12 @@ public class PlanTestPlanScenarioCaseService extends ApiTestService {
     PlanApiScenarioReportService planApiScenarioReportService;
 
     public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
-        try {
+        if (DiscoveryUtil.hasService(MicroServiceName.API_TEST)) {
             List<PlanReportCaseDTO> planReportCaseDTOS = selectStatusForPlanReport(planId);
             calculatePlanReport(report, planReportCaseDTOS);
             //记录接口用例的运行环境信息
             List<String> idList = planReportCaseDTOS.stream().map(PlanReportCaseDTO::getId).collect(Collectors.toList());
             report.setProjectEnvMap(getPlanProjectEnvMap(idList));
-        } catch (MSException e) {
-            LogUtil.error(e);
         }
     }
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/performance/PlanTestPlanLoadCaseService.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.plan.service.remote.performance;
 
+import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.commons.constants.TestPlanLoadCaseStatus;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
@@ -13,6 +14,7 @@
 import io.metersphere.plan.request.performance.LoadPlanReportDTO;
 import io.metersphere.plan.service.TestPlanService;
 import io.metersphere.plan.utils.TestPlanStatusCalculator;
+import io.metersphere.utils.DiscoveryUtil;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 
@@ -34,11 +36,9 @@ public class PlanTestPlanLoadCaseService extends LoadTestService {
     private TestPlanService testPlanService;
 
     public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
-        try {
+        if (DiscoveryUtil.hasService(MicroServiceName.PERFORMANCE_TEST)) {
             List<PlanReportCaseDTO> planReportCaseDTOS = selectStatusForPlanReport(planId);
             calculatePlanReport(report, planReportCaseDTOS);
-        } catch (MSException e) {
-            LogUtil.error(e);
         }
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/ShareInfoService.java
Patch:
@@ -277,7 +277,7 @@ public List<ApiDocumentInfoDTO> conversionModelListToDTO(List<ApiDefinitionWithB
                                             if (isJsonSchema) {
                                                 jsonSchemaBodyDTO.setJsonSchema(bodyObj.get("jsonSchema"));
                                                 apiInfoDTO.setJsonSchemaBody(jsonSchemaBodyDTO);
-                                                String raw = JSONSchemaGenerator.getJson(bodyObj.get("jsonSchema").asText());
+                                                String raw = JSONSchemaGenerator.getJson(JSONUtil.toJSONString(bodyObj.get("jsonSchema")));
                                                 this.setPreviewData(previewJsonArray, raw);
                                             } else {
                                                 if (bodyObj.has("raw")) {

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportService.java
Patch:
@@ -426,7 +426,6 @@ public ApiScenarioReport updateScenario(ResultDTO dto) {
         if (scenario != null) {
             scenario.setLastResult(resultVO.getStatus());
             scenario.setPassRate(resultVO.computerPassRate());
-            scenario.setPassRate(resultVO.computerPassRate());
             scenario.setReportId(dto.getReportId());
             int executeTimes = 0;
             if (scenario.getExecuteTimes() != null) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -34,7 +34,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         requestDesc.getAuth(); // todo 认证方式等待优化
         PostmanUrl url = requestDesc.getUrl();
         MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url == null ? StringUtils.EMPTY : url.getRaw(), requestDesc.getMethod(),
-                requestDesc.getBody().get("jsonSchema") == null ? StringUtils.EMPTY : requestDesc.getBody().get("jsonSchema").textValue());
+                (requestDesc.getBody()==null||requestDesc.getBody().get("jsonSchema") == null)? StringUtils.EMPTY : requestDesc.getBody().get("jsonSchema").textValue());
         request.setRest(parseKeyValue(requestDesc.getUrl().getVariable()));
         if (StringUtils.isNotBlank(request.getPath())) {
             String path = request.getPath().split("\\?")[0];

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/vo/system/SystemReference.java
Patch:
@@ -81,8 +81,7 @@ public class SystemReference {
         messageColumns.put("type", "通知类型");
         messageColumns.put("event", "事件");
         messageColumns.put("taskType", "任务类型");
-        messageColumns.put("webhook", "勾子");
-        messageColumns.put("identification", "鉴别");
+        messageColumns.put("webhook", "webhook");
         messageColumns.put("template", "模版");
 
         fieldColumns.put("name", "用户名称");

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -147,6 +147,7 @@ private MessageDetail getMessageDetail(List<MessageTask> messageTasks) {
         MessageDetail messageDetail = new MessageDetail();
         for (MessageTask m : messageTasks) {
             userIds.add(m.getUserId());
+            messageDetail.setId(m.getId());
             messageDetail.setEvent(m.getEvent());
             messageDetail.setTaskType(m.getTaskType());
             messageDetail.setWebhook(m.getWebhook());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/base/mapper/ext/BaseTaskMapper.java
Patch:
@@ -12,7 +12,7 @@ public interface BaseTaskMapper {
     List<TaskCenterDTO> getApiTasks(@Param("request") TaskCenterRequest request);
     List<TaskCenterDTO> getScenarioTasks(@Param("request") TaskCenterRequest request);
     List<TaskCenterDTO> getPerfTasks(@Param("request") TaskCenterRequest request);
-    List<TaskCenterDTO> getUiTasks(@Param("request") TaskCenterRequest request, @Param("uiPermission") Boolean uiPermission);
+    List<TaskCenterDTO> getUiTasks(@Param("request") TaskCenterRequest request);
 
     TaskStatisticsDTO getRunningTasks(@Param("request") TaskCenterRequest request);
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -87,7 +87,7 @@ public List<TaskCenterDTO> getUiTasks(TaskCenterRequest request) {
         if (CollectionUtils.isEmpty(request.getProjects())) {
             return new ArrayList<>();
         }
-        return baseTaskMapper.getUiTasks(request, checkUiPermission());
+        return baseTaskMapper.getUiTasks(request);
     }
 
     public List<TaskCenterDTO> getPerfTasks(TaskCenterRequest request) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/websocket/TaskCenterWebSocket.java
Patch:
@@ -102,6 +102,7 @@ public void run() {
                 }
                 session.getBasicRemote().sendText(JSON.toJSONString(task));
                 if (task.getTotal() == 0) {
+                    session.getBasicRemote().sendText(JSON.toJSONString(task));
                     session.close();
                 }
             } catch (Exception e) {

File: api-test/backend/src/main/java/io/metersphere/service/ShareInfoService.java
Patch:
@@ -277,7 +277,7 @@ public List<ApiDocumentInfoDTO> conversionModelListToDTO(List<ApiDefinitionWithB
                                             if (isJsonSchema) {
                                                 jsonSchemaBodyDTO.setJsonSchema(bodyObj.get("jsonSchema"));
                                                 apiInfoDTO.setJsonSchemaBody(jsonSchemaBodyDTO);
-                                                String raw = JSONSchemaGenerator.getJson(bodyObj.get("jsonSchema").toString());
+                                                String raw = JSONSchemaGenerator.getJson(bodyObj.get("jsonSchema").asText());
                                                 this.setPreviewData(previewJsonArray, raw);
                                             } else {
                                                 if (bodyObj.has("raw")) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvAuthManager.java
Patch:
@@ -1,9 +1,8 @@
 package io.metersphere.api.dto.scenario.environment;
 
-import io.metersphere.api.dto.definition.request.auth.MsAuthManager;
 import lombok.Data;
 
 @Data
 public class EnvAuthManager {
-    private EnvAuthManager authManager;
+    private ItemAuthManager authManager;
 }

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/JiraPlatform.java
Patch:
@@ -448,7 +448,7 @@ private void parseCustomFiled(IssuesUpdateRequest issuesRequest, Map fields) {
                                 if (issuesRequest.isThirdPartPlatform() || isSass) {
                                     param.put("id", item.getValue());
                                 } else {
-                                    param.put("name", item.getValue());
+                                    param.put("accountId", item.getValue());
                                 }
                             } else {
                                 param.put("id", item.getValue());

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/environment/item/BaseEnvElement.java
Patch:
@@ -1,16 +1,16 @@
 package io.metersphere.api.dto.scenario.environment.item;
 
-import io.metersphere.plugin.core.MsTestElement;
 import lombok.Data;
 
 import java.util.LinkedList;
+
 @Data
 public class BaseEnvElement {
     // 组件类型
     private String type;
 
     // 用于数据反射对象
-    private String clazzName = MsTestElement.class.getCanonicalName();
+    private String clazzName = BaseEnvElement.class.getCanonicalName();
 
     // 自身资源ID（用例ID/接口ID/场景ID)等
     private String id;
@@ -39,7 +39,7 @@ public class BaseEnvElement {
     private String refType;
 
     // 子组件
-    private LinkedList<MsTestElement> hashTree;
+    private LinkedList<BaseEnvElement> hashTree;
 
     // 项目ID
     private String projectId;

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -186,7 +186,7 @@ private synchronized void send(JmeterRunRequestDTO request) {
     public void run(JmeterRunRequestDTO request) {
         if (request.getPool().isPool() && StringUtils.isNotBlank(request.getRunMode())) {
             this.runNode(request);
-        } else {
+        } else if (request.getHashTree() != null) {
             //解析hashTree，是否含有文件库文件
             HashTreeUtil.initRepositoryFiles(request);
             CommonBeanFactory.getBean(ExecThreadPoolExecutor.class).addTask(request);

File: test-track/backend/src/main/java/io/metersphere/controller/TestPlanController.java
Patch:
@@ -136,7 +136,7 @@ public TestPlan freshRecentPlan(@PathVariable String planId) {
     @MsAuditLog(module = OperLogModule.TRACK_TEST_PLAN, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#planId)", content = "#msClass.getLogDetails(#planId)", msClass = TestPlanService.class)
     public void editTestPlanStatus(@PathVariable String planId) {
         checkPermissionService.checkTestPlanOwner(planId);
-        testPlanService.editTestPlanStatus(planId);
+        testPlanService.checkStatus(planId);
     }
 
     @PostMapping("/edit/report/config")

File: test-track/backend/src/main/java/io/metersphere/excel/converter/TestCaseExportVersionConverter.java
Patch:
@@ -16,6 +16,9 @@ public class TestCaseExportVersionConverter implements TestCaseExportConverter {
 
     public TestCaseExportVersionConverter() {
         ProjectVersionService projectVersionService = CommonBeanFactory.getBean(ProjectVersionService.class);
+        if (projectVersionService == null) {
+            return;
+        }
         List<ProjectVersionDTO> projectVersions = projectVersionService.getProjectVersions(SessionUtils.getCurrentProjectId());
         projectVersions.forEach(i -> versionMap.put(i.getId(), i.getName()));
     }

File: test-track/backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -798,6 +798,9 @@ private TestCaseExcelData parseDataToModel(Map<Integer, String> row) {
         for (Map.Entry<Integer, String> headEntry : headMap.entrySet()) {
             Integer index = headEntry.getKey();
             String field = headEntry.getValue();
+            if (StringUtils.isBlank(field)) {
+                continue;
+            }
             String value = StringUtils.isEmpty(row.get(index)) ? StringUtils.EMPTY : row.get(index);
 
             if (excelHeadToFieldNameDic.containsKey(field)) {

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2853,6 +2853,9 @@ public void buildUserInfo(List<TestCaseDTO> testCases) {
     public void buildVersionInfo(List<TestCaseDTO> testCases) {
         List<String> versionIds = testCases.stream().map(TestCaseDTO::getVersionId).collect(Collectors.toList());
         ProjectVersionService projectVersionService = CommonBeanFactory.getBean(ProjectVersionService.class);
+        if (projectVersionService == null) {
+            return;
+        }
         Map<String, String> projectVersionMap = projectVersionService.getProjectVersionByIds(versionIds).stream()
                 .collect(Collectors.toMap(ProjectVersion::getId, ProjectVersion::getName));
         testCases.forEach(testCase -> {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/base/mapper/ext/BaseTaskMapper.java
Patch:
@@ -8,7 +8,7 @@
 
 public interface BaseTaskMapper {
 
-    List<TaskCenterDTO> getTasks(@Param("request") TaskCenterRequest request);
+    List<TaskCenterDTO> getTasks(@Param("request") TaskCenterRequest request, @Param("uiPermission") Boolean uiPermission);
 
     int getRunningTasks(@Param("request") TaskCenterRequest request);
 

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ApiTestDefinitionDiffUtilImpl.java
Patch:
@@ -132,7 +132,7 @@ private static void diffHttp(MsHTTPSamplerProxy httpNew, MsHTTPSamplerProxy http
         String headerOld = StringUtils.join(StringUtils.join(JSON_START, JSON.toJSONString(httpOld.getHeaders())), JSON_END);
         if (!StringUtils.equals(headerNew, headerOld)) {
             String patch = jsonDiff.diff(headerOld, headerNew);
-            String diffPatch = jsonDiff.apply(headerNew, patch);
+            String diffPatch = jsonDiff.apply(headerOld, patch);
             if (StringUtils.isNotEmpty(diffPatch)) {
                 diffMap.put("header", diffPatch);
             }
@@ -146,7 +146,7 @@ private static void diffHttp(MsHTTPSamplerProxy httpNew, MsHTTPSamplerProxy http
         String queryOld = StringUtils.join(StringUtils.join(JSON_START, JSON.toJSONString(httpOld.getArguments())), JSON_END);
         if (!StringUtils.equals(queryNew, queryOld)) {
             String patch = jsonDiff.diff(queryOld, queryNew);
-            String diff = jsonDiff.apply(queryNew, patch);
+            String diff = jsonDiff.apply(queryOld, patch);
             if (StringUtils.isNotEmpty(diff)) {
                 diffMap.put(QUERY, diff);
             }
@@ -160,7 +160,7 @@ private static void diffHttp(MsHTTPSamplerProxy httpNew, MsHTTPSamplerProxy http
         String restOld = StringUtils.join(StringUtils.join(JSON_START, JSON.toJSONString(httpOld.getRest())), JSON_END);
         if (!StringUtils.equals(restNew, restOld)) {
             String patch = jsonDiff.diff(restOld, restNew);
-            String diff = jsonDiff.apply(restNew, patch);
+            String diff = jsonDiff.apply(restOld, patch);
             if (StringUtils.isNotEmpty(diff)) {
                 diffMap.put("rest", diff);
             }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -35,7 +35,7 @@ public List<MessageDetail> searchMessageSchedule(@PathVariable String testId) {
     }
 
     @GetMapping("/delete/message/{identification}")
-    @MsAuditLog(module = OperLogModule.WORKSPACE_MESSAGE_SETTINGS, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_MESSAGE_SETTINGS, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getDelLogDetails(#identification)", msClass = NoticeService.class)
     public int deleteMessage(@PathVariable String identification) {
         return noticeService.delMessage(identification);
     }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/environment/controller/TestEnvironmentController.java
Patch:
@@ -68,6 +68,7 @@ public List<KeyStoreEntry> getEntry(@RequestPart("request") String password, @Re
     }
 
     @PostMapping("/add")
+    @MsAuditLog(module = OperLogModule.PROJECT_ENVIRONMENT_SETTING, type = OperLogConstants.CREATE, title = "#apiTestEnvironmentWithBLOBs.name", project = "#apiTestEnvironmentWithBLOBs.projectId", msClass = BaseEnvironmentService.class)
     public String create(@RequestPart("request") TestEnvironmentDTO apiTestEnvironmentWithBLOBs, @RequestPart(value = "files", required = false) List<MultipartFile> sslFiles, @RequestPart(value = "variablesFiles", required = false) List<MultipartFile> variableFile) {
         checkParams(apiTestEnvironmentWithBLOBs);
         return baseEnvironmentService.add(apiTestEnvironmentWithBLOBs, sslFiles, variableFile);
@@ -114,6 +115,7 @@ private void checkParams(TestEnvironmentDTO apiTestEnvironment) {
     }
 
     @GetMapping("/delete/{id}")
+    @MsAuditLog(module = OperLogModule.PROJECT_ENVIRONMENT_SETTING, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#id)", msClass = BaseEnvironmentService.class)
     public void delete(@PathVariable String id) {
         baseEnvironmentService.delete(id);
     }

File: performance-test/backend/src/main/java/io/metersphere/plan/service/TestPlanLoadCaseService.java
Patch:
@@ -611,6 +611,7 @@ public LoadPlanReportDTO buildExecuteLoadReport(PlanSubReportRequest request) {
         Map config = request.getConfig();
         Map<String, String> loadCaseReportMap = request.getReportIdMap();
         if (MapUtils.isEmpty(loadCaseReportMap)) {
+            loadPlanReport.setLoadAllCases(new ArrayList<>());
             return loadPlanReport;
         }
         if (ServiceUtils.checkConfigEnable(config, "load")) {

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -821,6 +821,7 @@ public void userAuth(AuthUserIssueRequest authUserIssueRequest) {
 
     public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
         List<PlanReportIssueDTO> planReportIssueDTOS = extIssuesMapper.selectForPlanReport(planId);
+        planReportIssueDTOS = DistinctKeyUtil.distinctByKey(planReportIssueDTOS, PlanReportIssueDTO::getId);
         TestPlanFunctionResultReportDTO functionResult = report.getFunctionResult();
         List<TestCaseReportStatusResultDTO> statusResult = new ArrayList<>();
         Map<String, TestCaseReportStatusResultDTO> statusResultMap = new HashMap<>();

File: test-track/backend/src/main/java/io/metersphere/controller/TestPlanController.java
Patch:
@@ -189,6 +189,7 @@ public Pager<List<Project>> getProjectByPlanId(@PathVariable int goPage, @PathVa
     }
 
     @PostMapping("/copy/{id}")
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_PLAN, type = OperLogConstants.COPY, content = "#msClass.getLogDetails(#id)", msClass = TestPlanService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, event = NoticeConstants.Event.CREATE, subject = "测试计划通知")
     public TestPlan copy(@PathVariable String id) {
         return testPlanService.copy(id);

File: test-track/backend/src/main/java/io/metersphere/validate/CustomFieldMultipleSelectValidator.java
Patch:
@@ -17,7 +17,7 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
         if (StringUtils.isBlank(value)) {
             return;
         }
-        prepareCatch(customField);
+        prepareCache(customField);
         Set<String> idSet = optionValueSetCache.get(customField.getId());
         Set<String> textSet = optionTextSetCache.get(customField.getId());
         for (String item : parse2Array(customField.getName(), value)) {

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2984,10 +2984,12 @@ public void deleteTestCasePublic(String versionId, String refId) {
 
     public Boolean hasOtherInfo(String caseId) {
         TestCaseWithBLOBs tc = getTestCase(caseId);
+        AttachmentModuleRelationExample example = new AttachmentModuleRelationExample();
+        example.createCriteria().andRelationIdEqualTo(caseId).andRelationTypeEqualTo(AttachmentType.TEST_CASE.type());
         if (tc != null) {
             if (StringUtils.isNotBlank(tc.getRemark()) || StringUtils.isNotBlank(tc.getDemandId()) || CollectionUtils.isNotEmpty(getRelateTest(caseId))
                     || CollectionUtils.isNotEmpty(issuesService.getIssues(caseId, IssueRefType.FUNCTIONAL.name())) || CollectionUtils.isNotEmpty(getRelationshipCase(caseId, "PRE")) || CollectionUtils.isNotEmpty(getRelationshipCase(caseId, "POST"))
-                    || CollectionUtils.isNotEmpty(attachmentService.getFileMetadataByCaseId(caseId))) {
+                    || CollectionUtils.isNotEmpty(attachmentModuleRelationMapper.selectByExample(example))) {
                 return true;
             }
         }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/utils/ReflexObjectUtil.java
Patch:
@@ -212,7 +212,7 @@ else if (StringUtils.equals(module, "PROJECT_ENVIRONMENT_SETTING")) {
                                 column.setDiffValue(ApiTestEnvironmentDiffUtil.diff(newValue, oldValue));
                             }
                         } else {
-                            String newValue = Objects.toString(column.getNewValue().toString(), "");
+                            String newValue = Objects.toString(column.getNewValue(), "");
                             if (StringUtils.isNotEmpty(newValue)) {
                                 column.setNewValue(newValue.replaceAll("\\n", StringUtils.SPACE));
                             }

File: api-test/backend/src/main/java/io/metersphere/api/parse/HarScenarioAbstractParser.java
Patch:
@@ -32,6 +32,7 @@ protected MsHTTPSamplerProxy parseHar(HarEntry harEntry) {
         } else {
             request.setPath("/");
         }
+        request.setUrl(harRequest.url);
         parseParameters(harRequest, request);
         parseRequestBody(harRequest, request.getBody());
         addBodyHeader(request);

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -761,6 +761,7 @@ public String setDomain(ApiScenarioEnvRequest request) {
         Boolean enable = request.getEnvironmentEnable();
         String scenarioDefinition = request.getDefinition();
         JSONObject element = JSONUtil.parseObject(scenarioDefinition);
+        ElementUtil.dataFormatting(element);
         try {
             Map<String, String> environmentMap = new HashMap<>();
             if (BooleanUtils.isFalse(enable)) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/vo/OperatingLogRequest.java
Patch:
@@ -34,4 +34,7 @@ public class OperatingLogRequest implements Serializable {
 
     private List<String> modules;
 
+    //要查找的日志类型
+    private String logType;
+
 }
\ No newline at end of file

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/controller/HistoryReportController.java
Patch:
@@ -54,6 +54,6 @@ public int deleteById(@RequestBody ReportStatisticsSaveRequest request) {
 
     @PostMapping("/selectById")
     public ReportStatisticsWithBLOBs selectById(@RequestBody ReportStatisticsSaveRequest request) {
-        return reportStatisticsService.selectById(request.getId());
+        return reportStatisticsService.selectById(request.getId(), false);
     }
 }

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/controller/ReportStatShareController.java
Patch:
@@ -18,6 +18,6 @@ public class ReportStatShareController {
 
     @PostMapping("/select/report/by/id")
     public ReportStatisticsWithBLOBs selectById(@RequestBody ReportStatisticsSaveRequest request) {
-        return reportStatisticsService.selectById(request.getId());
+        return reportStatisticsService.selectById(request.getId(), true);
     }
 }
\ No newline at end of file

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/EnterpriseTestReportService.java
Patch:
@@ -476,7 +476,7 @@ private Map<String, String> getSyncReportMap(List<EnterpriseReportContentStep> s
             List<ReportStatisticsWithBLOBs> bloBsList = new ArrayList<>();
             for (EnterpriseReportContentStep step : stepList) {
                 //定时任务触发的数据，需要检查图片是否需要重新生成
-                ReportStatisticsWithBLOBs reportStatisticsWithBLOBs = reportStatisticsService.selectById(step.getReportRecordId());
+                ReportStatisticsWithBLOBs reportStatisticsWithBLOBs = reportStatisticsService.selectById(step.getReportRecordId(), false);
                 if (reportStatisticsWithBLOBs != null) {
                     boolean needSyncImage = reportStatisticsService.isReportNeedUpdate(reportStatisticsWithBLOBs);
                     if (needSyncImage) {

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -326,7 +326,7 @@ private void checkCustomNumExist(SaveApiScenarioRequest request) {
         String id = request.getId();
         ApiScenarioWithBLOBs apiScenarioWithBLOBs = apiScenarioMapper.selectByPrimaryKey(id);
         ApiScenarioExample.Criteria criteria = example.createCriteria();
-        criteria.andCustomNumEqualTo(request.getCustomNum()).andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(id).andStatusNotEqualTo(ApiTestDataStatus.TRASH.getValue());
+        criteria.andCustomNumEqualTo(request.getCustomNum()).andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(id);
         if (apiScenarioWithBLOBs != null && StringUtils.isNotBlank(apiScenarioWithBLOBs.getRefId())) {
             criteria.andRefIdNotEqualTo(apiScenarioWithBLOBs.getRefId());
         }
@@ -1262,7 +1262,6 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiTestI
         if (BooleanUtils.isTrue(openCustomNum)) {
             ApiScenarioExample example = new ApiScenarioExample();
             ApiScenarioExample.Criteria criteria = example.createCriteria();
-            criteria.andStatusNotEqualTo(ApiTestDataStatus.TRASH.getValue());
             if (CollectionUtils.isEmpty(sameList)) {
                 criteria.andCustomNumEqualTo(scenarioWithBLOBs.getCustomNum()).andProjectIdEqualTo(scenarioWithBLOBs.getProjectId());
             } else {

File: performance-test/backend/src/main/java/io/metersphere/dto/Monitor.java
Patch:
@@ -10,7 +10,7 @@
 public class Monitor {
     private String name;
     private String ip;
-    private Integer port;
+    private String port;
     private String description;
     private List<MonitorItem> monitorConfig;
 }

File: performance-test/backend/src/main/java/io/metersphere/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -259,8 +259,8 @@ private void splitCsvFile(Node item) {
         }
         StringBuilder csv = new StringBuilder();
         Object config = ((Map) csvConfig).get(filename);
-        boolean csvSplit = (Boolean) ((Map) (config)).get("csvSplit");
-        if (!csvSplit) {
+        Boolean csvSplit = (Boolean) ((Map) (config)).get("csvSplit");
+        if (!BooleanUtils.toBoolean(csvSplit)) {
             return;
         }
         boolean csvHasHeader = (Boolean) ((Map) (config)).get("csvHasHeader");

File: framework/gateway/src/main/java/io/metersphere/gateway/controller/LdapController.java
Patch:
@@ -4,7 +4,7 @@
 import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.controller.handler.ResultHolder;
 import io.metersphere.gateway.service.LdapService;
-import io.metersphere.log.annotation.MsAuditLog;
+import io.metersphere.gateway.log.annotation.MsAuditLog;
 import io.metersphere.request.LoginRequest;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.server.WebSession;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -59,7 +59,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         //分享相关接口
         filterChainDefinitionMap.put("/share/info/generateShareInfoWithExpired", "anon");
         filterChainDefinitionMap.put("/share/list", "anon");
-        filterChainDefinitionMap.put("/share/info/selectHistoryReportById", "anon");
+        filterChainDefinitionMap.put("/report/stat/share/**", "anon");
         filterChainDefinitionMap.put("/share/get/**", "anon");
         filterChainDefinitionMap.put("/share/info", "apikey, csrf, authc"); // 需要认证
         filterChainDefinitionMap.put("/document/**", "anon");

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/utils/ChromeUtil.java
Patch:
@@ -70,7 +70,7 @@ public synchronized Map<String, String> getImageInfo(HeadlessRequest request, St
                     driver.get(url);
                     driver.manage().window().fullscreen();
                     //预留echart动画的加载时间
-                    Thread.sleep(3 * 1000);
+                    Thread.sleep(10 * 1000);
                     String js = "var chartsCanvas = document.getElementById('picChart').getElementsByTagName('canvas')[0];" +
                             "var imageUrl = null;" +
                             "if (chartsCanvas!= null) {" +

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/controller/ServiceIntegrationController.java
Patch:
@@ -20,7 +20,7 @@ public class ServiceIntegrationController {
     private BaseIntegrationService baseIntegrationService;
 
     @PostMapping("/save")
-    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#service.id)", msClass = BaseIntegrationService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#service.workspaceId, #service.platform)",  content = "#msClass.getLogDetails(#service.workspaceId, #service.platform)", msClass = BaseIntegrationService.class)
     public ServiceIntegration save(@RequestBody ServiceIntegration service) {
         return baseIntegrationService.save(service);
     }
@@ -31,7 +31,7 @@ public ServiceIntegration getByPlatform(@RequestBody IntegrationRequest request)
     }
 
     @PostMapping("/delete")
-    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = BaseIntegrationService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, title = "#request.platform", type = OperLogConstants.DELETE, msClass = BaseIntegrationService.class)
     public void delete(@RequestBody IntegrationRequest request) {
         baseIntegrationService.delete(request);
     }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/PermissionConstants.java
Patch:
@@ -154,6 +154,8 @@ public class PermissionConstants {
     public static final String PROJECT_UI_SCENARIO_READ_CREATE = "PROJECT_UI_SCENARIO:READ+CREATE";
     public static final String PROJECT_UI_SCENARIO_READ_EDIT = "PROJECT_UI_SCENARIO:READ+EDIT";
     public static final String PROJECT_UI_SCENARIO_READ_DELETE = "PROJECT_UI_SCENARIO:READ+DELETE";
+    public static final String PROJECT_UI_REPORT_READ_DELETE = "PROJECT_UI_REPORT:READ+DELETE";
+
     public static final String PROJECT_UI_SCENARIO_READ_COPY = "PROJECT_UI_SCENARIO:READ+COPY";
     public static final String PROJECT_UI_SCENARIO_READ_RUN = "PROJECT_UI_SCENARIO:READ+RUN";
     public static final String PROJECT_UI_SCENARIO_READ_DEBUG = "PROJECT_UI_SCENARIO:READ+DEBUG";

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseIssueService.java
Patch:
@@ -121,7 +121,7 @@ public void add(String issuesId, String resourceId, String refId, String refType
             testCaseIssues.setIssuesId(issuesId);
             testCaseIssues.setResourceId(resourceId);
             testCaseIssues.setRefType(refType);
-            testCaseIssues.setRefId(refId);
+            testCaseIssues.setRefId(StringUtils.isNotBlank(refId) ? null : refId);
             testCaseIssuesMapper.insert(testCaseIssues);
         }
     }

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -1932,6 +1932,9 @@ public void batchCopy(ApiScenarioBatchRequest request) {
                 api.setName(ServiceUtils.getCopyName(api.getName()));
                 api.setApiScenarioModuleId(request.getApiScenarioModuleId());
                 api.setModulePath(request.getModulePath());
+                api.setCreateUser(SessionUtils.getUserId());
+                api.setUserId(SessionUtils.getUserId());
+                api.setPrincipal(SessionUtils.getUserId());
                 api.setOrder(nextOrder += ServiceUtils.ORDER_STEP);
                 api.setCreateTime(System.currentTimeMillis());
                 api.setUpdateTime(System.currentTimeMillis());

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1518,7 +1518,7 @@ private RunModeConfigDTO getRunModeConfigDTO(TestPlanRunRequest testplanRunReque
         if (StringUtils.equals(envType, "JSON") && !envMap.isEmpty()) {
             runModeConfig.setEnvMap(testplanRunRequest.getEnvMap());
             this.setPlanCaseEnv(testPlanId, runModeConfig);
-        } else if (StringUtils.equals(envType, "JSON") && StringUtils.isNotBlank(environmentGroupId)) {
+        } else if (StringUtils.equals(envType, "GROUP") && StringUtils.isNotBlank(environmentGroupId)) {
             runModeConfig.setEnvironmentGroupId(testplanRunRequest.getEnvironmentGroupId());
             this.setPlanCaseEnv(testPlanId, runModeConfig);
         }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/JSON.java
Patch:
@@ -26,6 +26,7 @@ public class JSON {
         objectMapper.setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);
         // 如果一个对象中没有任何的属性，那么在序列化的时候就会报错
         objectMapper.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);
+        objectMapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
     }
 
     public static String toJSONString(Object value) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/service/FileManagerService.java
Patch:
@@ -98,7 +98,7 @@ public InputStream downloadFileAsStream(FileRequest request) {
     public List<FileInfoDTO> downloadFileBatch(List<FileRequest> requestList) {
         List<FileInfoDTO> list = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(requestList)) {
-            Map<String, List<FileRequest>> requestByStorage = requestList.stream().collect(Collectors.groupingBy(FileRequest::getStorage));
+            Map<String, List<FileRequest>> requestByStorage = requestList.stream().filter((e) -> StringUtils.isNotBlank(e.getStorage()) && !StringUtils.equalsIgnoreCase(e.getStorage(), StorageConstants.LOCAL.name())).collect(Collectors.groupingBy(FileRequest::getStorage));
             for (Map.Entry<String, List<FileRequest>> requestByStorageEntry : requestByStorage.entrySet()) {
                 try {
                     list.addAll(FileCenter.getRepository(requestByStorageEntry.getKey()).getFileBatch(requestByStorageEntry.getValue()));

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -439,6 +439,9 @@ public void updateThirdPartyIssuesLink(EditTestCaseRequest testCase) {
      * @param testCase
      */
     private void createNewVersionOrNot(EditTestCaseRequest testCase) {
+        if (StringUtils.isBlank(testCase.getVersionId())) {
+            return;
+        }
         TestCaseExample example = new TestCaseExample();
         example.createCriteria().andIdEqualTo(testCase.getId())
                 .andVersionIdEqualTo(testCase.getVersionId());

File: api-test/backend/src/main/java/io/metersphere/controller/remote/TestPlanController.java
Patch:
@@ -15,7 +15,7 @@
 @RestController
 public class TestPlanController {
     @Resource
-    private RemoteTestPlanService testPlanService;
+    private RemoteTestPlanService remoteTestPlanService;
 
     public static final List<String> EXCLUDE_APIS = new ArrayList<>(2) {{
         add("test/plan/api/case");
@@ -25,13 +25,13 @@ public class TestPlanController {
     @GetMapping("/**")
     public List getStageOption(HttpServletRequest request) {
         excludeApi(request.getRequestURI());
-        return testPlanService.get(request.getRequestURI());
+        return remoteTestPlanService.get(request.getRequestURI());
     }
 
     @PostMapping("/**")
     public List getPage(HttpServletRequest request, @RequestBody QueryTestPlanRequest params) {
         excludeApi(request.getRequestURI());
-        return testPlanService.post(request.getRequestURI(), params);
+        return remoteTestPlanService.post(request.getRequestURI(), params);
     }
 
     /**

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/service/NodeTreeService.java
Patch:
@@ -295,7 +295,7 @@ protected void createNodeByPath(Iterator<String> pathIterator, String nodeName,
 
         StringBuilder path = new StringBuilder(rootPath);
 
-        path.append("/" + nodeName);
+        path.append("/" + nodeName.trim());
 
         String pid;
         //创建过不创建
@@ -309,7 +309,7 @@ protected void createNodeByPath(Iterator<String> pathIterator, String nodeName,
         }
 
         while (pathIterator.hasNext()) {
-            String nextNodeName = pathIterator.next();
+            String nextNodeName = pathIterator.next().trim();
             path.append("/" + nextNodeName);
             if (pathMap.get(path.toString()) != null) {
                 pid = pathMap.get(path.toString());

File: test-track/backend/src/main/java/io/metersphere/controller/remote/TrackApiDefinitionController.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.controller.remote;
 
+import io.metersphere.plan.request.api.ApiDefinitionRequest;
 import io.metersphere.plan.service.remote.api.PlanApiDefinitionService;
-import io.metersphere.xpack.api.dto.request.ApiDefinitionRequest;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanApiDefinitionService.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.plan.service.remote.api;
 
+import io.metersphere.plan.request.api.ApiDefinitionRequest;
 import io.metersphere.plan.service.TestPlanService;
-import io.metersphere.xpack.api.dto.request.ApiDefinitionRequest;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;

File: api-test/backend/src/main/java/io/metersphere/controller/plan/ShareTestPlanApiReportController.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.controller.plan;
 
 import io.metersphere.api.dto.ApiReportResult;
-import io.metersphere.service.BaseShareInfoService;
+import io.metersphere.service.ShareInfoService;
 import io.metersphere.service.definition.ApiDefinitionService;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
@@ -17,11 +17,11 @@ public class ShareTestPlanApiReportController {
     @Resource
     ApiDefinitionService apiDefinitionService;
     @Resource
-    BaseShareInfoService baseShareInfoService;
+    ShareInfoService shareInfoService;
 
     @GetMapping("/api/definition/report/getReport/{shareId}/{testId}")
     public ApiReportResult getApiReport(@PathVariable String shareId, @PathVariable String testId) {
-        baseShareInfoService.validateExpired(shareId);
+        shareInfoService.validateExpired(shareId);
         return apiDefinitionService.getDbResult(testId);
     }
 }

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanApiCaseController.java
Patch:
@@ -73,7 +73,6 @@ public List<TestPlanApiCaseDTO> selectAllTableRows(@RequestBody TestPlanApiCaseB
         return testPlanApiCaseService.selectAllTableRows(request);
     }
 
-    // todo request allowedRepeatCase
     @PostMapping("/relevance/list/{goPage}/{pageSize}")
     public Pager<List<ApiTestCaseDTO>> relevanceList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
         return testPlanApiCaseService.relevanceList(goPage, pageSize, request);

File: framework/gateway/src/main/java/io/metersphere/gateway/service/SSOService.java
Patch:
@@ -156,7 +156,6 @@ private Optional<SessionUser> doOICDLogin(AuthSource authSource, String accessTo
         Optional<SessionUser> userOptional = userLoginService.login(loginRequest, session, locale);
         session.getAttributes().put("authenticate", authSource.getType());
         session.getAttributes().put("authId", authSource.getId());
-        session.getAttributes().put(SessionConstants.ATTR_USER, userOptional.get());
         return userOptional;
     }
 
@@ -196,7 +195,6 @@ public Optional<SessionUser> serviceValidate(String ticket, String authId, WebSe
         Optional<SessionUser> userOptional = userLoginService.login(loginRequest, session, locale);
         session.getAttributes().put("authenticate", authSource.getType());
         session.getAttributes().put("authId", authSource.getId());
-        session.getAttributes().put(SessionConstants.ATTR_USER, userOptional.get());
         session.getAttributes().put("casTicket", ticket);
         // 记录cas对应关系
         Long timeout = env.getProperty("spring.session.timeout", Long.class);

File: performance-test/backend/src/main/java/io/metersphere/service/PerformanceTestService.java
Patch:
@@ -961,6 +961,7 @@ public List<LoadTestDTO> listBatch(LoadTestBatchRequest request) {
         Map<String, List<String>> param = new HashMap<>();
         param.put("id", request.getIds());
         request2.setFilters(param);
+        request2.setVersionId(request.getCondition().getVersionId());
         return this.list(request2);
     }
 

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/ReportStatisticsService.java
Patch:
@@ -278,12 +278,12 @@ public Map<String, String> getImageContentById(List<ReportStatisticsWithBLOBs> r
 
         Map<String, String> urlMap = new HashMap<>();
         for (ReportStatisticsWithBLOBs blob : reportRecordIdList) {
-            String url = platformUrl + "/echartPic?shareId=" + blob.getId();
+            String url = platformUrl + "/report/chart-pic?shareId=" + blob.getId();
             urlMap.put(blob.getId(), url);
         }
         headlessRequest.setUrlMap(urlMap);
         headlessRequest.setRemoteDriverUrl(remoteDriverUrl);
-        LogUtil.info("使用ChromeUtil来获取图片信息。 language：" + language + "，headlessRequest：" + JSON.toJSONString(headlessRequest));
+        LogUtil.info("使用ChromeUtil来获取图片信息。url:" + JSON.toJSONString(urlMap) + "; language：" + language + "，headlessRequest：" + JSON.toJSONString(headlessRequest));
         Map<String, String> returnMap = chromeUtils.getImageInfo(headlessRequest, language);
         return returnMap;
     }

File: test-track/backend/src/main/java/io/metersphere/controller/IssueCommentController.java
Patch:
@@ -29,7 +29,7 @@ public class IssueCommentController {
 
     @PostMapping("/save")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
-    @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.get(#request.issuesId)", targetClass = IssuesService.class,
+    @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.getIssue(#request.issuesId)", targetClass = IssuesService.class,
             event = NoticeConstants.Event.COMMENT, subject = "缺陷")
     public IssueComment saveComment(@RequestBody IssuesRelevanceRequest request) {
         request.setId(UUID.randomUUID().toString());

File: test-track/backend/src/main/java/io/metersphere/controller/IssuesController.java
Patch:
@@ -116,7 +116,7 @@ public void deleteRelate(@RequestBody IssuesRequest request) {
 
     @GetMapping("/delete/{id}")
     @MsAuditLog(module = OperLogModule.TRACK_BUG, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#id)", msClass = IssuesService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.get(#id)", targetClass = IssuesService.class, event = NoticeConstants.Event.DELETE, subject = "缺陷通知")
+    @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.getIssue(#id)", targetClass = IssuesService.class, event = NoticeConstants.Event.DELETE, subject = "缺陷通知")
     public void delete(@PathVariable String id) {
         issuesService.delete(id);
     }

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -308,6 +308,9 @@ private void handleCustomFieldStatus(List<IssuesDao> issues) {
 
     public IssuesWithBLOBs getIssue(String id) {
         IssuesDao issuesWithBLOBs = extIssuesMapper.selectByPrimaryKey(id);
+        if (issuesWithBLOBs == null) {
+            return null;
+        }
         IssuesRequest issuesRequest = new IssuesRequest();
         Project project = baseProjectService.getProjectById(issuesWithBLOBs.getProjectId());
         issuesRequest.setWorkspaceId(project.getWorkspaceId());

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportService.java
Patch:
@@ -491,7 +491,7 @@ private void sendNotice(ApiScenarioWithBLOBs scenario, ApiScenarioReport result)
 
         String event;
         String status;
-        if (StringUtils.equals(scenario.getLastResult(), ApiReportStatus.SUCCESS.name())) {
+        if (StringUtils.endsWithIgnoreCase(scenario.getLastResult(), ApiReportStatus.SUCCESS.name())) {
             event = NoticeConstants.Event.EXECUTE_SUCCESSFUL;
             status = "成功";
         } else {

File: test-track/backend/src/main/java/io/metersphere/service/issue/client/ZentaoClient.java
Patch:
@@ -223,7 +223,7 @@ public void uploadAttachment(String objectType, String objectId, File file) {
 
         try {
             restTemplate.exchange(requestUrl.getFileUpload(), HttpMethod.POST, requestEntity,
-                    String.class, objectType, objectId, sessionId);
+                    String.class, objectId, sessionId);
         } catch (Exception e) {
             LogUtil.info("upload zentao attachment error");
         }

File: test-track/backend/src/main/java/io/metersphere/service/issue/client/ZentaoGetClient.java
Patch:
@@ -16,7 +16,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String STORY_GET="&module=story&methodName=getProductStories&params=productID={key}&t=json&zentaosid=";
     private static final String USER_GET="&module=user&methodName=getList&t=json&zentaosid=";
     private static final String BUILDS_GET="&module=build&methodName=getProductBuildPairs&productID={0}&zentaosid={1}";
-    private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&params=objectType=bug&zentaosid={1}";
+    private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&params=objectType=bug,objectID={1}&zentaosid={2}";
     private static final String FILE_DELETE="/?m=file&f=delete&t=json&fileID={1}&confirm=yes&zentaosid={2}";
     private static final String FILE_DOWNLOAD="/?m=file&f=download&t=json&fileID={1}&mouse=click&zentaosid={2}";
     private static final String CREATE_META_DATA="?m=bug&f=create&productID={0}&t=json&zentaosid={1}";

File: test-track/backend/src/main/java/io/metersphere/service/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -16,7 +16,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={0}?zentaosid={1}";
     private static final String CREATE_META_DATA="/bug-create-{0}.json?zentaosid={1}";
-    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-objectType=bug?zentaosid={1}";
+    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-objectType=bug,objectID={1}?zentaosid={2}";
     private static final String FILE_DELETE = "/file-delete-{1}-.yes.json?zentaosid={2}";
     private static final String FILE_DOWNLOAD="/file-download-{1}-.click.json?zentaosid={2}";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/ZentaoPlatform.java
Patch:
@@ -445,7 +445,7 @@ private String uploadFile(FileSystemResource resource) {
         try {
             String fileUpload = zentaoClient.requestUrl.getFileUpload();
             ResponseEntity<String> responseEntity = restTemplate.exchange(fileUpload, HttpMethod.POST, requestEntity,
-                    String.class, session);
+                    String.class, null, session);
             String body = responseEntity.getBody();
             Map obj = JSON.parseMap(body);
             Map data = (Map) JSON.parseObject(obj.get("data").toString());

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -161,4 +161,6 @@ public interface ExtTestCaseMapper {
     List<TestCaseNodeDTO> getWorkspaceCountNodes(@Param("request") QueryTestCaseRequest request);
 
     void updateNoModuleTrashNodeToDefault(@Param("projectId") String projectId, @Param("defaultNodeId") String defaultNodeId, @Param("defaultNodePath") String defaultNodePath);
+
+    void clearLatestVersion(@Param("refId") String refId);
 }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -1174,6 +1174,7 @@ private ApiImportSendNoticeDTO _importCreate(ApiDefinitionMapper batchMapper, Ex
                     } else if (apiTestImportRequest.getCoverModule() != null && apiTestImportRequest.getCoverModule()) {
                         apiDefinition.setUpdateTime(System.currentTimeMillis());
                     }
+                    
                     if (CollectionUtils.isEmpty(caseList)) {
                         apiDefinition.setToBeUpdated(false);
                     } else {

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -287,6 +287,7 @@ public List<ApiDefinitionResult> weekList(ApiDefinitionRequest request) {
             return new ArrayList<>(0);
         } else {
             request = this.initRequest(request, true, true);
+            request.setNotEqStatus(ApiTestDataStatus.TRASH.getValue());
             List<ApiDefinitionResult> resList = extApiDefinitionMapper.weekList(request, startTime.getTime());
             calculateResult(resList, request.getProjectId());
             calculateResultSce(resList);

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -168,10 +168,10 @@ private JSONObject setRequest(JSONObject element) {
         } else {
             if (StringUtils.equalsIgnoreCase(element.optString(REFERENCED), "Copy")) {
                 ApiDefinitionResult definitionWithBLOBs = apiDefinitionService.getById(element.optString(ID));
-                Project project = projectMapper.selectByPrimaryKey(definitionWithBLOBs.getProjectId());
-                definitionWithBLOBs.setProjectName(project.getName());
-                definitionWithBLOBs.setVersionEnable(project.getVersionEnable());
                 if (definitionWithBLOBs != null) {
+                    Project project = projectMapper.selectByPrimaryKey(definitionWithBLOBs.getProjectId());
+                    definitionWithBLOBs.setProjectName(project.getName());
+                    definitionWithBLOBs.setVersionEnable(project.getVersionEnable());
                     element.put(ID, definitionWithBLOBs.getId());
                     this.setElement(element, definitionWithBLOBs.getNum(), enable, definitionWithBLOBs.getVersionName(), definitionWithBLOBs.getVersionEnable());
                     isExist = true;

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiTestCaseController.java
Patch:
@@ -69,9 +69,9 @@ public ApiTestCaseResult single(@PathVariable String id) {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<ApiTestCaseDTO>> listSimple(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
-        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setSelectEnvironment(true);
         apiTestCaseService.initRequestBySearch(request);
+        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, apiTestCaseService.listSimple(request));
     }
 

File: test-track/backend/src/main/java/io/metersphere/controller/TestCaseController.java
Patch:
@@ -370,7 +370,7 @@ public List<String> getFollows(@PathVariable String caseId) {
     }
 
     @PostMapping("/edit/follows/{caseId}")
-    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_PLAN_READ_EDIT)
+    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ_EDIT)
     public void editTestFollows(@PathVariable String caseId, @RequestBody List<String> follows) {
         testCaseService.saveFollows(caseId, follows);
     }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -100,4 +100,6 @@ public interface ExtApiTestCaseMapper {
     List<ApiTestCaseDTO> relevanceApiList(@Param("request") ApiTestCaseRequest request);
 
     List<BaseCase> selectBaseCaseByProjectId(@Param("projectId") String projectId);
+
+    int getCaseCountById(String id);
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/HttpHeaderUtils.java
Patch:
@@ -27,6 +27,7 @@ public static HttpHeaders getHttpHeaders() {
         headers.setContentType(MediaType.APPLICATION_JSON);
         headers.add(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON.toString());
         headers.add(HttpHeaders.COOKIE, SessionUtils.getHttpHeader(HttpHeaders.COOKIE));
+        headers.add(HttpHeaders.ACCEPT_LANGUAGE, SessionUtils.getHttpHeader(HttpHeaders.ACCEPT_LANGUAGE));
 
         String headerToken = SessionUtils.getHttpHeader(SessionConstants.HEADER_TOKEN);
         if (StringUtils.isNotBlank(headerToken)) {

File: performance-test/backend/src/main/java/io/metersphere/plan/service/PerfModeExecService.java
Patch:
@@ -28,7 +28,7 @@ public void serial(RunTestPlanRequest request) {
                 performanceTestService.run(request);
             } catch (Exception e) {
                 loadCase.setStatus(TestPlanLoadCaseStatus.error.name());
-                MSException.throwException(e);
+                MSException.throwException(e.getMessage());
             }
             //更新关联处的报告
             testPlanLoadCaseMapper.updateByPrimaryKeySelective(loadCase);

File: performance-test/backend/src/main/java/io/metersphere/plan/controller/PerfExecController.java
Patch:
@@ -17,7 +17,7 @@ public class PerfExecController {
     PerfExecService perfExecService;
 
     @PostMapping("/run")
-    public Map<String, String> getLoadFailureCases(@RequestBody PlanPerformanceExecRequest request) {
+    public Map<String, String> run(@RequestBody PlanPerformanceExecRequest request) {
       return perfExecService.run(request.getPlanReportId(), request.getConfig(), request.getTriggerMode(), request.getPerfMap());
     }
 }

File: performance-test/backend/src/main/java/io/metersphere/controller/PerformanceTestController.java
Patch:
@@ -182,7 +182,7 @@ public void deleteBatch(@RequestBody DeletePerformanceRequest request) {
     }
 
     @PostMapping("/run")
-    @MsAuditLog(module = OperLogModule.PERFORMANCE_TEST, type = OperLogConstants.EXECUTE, content = "#msClass.getLogDetails(#request.id)", msClass = PerformanceTestService.class)
+    @MsAuditLog(module = OperLogModule.PERFORMANCE_TEST, type = OperLogConstants.EXECUTE, beforeEvent = "#msClass.getRunLogDetails(#request.id)", msClass = PerformanceTestService.class)
     @RequiresPermissions(PermissionConstants.PROJECT_PERFORMANCE_TEST_READ_RUN)
     public String run(@RequestBody RunTestPlanRequest request) {
         return performanceTestService.run(request);

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -102,7 +102,6 @@ public void testEnded(String host) {
         dto.setToReport(this.getName());
         LoggerUtil.debug("send. " + this.getName());
         WebSocketUtil.sendMessageSingle(dto);
-        WebSocketUtil.onClose(this.getName());
         PoolExecBlockingQueueUtil.offer(this.getName());
     }
 

File: framework/gateway/src/main/java/io/metersphere/gateway/controller/LdapController.java
Patch:
@@ -9,6 +9,7 @@
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.server.WebSession;
 import reactor.core.publisher.Mono;
+import reactor.core.scheduler.Schedulers;
 
 import javax.annotation.Resource;
 import java.util.Locale;
@@ -23,7 +24,8 @@ public class LdapController {
     @PostMapping(value = "/signin")
     @MsAuditLog(module = OperLogModule.SYSTEM_PARAMETER_SETTING, type = OperLogConstants.LOGIN, title = "LDAP")
     public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession session, Locale locale) {
-        return Mono.just(ldapService.login(request, session, locale))
+        return Mono.defer(() -> ldapService.login(request, session, locale).map(Mono::just).orElseGet(Mono::empty))
+                .subscribeOn(Schedulers.boundedElastic())
                 .map(ResultHolder::success);
     }
 

File: framework/gateway/src/main/java/io/metersphere/gateway/controller/LoginController.java
Patch:
@@ -71,7 +71,6 @@ public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession se
         return Mono.defer(() -> userLoginService.login(request, session, locale).map(Mono::just).orElseGet(Mono::empty))
                 .subscribeOn(Schedulers.boundedElastic())
                 .switchIfEmpty(Mono.error(new ResponseStatusException(HttpStatus.BAD_REQUEST, "Not found user info or invalid password")))
-                .doOnNext(user -> session.getAttributes().put("user", user))
                 .map(ResultHolder::success);
     }
 

File: framework/gateway/src/main/java/io/metersphere/gateway/service/LdapService.java
Patch:
@@ -109,7 +109,6 @@ public Optional<SessionUser> login(LoginRequest request, WebSession session, Loc
 
         session.getAttributes().put("authenticate", UserSource.LDAP.name());
         session.getAttributes().put("email", email);
-        session.getAttributes().put("user", u);
 
         // 执行 LocalRealm 中 LDAP 登录逻辑
         LoginRequest loginRequest = new LoginRequest();

File: framework/gateway/src/main/java/io/metersphere/gateway/service/SSOService.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.AuthSource;
 import io.metersphere.base.domain.User;
+import io.metersphere.commons.constants.SessionConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.user.SessionUser;
 import io.metersphere.commons.utils.CodingUtil;
@@ -155,7 +156,7 @@ private Optional<SessionUser> doOICDLogin(AuthSource authSource, String accessTo
         Optional<SessionUser> userOptional = userLoginService.login(loginRequest, session, locale);
         session.getAttributes().put("authenticate", authSource.getType());
         session.getAttributes().put("authId", authSource.getId());
-        session.getAttributes().put("user", userOptional.get());
+        session.getAttributes().put(SessionConstants.ATTR_USER, userOptional.get());
         return userOptional;
     }
 
@@ -195,7 +196,7 @@ public Optional<SessionUser> serviceValidate(String ticket, String authId, WebSe
         Optional<SessionUser> userOptional = userLoginService.login(loginRequest, session, locale);
         session.getAttributes().put("authenticate", authSource.getType());
         session.getAttributes().put("authId", authSource.getId());
-        session.getAttributes().put("user", userOptional.get());
+        session.getAttributes().put(SessionConstants.ATTR_USER, userOptional.get());
         session.getAttributes().put("casTicket", ticket);
         // 记录cas对应关系
         Long timeout = env.getProperty("spring.session.timeout", Long.class);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/vo/track/TestCaseReviewReference.java
Patch:
@@ -10,7 +10,7 @@ public class TestCaseReviewReference {
     static {
         testCaseReviewColumns.clear();
         commentReviewColumns.clear();
-        testCaseReviewColumns.put("name", "用例名称");
+        testCaseReviewColumns.put("name", "用例评审名称");
         testCaseReviewColumns.put("createUser", "创建人");
         testCaseReviewColumns.put("status", "状态");
         testCaseReviewColumns.put("tags", "标签");

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/vo/track/TestPlanReference.java
Patch:
@@ -13,7 +13,7 @@ public class TestPlanReference {
         testPlanColumns.clear();
         reportColumns.clear();
         issuesColumns.clear();
-        testPlanColumns.put("name", "用例名称");
+        testPlanColumns.put("name", "测试计划名称");
         testPlanColumns.put("creator", "创建人");
         testPlanColumns.put("principal", "责任人");
         testPlanColumns.put("status", "状态");

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/vo/system/SystemReference.java
Patch:
@@ -131,7 +131,7 @@ public class SystemReference {
         licenseColumns.put("expired", "授权截止时间");
         licenseColumns.put("product", "产品名称");
         licenseColumns.put("edition", "产品版本");
-        licenseColumns.put("count", "icense版本");
+        licenseColumns.put("count", "license版本");
         licenseColumns.put("licenseVersion", "授权数量");
         licenseColumns.put("status", "状态");
 

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -629,7 +629,7 @@ private static void buildCaseIdList(List<TestCaseTest> list, List<String> apiCas
             if (StringUtils.equals(l.getTestType(), TestCaseTestStatus.performance.name())) {
                 performanceIds.add(l.getTestId());
             }
-            if (StringUtils.equals(l.getTestType(), TestCaseTestStatus.api.name())) {
+            if (StringUtils.equals(l.getTestType(), TestCaseTestStatus.testcase.name())) {
                 apiCaseIds.add(l.getTestId());
             }
             if (StringUtils.equals(l.getTestType(), TestCaseTestStatus.automation.name())) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/dto/ServiceDTO.java
Patch:
@@ -2,9 +2,11 @@
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
+import lombok.NoArgsConstructor;
 
 @Data
 @AllArgsConstructor
+@NoArgsConstructor
 public class ServiceDTO {
     private String serviceId;
     private int port;

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/performance/PlanTestPlanLoadCaseService.java
Patch:
@@ -94,17 +94,14 @@ public Boolean haveExecCase(String planId) {
         }
     }
 
-    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public void relevanceByTestIds(List<String> performanceIds, String planId) {
         microService.postForData(serviceName, BASE_UEL + "/relevance/" + planId, performanceIds);
     }
 
-    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public List<String> getExecResultByPlanId(String planId) {
         return (List<String>) microService.getForData(serviceName, BASE_UEL + "/plan/exec/result/" + planId);
     }
 
-    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public List<PlanReportCaseDTO> selectStatusForPlanReport(String planId) {
         return microService.getForDataArray(serviceName, BASE_UEL + "/get/report/status/" + planId, PlanReportCaseDTO.class);
     }

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/ui/PlanTestPlanUiScenarioCaseService.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.plan.service.remote.ui;
 
 import io.metersphere.base.domain.TestPlanUiScenario;
+import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.*;
@@ -13,6 +14,7 @@
 import io.metersphere.plan.service.remote.api.PlanTestPlanScenarioCaseService;
 import io.metersphere.plan.service.remote.api.PlanUiScenarioReportService;
 import io.metersphere.plan.utils.TestPlanStatusCalculator;
+import io.metersphere.utils.DiscoveryUtil;
 import org.jetbrains.annotations.NotNull;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Propagation;
@@ -32,7 +34,6 @@ public class PlanTestPlanUiScenarioCaseService extends UiTestService {
     @Resource
     private PlanUiScenarioReportService planUiScenarioReportService;
 
-    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public List<String> getExecResultByPlanId(String planId) {
         return (List<String>) microService.getForData(serviceName, BASE_UEL + "/plan/exec/result/" + planId);
     }

File: performance-test/backend/src/main/java/io/metersphere/service/PerformanceTestService.java
Patch:
@@ -590,9 +590,10 @@ public LoadTest getLoadTestBytestId(String testId) {
     }
 
     public void copy(SaveTestPlanRequest request) {
+        LoadTestWithBLOBs copy = loadTestMapper.selectByPrimaryKey(request.getId());
+        request.setProjectId(copy.getProjectId());
         checkQuota(request, true);
         // copy test
-        LoadTestWithBLOBs copy = loadTestMapper.selectByPrimaryKey(request.getId());
         String copyName = copy.getName() + " Copy";
 
         if (StringUtils.length(copyName) > 30) {

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/controller/TestCaseCountController.java
Patch:
@@ -19,9 +19,9 @@ public class TestCaseCountController {
     @Resource
     TestCaseCountService testCaseCountService;
 
-    @PostMapping("/initDatas")
+    @PostMapping("/initData")
     public Map<String, List<Map<String, String>>> initDatas(@RequestBody TestCaseCountRequest request) {
-        Map<String, List<Map<String, String>>> returnMap = testCaseCountService.getSelectFilterDatas(request.getProjectId());
+        Map<String, List<Map<String, String>>> returnMap = testCaseCountService.getSelectFilterData(request.getProjectId());
         return returnMap;
     }
 

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/dto/request/emun/EnterpriseReportStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.reportstatistics.dto.request.emun;
 
 public enum EnterpriseReportStatus {
-    NEW, SENDED, SEND_FAILD
+    NEW, SENDED, SEND_FAILED
 }

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/ReportStatisticsService.java
Patch:
@@ -84,7 +84,7 @@ public ReportStatisticsWithBLOBs selectById(String id) {
         boolean isReportNeedUpdate = this.isReportNeedUpdate(blob);
         if (isReportNeedUpdate) {
             TestCaseCountRequest countRequest = JSON.parseObject(blob.getSelectOption(), TestCaseCountRequest.class);
-            Map<String, Object> returnDataOption = this.reloadDatas(countRequest, JSON.toJSONString(dataOption.get("chartType")));
+            Map<String, Object> returnDataOption = this.reloadData(countRequest, JSON.toJSONString(dataOption.get("chartType")));
             if (returnDataOption != null) {
                 dataOption = returnDataOption;
             }
@@ -104,7 +104,7 @@ public ReportStatisticsWithBLOBs selectById(String id) {
         return blob;
     }
 
-    private Map<String, Object> reloadDatas(TestCaseCountRequest request, String chartType) {
+    private Map<String, Object> reloadData(TestCaseCountRequest request, String chartType) {
         if (StringUtils.isEmpty(chartType)) {
             chartType = "bar";
         }
@@ -117,7 +117,7 @@ private Map<String, Object> reloadDatas(TestCaseCountRequest request, String cha
             loadOptionObject.put("xaxis", JSON.toJSONString(testCaseCountResponse.getBarChartDTO().getXAxis()));
             loadOptionObject.put("yAxis", JSON.toJSONString(testCaseCountResponse.getBarChartDTO().getYAxis()));
             loadOptionObject.put("tooltip", "{}");
-            loadOptionObject.put("lable", "{}");
+            loadOptionObject.put("label", "{}");
             if (!CollectionUtils.isEmpty(testCaseCountResponse.getBarChartDTO().getSeries())) {
                 List<Series> list = testCaseCountResponse.getBarChartDTO().getSeries();
                 for (Series model : list) {

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/TestAnalysisService.java
Patch:
@@ -146,16 +146,16 @@ private void formatXaxisSeries(XAxis xAxis, List<Series> seriesList, String name
         dto.setSeries(seriesList);
     }
 
-    private void formatLegend(Legend legend, List<String> datas, TestAnalysisChartRequest request) {
+    private void formatLegend(Legend legend, List<String> dataList, TestAnalysisChartRequest request) {
         Map<String, Boolean> selected = new LinkedHashMap<>();
         List<String> list = new LinkedList<>();
-        if (CollectionUtils.isEmpty(datas)) {
+        if (CollectionUtils.isEmpty(dataList)) {
             selected.put(ADD, request.isCreateCase());
             selected.put(UPDATE, request.isUpdateCase());
             list.add(ADD);
             list.add(UPDATE);
         } else {
-            datas.forEach(item -> {
+            dataList.forEach(item -> {
                 selected.put(item + "-" + ADD, request.isCreateCase());
                 selected.put(item + "-" + UPDATE, request.isUpdateCase());
                 list.add(item + "-" + ADD);

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/remote/performance/PerformanceRemoteService.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.reportstatistics.service.remote.performancetest;
+package io.metersphere.reportstatistics.service.remote.performance;
 
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.reportstatistics.dto.TestCaseCountChartResult;

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/remote/performance/PerformanceTestBaseService.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.reportstatistics.service.remote.performancetest;
+package io.metersphere.reportstatistics.service.remote.performance;
 
 import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.service.RemoteService;

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/service/remote/performance/PerformanceTestService.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.reportstatistics.service.remote.performancetest;
+package io.metersphere.reportstatistics.service.remote.performance;
 
 import io.metersphere.commons.constants.MicroServiceName;
 import io.metersphere.service.RemoteService;

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/utils/ScheduleUtil.java
Patch:
@@ -13,7 +13,7 @@ public static long getNextTriggerTime(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
             return 0;
         }
-        CronTrigger trigger = TriggerBuilder.newTrigger().withIdentity("Caclulate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
+        CronTrigger trigger = TriggerBuilder.newTrigger().withIdentity("Calculate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
         Date time0 = trigger.getStartTime();
         Date time1 = trigger.getFireTimeAfter(time0);
         return time1 == null ? 0 : time1.getTime();

File: test-track/backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestAnalysisMapper.java
Patch:
@@ -8,7 +8,7 @@
 
 public interface ExtTestAnalysisMapper {
 
-    List<TestAnalysisChartResult> getCraeteCaseReport(TestAnalysisChartRequest request);
+    List<TestAnalysisChartResult> getCreateCaseReport(TestAnalysisChartRequest request);
 
     List<TestAnalysisChartResult> getUpdateCaseReport(TestAnalysisChartRequest request);
 }

File: api-test/backend/src/main/java/io/metersphere/base/mapper/plan/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -1,11 +1,11 @@
 package io.metersphere.base.mapper.plan.ext;
 
-import io.metersphere.api.dto.plan.TestPlanApiCaseInfoDTO;
+import io.metersphere.api.dto.QueryReferenceRequest;
 import io.metersphere.api.dto.automation.TestPlanDTO;
 import io.metersphere.api.dto.automation.TestPlanFailureApiDTO;
 import io.metersphere.api.dto.definition.ApiTestCaseRequest;
 import io.metersphere.api.dto.definition.TestPlanApiCaseDTO;
-import io.metersphere.api.dto.QueryReferenceRequest;
+import io.metersphere.api.dto.plan.TestPlanApiCaseInfoDTO;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.TestPlanApiCase;
 import org.apache.ibatis.annotations.Param;
@@ -53,5 +53,6 @@ public interface ExtTestPlanApiCaseMapper {
 
     List<TestPlanApiCase> selectPlanByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
 
+    List<TestPlanApiCase> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
 }
 

File: api-test/backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -208,6 +208,9 @@ public MsAssertions duplicateRegexInAssertions(List<MsAssertions> compareList, M
 
     public static List<MsAssertions> getErrorReportByProjectId(String projectId, boolean higherThanSuccess, boolean higherThanError) {
         ExtErrorReportLibraryService service = CommonBeanFactory.getBean(ExtErrorReportLibraryService.class);
+        if (service == null) {
+            return new ArrayList<>();
+        }
         return service.getAssertionByProjectIdAndStatusIsOpen(projectId, higherThanSuccess, higherThanError);
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/ExtErrorReportLibraryService.java
Patch:
@@ -27,6 +27,9 @@
 public class ExtErrorReportLibraryService {
     public List<MsAssertions> getAssertionByProjectIdAndStatusIsOpen(String projectId, boolean higherThanSuccess, boolean higherThanError) {
         ErrorReportLibraryService service = CommonBeanFactory.getBean(ErrorReportLibraryService.class);
+        if (service == null) {
+            return new ArrayList<>();
+        }
         List<MsAssertions> returnList = new ArrayList<>();
         ErrorReportLibraryExample example = new ErrorReportLibraryExample();
         example.createCriteria().andProjectIdEqualTo(projectId).andStatusEqualTo(true);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -87,7 +87,7 @@ public ResultHolder currentUser() {
     @GetMapping(value = "/signout")
     @MsAuditLog(module = OperLogModule.AUTH_TITLE, beforeEvent = "#msClass.getUserId(id)", type = OperLogConstants.LOGIN, title = "登出", msClass = SessionUtils.class)
     public ResultHolder logout() throws Exception {
-        ssoLogoutService.logout();
+        ssoLogoutService.logout(SecurityUtils.getSubject().getSession());
         SecurityUtils.getSubject().logout();
         return ResultHolder.success(StringUtils.EMPTY);
     }

File: test-track/backend/src/main/java/io/metersphere/service/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -16,7 +16,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={0}?zentaosid={1}";
     private static final String CREATE_META_DATA="/bug-create-{0}.json?zentaosid={1}";
-    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-objectType={1},objectID={2}?zentaosid={3}";
+    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-objectType=bug?zentaosid={1}";
     private static final String FILE_DELETE = "/file-delete-{1}-.yes.json?zentaosid={2}";
     private static final String FILE_DOWNLOAD="/file-download-{1}-.click.json?zentaosid={2}";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";

File: project-management/backend/src/main/java/io/metersphere/code/snippet/service/CustomFunctionService.java
Patch:
@@ -129,13 +129,13 @@ public CustomFunctionWithBLOBs get(String id) {
 
     public MsExecResponseDTO run(String reportId, Object request) {
         HashTree hashTree = null;
+        String jmx = microService.postForData(MicroServiceName.API_TEST, "/api/definition/get-hash-tree", request, String.class);
         try {
-            String jmx = microService.postForData(MicroServiceName.API_TEST, "/api/definition/get-hash-tree", request, String.class);
             Object scriptWrapper = SaveService.loadElement(new ByteArrayInputStream(jmx.getBytes(StandardCharsets.UTF_8)));
             hashTree = this.getHashTree(scriptWrapper);
         } catch (Exception e) {
-            LogUtil.error("执行代码片段时获取API模块返回的hashTree失败");
-            MSException.throwException("调用接口请求API模块获取 hash tree 失败!");
+            LogUtil.error(e.getMessage());
+            MSException.throwException(e.getMessage());
         }
         if (!FixedCapacityUtils.jmeterLogTask.containsKey(reportId)) {
             FixedCapacityUtils.jmeterLogTask.put(reportId, System.currentTimeMillis());

File: framework/gateway/src/main/java/io/metersphere/gateway/filter/SessionFilter.java
Patch:
@@ -18,7 +18,7 @@
 public class SessionFilter implements WebFilter {
     // 所有模块的前缀
     private static final String[] PREFIX = new String[]{"/setting", "/project", "/api", "/performance", "/track", "/workstation", "/ui", "/report"};
-    private static final String[] TO_SUB_SERVICE = new String[]{"/license", "/system", "/resource"};
+    private static final String[] TO_SUB_SERVICE = new String[]{"/license", "/system", "/resource", "/sso/callback/logout", "/sso/callback/cas/logout"};
     private static final String PERFORMANCE_DOWNLOAD_PREFIX = "/jmeter/";
     private static final String API_DOWNLOAD_PREFIX = "/api/jmeter/";
 

File: test-track/backend/src/main/java/io/metersphere/service/IssuesService.java
Patch:
@@ -897,7 +897,7 @@ public void changeStatus(IssuesRequest request) {
         String templateId = project.getIssueTemplateId();
         if (StringUtils.isNotBlank(templateId)) {
             // 模版对于同一个系统字段应该只关联一次
-            CustomField customField = baseCustomFieldService.getCustomFieldByName(templateId, SystemCustomField.ISSUE_STATUS);
+            CustomField customField = baseCustomFieldService.getCustomFieldByName(issue.getProjectId(), SystemCustomField.ISSUE_STATUS);
             if (customField != null) {
                 String fieldId = customField.getId();
                 CustomFieldResourceDTO resource = new CustomFieldResourceDTO();

File: project-management/backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -420,7 +420,7 @@ public List<IssueTemplate> copy(CopyIssueTemplateRequest request) {
                         } else {
                             // 非系统字段, 则追加_copy
                             tarCustomField.setId(UUID.randomUUID().toString());
-                            tarCustomField.setName(tarCustomField.getName().concat("_copy"));
+                            tarCustomField.setName(tarCustomField.getName().concat("_copy").concat(UUID.randomUUID().toString().substring(0, 8)));
                             tarCustomField.setOptions(sourceCustomField.getOptions());
                             customFieldRecords.add(tarCustomField);
                         }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanApiCaseService.java
Patch:
@@ -783,6 +783,8 @@ public void run(String testId, String reportId) {
         request.setEnvironmentId(testPlanApiCase.getEnvironmentId());
         request.setBloBs(apiCase);
         request.setReportId(reportId);
-        apiExecuteService.exec(request);
+        Map<String, Object> extendedParameters = new HashMap<>();
+        extendedParameters.put("SYN_RES", true);
+        apiExecuteService.exec(request, extendedParameters);
     }
 }

File: test-track/backend/src/main/java/io/metersphere/plan/job/TestPlanTestJob.java
Patch:
@@ -44,7 +44,6 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.expression = jobDataMap.getString("expression");
         this.projectID = jobDataMap.getString("projectId");
 
-
         businessExecute(context);
     }
 

File: api-test/backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -11,12 +11,12 @@
 import io.metersphere.api.parse.postman.*;
 import io.metersphere.commons.constants.MsRequestBodyType;
 import io.metersphere.commons.constants.PostmanRequestBodyMode;
+import io.metersphere.commons.constants.RequestTypeConstants;
 import io.metersphere.commons.utils.BeanUtils;
 import io.metersphere.commons.utils.JSON;
 import io.metersphere.commons.utils.LogUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.json.JSONObject;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -61,11 +61,11 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
     protected HttpResponse parsePostmanResponse(PostmanItem requestItem) {
         List<PostmanResponse> requestList = requestItem.getResponse();
         if (CollectionUtils.isEmpty(requestList)) {
-            return new HttpResponse();
+            return getDefaultHttpResponse();
         }
         PostmanResponse requestDesc = requestItem.getResponse().get(0);
         if (requestDesc == null) {
-            return null;
+            return getDefaultHttpResponse();
         }
         PostmanUrl url = requestDesc.getOriginalRequest().getUrl();
         MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), null, null, requestDesc.getJsonSchema());

File: api-test/backend/src/main/java/io/metersphere/service/TestResultService.java
Patch:
@@ -28,7 +28,6 @@
 import org.apache.commons.beanutils.BeanMap;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
@@ -51,7 +50,7 @@ public class TestResultService {
     @Resource
     private ApiEnvironmentRunningParamService apiEnvironmentRunningParamService;
     @Resource
-    private RedisTemplate<String, Object> redisTemplate;
+    private RedisTemplateService redisTemplateService;
     @Resource
     private ApiScenarioExecutionInfoService scenarioExecutionInfoService;
     @Resource
@@ -148,7 +147,8 @@ public void batchSaveResults(Map<String, List<ResultDTO>> resultDtoMap) {
     public void testEnded(ResultDTO dto) {
         // 删除串行资源锁
         if (StringUtils.equals(dto.getRunType(), RunModeConstants.SERIAL.toString())) {
-            redisTemplate.delete(RunModeConstants.SERIAL.name() + "_" + dto.getReportId());
+            String key = StringUtils.join(RunModeConstants.SERIAL.name(), "_", dto.getReportId());
+            redisTemplateService.delete(key);
         }
         if (dto.getRequestResults() == null) {
             dto.setRequestResults(new LinkedList<>());

File: report-stat/backend/src/main/java/io/metersphere/reportstatistics/dto/EnterpriseReportContentStep.java
Patch:
@@ -11,10 +11,8 @@ public class EnterpriseReportContentStep implements Serializable {
     private String type;
     //type为report
     private String reportRecordId;
-    //    @JsonProperty("reportRecordData")
-    private Map<String, String> reportRecordData;
+    private Map<String, Object> reportRecordData;
     private String recordImageContent;
-    //    @JsonProperty("tableData")
     private Map<String, String> tableData;
     //type为txt
     private String previewContext;

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -2126,6 +2126,7 @@ private void setReferenced(JSONArray hashTree, String projectId, String versionI
                     object.put("referenced", "Copy");
                 }
             } else {
+                //将复制的或者类型不是引用case的步骤赋予当前项目id，目的是为了运行的时候可以配置运行环境
                 object.put("projectId", projectId);
                 if (StringUtils.isEmpty(object.optString("url"))) {
                     object.put("isRefEnvironment", true);

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanMessageService.java
Patch:
@@ -166,7 +166,8 @@ public void sendMessage(TestPlan testPlan, TestPlanReport testPlanReport, String
         paramMap.putAll(new BeanMap(testPlanDTOWithMetric));
 
         String testPlanShareUrl = getTestPlanShareUrl(testPlanReport.getId(), creator);
-        paramMap.put("planShareUrl", baseSystemConfigDTO.getUrl() + "/share-plan-report" + testPlanShareUrl);
+        // 分享经过网关需要带上前缀
+        paramMap.put("planShareUrl", baseSystemConfigDTO.getUrl() + "/track/share-plan-report" + testPlanShareUrl);
 
         /**
          * 测试计划的消息通知配置包括 完成、成功、失败

File: test-track/backend/src/main/java/io/metersphere/plan/utils/TestPlanStatusCalculator.java
Patch:
@@ -53,7 +53,6 @@ public static void addToReportCommonStatusResultList(Map<String, TestCaseReportS
         addToReportStatusResultList(resultMap, statusResult, "Fail");
         addToReportStatusResultList(resultMap, statusResult, "success");
         addToReportStatusResultList(resultMap, statusResult, "Success");
-        addToReportStatusResultList(resultMap, statusResult, "SUCCESS");
         addToReportStatusResultList(resultMap, statusResult, "STOP");
         addToReportStatusResultList(resultMap, statusResult, TestPlanTestCaseStatus.Prepare.name());
         addToReportStatusResultList(resultMap, statusResult, ExecuteResult.ERROR_REPORT_RESULT.toString());
@@ -76,7 +75,7 @@ public static void buildStatusResultMap(List<PlanReportCaseDTO> planReportCaseDT
                     ExecuteResult.UN_EXECUTE.getValue(), ExecuteResult.STOP.getValue(), ApiReportStatus.PENDING.name(), ApiReportStatus.STOPPED.name())) {
                 // 计算执行过的数量
                 report.setExecuteCount(report.getExecuteCount() + 1);
-                if (StringUtils.equals(successStatus, status)) {
+                if (StringUtils.equalsIgnoreCase(successStatus, status)) {
                     // 计算执行成功的数量
                     report.setPassCount(report.getPassCount() + 1);
                 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/utils/ReflexObjectUtil.java
Patch:
@@ -177,7 +177,9 @@ public static List<DetailColumn> compared(OperatingLogDetails obj, OperatingLogD
                                 oldTags = StringUtils.join(StringUtils.join(JSON_START, ((originalColumns.get(i) != null && originalObject != null) ? originalObject.toString() : "\"\"")), JSON_END);
                             }
                             List<String> newValueArray = JSON.parseArray(newValue.toString(), String.class);
-                            Collections.sort(newValueArray);
+                            if (CollectionUtils.isNotEmpty(newValueArray)) {
+                                Collections.sort(newValueArray);
+                            }
                             Object newObject = JSON.toJSONString(newValueArray);
                             String newTags = StringUtils.join(StringUtils.join(JSON_START, ((newColumns.get(i) != null && newObject != null) ? newObject.toString() : "\"\"")), JSON_END);
                             String diffValue;

File: framework/gateway/src/main/java/io/metersphere/gateway/service/LdapService.java
Patch:
@@ -98,7 +98,7 @@ public Optional<SessionUser> login(LoginRequest request, WebSession session, Loc
             }
 
             user.setSource(UserSource.LDAP.name());
-            userLoginService.addLdapUser(user);
+            u = userLoginService.addLdapUser(user);
         } else {
             // 更新
             u.setName(name);

File: framework/gateway/src/main/java/io/metersphere/gateway/service/UserLoginService.java
Patch:
@@ -332,12 +332,13 @@ public void createOssUser(User user) {
         userMapper.insertSelective(user);
     }
 
-    public void addLdapUser(User user) {
+    public User addLdapUser(User user) {
         user.setCreateTime(System.currentTimeMillis());
         user.setUpdateTime(System.currentTimeMillis());
         user.setStatus(UserStatus.NORMAL);
         checkEmailIsExist(user.getEmail());
         userMapper.insertSelective(user);
+        return user;
     }
 
     private void checkEmailIsExist(String email) {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -338,7 +338,7 @@ public static <T> List<T> findFromHashTreeByType(MsTestElement hashTree, Class<T
             put(ElementConstants.EXTRACT, MsExtract.class.getCanonicalName());
             put(ElementConstants.JMETER_ELE, MsJmeterElement.class.getCanonicalName());
             put(ElementConstants.TEST_PLAN, MsTestPlan.class.getCanonicalName());
-            put(ElementConstants.TREAD_GROUP, MsThreadGroup.class.getCanonicalName());
+            put(ElementConstants.THREAD_GROUP, MsThreadGroup.class.getCanonicalName());
             put(ElementConstants.DNS_CACHE, MsDNSCacheManager.class.getCanonicalName());
             put(ElementConstants.DEBUG_SAMPLER, MsDebugSampler.class.getCanonicalName());
             put(ElementConstants.AUTH_MANAGER, MsAuthManager.class.getCanonicalName());

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -21,7 +21,7 @@
 @EqualsAndHashCode(callSuper = true)
 
 public class MsThreadGroup extends MsTestElement {
-    private String type = ElementConstants.TREAD_GROUP;
+    private String type = ElementConstants.THREAD_GROUP;
     private String clazzName = MsThreadGroup.class.getCanonicalName();
 
     private boolean enableCookieShare;

File: api-test/backend/src/main/java/io/metersphere/commons/constants/ElementConstants.java
Patch:
@@ -19,7 +19,7 @@ public class ElementConstants {
     public static final String JDBC_POST = "JDBCPostProcessor";
     public static final String JMETER_ELE = "JmeterElement";
     public static final String TEST_PLAN = "TestPlan";
-    public static final String TREAD_GROUP = "ThreadGroup";
+    public static final String THREAD_GROUP = "ThreadGroup";
     public static final String DNS_CACHE = "DNSCacheManager";
     public static final String DEBUG_SAMPLER = "DebugSampler";
     public static final String AUTH_MANAGER = "AuthManager";
@@ -43,7 +43,7 @@ public class ElementConstants {
         this.add(ElementConstants.JDBC_POST);
         this.add(ElementConstants.JMETER_ELE);
         this.add(ElementConstants.TEST_PLAN);
-        this.add(ElementConstants.TREAD_GROUP);
+        this.add(ElementConstants.THREAD_GROUP);
         this.add(ElementConstants.DNS_CACHE);
         this.add(ElementConstants.DEBUG_SAMPLER);
         this.add(ElementConstants.AUTH_MANAGER);

File: test-track/backend/src/main/java/io/metersphere/excel/converter/TestCaseExportCommendConverter.java
Patch:
@@ -46,10 +46,10 @@ public String parse(TestCaseDTO testCase) {
             String status = StringUtils.EMPTY;
             if (StringUtils.equals(comment.getType(), TestCaseCommentType.PLAN.name())) {
                 status = getFromMapOfNullableWithTranslate(planCaseStatusMap, comment.getStatus());
-                status = "[".concat(status).concat("]");
+                status = StringUtils.isBlank(status) ? StringUtils.EMPTY : "[".concat(status).concat("]");
             } else if (StringUtils.equals(comment.getType(), TestCaseCommentType.REVIEW.name())) {
                 status = getFromMapOfNullableWithTranslate(reviewCaseStatusMap, comment.getStatus());
-                status = "[".concat(status).concat("]");
+                status = StringUtils.isBlank(status) ? StringUtils.EMPTY : "[".concat(status).concat("]");
             }
             String updateTime = DateUtils.getTimeString(comment.getUpdateTime());
             String description = comment.getDescription();

File: test-track/backend/src/main/java/io/metersphere/xmind/parser/XmindZen.java
Patch:
@@ -25,7 +25,7 @@ public static List<String> getContent(String jsonContent) {
             transferNotes(rootTopic);
             Map children = rootTopic.get("children");
             recursionChildren(children);
-            contents.add(jsonObject.toString());
+            contents.add(JSON.toJSONString(jsonObject));
         }
         return contents;
     }

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanApiCaseController.java
Patch:
@@ -136,9 +136,9 @@ public List<Map> selectStatusForPlanReport(@PathVariable("planId") String planId
         return testPlanApiCaseService.selectStatusForPlanReport(planId);
     }
 
-    @PostMapping("/get/plan/env/map/{resourceType}")
-    public Map<String, List<String>> getPlanProjectEnvMap(@RequestBody List<String> resourceIds, @PathVariable("resourceType") String resourceType) {
-        return testPlanApiCaseService.getPlanProjectEnvMap(resourceIds, resourceType);
+    @PostMapping("/get/plan/env/map")
+    public Map<String, List<String>> getPlanProjectEnvMap(@RequestBody List<String> resourceIds) {
+        return testPlanApiCaseService.getPlanProjectEnvMap(resourceIds);
     }
 
     @PostMapping("/set/env/{planId}")

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -65,7 +65,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/document/**", "anon");
         filterChainDefinitionMap.put("/chart-pic/**", "anon");
         filterChainDefinitionMap.put("/share/**", "anon");
-        filterChainDefinitionMap.put("/sharePlanReport", "anon");
+        filterChainDefinitionMap.put("/share-plan-report", "anon");
         filterChainDefinitionMap.put("/share-report", "anon");
         filterChainDefinitionMap.put("/share-document", "anon");
         filterChainDefinitionMap.put("/share-api-report", "anon");

File: test-track/backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -39,7 +39,7 @@ public List<IssuesDao> getIssuesByPlanoId(@PathVariable String shareId, @PathVar
     @GetMapping("/test/plan/report/{shareId}/{planId}")
     public TestPlanSimpleReportDTO getReport(@PathVariable String shareId, @PathVariable String planId) {
         baseShareInfoService.validate(shareId, planId);
-        return testPlanService.getReport(planId, null);
+        return testPlanService.getShareReport(baseShareInfoService.get(shareId), planId);
     }
 
     @GetMapping("/report/export/{shareId}/{planId}/{lang}")
@@ -59,6 +59,6 @@ public List<TestPlanCaseDTO> getAllCases(@PathVariable String shareId, @PathVari
     @GetMapping("/test/plan/report/db/{shareId}/{reportId}")
     public TestPlanSimpleReportDTO getTestPlanDbReport(@PathVariable String shareId, @PathVariable String reportId) {
         baseShareInfoService.validate(shareId, reportId);
-        return testPlanReportService.getReport(reportId);
+        return testPlanReportService.getShareDbReport(baseShareInfoService.get(shareId), reportId);
     }
 }

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanMessageService.java
Patch:
@@ -166,7 +166,7 @@ public void sendMessage(TestPlan testPlan, TestPlanReport testPlanReport, String
         paramMap.putAll(new BeanMap(testPlanDTOWithMetric));
 
         String testPlanShareUrl = getTestPlanShareUrl(testPlanReport.getId(), creator);
-        paramMap.put("planShareUrl", baseSystemConfigDTO.getUrl() + "/sharePlanReport" + testPlanShareUrl);
+        paramMap.put("planShareUrl", baseSystemConfigDTO.getUrl() + "/share-plan-report" + testPlanShareUrl);
 
         /**
          * 测试计划的消息通知配置包括 完成、成功、失败

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanTestPlanApiCaseService.java
Patch:
@@ -36,7 +36,7 @@ public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
             calculatePlanReport(report, planReportCaseDTOS);
             //记录接口用例的运行环境信息
             List<String> idList = planReportCaseDTOS.stream().map(PlanReportCaseDTO::getId).collect(Collectors.toList());
-            report.setProjectEnvMap(getPlanProjectEnvMap(idList, "ApiCase"));
+            report.setProjectEnvMap(getPlanProjectEnvMap(idList));
         } catch (MSException e) {
             LogUtil.error(e);
         }
@@ -76,8 +76,8 @@ public List<PlanReportCaseDTO> selectStatusForPlanReport(String planId) {
         return microService.getForDataArray(serviceName, BASE_UEL + "/get/report/status/" + planId, PlanReportCaseDTO.class);
     }
 
-    public Map<String, List<String>> getPlanProjectEnvMap(List<String> resourceIds, String resourceType) {
-        return (Map<String, List<String>>) microService.postForData(serviceName, BASE_UEL + "/get/plan/env/map/" + resourceType, resourceIds);
+    public Map<String, List<String>> getPlanProjectEnvMap(List<String> resourceIds) {
+        return (Map<String, List<String>>) microService.postForData(serviceName, BASE_UEL + "/get/plan/env/map", resourceIds);
     }
 
     public List<MsExecResponseDTO> run(BatchRunDefinitionRequest request) {

File: test-track/backend/src/main/java/io/metersphere/plan/service/remote/api/PlanTestPlanScenarioCaseService.java
Patch:
@@ -29,7 +29,7 @@ public void calculatePlanReport(String planId, TestPlanSimpleReportDTO report) {
             calculatePlanReport(report, planReportCaseDTOS);
             //记录接口用例的运行环境信息
             List<String> idList = planReportCaseDTOS.stream().map(PlanReportCaseDTO::getId).collect(Collectors.toList());
-            report.setProjectEnvMap(getPlanProjectEnvMap(idList, "Scenario"));
+            report.setProjectEnvMap(getPlanProjectEnvMap(idList));
         } catch (MSException e) {
             LogUtil.error(e);
         }
@@ -90,8 +90,8 @@ public List<PlanReportCaseDTO> selectStatusForPlanReport(String planId) {
         return microService.getForDataArray(serviceName, BASE_UEL + "/get/report/status/" + planId, PlanReportCaseDTO.class);
     }
 
-    public Map<String, List<String>> getPlanProjectEnvMap(List<String> resourceIds, String resourceType) {
-        return (Map<String, List<String>>) microService.postForData(serviceName, BASE_UEL + "/get/plan/env/map/" + resourceType, resourceIds);
+    public Map<String, List<String>> getPlanProjectEnvMap(List<String> resourceIds) {
+        return (Map<String, List<String>>) microService.postForData(serviceName, BASE_UEL + "/get/plan/env/map", resourceIds);
     }
 
     public List<String> getExecResultByPlanId(String planId) {

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/TapdPlatform.java
Patch:
@@ -256,8 +256,8 @@ private void parseIssue(IssuesWithBLOBs issue, Map bug) {
         issue.setCustomFields(syncIssueCustomField(issue.getCustomFields(), bug));
         issue.setPlatform(key);
         try {
-            issue.setCreateTime(DateUtils.getTimestamp((String) bug.get("created")));
-            issue.setUpdateTime(DateUtils.getTimestamp((String) bug.get("modified")));
+            issue.setCreateTime(DateUtils.getTime((String) bug.get("created")).getTime());
+            issue.setUpdateTime(DateUtils.getTime((String) bug.get("modified")).getTime());
         } catch (Exception e) {
             LogUtil.error(e);
         }

File: api-test/backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -165,7 +165,7 @@ protected MsHTTPSamplerProxy buildRequest(String name, String path, String metho
     protected MsHTTPSamplerProxy buildRequest(String name, String path, String method, String jsonSchema) {
         MsHTTPSamplerProxy request = buildRequest(name, path, method);
         if (StringUtils.isNotBlank(jsonSchema)) {
-            request.getBody().setJsonSchema(JSONUtil.parseObject(jsonSchema));
+            request.getBody().setJsonSchema(JSON.parseObject(jsonSchema));
             request.getBody().setFormat("JSON-SCHEMA");
         }
         return request;

File: api-test/backend/src/main/java/io/metersphere/commons/utils/ResponseUtil.java
Patch:
@@ -21,16 +21,13 @@
 public class ResponseUtil {
 
     public static RequestResultExpandDTO parseByRequestResult(RequestResult baseResult) {
-
         //根据responseheader的信息来处理返回数据
         baseResult = ResponseUtil.parseResponseBodyByHeader(baseResult);
-
         //解析是否含有误报库信息
         ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(baseResult);
         RequestResult requestResult = errorCodeDTO.getResult();
         RequestResultExpandDTO expandDTO = new RequestResultExpandDTO();
         BeanUtils.copyBean(expandDTO, requestResult);
-
         if (CollectionUtils.isNotEmpty(errorCodeDTO.getErrorCodeList())) {
             Map<String, String> expandMap = new HashMap<>();
             expandMap.put(ApiReportStatus.FAKE_ERROR.name(), errorCodeDTO.getErrorCodeStr());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/service/BaseIntegrationService.java
Patch:
@@ -98,6 +98,6 @@ public String getLogDetails(String id) {
     }
 
     public void authServiceIntegration(String workspaceId, String platform) {
-        microService.getForResultHolder(MicroServiceName.TEST_TRACK, String.format("/issues/auth/%s/%s", workspaceId, platform));
+        microService.getForData(MicroServiceName.TEST_TRACK, String.format("/issues/auth/%s/%s", workspaceId, platform));
     }
 }

File: test-track/backend/src/main/java/io/metersphere/service/issue/client/JiraAbstractClient.java
Patch:
@@ -192,7 +192,7 @@ public void auth() {
         ResponseEntity<String> response = null;
         try {
             response = restTemplate.exchange(getBaseUrl() + "/myself", HttpMethod.GET, getAuthHttpEntity(), String.class);
-            if (StringUtils.isNotBlank(response.getBody()) && !response.getBody().startsWith("{\"self\"")) {
+            if (StringUtils.isBlank(response.getBody()) || (StringUtils.isNotBlank(response.getBody()) && !response.getBody().startsWith("{\"self\""))) {
                 MSException.throwException(Translator.get("jira_auth_url_error"));
             }
         } catch (HttpClientErrorException e) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.node.NullNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
 import io.metersphere.api.dto.definition.request.sampler.MsHTTPSamplerProxy;
 import io.metersphere.api.dto.definition.response.HttpResponse;
@@ -146,7 +147,7 @@ private void parseBody(Body body, PostmanRequest requestDesc) {
         if (StringUtils.equals(bodyMode, PostmanRequestBodyMode.RAW.value())) {
             parseRawBody(body, postmanBody, bodyMode);
         } else if (StringUtils.equalsAny(bodyMode, PostmanRequestBodyMode.FORM_DATA.value(), PostmanRequestBodyMode.URLENCODED.value())) {
-            String s1 = postmanBody.get(bodyMode).toString();
+            String s1 = Optional.ofNullable(postmanBody.get(bodyMode)).orElse(NullNode.getInstance()).toString();
             String s = parseVariable(s1);
             List<PostmanKeyValue> postmanKeyValues = JSON.parseArray(s, PostmanKeyValue.class);
             body.setKvs(parseKeyValue(postmanKeyValues));

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -1350,7 +1350,7 @@ public Boolean checkIsSynchronize(ApiDefinitionWithBLOBs existApi, ApiDefinition
 
         if (exApiRequest.get("body") != null && apiRequest.get("body") != null) {
             if (!StringUtils.equals(exApiRequest.get("body").toString(), apiRequest.get("body").toString())) {
-                if (apiSyncCaseRequest.getBody() && toUpdate) {
+                if (BooleanUtils.toBoolean(apiSyncCaseRequest.getBody()) && toUpdate) {
                     apiDefinition.setToBeUpdated(true);
                     apiDefinition.setToBeUpdateTime(System.currentTimeMillis());
                 }

File: framework/gateway/src/main/java/io/metersphere/gateway/controller/LdapController.java
Patch:
@@ -11,6 +11,7 @@
 import reactor.core.publisher.Mono;
 
 import javax.annotation.Resource;
+import java.util.Locale;
 
 @RestController
 @RequestMapping("/ldap")
@@ -21,8 +22,8 @@ public class LdapController {
 
     @PostMapping(value = "/signin")
     @MsAuditLog(module = OperLogModule.SYSTEM_PARAMETER_SETTING, type = OperLogConstants.LOGIN, title = "LDAP")
-    public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession session) {
-        return Mono.just(ldapService.login(request, session))
+    public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession session, Locale locale) {
+        return Mono.just(ldapService.login(request, session, locale))
                 .map(ResultHolder::success);
     }
 

File: framework/gateway/src/main/java/io/metersphere/gateway/controller/LoginController.java
Patch:
@@ -25,6 +25,7 @@
 import javax.annotation.Resource;
 import java.io.IOException;
 import java.util.List;
+import java.util.Locale;
 import java.util.stream.Collectors;
 
 @RestController
@@ -64,8 +65,8 @@ public Mono<ResultHolder> isLogin(@RequestHeader(name = SessionConstants.HEADER_
     }
 
     @PostMapping(value = "/signin")
-    public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession session) {
-        return Mono.defer(() -> userLoginService.login(request, session).map(Mono::just).orElseGet(Mono::empty))
+    public Mono<ResultHolder> login(@RequestBody LoginRequest request, WebSession session, Locale locale) {
+        return Mono.defer(() -> userLoginService.login(request, session, locale).map(Mono::just).orElseGet(Mono::empty))
                 .subscribeOn(Schedulers.boundedElastic())
                 .switchIfEmpty(Mono.error(new ResponseStatusException(HttpStatus.BAD_REQUEST, "Not found user info or invalid password")))
                 .doOnNext(user -> session.getAttributes().put("user", user))

File: test-track/backend/src/main/java/io/metersphere/plan/service/TestPlanService.java
Patch:
@@ -1578,7 +1578,7 @@ public void batchUpdateScheduleEnable(ScheduleInfoRequest request) {
         for (String id : scheduleIds) {
             Schedule schedule = baseScheduleService.getSchedule(id);
             schedule.setEnable(request.isEnable());
-            planApiAutomationService.updateSchedule(schedule);
+            updateSchedule(schedule);
         }
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -85,13 +85,13 @@ public void stop(List<TaskRequestDTO> reportIds) {
         if (CollectionUtils.isNotEmpty(reportIds)) {
             // 任务中心单条停止/全部停止
             Map<String, TaskRequestDTO> taskRequestMap = reportIds.stream().collect(Collectors.toMap(TaskRequestDTO::getType, taskRequest -> taskRequest));
-            if (taskRequestMap.containsKey(API) || taskRequestMap.containsKey(SCENARIO)) {
+            if (taskRequestMap.containsKey(API)) {
                 microService.postForData(MicroServiceName.API_TEST, "/api/automation/stop/batch", reportIds);
             }
             if (taskRequestMap.containsKey(PERF)) {
                 microService.postForData(MicroServiceName.PERFORMANCE_TEST, "/performance/stop/batch", taskRequestMap.get(PERF));
             }
-            if(taskRequestMap.containsKey(UI)){
+            if(taskRequestMap.containsKey(UI) || taskRequestMap.containsKey(SCENARIO)) {
                 microService.postForData(MicroServiceName.UI_TEST, "/ui/automation/stop/batch", reportIds);
             }
         }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockApiUtils.java
Patch:
@@ -325,7 +325,7 @@ public String getResultByResponseResult(String projectId, JSONObject bodyObj, St
                     if (bodyObj.has("xmlHeader")) {
                         String xmlHeader = bodyObj.optString("xmlHeader");
                         if (!StringUtils.startsWith(xmlHeader, "<?") && !StringUtils.endsWith(xmlHeader, "?>")) {
-                            returnStr = "<?" + xmlHeader + "?>\r\n";
+                            returnStr = "<?xml " + xmlHeader + "?>\r\n";
                         } else {
                             returnStr = xmlHeader;
                         }
@@ -355,6 +355,7 @@ public static RequestMockParams getParams(String urlParams, String apiPath, JSON
                 if (!((JSONObject) paramJson).keySet().isEmpty()) {
                     JSONArray bodyParams = returnParams.getBodyParams();
                     if (bodyParams == null) {
+                        bodyParams = new JSONArray();
                         bodyParams.put(paramJson);
                     } else {
                         bodyParams.put(((JSONObject) paramJson));
@@ -390,7 +391,7 @@ private static RequestMockParams getGetParamMap(String urlParams, String apiPath
         requestMockParams.setRestParamsObj(urlParamsObject);
         requestMockParams.setQueryParamsObj(queryParamsObject);
 
-        if (isPostRequest) {
+        if (isPostRequest && !queryParamsObject.keySet().isEmpty()) {
             JSONArray jsonArray = new JSONArray();
             jsonArray.put(queryParamsObject);
             requestMockParams.setBodyParams(jsonArray);

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionExecResultService.java
Patch:
@@ -283,7 +283,7 @@ public void saveApiResultByScheduleTask(ResultDTO dto) {
             for (RequestResult item : dto.getRequestResults()) {
                 LoggerUtil.info("执行结果【 " + item.getName() + " 】入库存储");
                 if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {
-                    //对响应内容进行进一步解析。如果有附加信息（比如误报库信息），则根据附加信息内的数据进行其他判读
+                    //对响应内容进行进一步解析和处理。如果有附加信息（比如误报库信息），则根据附加信息内的数据进行其他判读
                     RequestResultExpandDTO expandDTO = ResponseUtil.parseByRequestResult(item);
 
                     ApiDefinitionExecResult reportResult = this.editResult(item, dto.getReportId(), dto.getConsole(), dto.getRunMode(), dto.getTestId(), null);

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -67,6 +67,6 @@ public boolean isValid() {
     }
 
     public boolean isFile() {
-        return (CollectionUtils.isNotEmpty(files)) && StringUtils.equalsIgnoreCase(type, "file");
+        return (CollectionUtils.isNotEmpty(files)) && (StringUtils.isEmpty(type) || StringUtils.equalsIgnoreCase(type, "file"));
     }
 }

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -188,8 +188,7 @@ private synchronized void send(JmeterRunRequestDTO request) {
 
 
     public void run(JmeterRunRequestDTO request) {
-        //UI 测试只走本地 ms，资源池交给 selenium-grid 本身实现
-        if (request.getPool().isPool() && StringUtils.isNotBlank(request.getRunMode()) && !request.getRunMode().startsWith("UI")) {
+        if (request.getPool().isPool() && StringUtils.isNotBlank(request.getRunMode())) {
             this.runNode(request);
         } else {
             //解析hashTree，是否含有文件库文件

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiDefinitionController.java
Patch:
@@ -66,6 +66,7 @@ public class ApiDefinitionController {
     @RequiresPermissions("PROJECT_API_DEFINITION:READ")
     public Pager<List<ApiDefinitionResult>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiDefinitionRequest request) {
         apiDefinitionService.checkFilterHasCoverage(request);
+        apiDefinitionService.getApplicationUpdateRule(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, apiDefinitionService.list(request));
     }

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiTestCaseController.java
Patch:
@@ -71,6 +71,7 @@ public ApiTestCaseResult single(@PathVariable String id) {
     public Pager<List<ApiTestCaseDTO>> listSimple(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setSelectEnvironment(true);
+        apiTestCaseService.initRequestBySearch(request);
         return PageUtils.setPageInfo(page, apiTestCaseService.listSimple(request));
     }
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -89,7 +89,7 @@ public void stop(List<TaskRequestDTO> reportIds) {
                 microService.postForData(MicroServiceName.API_TEST, "/api/automation/stop/batch", reportIds);
             }
             if (taskRequestMap.containsKey(PERF)) {
-                microService.postForData(MicroServiceName.API_TEST, "/performance/stop/batch", taskRequestMap.get(PERF));
+                microService.postForData(MicroServiceName.PERFORMANCE_TEST, "/performance/stop/batch", taskRequestMap.get(PERF));
             }
             if(taskRequestMap.containsKey(UI)){
                 microService.postForData(MicroServiceName.UI_TEST, "/ui/automation/stop/batch", reportIds);
@@ -100,7 +100,7 @@ public void stop(List<TaskRequestDTO> reportIds) {
     public void stopPerf(List<TaskRequestDTO> reportIds) {
         if (CollectionUtils.isNotEmpty(reportIds)) {
             Map<String, TaskRequestDTO> taskRequestMap = reportIds.stream().collect(Collectors.toMap(TaskRequestDTO::getType, taskRequest -> taskRequest));
-            microService.postForData(MicroServiceName.API_TEST, "/performance/stop/batch", taskRequestMap.get(PERF));
+            microService.postForData(MicroServiceName.PERFORMANCE_TEST, "/performance/stop/batch", taskRequestMap.get(PERF));
         }
     }
 

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/JiraPlatform.java
Patch:
@@ -915,6 +915,9 @@ public void syncJiraIssueAttachments(IssuesWithBLOBs issue, JiraIssue jiraIssue)
                             && !msAttachmentsName.contains(filename)) {
                         try {
                             byte[] content = jiraClientV2.getAttachmentContent(attachment.get("content").toString());
+                            if (content == null) {
+                                continue;
+                            }
                             FileAttachmentMetadata fileAttachmentMetadata = attachmentService.saveAttachmentByBytes(content, AttachmentType.ISSUE.type(), issue.getId(), filename);
                             AttachmentModuleRelation attachmentModuleRelation = new AttachmentModuleRelation();
                             attachmentModuleRelation.setAttachmentId(fileAttachmentMetadata.getId());

File: test-track/backend/src/main/java/io/metersphere/controller/TestCaseController.java
Patch:
@@ -248,7 +248,7 @@ public void testCaseTemplateExport(@PathVariable String projectId, @PathVariable
         testCaseService.testCaseTemplateExport(projectId, importType, response);
     }
 
-    @GetMapping("/export/xmindTemplate/{projectId}/{importType}")
+    @GetMapping("/export/xmind/template/{projectId}/{importType}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ_EXPORT)
     public void xmindTemplate(@PathVariable String projectId, @PathVariable String importType, HttpServletResponse response) {
         testCaseService.testCaseXmindTemplateExport(projectId, importType, response);

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -1362,7 +1362,7 @@ public void download(String fileName, HttpServletResponse res) throws IOExceptio
         // 发送给客户端的数据
         byte[] buff = new byte[1024];
         try (OutputStream outputStream = res.getOutputStream();
-             BufferedInputStream bis = new BufferedInputStream(TestCaseService.class.getResourceAsStream("/io/metersphere/xmind/template/" + fileName));) {
+             BufferedInputStream bis = new BufferedInputStream(TestCaseService.class.getClassLoader().getResourceAsStream("xmind/" + fileName));) {
             int i = bis.read(buff);
             while (i != -1) {
                 outputStream.write(buff, 0, buff.length);

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger3Parser.java
Patch:
@@ -615,12 +615,11 @@ public SwaggerApiExportResult swagger3Export(List<ApiDefinitionWithBLOBs> apiDef
 
         result.setOpenapi("3.0.1");
         SwaggerInfo swaggerInfo = new SwaggerInfo();
-        swaggerInfo.setVersion("1.0.1");
+        swaggerInfo.setVersion("1.0");
         swaggerInfo.setTitle("ms-" + project.getName());
         swaggerInfo.setDescription("");
         swaggerInfo.setTermsOfService("");
         result.setInfo(swaggerInfo);
-        result.setInfo(new SwaggerInfo());
         result.setServers(new ArrayList<>());
         result.setTags(new ArrayList<>());
         result.setComponents(JSONUtil.createObj());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/log/utils/ReflexObjectUtil.java
Patch:
@@ -174,12 +174,12 @@ public static List<DetailColumn> compared(OperatingLogDetails obj, OperatingLogD
                                 List<String> originalValueArray = JSON.parseArray(originalValue.toString(), String.class);
                                 Collections.sort(originalValueArray);
                                 Object originalObject = JSON.toJSONString(originalValueArray);
-                                oldTags = StringUtils.join(StringUtils.join(JSON_START , ((originalColumns.get(i) != null && originalObject != null) ? originalObject.toString() : "\"\"")) , JSON_END);
+                                oldTags = StringUtils.join(StringUtils.join(JSON_START, ((originalColumns.get(i) != null && originalObject != null) ? originalObject.toString() : "\"\"")), JSON_END);
                             }
                             List<String> newValueArray = JSON.parseArray(newValue.toString(), String.class);
                             Collections.sort(newValueArray);
                             Object newObject = JSON.toJSONString(newValueArray);
-                            String newTags = StringUtils.join(StringUtils.join(JSON_START , ((newColumns.get(i) != null && newObject != null) ? newObject.toString() : "\"\"")) , JSON_END);
+                            String newTags = StringUtils.join(StringUtils.join(JSON_START, ((newColumns.get(i) != null && newObject != null) ? newObject.toString() : "\"\"")), JSON_END);
                             String diffValue;
                             if (oldTags != null) {
                                 String diffStr = diff.diff(oldTags, newTags);
@@ -207,7 +207,7 @@ else if (StringUtils.equals(module, "PROJECT_ENVIRONMENT_SETTING")) {
                             if (originalColumns.get(i).getColumnName().equals("config")) {
                                 String newValue = Objects.toString(column.getNewValue().toString(), "");
                                 String oldValue = Objects.toString(column.getOriginalValue(), "");
-                                // column.setDiffValue(ApiTestEnvironmentDiffUtil.diff(newValue, oldValue));
+                                column.setDiffValue(ApiTestEnvironmentDiffUtil.diff(newValue, oldValue));
                             }
                         } else {
                             String newValue = Objects.toString(column.getNewValue().toString(), "");

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -324,7 +324,7 @@ private void checkCustomNumExist(SaveApiScenarioRequest request) {
         String id = request.getId();
         ApiScenarioWithBLOBs apiScenarioWithBLOBs = apiScenarioMapper.selectByPrimaryKey(id);
         ApiScenarioExample.Criteria criteria = example.createCriteria();
-        criteria.andCustomNumEqualTo(request.getCustomNum()).andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(id);
+        criteria.andCustomNumEqualTo(request.getCustomNum()).andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(id).andStatusNotEqualTo(ApiTestDataStatus.TRASH.getValue());
         if (apiScenarioWithBLOBs != null && StringUtils.isNotBlank(apiScenarioWithBLOBs.getRefId())) {
             criteria.andRefIdNotEqualTo(apiScenarioWithBLOBs.getRefId());
         }
@@ -1256,6 +1256,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
         if (BooleanUtils.isTrue(openCustomNum)) {
             ApiScenarioExample example = new ApiScenarioExample();
             ApiScenarioExample.Criteria criteria = example.createCriteria();
+            criteria.andStatusNotEqualTo(ApiTestDataStatus.TRASH.getValue());
             if (CollectionUtils.isEmpty(sameList)) {
                 criteria.andCustomNumEqualTo(scenarioWithBLOBs.getCustomNum()).andProjectIdEqualTo(scenarioWithBLOBs.getProjectId());
             } else {

File: api-test/backend/src/main/java/io/metersphere/controller/plan/ShareTestPlanApiReportController.java
Patch:
@@ -11,7 +11,7 @@
 import javax.annotation.Resource;
 
 @RestController
-@RequestMapping("/share/test/plan/api/case")
+@RequestMapping("/share")
 public class ShareTestPlanApiReportController {
 
     @Resource

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -158,7 +158,7 @@ public List<MsExecResponseDTO> run(RunScenarioRequest request) {
             if (request.isRerun()) {
                 ApiScenarioReportWithBLOBs report = new ApiScenarioReportWithBLOBs();
                 report.setId(serialReportId);
-                report.setStatus(ApiReportStatus.RUNNING.name());
+                report.setStatus(ApiReportStatus.RERUNNING.name());
                 apiScenarioReportMapper.updateByPrimaryKeySelective(report);
             } else {
                 LoggerUtil.info("Scenario run-执行脚本装载-初始化集成报告：" + serialReportId);

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/environment/controller/EnvironmentRelateController.java
Patch:
@@ -25,7 +25,7 @@ public Object getApiDocument(String id, String type) {
 
     @PostMapping("/api/definition/list/batch")
     public Object listBatch(@RequestBody Object obj) {
-        return microService.postForData(MicroServiceName.API_TEST, "/api/definition/generator", obj);
+        return microService.postForData(MicroServiceName.API_TEST, "/api/definition/list/batch", obj);
     }
 
     @PostMapping("/api/testcase/list-blobs")
@@ -38,9 +38,9 @@ public Object jsonGenerator(@RequestBody Object obj) {
         return microService.postForData(MicroServiceName.API_TEST, "/api/definition/generator", obj);
     }
 
-    @GetMapping("/api/module/getUserDefaultApiType")
+    @GetMapping("/api/module/default-type")
     public Object getUserDefaultApiType() {
-        return microService.getForData(MicroServiceName.API_TEST, "/api/module/getUserDefaultApiType/");
+        return microService.getForData(MicroServiceName.API_TEST, "/api/module/default-type");
     }
 
     @PostMapping("/api/definition/list/{goPage}/{pageSize}")

File: api-test/backend/src/main/java/io/metersphere/api/parse/postman/PostmanRequest.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.parse.postman;
 
 
+import com.fasterxml.jackson.databind.node.ObjectNode;
 import lombok.Data;
 import org.json.JSONObject;
 
@@ -12,8 +13,8 @@ public class PostmanRequest {
     private String method;
     private String schema;
     private List<PostmanKeyValue> header;
-    private JSONObject body;
-    private JSONObject auth;
+    private ObjectNode body;
+    private ObjectNode auth;
     private PostmanUrl url;
     private String description;
 }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/XMLUtil.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.commons.utils;
 
 import io.metersphere.api.exec.engine.EngineSourceParserFactory;
-import io.metersphere.commons.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
 import org.dom4j.Document;
 import org.dom4j.Element;
@@ -190,7 +189,7 @@ public static JSONObject elementToJSONObject(Element node) {
             if (list.size() == 1) {
                 result.put(node.getName(), list.get(0));
             } else {
-                result.put(node.getName(), new JSONArray(list));
+                result.put(node.getName(), list);
             }
         } else {
             if (!StringUtils.isAllBlank(node.getName(), node.getText())) {

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -150,7 +150,7 @@ private JSONObject setRequest(JSONObject element) {
                         if (CollectionUtils.isNotEmpty(rules)) {
                             step.addAll(rules);
                         }
-                        element.put(HASH_TREE, new JSONArray(step));
+                        element.put(HASH_TREE, step);
                     }
                     element.put(REFERENCED, REF);
                     element.put(DISABLED, true);

File: project-management/backend/src/main/java/io/metersphere/controller/GroupController.java
Patch:
@@ -59,7 +59,7 @@ public List<GroupDTO> getAllGroup() {
     }
 
     @PostMapping("/get")
-    @RequiresPermissions(value = {PermissionConstants.SYSTEM_GROUP_READ, PermissionConstants.SYSTEM_USER_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.SYSTEM_GROUP_READ, PermissionConstants.SYSTEM_USER_READ, PermissionConstants.WORKSPACE_USER_READ}, logical = Logical.OR)
     public List<Group> getGroupByType(@RequestBody EditGroupRequest request) {
         return groupService.getGroupByType(request);
     }

File: system-setting/backend/src/main/java/io/metersphere/controller/GroupController.java
Patch:
@@ -59,7 +59,7 @@ public List<GroupDTO> getAllGroup() {
     }
 
     @PostMapping("/get")
-    @RequiresPermissions(value = {PermissionConstants.SYSTEM_GROUP_READ, PermissionConstants.SYSTEM_USER_READ}, logical = Logical.OR)
+    @RequiresPermissions(value = {PermissionConstants.SYSTEM_GROUP_READ, PermissionConstants.SYSTEM_USER_READ, PermissionConstants.WORKSPACE_USER_READ}, logical = Logical.OR)
     public List<Group> getGroupByType(@RequestBody EditGroupRequest request) {
         return groupService.getGroupByType(request);
     }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiModuleService.java
Patch:
@@ -1617,7 +1617,7 @@ private void buildProcessData(List<ApiModuleDTO> nodeTreeByProjectId, Map<String
         int i = 0;
         Map<String, List<ApiModule>> idModuleMap = new HashMap<>();
         for (ApiModuleDTO apiModuleDTO : nodeTreeByProjectId) {
-            if (StringUtils.isBlank(apiModuleDTO.getParentId())) {
+            if (StringUtils.isBlank(apiModuleDTO.getParentId()) || StringUtils.equals(apiModuleDTO.getParentId(),"0")) {
                 apiModuleDTO.setParentId(PropertyConstant.ROOT);
             }
             String parentModulePath = parentModulePathMap.get(apiModuleDTO.getParentId());

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -356,6 +356,7 @@ private void checkCustomNumExist(TestCaseWithBLOBs testCase) {
         TestCaseExample.Criteria criteria = example.createCriteria();
         criteria.andCustomNumEqualTo(testCase.getCustomNum())
                 .andProjectIdEqualTo(testCase.getProjectId())
+                .andStatusNotEqualTo(CommonConstants.TrashStatus)
                 .andIdNotEqualTo(testCase.getId());
         if (testCaseWithBLOBs != null && StringUtils.isNotBlank(testCaseWithBLOBs.getRefId())) {
             criteria.andRefIdNotEqualTo(testCaseWithBLOBs.getRefId());

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiTestCaseService.java
Patch:
@@ -1024,7 +1024,8 @@ public DeleteCheckResult checkDeleteDatas(ApiTestBatchRequest request) {
     public List<ApiTestCase> getApiCaseByIds(List<String> apiCaseIds) {
         if (CollectionUtils.isNotEmpty(apiCaseIds)) {
             ApiTestCaseExample example = new ApiTestCaseExample();
-            example.createCriteria().andIdIn(apiCaseIds).andStatusNotEqualTo(CommonConstants.TrashStatus);
+            example.createCriteria().andIdIn(apiCaseIds);
+            example.or().andStatusNotEqualTo(CommonConstants.TrashStatus).andStatusIsNull();
             return apiTestCaseMapper.selectByExample(example);
         }
         return new ArrayList<>();

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -2172,9 +2172,7 @@ public List<ApiCountChartResult> countByRequest(ApiCountRequest request) {
     public List<ApiScenario> getScenarioCaseByIds(List<String> ids) {
         if (CollectionUtils.isNotEmpty(ids)) {
             ApiScenarioExample example = new ApiScenarioExample();
-            example.createCriteria()
-                    .andIdIn(ids)
-                    .andStatusNotEqualTo(CommonConstants.TrashStatus);
+            example.createCriteria().andIdIn(ids).andStatusNotEqualTo(CommonConstants.TrashStatus);
             return apiScenarioMapper.selectByExample(example);
         }
         return new ArrayList<>();

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiModuleService.java
Patch:
@@ -1061,7 +1061,7 @@ private Map<String, ApiModule> cover(Map<String, ApiModule> moduleMap, List<ApiD
                                          Map<String, List<ApiTestCaseWithBLOBs>> oldCaseMap, Map<String, EsbApiParamsWithBLOBs> esbApiParamsMap) {
         //覆盖但不覆盖模块
         if (MapUtils.isEmpty(nameModuleMap) || MapUtils.isEmpty(repeatDataMap)) {
-           return new HashMap<>();
+           return moduleMap;
         }
         //导入文件没有新增接口无需创建接口模块
         moduleMap = judgeModule(moduleMap, nameModuleMap, repeatDataMap);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -167,7 +167,9 @@ private void setGlobProcessor(ParameterConfig config, HashTree scenarioTree, boo
                 if (environmentConfig != null) {
                     EnvJSR223Processor envProcessor = isPre ? environmentConfig.getPreStepProcessor() : environmentConfig.getPostStepProcessor();
                     MsJSR223Processor processor = new MsJSR223Processor();
-                    BeanUtils.copyBean(processor, envProcessor);
+                    if (envProcessor != null) {
+                        BeanUtils.copyBean(processor, envProcessor);
+                    }
                     if (processor != null && StringUtils.isNotEmpty(processor.getScript())) {
                         processor.setType(ElementConstants.JSR223);
                         processor.setClazzName(MsJSR223Processor.class.getCanonicalName());

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -1376,6 +1376,9 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
 
         for (int i = 0; i < data.size(); i++) {
             ApiScenarioWithBLOBs item = data.get(i);
+            if (StringUtils.isBlank(item.getName())) {
+                MSException.throwException(Translator.get("scenario_name_is_null"));
+            }
             List<ApiScenarioWithBLOBs> sameList = needUpdateList.stream().filter(t -> t.getId().equals(item.getId())).collect(toList());
             if (StringUtils.isBlank(item.getCreateUser())) {
                 item.setCreateUser(SessionUtils.getUserId());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -153,6 +153,7 @@ private MessageDetail getMessageDetail(List<MessageTask> messageTasks) {
             messageDetail.setIdentification(m.getIdentification());
             messageDetail.setType(m.getType());
             messageDetail.setIsSet(m.getIsSet());
+            messageDetail.setTestId(m.getTestId());
             messageDetail.setCreateTime(m.getCreateTime());
             messageDetail.setTemplate(m.getTemplate());
         }

File: test-track/backend/src/main/java/io/metersphere/service/issue/platform/TapdPlatform.java
Patch:
@@ -65,7 +65,7 @@ public List<String> getTapdUsers(String projectId,String num){
         List<String>tapdUsers = new ArrayList<>(tapdIssues.size());
         for (Object tapdIssue : tapdIssues) {
             Map bug = (Map) ((Map) tapdIssue).get("Bug");
-            String currentOwner = bug.get("current_owner").toString();
+            String currentOwner = Optional.ofNullable(bug.get("current_owner")).orElse("").toString();
             tapdUsers.add(currentOwner);
         }
         return tapdUsers;

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -190,7 +190,7 @@ private boolean setRefScenario(List<MsTestElement> hashTree) {
             if (scenario != null && StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
                 JSONObject element = JSONUtil.parseObject(scenario.getScenarioDefinition());
                 // 历史数据处理
-                ElementUtil.dataFormatting(element.getJSONArray(ElementConstants.HASH_TREE));
+                ElementUtil.dataFormatting(element.optJSONArray(ElementConstants.HASH_TREE));
                 this.setName(scenario.getName());
                 this.setProjectId(scenario.getProjectId());
                 LinkedList<MsTestElement> sourceHashTree = mapper.readValue(element.optString(ElementConstants.HASH_TREE), new TypeReference<LinkedList<MsTestElement>>() {

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiEnvironmentRunningParamService.java
Patch:
@@ -43,7 +43,7 @@ public void addParam(String environmentId, Map<String, String> varMap) {
             if (configObj.has("commonConfig")) {
                 JSONObject commonConfig = configObj.optJSONObject("commonConfig");
                 if (commonConfig.has("variables")) {
-                    JSONArray variables = commonConfig.getJSONArray("variables");
+                    JSONArray variables = commonConfig.optJSONArray("variables");
                     List<JSONObject> variableList = new LinkedList<>();
                     for (Map.Entry<String, String> entry : varMap.entrySet()) {
                         String key = entry.getKey();

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/ApiScenarioImportUtil.java
Patch:
@@ -296,8 +296,8 @@ public static void formatHashTree(JSONArray hashTree) {
                 object.put("index", i + 1);
                 object.put("resourceId", UUID.randomUUID().toString());
                 hashTree.put(i, object);
-                if (object.has(ElementConstants.HASH_TREE) && object.getJSONArray(ElementConstants.HASH_TREE) != null) {
-                    formatHashTree(object.getJSONArray(ElementConstants.HASH_TREE));
+                if (object.has(ElementConstants.HASH_TREE) && object.optJSONArray(ElementConstants.HASH_TREE) != null) {
+                    formatHashTree(object.optJSONArray(ElementConstants.HASH_TREE));
                 }
             }
         }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/GenerateHashTreeUtil.java
Patch:
@@ -55,7 +55,7 @@ public static void parse(String scenarioDefinition, MsScenario scenario) {
             ElementUtil.dataFormatting(element);
             // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
             if (element != null && element.has(ElementConstants.HASH_TREE)) {
-                LinkedList<MsTestElement> elements = mapper.readValue(element.getJSONArray(ElementConstants.HASH_TREE).toString(), new TypeReference<LinkedList<MsTestElement>>() {
+                LinkedList<MsTestElement> elements = mapper.readValue(element.optJSONArray(ElementConstants.HASH_TREE).toString(), new TypeReference<LinkedList<MsTestElement>>() {
                 });
                 scenario.setHashTree(elements);
             }
@@ -76,7 +76,7 @@ public static LinkedList<MsTestElement> getScenarioHashTree(String definition) {
         try {
             if (element != null && element.has(ElementConstants.HASH_TREE)) {
                 ElementUtil.dataFormatting(element);
-                return objectMapper.readValue(element.getJSONArray(ElementConstants.HASH_TREE).toString(), new TypeReference<LinkedList<MsTestElement>>() {
+                return objectMapper.readValue(element.optJSONArray(ElementConstants.HASH_TREE).toString(), new TypeReference<LinkedList<MsTestElement>>() {
                 });
             }
         } catch (JsonProcessingException e) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -52,7 +52,7 @@ public Map<String, Map<String, String>> getEnvParamsDataByHashTree(HashTree hash
                         JSONObject commonConfig = configJson.optJSONObject(COMMON_CONFIG);
                         if (commonConfig.has(VARIABLES)) {
                             Map<String, String> envHeadMap = new HashMap<>();
-                            JSONArray variablesArr = commonConfig.getJSONArray(VARIABLES);
+                            JSONArray variablesArr = commonConfig.optJSONArray(VARIABLES);
                             for (int i = 0; i < variablesArr.length(); i++) {
                                 JSONObject object = variablesArr.optJSONObject(i);
                                 if (object.has(NAME) && object.has(VALUE)) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/XMLUtil.java
Patch:
@@ -47,7 +47,7 @@ private static void jsonToXmlStr(JSONObject jObj, StringBuffer buffer, StringBuf
                 jsonToXmlStr(jo, buffer, nowTab.append("\t"));
                 buffer.append(tab).append("</").append(en.getKey()).append(">\n");
             } else if (en.getValue() instanceof JSONArray) {
-                JSONArray array = jObj.getJSONArray(en.getKey());
+                JSONArray array = jObj.optJSONArray(en.getKey());
                 for (int i = 0; i < array.length(); i++) {
                     buffer.append(tab).append("<").append(en.getKey()).append(">\n");
                     if (StringUtils.isNotBlank(array.optString(i))) {

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReferenceIdService.java
Patch:
@@ -111,7 +111,7 @@ public List<ApiScenarioReferenceId> getApiAndScenarioRelation(ApiScenarioWithBLO
             if (!jsonObject.has(MsHashTreeService.HASH_TREE)) {
                 return returnList;
             }
-            JSONArray hashTree = jsonObject.getJSONArray(MsHashTreeService.HASH_TREE);
+            JSONArray hashTree = jsonObject.optJSONArray(MsHashTreeService.HASH_TREE);
             for (int index = 0; index < hashTree.length(); index++) {
                 JSONObject item = hashTree.optJSONObject(index);
                 if (item == null) {
@@ -140,7 +140,7 @@ public List<ApiScenarioReferenceId> getApiAndScenarioRelation(ApiScenarioWithBLO
                     returnList.add(saveItem);
                 }
                 if (item.has(MsHashTreeService.HASH_TREE)) {
-                    returnList.addAll(this.deepElementRelation(scenario.getId(), item.getJSONArray(MsHashTreeService.HASH_TREE)));
+                    returnList.addAll(this.deepElementRelation(scenario.getId(), item.optJSONArray(MsHashTreeService.HASH_TREE)));
                 }
             }
         }
@@ -191,7 +191,7 @@ public List<ApiScenarioReferenceId> deepElementRelation(String scenarioId, JSONA
                     deepRelations.add(saveItem);
                 }
                 if (item.has(MsHashTreeService.HASH_TREE)) {
-                    deepRelations.addAll(this.deepElementRelation(scenarioId, item.getJSONArray(MsHashTreeService.HASH_TREE)));
+                    deepRelations.addAll(this.deepElementRelation(scenarioId, item.optJSONArray(MsHashTreeService.HASH_TREE)));
                 }
             }
         }

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportStructureService.java
Patch:
@@ -185,7 +185,7 @@ public static StepTreeDTO dataFormatting(String id, String name, String scenario
             StepTreeDTO dto = new StepTreeDTO(name, resourceId, element.optString(TYPE), resourceId, 1);
             dto.setAllIndex(null);
             if (element.has(HASH_TREE) && !REQUESTS.contains(dto.getType())) {
-                JSONArray elementJSONArray = element.getJSONArray(HASH_TREE);
+                JSONArray elementJSONArray = element.optJSONArray(HASH_TREE);
                 dataFormatting(elementJSONArray, dto, id, reportType);
             }
             return dto;
@@ -221,7 +221,7 @@ public static void dataFormatting(JSONArray hashTree, StepTreeDTO dto, String id
                 }
                 dto.getChildren().add(children);
                 if (element.has(HASH_TREE) && !REQUESTS.contains(children.getType())) {
-                    JSONArray elementJSONArray = element.getJSONArray(HASH_TREE);
+                    JSONArray elementJSONArray = element.optJSONArray(HASH_TREE);
                     dataFormatting(elementJSONArray, children, id, reportType);
                 }
             }

File: framework/gateway/src/main/java/io/metersphere/gateway/filter/SessionFilter.java
Patch:
@@ -18,7 +18,7 @@
 public class SessionFilter implements WebFilter {
     // 所有模块的前缀
     private static final String[] PREFIX = new String[]{"/setting", "/project", "/api", "/performance", "/track", "/workstation", "/ui", "/report"};
-    private static final String[] TO_SUB_SERVICE = new String[]{"/license", "/system"};
+    private static final String[] TO_SUB_SERVICE = new String[]{"/license", "/system", "/resource"};
     private static final String PERFORMANCE_DOWNLOAD_PREFIX = "/jmeter/";
     private static final String API_DOWNLOAD_PREFIX = "/api/jmeter/";
 

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -17,6 +17,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
         filterChainDefinitionMap.put("/resource/md/get/**", "anon");
         filterChainDefinitionMap.put("/resource/ui/get/**", "anon");
+        filterChainDefinitionMap.put("/attachment/preview/**", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/signin", "anon");
         filterChainDefinitionMap.put("/ldap/signin", "anon");
@@ -90,8 +91,6 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {
         filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
         filterChainDefinitionMap.put("/language", "apikey, authc");// 跳转到 /language 不用校验 csrf
-        filterChainDefinitionMap.put("/test/case/file/preview/**", "apikey, authc"); // 预览测试用例附件 不用校验 csrf
-        filterChainDefinitionMap.put("/attachment/preview/**", "apikey, authc"); // 预览缺陷及测试用例附件 不用校验 csrf
         filterChainDefinitionMap.put("/mock", "apikey, authc"); // 跳转到 /mock接口 不用校验 csrf
     }
 

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -459,6 +459,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         scenario.setUpdateTime(System.currentTimeMillis());
         scenario.setDescription(request.getDescription());
         scenario.setCreateUser(SessionUtils.getUserId());
+        request.getScenarioDefinition().setId(scenario.getId());
         scenario.setScenarioDefinition(JSON.toJSONString(request.getScenarioDefinition()));
         Boolean isValidEnum = EnumUtils.isValidEnum(EnvironmentType.class, request.getEnvironmentType());
         if (BooleanUtils.isTrue(isValidEnum)) {

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiTestCaseController.java
Patch:
@@ -261,7 +261,7 @@ public List<ApiScenario> getScenarioCaseByIds(@RequestBody List<String> ids) {
      * @param request
      * @return
      */
-    @PostMapping("/export/test/case/jmx")
+    @PostMapping("/export/jmx")
     public List<JmxInfoDTO> getScenarioCaseByIds(@RequestBody ApiCaseExportJmxRequest request) {
         return apiTestCaseService.exportJmx(request.getCaseIds(), request.getEnvId());
     }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/constants/ParamConstants.java
Patch:
@@ -113,6 +113,7 @@ public String getValue() {
     enum BASE implements ParamConstants {
         URL("base.url"),
         CONCURRENCY("base.concurrency"),
+        GRID_CONCURRENCY("base.grid.concurrency"),
         PROMETHEUS_HOST("base.prometheus.host"),
         SELENIUM_DOCKER_URL("base.selenium.docker.url");
 

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -2258,7 +2258,6 @@ private void changeOrder(TestCaseMinderEditRequest.TestCaseMinderEditItem item,
     public List<TestCase> getTestCaseByProjectId(String projectId) {
         TestCaseExample example = new TestCaseExample();
         example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andLatestEqualTo(true);
-        example.or().andProjectIdEqualTo(projectId).andStatusIsNull().andLatestEqualTo(true);
         return testCaseMapper.selectByExample(example);
     }
 

File: test-track/backend/src/main/java/io/metersphere/controller/IssueProxyResourceController.java
Patch:
@@ -16,7 +16,8 @@ public class IssueProxyResourceController {
     IssueProxyResourceService issueProxyResourceService;
 
     @GetMapping(value = "/md/get/url")
-    public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url, @RequestParam (value = "platform", required = false) String platform) {
-        return issueProxyResourceService.getMdImageByUrl(url, platform);
+    public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url, @RequestParam (value = "platform", required = false) String platform,
+                                               @RequestParam ("project_id") String projectId, @RequestParam ("workspace_id") String workspaceId) {
+        return issueProxyResourceService.getMdImageByUrl(url, platform, projectId, workspaceId);
     }
 }

File: test-track/backend/src/main/java/io/metersphere/service/wapper/IssueProxyResourceService.java
Patch:
@@ -29,14 +29,14 @@ public class IssueProxyResourceService {
      * @param platform
      * @return
      */
-    public ResponseEntity<byte[]> getMdImageByUrl(String url, String platform) {
+    public ResponseEntity<byte[]> getMdImageByUrl(String url, String platform, String projectId, String workspaceId) {
         if (url.contains("md/get/url")) {
             MSException.throwException(Translator.get("invalid_parameter"));
         }
         if (StringUtils.isNotBlank(platform)) {
             IssuesRequest issuesRequest = new IssuesRequest();
-            issuesRequest.setProjectId(SessionUtils.getCurrentProjectId());
-            issuesRequest.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
+            issuesRequest.setProjectId(projectId);
+            issuesRequest.setWorkspaceId(workspaceId);
             return IssueFactory.createPlatform(platform, issuesRequest)
                     .proxyForGet(url, byte[].class);
         }

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/JmeterDefinitionParser.java
Patch:
@@ -581,6 +581,7 @@ private void convertTCPSampler(MsTCPSampler msTCPSampler, TCPSampler tcpSampler)
         msTCPSampler.setServer(tcpSampler.getServer());
         msTCPSampler.setPort(tcpSampler.getPort() + "");
         msTCPSampler.setCtimeout(tcpSampler.getConnectTimeout() + "");
+        msTCPSampler.setClassname(tcpSampler.getProperty(TCPSampler.CLASSNAME).getStringValue());
         msTCPSampler.setReUseConnection(tcpSampler.getProperty(TCPSampler.RE_USE_CONNECTION).getBooleanValue());
         msTCPSampler.setNodelay(tcpSampler.getProperty(TCPSampler.NODELAY).getBooleanValue());
         msTCPSampler.setCloseConnection(tcpSampler.isCloseConnection());

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/TCPConfig.java
Patch:
@@ -6,7 +6,7 @@
 public class TCPConfig {
     private String classname = "";
     private String server = "";
-    private String port = "";
+    private int port = 0;
     private String ctimeout = "";
     private String timeout = "";
     private boolean reUseConnection = true;

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioEnvService.java
Patch:
@@ -175,7 +175,7 @@ public void setScenarioEnv(ApiScenarioWithBLOBs apiScenarioWithBLOBs, RunScenari
         String definition = apiScenarioWithBLOBs.getScenarioDefinition();
         MsScenario scenario = JSON.parseObject(definition, MsScenario.class);
         GenerateHashTreeUtil.parse(definition, scenario);
-        if (StringUtils.equals(environmentType, EnvironmentType.JSON.toString())) {
+        if (StringUtils.equals(environmentType, EnvironmentType.JSON.toString()) && StringUtils.isNotEmpty(environmentJson)) {
             scenario.setEnvironmentMap(JSON.parseObject(environmentJson, Map.class));
         } else if (StringUtils.equals(environmentType, EnvironmentType.GROUP.toString())) {
             Map<String, String> map = environmentGroupProjectService.getEnvMap(environmentGroupId);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -448,7 +448,7 @@ public static void dataSetDomain(JSONArray hashTree, MsParameter msParameter) {
                                 ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(finalEnvironmentMap.get(projectId));
                                 if (environment != null && environment.getConfig() != null) {
                                     EnvironmentConfig env = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-                                    env.setApiEnvironmentid(environment.getId());
+                                    env.setEnvironmentId(environment.getId());
                                     envConfig.put(projectId, env);
                                 }
                             });

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -243,7 +243,7 @@ private void setNewConfig(Map<String, EnvironmentConfig> envConfig, ParameterCon
                     ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(this.environmentMap.get(projectId));
                     if (environment != null && environment.getConfig() != null) {
                         EnvironmentConfig env = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-                        env.setApiEnvironmentid(environment.getId());
+                        env.setEnvironmentId(environment.getId());
                         envConfig.put(projectId, env);
                         if (StringUtils.equals(environment.getName(), MockConfigStaticData.MOCK_EVN_NAME)) {
                             this.setMockEnvironment(true);
@@ -261,7 +261,7 @@ private void setEnv(Map<String, String> environmentMap, Map<String, EnvironmentC
             ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(environmentMap.get(projectId));
             if (environment != null && StringUtils.isNotEmpty(environment.getConfig())) {
                 EnvironmentConfig env = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-                env.setApiEnvironmentid(environment.getId());
+                env.setEnvironmentId(environment.getId());
                 envConfig.put(projectId, env);
                 if (StringUtils.equals(environment.getName(), MockConfigStaticData.MOCK_EVN_NAME)) {
                     this.setMockEnvironment(true);

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -36,13 +36,13 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (StringUtils.isEmpty(this.getEnvironmentId())) {
             if (config.getConfig() != null) {
                 if (config.getProjectId() != null) {
-                    String evnId = config.getConfig().get(config.getProjectId()).getApiEnvironmentid();
+                    String evnId = config.getConfig().get(config.getProjectId()).getEnvironmentId();
                     this.setEnvironmentId(evnId);
                 } else {
                     Collection<EnvironmentConfig> evnConfigList = config.getConfig().values();
                     if (evnConfigList != null && !evnConfigList.isEmpty()) {
                         for (EnvironmentConfig configItem : evnConfigList) {
-                            String evnId = configItem.getApiEnvironmentid();
+                            String evnId = configItem.getEnvironmentId();
                             this.setEnvironmentId(evnId);
                             break;
                         }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -118,8 +118,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             if (config.isEffective(this.getProjectId()) && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())
                     && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())) {
                 EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())) {
-                    this.environmentId = environmentConfig.getApiEnvironmentid();
+                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getEnvironmentId())) {
+                    this.environmentId = environmentConfig.getEnvironmentId();
                 }
                 this.initDataSource();
             } else {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -34,13 +34,13 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (StringUtils.isEmpty(this.getEnvironmentId())) {
             if (config.getConfig() != null) {
                 if (config.getProjectId() != null && config.getConfig().containsKey(config.getProjectId())) {
-                    String evnId = config.getConfig().get(config.getProjectId()).getApiEnvironmentid();
+                    String evnId = config.getConfig().get(config.getProjectId()).getEnvironmentId();
                     this.setEnvironmentId(evnId);
                 } else {
                     Collection<EnvironmentConfig> evnConfigList = config.getConfig().values();
                     if (evnConfigList != null && !evnConfigList.isEmpty()) {
                         for (EnvironmentConfig configItem : evnConfigList) {
-                            String evnId = configItem.getApiEnvironmentid();
+                            String evnId = configItem.getEnvironmentId();
                             this.setEnvironmentId(evnId);
                             break;
                         }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -107,8 +107,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             if (config.isEffective(this.getProjectId()) && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())
                     && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())) {
                 EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())) {
-                    this.environmentId = environmentConfig.getApiEnvironmentid();
+                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getEnvironmentId())) {
+                    this.environmentId = environmentConfig.getEnvironmentId();
                 }
                 this.initDataSource();
             } else {

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -39,13 +39,13 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (StringUtils.isEmpty(this.getEnvironmentId())) {
             if (config.getConfig() != null) {
                 if (config.getProjectId() != null) {
-                    String evnId = config.getConfig().get(config.getProjectId()).getApiEnvironmentid();
+                    String evnId = config.getConfig().get(config.getProjectId()).getEnvironmentId();
                     this.setEnvironmentId(evnId);
                 } else {
                     Collection<EnvironmentConfig> evnConfigList = config.getConfig().values();
                     if (evnConfigList != null && !evnConfigList.isEmpty()) {
                         for (EnvironmentConfig configItem : evnConfigList) {
-                            String evnId = configItem.getApiEnvironmentid();
+                            String evnId = configItem.getEnvironmentId();
                             this.setEnvironmentId(evnId);
                             break;
                         }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -110,7 +110,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         String environmentId = this.getEnvironmentId();
         if (environmentId == null) {
             if (StringUtils.isEmpty(this.useEnvironment) && envConfig != null) {
-                environmentId = envConfig.getApiEnvironmentid();
+                environmentId = envConfig.getEnvironmentId();
             } else {
                 environmentId = this.useEnvironment;
             }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -115,8 +115,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             if (config.isEffective(this.getProjectId()) && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())
                     && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs())) {
                 EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())) {
-                    this.environmentId = environmentConfig.getApiEnvironmentid();
+                if (environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getEnvironmentId())) {
+                    this.environmentId = environmentConfig.getEnvironmentId();
                 }
                 this.dataSource = null;
                 envConfig = this.initDataSource();

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvironmentConfig.java
Patch:
@@ -15,7 +15,7 @@
 
 @Data
 public class EnvironmentConfig {
-    private String apiEnvironmentid;
+    private String environmentId;
     private CommonConfig commonConfig;
     private HttpConfig httpConfig;
     private List<DatabaseConfig> databaseConfigs;

File: api-test/backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -179,7 +179,7 @@ private JmeterRunRequestDTO initRunRequest(RunDefinitionRequest request, List<Mu
                 ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(map.get(key));
                 if (environment != null) {
                     EnvironmentConfig env = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-                    env.setApiEnvironmentid(environment.getId());
+                    env.setEnvironmentId(environment.getId());
                     envConfig.put(key, env);
                 }
             }
@@ -268,7 +268,7 @@ public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs te
         Map<String, EnvironmentConfig> envConfig = new HashMap<>(16);
         if (environment != null && environment.getConfig() != null) {
             EnvironmentConfig environmentConfig = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-            environmentConfig.setApiEnvironmentid(environment.getId());
+            environmentConfig.setEnvironmentId(environment.getId());
             envConfig.put(testCaseWithBLOBs.getProjectId(), environmentConfig);
             parameterConfig.setConfig(envConfig);
         }

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioEnvService.java
Patch:
@@ -437,7 +437,7 @@ public void setEnvConfig(Map<String, String> environmentMap, ParameterConfig con
                 ApiTestEnvironmentWithBLOBs environment = apiTestEnvironmentService.get(environmentMap.get(projectId));
                 if (environment != null && environment.getConfig() != null) {
                     EnvironmentConfig env = JSONUtil.parseObject(environment.getConfig(), EnvironmentConfig.class);
-                    env.setApiEnvironmentid(environment.getId());
+                    env.setEnvironmentId(environment.getId());
                     envConfig.put(projectId, env);
                 }
             });

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvironmentConfig.java
Patch:
@@ -9,7 +9,6 @@
 import io.metersphere.api.dto.scenario.TCPConfig;
 import io.metersphere.environment.ssl.KeyStoreConfig;
 import lombok.Data;
-import org.codehaus.jackson.node.ObjectNode;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -31,7 +30,7 @@ public class EnvironmentConfig {
     private MsJSR223Processor postStepProcessor;
     //全局前后置脚本都配置
     private GlobalScriptConfig globalScriptConfig;
-    private ObjectNode authManager;
+    private EnvAuthManager authManager;
     private List<MsAssertions> assertions;
     private boolean useErrorCode;
     private boolean higherThanSuccess;

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/environment/controller/TestEnvironmentController.java
Patch:
@@ -115,7 +115,7 @@ public void delete(@PathVariable String id) {
     }
 
 
-    @GetMapping("/map/{groupId}")
+    @GetMapping("/group/map/{groupId}")
     public Map<String, String> getEnvMap(@PathVariable String groupId) {
         return baseEnvGroupProjectService.getEnvMap(groupId);
     }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -5,14 +5,14 @@
 import io.metersphere.api.dto.definition.request.assertions.MsAssertionRegex;
 import io.metersphere.api.dto.definition.request.assertions.MsAssertions;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
-import io.metersphere.service.ExtErrorReportLibraryService;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
 import io.metersphere.commons.constants.StorageConstants;
 import io.metersphere.dto.FileInfoDTO;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.environment.service.BaseEnvironmentService;
 import io.metersphere.metadata.service.FileMetadataService;
 import io.metersphere.request.BodyFile;
+import io.metersphere.service.ExtErrorReportLibraryService;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.extractor.JSR223PostProcessor;
@@ -236,7 +236,7 @@ public static void initRepositoryFiles(JmeterRunRequestDTO runRequest) {
         if (CollectionUtils.isNotEmpty(files)) {
             Map<String, String> repositoryFileMap = new HashMap<>();
             for (BodyFile bodyFile : files) {
-                if (StringUtils.equals(bodyFile.getStorage(), StorageConstants.GIT.name())
+                if (!StringUtils.equals(bodyFile.getStorage(), StorageConstants.LOCAL.name())
                         && StringUtils.isNotBlank(bodyFile.getFileId())) {
                     repositoryFileMap.put(bodyFile.getFileId(), bodyFile.getName());
                 }

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -2131,7 +2131,7 @@ public String setAuthParams(ScheduleRequest request) {
         if (request.getAuthManager() != null && StringUtils.isNotBlank(request.getAuthManager().getUsername()) && StringUtils.isNotBlank(request.getAuthManager().getPassword())) {
             configObj.put("authManager", request.getAuthManager());
         }
-        return JSON.toJSONString(configObj);
+        return configObj.toString();
     }
 
     /**
@@ -2325,7 +2325,7 @@ public String getLogDetails(String id) {
                     map.put(PropertyConstant.TYPE, "ESB");
                 }
                 request.remove("backEsbDataStruct");
-                bloBs.setRequest(JSON.toJSONString(request));
+                bloBs.setRequest(request.toString());
                 String response = JSON.toJSONString(map);
                 bloBs.setResponse(response);
             }

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -796,7 +796,7 @@ public String setDomain(ApiScenarioEnvRequest request) {
             if (config.getConfig() != null && !config.getConfig().isEmpty()) {
                 ElementUtil.dataSetDomain(element.getJSONArray(ElementConstants.HASH_TREE), config);
             }
-            return JSON.toJSONString(element);
+            return element.toString();
         } catch (Exception e) {
             return scenarioDefinition;
         }
@@ -1160,7 +1160,7 @@ public void bathEditEnv(ApiScenarioBatchRequest request) {
                 JSONObject object = JSONUtil.parseObject(item.getScenarioDefinition());
                 object.put("environmentId", request.getEnvironmentId());
                 if (object != null) {
-                    item.setScenarioDefinition(JSON.toJSONString(object));
+                    item.setScenarioDefinition(object.toString());
                 }
                 apiScenarioMapper.updateByPrimaryKeySelective(item);
                 apiScenarioReferenceIdService.saveApiAndScenarioRelation(item);

File: test-track/backend/src/main/java/io/metersphere/controller/remote/TrackApiTestController.java
Patch:
@@ -20,7 +20,8 @@
         "/api/project",
         "/test/case/relevance/api",
         "/test/case/relevance/scenario",
-        "home"
+        "/share/api/definition",
+        "/home"
 })
 public class TrackApiTestController {
     @Resource

File: api-test/backend/src/main/java/io/metersphere/commons/utils/JSONUtil.java
Patch:
@@ -85,6 +85,8 @@ private static <T> T parseObject(Class<T> clazz, JSONObject jsonObject) {
                                 typeObj = Integer.class.getConstructor(int.class).newInstance(10);
                             } else if (StringUtils.containsIgnoreCase(typeClazz.getSimpleName(), "Map")) {
                                 typeObj = LinkedHashMap.class.getConstructor().newInstance();
+                            } else if (StringUtils.containsIgnoreCase(typeClazz.getSimpleName(), PropertyConstant.BOOLEAN)) {
+                                typeObj = Boolean.class.getConstructor(boolean.class).newInstance(false);
                             } else {
                                 typeObj = typeClazz.getDeclaredConstructor().newInstance();
                             }

File: project-management/backend/src/main/java/io/metersphere/service/ProjectApplicationService.java
Patch:
@@ -274,7 +274,7 @@ public void createOrUpdateConfig(ProjectApplication conf) {
 
         if (StringUtils.equals(type, ProjectApplicationType.MOCK_TCP_PORT.name())) {
             //检查Mock环境是否需要同步更新
-            microService.getForData(MicroServiceName.API_TEST, "/api/definition/getMockEnvironment/" + projectId);
+            microService.getForData(MicroServiceName.API_TEST, "/api/definition/mock-environment/" + projectId);
         } else if (StringUtils.equals(type, ProjectApplicationType.MOCK_TCP_OPEN.name())) {
             this.doHandleMockTcpStatus(projectId, value);
         }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/dto/FileInfoDTO.java
Patch:
@@ -9,5 +9,6 @@ public class FileInfoDTO {
     private String id;
     private String fileName;
     private String storage;
+    private String path;
     private byte[] fileByte;
 }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/repository/MinIOFileRepository.java
Patch:
@@ -85,7 +85,7 @@ public List<FileInfoDTO> getFileBatch(List<FileRequest> requestList) throws Exce
         List<FileInfoDTO> list = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(requestList)) {
             for (FileRequest fileRequest : requestList) {
-                FileInfoDTO fileInfoDTO = new FileInfoDTO(fileRequest.getResourceId(), fileRequest.getFileName(), fileRequest.getStorage(), this.getFile(fileRequest));
+                FileInfoDTO fileInfoDTO = new FileInfoDTO(fileRequest.getResourceId(), fileRequest.getFileName(), fileRequest.getStorage(), fileRequest.getPath(), this.getFile(fileRequest));
                 list.add(fileInfoDTO);
             }
         }

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/metadata/service/FileManagerService.java
Patch:
@@ -103,7 +103,7 @@ public List<FileInfoDTO> downloadFileBatch(List<FileRequest> requestList) {
                 try {
                     list.addAll(FileCenter.getRepository(requestByStorageEntry.getKey()).getFileBatch(requestByStorageEntry.getValue()));
                 } catch (Exception e) {
-                    LogUtil.error("下载GIT文件失败!", e);
+                    LogUtil.error("下载文件失败!", e);
                     return list;
                 }
             }

File: api-test/backend/src/main/java/io/metersphere/api/exec/engine/EngineFactory.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.exec.engine;
 
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.engine.Engine;
 import org.springframework.stereotype.Service;
@@ -9,6 +10,7 @@
 @Transactional(rollbackFor = Exception.class)
 public class EngineFactory {
     public static Engine createApiEngine(JmeterRunRequestDTO runRequest) {
+        LogUtil.info("创建K8s client");
         return new KubernetesTestEngine(runRequest);
     }
 }

File: api-test/backend/src/main/java/io/metersphere/api/exec/engine/KubernetesTestEngine.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.TestResource;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.JSON;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.utils.LoggerUtil;
 import io.metersphere.xpack.resourcepool.engine.provider.ClientCredential;
@@ -35,6 +36,7 @@ public KubernetesTestEngine(JmeterRunRequestDTO runRequest) {
 
     @Override
     public void start() {
+        LogUtil.info("k8s 执行开始", resourceList.size());
         resourceList.forEach(r -> {
             runApi(r);
         });

File: api-test/backend/src/main/java/io/metersphere/api/exec/generator/JSONSchemaGenerator.java
Patch:
@@ -80,7 +80,7 @@ private static void analyzeProperty(JSONObject concept, String propertyName, Jso
                 }
             }
             if (object.has(PropertyConstant.DEFAULT)) {
-                concept.put(propertyName, object.get(PropertyConstant.DEFAULT));
+                concept.put(propertyName, object.get(PropertyConstant.DEFAULT).getAsString());
             } else if (object.has(PropertyConstant.ENUM)) {
                 try {
                     if (object.has(PropertyConstant.MOCK) && object.get(PropertyConstant.MOCK).getAsJsonObject() != null && StringUtils.isNotEmpty(object.get(PropertyConstant.MOCK).getAsJsonObject().get(PropertyConstant.MOCK).getAsString())) {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -73,6 +73,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/system/theme", "anon");
         filterChainDefinitionMap.put("/system/save/baseurl/**", "anon");
         filterChainDefinitionMap.put("/system/timeout", "anon");
+        filterChainDefinitionMap.put("/file/metadata/info/**", "anon");
 
         filterChainDefinitionMap.put("/v1/catalog/**", "anon");
         filterChainDefinitionMap.put("/v1/agent/**", "anon");

File: api-test/backend/src/main/java/io/metersphere/controller/plan/TestPlanScenarioCaseController.java
Patch:
@@ -175,7 +175,7 @@ public Map<String, List<String>> getApiCaseEnv(@PathVariable("planId") String pl
         return testPlanScenarioCaseService.getApiScenarioEnv(planId);
     }
 
-    @GetMapping("/plan/report")
+    @PostMapping("/plan/report")
     public ApiPlanReportDTO buildApiReport(@RequestBody ApiPlanReportRequest request) {
         return testPlanScenarioCaseService.buildApiReport(request);
     }

File: api-test/backend/src/main/java/io/metersphere/service/plan/TestPlanScenarioCaseService.java
Patch:
@@ -863,7 +863,7 @@ public void buildApiResponse(List<TestPlanFailureApiDTO> cases) {
                             if (StringUtils.isNotEmpty(contentStr)) {
                                 content.put("envName", apiDefinitionService.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig()));
                             }
-                            contentStr = content.toString();
+                            contentStr = JSON.toJSONString(content);
                             apiCase.setResponse(contentStr);
                         } catch (Exception e) {
                             LogUtil.error("解析content失败!", e);

File: performance-test/backend/src/main/java/io/metersphere/plan/controller/TestPlanLoadCaseController.java
Patch:
@@ -154,7 +154,7 @@ public void getStatusByTestPlanId(@PathVariable("sourcePlanId") String sourcePla
         testPlanLoadCaseService.copyPlan(sourcePlanId, targetPlanId);
     }
 
-    @GetMapping("/plan/report")
+    @PostMapping("/plan/report")
     public LoadPlanReportDTO buildApiReport(@RequestBody PlanSubReportRequest request) {
         return testPlanLoadCaseService.buildLoadReport(request);
     }

File: api-test/backend/src/main/java/io/metersphere/api/dto/definition/request/variable/JsonSchemaItem.java
Patch:
@@ -4,6 +4,7 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.math.BigDecimal;
 import java.util.LinkedHashMap;
 import java.util.LinkedList;
 import java.util.List;
@@ -24,6 +25,8 @@ public class JsonSchemaItem {
     private String pattern;
     private Integer maxLength;
     private Integer minLength;
+    private BigDecimal minimum;
+    private BigDecimal maximum;
     private String schema;
 
     public JsonSchemaItem() {

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/environment/controller/TestEnvironmentController.java
Patch:
@@ -84,7 +84,8 @@ public void update(@RequestPart("request") TestEnvironmentDTO apiTestEnvironment
 
     private void checkParams(TestEnvironmentDTO apiTestEnvironment) {
         try {
-            JSONObject json = new JSONObject(JSON.parseObject(apiTestEnvironment.getConfig()));
+           Map<Object,Object> map = JSON.parseObject(apiTestEnvironment.getConfig(),Map.class);
+            JSONObject json = new JSONObject(map);
             JSONObject commonConfig = json.getJSONObject("commonConfig");
             JSONArray databaseConfigs = json.getJSONArray("databaseConfigs");
 

File: performance-test/backend/src/main/java/io/metersphere/engine/KubernetesTestEngine.java
Patch:
@@ -88,7 +88,7 @@ private void runTest(TestResource resource, Object[] ratios, int resourceIndex)
         ClientCredential clientCredential = JSON.parseObject(resource.getConfiguration(), ClientCredential.class);
 
         try {
-            KubernetesProvider kubernetesProvider = ConstructorUtils.invokeConstructor(providerClass, loadTestReport);
+            KubernetesProvider kubernetesProvider = ConstructorUtils.invokeConstructor(providerClass, clientCredential);
             kubernetesProvider.deployJmeter(request, clientCredential);
         } catch (Exception e) {
             LogUtil.error(e);
@@ -102,7 +102,7 @@ public void stop() {
         resourceList.forEach(r -> {
             ClientCredential clientCredential = JSON.parseObject(r.getConfiguration(), ClientCredential.class);
             try {
-                KubernetesProvider kubernetesProvider = ConstructorUtils.invokeConstructor(providerClass, loadTestReport);
+                KubernetesProvider kubernetesProvider = ConstructorUtils.invokeConstructor(providerClass, clientCredential);
                 kubernetesProvider.deleteJmeter(testId, clientCredential.getNamespace());
             } catch (Exception e) {
                 LogUtil.error(e);

File: framework/sdk-parent/xpack-interface/src/main/java/io/metersphere/xpack/resourcepool/engine/provider/KubernetesProvider.java
Patch:
@@ -1,9 +1,11 @@
 package io.metersphere.xpack.resourcepool.engine.provider;
 
+import io.fabric8.kubernetes.client.KubernetesClient;
 import io.metersphere.engine.request.StartTestRequest;
 
 public interface KubernetesProvider {
     void deployJmeter(StartTestRequest request, ClientCredential clientCredential);
 
     void deleteJmeter(String testId, String namespace);
+    KubernetesClient getClient();
 }

File: api-test/backend/src/main/java/io/metersphere/service/remote/CustomFunctionService.java
Patch:
@@ -19,6 +19,6 @@ public Object get(String requestURI) {
     }
 
     public Object getPage(String requestURI, CustomFunctionRequest params) {
-        return microService.postForDataArray(MicroServiceName.PROJECT_MANAGEMENT, requestURI, params, CustomFunction.class);
+        return microService.postForData(MicroServiceName.PROJECT_MANAGEMENT, requestURI, params);
     }
 }

File: api-test/backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvironmentConfig.java
Patch:
@@ -9,7 +9,7 @@
 import io.metersphere.api.dto.scenario.TCPConfig;
 import io.metersphere.environment.ssl.KeyStoreConfig;
 import lombok.Data;
-import org.json.JSONObject;
+import org.codehaus.jackson.node.ObjectNode;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -31,7 +31,7 @@ public class EnvironmentConfig {
     private MsJSR223Processor postStepProcessor;
     //全局前后置脚本都配置
     private GlobalScriptConfig globalScriptConfig;
-    private JSONObject authManager;
+    private ObjectNode authManager;
     private List<MsAssertions> assertions;
     private boolean useErrorCode;
     private boolean higherThanSuccess;

File: api-test/backend/src/main/java/io/metersphere/api/exec/engine/AbstractEngine.java
Patch:
@@ -158,8 +158,8 @@ private Integer getThreadNum(LoadTestReportWithBLOBs t) {
             if (jsonArray.get(i) instanceof List) {
                 JSONArray o = jsonArray.getJSONArray(i);
                 for (int j = 0; j < o.length(); j++) {
-                    if (StringUtils.equals(o.getJSONObject(j).optString("key"), "TargetLevel")) {
-                        s += o.getJSONObject(j).optInt("value");
+                    if (StringUtils.equals(o.optJSONObject(j).optString("key"), "TargetLevel")) {
+                        s += o.optJSONObject(j).optInt("value");
                         break;
                     }
                 }

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiEnvironmentRunningParamService.java
Patch:
@@ -41,7 +41,7 @@ public void addParam(String environmentId, Map<String, String> varMap) {
         try {
             JSONObject configObj = JSONUtil.parseObject(environment.getConfig());
             if (configObj.has("commonConfig")) {
-                JSONObject commonConfig = configObj.getJSONObject("commonConfig");
+                JSONObject commonConfig = configObj.optJSONObject("commonConfig");
                 if (commonConfig.has("variables")) {
                     JSONArray variables = commonConfig.getJSONArray("variables");
                     List<JSONObject> variableList = new LinkedList<>();
@@ -51,7 +51,7 @@ public void addParam(String environmentId, Map<String, String> varMap) {
 
                         boolean contains = false;
                         for (int i = 0; i < variables.length(); i++) {
-                            JSONObject jsonObj = variables.getJSONObject(i);
+                            JSONObject jsonObj = variables.optJSONObject(i);
                             if (jsonObj.has("name") && StringUtils.equals(jsonObj.optString("name"), key)) {
                                 contains = true;
                                 if (jsonObj.has("value") && StringUtils.equals(jsonObj.optString("value"), value)) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/HarScenarioAbstractParser.java
Patch:
@@ -221,9 +221,9 @@ private String parseXmlBody(String xmlString) {
     private void parseRawBody(Body body, JSONObject postmanBody, String bodyMode) {
         body.setRaw(postmanBody.optString(bodyMode));
         body.setType(MsRequestBodyType.RAW.value());
-        JSONObject options = postmanBody.getJSONObject("options");
+        JSONObject options = postmanBody.optJSONObject("options");
         if (options != null) {
-            JSONObject raw = options.getJSONObject(PostmanRequestBodyMode.RAW.value());
+            JSONObject raw = options.optJSONObject(PostmanRequestBodyMode.RAW.value());
             if (raw != null) {
                 String bodyType = "";
                 switch (raw.optString("language")) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -159,9 +159,9 @@ private void parseBody(Body body, PostmanRequest requestDesc) {
     private void parseRawBody(Body body, JSONObject postmanBody, String bodyMode) {
         body.setRaw(parseVariable(postmanBody.optString(bodyMode)));
         body.setType(MsRequestBodyType.RAW.value());
-        JSONObject options = postmanBody.getJSONObject("options");
+        JSONObject options = postmanBody.optJSONObject("options");
         if (options != null) {
-            JSONObject raw = options.getJSONObject(PostmanRequestBodyMode.RAW.value());
+            JSONObject raw = options.optJSONObject(PostmanRequestBodyMode.RAW.value());
             if (raw != null) {
                 String bodyType = "";
                 switch (raw.optString("language")) {

File: api-test/backend/src/main/java/io/metersphere/api/parse/scenario/MsScenarioParser.java
Patch:
@@ -63,7 +63,7 @@ private ScenarioImport parseMsFormat(String testStr, ApiTestImportRequest import
                 if (StringUtils.isNotBlank(scenarioDefinitionStr)) {
                     JSONObject scenarioDefinition = JSONUtil.parseObject(scenarioDefinitionStr);
                     if (scenarioDefinition != null) {
-                        JSONObject environmentMap = scenarioDefinition.getJSONObject("environmentMap");
+                        JSONObject environmentMap = scenarioDefinition.optJSONObject("environmentMap");
                         if (environmentMap != null) {
                             scenarioDefinition.put("environmentMap", new HashMap<>());
                         }

File: api-test/backend/src/main/java/io/metersphere/api/tcp/server/TCPService.java
Patch:
@@ -58,14 +58,14 @@ private String getReturnMsg(String message) {
                 LogUtil.error(e);
             }
             if (responseObj.has("responseResult")) {
-                JSONObject respResultObj = responseObj.getJSONObject("responseResult");
+                JSONObject respResultObj = responseObj.optJSONObject("responseResult");
                 if (respResultObj.has("body")) {
                     MockApiUtils mockApiUtils = new MockApiUtils();
                     boolean useScript = false;
                     if (respResultObj.has("usePostScript")) {
                         useScript = respResultObj.getBoolean("usePostScript");
                     }
-                    returnMsg = mockApiUtils.getResultByResponseResult(matchdMockExpectDTO.getProjectId(), respResultObj.getJSONObject("body"), "", null, null, useScript);
+                    returnMsg = mockApiUtils.getResultByResponseResult(matchdMockExpectDTO.getProjectId(), respResultObj.optJSONObject("body"), "", null, null, useScript);
                 }
                 try {
                     if (respResultObj.has("delayed")) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -49,12 +49,12 @@ public Map<String, Map<String, String>> getEnvParamsDataByHashTree(HashTree hash
                 try {
                     JSONObject configJson = JSONUtil.parseObject(environment.getConfig());
                     if (configJson.has(COMMON_CONFIG)) {
-                        JSONObject commonConfig = configJson.getJSONObject(COMMON_CONFIG);
+                        JSONObject commonConfig = configJson.optJSONObject(COMMON_CONFIG);
                         if (commonConfig.has(VARIABLES)) {
                             Map<String, String> envHeadMap = new HashMap<>();
                             JSONArray variablesArr = commonConfig.getJSONArray(VARIABLES);
                             for (int i = 0; i < variablesArr.length(); i++) {
-                                JSONObject object = variablesArr.getJSONObject(i);
+                                JSONObject object = variablesArr.optJSONObject(i);
                                 if (object.has(NAME) && object.has(VALUE)) {
                                     boolean isEnable = true;
                                     if (object.has(ENABLE)) {

File: api-test/backend/src/main/java/io/metersphere/commons/utils/JsonStructUtils.java
Patch:
@@ -122,7 +122,7 @@ public static boolean checkJsonArrayCompliance(JSONArray sourceArray, JSONObject
             try {
                 Set<String> matchKeys = matchObj.keySet();
                 for (int sourceIndex = 0; sourceIndex < sourceArray.length(); sourceIndex++) {
-                    JSONObject sourceObj = sourceArray.getJSONObject(sourceIndex);
+                    JSONObject sourceObj = sourceArray.optJSONObject(sourceIndex);
                     for (String key : matchKeys) {
                         if (sourceObj.has(key)) {
                             Object sourceObjItem = sourceObj.get(key);

File: api-test/backend/src/main/java/io/metersphere/commons/utils/XMLUtil.java
Patch:
@@ -43,15 +43,15 @@ private static void jsonToXmlStr(JSONObject jObj, StringBuffer buffer, StringBuf
             if (en == null || en.getValue() == null) continue;
             if (en.getValue() instanceof JSONObject) {
                 buffer.append(tab).append("<").append(en.getKey()).append(">\n");
-                JSONObject jo = jObj.getJSONObject(en.getKey());
+                JSONObject jo = jObj.optJSONObject(en.getKey());
                 jsonToXmlStr(jo, buffer, nowTab.append("\t"));
                 buffer.append(tab).append("</").append(en.getKey()).append(">\n");
             } else if (en.getValue() instanceof JSONArray) {
                 JSONArray array = jObj.getJSONArray(en.getKey());
                 for (int i = 0; i < array.length(); i++) {
                     buffer.append(tab).append("<").append(en.getKey()).append(">\n");
                     if (StringUtils.isNotBlank(array.optString(i))) {
-                        JSONObject jsonobject = array.getJSONObject(i);
+                        JSONObject jsonobject = array.optJSONObject(i);
                         jsonToXmlStr(jsonobject, buffer, nowTab.append("\t"));
                         buffer.append(tab).append("</").append(en.getKey()).append(">\n");
                     }

File: api-test/backend/src/main/java/io/metersphere/commons/utils/mock/MockScriptEngineUtils.java
Patch:
@@ -122,7 +122,7 @@ private String genBeanshellPreScript(String url, Map<String, String> headerMap,
             if (requestMockParams.getBodyParams() != null) {
                 if (requestMockParams.getBodyParams().length() == 1) {
                     //参数是jsonObject
-                    JSONObject bodyParamObj = requestMockParams.getBodyParams().getJSONObject(0);
+                    JSONObject bodyParamObj = requestMockParams.getBodyParams().optJSONObject(0);
                     for (String key : bodyParamObj.keySet()) {
                         String value = String.valueOf(bodyParamObj.get(key));
                         value = StringUtils.replace(value, "\\", "\\\\");
@@ -177,7 +177,7 @@ private String genPythonPreScript(String url, Map<String, String> headerMap, Req
         if (requestMockParams.getBodyParams() != null) {
             if (requestMockParams.getBodyParams().length() == 1) {
                 //参数是jsonObject
-                JSONObject bodyParamObj = requestMockParams.getBodyParams().getJSONObject(0);
+                JSONObject bodyParamObj = requestMockParams.getBodyParams().optJSONObject(0);
                 for (String key : bodyParamObj.keySet()) {
                     String value = String.valueOf(bodyParamObj.get(key));
                     value = StringUtils.replace(value, "\\", "\\\\");

File: api-test/backend/src/main/java/io/metersphere/service/MsHashTreeService.java
Patch:
@@ -214,7 +214,7 @@ private JSONObject setRefScenario(JSONObject element) {
 
     public void dataFormatting(JSONArray hashTree) {
         for (int i = 0; i < hashTree.length(); i++) {
-            JSONObject element = hashTree.getJSONObject(i);
+            JSONObject element = hashTree.optJSONObject(i);
             if (element != null && StringUtils.equalsIgnoreCase(element.optString(TYPE), SCENARIO)) {
                 element = this.setRefScenario(element);
                 hashTree.put(i, element);

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReferenceIdService.java
Patch:
@@ -113,7 +113,7 @@ public List<ApiScenarioReferenceId> getApiAndScenarioRelation(ApiScenarioWithBLO
             }
             JSONArray hashTree = jsonObject.getJSONArray(MsHashTreeService.HASH_TREE);
             for (int index = 0; index < hashTree.length(); index++) {
-                JSONObject item = hashTree.getJSONObject(index);
+                JSONObject item = hashTree.optJSONObject(index);
                 if (item == null) {
                     continue;
                 }
@@ -166,7 +166,7 @@ public List<ApiScenarioReferenceId> deepElementRelation(String scenarioId, JSONA
         List<ApiScenarioReferenceId> deepRelations = new LinkedList<>();
         if (hashTree != null) {
             for (int index = 0; index < hashTree.length(); index++) {
-                JSONObject item = hashTree.getJSONObject(index);
+                JSONObject item = hashTree.optJSONObject(index);
                 if (item.has(MsHashTreeService.ID) && item.has(MsHashTreeService.REFERENCED)) {
                     String method = null;
                     String url = null;

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioReportStructureService.java
Patch:
@@ -197,7 +197,7 @@ private static JSONObject getRefElement(JSONObject element) {
 
     public static void dataFormatting(JSONArray hashTree, StepTreeDTO dto, String id, String reportType) {
         for (int i = 0; i < hashTree.length(); i++) {
-            JSONObject element = hashTree.getJSONObject(i);
+            JSONObject element = hashTree.optJSONObject(i);
             if (element != null && element.getBoolean(ENABLE)) {
                 String resourceId = combinationResourceId(element, reportType, id);
                 StepTreeDTO children = new StepTreeDTO(element.optString(NAME), resourceId, element.optString(TYPE), resourceId, element.optInt("index"));

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -735,7 +735,7 @@ private static JSONObject jsonMerge(JSONObject source, JSONObject target) {
             } else {
                 if (value instanceof JSONObject) {
                     JSONObject valueJson = (JSONObject) value;
-                    JSONObject targetValue = jsonMerge(valueJson, target.getJSONObject(key));
+                    JSONObject targetValue = jsonMerge(valueJson, target.optJSONObject(key));
                     target.put(key, targetValue);
                 } else if (value instanceof JSONArray) {
                     JSONArray valueArray = (JSONArray) value;
@@ -2104,7 +2104,7 @@ private void setReferenced(JSONArray hashTree, String versionId, String projectI
                 }
                 JSONObject environmentMap = null;
                 if (object.has("environmentMap")) {
-                    environmentMap = object.getJSONObject("environmentMap");
+                    environmentMap = object.optJSONObject("environmentMap");
                 }
                 if (environmentMap != null) {
                     object.put("environmentMap", new HashMap<>());

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -209,10 +209,10 @@ private ApiScenarioRequest initRequest(ApiScenarioRequest request, boolean setDe
         }
         if (MapUtils.isNotEmpty(request.getFilters())
                 && request.getFilters().containsKey(ApiTestConstants.LAST_RESULT)) {
-            if (request.getFilters().get(ApiTestConstants.LAST_RESULT).contains(ApiReportStatus.PENDING.name())) {
+            if (request.getFilters().get(ApiTestConstants.LAST_RESULT) != null && request.getFilters().get(ApiTestConstants.LAST_RESULT).contains(ApiReportStatus.PENDING.name())) {
                 request.getFilters().get(ApiTestConstants.LAST_RESULT).add("");
             }
-            if (request.getFilters().get(ApiTestConstants.LAST_RESULT).contains(ApiTestConstants.FAKE_ERROR)) {
+            if (request.getFilters().get(ApiTestConstants.LAST_RESULT) != null && request.getFilters().get(ApiTestConstants.LAST_RESULT).contains(ApiTestConstants.FAKE_ERROR)) {
                 request.getFilters().get(ApiTestConstants.LAST_RESULT).add(ApiReportStatus.FAKE_ERROR.name());
             }
         }

File: api-test/backend/src/main/java/io/metersphere/api/exec/api/ApiCaseParallelExecuteService.java
Patch:
@@ -3,7 +3,7 @@
 import io.metersphere.api.exec.queue.DBTestQueue;
 import io.metersphere.commons.utils.GenerateHashTreeUtil;
 import io.metersphere.api.jmeter.JMeterService;
-import io.metersphere.api.jmeter.algorithm.SmoothWeighted;
+import io.metersphere.api.jmeter.utils.SmoothWeighted;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.constants.RunModeConstants;

File: api-test/backend/src/main/java/io/metersphere/api/exec/api/ApiCaseSerialService.java
Patch:
@@ -14,7 +14,7 @@
 import io.metersphere.api.exec.queue.DBTestQueue;
 import io.metersphere.api.jmeter.JMeterService;
 import io.metersphere.api.jmeter.NewDriverManager;
-import io.metersphere.api.jmeter.algorithm.SmoothWeighted;
+import io.metersphere.api.jmeter.utils.SmoothWeighted;
 import io.metersphere.service.ApiExecutionQueueService;
 import io.metersphere.service.RemakeReportService;
 import io.metersphere.base.domain.ApiDefinitionExecResultWithBLOBs;

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioParallelService.java
Patch:
@@ -5,7 +5,7 @@
 import io.metersphere.api.exec.queue.DBTestQueue;
 import io.metersphere.commons.utils.GenerateHashTreeUtil;
 import io.metersphere.api.jmeter.JMeterService;
-import io.metersphere.api.jmeter.algorithm.SmoothWeighted;
+import io.metersphere.api.jmeter.utils.SmoothWeighted;
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.dto.JmeterRunRequestDTO;

File: api-test/backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioSerialService.java
Patch:
@@ -3,7 +3,7 @@
 
 import io.metersphere.api.exec.queue.DBTestQueue;
 import io.metersphere.api.jmeter.JMeterService;
-import io.metersphere.api.jmeter.algorithm.SmoothWeighted;
+import io.metersphere.api.jmeter.utils.SmoothWeighted;
 import io.metersphere.base.domain.ApiExecutionQueueDetail;
 import io.metersphere.base.domain.ApiScenarioReport;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -3,8 +3,8 @@
 
 import io.metersphere.api.exec.engine.EngineFactory;
 import io.metersphere.api.exec.queue.ExecThreadPoolExecutor;
-import io.metersphere.api.jmeter.algorithm.ServerConfig;
-import io.metersphere.api.jmeter.algorithm.SmoothWeighted;
+import io.metersphere.api.jmeter.utils.ServerConfig;
+import io.metersphere.api.jmeter.utils.SmoothWeighted;
 import io.metersphere.commons.config.KafkaConfig;
 import io.metersphere.service.RemakeReportService;
 import io.metersphere.commons.constants.ApiRunMode;

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/utils/ServerConfig.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.jmeter.algorithm;
+package io.metersphere.api.jmeter.utils;
 
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;

File: api-test/backend/src/main/java/io/metersphere/api/jmeter/utils/SmoothWeighted.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.jmeter.algorithm;
+package io.metersphere.api.jmeter.utils;
 
 
 import io.metersphere.commons.utils.GenerateHashTreeUtil;

File: test-track/backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -533,7 +533,6 @@ public void saveData() {
             this.ids = result2.stream().map(TestCase::getId).collect(Collectors.toList());
             updateList.clear();
         }
-        customFieldsMap.clear();
     }
 
     private TestCaseWithBLOBs convert2TestCase(TestCaseExcelData data) {
@@ -844,6 +843,7 @@ public List<ExcelErrData<TestCaseExcelData>> getErrList() {
     public void doAfterAllAnalysed(AnalysisContext analysisContext) {
         saveData();
         list.clear();
+        customFieldsMap.clear();
     }
 
     private void formatHeadMap() {

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/Swagger2Parser.java
Patch:
@@ -133,6 +133,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
                 MsHTTPSamplerProxy request = buildRequest(operation, pathName, method.name());
                 request.setFollowRedirects(true);
                 ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method.name(), importRequest);
+                apiDefinition.setDescription(operation.getDescription());
                 parseParameters(operation, request);
                 addBodyHeader(request);
                 if (StringUtils.isNotBlank(basePath)) {

File: api-test/backend/src/main/java/io/metersphere/controller/definition/ApiTestCaseController.java
Patch:
@@ -69,7 +69,6 @@ public ApiTestCaseResult single(@PathVariable String id) {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<ApiTestCaseDTO>> listSimple(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
-        apiTestCaseService.initRequestBySearch(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setSelectEnvironment(true);
         return PageUtils.setPageInfo(page, apiTestCaseService.listSimple(request));

File: test-track/backend/src/main/java/io/metersphere/controller/remote/TrackApiTestController.java
Patch:
@@ -19,7 +19,8 @@
         "/api/automation/module",
         "/api/project",
         "/test/case/relevance/api",
-        "/test/case/relevance/scenario"
+        "/test/case/relevance/scenario",
+        "home"
 })
 public class TrackApiTestController {
     @Resource

File: test-track/backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -1884,6 +1884,7 @@ private void batchEditTag(TestCaseBatchRequest request) {
                     tc.setTags(JSON.toJSONString(request.getTagList()));
                 }
             }
+            tc.setUpdateTime(System.currentTimeMillis());
             mapper.updateByPrimaryKey(tc);
         }
         sqlSession.flushStatements();

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -1556,8 +1556,8 @@ public ScenarioToPerformanceInfoDTO exportJmx(ApiScenarioBatchRequest request) {
             if (StringUtils.isNotEmpty(item.getScenarioDefinition())) {
                 HashTreeInfoDTO hashTreeInfoDTO = generateJmx(item);
                 if (StringUtils.isNotEmpty(hashTreeInfoDTO.getJmx())) {
-                    ApiScenarioExportJmxDTO scenariosExportJmx = new ApiScenarioExportJmxDTO(item.getName(), DataFormattingUtil.updateJmxString(hashTreeInfoDTO.getJmx(), false).getXml());
                     JmxInfoDTO dto = DataFormattingUtil.updateJmxString(hashTreeInfoDTO.getJmx(), true);
+                    ApiScenarioExportJmxDTO scenariosExportJmx = new ApiScenarioExportJmxDTO(item.getName(), dto.getXml());
                     dto.addFileMetadataLists(hashTreeInfoDTO.getRepositoryFiles());
                     scenariosExportJmx.setId(item.getId());
                     scenariosExportJmx.setVersion(item.getVersion());

File: api-test/backend/src/main/java/io/metersphere/api/parse/api/MsDefinitionParser.java
Patch:
@@ -37,7 +37,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
         if (this.projectId == null) {
             MSException.throwException("wrong format");
         }
-        if (testObject.get("projectName") != null || testObject.get("projectId") != null) {//  metersphere 格式导入
+        if (testObject.opt("projectName") != null || testObject.opt("projectId") != null) {//  metersphere 格式导入
             return parseMsFormat(testStr, request);
         } else {    //  chrome 插件录制格式导入
             request.setPlatform(ApiImportPlatform.Plugin.name());

File: api-test/backend/src/main/java/io/metersphere/service/definition/ApiDefinitionService.java
Patch:
@@ -369,7 +369,7 @@ public ApiDefinitionRequest checkFilterHasCoverage(ApiDefinitionRequest request)
                 //计算全部用例
                 definitionList = this.selectEffectiveIdByProjectId(request.getProjectId());
             }
-            
+
             if (CollectionUtils.isNotEmpty(definitionList)) {
                 //如果查询条件中有未覆盖/已覆盖， 则需要解析出没有用例的接口中，有多少是符合场景覆盖规律的。然后将这些接口的id作为查询参数
                 Map<String, Map<String, String>> scenarioUrlList = apiAutomationService.selectScenarioUseUrlByProjectId(request.getProjectId());
@@ -1862,11 +1862,13 @@ private void batchEditDefinitionTags(ApiBatchRequest request) {
             String tags = apiDefinition.getTags();
             if (StringUtils.isBlank(tags) || BooleanUtils.isFalse(request.isAppendTag())) {
                 apiDefinition.setTags(JSON.toJSONString(request.getTagList()));
+                apiDefinition.setUpdateTime(System.currentTimeMillis());
             } else {
                 try {
                     List<String> list = JSON.parseArray(tags, String.class);
                     list.addAll(request.getTagList());
                     apiDefinition.setTags(JSON.toJSONString(list));
+                    apiDefinition.setUpdateTime(System.currentTimeMillis());
                 } catch (Exception e) {
                     LogUtil.error("batch edit tags error.");
                     LogUtil.error(e, e.getMessage());

File: api-test/backend/src/main/java/io/metersphere/service/scenario/ApiScenarioService.java
Patch:
@@ -1132,11 +1132,13 @@ private void batchEditTags(ApiScenarioBatchRequest request, List<String> ids) {
             String tags = apiScenario.getTags();
             if (StringUtils.isBlank(tags) || BooleanUtils.isFalse(request.isAppendTag())) {
                 apiScenario.setTags(JSON.toJSONString(request.getTagList()));
+                apiScenario.setUpdateTime(System.currentTimeMillis());
             } else {
                 try {
                     List<String> list = JSON.parseArray(tags, String.class);
                     list.addAll(request.getTagList());
                     apiScenario.setTags(JSON.toJSONString(list));
+                    apiScenario.setUpdateTime(System.currentTimeMillis());
                 } catch (Exception e) {
                     LogUtil.error("batch edit tags error.");
                     LogUtil.error(e, e.getMessage());

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -67,6 +67,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/share-report", "anon");
         filterChainDefinitionMap.put("/share-document", "anon");
         filterChainDefinitionMap.put("/share-api-report", "anon");
+        filterChainDefinitionMap.put("/api/scenario/report/get/**", "anon");
         filterChainDefinitionMap.put("/shareUiReport", "anon");
 
         filterChainDefinitionMap.put("/system/theme", "anon");

File: framework/sdk-parent/sdk/src/main/java/io/metersphere/environment/service/BaseEnvironmentService.java
Patch:
@@ -558,7 +558,7 @@ private ApiTestEnvironmentWithBLOBs checkMockEvnIsRightful(ApiTestEnvironmentWit
                                     }
 
                                     String projectSocket = String.valueOf(obj.get("socket"));
-                                    if (!StringUtils.contains(projectSocket, "/mock/" + projectNumber)) {
+                                    if (!StringUtils.contains(projectSocket, "/api/mock/" + projectNumber)) {
                                         needUpdate = true;
                                         break;
                                     }
@@ -657,7 +657,7 @@ private ApiTestEnvironmentWithBLOBs genHttpApiTestEnvironmentByUrl(String envId,
         JSONObject httpItem = new JSONObject();
         httpItem.put("id", UUID.randomUUID().toString());
         httpItem.put("type", "NONE");
-        httpItem.put("socket", socket + "/mock/" + projectNumber);
+        httpItem.put("socket", socket + "/api/mock/" + projectNumber);
         httpItem.put("protocol", protocal);
         List<Map<String, Object>> protocolVariablesArr = new LinkedList<>();
         Map<String, Object> protocolMap = new HashMap<>();

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -549,7 +549,7 @@ public void deleteByRelevanceTestPlanReportIds(List<String> testPlanReportIdList
 
     private void initReportRequest(QueryAPIReportRequest request) {
         if (request != null) {
-            if (MapUtils.isNotEmpty(request.getFilters()) && request.getFilters().containsKey("trigger_mode")) {
+            if (MapUtils.isNotEmpty(request.getFilters()) && request.getFilters().containsKey("trigger_mode") && CollectionUtils.isNotEmpty(request.getFilters().get("trigger_mode"))) {
                 boolean filterHasApi = false;
                 for (String triggerMode : request.getFilters().get("trigger_mode")) {
                     if (StringUtils.equalsIgnoreCase(triggerMode, "api")) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -49,7 +49,6 @@
 import org.apache.jmeter.testelement.TestElement;
 import org.apache.jorphan.collections.HashTree;
 
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
@@ -232,7 +231,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             httpSamplerTree.add(arguments);
         }
         //添加csv
-        ElementUtil.addOtherVariables(config, httpSamplerTree, this.getProjectId());
+        ElementUtil.addApiVariables(config, httpSamplerTree, this.getProjectId());
         //判断是否要开启DNS
         if (config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && config.getConfig().get(this.getProjectId()).getCommonConfig().isEnableHost()) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -175,7 +175,7 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
             tree.add(envArguments);
         }
         //添加csv
-        ElementUtil.addOtherVariables(config, tree, this.getProjectId());
+        ElementUtil.addApiVariables(config, tree, this.getProjectId());
         //增加误报、全局断言
         HashTreeUtil.addPositive(envConfig, samplerHashTree, config, this.getProjectId());
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -176,7 +176,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             tree.add(arguments);
         }
         //添加csv
-        ElementUtil.addOtherVariables(config, tree, this.getProjectId());
+        ElementUtil.addApiVariables(config, tree, this.getProjectId());
         final HashTree samplerHashTree = new ListedHashTree();
         samplerHashTree.add(tcpConfig());
         tree.set(tcpSampler(config), samplerHashTree);

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -713,7 +713,7 @@ private UpdateApiModuleDTO delOtherProtocol(List<ApiDefinitionWithBLOBs> data,
                     List<ApiDefinitionWithBLOBs> singleOptionDatas = new ArrayList<>();
                     removeOtherChooseModuleRepeat(optionDatas, singleOptionDatas, chooseModulePath);
                     optionDatas = singleOptionDatas;
-                    optionMap = optionDatas.stream().collect(Collectors.toMap(t -> t.getName().concat(t.getMethod()).concat(t.getPath()).concat(chooseModulePath), api -> api));
+                    optionMap = optionDatas.stream().collect(Collectors.toMap(t -> t.getName().concat(chooseModulePath), api -> api));
                 } else {
                     getNoHChooseModuleUrlRepeatOptionMap(optionDatas, optionMap, chooseModulePath);
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -867,6 +867,9 @@ public void updateByApiDefinitionId(List<String> ids, ApiDefinitionWithBLOBs tes
             apiDefinitionExample.createCriteria().andApiDefinitionIdIn(ids);
             List<ApiTestCaseWithBLOBs> caseWithBLOBs = apiTestCaseMapper.selectByExampleWithBLOBs(apiDefinitionExample);
             List<String> caseIds = caseWithBLOBs.stream().map(ApiTestCaseWithBLOBs::getId).collect(Collectors.toList());
+            if (CollectionUtils.isEmpty(caseIds)) {
+                return;
+            }
             List<ApiTestCaseWithBLOBs> bloBs = extApiTestCaseMapper.unTrashCaseListByIds(caseIds);
 
             SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -24,9 +24,9 @@
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.constants.SystemConstants;
 import io.metersphere.dto.RequestResult;
+import io.metersphere.dto.UiCommandResult;
 import io.metersphere.service.ProjectService;
 import io.metersphere.utils.LoggerUtil;
-import io.metersphere.xpack.ui.dto.UiCommandResult;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang3.BooleanUtils;

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -234,7 +234,7 @@ public ApiDataCountDTO testCaseInfoCount(@PathVariable String projectId) {
         for (ExecuteResultCountDTO execResult : apiCaseExecResultList) {
             if (StringUtils.isEmpty(execResult.getExecResult())) {
                 unexecuteCount += execResult.getCount();
-            } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), "Underway", ExecuteResult.TEST_PLAN_PREPARE.toString())) {
+            } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), "Underway", ExecuteResult.STOP.toString(), ExecuteResult.TEST_PLAN_PREPARE.toString())) {
                 unexecuteCount += execResult.getCount();
             } else if (StringUtils.equalsIgnoreCase(execResult.getExecResult(), ExecuteResult.API_SUCCESS.toString())) {
                 executionPassCount += execResult.getCount();

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -251,7 +251,7 @@ public ApiDataCountDTO testCaseInfoCount(@PathVariable String projectId) {
 
         if (unexecuteCount + executionFailedCount + executionPassCount + fakeErrorCount > 0) {
             //通过率
-            float coverageRageNumber = (float) executionPassCount * 100 / (unexecuteCount + executedCountNumber + executionPassCount);
+            float coverageRageNumber = (float) executionPassCount * 100 / (unexecuteCount + executionFailedCount + fakeErrorCount + executionPassCount);
             DecimalFormat df = new DecimalFormat("0.0");
             apiCountResult.setPassRage(df.format(coverageRageNumber) + "%");
         } else {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -988,7 +988,7 @@ private String getStatus(ResultDTO dto) {
      * @param dto
      * @return
      */
-    private long getUiErrorSize(ResultDTO dto) {
+    public static long getUiErrorSize(ResultDTO dto) {
         int errorSize = 0;
         int successSize = 0;
         try {

File: backend/src/main/java/io/metersphere/controller/request/AddProjectRequest.java
Patch:
@@ -19,6 +19,8 @@ public class AddProjectRequest extends Project {
     private String cleanTrackReportExpr;
     private Boolean cleanApiReport;
     private String cleanApiReportExpr;
+    private Boolean cleanUiReport;
+    private String cleanUiReportExpr;
     private Boolean cleanLoadReport;
     private String cleanLoadReportExpr;
 }

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -259,7 +259,7 @@ private void handleMergeData(Map<Integer, String> data, Integer rowIndex) {
                         }
                     }
                     // 如果合并单元格的最后一个单元格，标记下
-                    if (rowIndex == mergeInfo.getLastRowIndex()) {
+                    if (rowIndex.equals(mergeInfo.getLastRowIndex())) {
                         // 根据名称列是否是合并单元格判断是不是同一条用例
                         if (getNameColIndex().equals(col)) {
                             this.isMergeLastRow = true;

File: backend/src/main/java/io/metersphere/metadata/utils/GitRepositoryUtils.java
Patch:
@@ -135,6 +135,7 @@ public GitFileAttachInfo selectLastCommitIdByBranch(String branch, String filePa
             }
         } catch (Exception e) {
             LogUtil.error("获取文件库文件报错!", e);
+            MSException.throwException("Connect repository error!");
         } finally {
             this.closeConnection(repo);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1330,6 +1330,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
                 scenarioWithBLOBs.setRefId(sameRequest.get(0).getRefId() == null ? sameRequest.get(0).getId() : sameRequest.get(0).getRefId());
                 scenarioWithBLOBs.setNum(sameRequest.get(0).getNum()); // 使用第一个num当作本次的num
                 scenarioWithBLOBs.setOrder(sameRequest.get(0).getOrder());
+                checkReferenceCase(scenarioWithBLOBs, apiTestCaseMapper, apiDefinitionMapper);
                 sendImportScenarioCreateNotice(scenarioWithBLOBs);
                 batchMapper.insert(scenarioWithBLOBs);
             } else {
@@ -1339,10 +1340,10 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
                 scenarioWithBLOBs.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 scenarioWithBLOBs.setOrder(existScenario.getOrder());
                 scenarioWithBLOBs.setNum(existScenario.getNum());
+                checkReferenceCase(scenarioWithBLOBs, apiTestCaseMapper, apiDefinitionMapper);
                 sendImportScenarioUpdateNotice(scenarioWithBLOBs);
                 batchMapper.updateByPrimaryKeyWithBLOBs(scenarioWithBLOBs);
             }
-            checkReferenceCase(scenarioWithBLOBs, apiTestCaseMapper, apiDefinitionMapper);
             apiScenarioReferenceIdService.saveApiAndScenarioRelation(scenarioWithBLOBs);
             extApiScenarioMapper.clearLatestVersion(scenarioWithBLOBs.getRefId());
             extApiScenarioMapper.addLatestVersion(scenarioWithBLOBs.getRefId());
@@ -1414,7 +1415,6 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
                 } else {
                     scenarioWithBLOBs.setVersionId(apiTestImportRequest.getDefaultVersion());
                 }
-                checkReferenceCase(scenarioWithBLOBs, apiTestCaseMapper, apiDefinitionMapper);
                 if (scenarioWithBLOBs.getOrder() == null) {
                     scenarioWithBLOBs.setOrder(getImportNextOrder(request.getProjectId()));
                 }
@@ -1424,6 +1424,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
                 if (scenarioWithBLOBs.getRefId() == null) {
                     scenarioWithBLOBs.setRefId(scenarioWithBLOBs.getId());
                 }
+                checkReferenceCase(scenarioWithBLOBs, apiTestCaseMapper, apiDefinitionMapper);
                 sendImportScenarioCreateNotice(scenarioWithBLOBs);
                 batchMapper.insert(scenarioWithBLOBs);
                 // 存储依赖关系

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -180,6 +180,9 @@ private DubboSample dubboSample(ParameterConfig config) {
         DubboSample sampler = new DubboSample();
         sampler.setEnabled(this.isEnable());
         sampler.setName(this.getName());
+        if (StringUtils.isEmpty(this.getName())) {
+            sampler.setName("DubboSamplerProxy");
+        }
         if (config.isOperating()) {
             String[] testNameArr = sampler.getName().split("<->");
             if (testNameArr.length > 0) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -285,6 +285,9 @@ private TCPSampler tcpSampler(ParameterConfig config) {
         TCPSampler tcpSampler = new TCPSampler();
         tcpSampler.setEnabled(this.isEnable());
         tcpSampler.setName(this.getName());
+        if (StringUtils.isEmpty(this.getName())) {
+            tcpSampler.setName("TcpSamplerProxy");
+        }
         if (config.isOperating()) {
             String[] testNameArr = tcpSampler.getName().split("<->");
             if (testNameArr.length > 0) {

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -67,7 +67,8 @@ public static void buildStatusResultMap(List<PlanReportCaseDTO> planReportCaseDT
             report.setCaseCount((report.getCaseCount() == null ? 0 : report.getCaseCount()) + 1);
             String status = item.getStatus();
             if (StringUtils.isNotBlank(status)
-                    && !StringUtils.equalsAny(status, TestPlanTestCaseStatus.Underway.name(), TestPlanTestCaseStatus.Prepare.name())) {
+                    && !StringUtils.equalsAnyIgnoreCase(status, TestPlanTestCaseStatus.Underway.name(), TestPlanTestCaseStatus.Prepare.name(),
+                    ExecuteResult.UN_EXECUTE.getValue(), ExecuteResult.STOP.getValue())) {
                 // 计算执行过的数量
                 report.setExecuteCount(report.getExecuteCount() + 1);
                 if (StringUtils.equals(successStatus, status)) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -2130,8 +2130,8 @@ public TestCase add(EditTestCaseRequest request, List<MultipartFile> files) {
                     FileAttachmentMetadata fileAttachmentMetadata = new FileAttachmentMetadata();
                     BeanUtils.copyBean(fileAttachmentMetadata, fileMetadata);
                     fileAttachmentMetadata.setId(record.getAttachmentId());
-                    fileAttachmentMetadata.setCreator(fileMetadata.getCreateUser());
-                    fileAttachmentMetadata.setFilePath(fileMetadata.getPath());
+                    fileAttachmentMetadata.setCreator(fileMetadata.getCreateUser() == null ? "" : fileMetadata.getCreateUser());
+                    fileAttachmentMetadata.setFilePath(fileMetadata.getPath() == null ? "" : fileMetadata.getPath());
                     fileAttachmentMetadataBatchMapper.insert(fileAttachmentMetadata);
                 });
                 sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/metadata/service/FileManagerService.java
Patch:
@@ -94,7 +94,7 @@ public List<FileInfoDTO> downloadFileBatch(List<FileRequest> requestList) {
                 try {
                     list.addAll(FileCenter.getRepository(requestByStorageEntry.getKey()).getFileBatch(requestByStorageEntry.getValue()));
                 } catch (Exception e) {
-                    LogUtil.error(e);
+                    LogUtil.error("下载GIT文件失败!", e);
                     return null;
                 }
             }

File: backend/src/main/java/io/metersphere/metadata/service/FileMetadataService.java
Patch:
@@ -91,7 +91,7 @@ public List<FileMetadata> create(FileMetadataCreateRequest fileMetadata, List<Mu
                 fileMetadata.setName(MetadataUtils.getFileNameByRemotePath(fileMetadata.getRepositoryPath()));
                 fileMetadata.setType(MetadataUtils.getFileType(fileMetadata.getRepositoryPath()));
                 fileMetadata.setPath(fileMetadata.getRepositoryPath());
-                fileMetadata.setSize(Long.valueOf(0));
+                fileMetadata.setSize(gitFileInfo.getSize());
                 fileMetadata.setAttachInfo(JSONObject.toJSONString(gitFileInfo));
                 result.add(this.save(fileMetadata));
             } else {
@@ -590,7 +590,7 @@ private FileMetadataWithBLOBs genOtherVersionFileMetadata(FileMetadataWithBLOBs
         newMetadata.setAttachInfo(JSONObject.toJSONString(gitFileAttachInfo));
         newMetadata.setName(baseMetadata.getName());
         newMetadata.setType(baseMetadata.getType());
-        newMetadata.setSize(baseMetadata.getSize());
+        newMetadata.setSize(gitFileAttachInfo.getSize());
         newMetadata.setCreateTime(operationTime);
         newMetadata.setUpdateTime(operationTime);
         newMetadata.setStorage(baseMetadata.getStorage());

File: backend/src/main/java/io/metersphere/metadata/utils/GitRepositoryUtils.java
Patch:
@@ -128,7 +128,9 @@ public GitFileAttachInfo selectLastCommitIdByBranch(String branch, String filePa
             if (!treeWalk.next()) {
                 return null;
             } else {
-                attachInfo = new GitFileAttachInfo(repositoryUrl, userName, token, branch, fileCommitId.getName(), filePath, commit.getFullMessage());
+                ObjectId objectId = treeWalk.getObjectId(0);
+                ObjectLoader loader = repo.open(objectId);
+                attachInfo = new GitFileAttachInfo(repositoryUrl, userName, token, branch, fileCommitId.getName(), filePath, commit.getFullMessage(), loader.getSize());
                 return attachInfo;
             }
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/metadata/vo/repository/GitFileAttachInfo.java
Patch:
@@ -13,6 +13,7 @@ public class GitFileAttachInfo extends FileAttachInfo {
     private String commitId;
     private String filePath;
     private String commitMessage;
+    private long size;
 
     public String getRepositoryInfo() {
         return repositoryPath + "-" + userName + "-" + token;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -849,8 +849,8 @@ public static Arguments getConfigArguments(ParameterConfig config, String name,
                 }
             });
             // 清空变量，防止重复添加
-            config.getConfig().get(projectId).getCommonConfig().getVariables().remove(constants);
-            config.getConfig().get(projectId).getCommonConfig().getVariables().remove(variableList);
+            config.getConfig().get(projectId).getCommonConfig().getVariables().removeAll(constants);
+            config.getConfig().get(projectId).getCommonConfig().getVariables().removeAll(variableList);
         }
 
         if (arguments.getArguments() != null && arguments.getArguments().size() > 0) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanMessageService.java
Patch:
@@ -152,6 +152,7 @@ public void sendMessage(TestPlan testPlan, TestPlanReport testPlanReport, String
         paramMap.put("type", "testPlan");
         paramMap.put("url", url);
         paramMap.put("projectId", projectId);
+        paramMap.put("creator", testPlan.getCreator());
         if (userDTO != null) {
             paramMap.put("operator", userDTO.getName());
             paramMap.put("executor", userDTO.getId());

File: backend/src/main/java/io/metersphere/performance/request/QueryProjectFileRequest.java
Patch:
@@ -4,10 +4,12 @@
 import lombok.Data;
 
 import java.util.List;
+import java.util.Map;
 
 @Data
 public class QueryProjectFileRequest extends BaseQueryRequest {
     private String name;
     private String moduleId;
+    private Map<String, String> loadCaseFileIdMap;
     private List<String> types;
 }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -249,7 +249,7 @@ public ApiDataCountDTO testCaseInfoCount(@PathVariable String projectId) {
         apiCountResult.setExecutionPassCount(executionPassCount);
         apiCountResult.setFakeErrorCount(fakeErrorCount);
 
-        if (unexecuteCount + executedCountNumber + executionPassCount > 0) {
+        if (unexecuteCount + executionFailedCount + executionPassCount + fakeErrorCount > 0) {
             //通过率
             float coverageRageNumber = (float) executionPassCount * 100 / (unexecuteCount + executedCountNumber + executionPassCount);
             DecimalFormat df = new DecimalFormat("0.0");

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ApiDataCountDTO.java
Patch:
@@ -184,7 +184,7 @@ public void countApiCoverage(List<ApiDataCountResult> countResultList) {
 
     public void countRunResult(List<ApiDataCountResult> countResultByRunResult) {
         for (ApiDataCountResult countResult : countResultByRunResult) {
-            if (StringUtils.equalsAnyIgnoreCase(countResult.getGroupField(), "notRun", "unexecute")) {
+            if (StringUtils.equalsAnyIgnoreCase(countResult.getGroupField(), "notRun", "unexecute") || StringUtils.isEmpty(countResult.getGroupField())) {
                 this.unexecuteCount += countResult.getCountNumber();
             } else if ("Fail".equals(countResult.getGroupField())) {
                 this.executionFailedCount += countResult.getCountNumber();

File: backend/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -400,7 +400,7 @@ public static void getExecuteFiles(HashTree tree, String reportId, List<BodyFile
                             file.setStorage(StorageConstants.GIT.name());
                             file.setFileId(source.getPropertyAsString("fileId"));
                             file.setName(reportId + File.separator + fileMetadata.getName());
-                            source.setFilename(BODY_FILE_DIR + File.separator + reportId + File.separator + fileMetadata.getName());
+                            ((CSVDataSet) key).setProperty("filename", BODY_FILE_DIR + File.separator + reportId + File.separator + fileMetadata.getName());
                         }
                     }
                     files.add(file);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtCustomFieldTemplateMapper.java
Patch:
@@ -10,6 +10,8 @@
 public interface ExtCustomFieldTemplateMapper {
     List<String> getCustomFieldIds(@Param("templateId") String templateId);
 
+    List<CustomFieldTemplate> getCustomFields(@Param("templateId") String templateId);
+
     List<CustomFieldTemplateDao> list(@Param("request") CustomFieldTemplate request);
 
     List<CustomFieldDao> lisSimple(@Param("request") CustomFieldTemplate request);

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -98,13 +98,13 @@ public List<TestPlanApiCaseDTO> list(ApiTestCaseRequest request) {
 
     public void buildUserInfo(List<? extends TestPlanApiCaseDTO> apiTestCases) {
         List<String> userIds = new ArrayList();
-        userIds.addAll(apiTestCases.stream().map(TestPlanApiCaseDTO::getCreateUser).collect(Collectors.toList()));
+        userIds.addAll(apiTestCases.stream().map(TestPlanApiCaseDTO::getCreateUserId).collect(Collectors.toList()));
         userIds.addAll(apiTestCases.stream().map(TestPlanApiCaseDTO::getUpdateUser).collect(Collectors.toList()));
         userIds.addAll(apiTestCases.stream().map(TestPlanApiCaseDTO::getUserId).collect(Collectors.toList()));
         if (!org.apache.commons.collections.CollectionUtils.isEmpty(userIds)) {
             Map<String, String> userMap = ServiceUtils.getUserNameMap(userIds);
             apiTestCases.forEach(caseResult -> {
-                caseResult.setCreatorName(userMap.get(caseResult.getCreateUser()));
+                caseResult.setCreatorName(userMap.get(caseResult.getCreateUserId()));
                 caseResult.setUpdateName(userMap.get(caseResult.getUpdateUser()));
                 caseResult.setPrincipalName(userMap.get(caseResult.getUserId()));
             });

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1752,6 +1752,7 @@ private void checkExportEnv(List<ApiScenarioWithBLOBs> scenarios) {
         StringBuilder builder = new StringBuilder();
         for (ApiScenarioWithBLOBs apiScenarioWithBLOBs : scenarios) {
             try {
+                apiScenarioEnvService.setScenarioEnv(apiScenarioWithBLOBs, null);
                 boolean haveEnv = apiScenarioEnvService.checkScenarioEnv(apiScenarioWithBLOBs, null);
                 if (!haveEnv) {
                     builder.append(apiScenarioWithBLOBs.getName()).append("; ");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtCustomFieldTemplateMapper.java
Patch:
@@ -17,4 +17,6 @@ public interface ExtCustomFieldTemplateMapper {
     List<String> getSystemCustomField(@Param("templateId") String templateId, @Param("fieldName") String fieldName);
 
     void batchInsert(@Param("customFieldTemplates") List<CustomFieldTemplate> customFieldTemplates);
+
+    Long getLastOrder(@Param("templateId") String templateId, @Param("baseOrder") Long baseOrder);
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -287,7 +287,7 @@ public ApiScenario create(SaveApiScenarioRequest request, List<MultipartFile> bo
         checkScenarioNum(request);
         final ApiScenarioWithBLOBs scenario = buildSaveScenario(request);
         scenario.setVersion(0);
-
+        scenario.setLastResult("");
         scenario.setCreateTime(System.currentTimeMillis());
         scenario.setNum(nextNum);
         scenario.setOrder(ServiceUtils.getNextOrder(scenario.getProjectId(), extApiScenarioMapper::getLastOrder));
@@ -526,8 +526,6 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         } else {
             scenario.setVersionId(request.getVersionId());
         }
-        scenario.setLastResult("");
-
         // 存储附件关系
         fileAssociationService.saveScenario(scenario.getId(), request.getScenarioDefinition());
         return scenario;

File: backend/src/main/java/io/metersphere/base/domain/CustomFieldTemplate.java
Patch:
@@ -17,11 +17,11 @@ public class CustomFieldTemplate implements Serializable {
 
     private Integer order;
 
-    private String defaultValue;
-
     private String customData;
 
     private String key;
 
+    private String defaultValue;
+
     private static final long serialVersionUID = 1L;
-}
+}
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestCaseTemplate.java
Patch:
@@ -20,8 +20,6 @@ public class TestCaseTemplate implements Serializable {
 
     private Boolean global;
 
-    private String prerequisite;
-
     private Long createTime;
 
     private Long updateTime;

File: backend/src/main/java/io/metersphere/base/domain/TestCaseTemplateWithBLOBs.java
Patch:
@@ -9,6 +9,8 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class TestCaseTemplateWithBLOBs extends TestCaseTemplate implements Serializable {
+    private String prerequisite;
+
     private String stepDescription;
 
     private String expectedResult;

File: backend/src/main/java/io/metersphere/api/mock/utils/MockApiUtils.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.dto.mock.ApiDefinitionResponseDTO;
 import io.metersphere.api.dto.mock.MockConfigRequestParams;
 import io.metersphere.api.dto.mock.RequestMockParams;
+import io.metersphere.api.dto.shell.filter.ScriptFilter;
 import io.metersphere.api.mock.dto.MockParamConditionEnum;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.json.JSONSchemaGenerator;
@@ -281,6 +282,7 @@ public String getResultByResponseResult(String projectId, JSONObject bodyObj, St
                     LogUtil.error(e);
                 }
             }
+            ScriptFilter.verify(scriptLanguage, "Mock后置脚本", script);
             scriptEngine = scriptEngineUtils.getBaseScriptEngine(projectId, scriptLanguage, url, headerMap, requestMockParams);
             if (StringUtils.isNotEmpty(script) && scriptEngine != null) {
                 scriptEngineUtils.runScript(scriptEngine, script);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1001,6 +1001,8 @@ private List<ApiTestCaseDTO> importCase(ApiDefinitionWithBLOBs apiDefinition, Ap
                 apiTestCaseWithBLOBs.setPriority("P0");
             }
 
+            apiTestCaseWithBLOBs.setStatus("");
+
             if (StringUtils.isNotBlank(apiTestCaseWithBLOBs.getId())) {
                 BeanUtils.copyBean(apiTestCaseDTO, apiTestCaseWithBLOBs);
                 apiTestCaseDTO.setUpdated(true);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -16,6 +16,8 @@ public interface ExtApiTestCaseMapper {
 
     List<ApiTestCaseWithBLOBs> caseList(@Param("request") ApiTestCaseRequest request);
 
+    List<ApiTestCaseWithBLOBs> unTrashCaseListByIds(@Param("ids") List<String> ids);
+
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);
 
     List<String> selectIdsNotExistsInPlan(@Param("projectId") String projectId, @Param("planId") String planId);

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -30,7 +30,7 @@ public abstract class JiraAbstractClient extends BaseClient {
     public JiraIssue getIssues(String issuesId) {
         LogUtil.info("getIssues: " + issuesId);
         ResponseEntity<String> responseEntity;
-        responseEntity = restTemplate.exchange(getBaseUrl() + "/issue/" + issuesId + "?fields=status,assignee,summary,created,updated,attachment,description", HttpMethod.GET, getAuthHttpEntity(), String.class);
+        responseEntity = restTemplate.exchange(getBaseUrl() + "/issue/" + issuesId, HttpMethod.GET, getAuthHttpEntity(), String.class);
         return  (JiraIssue) getResultForObject(JiraIssue.class, responseEntity);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.api.dto.definition.request.ParameterConfig;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import io.metersphere.api.dto.shell.filter.ScriptFilter;
-import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.plugin.core.MsParameter;
 import io.metersphere.plugin.core.MsTestElement;
 import lombok.Data;
@@ -88,7 +87,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             processor.setProperty("scriptLanguage", "rhino");
         }
         processor.setProperty("script", this.getScript());
-        processor.setProperty("projectId", StringUtils.isNotEmpty(this.getProjectId()) ? this.getProjectId() : SessionUtils.getCurrentProjectId());
         final HashTree jsr223PostTree = tree.add(processor);
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {

File: backend/src/main/java/io/metersphere/api/service/ApiExecutionQueueService.java
Patch:
@@ -157,7 +157,7 @@ private void initApi(Map<String, ApiDefinitionExecResult> runMap,
             queue.setRetryEnable(config.isRetryEnable());
             queue.setRetryNumber(config.getRetryNum());
             queue.setProjectIds(JSON.toJSONString(new ArrayList<>() {{
-                runMap.get(k).getProjectId();
+                this.add(runMap.get(k).getProjectId());
             }}));
             queueDetails.add(queue);
             detailMap.put(k, queue.getId());

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioExportJmxDTO.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.FileMetadata;
 import lombok.Getter;
 import lombok.Setter;
+import org.apache.commons.lang.StringUtils;
 
 import java.util.List;
 import java.util.Map;
@@ -21,7 +22,8 @@ public class ApiScenarioExportJmxDTO {
     private Map<String, List<String>> projectEnvMap;
 
     public ApiScenarioExportJmxDTO(String name, String jmx) {
-        this.name = name;
+        this.name = StringUtils.replace(name, "/", "");
         this.jmx = jmx;
     }
+
 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -124,7 +124,7 @@ public ApiScenarioReport testEnded(ResultDTO dto) {
         } else if (dto.getRunMode().startsWith("UI")) {
             ApiScenarioReportResultExample example = new ApiScenarioReportResultExample();
             example.createCriteria().andReportIdEqualTo(dto.getReportId());
-            scenarioReport = updateUiScenario(apiScenarioReportResultMapper.selectByExample(example), dto);
+            scenarioReport = updateUiScenario(apiScenarioReportResultMapper.selectByExampleWithBLOBs(example), dto);
         } else {
             scenarioReport = updateScenario(dto);
         }
@@ -484,7 +484,7 @@ public ApiScenarioReport updateScenario(ResultDTO dto) {
         return report;
     }
 
-    public ApiScenarioReport updateUiScenario(List<ApiScenarioReportResult> requestResults, ResultDTO dto) {
+    public ApiScenarioReport updateUiScenario(List<ApiScenarioReportResultWithBLOBs> requestResults, ResultDTO dto) {
         long errorSize = requestResults.stream().filter(requestResult -> StringUtils.equalsIgnoreCase(requestResult.getStatus(), ScenarioStatus.Error.name())).count();
         // 更新报告状态
         String status = getStatus(dto);
@@ -525,7 +525,7 @@ public ApiScenarioReport updateUiScenario(List<ApiScenarioReportResult> requestR
     }
 
     @Nullable
-    private boolean updateUiScenario(List<ApiScenarioReportResult> requestResults, ResultDTO dto, long errorSize, String status, ApiScenarioReport report, UiScenarioWithBLOBs scenario) {
+    private boolean updateUiScenario(List<ApiScenarioReportResultWithBLOBs> requestResults, ResultDTO dto, long errorSize, String status, ApiScenarioReport report, UiScenarioWithBLOBs scenario) {
         if (StringUtils.equalsAnyIgnoreCase(status, ExecuteResult.UN_EXECUTE.toString())) {
             scenario.setLastResult(ScenarioStatus.Fail.name());
         } else {

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMemberValidator.java
Patch:
@@ -32,6 +32,7 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
         if (StringUtils.isBlank(value)) {
             return;
         }
+        value = value.toLowerCase();
         if (userIdMap.containsKey(value) || userNameMap.containsKey(value)) {
             return;
         }
@@ -44,8 +45,8 @@ public Object parse2Key(String keyOrValue, CustomFieldDao customField) {
         if (userIdMap.containsKey(keyOrValue)) {
             return userIdMap.get(keyOrValue);
         }
-        if (userNameMap.containsKey(keyOrValue.toLowerCase())) {
-            return userNameMap.get(keyOrValue.toLowerCase());
+        if (userNameMap.containsKey(keyOrValue)) {
+            return userNameMap.get(keyOrValue);
         }
         return keyOrValue;
     }

File: backend/src/main/java/io/metersphere/api/dto/ApiTestImportRequest.java
Patch:
@@ -39,4 +39,6 @@ public class ApiTestImportRequest {
     private Boolean coverModule;
     // 当前协议
     private String protocol;
+    //上传文件来源，目前用于辨别是否是idea插件
+    private String origin;
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanCaseDTO.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.IssuesDao;
 import io.metersphere.base.domain.TestCaseWithBLOBs;
+import io.metersphere.dto.CustomFieldDao;
 import lombok.Getter;
 import lombok.Setter;
 import java.util.List;
@@ -28,4 +29,5 @@ public class TestPlanCaseDTO extends TestCaseWithBLOBs {
 
     private List<TestCaseTestDTO> list;
     private List<IssuesDao> issueList;
+    private List<CustomFieldDao> fields;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.controller.request.OrderRequest;
 import io.metersphere.controller.request.ResetOrderRequest;
 import io.metersphere.controller.request.member.QueryMemberRequest;
+import io.metersphere.dto.CustomFieldDao;
 import io.metersphere.dto.ProjectConfig;
 import io.metersphere.log.vo.DetailColumn;
 import io.metersphere.log.vo.OperatingLogDetails;
@@ -275,6 +276,8 @@ public TestPlanCaseDTO get(String id) {
         testCaseTestDTOS.forEach(dto -> {
             setTestName(dto);
         });
+        List<CustomFieldDao> fields = testCaseService.getCustomFiledById(testPlanCaseDTO.getCaseId());
+        testPlanCaseDTO.setFields(fields);
         testPlanCaseDTO.setList(testCaseTestDTOS);
         return testPlanCaseDTO;
     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -421,6 +421,9 @@ public ApiDefinitionResult update(SaveApiDefinitionRequest request, List<Multipa
         mockConfigService.updateMockReturnMsgByApi(returnModel);
         FileUtils.createBodyFiles(request.getRequest().getId(), bodyFiles);
 
+        //删除不需要的文件
+        FileUtils.deleteBodyFiles(request.getRequest());
+
         String context = SessionUtils.getUserId().concat(Translator.get("update_api")).concat(":").concat(returnModel.getName());
         Map<String, Object> paramMap = new HashMap<>();
         getParamMap(paramMap, returnModel.getProjectId(), SessionUtils.getUserId(), returnModel.getId(), returnModel.getName(), returnModel.getCreateUser());

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMemberValidator.java
Patch:
@@ -32,8 +32,7 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
         if (StringUtils.isBlank(value)) {
             return;
         }
-        long count = userIdMap.entrySet().stream().filter(e -> StringUtils.equalsAnyIgnoreCase(value,e.getKey(),e.getValue())).count();
-        if(count > 0){
+        if (userIdMap.containsKey(value) || userNameMap.containsKey(value)) {
             return;
         }
         throw new CustomFieldValidateException(String.format(Translator.get("custom_field_member_tip"), customField.getName()));

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -17,9 +17,9 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
         }
 
         for (String item : parse2Array(customField.getName(), value)) {
-            long count = userIdMap.entrySet().stream().filter(e -> StringUtils.equalsAnyIgnoreCase(item,e.getKey(),e.getValue())).count();
-            if(count > 0){
-                return;
+            item = item.toLowerCase();
+            if (!userIdMap.containsKey(item) && !userNameMap.containsKey(item)) {
+                CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_member_tip"), customField.getName()));
             }
         }
         CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_member_tip"), customField.getName()));

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -412,7 +412,7 @@ private void validateCustomField(TestCaseExcelData data, StringBuilder stringBui
                     customData.put(fieldName, customFieldValidator.parse2Key(value.toString(), customField));
                 }
                 if (StringUtils.equalsAny(customField.getType(), CustomFieldType.TEXTAREA.getValue(), CustomFieldType.RICH_TEXT.getValue())) {
-                    data.getTextFieldSet().add(fieldName);
+                    data.getTextFieldSet().add(customField.getId());
                 }
             } catch (CustomFieldValidateException e) {
                 stringBuilder.append(e.getMessage().concat(ERROR_MSG_SEPARATOR));

File: backend/src/main/java/io/metersphere/commons/utils/ServiceUtils.java
Patch:
@@ -111,7 +111,7 @@ public static <T> void getSelectAllIds(T batchRequest, BaseQueryRequest queryReq
             }
             queryRequest.setIds(ids);
             try {
-                Method setIds = batchRequest.getClass().getDeclaredMethod("setIds", List.class);
+                Method setIds = batchRequest.getClass().getMethod("setIds", List.class);
                 setIds.invoke(batchRequest, ids);
             } catch (Exception e) {
                 LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -54,6 +54,7 @@ protected List<ApiDefinitionWithBLOBs> parsePluginFormat(JSONObject testObject,
             List<MsHTTPSamplerProxy> msHTTPSamplerProxies = parseMsHTTPSamplerProxy(testObject, tag, false);
             for (MsHTTPSamplerProxy msHTTPSamplerProxy : msHTTPSamplerProxies) {
                 ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(msHTTPSamplerProxy.getId(), msHTTPSamplerProxy.getName(), msHTTPSamplerProxy.getPath(), msHTTPSamplerProxy.getMethod(), importRequest);
+                apiDefinition.setModulePath(tag);
                 apiDefinition.setProjectId(this.projectId);
                 apiDefinition.setRequest(JSONObject.toJSONString(msHTTPSamplerProxy));
                 apiDefinition.setName(apiDefinition.getPath() + " [" + apiDefinition.getMethod() + "]");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -2340,7 +2340,8 @@ public ApiExportResult export(ApiBatchRequest request, String type) {
             return msApiExportResult;
         } else { //  导出为 Swagger 格式
             Swagger3Parser swagger3Parser = new Swagger3Parser();
-            return swagger3Parser.swagger3Export(apiDefinitions);
+            Project project = projectMapper.selectByPrimaryKey(request.getProjectId());
+            return swagger3Parser.swagger3Export(apiDefinitions, project);
         }
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -564,7 +564,8 @@ public void initProjectEnvironmentByEnvConfig(ApiScenarioReportDTO dto, String e
     private ApiScenarioReportDTO getReport(String reportId, boolean selectContent) {
         ApiScenarioReport mainReport = apiScenarioReportMapper.selectByPrimaryKey(reportId);
         List<ApiScenarioReportResultWithBLOBs> reportResults = null;
-        if (selectContent) {
+        if (selectContent || mainReport.getReportType().startsWith(SystemConstants.TestTypeEnum.UI.name())) {
+            // UI 报告不执行懒加载
             ApiScenarioReportResultExample example = new ApiScenarioReportResultExample();
             example.createCriteria().andReportIdEqualTo(reportId);
             reportResults = reportResultMapper.selectByExampleWithBLOBs(example);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -398,9 +398,6 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                         url = url.replace(this.getPort(), "10990");
                     }
                     try {
-                        if (!StringUtils.startsWithAny(url, "http://", "https://")) {
-                            url = "http://" + url;
-                        }
                         URL urlObject = new URL(url);
                         sampler.setDomain(URLDecoder.decode(urlObject.getHost(), "UTF-8"));
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1979,6 +1979,7 @@ public void exportPlanDbReport(String reportId, String lang, HttpServletResponse
         buildScenarioResponse(report.getScenarioFailureCases());
         buildLoadResponse(report.getLoadAllCases());
         buildUiScenarioResponse(report.getUiAllCases());
+        buildUiScenarioResponse(report.getUiFailureCases());
         report.setLang(lang);
         render(report, response);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtCustomFieldMapper.java
Patch:
@@ -15,4 +15,6 @@ public interface ExtCustomFieldMapper {
     List<String> listIds(@Param("request") QueryCustomFieldRequest request);
 
     void batchInsert(@Param("customFields") List<CustomField> customFields);
+
+    List<CustomField> getWorkspaceIdSystemFields(@Param("workspaceId") String workspaceId, @Param("scene") String scene);
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -66,7 +66,7 @@ public Pager<List<TestCaseDTO>> list(@PathVariable int goPage, @PathVariable int
         return PageUtils.setPageInfo(page, testCaseService.listTestCase(request));
     }
 
-    @PostMapping("/publicList/{goPage}/{pageSize}")
+    @PostMapping("/public/list/{goPage}/{pageSize}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ)
     public Pager<List<TestCaseDTO>> publicList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestCaseRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -31,6 +31,7 @@ public class JmeterDocumentParser implements EngineSourceParser {
     private final static String STRING_PROP = "stringProp";
     private final static String ELEMENT_PROP = "elementProp";
     private final static String BOOL_PROP = "boolProp";
+    private final static String INT_PROP = "intProp";
     private final static String COLLECTION_PROP = "collectionProp";
     private final static String CONCURRENCY_THREAD_GROUP = "com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup";
     private final static String VARIABLE_THROUGHPUT_TIMER = "kg.apc.jmeter.timers.VariableThroughputTimer";
@@ -547,7 +548,7 @@ private void appendBoolProp(Element ele, String name, boolean value) {
     }
 
     private void appendIntProp(Element ele, String name, int value) {
-        Element intProp = ele.addElement(BOOL_PROP);
+        Element intProp = ele.addElement(INT_PROP);
         intProp.addAttribute("name", name);
         intProp.setText(String.valueOf(value));
     }

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -397,6 +397,7 @@ public List<IssuesDao> list(IssuesRequest request) {
                 order.setName("value");
             }
         });
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         List<IssuesDao> issues = extIssuesMapper.getIssues(request);
 
         Map<String, Set<String>> caseSetMap = getCaseSetMap(issues);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -725,6 +725,7 @@ public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request) {
     public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request, boolean isSampleInfo) {
         this.initRequest(request, true);
         setDefaultOrder(request);
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         if (request.getFilters() != null && !request.getFilters().containsKey("status")) {
             request.getFilters().put("status", new ArrayList<>(0));
         }
@@ -782,10 +783,12 @@ public List<TestCaseDTO> publicListTestCase(QueryTestCaseRequest request) {
             MSException.throwException("workspaceId could not be null!");
         }
         request.setProjectId(null);
+        ServiceUtils.setBaseQueryRequestCustomMultipleFields(request);
         List<TestCaseDTO> returnList = extTestCaseMapper.publicList(request);
         ServiceUtils.buildVersionInfo(returnList);
         ServiceUtils.buildProjectInfo(returnList);
         buildUserInfo(returnList);
+        buildCustomField(returnList);
         return returnList;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -597,10 +597,10 @@ public void validate(String shareId, String customData) {
         ShareInfoService shareInfoService = CommonBeanFactory.getBean(ShareInfoService.class);
         shareInfoService.validateExpired(shareInfo);
         if (shareInfo == null) {
-            MSException.throwException("shareInfo not exist!");
+            MSException.throwException("ShareInfo not exist!");
         } else {
             if (!StringUtils.equals(customData, shareInfo.getCustomData())) {
-                MSException.throwException("validate failure!");
+                MSException.throwException("ShareInfo validate failure!");
             }
         }
     }

File: backend/src/main/java/io/metersphere/base/domain/IssuesDao.java
Patch:
@@ -17,7 +17,6 @@ public class IssuesDao extends IssuesWithBLOBs {
     private long caseCount;
     private List<String> caseIds;
     private String caseId;
-    private int totalIssueCount;
     private List<String> tapdUsers;
     private List<String>zentaoBuilds;
     private String zentaoAssigned;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -2,9 +2,11 @@
 
 import io.metersphere.base.domain.Issues;
 import io.metersphere.base.domain.IssuesDao;
+import io.metersphere.base.domain.IssuesStatusCountDao;
 import io.metersphere.dto.CustomFieldItemDTO;
 import io.metersphere.track.dto.CustomFieldResourceCompatibleDTO;
 import io.metersphere.track.dto.PlanReportIssueDTO;
+import io.metersphere.track.request.testcase.IssuesCountRequest;
 import io.metersphere.track.request.testcase.IssuesRequest;
 import org.apache.ibatis.annotations.Param;
 
@@ -26,7 +28,7 @@ public interface ExtIssuesMapper {
 
     List<PlanReportIssueDTO> selectForPlanReport(String planId);
 
-    List<IssuesDao> getCountByStatus(@Param("request") IssuesRequest issuesRequest);
+    List<IssuesStatusCountDao> getCountByStatus(@Param("request") IssuesCountRequest issuesRequest);
 
     List<String> selectIdNotInUuIds(@Param("projectId") String projectId, @Param("platform") String platform, @Param("platformIds") List<String> platformIds);
 

File: backend/src/main/java/io/metersphere/websocket/NotificationWebSocket.java
Patch:
@@ -17,7 +17,7 @@
 import java.util.TimerTask;
 import java.util.concurrent.ConcurrentHashMap;
 
-@ServerEndpoint("/notification/count/{userId}")
+@ServerEndpoint("/notification/count/{userId}/{random}")
 @Component
 public class NotificationWebSocket {
     private static NotificationService notificationService;
@@ -32,7 +32,7 @@ public void setNotificationService(NotificationService notificationService) {
      * 开启连接的操作
      */
     @OnOpen
-    public void onOpen(@PathParam("userId") String userId, Session session) {
+    public void onOpen(@PathParam("userId") String userId, @PathParam("random") double random, Session session) {
         Timer timer = new Timer(true);
         NotificationCenter task = new NotificationCenter(session, userId);
         timer.schedule(task, 0, 10 * 1000);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -499,6 +499,7 @@ public void checkStatus(String testPlanId) { //  检查执行结果，自动更
         statusList.addAll(testPlanApiCaseService.getExecResultByPlanId(testPlanId));
         statusList.addAll(testPlanScenarioCaseService.getExecResultByPlanId(testPlanId));
         statusList.addAll(testPlanLoadCaseService.getStatus(testPlanId));
+        statusList.addAll(testPlanUiScenarioCaseService.getExecResultByPlanId(testPlanId));
         TestPlanWithBLOBs testPlanWithBLOBs = testPlanMapper.selectByPrimaryKey(testPlanId);
         //如果测试计划是已归档状态，不处理
         if (testPlanWithBLOBs.getStatus().equals(TestPlanStatus.Archived.name())) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1892,7 +1892,7 @@ public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
                 String oldTestCaseId = batchCopy.getId();
                 String id = UUID.randomUUID().toString();
                 batchCopy.setId(id);
-                batchCopy.setName(ServiceUtils.getCopyName(batchCopy.getName()));
+                batchCopy.setName("copy_" + batchCopy.getName());
                 if (batchCopy.getName().length() > 255) {
                     batchCopy.setName(batchCopy.getName().substring(0, 250) + batchCopy.getName().substring(batchCopy.getName().length() - 5));
                 }

File: backend/src/main/java/io/metersphere/dto/UiScenarioRequest.java
Patch:
@@ -30,6 +30,4 @@ public class UiScenarioRequest extends BaseQueryRequest {
      * 是否需要查询环境字段
      */
     private boolean selectEnvironment = false;
-    //测试计划关联场景过滤掉步骤为0的场景
-    private String stepTotal;
 }

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionEnvController.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.api.service.ApiDefinitionEnvService;
 import io.metersphere.base.domain.ApiDefinitionEnv;
 import io.metersphere.commons.constants.PermissionConstants;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.*;
 
@@ -20,7 +21,7 @@ public ApiDefinitionEnv get(@PathVariable String id, @PathVariable String projec
     }
 
     @PostMapping(value = "/create")
-    @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_READ_CREATE_API)
+    @RequiresPermissions(value = {PermissionConstants.PROJECT_API_DEFINITION_READ_CREATE_API, PermissionConstants.PROJECT_API_DEFINITION_READ}, logical = Logical.OR)
     public void create(@RequestBody ApiDefinitionEnv request) {
         apiDefinitionEnvService.insert(request);
     }

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -34,6 +34,9 @@ public Object parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
 
         for (int i = 0; i < keyOrValues.size(); i++) {
             String item = keyOrValues.get(i).toLowerCase();
+            if (userIdMap.containsKey(item)) {
+                keyOrValues.set(i, userIdMap.get(item));
+            }
             if (userNameMap.containsKey(item)) {
                 keyOrValues.set(i, userNameMap.get(item));
             }

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.track.validate;
 
-import com.alibaba.fastjson.JSONArray;
 import io.metersphere.commons.exception.CustomFieldValidateException;
 import io.metersphere.dto.CustomFieldDao;
 import io.metersphere.i18n.Translator;
@@ -34,7 +33,7 @@ public Object parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
         List<String> keyOrValues = parse2Array(keyOrValuesStr);
 
         for (int i = 0; i < keyOrValues.size(); i++) {
-            String item = keyOrValues.get(i);
+            String item = keyOrValues.get(i).toLowerCase();
             if (userNameMap.containsKey(item)) {
                 keyOrValues.set(i, userNameMap.get(item));
             }

File: backend/src/main/java/io/metersphere/dto/UiScenarioRequest.java
Patch:
@@ -30,4 +30,6 @@ public class UiScenarioRequest extends BaseQueryRequest {
      * 是否需要查询环境字段
      */
     private boolean selectEnvironment = false;
+    //测试计划关联场景过滤掉步骤为0的场景
+    private String stepTotal;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -2155,7 +2155,7 @@ public void calculateResult(List<ApiDefinitionResult> resList, String projectId,
         if (!resList.isEmpty()) {
             List<String> ids = resList.stream().map(ApiDefinitionResult::getId).collect(Collectors.toList());
             List<ApiComputeResult> results = new ArrayList<>();
-            if (request != null && request.getFilters().containsKey("status") && request.getFilters().get("status").get(0).equals("Trash")) {
+            if (request != null && MapUtils.isNotEmpty(request.getFilters()) && request.getFilters().containsKey("status") && request.getFilters().get("status").get(0).equals("Trash")) {
                 results = extApiDefinitionMapper.selectByIdsAndStatusIsTrash(ids, projectId);
             } else {
                 results = extApiDefinitionMapper.selectByIdsAndStatusIsNotTrash(ids, projectId);

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -702,7 +702,7 @@ private UpdateApiModuleDTO delOtherProtocol(List<ApiDefinitionWithBLOBs> data,
         if (CollectionUtils.isNotEmpty(repeatApiDefinitionWithBLOBs)) {
             oldCaseMap = getOldCaseMap(repeatApiDefinitionWithBLOBs);
         }
-        Map<String, ApiDefinitionWithBLOBs> repeatDataMap = null;
+        Map<String, ApiDefinitionWithBLOBs> repeatDataMap = new HashMap<>();
         Map<String, ApiDefinitionWithBLOBs> optionMap = new HashMap<>();
 
         if (chooseModule != null) {

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -24,6 +24,7 @@
 import io.metersphere.track.service.IssuesService;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang.StringEscapeUtils;
+import org.apache.commons.lang3.ObjectUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.client.HttpClientErrorException;
@@ -408,7 +409,7 @@ private void parseCustomFiled(IssuesUpdateRequest issuesRequest, JSONObject fiel
         customFields.forEach(item -> {
             String fieldName = item.getCustomData();
             if (StringUtils.isNotBlank(fieldName)) {
-                if (item.getValue() != null) {
+                if (ObjectUtils.isNotEmpty(item.getValue())) {
                     if (StringUtils.isNotBlank(item.getType())) {
                         if (StringUtils.equalsAny(item.getType(), "select", "radio", "member")) {
                             JSONObject param = new JSONObject();

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -226,7 +226,7 @@ public void uploadAttachment(String objectType, String objectId, File file) {
         HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(paramMap, authHeader);
 
         try {
-            restTemplate.exchange(requestUrl.getFileUpload(), HttpMethod.POST, requestEntity,
+           restTemplate.exchange(requestUrl.getFileUpload(), HttpMethod.POST, requestEntity,
                     String.class, objectType, objectId, sessionId);
         } catch (Exception e) {
             LogUtil.info("upload zentao attachment error");

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -17,7 +17,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={0}?zentaosid={1}";
     private static final String CREATE_META_DATA="/bug-create-{0}.json?zentaosid={1}";
-    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-{1}-{2}.json?zentaosid={3}";
+    private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload-objectType={1},objectID={2}?zentaosid={3}";
     private static final String FILE_DELETE = "/file-delete-{1}-.yes.json?zentaosid={2}";
     private static final String FILE_DOWNLOAD="/file-download-{1}-.click.json?zentaosid={2}";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
@@ -48,7 +48,7 @@ public ZentaoPathInfoClient(String url) {
         request.setCreateMetaData(getUrl(CREATE_META_DATA));
         request.setProductGet(getUrl(PRODUCT_GET));
         request.setFileDelete(getUrl(FILE_DELETE));
-        request.setFileDelete(getUrl(FILE_DOWNLOAD));
+        request.setFileDownload(getUrl(FILE_DOWNLOAD));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -37,6 +37,8 @@ public interface ExtApiDefinitionMapper {
 
     List<ApiComputeResult> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids, @Param("projectId") String projectId);
 
+    List<ApiComputeResult> selectByIdsAndStatusIsTrash(@Param("ids") List<String> ids, @Param("projectId") String projectId);
+
 //    int removeToGc(@Param("ids") List<String> ids);
 
     int removeToGcByExample(ApiDefinitionExampleWithOperation example);

File: backend/src/main/java/io/metersphere/track/validate/AbstractCustomFieldValidator.java
Patch:
@@ -60,7 +60,7 @@ protected List<String> parse2Array(String name, String value) throws CustomField
             }
             return JSONArray.parseArray(value, String.class);
         } catch (Exception e) {
-            CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_required_tip"), name));
+            CustomFieldValidateException.throwException(String.format(Translator.get("custom_field_array_tip"), name));
         }
         return new ArrayList<>();
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -42,5 +42,5 @@ public interface ExtIssuesMapper {
 
     List<IssuesDao> getIssueCustomFields(List<String> ids);
 
-    List<IssuesDao> getPlatformIssueByIds(@Param("ids") List<String> ids);
+    List<IssuesDao> getPlatformIssueByIds(@Param("ids") List<String> ids, @Param("projectId") String projectId);
 }

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -49,6 +49,8 @@ public class TestCaseExcelData {
     private String priority;
     @ExcelIgnore
     Map<String, Object> customData = new LinkedHashMap<>();
+    @ExcelIgnore
+    Set<String> textFieldSet = new HashSet<>(2);
 
     @ExcelIgnore
     List<String> mergeStepDesc;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -397,7 +397,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                         url = url.replace(this.getPort(), "10990");
                     }
                     try {
-                        if (StringUtils.startsWithAny(url, "http://", "https://")) {
+                        if (!StringUtils.startsWithAny(url, "http://", "https://")) {
                             url = "http://" + url;
                         }
                         URL urlObject = new URL(url);

File: backend/src/main/java/io/metersphere/track/constants/TestCaseStatus.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum TestCaseStatus {
     Prepare("test_case_status_prepare"),
-    Underway("test_case_status_prepare"),
+    Underway("test_case_status_running"),
     Completed("test_case_status_finished");
 
     private String i18nKey;

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -48,7 +48,7 @@ public class TestCaseExcelData {
     @ExcelIgnore
     private String priority;
     @ExcelIgnore
-    Map<String, String> customData = new LinkedHashMap<>();
+    Map<String, Object> customData = new LinkedHashMap<>();
 
     @ExcelIgnore
     List<String> mergeStepDesc;

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1494,7 +1494,7 @@ private List<List<Object>> parseExcelData2List(List<List<String>> headListParams
 
         for (TestCaseExcelData model : data) {
             List<Object> fields = new ArrayList<>();
-            Map<String, String> customDataMaps = Optional.ofNullable(model.getCustomData())
+            Map<String, Object> customDataMaps = Optional.ofNullable(model.getCustomData())
                     .orElse(new HashMap<>());
             Map<String, String> otherFieldMaps = Optional.ofNullable(model.getOtherFields())
                     .orElse(new HashMap<>());
@@ -1507,7 +1507,7 @@ private List<List<Object>> parseExcelData2List(List<List<String>> headListParams
                     }
                 }
                 if (!isSystemField) {
-                    String value = customDataMaps.get(head);
+                    Object value = customDataMaps.get(head);
                     if (value == null) {
                         value = otherFieldMaps.get(head);
                     }
@@ -1646,7 +1646,7 @@ private void buildExportCustomField(Map<String, Map<String, String>> customSelec
                                         Map<String, String> customNameMap, TestCaseDTO t, TestCaseExcelData data, Set<String> textFields) {
         try {
             List<CustomFieldResource> fields = customFieldTestCaseService.getByResourceId(t.getId());
-            Map<String, String> map = new HashMap<>();
+            Map<String, Object> map = new HashMap<>();
             for (int index = 0; index < fields.size(); index++) {
                 CustomFieldResource field = fields.get(index);
                 //进行key value对换

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMemberValidator.java
Patch:
@@ -40,7 +40,7 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
     }
 
     @Override
-    public String parse2Key(String keyOrValue, CustomFieldDao customField) {
+    public Object parse2Key(String keyOrValue, CustomFieldDao customField) {
         if (userNameMap.containsKey(keyOrValue)) {
             return userNameMap.get(keyOrValue);
         }

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldSelectValidator.java
Patch:
@@ -54,7 +54,7 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
     }
 
     @Override
-    public String parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
+    public Object parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
         Map<String, String> textMap = optionTextMapCache.get(customField.getId());
         if (MapUtils.isNotEmpty(textMap) && textMap.containsKey(keyOrValuesStr)) {
             return textMap.get(keyOrValuesStr);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1055,8 +1055,6 @@ public String run(String testPlanID, String projectID, String userId, String tri
     private String transformationPerfTriggerMode(String triggerMode) {
         if (StringUtils.equalsIgnoreCase(triggerMode, ReportTriggerMode.SCHEDULE.name())) {
             return ReportTriggerMode.TEST_PLAN_SCHEDULE.name();
-        } else if (StringUtils.equalsIgnoreCase(triggerMode, ReportTriggerMode.MANUAL.name())) {
-            return ReportTriggerMode.TEST_PLAN_MANUAL.name();
         } else if (StringUtils.equalsIgnoreCase(triggerMode, ReportTriggerMode.API.name())) {
             return ReportTriggerMode.TEST_PLAN_API.name();
         } else {

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMemberValidator.java
Patch:
@@ -32,7 +32,8 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
         if (StringUtils.isBlank(value)) {
             return;
         }
-        if (userIdMap.containsKey(value) || userNameMap.containsKey(value)) {
+        long count = userIdMap.entrySet().stream().filter(e -> StringUtils.equalsAnyIgnoreCase(value,e.getKey(),e.getValue())).count();
+        if(count > 0){
             return;
         }
         throw new CustomFieldValidateException(String.format(Translator.get("custom_field_member_tip"), customField.getName()));

File: backend/src/main/java/io/metersphere/api/service/ApiCaseBatchSyncService.java
Patch:
@@ -5,10 +5,12 @@
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.mapper.ApiTestCaseMapper;
 
+import java.util.Map;
+
 public interface ApiCaseBatchSyncService {
     void oneClickSyncCase(String apiUpdateRule, ApiDefinitionWithBLOBs apiDefinitionWithBLOBs, ApiTestCaseMapper apiTestCaseMapper, ApiTestCaseWithBLOBs testCases);
 
-    void sendApiNotice(ApiDefinitionWithBLOBs apiDefinitionWithBLOBs);
+    void sendApiNotice(ApiDefinitionWithBLOBs apiDefinitionWithBLOBs, Map<String, Object> paramMap);
 
     void sendCaseNotice(ApiTestCase apiTestCase);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionResult.java
Patch:
@@ -33,4 +33,6 @@ public class ApiDefinitionResult extends ApiDefinitionWithBLOBs {
     private String versionName;
 
     private Boolean versionEnable;
+
+    private boolean updated;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -19,4 +19,5 @@ public class ApiTestCaseDTO extends ApiTestCase {
     private String environment;
     private String execResult;
     private String versionName;
+    private boolean updated;
 }

File: backend/src/main/java/io/metersphere/notice/sender/impl/MailNoticeSender.java
Patch:
@@ -92,7 +92,7 @@ private void send(String subject, String context, String[] users, String[] cc) t
 
         LogUtil.debug("发件人地址" + javaMailSender.getUsername());
         LogUtil.debug("helper" + helper);
-        helper.setSubject("【MeterSphere】" + subject);
+        helper.setSubject("【MeterSphere通知】" + subject);
 
         LogUtil.info("收件人地址: {}", Arrays.asList(users));
         helper.setText(context, true);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -397,6 +397,9 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                         url = url.replace(this.getPort(), "10990");
                     }
                     try {
+                        if (StringUtils.startsWithAny(url, "http://", "https://")) {
+                            url = "http://" + url;
+                        }
                         URL urlObject = new URL(url);
                         sampler.setDomain(URLDecoder.decode(urlObject.getHost(), "UTF-8"));
 

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -30,8 +30,10 @@ public class TestPlanTestCaseController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TestPlanCaseDTO>> getTestPlanCases(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestPlanCaseRequest request) {
+        QueryTestPlanCaseRequest paramRequest = testPlanTestCaseService.setCustomNumOrderParam(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        return PageUtils.setPageInfo(page, testPlanTestCaseService.list(request));
+        List<TestPlanCaseDTO> list = testPlanTestCaseService.list(paramRequest);
+        return PageUtils.setPageInfo(page, list);
     }
 
     /*jenkins测试计划下全部用例*/

File: backend/src/main/java/io/metersphere/notice/sender/impl/MailNoticeSender.java
Patch:
@@ -92,7 +92,7 @@ private void send(String subject, String context, String[] users, String[] cc) t
 
         LogUtil.debug("发件人地址" + javaMailSender.getUsername());
         LogUtil.debug("helper" + helper);
-        helper.setSubject("【MeterSphere】 " + subject);
+        helper.setSubject("【MeterSphere】" + subject);
 
         LogUtil.info("收件人地址: {}", Arrays.asList(users));
         helper.setText(context, true);

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -406,11 +406,11 @@ private void validateCustomField(TestCaseExcelData data, StringBuilder stringBui
                 customData.put(fieldName, customFieldValidator.parse2Key(value, customField));
             }
             if (StringUtils.equals(fieldName, TestCaseImportFiled.STATUS.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE))) {
-                data.setStatus(value);
+                data.setStatus(customData.get(fieldName));
             } else if (StringUtils.equals(fieldName, TestCaseImportFiled.PRIORITY.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE))) {
-                data.setPriority(value);
+                data.setPriority(customData.get(fieldName));
             } else if (StringUtils.equals(fieldName, TestCaseImportFiled.MAINTAINER.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE))) {
-                data.setMaintainer(value);
+                data.setMaintainer(customData.get(fieldName));
             }
         }
     }

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -196,7 +196,7 @@ public void invoke(Map<Integer, String> data, AnalysisContext analysisContext) {
             ExcelErrData excelErrData = new ExcelErrData(testCaseExcelData, rowIndex,
                     Translator.get("number")
                             .concat(" ")
-                            .concat(rowIndex.toString()).concat(" ")
+                            .concat(String.valueOf(rowIndex  + 1)).concat(" ")
                             .concat(Translator.get("row"))
                             .concat(Translator.get("error"))
                             .concat("：")

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldMultipleMemberValidator.java
Patch:
@@ -26,6 +26,9 @@ public void validate(CustomFieldDao customField, String value) throws CustomFiel
 
     @Override
     public String parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
+        if (StringUtils.isBlank(keyOrValuesStr)) {
+            return "";
+        }
         List<String> keyOrValues = JSONArray.parseArray(keyOrValuesStr, String.class);
 
         for (int i = 0; i < keyOrValues.size(); i++) {

File: backend/src/main/java/io/metersphere/track/validate/CustomFieldSelectValidator.java
Patch:
@@ -68,7 +68,7 @@ public String parse2Key(String keyOrValuesStr, CustomFieldDao customField) {
      *
      * @param customField
      */
-    private void prepareCatch(CustomFieldDao customField) {
+    protected void prepareCatch(CustomFieldDao customField) {
         if (optionValueSetCache.get(customField.getId()) == null) {
             List<CustomFieldOption> options = getOptions(customField.getId(), customField.getOptions());
 

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -289,8 +289,7 @@ public IssueTemplateCopyDTO getCopyProject(String userId, String workspaceId) {
         while (iterator.hasNext()) {
             ProjectDTO projectDto = iterator.next();
             UserGroupExample example = new UserGroupExample();
-            example.createCriteria().andSourceIdEqualTo(projectDto.getId())
-                    .andUserIdEqualTo(SessionUtils.getUserId()).andGroupIdIn(Arrays.asList(UserGroupConstants.PROJECT_ADMIN, UserGroupConstants.PROJECT_MEMBER));
+            example.createCriteria().andSourceIdEqualTo(projectDto.getId()).andUserIdEqualTo(SessionUtils.getUserId());
             List<UserGroup> userGroups = userGroupMapper.selectByExample(example);
             List<GroupPermissionDTO> groupPermissions = getPermissionsByUserGroups(userGroups);
             boolean isShow = false;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -103,7 +103,8 @@ public String getContentValue() {
 
     public String getCondition() {
         String key = getContentValue();
-        String variable = (StringUtils.isEmpty(key) || key.equals(this.variable)) ? "\"" + this.variable + "\"" : "vars.get('" + key + "')";
+        String variable = (StringUtils.isEmpty(key) || key.equals(this.variable)) || key.startsWith("__V") ?
+                StringUtils.join("\"", this.variable, "\"") : StringUtils.join("vars.get('", key, "')");
         String operator = this.operator;
         String value;
         if (StringUtils.equals(operator, "<") || StringUtils.equals(operator, ">")) {

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -40,13 +40,13 @@ public Pager<List<IssueTemplate>> list(@PathVariable int goPage, @PathVariable i
     }
 
     @GetMapping("/delete/{id}")
-    @MsAuditLog(module = OperLogModule.WORKSPACE_TEMPLATE_SETTINGS_ISSUE, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#id)", msClass = IssueTemplateService.class)
+    @MsAuditLog(module = OperLogModule.PROJECT_TEMPLATE_MANAGEMENT, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#id)", msClass = IssueTemplateService.class)
     public void delete(@PathVariable(value = "id") String id) {
         issueTemplateService.delete(id);
     }
 
     @PostMapping("/update")
-    @MsAuditLog(module = OperLogModule.WORKSPACE_TEMPLATE_SETTINGS_ISSUE, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id,#request.customFields)", content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
+    @MsAuditLog(module = OperLogModule.PROJECT_TEMPLATE_MANAGEMENT, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id, #request.customFields)", content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
     public void update(@RequestBody UpdateIssueTemplateRequest request) {
         issueTemplateService.update(request);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -164,4 +164,6 @@ public interface ExtTestCaseMapper {
     int bathUpdateByCondition(@Param("request") QueryTestCaseRequest condition, @Param("record") TestCaseWithBLOBs testCaseWithBLOBs);
 
     List<TestCaseNodeDTO> getWorkspaceCountNodes(@Param("request") QueryTestCaseRequest request);
+
+    void updateNoModuleTrashNodeToDefault(@Param("projectId") String projectId, @Param("defaultNodeId") String defaultNodeId, @Param("defaultNodePath") String defaultNodePath);
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -280,6 +280,9 @@ public List<TestCaseNodeDTO> getPublicCaseNode(String workspaceId, QueryTestCase
     }
 
     public List<TestCaseNodeDTO> getTrashCaseNode(String projectId, QueryTestCaseRequest request) {
+        // 初始化回收站中模块被删除的用例, 挂在默认未规划模块, 获取回收站模块节点数据
+        TestCaseNode defaultNode = this.getDefaultNode(projectId);
+        extTestCaseMapper.updateNoModuleTrashNodeToDefault(projectId, defaultNode.getId(), defaultNode.getName());
         request.setProjectId(projectId);
         request.setNodeIds(null);
         List<TestCaseNodeDTO> countModules = extTestCaseMapper.getCountNodes(request);

File: backend/src/main/java/io/metersphere/commons/constants/ApiTestConstants.java
Patch:
@@ -3,4 +3,5 @@
 public class ApiTestConstants {
     public static final String JAR_PATH = "JAR_PATH";
     public static final String DEF_MODULE = "DEF_MODULE";
+    public static final String ROOT = "root";
 }

File: backend/src/main/java/io/metersphere/metadata/service/FileMetadataService.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.base.mapper.ext.ExtFileMetadataMapper;
+import io.metersphere.commons.constants.ApiTestConstants;
 import io.metersphere.commons.constants.StorageConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.FileUtils;
@@ -412,7 +413,7 @@ private void initBase(FileMetadata fileMetadata) {
         if (StringUtils.isEmpty(fileMetadata.getProjectId())) {
             fileMetadata.setProjectId(SessionUtils.getCurrentProjectId());
         }
-        if (StringUtils.isEmpty(fileMetadata.getModuleId())) {
+        if (StringUtils.isEmpty(fileMetadata.getModuleId()) || StringUtils.equals(ApiTestConstants.ROOT, fileMetadata.getModuleId())) {
             fileMetadata.setModuleId(fileModuleService.getDefaultNodeId(fileMetadata.getProjectId()));
         }
         fileMetadata.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/commons/constants/ApiTestConstants.java
Patch:
@@ -3,5 +3,4 @@
 public class ApiTestConstants {
     public static final String JAR_PATH = "JAR_PATH";
     public static final String DEF_MODULE = "DEF_MODULE";
-    public static final String DEF_MODULE_ID = "moduleIds";
 }

File: backend/src/main/java/io/metersphere/dto/ProjectConfig.java
Patch:
@@ -29,5 +29,5 @@ public class ProjectConfig {
     private String triggerUpdate;
     private Boolean openUpdateTime = false;
     private String openUpdateRuleTime;
-    private Boolean openUpdateRule = null;
+    private Boolean openUpdateRule;
 }

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -352,7 +352,7 @@ public List<IssueTemplate> copy(CopyIssueTemplateRequest request) {
             boolean isExistTargetIssueTemplate = targetIssueTemplates.stream().anyMatch(issueTemplate -> StringUtils.equals(sourceIssueTemplate.getName(), issueTemplate.getName()));
             String recordName;
             if (isExistTargetIssueTemplate) {
-                recordName = sourceIssueTemplate.getName().concat("_copy");
+                recordName = sourceIssueTemplate.getName().concat("_copy").concat(UUID.randomUUID().toString().substring(0, 8));
             } else {
                 recordName = sourceIssueTemplate.getName();
             }

File: backend/src/main/java/io/metersphere/dto/ProjectConfig.java
Patch:
@@ -29,5 +29,5 @@ public class ProjectConfig {
     private String triggerUpdate;
     private Boolean openUpdateTime = false;
     private String openUpdateRuleTime;
-    private Boolean openUpdateRule = false;
+    private Boolean openUpdateRule = null;
 }

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -81,7 +81,7 @@ public List<List<String>> getHead(boolean needNum, List<CustomFieldDao> customFi
                 if (StringUtils.equalsAny(dto.getName(),
                         TestCaseImportFiled.PRIORITY.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE),
                         TestCaseImportFiled.STATUS.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE),
-                        TestCaseImportFiled.MAINTAINER.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE).concat("(ID)"))) {
+                        TestCaseImportFiled.MAINTAINER.getFiledLangMap().get(Locale.SIMPLIFIED_CHINESE))) {
                     continue;
                 }
                 heads.add(new ArrayList<>() {{

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceReportController.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.performance.controller.request.ReportRequest;
 import io.metersphere.performance.dto.LoadTestExportJmx;
 import io.metersphere.performance.service.PerformanceReportService;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.*;
 
@@ -35,7 +36,7 @@ public class PerformanceReportController {
     private PerformanceReportService performanceReportService;
 
     @PostMapping("/recent/{count}")
-    @RequiresPermissions("PROJECT_PERFORMANCE_REPORT:READ")
+    @RequiresPermissions(value = {"PROJECT_PERFORMANCE_REPORT:READ", "PROJECT_PERFORMANCE_HOME:READ"}, logical = Logical.OR)
     public List<ReportDTO> recentProjects(@PathVariable int count, @RequestBody ReportRequest request) {
         // 最近 `count` 个项目
         PageHelper.startPage(1, count);

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -32,7 +32,6 @@
 import io.metersphere.track.request.testcase.AuthUserIssueRequest;
 import io.metersphere.track.request.testcase.IssuesRequest;
 import io.metersphere.track.request.testcase.IssuesUpdateRequest;
-import io.metersphere.track.request.testcase.TestCaseBatchRequest;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -142,13 +141,15 @@ public IssuesWithBLOBs addIssues(IssuesUpdateRequest issuesRequest, List<Multipa
         return issues;
     }
 
-    public void updateIssues(IssuesUpdateRequest issuesRequest) {
+    public IssuesWithBLOBs updateIssues(IssuesUpdateRequest issuesRequest) {
         List<AbstractIssuePlatform> platformList = getUpdatePlatforms(issuesRequest);
         platformList.forEach(platform -> {
             platform.updateIssue(issuesRequest);
         });
         customFieldIssuesService.editFields(issuesRequest.getId(), issuesRequest.getEditFields());
         customFieldIssuesService.addFields(issuesRequest.getId(), issuesRequest.getAddFields());
+
+        return getIssue(issuesRequest.getId());
     }
 
     public void saveFollows(String issueId, List<String> follows) {

File: backend/src/main/java/io/metersphere/base/domain/TestCase.java
Patch:
@@ -33,8 +33,6 @@ public class TestCase implements Serializable {
 
     private Integer num;
 
-    private String otherTestName;
-
     private String reviewStatus;
 
     private String tags;

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -19,7 +19,6 @@ public class TestCaseReference {
         testCaseColumns.put("remark", "备注");
         testCaseColumns.put("customNum", "ID");
         testCaseColumns.put("steps", "用例步骤");
-        testCaseColumns.put("other_test_name", "其他名称");
         testCaseColumns.put("review_status", "评审状态");
         testCaseColumns.put("tags", "标签");
         testCaseColumns.put("demand_name", "需求名称");
@@ -33,4 +32,4 @@ public class TestCaseReference {
         testCaseColumns.put("ms-dff-col", "tags,steps");
 
     }
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -330,10 +330,10 @@ public IssueTemplateCopyDTO getCopyProject(String userId, String workspaceId) {
 
     public List<IssueTemplate> copy(CopyIssueTemplateRequest request) {
         if (CollectionUtils.isEmpty(request.getTargetProjectIds())) {
-            MSException.throwException("cannot copy, target project not checked");
+            MSException.throwException(Translator.get("target_issue_template_not_checked"));
         }
         if (request.getId() == null) {
-            MSException.throwException("copy error, source project is empty");
+            MSException.throwException(Translator.get("source_issue_template_is_empty"));
         }
         List<IssueTemplate> issueTemplateRecords = new ArrayList<>();
         List<CustomField> customFieldRecords = new ArrayList<>();

File: backend/src/main/java/io/metersphere/base/domain/TestPlanReport.java
Patch:
@@ -37,6 +37,8 @@ public class TestPlanReport implements Serializable {
 
     private Boolean isNew;
 
+    private Boolean isUiScenarioExecuting;
+
     private String runInfo;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/track/service/TestPlanMessageService.java
Patch:
@@ -58,7 +58,7 @@ public void checkTestPlanStatusAndSendMessage(TestPlanReport report, TestPlanRep
         if (testPlanReportContent != null) {
             report = testPlanReportService.checkTestPlanReportHasErrorCase(report, testPlanReportContent);
         }
-        if (!report.getIsApiCaseExecuting() && !report.getIsPerformanceExecuting() && !report.getIsScenarioExecuting()) {
+        if (!report.getIsApiCaseExecuting() && !report.getIsPerformanceExecuting() && !report.getIsScenarioExecuting() && !report.getIsUiScenarioExecuting()) {
             //更新TestPlan状态为完成
             TestPlanWithBLOBs testPlan = testPlanMapper.selectByPrimaryKey(report.getTestPlanId());
             if (testPlan != null && !StringUtils.equals(testPlan.getStatus(), TestPlanStatus.Completed.name())) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -32,6 +32,7 @@
 import io.metersphere.plugin.core.MsTestElement;
 import io.metersphere.service.EnvironmentGroupProjectService;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.config.Arguments;
 import org.apache.jmeter.config.CSVDataSet;
@@ -417,7 +418,7 @@ public static void dataSetDomain(JSONArray hashTree, MsParameter msParameter) {
                 } else if (element != null && element.get("type").toString().equals("HTTPSamplerProxy")) {
                     MsHTTPSamplerProxy httpSamplerProxy = JSON.toJavaObject(element, MsHTTPSamplerProxy.class);
                     if (httpSamplerProxy != null
-                            && (!httpSamplerProxy.isCustomizeReq() || (httpSamplerProxy.isCustomizeReq() && httpSamplerProxy.getIsRefEnvironment()))) {
+                            && (!httpSamplerProxy.isCustomizeReq() || (httpSamplerProxy.isCustomizeReq() && BooleanUtils.isTrue(httpSamplerProxy.getIsRefEnvironment())))) {
                         // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
                         if (element != null && StringUtils.isNotEmpty(element.getString("hashTree"))) {
                             LinkedList<MsTestElement> elements = mapper.readValue(element.getString("hashTree"),

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -215,7 +215,6 @@ public TestCaseWithBLOBs addTestCase(EditTestCaseRequest request) {
             request.setCustomNum(request.getNum().toString());
         }
         request.setReviewStatus(TestCaseReviewStatus.Prepare.name());
-        request.setStatus(TestCaseReviewStatus.Prepare.name());
         request.setDemandId(request.getDemandId());
         request.setDemandName(request.getDemandName());
         request.setCreateUser(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/excel/handler/FunctionCaseTemplateWriteHandler.java
Patch:
@@ -120,7 +120,7 @@ public void afterRowDispose(RowWriteHandlerContext context) {
                             list = caseLevelAndStatusValueMap.get("caseStatus");
                         }
                         if (!CollectionUtils.isEmpty(list)) {
-                            Comment comment = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, index, 0, (short) 3, 1));
+                            Comment comment = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, index, 0, index + 3, 1));
                             comment.setString(new XSSFRichTextString(Translator.get("options") + JSONArray.toJSONString(list)));
                             sheet.getRow(0).getCell(1).setCellComment(comment);
                         }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -39,7 +39,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
         if (StringUtils.isNotBlank(request.getSwaggerUrl())) {
             try {
                 //  使用 url 导入 swagger
-                swagger = new SwaggerParser().read(request.getSwaggerUrl(), auths, true);
+                swagger = new SwaggerParser().read(request.getSwaggerUrl(), auths, false);
             } catch (Exception e) {
                 LoggerUtil.error(e);
                 MSException.throwException(e.getMessage());

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -158,7 +158,7 @@ public Pager<List<User>> getMemberList(@PathVariable int goPage, @PathVariable i
     }
 
     @PostMapping("/project/member/list/{goPage}/{pageSize}")
-    @RequiresPermissions(value = {PermissionConstants.PROJECT_USER_READ, PermissionConstants.WORKSPACE_USER_READ}, logical = Logical.OR)
+    @RequiresPermissions(PermissionConstants.PROJECT_USER_READ)
     public Pager<List<User>> getProjectMemberList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryMemberRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, userService.getProjectMemberList(request));

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -158,7 +158,7 @@ public Pager<List<User>> getMemberList(@PathVariable int goPage, @PathVariable i
     }
 
     @PostMapping("/project/member/list/{goPage}/{pageSize}")
-    @RequiresPermissions(PermissionConstants.PROJECT_USER_READ)
+    @RequiresPermissions(value = {PermissionConstants.PROJECT_USER_READ, PermissionConstants.WORKSPACE_USER_READ}, logical = Logical.OR)
     public Pager<List<User>> getProjectMemberList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryMemberRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, userService.getProjectMemberList(request));

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -592,6 +592,7 @@ private void deleteApiScenarioReport(List<String> scenarioIds) {
         List<String> ids = list.stream().map(ApiScenarioReport::getId).collect(Collectors.toList());
         APIReportBatchRequest reportRequest = new APIReportBatchRequest();
         reportRequest.setIds(ids);
+        reportRequest.setCaseType(ReportTypeConstants.SCENARIO.name());
         apiReportService.deleteAPIReportBatch(reportRequest);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -994,7 +994,7 @@ private void importCase(ApiDefinitionWithBLOBs apiDefinition, ApiTestCaseMapper
             apiTestCaseWithBLOBs.setApiDefinitionId(apiDefinition.getId());
             apiTestCaseWithBLOBs.setCreateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
             apiTestCaseWithBLOBs.setUpdateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
-            if (apiDefinition.getToBeUpdated() != null && !apiTestCaseWithBLOBs.getVersionId().equals("cover")) {
+            if (apiDefinition.getToBeUpdated() != null && !StringUtils.equalsIgnoreCase(apiTestCaseWithBLOBs.getVersionId(), "cover")) {
                 apiTestCaseWithBLOBs.setToBeUpdated(true);
                 //TODO:check setting
             } else {
@@ -1153,7 +1153,7 @@ private void _importCreate(List<ApiDefinitionWithBLOBs> sameRequest, ApiDefiniti
                     if (CollectionUtils.isEmpty(caseList)) {
                         apiDefinition.setToBeUpdated(false);
                     } else {
-                        List<ApiTestCaseWithBLOBs> cover = caseList.stream().filter(t -> !t.getVersionId().equals("cover") && StringUtils.isNotBlank(t.getId())).collect(Collectors.toList());
+                        List<ApiTestCaseWithBLOBs> cover = caseList.stream().filter(t -> !StringUtils.equalsIgnoreCase("cover", t.getVersionId()) && StringUtils.isNotBlank(t.getId())).collect(Collectors.toList());
                         if (CollectionUtils.isEmpty(cover)) {
                             apiDefinition.setToBeUpdated(false);
                         } else {

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -1346,7 +1346,7 @@ private Map<String, ApiTestCaseWithBLOBs> getDistinctCaseNameMap(Map<String, Lis
         }
         List<ApiTestCaseWithBLOBs> caseWithBLOBs = definitionIdCaseMAp.get(apiDefinitionWithBLOBs.getId());
         if (CollectionUtils.isNotEmpty(caseWithBLOBs)) {
-            return caseWithBLOBs.stream().filter(t -> !t.getVersionId().equals("create_repeat")).collect(Collectors.toMap(ApiTestCase::getName, testCase -> testCase));
+            return caseWithBLOBs.stream().filter(t -> !StringUtils.equalsIgnoreCase("create_repeat", t.getVersionId())).collect(Collectors.toMap(ApiTestCase::getName, testCase -> testCase));
         } else {
             return null;
         }

File: backend/src/main/java/io/metersphere/track/service/TestReviewTestCaseService.java
Patch:
@@ -217,6 +217,7 @@ private void setTestName(TestCaseTestDTO dto) {
 
     public void editTestCaseBatchStatus(TestReviewCaseBatchRequest request) {
         List<String> ids = request.getIds();
+        request.getCondition().setOrder(null);
         if (request.getCondition() != null && request.getCondition().isSelectAll()) {
             ids = extTestReviewCaseMapper.selectTestCaseIds(request.getCondition());
             if (request.getCondition().getUnSelectIds() != null) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -992,6 +992,8 @@ private void importCase(ApiDefinitionWithBLOBs apiDefinition, ApiTestCaseMapper
         for (int i = 0; i < caseList.size(); i++) {
             ApiTestCaseWithBLOBs apiTestCaseWithBLOBs = caseList.get(i);
             apiTestCaseWithBLOBs.setApiDefinitionId(apiDefinition.getId());
+            apiTestCaseWithBLOBs.setCreateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
+            apiTestCaseWithBLOBs.setUpdateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
             if (apiDefinition.getToBeUpdated() != null && !apiTestCaseWithBLOBs.getVersionId().equals("cover")) {
                 apiTestCaseWithBLOBs.setToBeUpdated(true);
                 //TODO:check setting

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -185,7 +185,8 @@ private synchronized void send(JmeterRunRequestDTO request) {
 
 
     public void run(JmeterRunRequestDTO request) {
-        if (request.getPool().isPool()) {
+        //UI 测试只走本地 ms，资源池交给 selenium-grid 本身实现
+        if (request.getPool().isPool() && StringUtils.isNotBlank(request.getRunMode()) && !request.getRunMode().startsWith("UI")) {
             this.runNode(request);
         } else {
             CommonBeanFactory.getBean(ExecThreadPoolExecutor.class).addTask(request);

File: backend/src/main/java/io/metersphere/api/exec/perf/PerfExecService.java
Patch:
@@ -61,8 +61,7 @@ public Map<String, String> run(String planReportId, RunModeConfigDTO config, Str
             apiExecutionQueueService.add(responseMap, config.getResourcePoolId(), ApiRunMode.TEST_PLAN_PERFORMANCE_TEST.name(),
                     planReportId, config.getReportType(), config.getMode(), config);
         }
-        if (CollectionUtils.isEmpty(requests) && StringUtils.isNotEmpty(planReportId)) {
-            apiExecutionQueueService.testPlanReportTestEnded(planReportId);
+        if (CollectionUtils.isEmpty(requests)) {
             return responseMap;
         }
         LoggerUtil.info("开始执行性能测试任务");

File: backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -443,7 +443,7 @@ private void addNotSystemGroupUser(Group group, List<String> userIds, List<Strin
             if (user == null) {
                 continue;
             }
-            checkQuota(quotaService, group.getType(), sourceIds, 1);
+            checkQuota(quotaService, group.getType(), sourceIds, Collections.singletonList(userId));
             SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
             UserGroupMapper mapper = sqlSession.getMapper(UserGroupMapper.class);
             UserGroupExample userGroupExample = new UserGroupExample();
@@ -465,9 +465,9 @@ private void addNotSystemGroupUser(Group group, List<String> userIds, List<Strin
         }
     }
 
-    private void checkQuota(QuotaService quotaService, String type, List<String> sourceIds, int size) {
+    private void checkQuota(QuotaService quotaService, String type, List<String> sourceIds, List<String> userIds) {
         if (quotaService != null) {
-            Map<String, Integer> addMemberMap = sourceIds.stream().collect(Collectors.toMap( id -> id, id -> size));
+            Map<String, List<String>> addMemberMap = sourceIds.stream().collect(Collectors.toMap( id -> id, id -> userIds));
             quotaService.checkMemberCount(addMemberMap, type);
         }
     }

File: backend/src/main/java/io/metersphere/service/QuotaService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.performance.request.TestPlanRequest;
 
 import java.math.BigDecimal;
+import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
@@ -62,10 +63,10 @@ public interface QuotaService {
 
     /**
      * 检查向某资源添加人员时是否超额
-     * @param map 资源ID:添加人数
+     * @param map 资源ID:添加用户ID列表
      * @param type 检查类型 PROJECT/WORKSPACE
      */
-    void checkMemberCount(Map<String, Integer> map, String type);
+    void checkMemberCount(Map<String, List<String>> map, String type);
 
     /**
      * 更新VumUsed配额

File: backend/src/main/java/io/metersphere/controller/WorkspaceController.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.dto.WorkspaceMemberDTO;
 import io.metersphere.dto.WorkspaceResource;
 import io.metersphere.log.annotation.MsAuditLog;
+import io.metersphere.security.session.RefreshSession;
 import io.metersphere.service.UserService;
 import io.metersphere.service.WorkspaceService;
 import org.apache.shiro.authz.annotation.Logical;
@@ -46,6 +47,7 @@ public List<Workspace> getWorkspaceList() {
     @PostMapping("special/add")
     @MsAuditLog(module = OperLogModule.SYSTEM_WORKSPACE, type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#workspace.id)", msClass = WorkspaceService.class)
     @RequiresPermissions(PermissionConstants.SYSTEM_WORKSPACE_READ_CREATE)
+    @RefreshSession
     public Workspace addWorkspaceByAdmin(@RequestBody Workspace workspace) {
         return workspaceService.addWorkspaceByAdmin(workspace);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtCustomFieldTemplateMapper.java
Patch:
@@ -13,4 +13,6 @@ public interface ExtCustomFieldTemplateMapper {
     List<CustomFieldTemplateDao> list(@Param("request") CustomFieldTemplate request);
 
     List<CustomFieldDao> lisSimple(@Param("request") CustomFieldTemplate request);
+
+    List<String> getSystemCustomField(@Param("templateId") String templateId, @Param("fieldName") String fieldName);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -94,7 +94,7 @@ public interface ExtTestCaseMapper {
 
     List<TrackCountResult> countRelevanceMaintainer(@Param("projectId") String projectId);
 
-    int getTestPlanBug(@Param("planId") String planId);
+    List<String> getTestPlanBug(@Param("planId") String planId);
 
     int getTestPlanCase(@Param("planId") String planId);
 

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -13,7 +13,8 @@
 public class TestPlanUtils {
 
     public static void buildStatusResultMap(Map<String, TestCaseReportStatusResultDTO> reportStatusResultMap, String result) {
-        if (StringUtils.isBlank(result)) {
+        // unexecute 存在于 ui 执行结果中
+        if (StringUtils.isBlank(result) || StringUtils.equals("UnExecute", result)) {
             result = TestPlanTestCaseStatus.Prepare.name();
         }
         TestCaseReportStatusResultDTO statusResult = reportStatusResultMap.get(result);

File: backend/src/main/java/io/metersphere/security/MsPermissionAnnotationMethodInterceptor.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.commons.utils.SessionUtils;
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.lang3.reflect.FieldUtils;
 import org.apache.commons.lang3.reflect.MethodUtils;
 import org.apache.shiro.aop.AnnotationResolver;
 import org.apache.shiro.aop.MethodInvocation;
@@ -64,7 +65,7 @@ public static boolean isExistField(Object obj, String fieldName) {
             return false;
         }
         //获取这个类的所有属性
-        Field[] fields = obj.getClass().getDeclaredFields();
+        Field[] fields = FieldUtils.getAllFields(obj.getClass());
         boolean flag = false;
         //循环遍历所有的fields
         for (Field field : fields) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -515,6 +515,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         } else {
             scenario.setVersionId(request.getVersionId());
         }
+        scenario.setLastResult("");
         return scenario;
     }
 
@@ -1325,6 +1326,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
             scenarioWithBLOBs.setUserId(request.getUserId());
         }
         scenarioWithBLOBs.setDescription(request.getDescription());
+        scenarioWithBLOBs.setLastResult("");
 
         Boolean openCustomNum = apiTestImportRequest.getOpenCustomNum();
         List<ApiScenario> list = new ArrayList<>();

File: backend/src/main/java/io/metersphere/dto/CustomFieldItemDTO.java
Patch:
@@ -8,5 +8,6 @@ public class CustomFieldItemDTO {
     private String name;
     private Object value;
     private String type;
+    private String key;
     private String customData;
 }

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -233,10 +233,10 @@ public IssueTemplateDao getTemplate(String projectId) {
         if (StringUtils.isNotBlank(issueTemplateId)) {
             issueTemplate = issueTemplateMapper.selectByPrimaryKey(issueTemplateId);
             if (issueTemplate == null) {
-                issueTemplate = getDefaultTemplate(project.getWorkspaceId());
+                issueTemplate = getDefaultTemplate(projectId);
             }
         } else {
-            issueTemplate = getDefaultTemplate(project.getWorkspaceId());
+            issueTemplate = getDefaultTemplate(projectId);
         }
         if (!project.getPlatform().equals(issueTemplate.getPlatform())) {
             MSException.throwException("请在项目中配置缺陷模板");

File: backend/src/main/java/io/metersphere/service/TestCaseTemplateService.java
Patch:
@@ -241,10 +241,10 @@ public TestCaseTemplateDao getTemplate(String projectId) {
         if (StringUtils.isNotBlank(caseTemplateId)) {
             caseTemplate = testCaseTemplateMapper.selectByPrimaryKey(caseTemplateId);
             if (caseTemplate == null) {
-                caseTemplate = getDefaultTemplate(project.getWorkspaceId());
+                caseTemplate = getDefaultTemplate(projectId);
             }
         } else {
-            caseTemplate = getDefaultTemplate(project.getWorkspaceId());
+            caseTemplate = getDefaultTemplate(projectId);
         }
         BeanUtils.copyBean(caseTemplateDao, caseTemplate);
         List<CustomFieldDao> result = customFieldService.getCustomFieldByTemplateId(caseTemplate.getId());

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -1381,6 +1381,9 @@ public UserDTO updateCurrentUser(User user) {
 
     public UserDTO.PlatformInfo getCurrentPlatformInfo(String workspaceId) {
         User user = userMapper.selectByPrimaryKey(SessionUtils.getUserId());
+        if (user == null) {
+            return null;
+        }
         String platformInfoStr = user.getPlatformInfo();
         if (StringUtils.isBlank(workspaceId) || StringUtils.isBlank(platformInfoStr) || platformInfoStr.equals("null")) {
             return null;

File: backend/src/main/java/io/metersphere/track/issue/domain/zentao/RequestUrl.java
Patch:
@@ -20,6 +20,8 @@ public class RequestUrl {
     private String userGet;
     private String buildsGet;
     private String fileUpload;
+    private String fileDelete;
+    private String fileDownload;
     private String replaceImgUrl;
     private String productGet;
     private Pattern imgPattern;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -989,7 +989,8 @@ private void importCase(ApiDefinitionWithBLOBs apiDefinition, ApiTestCaseMapper
         if (caseList == null || caseList.isEmpty()) {
             return;
         }
-        for (ApiTestCaseWithBLOBs apiTestCaseWithBLOBs : caseList) {
+        for (int i = 0; i < caseList.size(); i++) {
+            ApiTestCaseWithBLOBs apiTestCaseWithBLOBs = caseList.get(i);
             apiTestCaseWithBLOBs.setApiDefinitionId(apiDefinition.getId());
             if (apiDefinition.getToBeUpdated() != null && !apiTestCaseWithBLOBs.getVersionId().equals("cover")) {
                 apiTestCaseWithBLOBs.setToBeUpdated(true);
@@ -1013,7 +1014,7 @@ private void importCase(ApiDefinitionWithBLOBs apiDefinition, ApiTestCaseMapper
                 apiTestCaseWithBLOBs.setOrder(getImportNextCaseOrder(apiDefinition.getProjectId()));
             }
             if (apiTestCaseWithBLOBs.getNum() == null) {
-                apiTestCaseWithBLOBs.setNum(testCaseService.getNextNum(apiDefinition.getId()));
+                apiTestCaseWithBLOBs.setNum(apiTestCaseService.getNextNum(apiDefinition.getId(), apiDefinition.getNum() + i, apiDefinition.getProjectId()));
             }
 
             if (apiDefinition.getToBeUpdateTime() != null) {

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -376,7 +376,7 @@ public List<IssuesDao> list(IssuesRequest request) {
         request.getOrders().forEach(order -> {
             if (StringUtils.isNotEmpty(order.getName()) && order.getName().startsWith("custom")) {
                 request.setIsCustomSorted(true);
-                request.setCustomFieldId(order.getName().substring(6));
+                request.setCustomFieldId(order.getName().substring(order.getName().indexOf("-") + 1));
                 order.setPrefix("cfi");
                 order.setName("value");
             }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -281,7 +281,7 @@ public ApiDataCountDTO testSceneInfoCount(@PathVariable String projectId) {
         //未执行、未通过、已通过
         List<ApiDataCountResult> countResultByRunResult = apiAutomationService.countRunResultByProjectID(projectId);
         apiCountResult.countRunResult(countResultByRunResult);
-        long allCount = apiCountResult.getUnexecuteCount() + apiCountResult.getExecutionPassCount() + apiCountResult.getExecutionFailedCount();
+        long allCount = apiCountResult.getAllExecutedResultCount();
         DecimalFormat df = new DecimalFormat("0.0");
         if (allCount != 0) {
             //通过率

File: backend/src/main/java/io/metersphere/consul/CatalogApi.java
Patch:
@@ -46,7 +46,7 @@ public ResponseEntity<JSONObject> self() {
 
     @GetMapping("catalog/services")
     @NoResultHolder
-    public ResponseEntity<Map<String, List<String>>> catalog() {
+    public ResponseEntity<Map<String, List<String>>> catalog() throws Exception {
         Map<String, List<String>> activeNodes = consulService.getActiveNodes();
         HttpHeaders responseHeaders = new HttpHeaders();
         int index = RandomUtils.nextInt(1000, 20000);

File: backend/src/main/java/io/metersphere/base/domain/TestPlanReportContentWithBLOBs.java
Patch:
@@ -59,5 +59,7 @@ public class TestPlanReportContentWithBLOBs extends TestPlanReportContent implem
 
     private String uiAllCases;
 
+    private String uiFailureCases;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/dto/TestPlanSimpleReportDTO.java
Patch:
@@ -59,4 +59,5 @@ public class TestPlanSimpleReportDTO extends TestPlanReportContent {
     List<TestPlanFailureScenarioDTO> unExecuteScenarios;
 
     List<TestPlanUiScenarioDTO> uiAllCases;
+    List<TestPlanUiScenarioDTO> uiFailureCases;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -979,6 +979,9 @@ public TestPlanSimpleReportDTO getReport(String reportId) {
         if (StringUtils.isNotBlank(testPlanReportContent.getUiAllCases())) {
             testPlanReportDTO.setUiAllCases(JSONObject.parseArray(testPlanReportContent.getUiAllCases(), TestPlanUiScenarioDTO.class));
         }
+        if (StringUtils.isNotBlank(testPlanReportContent.getUiFailureCases())) {
+            testPlanReportDTO.setUiFailureCases(JSONObject.parseArray(testPlanReportContent.getUiFailureCases(), TestPlanUiScenarioDTO.class));
+        }
         testPlanReportDTO.setId(reportId);
         TestPlanReport testPlanReport = testPlanReportMapper.selectByPrimaryKey(testPlanReportContent.getTestPlanReportId());
         testPlanReportDTO.setName(testPlanReport.getName());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1741,7 +1741,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
                 sqlSession.flushStatements();
             }
         }
-        sqlSession.flushStatements();
+
         //判断EsbData是否需要存储
         if (apiImport.getEsbApiParamsMap() != null && apiImport.getEsbApiParamsMap().size() > 0) {
             EsbApiParamsMapper esbApiParamsMapper = sqlSession.getMapper(EsbApiParamsMapper.class);
@@ -1762,7 +1762,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
             MockConfigService mockConfigService = CommonBeanFactory.getBean(MockConfigService.class);
             mockConfigService.importMock(apiImport, sqlSession, request);
         }
-
+        sqlSession.flushStatements();
         if (sqlSession != null && sqlSessionFactory != null) {
             SqlSessionUtils.closeSqlSession(sqlSession, sqlSessionFactory);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ESBParser.java
Patch:
@@ -107,13 +107,13 @@ private static Map<String, XSSFCellStyle> createCellStle(XSSFWorkbook workbook)
 
             String name = "";
             if (colorIndex == IndexedColors.LIGHT_GREEN.getIndex()) {
-                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(204, 255, 204)));
+                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(204, 255, 204), null));
                 name = "green";
             } else if (colorIndex == IndexedColors.ORCHID.getIndex()) {
-                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(151, 50, 101)));
+                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(151, 50, 101), null));
                 name = "pop";
             } else if (colorIndex == IndexedColors.YELLOW.getIndex()) {
-                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(255, 255, 153)));
+                style.setFillForegroundColor(new XSSFColor(new java.awt.Color(255, 255, 153), null));
                 name = "yellow";
             } else {
                 name = "default";

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiScenarioMapper.java
Patch:
@@ -7,4 +7,7 @@
 
 public interface ExtTestPlanApiScenarioMapper {
     public List<TestPlanApiScenario> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
+
+    List<TestPlanApiScenario> selectPlanByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
+
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanUiScenarioMapper.java
Patch:
@@ -7,7 +7,7 @@
 
 public interface ExtTestPlanUiScenarioMapper {
 
-    List<TestPlanUiScenario> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
+    List<TestPlanUiScenario> selectPlanByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
 
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -2148,12 +2148,12 @@ public boolean haveExecCase(String id) {
         }
         List<String> ids = new ArrayList<>();
         ids.add(id);
-        List<TestPlanApiCase> testPlanApiCases = extTestPlanApiCaseMapper.selectByIdsAndStatusIsNotTrash(ids);
+        List<TestPlanApiCase> testPlanApiCases = extTestPlanApiCaseMapper.selectPlanByIdsAndStatusIsNotTrash(ids);
         if (!CollectionUtils.isEmpty(testPlanApiCases)) {
             return true;
         }
 
-        List<TestPlanApiScenario> testPlanApiScenarios = extTestPlanApiScenarioMapper.selectByIdsAndStatusIsNotTrash(ids);
+        List<TestPlanApiScenario> testPlanApiScenarios = extTestPlanApiScenarioMapper.selectPlanByIdsAndStatusIsNotTrash(ids);
         if (!CollectionUtils.isEmpty(testPlanApiScenarios)) {
             return true;
         }
@@ -2407,7 +2407,7 @@ public boolean haveUiCase(String id) {
 
         List<String> ids = new ArrayList<>();
         ids.add(id);
-        List<TestPlanUiScenario> testPlanUiScenarios = extTestPlanUiScenarioMapper.selectByIdsAndStatusIsNotTrash(ids);
+        List<TestPlanUiScenario> testPlanUiScenarios = extTestPlanUiScenarioMapper.selectPlanByIdsAndStatusIsNotTrash(ids);
         return !CollectionUtils.isEmpty(testPlanUiScenarios);
     }
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -343,7 +343,7 @@ public void deleteTestCaseBath(@RequestBody TestCaseBatchRequest request) {
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, target = "#targetClass.findByBatchRequest(#request)", targetClass = TestCaseService.class,
             event = NoticeConstants.Event.DELETE, subject = "测试用例通知")
     public void deleteToGcBatch(@RequestBody TestCaseBatchRequest request) {
-        testCaseService.deleteToGcBatch(request.getIds());
+        testCaseService.deleteToGcBatch(request);
     }
 
     @PostMapping("/batch/movePublic/deleteToGc")

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -204,7 +204,7 @@ public int deleteNode(List<String> nodeIds) {
         List<String> testCaseIdList = this.selectCaseIdByNodeIds(nodeIds);
         TestCaseBatchRequest request = new TestCaseBatchRequest();
         request.setIds(testCaseIdList);
-        testCaseService.deleteToGcBatch(request.getIds());
+        testCaseService.deleteToGcBatch(request);
 
         TestCaseNodeExample testCaseNodeExample = new TestCaseNodeExample();
         testCaseNodeExample.createCriteria().andIdIn(nodeIds);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1307,6 +1307,7 @@ public void testCaseTemplateExport(String projectId, String importType, HttpServ
                     Translator.get("test_case_import_template_name"), Translator.get("test_case_import_template_sheet"), handler);
 
         } catch (Exception e) {
+            LogUtil.error(e);
             MSException.throwException(e);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.base.mapper.ext.ExtApiDefinitionMapper;
 import io.metersphere.base.mapper.ext.ExtApiModuleMapper;
 import io.metersphere.base.mapper.ext.ExtApiTestCaseMapper;
+import io.metersphere.commons.constants.CommonConstants;
 import io.metersphere.commons.constants.TestCaseConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.BeanUtils;
@@ -229,10 +230,12 @@ private List<ApiModuleDTO> getNodeDTO(String projectId, String planId, String pr
                 .collect(Collectors.toList());
 
         List<String> definitionIds = apiTestCaseService.selectCasesBydIds(caseIds).stream()
+                .filter(apiTestCase -> apiTestCase.getStatus() == null || !CommonConstants.TrashStatus.equals(apiTestCase.getStatus()))
                 .map(ApiTestCase::getApiDefinitionId)
                 .collect(Collectors.toList());
 
         List<String> dataNodeIds = apiDefinitionService.selectApiDefinitionBydIds(definitionIds).stream()
+                .filter(apiDefinition -> apiDefinition.getStatus() == null || !CommonConstants.TrashStatus.equals(apiDefinition.getStatus()))
                 .map(ApiDefinition::getModuleId)
                 .collect(Collectors.toList());
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.base.mapper.ApiScenarioModuleMapper;
 import io.metersphere.base.mapper.ext.ExtApiScenarioMapper;
 import io.metersphere.base.mapper.ext.ExtApiScenarioModuleMapper;
+import io.metersphere.commons.constants.CommonConstants;
 import io.metersphere.commons.constants.TestCaseConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.SessionUtils;
@@ -195,6 +196,7 @@ private List<ApiScenarioModuleDTO> getNodeDTO(String projectId, String planId) {
                 .collect(Collectors.toList());
 
         List<String> dataNodeIds = apiAutomationService.selectByIds(caseIds).stream()
+                .filter(apiScenario -> apiScenario.getStatus() == null || !CommonConstants.TrashStatus.equals(apiScenario.getStatus()))
                 .map(ApiScenario::getApiScenarioModuleId)
                 .collect(Collectors.toList());
 

File: backend/src/main/java/io/metersphere/api/dto/definition/RunDefinitionRequest.java
Patch:
@@ -24,6 +24,8 @@ public class RunDefinitionRequest {
 
     private boolean runLocal;
 
+    private String browserLanguage;
+
     private String requestId;
 
     private String name;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -88,6 +88,8 @@ public class ParameterConfig extends MsParameter {
 
     private boolean runLocal;
 
+    private String browserLanguage;
+
     /**
      * 排除生成临界控制器的场景
      */

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -514,6 +514,8 @@ private String packageDescriptionByPathAndName(String path, String name) {
                 name = name.replaceAll("&amp;", "&");
                 path = zentaoClient.getBaseUrl() + path.replaceAll("&amp;", "&");
             }
+            // 专业版格式有差异，解析完会出现两个 /pro，去掉一个
+            path.replace("/pro/pro", "/pro");
             path = "/resource/md/get/url?url=" + URLEncoder.encode(path, StandardCharsets.UTF_8);
             // 图片与描述信息之间需换行，否则无法预览图片
             result = "\n\n![" + name + "](" + path + ")";

File: backend/src/main/java/io/metersphere/api/controller/ApiJMeterFileController.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.controller;
 
 import io.metersphere.api.jmeter.JMeterThreadUtils;
-import io.metersphere.api.service.ApiJmeterFileService;
+import io.metersphere.api.service.ApiJMeterFileService;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.MediaType;
 import org.springframework.http.ResponseEntity;
@@ -12,10 +12,10 @@
 
 @RestController
 @RequestMapping("/api/jmeter")
-public class ApiJmeterFileController {
+public class ApiJMeterFileController {
 
     @Resource
-    private ApiJmeterFileService apiJmeterFileService;
+    private ApiJMeterFileService apiJmeterFileService;
 
     @GetMapping("stop/{name}")
     public String stop(@PathVariable String name) {

File: backend/src/main/java/io/metersphere/api/service/ApiJMeterFileService.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.zip.ZipOutputStream;
 
 @Service
-public class ApiJmeterFileService {
+public class ApiJMeterFileService {
     @Resource
     private ApiCaseSerialService apiCaseSerialService;
     @Resource
@@ -123,7 +123,7 @@ public byte[] downloadJmeterJar() {
         Map<String, byte[]> files = new HashMap<>();
         // 获取JAR
         Map<String, byte[]> jarFiles = this.getJar();
-        if (!com.alibaba.excel.util.CollectionUtils.isEmpty(jarFiles)) {
+        if (!MapUtils.isEmpty(jarFiles)) {
             for (String k : jarFiles.keySet()) {
                 byte[] v = jarFiles.get(k);
                 files.put(k, v);
@@ -136,7 +136,7 @@ public byte[] downloadPlugJar() {
         Map<String, byte[]> files = new HashMap<>();
         // 获取JAR
         Map<String, byte[]> jarFiles = this.getPlugJar();
-        if (!com.alibaba.excel.util.CollectionUtils.isEmpty(jarFiles)) {
+        if (!MapUtils.isEmpty(jarFiles)) {
             for (String k : jarFiles.keySet()) {
                 byte[] v = jarFiles.get(k);
                 files.put(k, v);

File: backend/src/main/java/io/metersphere/performance/controller/JMeterFileController.java
Patch:
@@ -4,7 +4,7 @@
 import io.metersphere.commons.utils.WeakConcurrentHashMap;
 import io.metersphere.controller.handler.annotation.NoResultHolder;
 import io.metersphere.performance.dto.ZipDTO;
-import io.metersphere.performance.service.JmeterFileService;
+import io.metersphere.performance.service.JMeterFileService;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.MediaType;
 import org.springframework.http.ResponseEntity;
@@ -20,9 +20,9 @@
 
 @RestController
 @RequestMapping("jmeter")
-public class JmeterFileController {
+public class JMeterFileController {
     @Resource
-    private JmeterFileService jmeterFileService;
+    private JMeterFileService jmeterFileService;
     private final WeakConcurrentHashMap<String, List<Double>> readyMap = new WeakConcurrentHashMap<>(30 * 60 * 1000);// 默认保留30分钟
 
     @GetMapping("ping")

File: backend/src/main/java/io/metersphere/performance/service/JMeterFileService.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.performance.service;
 
-import com.alibaba.excel.util.CollectionUtils;
 import io.metersphere.base.domain.LoadTestReportWithBLOBs;
 import io.metersphere.base.mapper.LoadTestReportMapper;
 import io.metersphere.base.mapper.ext.ExtLoadTestReportMapper;
@@ -10,6 +9,7 @@
 import io.metersphere.performance.engine.EngineContext;
 import io.metersphere.performance.engine.EngineFactory;
 import org.springframework.stereotype.Service;
+import org.springframework.util.CollectionUtils;
 
 import javax.annotation.Resource;
 import java.io.ByteArrayOutputStream;
@@ -23,7 +23,7 @@
 
 // 非事务运行
 @Service
-public class JmeterFileService {
+public class JMeterFileService {
     @Resource
     private ExtLoadTestReportMapper extLoadTestReportMapper;
     @Resource

File: backend/src/main/java/io/metersphere/base/domain/TestPlanReportContentWithBLOBs.java
Patch:
@@ -57,5 +57,7 @@ public class TestPlanReportContentWithBLOBs extends TestPlanReportContent implem
 
     private String apiBaseCount;
 
+    private String uiAllCases;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/dto/TestPlanExecuteReportDTO.java
Patch:
@@ -19,4 +19,5 @@ public class TestPlanExecuteReportDTO {
     private Map<String,String> testPlanLoadCaseIdAndReportIdMap;
     private Map<String,TestPlanFailureApiDTO> apiCaseInfoDTOMap;
     private Map<String,TestPlanFailureScenarioDTO> scenarioInfoDTOMap;
+    private Map<String,TestPlanUiScenarioDTO> uiScenarioInfoDTOMap;
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanUiResultReportDTO.java
Patch:
@@ -8,8 +8,11 @@
 @Getter
 @Setter
 public class TestPlanUiResultReportDTO {
+    //历史的case数据
     private List<TestCaseReportStatusResultDTO> uiScenarioCaseData;
+    //场景的分类统计数据
     private List<TestCaseReportStatusResultDTO> uiScenarioData;
+    //步骤的分类统计数据
     private List<TestCaseReportStatusResultDTO> uiScenarioStepData;
 }
 

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -242,6 +242,8 @@ public ApiDataCountDTO testCaseInfoCount(@PathVariable String projectId) {
         for (ExecuteResultCountDTO execResult : apiCaseExecResultList) {
             if (StringUtils.isEmpty(execResult.getExecResult())) {
                 unexecuteCount += execResult.getCount();
+            } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), "Underway", ExecuteResult.TEST_PLAN_PREPARE.toString())) {
+                unexecuteCount += execResult.getCount();
             } else if (StringUtils.equalsIgnoreCase(execResult.getExecResult(), ExecuteResult.API_SUCCESS.toString())) {
                 executionPassCount += execResult.getCount();
             } else if (StringUtils.equalsAnyIgnoreCase(execResult.getExecResult(), ExecuteResult.ERROR_REPORT_RESULT.toString(), ExecuteResult.ERROR_REPORT.toString())) {

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ApiDataCountDTO.java
Patch:
@@ -184,7 +184,7 @@ public void countApiCoverage(List<ApiDataCountResult> countResultList) {
 
     public void countRunResult(List<ApiDataCountResult> countResultByRunResult) {
         for (ApiDataCountResult countResult : countResultByRunResult) {
-            if ("notRun".equals(countResult.getGroupField())) {
+            if (StringUtils.equalsAnyIgnoreCase(countResult.getGroupField(), "notRun", "unexecute")) {
                 this.unexecuteCount += countResult.getCountNumber();
             } else if ("Fail".equals(countResult.getGroupField())) {
                 this.executionFailedCount += countResult.getCountNumber();

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -210,14 +210,14 @@ public Project getProjectByTestCaseId(@PathVariable String testCaseId) {
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, targetClass = TestCaseMapper.class,
             event = NoticeConstants.Event.CREATE, subject = "测试用例通知")
-    public TestCase addTestCase(@RequestPart("request") EditTestCaseRequest request) {
+    public TestCase addTestCase(@RequestPart("request") EditTestCaseRequest request, @RequestPart(value = "file", required = false) List<MultipartFile> files) {
         if (StringUtils.isBlank(request.getId())) {
             //新增 后端生成 id
             request.setId(UUID.randomUUID().toString());
         } else {
             //复制，前端生成 id
         }
-        return testCaseService.add(request);
+        return testCaseService.add(request, files);
     }
 
     @PostMapping("/edit/order")

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -111,6 +111,7 @@ private String dealWithDescription(String description, Map<String, String> fileC
             return description;
         }
 
+        description = description.replaceAll("!image", "\n!image");
         String[] splitStrs = description.split("\\n");
         for (int j = 0; j < splitStrs.length; j++) {
             String splitStr = splitStrs[j];

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanUiScenarioCaseMapper.java
Patch:
@@ -2,7 +2,7 @@
 
 import io.metersphere.api.dto.automation.TestPlanScenarioRequest;
 import io.metersphere.base.domain.TestPlanUiScenario;
-import io.metersphere.dto.TestPlanFailureUiScenarioDTO;
+import io.metersphere.dto.TestPlanUiScenarioDTO;
 import io.metersphere.dto.UiScenarioDTO;
 import io.metersphere.track.dto.PlanReportCaseDTO;
 import org.apache.ibatis.annotations.Param;
@@ -29,9 +29,9 @@ public interface ExtTestPlanUiScenarioCaseMapper {
 
     List<PlanReportCaseDTO> selectForPlanReport(String planId);
 
-    List<TestPlanFailureUiScenarioDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);
+    List<TestPlanUiScenarioDTO> getPlanUiScenarioByStatusList(@Param("planId") String planId, @Param("statusList") List<String> statusList);
 
-    List<TestPlanFailureUiScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids,@Param("status") String status);
+    List<TestPlanUiScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids, @Param("status") String status);
 
     List<Integer> getUnderwaySteps(@Param("ids") List<String> underwayIds);
 

File: backend/src/main/java/io/metersphere/dto/TestPlanUiScenarioDTO.java
Patch:
@@ -8,6 +8,6 @@
 @Getter
 @Setter
 @JsonInclude(JsonInclude.Include.NON_NULL)
-public class TestPlanFailureUiScenarioDTO extends UiScenarioDTO {
+public class TestPlanUiScenarioDTO extends UiScenarioDTO {
     private APIScenarioReportResult response;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -16,7 +16,7 @@
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.dto.RunModeConfigDTO;
 import io.metersphere.dto.TestPlanExecuteReportDTO;
-import io.metersphere.dto.TestPlanFailureUiScenarioDTO;
+import io.metersphere.dto.TestPlanUiScenarioDTO;
 import io.metersphere.i18n.Translator;
 import io.metersphere.log.vo.OperatingLogDetails;
 import io.metersphere.service.EnvironmentGroupProjectService;
@@ -1104,9 +1104,9 @@ public void createTestPlanReportContentReportIds(String testPlanReportID, Map<St
             content.setPlanLoadCaseReportStruct(JSONObject.toJSONString(loadCaseReportIdMap));
         }
         if (MapUtils.isNotEmpty(uiScenarioReportMap)) {
-            List<TestPlanFailureUiScenarioDTO> uiScenarios =
+            List<TestPlanUiScenarioDTO> uiScenarios =
                     extTestPlanUiScenarioCaseMapper.getFailureListByIds(uiScenarioReportMap.keySet(), null);
-            for (TestPlanFailureUiScenarioDTO dto : uiScenarios) {
+            for (TestPlanUiScenarioDTO dto : uiScenarios) {
                 dto.setReportId(uiScenarioReportMap.get(dto.getId()));
             }
             content.setPlanUiScenarioReportStruct(JSONObject.toJSONString(uiScenarios));

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -69,6 +69,7 @@ public Pager<List<ApiDefinitionResult>> list(@PathVariable int goPage, @PathVari
                 request.setToBeUpdateTime(toBeUpdatedTime);
             }
         }
+        apiDefinitionService.checkFilterHasCoverage(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, apiDefinitionService.list(request));
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -2179,7 +2179,7 @@ private static long getNextTriggerTime(String cron) {
     @MsAuditLog(module = OperLogModule.TRACK_TEST_PLAN_SCHEDULE, type = OperLogConstants.UPDATE, title = "#request.name",
             beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request.id)", msClass = ScheduleService.class)
     public Schedule updateSchedule(Schedule request) {
-        apiAutomationService.updateSchedule(request);
+        scheduleService.updateSchedule(request);
         return request;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRequest.java
Patch:
@@ -47,4 +47,7 @@ public class ApiDefinitionRequest extends BaseQueryRequest {
 
     //全选
     private boolean selectAll;
+
+    private Long deleteTime;
+    private String deleteUserId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -104,4 +104,6 @@ public interface ExtApiDefinitionMapper {
     int countById(String id);
 
     List<ApiDefinition> selectEffectiveIdByProjectIdAndHaveNotCase(String projectId);
+
+    int deleteApiToGc(ApiDefinitionRequest request);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -86,4 +86,6 @@ public interface ExtApiTestCaseMapper {
     int countById(String resourceID);
 
     List<ExecuteResultCountDTO> selectExecuteResultByProjectId(String projectId);
+
+    int deleteCaseToGc(ApiTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -42,7 +42,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
                 swagger = new SwaggerParser().read(request.getSwaggerUrl(), auths, true);
             } catch (Exception e) {
                 LoggerUtil.error(e);
-                MSException.throwException("swagger验证失败");
+                MSException.throwException(e.getMessage());
             }
 
         } else {

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -319,7 +319,7 @@ public CoverageDTO countApiCoverage(@PathVariable String projectId) {
          */
         List<ApiDefinition> apiNoCaseList = apiDefinitionService.selectEffectiveIdByProjectIdAndHaveNotCase(projectId);
         Map<String, Map<String, String>> scenarioUrlList = apiAutomationService.selectScenarioUseUrlByProjectId(projectId);
-        int apiInScenario = apiAutomationService.countApiInScenario(projectId, scenarioUrlList, apiNoCaseList);
+        int apiInScenario = apiAutomationService.getApiIdInScenario(projectId, scenarioUrlList, apiNoCaseList).size();
 
         try {
             if (effectiveApiCount == 0) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1475,10 +1475,10 @@ public APIReportResult buildAPIReportResult(ApiDefinitionExecResultWithBLOBs res
                 content.put("envName", this.getEnvNameByEnvConfig(result.getProjectId(), result.getEnvConfig()));
             }
             contentStr = content.toString();
+            reportResult.setContent(contentStr);
         } catch (Exception e) {
             LogUtil.error("解析content失败!", e);
         }
-        reportResult.setContent(contentStr);
         return reportResult;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -308,9 +308,6 @@ public ApiScenarioReport updatePlanCase(ResultDTO dto) {
             testPlanApiScenario.setUpdateTime(System.currentTimeMillis());
             testPlanApiScenarioMapper.updateByPrimaryKeySelective(testPlanApiScenario);
 
-            //增加场景的运行记录
-            scenarioExecutionInfoService.insertExecutionInfo(testPlanApiScenario.getId(), status, report.getTriggerMode());
-
             // 更新场景状态
             ApiScenario scenario = apiScenarioMapper.selectByPrimaryKey(testPlanApiScenario.getApiScenarioId());
             if (scenario != null) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -28,8 +28,6 @@ public interface ExtApiDefinitionExecResultMapper {
 
     long countByTestCaseIDInProject(String projectId);
 
-    List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("startTimestamp") long startTimestamp);
-
     List<ExecutedCaseInfoResult> findFaliureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("selectFunctionCase") boolean selectFunctionCase, @Param("startTimestamp") long startTimestamp);
 
     String selectExecResult(String resourceId);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -456,7 +456,7 @@ private Schema getModelByRef(String ref) {
 
     private JsonSchemaItem parseSchema(Schema schema, Set<String> refSet) {
         if (schema == null) return null;
-        if (StringUtils.isBlank(schema.get$ref()) && schema.getProperties() == null && refSet.isEmpty()) {
+        if (StringUtils.isBlank(schema.get$ref()) && schema.getProperties() == null && refSet.isEmpty() && schema.getExample() == null) {
             return null;
         }
         JsonSchemaItem item = new JsonSchemaItem();

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -151,6 +151,7 @@ private MessageDetail getMessageDetail(List<MessageTask> messageTasks) {
             messageDetail.setWebhook(m.getWebhook());
             messageDetail.setIdentification(m.getIdentification());
             messageDetail.setType(m.getType());
+            messageDetail.setTestId(m.getTestId());
             messageDetail.setIsSet(m.getIsSet());
             messageDetail.setCreateTime(m.getCreateTime());
             messageDetail.setTemplate(m.getTemplate());

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioEnvService.java
Patch:
@@ -311,7 +311,7 @@ public Map<String, List<String>> checkEnv(RunScenarioRequest request, List<ApiSc
                         builder.append(apiScenarioWithBLOBs.getName()).append("; ");
                     }
                 } catch (Exception e) {
-                    MSException.throwException("场景：" + builder.toString() + "运行环境未配置，请检查!");
+                    MSException.throwException("场景：" +apiScenarioWithBLOBs.getName() +"，步骤解析错误，检查是否包含插件步骤!");
                 }
             }
             if (builder.length() > 0) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanReportMapper.java
Patch:
@@ -16,10 +16,12 @@
  * @Description
  */
 public interface ExtTestPlanReportMapper {
-    List<TestPlanReportDTO> list(@Param("request")QueryTestPlanReportRequest request);
+    List<TestPlanReportDTO> list(@Param("request") QueryTestPlanReportRequest request);
 
     @MapKey("id")
     Map<String, ParamsDTO> reportCount(@Param("planIds") Set<String> planIds);
 
+    void setApiBaseCountAndPassRateIsNullById(String id);
+
     void updateAllStatus();
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -540,6 +540,9 @@ public TestPlanReport finishedTestPlanReport(String testPlanReportId, String sta
             List<TestPlanReportContentWithBLOBs> contents = testPlanReportContentMapper.selectByExampleWithBLOBs(contentExample);
             if (CollectionUtils.isNotEmpty(contents)) {
                 content = contents.get(0);
+                content.setApiBaseCount(null);
+                content.setPassRate(null);
+                extTestPlanReportMapper.setApiBaseCountAndPassRateIsNullById(content.getId());
             }
             if (content != null) {
                 //更新content表对结束日期

File: backend/src/main/java/io/metersphere/track/dto/testplan/TestPlanApiScenarioInfoDTO.java
Patch:
@@ -10,4 +10,6 @@ public class TestPlanApiScenarioInfoDTO {
     private String apiScenarioId;
     private String environment;
     private String projectId;
+    private String environmentType;
+    private String environmentGroupId;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanUiScenarioCaseService.java
Patch:
@@ -213,7 +213,6 @@ public List<MsExecResponseDTO> run(RunTestPlanScenarioRequest testPlanScenarioRe
         request.setProjectId(testPlanScenarioRequest.getProjectId());
         UiRunModeConfigDTO configDTO = new UiRunModeConfigDTO();
         BeanUtils.copyBean(configDTO, testPlanScenarioRequest.getConfig());
-        configDTO.setHeadlessEnabled(true);
         request.setUiConfig(configDTO);
         request.setPlanCaseIds(planCaseIdList);
         request.setRequestOriginator("TEST_PLAN");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1151,9 +1151,9 @@ private void _importCreate(List<ApiDefinitionWithBLOBs> sameRequest, ApiDefiniti
                     apiDefinition.setId(existApi.getId());
                     String request = setImportHashTree(apiDefinition);
                     apiDefinition.setOrder(existApi.getOrder());
-                    batchMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
                     apiDefinition.setRequest(request);
                     reSetImportMocksApiId(mocks, originId, apiDefinition.getId(), apiDefinition.getNum());
+                    batchMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
                 } else {
                     apiDefinition.setId(existApi.getId());
                     if (StringUtils.equalsAnyIgnoreCase(apiDefinition.getProtocol(), RequestType.TCP)) {

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -122,7 +122,9 @@ public void invoke(Map<Integer, String> data, AnalysisContext analysisContext) {
             //根据excel数据实体中的javax.validation + 正则表达式来校验excel数据
             errMsg = ExcelValidateHelper.validateEntity(testCaseExcelData);
             //自定义校验规则
-            errMsg = validate(testCaseExcelData, errMsg);
+            if (StringUtils.isEmpty(errMsg)) {
+                errMsg = validate(testCaseExcelData, errMsg);
+            }
         } catch (NoSuchFieldException e) {
             errMsg = Translator.get("parse_data_error");
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -75,7 +75,7 @@ public interface ExtApiDefinitionMapper {
 
     Long getLastOrder(@Param("projectId") String projectId, @Param("baseOrder") Long baseOrder);
 
-    long countQuotedApiByProjectId(String projectId);
+    long countApiByProjectIdAndHasCase(String projectId);
 
     List<RelationshipGraphData.Node> getForGraph(@Param("ids") Set<String> ids);
 
@@ -100,4 +100,6 @@ public interface ExtApiDefinitionMapper {
     List<ApiDefinitionWithBLOBs> selectRepeatByProtocol(@Param("names") List<String> names, @Param("protocol") String protocol, @Param("projectId") String projectId);
 
     int countById(String id);
+
+    List<ApiDefinition> selectEffectiveIdByProjectIdAndHaveNotCase(String projectId);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiSyncCaseRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition;
 
+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
 import lombok.*;
 
 import java.util.List;
@@ -9,6 +10,7 @@
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
+@JsonIgnoreProperties(ignoreUnknown = true)
 public class ApiSyncCaseRequest {
 
     private Boolean protocol;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.github.pagehelper.Page;
@@ -1155,6 +1156,7 @@ public Boolean checkIsSynchronize(ApiDefinitionWithBLOBs existApi, ApiDefinition
         exApi = existApi;
         api = apiDefinition;
         ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
         String exApiString = null;
         String apiString = null;
         try {

File: backend/src/main/java/io/metersphere/track/service/TestPlanUiScenarioCaseService.java
Patch:
@@ -205,7 +205,7 @@ public List<MsExecResponseDTO> run(RunTestPlanScenarioRequest testPlanScenarioRe
         request.setIds(scenarioIds);
         request.setReportId(testPlanScenarioRequest.getId());
         request.setScenarioTestPlanIdMap(scenarioPlanIdMap);
-        request.setRunMode(ApiRunMode.UI_SCENARIO.name());
+        request.setRunMode(ApiRunMode.UI_SCENARIO_PLAN.name());
         request.setId(testPlanScenarioRequest.getId());
         request.setExecuteType(ExecuteType.Saved.name());
         request.setTriggerMode(testPlanScenarioRequest.getTriggerMode());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -46,5 +46,8 @@ public interface ExtTestPlanApiCaseMapper {
     Long getPreOrder(@Param("planId")String planId, @Param("baseOrder") Long baseOrder);
 
     Long getLastOrder(@Param("planId")String planId, @Param("baseOrder") Long baseOrder);
+
+    List<TestPlanApiCase> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids);
+
 }
 

File: backend/src/main/java/io/metersphere/service/FileService.java
Patch:
@@ -140,7 +140,7 @@ public FileAttachmentMetadata saveAttachmentByBytes(byte[] bytes, String attachm
         String uploadPath = FileUtils.ATTACHMENT_DIR + "/" + attachmentType + "/" + belongId;
         File parentFile = new File(uploadPath);
         if (!parentFile.exists()) {
-            parentFile.mkdir();
+            parentFile.mkdirs();
         }
         try (OutputStream os = new FileOutputStream(uploadPath + "/" + attachmentName)){
             InputStream in = new ByteArrayInputStream(bytes);

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -257,11 +257,10 @@ public JiraIssueListResponse getProjectIssues(int startAt, int maxResults, Strin
         return  (JiraIssueListResponse)getResultForObject(JiraIssueListResponse.class, responseEntity);
     }
 
-    public byte[] getAttachmentContent(String contentId) {
+    public byte[] getAttachmentContent(String url) {
         ResponseEntity<byte[]> responseEntity;
-        String url = getBaseUrl() + "/attachment/content/{1}";
         responseEntity = restTemplate.exchange(url,
-                HttpMethod.GET, getAuthHttpEntity(), byte[].class, contentId);
+                HttpMethod.GET, getAuthHttpEntity(), byte[].class);
         return responseEntity.getBody();
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -622,7 +622,7 @@ public void delete(DeleteAPIReportRequest request) {
 
         deleteScenarioReportResource(request.getId());
 
-        deleteApiDefinitionResult(report.getId());
+        deleteApiDefinitionResult(request.getId());
 
         // 补充逻辑，如果是集成报告则把零时报告全部删除
         if (report != null && StringUtils.isNotEmpty(report.getScenarioId())) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -98,6 +98,7 @@ public void saveApiResult(ResultDTO dto) {
             if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {
                 ApiDefinitionExecResult result = this.editResult(item, dto.getReportId(), dto.getConsole(), dto.getRunMode(), dto.getTestId(), null);
                 if (result != null) {
+                    result.setResourceId(dto.getTestId());
                     apiExecutionInfoService.insertExecutionInfo(result);
                     User user = null;
                     if (MapUtils.isNotEmpty(dto.getExtendedParameters())) {
@@ -111,7 +112,6 @@ public void saveApiResult(ResultDTO dto) {
                         }
                     }
                     // 发送通知
-                    result.setResourceId(dto.getTestId());
                     LoggerUtil.info("执行结果【 " + result.getName() + " 】入库存储完成");
                     sendNotice(result, user);
                 }
@@ -344,7 +344,7 @@ public void saveApiResultByScheduleTask(ResultDTO dto) {
                         triggerMode = reportResult.getTriggerMode();
                     }
 
-                    if (MapUtils.isNotEmpty(expandDTO.getAttachInfoMap())) {
+                    if (StringUtils.isNotEmpty(expandDTO.getStatus())) {
                         status = expandDTO.getStatus();
                     }
                     if (StringUtils.equalsAny(dto.getRunMode(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
@@ -425,6 +425,7 @@ public List<ExecutedCaseInfoResult> findFailureCaseInfoByProjectIDAndLimitNumber
         try {
             startTime = DateUtils.getDayStartTime(startDay);
         } catch (Exception e) {
+            LogUtil.error("解析日期出错!", e);
         }
 
         if (startTime == null) {

File: backend/src/main/java/io/metersphere/track/controller/AttachmentController.java
Patch:
@@ -48,6 +48,7 @@ public ResponseEntity<byte[]> downloadAttachment(@RequestBody FileOperationReque
         return ResponseEntity.ok()
                 .contentType(MediaType.parseMediaType("application/octet-stream"))
                 .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + URLEncoder.encode(fileOperationRequest.getName(), StandardCharsets.UTF_8) + "\"")
+                .contentLength(bytes.length)
                 .body(bytes);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -430,7 +430,7 @@ public void calcTestPlanRate(List<TestPlanDTOWithMetric> testPlans) {
             uiScenarioExecResults.forEach(item -> {
                 if (StringUtils.isNotBlank(item)) {
                     testPlan.setTested(testPlan.getTested() + 1);
-                    if (StringUtils.equals(item, "success")) {
+                    if (StringUtils.equals(item, "Success")) {
                         testPlan.setPassed(testPlan.getPassed() + 1);
                     }
                 }

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -144,6 +144,8 @@ public void handleSystemFieldCreate(CustomFieldDao customField) {
                 template.setProjectId(customField.getProjectId());
                 issueTemplateMapper.insert(template);
 
+                projectService.updateIssueTemplate(global.getId(), template.getId(), customField.getProjectId());
+
                 List<CustomFieldTemplate> customFieldTemplate =
                         customFieldTemplateService.getSystemFieldCreateTemplate(customField, global.getId());
 

File: backend/src/main/java/io/metersphere/service/TestCaseTemplateService.java
Patch:
@@ -137,6 +137,9 @@ public void handleSystemFieldCreate(CustomFieldDao customField) {
                 template.setProjectId(customField.getProjectId());
                 testCaseTemplateMapper.insert(template);
 
+                projectService.updateCaseTemplate(global.getId(), template.getId(), customField.getProjectId());
+
+
                 List<CustomFieldTemplate> customFieldTemplate =
                         customFieldTemplateService.getSystemFieldCreateTemplate(customField, global.getId());
 

File: backend/src/main/java/io/metersphere/dto/ReportDTO.java
Patch:
@@ -1,12 +1,11 @@
 package io.metersphere.dto;
 
-import io.metersphere.base.domain.LoadTestReportWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 
 @Getter
 @Setter
-public class ReportDTO extends LoadTestReportWithBLOBs {
+public class ReportDTO extends LoadTestReportInfoDTO {
 
     private String content;
     private String projectName;

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -213,7 +213,9 @@ public void stopEngineHandleVum(LoadTestReportWithBLOBs report, Engine engine) {
     }
 
     public ReportDTO getReportTestAndProInfo(String reportId) {
-        return extLoadTestReportMapper.getReportTestAndProInfo(reportId);
+        ReportDTO reportDTO = extLoadTestReportMapper.getReportTestAndProInfo(reportId);
+        this.parseRunEnvironment(reportDTO);
+        return reportDTO;
     }
 
     private String getContent(String id, ReportKeys reportKey) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -162,4 +162,6 @@ public interface ExtTestCaseMapper {
     List<Map<String, Object>> moduleExtraNodeCount(@Param("nodeIds") List<String> nodeIds);
 
     int bathUpdateByCondition(@Param("request") QueryTestCaseRequest condition, @Param("record") TestCaseWithBLOBs testCaseWithBLOBs);
+
+    List<TestCaseNodeDTO> getWorkspaceCountNodes(@Param("request") QueryTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1439,6 +1439,9 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
             if (item.getVersionId() == null || (!item.getVersionId().equals("new") && !item.getVersionId().equals("update"))) {
                 item.setNum(num);
             }
+            if (StringUtils.isBlank(item.getLevel())) {
+                item.setLevel("P0");
+            }
             if (BooleanUtils.isFalse(request.getOpenCustomNum())) {
                 // 如果未开启，即使有自定值也直接覆盖
                 item.setCustomNum(String.valueOf(num));

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -248,8 +248,9 @@ public void buildQueryRequest(QueryTestPlanCaseRequest request, int count) {
         request.setExecutor(user.getId());
     }
 
-    public TestPlanCaseDTO get(String testplanTestCaseId) {
-        TestPlanCaseDTO testPlanCaseDTO = extTestPlanTestCaseMapper.get(testplanTestCaseId);
+    public TestPlanCaseDTO get(String id) {
+        TestPlanCaseDTO testPlanCaseDTO = extTestPlanTestCaseMapper.get(id);
+        ServiceUtils.buildCustomNumInfo(testPlanCaseDTO);
         List<TestCaseTestDTO> testCaseTestDTOS = extTestPlanTestCaseMapper.listTestCaseTest(testPlanCaseDTO.getCaseId());
         testCaseTestDTOS.forEach(dto -> {
             setTestName(dto);

File: backend/src/main/java/io/metersphere/base/mapper/UiTaskRefreshMapper.java
Patch:
@@ -8,4 +8,6 @@ public interface UiTaskRefreshMapper {
     UiTaskRefresh getByTaskKey(@Param("taskKey") String taskKey);
 
     void insert(UiTaskRefresh uiTaskRefresh);
+
+    void update(@Param("refresh") UiTaskRefresh refresh);
 }

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -266,7 +266,9 @@ private void initProjectDefaultNode(String projectId) {
         extModuleNodeMapper.insert(ProjectModuleDefaultNodeEnum.UI_SCENARIO_DEFAULT_NODE.getTableName(), record);
         record.setId(UUID.randomUUID().toString());
         record.setName(ProjectModuleDefaultNodeEnum.UI_ELEMENT_DEFAULT_NODE.getNodeName());
+        record.setModulePath("/" + record.getName());
         extModuleNodeMapper.insertWithModulePath(ProjectModuleDefaultNodeEnum.UI_ELEMENT_DEFAULT_NODE.getTableName(), record);
+        record.setModulePath(null);
 
         ApiModule apiRecord = new ApiModule();
         BeanUtils.copyBean(apiRecord, record);

File: backend/src/main/java/io/metersphere/controller/request/GroupRequest.java
Patch:
@@ -5,5 +5,6 @@
 @Data
 public class GroupRequest {
     private String resourceId;
+    private String projectId;
     private String type;
 }

File: backend/src/main/java/io/metersphere/controller/request/group/EditGroupRequest.java
Patch:
@@ -28,4 +28,5 @@ public class EditGroupRequest extends Group {
     private String userGroupId;
     private List<OrderRequest> orders;
     private boolean onlyQueryCurrentProject = false;
+    private boolean onlyQueryGlobal = false;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRequest.java
Patch:
@@ -33,4 +33,7 @@ public class ApiDefinitionRequest extends BaseQueryRequest {
     private boolean repeatCase;
     //是否进入待更新列表
     private Boolean toBeUpdated;
+
+    //当前时间减去进入待更新的时间
+    private Long toBeUpdateTime;
 }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -85,7 +85,7 @@ public MsExecResponseDTO jenkinsRun(RunCaseRequest request) {
             request.setEnvironmentId(extApiTestCaseMapper.getApiCaseEnvironment(request.getCaseId()));
         }
         //提前生成报告
-        ApiDefinitionExecResultWithBLOBs report = ApiDefinitionExecResultUtil.add(caseWithBLOBs.getId(), APITestStatus.Running.name(), request.getReportId(),Objects.requireNonNull(SessionUtils.getUser()).getId());
+        ApiDefinitionExecResultWithBLOBs report = ApiDefinitionExecResultUtil.add(caseWithBLOBs.getId(), APITestStatus.Running.name(), request.getReportId(), Objects.requireNonNull(SessionUtils.getUser()).getId());
         report.setName(caseWithBLOBs.getName());
         report.setTriggerMode(ApiRunMode.JENKINS.name());
         report.setType(ApiRunMode.JENKINS.name());
@@ -135,6 +135,7 @@ public MsExecResponseDTO exec(RunCaseRequest request) {
                     ApiDefinitionWithBLOBs apiDefinitionWithBLOBs = apiDefinitionMapper.selectByPrimaryKey(caseWithBLOBs.getApiDefinitionId());
                     if (apiDefinitionWithBLOBs.getProtocol().equals("HTTP")) {
                         apiDefinitionWithBLOBs.setToBeUpdated(true);
+                        apiDefinitionWithBLOBs.setToBeUpdateTime(System.currentTimeMillis());
                         apiDefinitionMapper.updateByPrimaryKey(apiDefinitionWithBLOBs);
                     }
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionSyncService.java
Patch:
@@ -1,9 +1,12 @@
 package io.metersphere.api.service;
 
+import io.metersphere.api.dto.definition.ApiSyncCaseRequest;
 import io.metersphere.api.dto.definition.SaveApiDefinitionRequest;
 
 public interface ApiDefinitionSyncService {
 
     void syncApi(SaveApiDefinitionRequest request);
 
+    ApiSyncCaseRequest getApiSyncCaseRequest(String projectId);
+
 }

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -75,6 +75,7 @@ public void remake(JmeterRunRequestDTO request) {
                         ApiDefinitionWithBLOBs apiDefinitionWithBLOBs = apiDefinitionMapper.selectByPrimaryKey(apiTestCase.getApiDefinitionId());
                         if (apiDefinitionWithBLOBs.getProtocol().equals("HTTP")) {
                             apiDefinitionWithBLOBs.setToBeUpdated(true);
+                            apiDefinitionWithBLOBs.setToBeUpdateTime(System.currentTimeMillis());
                             apiDefinitionMapper.updateByPrimaryKey(apiDefinitionWithBLOBs);
                         }
                     }
@@ -117,7 +118,7 @@ public void remake(JmeterRunRequestDTO request) {
             } else if (StringUtils.equalsAny(request.getRunMode(), ApiRunMode.UI_SCENARIO_PLAN.name(),
                     request.getRunMode(), ApiRunMode.UI_SCHEDULE_SCENARIO_PLAN.name(), ApiRunMode.UI_JENKINS_SCENARIO_PLAN.name())) {
                 remarkUiScenarioPlan(request);
-            }else {
+            } else {
                 ApiScenarioReportWithBLOBs report = apiScenarioReportMapper.selectByPrimaryKey(request.getReportId());
                 if (report != null) {
                     report.setStatus(APITestStatus.Error.name());

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinition.java
Patch:
@@ -61,5 +61,7 @@ public class ApiDefinition implements Serializable {
 
     private Boolean toBeUpdated;
 
+    private Long toBeUpdateTime;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/ApiTestCase.java
Patch:
@@ -47,5 +47,7 @@ public class ApiTestCase implements Serializable {
 
     private Boolean toBeUpdated;
 
+    private Long toBeUpdateTime;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -30,7 +30,6 @@ public class TestPlanTestCaseController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TestPlanCaseDTO>> getTestPlanCases(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestPlanCaseRequest request) {
-        testPlanTestCaseService.wrapQueryTestPlanCaseRequest(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testPlanTestCaseService.list(request));
     }
@@ -96,7 +95,6 @@ public List<TestPlanCaseDTO> getPrepareTestCases(@PathVariable int count, @Reque
 
     @PostMapping("/list/all")
     public List<TestPlanCaseDTO> getTestPlanCases(@RequestBody QueryTestPlanCaseRequest request) {
-        testPlanTestCaseService.wrapQueryTestPlanCaseRequest(request);
         return testPlanTestCaseService.list(request);
     }
 

File: backend/src/main/java/io/metersphere/track/request/testplancase/QueryTestPlanCaseRequest.java
Patch:
@@ -35,8 +35,6 @@ public class QueryTestPlanCaseRequest extends BaseQueryRequest {
 
     private String id;
 
-    private Boolean isCustomNum = false;
-
     private String projectName;
 
     private Map<String, Object> combine;

File: backend/src/main/java/io/metersphere/dto/ProjectConfig.java
Patch:
@@ -26,4 +26,7 @@ public class ProjectConfig {
     private Boolean cleanLoadReport = false;
     private String cleanLoadReportExpr;
     private Boolean urlRepeatable = false;
+    private String triggerUpdate;
+    private Boolean openUpdateTime = false;
+    private String openUpdateRuleTime;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtModuleNodeMapper.java
Patch:
@@ -24,6 +24,8 @@ public interface ExtModuleNodeMapper {
 
     void insert(@Param("tableName") String tableName, @Param("record") ModuleNode record);
 
+    void insertWithModulePath(@Param("tableName") String tableName, @Param("record") ModuleNode record);
+
     ModuleNodeDTO get(@Param("tableName") String tableName, @Param("id") String id);
 
     void updatePos(@Param("tableName") String tableName, @Param("id") String id, @Param("pos")  Double pos);

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -266,7 +266,7 @@ private void initProjectDefaultNode(String projectId) {
         extModuleNodeMapper.insert(ProjectModuleDefaultNodeEnum.UI_SCENARIO_DEFAULT_NODE.getTableName(), record);
         record.setId(UUID.randomUUID().toString());
         record.setName(ProjectModuleDefaultNodeEnum.UI_ELEMENT_DEFAULT_NODE.getNodeName());
-        extModuleNodeMapper.insert(ProjectModuleDefaultNodeEnum.UI_ELEMENT_DEFAULT_NODE.getTableName(), record);
+        extModuleNodeMapper.insertWithModulePath(ProjectModuleDefaultNodeEnum.UI_ELEMENT_DEFAULT_NODE.getTableName(), record);
 
         ApiModule apiRecord = new ApiModule();
         BeanUtils.copyBean(apiRecord, record);

File: backend/src/main/java/io/metersphere/service/CustomFieldService.java
Patch:
@@ -250,8 +250,9 @@ public List<CustomFieldResource> getCustomFieldResource(String customFieldsStr)
     private CustomFieldResource constructorCustomFieldResource(CustomFieldItemDTO dto) {
         CustomFieldResource resource = new CustomFieldResource();
         resource.setFieldId(dto.getId());
-        if (StringUtils.isNotBlank(dto.getType()) && StringUtils.equalsAny(CustomFieldType.RICH_TEXT.getValue(), CustomFieldType.TEXTAREA.getValue())) {
-            resource.setTextValue(dto.getValue().toString());
+        if (StringUtils.isNotBlank(dto.getType()) &&
+                StringUtils.equalsAny(dto.getType(), CustomFieldType.RICH_TEXT.getValue(), CustomFieldType.TEXTAREA.getValue())) {
+            resource.setTextValue(dto.getValue() == null ? "" : dto.getValue().toString());
         } else {
             resource.setValue(JSONObject.toJSONString(dto.getValue()));
         }

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -1368,14 +1368,16 @@ private ApiModule getChooseMinModule(String[] tagTree, ApiModule parentModule, M
             int finalI = i;
             //在选择的模块下建模块，查看选择的模块下有没有同名的模块
             List<ApiModule> moduleList = pidChildrenMap.get(parentModule.getId());
-            if (moduleList != null && !moduleList.isEmpty()) {
+            if (moduleList != null) {
                 List<ApiModule> collect1 = moduleList.stream().filter(t -> t.getName().equals(tagTree[finalI])).collect(Collectors.toList());
                 if (collect1.isEmpty()) {
                     return createModule(tagTree, i, parentModule, moduleMap, pidChildrenMap, idPathMap);
                 } else {
                     returnModule = collect1.get(0);
                     parentModule = collect1.get(0);
                 }
+            } else {
+                return createModule(tagTree, i, parentModule, moduleMap, pidChildrenMap, idPathMap);
             }
         }
         return returnModule;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1698,7 +1698,7 @@ public void editApiByParam(ApiBatchRequest request) {
                 if (StringUtils.isEmpty(request.getModuleId())) {
                     apiDefinitionRequest.setModuleId(api.getModuleId());
                 } else {
-                    apiDefinitionRequest.setMethod((request.getModuleId()));
+                    apiDefinitionRequest.setModuleId((request.getModuleId()));
                 }
                 if (StringUtils.isEmpty(request.getModulePath())) {
                     apiDefinitionRequest.setModulePath(api.getModulePath());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -57,7 +57,7 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<PlanReportCaseDTO> selectForPlanReport(String planId);
 
-    List<TestPlanCaseDTO> getCases(@Param("planId") String planId, @Param("status") String status);
+    List<TestPlanCaseDTO> getCasesByStatusList(@Param("planId") String planId, @Param("statusList") List<String> statusList);
 
     List<String> selectPlanIds();
 

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -135,9 +135,9 @@ public int deleteTestCase(@PathVariable String id) {
         return testPlanTestCaseService.deleteTestCase(id);
     }
 
-    @GetMapping("/list/failure/{planId}")
-    public List<TestPlanCaseDTO> getFailureCases(@PathVariable String planId) {
-        return testPlanTestCaseService.getFailureCases(planId);
+    @PostMapping("/list/all/{planId}")
+    public List<TestPlanCaseDTO> getFailureCases(@PathVariable String planId, @RequestBody(required = false) List<String> statusList) {
+        return testPlanTestCaseService.getAllCasesByStatusList(planId, statusList);
     }
 
     @GetMapping("/list/all/{planId}")

File: backend/src/main/java/io/metersphere/track/dto/TestPlanSimpleReportDTO.java
Patch:
@@ -40,7 +40,6 @@ public class TestPlanSimpleReportDTO extends TestPlanReportContent {
     private TestPlanApiResultReportDTO apiResult;
     private TestPlanLoadResultReportDTO loadResult;
 
-    List<TestPlanCaseDTO> functionFailureCases;
     List<TestPlanCaseDTO> functionAllCases;
     List<IssuesDao> issueList;
     List<TestPlanFailureApiDTO> apiFailureCases;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1235,8 +1235,8 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
             scenarioWithBLOBs.setId(UUID.randomUUID().toString());
             scenarioWithBLOBs.setCreateTime(System.currentTimeMillis());
             if (scenarioWithBLOBs.getVersionId() != null && scenarioWithBLOBs.getVersionId().equals("update")) {
-                if (StringUtils.isNotEmpty(apiTestImportRequest.getVersionId())) {
-                    scenarioWithBLOBs.setVersionId(apiTestImportRequest.getVersionId());
+                if (StringUtils.isNotEmpty(apiTestImportRequest.getUpdateVersionId())) {
+                    scenarioWithBLOBs.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 } else {
                     scenarioWithBLOBs.setVersionId(apiTestImportRequest.getDefaultVersion());
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -2088,7 +2088,7 @@ public List<ApiDefinitionWithBLOBs> preparedUrl(String projectId, String method,
             return new ArrayList<>();
         } else {
             ApiDefinitionExample example = new ApiDefinitionExample();
-            example.createCriteria().andMethodEqualTo(method).andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andProtocolEqualTo("HTTP");
+            example.createCriteria().andMethodEqualTo(method).andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andProtocolEqualTo("HTTP").andLatestEqualTo(true);
             List<ApiDefinition> apiList = apiDefinitionMapper.selectByExample(example);
             List<String> apiIdList = new ArrayList<>();
             boolean urlSuffixEndEmpty = false;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -56,4 +56,6 @@ public interface ExtApiDefinitionExecResultMapper {
     List<ApiDefinitionExecResultWithBLOBs> selectRerunResult(@Param("reportId") String reportId);
 
     List<String> selectByProjectIdAndLessThanTime(@Param("projectId") String projectId, @Param("time") long time);
+
+    List<ApiDefinitionExecResultWithBLOBs> selectByResourceIdsAndMaxCreateTime(@Param("ids") List<String> resourceIds);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -165,7 +165,7 @@ private JSONPostProcessor jsonPostProcessor(MsExtractJSONPath extractJSONPath, S
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("JSONPostProcessorGui"));
         extractor.setRefNames(extractJSONPath.getVariable());
         extractor.setJsonPathExpressions(extractJSONPath.getExpression());
-        extractor.setComputeConcatenation(true);
+        extractor.setComputeConcatenation(extractJSONPath.isMultipleMatching());
         if (extractJSONPath.isMultipleMatching()) {
             extractor.setMatchNumbers("-1");
         }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -46,9 +46,8 @@ public List<ProjectDTO> listAll() {
         return projectService.getProjectList(request);
     }
 
-    /*jenkins项目列表*/
     @GetMapping("/listAll/{workspaceId}")
-    @RequiresPermissions(PermissionConstants.WORKSPACE_PROJECT_MANAGER_READ)
+    @RequiresPermissions(value = {PermissionConstants.WORKSPACE_PROJECT_MANAGER_READ, PermissionConstants.SYSTEM_USER_READ}, logical = Logical.OR)
     public List<ProjectDTO> listAll(@PathVariable String workspaceId) {
         ProjectRequest request = new ProjectRequest();
         request.setWorkspaceId(workspaceId);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1820,7 +1820,7 @@ public TestPlanSimpleReportDTO getReport(String planId, TestPlanExecuteReportDTO
             report.setExecuteRate(0.0);
         }
         if (report.getPassCount() != 0 && report.getCaseCount() != null) {
-            report.setPassRate(report.getPassCount() * 0.1 * 10 / report.getExecuteCount());
+            report.setPassRate(report.getPassCount() * 0.1 * 10 / report.getCaseCount());
         } else {
             report.setPassRate(0.0);
         }

File: backend/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -27,8 +27,7 @@ public class FileUtils {
     public static final String MD_IMAGE_DIR = "/opt/metersphere/data/image/markdown";
     public static final String UI_IMAGE_DIR = "/opt/metersphere/data/image/ui/screenshots";
     public static final String ATTACHMENT_DIR = "/opt/metersphere/data/attachment";
-    public static final String TEST_CASE_ATTACHMENT_DIR = "/opt/metersphere/data/attachment/testcase";
-    public static final String ISSUE_ATTACHMENT_DIR = "/opt/metersphere/data/attachment/issue";
+    public static final String ATTACHMENT_TMP_DIR = "/opt/metersphere/data/attachment/tmp";
 
 
     public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {

File: backend/src/main/java/io/metersphere/track/issue/IssuesPlatform.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.track.request.testcase.IssuesRequest;
 import io.metersphere.track.request.testcase.IssuesUpdateRequest;
 import org.springframework.http.ResponseEntity;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.util.List;
 
@@ -31,13 +32,13 @@ public interface IssuesPlatform {
      *
      * @param issuesRequest issueRequest
      */
-    IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest);
+    IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest, List<MultipartFile> files);
 
     /**
      * 更新缺陷
      * @param request
      */
-    void updateIssue(IssuesUpdateRequest request);
+    void updateIssue(IssuesUpdateRequest request, List<MultipartFile> files);
 
     /**
      * 删除缺陷平台缺陷

File: backend/src/main/java/io/metersphere/track/issue/LocalPlatform.java
Patch:
@@ -13,6 +13,7 @@
 import io.metersphere.track.request.testcase.IssuesUpdateRequest;
 import io.metersphere.track.request.testcase.TestCaseBatchRequest;
 import org.apache.commons.lang3.StringUtils;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.util.List;
 import java.util.UUID;
@@ -41,7 +42,7 @@ public List<DemandDTO> getDemandList(String projectId) {
     }
 
     @Override
-    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
+    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest, List<MultipartFile> files) {
         String issueStatus = "new";
         if (StringUtils.isNotBlank(issuesRequest.getCustomFields())) {
             List<CustomFieldItemDTO> customFields = issuesRequest.getRequestFields();
@@ -75,7 +76,7 @@ public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
     }
 
     @Override
-    public void updateIssue(IssuesUpdateRequest request) {
+    public void updateIssue(IssuesUpdateRequest request, List<MultipartFile> files) {
         handleIssueUpdate(request);
     }
 }

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -28,6 +28,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.util.LinkedMultiValueMap;
 import org.springframework.util.MultiValueMap;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.util.*;
 import java.util.stream.Collectors;
@@ -88,7 +89,7 @@ public List<DemandDTO> getDemandList(String projectId) {
     }
 
     @Override
-    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
+    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest, List<MultipartFile> files) {
 
         MultiValueMap<String, Object> param = buildUpdateParam(issuesRequest);
         TapdBug bug = tapdClient.addIssue(param);
@@ -109,7 +110,7 @@ public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
     }
 
     @Override
-    public void updateIssue(IssuesUpdateRequest request) {
+    public void updateIssue(IssuesUpdateRequest request, List<MultipartFile> files) {
         MultiValueMap<String, Object> param = buildUpdateParam(request);
         param.add("id", request.getPlatformId());
         handleIssueUpdate(request);

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -37,6 +37,7 @@
 import org.springframework.util.LinkedMultiValueMap;
 import org.springframework.util.MultiValueMap;
 import org.springframework.web.client.RestTemplate;
+import org.springframework.web.multipart.MultipartFile;
 
 import java.net.URLDecoder;
 import java.net.URLEncoder;
@@ -197,7 +198,7 @@ public IssuesWithBLOBs getUpdateIssues(IssuesWithBLOBs issue, JSONObject bug) {
     }
 
     @Override
-    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
+    public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest, List<MultipartFile> files) {
         setUserConfig();
 
         MultiValueMap<String, Object> param = buildUpdateParam(issuesRequest);
@@ -228,7 +229,7 @@ public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
     }
 
     @Override
-    public void updateIssue(IssuesUpdateRequest request) {
+    public void updateIssue(IssuesUpdateRequest request, List<MultipartFile> files) {
         setUserConfig();
         MultiValueMap<String, Object> param = buildUpdateParam(request);
         if (request.getTransitions() != null) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanMessageService.java
Patch:
@@ -52,6 +52,9 @@ public class TestPlanMessageService {
 
     @Async
     public void checkTestPlanStatusAndSendMessage(TestPlanReport report, TestPlanReportContentWithBLOBs testPlanReportContent, boolean sendMessage) {
+        if (report == null) {
+            return;
+        }
         if (testPlanReportContent != null) {
             report = testPlanReportService.checkTestPlanReportHasErrorCase(report, testPlanReportContent);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -964,17 +964,17 @@ private JSONObject buildContent(JSONObject respOrReq) {
                         ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
                     }
                 }
-            } else if (bodyType.equalsIgnoreCase("RAW")) {
+            } else if (bodyType != null && bodyType.equalsIgnoreCase("RAW")) {
                 bodyInfo = new JSONObject();
                 ((JSONObject) bodyInfo).put("type", "string");
                 if (body != null && body.get("raw") != null) {
                     ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
                 }
-            } else if (bodyType.equalsIgnoreCase("XML")) {
+            } else if (bodyType != null && bodyType.equalsIgnoreCase("XML")) {
                 String xmlText = body.getString("raw");
                 JSONObject xmlToJson = XMLUtils.XmlToJson(xmlText);
                 bodyInfo = buildRequestBodyJsonInfo(xmlToJson);
-            } else if (bodyType.equalsIgnoreCase("WWW_FORM") || bodyType.equalsIgnoreCase("Form Data") || bodyType.equalsIgnoreCase("BINARY")) {    //  key-value 类格式
+            } else if (bodyType != null && (bodyType.equalsIgnoreCase("WWW_FORM") || bodyType.equalsIgnoreCase("Form Data") || bodyType.equalsIgnoreCase("BINARY"))) {    //  key-value 类格式
                 JSONObject formData = getformDataProperties(body.getJSONArray("kvs"));
                 bodyInfo = buildFormDataSchema(formData);
             }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1211,7 +1211,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
         if (CollectionUtils.isEmpty(sameRequest)) {
             scenarioWithBLOBs.setId(UUID.randomUUID().toString());
             scenarioWithBLOBs.setCreateTime(System.currentTimeMillis());
-            if (!scenarioWithBLOBs.getVersionId().equals("update")) {
+            if (scenarioWithBLOBs.getVersionId() != null && !scenarioWithBLOBs.getVersionId().equals("update")) {
                 scenarioWithBLOBs.setOrder(getImportNextOrder(apiTestImportRequest.getProjectId()));
                 // 导入时设置版本
                 scenarioWithBLOBs.setRefId(scenarioWithBLOBs.getId());
@@ -1248,7 +1248,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
                 scenarioWithBLOBs.setCreateTime(System.currentTimeMillis());
                 scenarioWithBLOBs.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 scenarioWithBLOBs.setLatest(apiTestImportRequest.getVersionId().equals(apiTestImportRequest.getDefaultVersion()));
-                if (!scenarioWithBLOBs.getVersionId().equals("update")) {
+                if (scenarioWithBLOBs.getVersionId() != null && !scenarioWithBLOBs.getVersionId().equals("update")) {
                     scenarioWithBLOBs.setRefId(sameRequest.get(0).getRefId());
                     scenarioWithBLOBs.setNum(sameRequest.get(0).getNum()); // 使用第一个num当作本次的num
                     scenarioWithBLOBs.setOrder(sameRequest.get(0).getOrder());

File: backend/src/main/java/io/metersphere/commons/constants/APITestStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum APITestStatus {
-    Saved, Starting, Running, Reporting, Completed, Debug, Error, Success,Underway,Waiting,Rerunning
+    Saved, Starting, Running, Reporting, Completed, Debug, Error, Success, Underway, Waiting, Rerunning, Prepare
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1904,7 +1904,7 @@ public void checkIsRelateTest(String testId) {
      *
      * @return
      */
-    private int getNextNum(String projectId) {
+    public int getNextNum(String projectId) {
         TestCase testCase = extTestCaseMapper.getMaxNumByProjectId(projectId);
         if (testCase == null || testCase.getNum() == null) {
             return 100001;

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioExportJmxDTO.java
Patch:
@@ -5,6 +5,7 @@
 import lombok.Setter;
 
 import java.util.List;
+import java.util.Map;
 
 @Getter
 @Setter
@@ -16,6 +17,8 @@ public class ApiScenarioExportJmxDTO {
 
     //性能测试引用场景时需要场景下的附件
     private List<FileMetadata> fileMetadataList;
+    //项目-环境id
+    private Map<String, List<String>> projectEnvMap;
 
     public ApiScenarioExportJmxDTO(String name, String jmx) {
         this.name = name;

File: backend/src/main/java/io/metersphere/base/domain/LoadTestReportWithBLOBs.java
Patch:
@@ -17,5 +17,7 @@ public class LoadTestReportWithBLOBs extends LoadTestReport implements Serializa
 
     private String advancedConfiguration;
 
+    private String envInfo;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/LoadTestWithBLOBs.java
Patch:
@@ -13,5 +13,7 @@ public class LoadTestWithBLOBs extends LoadTest implements Serializable {
 
     private String advancedConfiguration;
 
+    private String envInfo;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/dto/LoadTestDTO.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.dto;
 
-import io.metersphere.base.domain.LoadTest;
+import io.metersphere.base.domain.LoadTestWithBLOBs;
 import io.metersphere.base.domain.Schedule;
 import lombok.Getter;
 import lombok.Setter;
@@ -9,7 +9,7 @@
 
 @Getter
 @Setter
-public class LoadTestDTO extends LoadTest {
+public class LoadTestDTO extends LoadTestWithBLOBs {
     private String projectName;
     private String userName;
     private String versionName;

File: backend/src/main/java/io/metersphere/performance/request/SaveTestPlanRequest.java
Patch:
@@ -15,4 +15,5 @@ public class SaveTestPlanRequest extends TestPlanRequest {
     private Map<String, Integer> fileSorts;
     private List<String> conversionFileIdList;
     private List<ApiLoadTest> apiList;
+    private Map<String, List<String>> projectEnvMap;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -595,6 +595,9 @@ public SwaggerApiExportResult swagger3Export(List<ApiDefinitionWithBLOBs> apiDef
                 if (modulePath.contains("/")) {
                     split = modulePath.split("/");
                 }
+                if (split.length == 0 && StringUtils.isNotBlank(modulePath)) {
+                    split = new String[]{modulePath};
+                }
                 swaggerApiInfo.setTags(Arrays.asList(split));
             }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -897,7 +897,7 @@ private void _importCreate(List<ApiDefinitionWithBLOBs> sameRequest, ApiDefiniti
 
             apiDefinition.setCreateTime(System.currentTimeMillis());
             apiDefinition.setUpdateTime(System.currentTimeMillis());
-            if (apiDefinition.getVersionId().equals("update")) {
+            if (apiDefinition.getVersionId() != null && apiDefinition.getVersionId().equals("update")) {
                 if (StringUtils.isNotEmpty(apiTestImportRequest.getUpdateVersionId())) {
                     apiDefinition.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 } else {

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -1108,7 +1108,7 @@ private void buildCaseList(Map<String, List<ApiTestCaseWithBLOBs>> oldCaseMap,
         //找出每个接口的case
         List<ApiTestCaseWithBLOBs> apiTestCases = oldCaseMap.get(definitionWithBLOBs.getId());
         Map<String, ApiTestCaseWithBLOBs> oldCaseNameMap;
-        if (!apiTestCases.isEmpty()) {
+        if (apiTestCases != null && !apiTestCases.isEmpty()) {
             oldCaseNameMap = apiTestCases.stream().collect(Collectors.toMap(ApiTestCase::getName, testCase -> testCase));
 
             caseNameMap.forEach((name, caseWithBLOBs1) -> {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -841,6 +841,9 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
     }
 
     private void importCase(ApiDefinitionWithBLOBs apiDefinition, ApiTestCaseMapper apiTestCaseMapper, List<ApiTestCaseWithBLOBs> caseList) {
+        if (caseList == null || caseList.isEmpty()) {
+            return;
+        }
         for (ApiTestCaseWithBLOBs apiTestCaseWithBLOBs : caseList) {
             apiTestCaseWithBLOBs.setApiDefinitionId(apiDefinition.getId());
             apiTestCaseWithBLOBs.setVersionId(apiDefinition.getVersionId());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -688,7 +688,6 @@ private static List<MsTestElement> orderList(List<MsTestElement> list) {
                     list.get(i).setIndex(String.valueOf(i));
                 }
             }
-            return list.stream().sorted(Comparator.comparing(MsTestElement::getIndex)).collect(Collectors.toList());
         }
         return list;
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtLoadTestReportMapper.java
Patch:
@@ -33,4 +33,6 @@ public interface ExtLoadTestReportMapper {
 
     List<String> selectReportIdByTestId(@Param("testId") String testId);
 
+    String selectStatusById(String id);
+
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -28,7 +28,7 @@ public interface ExtTestPlanLoadCaseMapper {
 
     List<TestPlanLoadCaseDTO> getCases(@Param("planId") String planId, @Param("status") String status);
 
-    List<TestPlanLoadCaseDTO> getCasesByIds(@Param("ids") Collection<String> ids, @Param("reportIds") Collection<String> reportIds);
+    List<TestPlanLoadCaseDTO> getCasesByIds(@Param("ids") Collection<String> ids);
 
     List<String> selectPlanIds();
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1650,7 +1650,7 @@ public void buildLoadReport(TestPlanSimpleReportDTO report, JSONObject config, M
         if (checkReportConfig(config, "load")) {
             List<TestPlanLoadCaseDTO> allCases = null;
             if (checkReportConfig(config, "load", "all")) {
-                allCases = testPlanLoadCaseService.getAllCases(loadCaseReportMap.keySet(), loadCaseReportMap.values());
+                allCases = testPlanLoadCaseService.getAllCases(loadCaseReportMap);
                 if (saveResponse) {
                     buildLoadResponse(allCases);
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/UpdateApiModuleDTO.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.ApiDefinitionWithBLOBs;
 import io.metersphere.base.domain.ApiModule;
+import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -13,5 +14,6 @@ public class UpdateApiModuleDTO {
     private List<ApiModule> moduleList;
     private List<ApiDefinitionWithBLOBs> needUpdateList;
     private List<ApiDefinitionWithBLOBs> definitionWithBLOBs;
+    private List<ApiTestCaseWithBLOBs> caseWithBLOBs;
 
 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.utils.LoggerUtil;
 import lombok.Data;
 import org.apache.commons.collections4.CollectionUtils;
+import org.apache.commons.lang.StringEscapeUtils;
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.entity.ContentType;
@@ -96,7 +97,7 @@ private void parseJonBodyMock() {
         if (StringUtils.isNotBlank(this.type) && StringUtils.equals(this.type, "JSON")) {
             if (StringUtils.isNotEmpty(this.format) && this.getJsonSchema() != null
                     && "JSON-SCHEMA".equals(this.format)) {
-                this.raw = JSONSchemaRunTest.getJson(JSON.toJSONString(this.getJsonSchema()));
+                this.raw = StringEscapeUtils.unescapeJava(JSONSchemaRunTest.getJson(JSON.toJSONString(this.getJsonSchema())));
             } else {
                 try {
                     if (StringUtils.isNotEmpty(this.getRaw())) {

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -575,6 +575,7 @@ private void checkLoadQuota(LoadTestReportWithBLOBs testReport, Engine engine) {
                 lock.unlock();
             }
         } else {
+            engine.start();
             LogUtil.error("check load test quota fail, quotaService is null.");
         }
     }

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -539,6 +539,7 @@ public List<PlatformUser> getPlatformUser() {
     @Override
     public void syncIssues(Project project, List<IssuesDao> issues) {
         super.isThirdPartTemplate = isThirdPartTemplate();
+        HashMap<String, List<CustomFieldResource>> customFieldMap = new HashMap<>();
 
         IssuesService issuesService = CommonBeanFactory.getBean(IssuesService.class);
         if (project.getThirdPartTemplate()) {
@@ -551,7 +552,7 @@ public void syncIssues(Project project, List<IssuesDao> issues) {
                 String customFields = item.getCustomFields();
                 // 把自定义字段存入新表
                 List<CustomFieldResource> customFieldResource = customFieldService.getCustomFieldResource(customFields);
-                customFieldIssuesService.addFields(item.getId(), customFieldResource);
+                customFieldMap.put(item.getId(), customFieldResource);
                 issuesMapper.updateByPrimaryKeySelective(item);
             } catch (HttpClientErrorException e) {
                 if (e.getRawStatusCode() == 404) {
@@ -563,6 +564,7 @@ public void syncIssues(Project project, List<IssuesDao> issues) {
                 LogUtil.error(e);
             }
         });
+        customFieldIssuesService.batchEditFields(customFieldMap);
     }
 
     @Override

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1334,6 +1334,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
         if (StringUtils.equals("fullCoverage", apiTestImportRequest.getModeId())) {
             _importCreate(sameList, batchMapper, extApiScenarioMapper, scenarioWithBLOBs, apiTestImportRequest, apiTestCaseMapper, apiDefinitionMapper);
         } else if (StringUtils.equals("incrementalMerge", apiTestImportRequest.getModeId())) {
+            scenarioWithBLOBs.setId(UUID.randomUUID().toString());
             if (CollectionUtils.isEmpty(sameList)) {
                 if (scenarioWithBLOBs.getVersionId() != null && scenarioWithBLOBs.getVersionId().equals("new")) {
                     scenarioWithBLOBs.setLatest(apiTestImportRequest.getVersionId().equals(apiTestImportRequest.getDefaultVersion()));
@@ -1342,7 +1343,6 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
                     scenarioWithBLOBs.setRefId(scenarioWithBLOBs.getId());
                     scenarioWithBLOBs.setLatest(true);
                 }
-                scenarioWithBLOBs.setId(UUID.randomUUID().toString());
                 if (StringUtils.isNotEmpty(apiTestImportRequest.getVersionId())) {
                     scenarioWithBLOBs.setVersionId(apiTestImportRequest.getVersionId());
                 } else {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -804,6 +804,7 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
         } else if (StringUtils.equals("incrementalMerge", apiTestImportRequest.getModeId())) {
             if (CollectionUtils.isEmpty(collect)) {
                 String originId = apiDefinition.getId();
+                apiDefinition.setId(UUID.randomUUID().toString());
                 //postman 可能含有前置脚本，接口定义去掉脚本
                 if (apiDefinition.getVersionId() != null && apiDefinition.getVersionId().equals("new")) {
                     apiDefinition.setLatest(apiTestImportRequest.getVersionId().equals(apiTestImportRequest.getDefaultVersion()));
@@ -812,15 +813,13 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
                     apiDefinition.setRefId(apiDefinition.getId());
                     apiDefinition.setLatest(true); // 新增的接口 latest = true
                 }
-                apiDefinition.setId(UUID.randomUUID().toString());
                 if (StringUtils.isNotEmpty(apiTestImportRequest.getVersionId())) {
                     apiDefinition.setVersionId(apiTestImportRequest.getVersionId());
                 } else {
                     apiDefinition.setVersionId(apiTestImportRequest.getDefaultVersion());
                 }
                 batchMapper.insert(apiDefinition);
                 String requestStr = setImportHashTree(apiDefinition);
-
                 // case 设置版本
                 cases.forEach(c -> {
                     c.setVersionId(apiDefinition.getVersionId());

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -749,7 +749,7 @@ public UpdateApiModuleDTO checkApiModule(ApiTestImportRequest request, ApiDefini
             List<String> nameList = optionData.stream().map(ApiDefinitionWithBLOBs::getName).collect(Collectors.toList());
 
             //获取系统内重复数据
-            repeatApiDefinitionWithBLOBs = extApiDefinitionMapper.selectRepeatByProtocol(nameList, protocol);
+            repeatApiDefinitionWithBLOBs = extApiDefinitionMapper.selectRepeatByProtocol(nameList, protocol, projectId);
 
             Map<String, ApiDefinitionWithBLOBs> repeatDataMap = null;
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -97,7 +97,7 @@ public interface ExtApiDefinitionMapper {
 
     List<ApiDefinitionWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByProtocol(@Param("names") List<String> names, @Param("protocol") String protocol);
+    List<ApiDefinitionWithBLOBs> selectRepeatByProtocol(@Param("names") List<String> names, @Param("protocol") String protocol, @Param("projectId") String projectId);
 
     int countById(String id);
 }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseExecuteService.java
Patch:
@@ -268,7 +268,7 @@ public List<MsExecResponseDTO> run(ApiCaseRunRequest request) {
         if (StringUtils.isEmpty(request.getTriggerMode())) {
             request.setTriggerMode(ApiRunMode.DEFINITION.name());
         }
-
+        // 重试数据直接获取执行的报告
         Map<String, ApiDefinitionExecResultWithBLOBs> executeQueue = request.isRerun() ? request.getExecuteQueue() : new LinkedHashMap<>();
 
         String status = request.getConfig().getMode().equals(RunModeConstants.SERIAL.toString()) ? APITestStatus.Waiting.name() : APITestStatus.Running.name();

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -22,7 +22,7 @@ public interface ExtIssuesMapper {
 
     Issues getNextNum(String projectId);
 
-    List<IssuesDao> getIssueForSync(String projectId);
+    List<IssuesDao> getIssueForSync(@Param("projectId") String projectId, @Param("platform") String platform);
 
     List<PlanReportIssueDTO> selectForPlanReport(String planId);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -47,4 +47,6 @@ public interface ExtProjectMapper {
     List<ProjectDTO> queryListByIds(@Param("ids") List<String> ids);
 
     void updateUseDefaultCaseTemplateProject(@Param("originId") String originId,@Param("templateId") String templateId,@Param("projectId") String projectId);
+
+    List<String> getThirdPartProjectIds();
 }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -21,8 +21,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
     private static final String PRODUCT_GET = "/api-getModel-product-getById-productID={0}?zentaosid={1}";
-    private static final String BUG_LIST_URL = "/bug-browse-{1}---0--{2}-{3}-{4}.json?browseType=all&zentaosid={5}";
-
+    private static final String BUG_LIST_URL = "/bug-browse-{1}-0-all-0--{2}-{3}-{4}.json?&zentaosid={5}";
 
     public ZentaoPathInfoClient(String url) {
         super(url);

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -150,7 +150,7 @@ private void runNode(JmeterRunRequestDTO request) {
         }
     }
 
-    private synchronized void send(JmeterRunRequestDTO request) {
+    private void send(JmeterRunRequestDTO request) {
         try {
             if (redisTemplate.opsForValue().get(SmoothWeighted.EXEC_INDEX + request.getPoolId()) != null) {
                 long index = Long.parseLong(redisTemplate.opsForValue().get(SmoothWeighted.EXEC_INDEX + request.getPoolId()).toString());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1335,7 +1335,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
             _importCreate(sameList, batchMapper, extApiScenarioMapper, scenarioWithBLOBs, apiTestImportRequest, apiTestCaseMapper, apiDefinitionMapper);
         } else if (StringUtils.equals("incrementalMerge", apiTestImportRequest.getModeId())) {
             if (CollectionUtils.isEmpty(sameList)) {
-                if (scenarioWithBLOBs.getVersionId() == null || scenarioWithBLOBs.getVersionId().equals("new")) {
+                if (scenarioWithBLOBs.getVersionId() != null && scenarioWithBLOBs.getVersionId().equals("new")) {
                     scenarioWithBLOBs.setLatest(apiTestImportRequest.getVersionId().equals(apiTestImportRequest.getDefaultVersion()));
                 } else {
                     scenarioWithBLOBs.setOrder(getImportNextOrder(request.getProjectId()));

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -805,7 +805,7 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
             if (CollectionUtils.isEmpty(collect)) {
                 String originId = apiDefinition.getId();
                 //postman 可能含有前置脚本，接口定义去掉脚本
-                if (apiDefinition.getVersionId() == null || apiDefinition.getVersionId().equals("new")) {
+                if (apiDefinition.getVersionId() != null && apiDefinition.getVersionId().equals("new")) {
                     apiDefinition.setLatest(apiTestImportRequest.getVersionId().equals(apiTestImportRequest.getDefaultVersion()));
                 } else {
                     apiDefinition.setOrder(getImportNextOrder(apiTestImportRequest.getProjectId()));

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -790,6 +790,9 @@ public UpdateApiModuleDTO checkApiModule(ApiTestImportRequest request, ApiDefini
             }
         }
 
+        if (optionData.isEmpty()) {
+            moduleMap = new HashMap<>();
+        }
         return getUpdateApiModuleDTO(moduleMap, toUpdateList, optionData);
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -93,11 +93,11 @@ public interface ExtApiDefinitionMapper {
 
     int toBeUpdateApi(@Param("ids") List<String> ids, @Param("toBeUpdate") Boolean toBeUpdate);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("versionIds") Set<String> versionIds);
+    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId, @Param("versionIds") Set<String> versionIds);
+    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByProtocol(@Param("names") List<String> names, @Param("protocol") String protocol, @Param("versionIds") Set<String> versionIds);
+    List<ApiDefinitionWithBLOBs> selectRepeatByProtocol(@Param("names") List<String> names, @Param("protocol") String protocol);
 
     int countById(String id);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -91,7 +91,7 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenarioWithBLOBs> selectByStatusIsNotTrash();
 
-    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("names") List<String> names, @Param("projectId") String projectId, @Param("versionIds") Set<String> versionIds);
+    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("names") List<String> names, @Param("projectId") String projectId);
 
 
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/HarParser.java
Patch:
@@ -88,6 +88,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Har har, ApiTestImportRequest
                     url = url.split("\\?")[0];
                 }
             } catch (Exception e) {
+                LogUtil.error(e.getMessage(), e);
             }
 
             //默认取路径的最后一块

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -769,6 +769,7 @@ private void removeRepeat(List<ApiDefinitionWithBLOBs> optionData, Map<String, A
                             moduleMap.remove(modulePath);
                             removeModulePath(moduleMap, moduleOptionData, modulePath);
                         }
+                        moduleDatas.remove(apiDefinitionWithBLOBs);
                     }
                     optionData.remove(apiDefinitionWithBLOBs);
                 }
@@ -984,7 +985,9 @@ private void removeSameData(Map<String, List<ApiDefinitionWithBLOBs>> repeatData
                         moduleMap.remove(modulePath);
                         removeModulePath(moduleMap, moduleOptionData, modulePath);
                     }
+                    moduleDatas.remove(apiDefinitionWithBLOBs);
                 }
+
                 optionData.remove(apiDefinitionWithBLOBs);
             }
         };

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -86,6 +86,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
 
         System.setProperty("jmeter.home", jmeterHome);
 
+        pluginService.loadPlugins();
         // 设置并发队列核心数
         BaseSystemConfigDTO dto = CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo();
         if (StringUtils.isNotEmpty(dto.getConcurrency())) {
@@ -102,8 +103,6 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
 
         initOnceOperate();
 
-        pluginService.loadPlugins();
-
         try {
             Thread.sleep(1 * 60 * 1000);
         } catch (InterruptedException e) {

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/HarParser.java
Patch:
@@ -106,6 +106,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Har har, ApiTestImportRequest
 
             if (harRequest != null) {
                 MsHTTPSamplerProxy request = super.buildRequest(reqName, url, harRequest.method, null);
+                request.setFollowRedirects(true);
                 ApiDefinitionWithBLOBs apiDefinition = super.buildApiDefinition(request.getId(), reqName, url, harRequest.method, importRequest);
                 parseParameters(harRequest, request);
                 parseRequestBody(harRequest, request.getBody());

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -128,6 +128,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
             for (HttpMethod method : httpMethods) {
                 Operation operation = operationMap.get(method);
                 MsHTTPSamplerProxy request = buildRequest(operation, pathName, method.name());
+                request.setFollowRedirects(true);
                 ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method.name(), importRequest);
                 parseParameters(operation, request);
                 addBodyHeader(request);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -144,6 +144,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(OpenAPI openAPI, ApiTestImpor
                 Operation operation = operationsMap.get(method);
                 if (operation != null) {
                     MsHTTPSamplerProxy request = buildRequest(operation, pathName, method);
+                    request.setFollowRedirects(true);
                     ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method, importRequest);
                     apiDefinition.setDescription(operation.getDescription());
                     parseParameters(operation, request);

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -161,7 +161,6 @@ protected MsHTTPSamplerProxy buildRequest(String name, String path, String metho
         request.setHeaders(new ArrayList<>());
         request.setArguments(new ArrayList<>());
         request.setRest(new ArrayList<>());
-        request.setFollowRedirects(true);
         Body body = new Body();
         body.initKvs();
         body.initBinary();

File: backend/src/main/java/io/metersphere/base/domain/SwaggerUrlProject.java
Patch:
@@ -17,6 +17,8 @@ public class SwaggerUrlProject implements Serializable {
 
     private String modeId;
 
+    private Boolean coverModule;
+
     private String config;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/controller/request/ScheduleRequest.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.Schedule;
 import lombok.Getter;
 import lombok.Setter;
+
 import java.util.List;
 
 /**
@@ -35,5 +36,6 @@ public class ScheduleRequest extends Schedule {
     private List<KeyValue> headers;
     private List<KeyValue> arguments;
     private MsAuthManager authManager;
+    private Boolean coverModule = false;
 
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -477,6 +477,7 @@ public void reduction(ApiBatchRequest request) {
                     apiDefinitionRequest.setPath(apiDefinition.getPath());
                     apiDefinitionRequest.setName(apiDefinition.getName());
                     apiDefinitionRequest.setId(apiDefinition.getId());
+                    apiDefinitionRequest.setModuleId(apiDefinition.getModuleId());
                     apiDefinitionRequest.setVersionId(extProjectVersionMapper.getDefaultVersion(request.getProjectId()));
                     checkNameExist(apiDefinitionRequest);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.Issues;
 import io.metersphere.base.domain.IssuesDao;
+import io.metersphere.dto.CustomFieldItemDTO;
 import io.metersphere.track.dto.CustomFieldResourceCompatibleDTO;
 import io.metersphere.track.dto.PlanReportIssueDTO;
 import io.metersphere.track.request.testcase.IssuesRequest;
@@ -36,4 +37,6 @@ public interface ExtIssuesMapper {
     List<CustomFieldResourceCompatibleDTO> getForCompatibleCustomField(String projectId, int offset, int pageSize);
 
     IssuesDao selectByPrimaryKey(String id);
+
+    List<CustomFieldItemDTO> getIssueCustomField(String id);
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldResourceDTO.java
Patch:
@@ -12,5 +12,6 @@
 @ToString(callSuper = true)
 public class CustomFieldResourceDTO extends CustomFieldResource implements Serializable {
     private String name;
+    private String type;
     private static final long serialVersionUID = 1L;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.FileMetadata;
 import io.metersphere.base.domain.IssuesWithBLOBs;
 import io.metersphere.base.domain.ext.CustomFieldResource;
+import io.metersphere.dto.CustomFieldItemDTO;
 import io.metersphere.track.dto.PlatformStatusDTO;
 import lombok.Getter;
 import lombok.Setter;
@@ -18,6 +19,7 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
     private List<String> tapdUsers;
     private List<CustomFieldResource> addFields;
     private List<CustomFieldResource> editFields;
+    private List<CustomFieldItemDTO> requestFields;
     /**
      * zentao bug 处理人
      */

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtOperatingLogMapper.java
Patch:
@@ -15,6 +15,4 @@ public interface ExtOperatingLogMapper {
     List<OperatingLogDTO> findBySourceIdEnv(@Param("request") OperatingLogRequest request);
 
     List<OperatingLogDTO> findSourceIdByLogIds(@Param("ids") List<String> ids);
-
-    boolean isNewInstallation();
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -271,7 +271,7 @@ public static void structureCaseByJson(int i, JSONObject object, ApiTestCaseServ
         apiTestCase.setUpdateTime(System.currentTimeMillis());
         apiTestCase.setVersionId(apiDefinition.getVersionId());
         apiTestCase.setPriority("P0");
-        apiTestCase.setNum(testCaseService.getNextNum(apiTestCase.getApiDefinitionId(), apiDefinition.getNum() + i));
+        apiTestCase.setNum(testCaseService.getNextNum(apiTestCase.getApiDefinitionId(), apiDefinition.getNum() + i, projectId));
         object.put("id", apiTestCase.getId());
         object.put("resourceId", apiTestCase.getId());
         object.put("projectId", projectId);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1189,7 +1189,7 @@ private void insertOrUpdateImportCase(ApiTestCaseWithBLOBs apiTestCase, ApiTestI
         if (sameCase == null) {
             apiTestCase.setId(UUID.randomUUID().toString());
             apiTestCase.setStatus("");
-            apiTestCase.setNum(apiTestCaseService.getNextNum(apiTestCase.getApiDefinitionId(), apiDefinition.getNum()));
+            apiTestCase.setNum(apiTestCaseService.getNextNum(apiTestCase.getApiDefinitionId(), apiDefinition.getNum(), apiDefinition.getProjectId()));
             apiTestCase.setCreateTime(System.currentTimeMillis());
             apiTestCase.setUpdateTime(System.currentTimeMillis());
             apiTestCase.setCreateUserId(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/HarParser.java
Patch:
@@ -46,7 +46,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
             MSException.throwException(e.getMessage());
             LogUtil.error(e.getMessage(), e);
         }
-        if (ObjectUtils.isEmpty(har)) {
+        if (ObjectUtils.isEmpty(har) || har.log == null) {
             MSException.throwException("解析失败，请确认选择的是 Har 格式！");
         }
         ApiDefinitionImport definitionImport = new ApiDefinitionImport();

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1376,7 +1376,6 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
         }
 
         for (int i = 0; i < data.size(); i++) {
-
             ApiScenarioWithBLOBs item = data.get(i);
             List<ApiScenarioWithBLOBs> sameList = needUpdateList.stream().filter(t -> t.getId().equals(item.getId())).collect(toList());
             if (StringUtils.isBlank(item.getCreateUser())) {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -528,9 +528,9 @@ public UpdateScenarioModuleDTO checkScenarioModule(ApiTestImportRequest request,
 
         //处理模块
         setModule(optionData, moduleMap, pidChildrenMap, idPathMap, idModuleMap, chooseModule);
-
+        List<String> names = optionData.stream().map(ApiScenario::getName).collect(Collectors.toList());
         //系统内重复的数据
-        List<ApiScenarioWithBLOBs> repeatApiScenarioWithBLOBs = extApiScenarioMapper.selectRepeatByBLOBs(optionData, projectId, versionSet);
+        List<ApiScenarioWithBLOBs> repeatApiScenarioWithBLOBs = extApiScenarioMapper.selectRepeatByBLOBs(names, projectId, versionSet);
 
         moduleMap = getApiScenarioModuleMap(fullCoverage, fullCoverageScenario, moduleMap, toUpdateList, chooseModuleId, idPathMap, chooseModule, optionData, repeatApiScenarioWithBLOBs);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -91,9 +91,7 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenarioWithBLOBs> selectByStatusIsNotTrash();
 
-    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiScenarioWithBLOBs> blobs, @Param("projectId") String projectId, @Param("versionIds") Set<String> versionIds);
-
-    List<ApiScenarioWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiScenarioWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId, @Param("versionIds") Set<String> versionIds);
+    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("names") List<String> names, @Param("projectId") String projectId, @Param("versionIds") Set<String> versionIds);
 
 
 }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiRetryOnFailureService.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.api.exec.api;
 
 public interface ApiRetryOnFailureService {
-    public String retry(String data, long retryNum);
+    public String retry(String data, long retryNum, boolean isCase);
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1105,9 +1105,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, TestCaseImportRequ
             if (!testCases.isEmpty()) {
                 Integer num = importCreateNum.get();
                 Integer beforeInsertId = beforeImportCreateNum.get();
-
-                for (int i = testCases.size() - 1; i > -1; i--) { // 反向遍历，保持和文件顺序一致
-                    TestCaseWithBLOBs testCase = testCases.get(i);
+                for (TestCaseWithBLOBs testCase : testCases) {
                     testCase.setId(UUID.randomUUID().toString());
                     testCase.setCreateUser(SessionUtils.getUserId());
                     testCase.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -139,6 +139,9 @@ public int deleteByCaseId(String caseId) {
     }
 
     public int deleteByCaseIds(List<String> caseIds) {
+        if (CollectionUtils.isEmpty(caseIds)) {
+            return 0;
+        }
         TestPlanApiCaseExample example = new TestPlanApiCaseExample();
         example.createCriteria()
                 .andApiCaseIdIn(caseIds);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -87,6 +87,7 @@ public class ApiTestCaseService {
     private ApiDefinitionExecResultMapper apiDefinitionExecResultMapper;
     @Resource
     private EsbApiParamService esbApiParamService;
+    @Lazy
     @Resource
     private TestPlanApiCaseService testPlanApiCaseService;
     @Resource

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -161,6 +161,7 @@ protected MsHTTPSamplerProxy buildRequest(String name, String path, String metho
         request.setHeaders(new ArrayList<>());
         request.setArguments(new ArrayList<>());
         request.setRest(new ArrayList<>());
+        request.setFollowRedirects(true);
         Body body = new Body();
         body.initKvs();
         body.initBinary();

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1473,7 +1473,6 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
                     model.setId(exiteModelList.get(0).getId());
                     esbApiParamsMapper.updateByPrimaryKeyWithBLOBs(model);
                 }
-
             }
         }
 

File: backend/src/main/java/io/metersphere/websocket/c/to/c/WebSocketUtils.java
Patch:
@@ -6,6 +6,7 @@
 import javax.websocket.RemoteEndpoint;
 import javax.websocket.Session;
 import java.util.Map;
+import java.util.Optional;
 import java.util.concurrent.ConcurrentHashMap;
 
 public class WebSocketUtils {
@@ -27,8 +28,8 @@ public static void sendMessage(Session session, String message) {
 
     // 单用户推送
     public static void sendMessageSingle(MsgDto dto) {
-        sendMessage(ONLINE_USER_SESSIONS.get(dto.getReportId()), dto.getContent());
-        sendMessage(ONLINE_USER_SESSIONS.get(dto.getToReport()), dto.getContent());
+        sendMessage(ONLINE_USER_SESSIONS.get(Optional.ofNullable(dto.getReportId()).orElse("")), dto.getContent());
+        sendMessage(ONLINE_USER_SESSIONS.get(Optional.ofNullable(dto.getToReport()).orElse("")), dto.getContent());
     }
 
     // 全用户推送

File: backend/src/main/java/io/metersphere/api/dto/automation/UpdateScenarioModuleDTO.java
Patch:
@@ -11,5 +11,6 @@
 @Setter
 public class UpdateScenarioModuleDTO {
     private List<ApiScenarioModule> moduleList;
+    private List<ApiScenarioWithBLOBs> needUpdateList;
     private List<ApiScenarioWithBLOBs> apiScenarioWithBLOBsList;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/UpdateApiModuleDTO.java
Patch:
@@ -11,6 +11,7 @@
 @Setter
 public class UpdateApiModuleDTO {
     private List<ApiModule> moduleList;
-    private List<ApiDefinitionWithBLOBs> apiDefinitionWithBLOBsList;
+    private List<ApiDefinitionWithBLOBs> needUpdateList;
+    private List<ApiDefinitionWithBLOBs> definitionWithBLOBs;
 
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -93,9 +93,9 @@ public interface ExtApiDefinitionMapper {
 
     int toBeUpdateApi(@Param("ids") List<String> ids, @Param("toBeUpdate") Boolean toBeUpdate);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs);
+    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("versionId") String versionId);
 
-    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("moduleId") String moduleId);
+    List<ApiDefinitionWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiDefinitionWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId, @Param("versionId") String versionId);
 
 
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -91,9 +91,9 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenarioWithBLOBs> selectByStatusIsNotTrash();
 
-    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiScenarioWithBLOBs> blobs);
+    List<ApiScenarioWithBLOBs> selectRepeatByBLOBs(@Param("blobs") List<ApiScenarioWithBLOBs> blobs, @Param("projectId") String projectId, @Param("versionId") String versionId);
 
-    List<ApiScenarioWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiScenarioWithBLOBs> blobs, @Param("moduleId") String moduleId);
+    List<ApiScenarioWithBLOBs> selectRepeatByBLOBsSameUrl(@Param("blobs") List<ApiScenarioWithBLOBs> blobs, @Param("projectId") String projectId, @Param("moduleId") String moduleId, @Param("versionId") String versionId);
 
 
 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -959,7 +959,7 @@ public void batchSave(Map<String, RunModeDataDTO> executeQueue, String serialRep
     }
 
     public void reName(ApiScenarioReport reportRequest) {
-        if (StringUtils.equalsIgnoreCase(reportRequest.getReportType(), ReportTypeConstants.API_INDEPENDENT.name())) {
+        if (StringUtils.equalsAnyIgnoreCase(reportRequest.getReportType(), ReportTypeConstants.API_INDEPENDENT.name(), ReportTypeConstants.API_INTEGRATED.name())) {
             ApiDefinitionExecResultWithBLOBs result = definitionExecResultMapper.selectByPrimaryKey(reportRequest.getId());
             if (result != null) {
                 result.setName(reportRequest.getName());

File: backend/src/main/java/io/metersphere/track/issue/client/BaseClient.java
Patch:
@@ -4,11 +4,13 @@
 import com.alibaba.fastjson.JSONObject;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.EncryptUtils;
+import io.metersphere.commons.utils.EnvProxySelector;
 import io.metersphere.commons.utils.LogUtil;
 import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
 import org.apache.http.conn.ssl.TrustStrategy;
 import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.http.impl.client.HttpClients;
+import org.apache.http.impl.conn.SystemDefaultRoutePlanner;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.ResponseEntity;
 import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
@@ -31,7 +33,7 @@ public abstract class BaseClient {
             SSLConnectionSocketFactory csf = new SSLConnectionSocketFactory(sslContext);
             CloseableHttpClient httpClient = HttpClients.custom()
                     // 可以支持设置系统代理
-                    .useSystemProperties()
+                    .setRoutePlanner(new SystemDefaultRoutePlanner(new EnvProxySelector()))
                     .setSSLSocketFactory(csf)
                     .build();
             HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();

File: backend/src/main/java/io/metersphere/security/ApiKeyFilter.java
Patch:
@@ -52,7 +52,7 @@ protected boolean onPreHandle(ServletRequest request, ServletResponse response,
 
     @Override
     protected void postHandle(ServletRequest request, ServletResponse response) throws Exception {
-        if (SecurityUtils.getSubject().isAuthenticated()) {
+        if (ApiKeyHandler.isApiKeyCall(WebUtils.toHttp(request)) && SecurityUtils.getSubject().isAuthenticated()) {
             SecurityUtils.getSubject().logout();
         }
     }

File: backend/src/main/java/io/metersphere/track/issue/client/BaseClient.java
Patch:
@@ -30,6 +30,8 @@ public abstract class BaseClient {
                     .build();
             SSLConnectionSocketFactory csf = new SSLConnectionSocketFactory(sslContext);
             CloseableHttpClient httpClient = HttpClients.custom()
+                    // 可以支持设置系统代理
+                    .useSystemProperties()
                     .setSSLSocketFactory(csf)
                     .build();
             HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRequest.java
Patch:
@@ -11,6 +11,7 @@ public class ApiDefinitionRequest extends BaseQueryRequest {
     private String id;
     private String excludeId;
     private String moduleId;
+    private String module;
     private String protocol;
     private String name;
     private String userId;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -411,7 +411,7 @@ public void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScen
      */
     private void orderLoops(List<StepTreeDTO> dtoList) {
         try {
-            List<StepTreeDTO> steps = dtoList.stream().filter(e -> e.getValue() == null)
+            List<StepTreeDTO> steps = dtoList.stream().filter(e -> e.getValue() == null || StringUtils.isEmpty(e.getValue().getId()))
                     .collect(Collectors.toList());
             // 都是没有结果的步骤，不需要再次排序
             if (dtoList.size() == steps.size()) {

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -59,7 +59,7 @@ public RequestResult selectReportContent(@PathVariable String stepId) {
 
     @PostMapping("/delete")
     @MsAuditLog(module = OperLogModule.API_AUTOMATION_REPORT, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = ApiScenarioReportService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.get(#request.id)", targetClass = ApiScenarioReportService.class,
+    @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.get(#request.id, false)", targetClass = ApiScenarioReportService.class,
             subject = "接口报告通知")
     public void delete(@RequestBody DeleteAPIReportRequest request) {
         apiReportService.delete(request);

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -471,10 +471,10 @@ public List<TestReviewDTOWithMetric> listRelateAll(ReviewRelateRequest relateReq
                 countMapDTOS.forEach(item -> {
                     testReview.setTotal(testReview.getTotal() + item.getValue());
                     if (!StringUtils.equals(item.getKey(), TestReviewCaseStatus.Prepare.name())) {
-                        testReview.setReviewed(testReview.getReviewed() + 1);
+                        testReview.setReviewed(testReview.getReviewed() + item.getValue());
                     }
                     if (StringUtils.equals(item.getKey(), TestReviewCaseStatus.Pass.name())) {
-                        testReview.setPass(testReview.getPass() + 1);
+                        testReview.setPass(testReview.getPass() + item.getValue());
                     }
                 });
             });

File: backend/src/main/java/io/metersphere/api/dto/automation/ExecuteType.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.api.dto.automation;
 
 public enum ExecuteType {
-    Saved, Completed, Debug, Marge, Deleted
+    Saved, Completed, Debug, Marge
 }

File: backend/src/main/java/io/metersphere/job/sechedule/CleanUpReportJob.java
Patch:
@@ -56,7 +56,7 @@ void businessExecute(JobExecutionContext context) {
                 this.doCleanUp(projectService::cleanUpLoadReport, config.getCleanLoadReportExpr());
             }
             // 定时删除 UI 调试模式生成的截图
-            uiScenarioReportStructureService.cleanUpReport(null);
+            projectService.cleanUpUiReportImg();
         } catch (Exception e) {
             LogUtil.error("clean up report error.");
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -157,4 +157,6 @@ public interface ExtTestCaseMapper {
     List<CustomFieldResourceCompatibleDTO> getForCompatibleCustomField(String projectId, int offset, int pageSize);
 
     List<Map<String, Object>> moduleExtraNodeCount(@Param("nodeIds") List<String> nodeIds);
+
+    int bathUpdateByCondition(@Param("request") QueryTestCaseRequest condition, @Param("record") TestCaseWithBLOBs testCaseWithBLOBs);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -524,7 +524,7 @@ private Object getDefaultValueByPropertyType(Schema value) {
             return example == null ? 0 : example;
         } else if (value instanceof NumberSchema) {
             return example == null ? 0.0 : example;
-        } else if (value instanceof StringSchema || value.getType().equals("string")) {
+        } else if (value instanceof StringSchema || StringUtils.equals("string", value.getType())) {
             return example == null ? "" : example;
         } else {// todo 其他类型?
             return getDefaultStringValue(value.getDescription());

File: backend/src/main/java/io/metersphere/notice/sender/AbstractNoticeSender.java
Patch:
@@ -146,6 +146,9 @@ private List<Receiver> getRealUserIds(MessageDetail messageDetail, NoticeModel n
                             toUsers.addAll(receivers);
                         }
                     }
+                    if (paramMap.containsKey("executor")) {
+                        toUsers.add(new Receiver((String) paramMap.get("executor"), NotificationConstants.Type.SYSTEM_NOTICE.name()));
+                    }
                     break;
                 case NoticeConstants.RelatedUser.CREATOR:
                     String creator = (String) paramMap.get("creator");

File: backend/src/main/java/io/metersphere/track/service/TestPlanMessageService.java
Patch:
@@ -108,6 +108,7 @@ public void sendMessage(TestPlan testPlan, TestPlanReport testPlanReport, String
         paramMap.put("projectId", projectId);
         if (userDTO != null) {
             paramMap.put("operator", userDTO.getName());
+            paramMap.put("executor", userDTO.getId());
         }
         paramMap.putAll(new BeanMap(testPlanDTOWithMetric));
 

File: backend/src/main/java/io/metersphere/api/dto/ApiScenarioReportBaseInfoDTO.java
Patch:
@@ -18,4 +18,5 @@ public class ApiScenarioReportBaseInfoDTO {
     private long rspTime;
     private String uiImg;
     private Boolean isNotStep;
+    private String reportId;
 }

File: backend/src/main/java/io/metersphere/api/dto/RequestResultExpandDTO.java
Patch:
@@ -15,6 +15,7 @@
 public class RequestResultExpandDTO extends RequestResult {
     private String status;
     private String uiImg;
+    private String reportId;
     private long time;
     private Map<String, String> attachInfoMap;
 
@@ -32,6 +33,7 @@ public RequestResultExpandDTO(ApiScenarioReportResultWithBLOBs requestResult) {
                 this.setTime(dto.getRspTime());
                 this.setEndTime(dto.getRspTime() - dto.getReqStartTime());
                 this.setUiImg(dto.getUiImg());
+                this.setReportId(dto.getReportId());
                 this.setStatus(requestResult.getStatus());
                 ResponseResult responseResult = this.getResponseResult();
                 responseResult.setResponseCode(dto.getRspCode());

File: backend/src/main/java/io/metersphere/api/dto/UiScenarioReportBaseInfoDTO.java
Patch:
@@ -8,4 +8,5 @@
 public class UiScenarioReportBaseInfoDTO extends ApiScenarioReportBaseInfoDTO {
     private Boolean isNotStep = false;
     private String uiImg;
+    private String reportId;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/ExecuteType.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.api.dto.automation;
 
 public enum ExecuteType {
-    Saved, Completed, Debug, Marge
+    Saved, Completed, Debug, Marge, Deleted
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/RunDefinitionRequest.java
Patch:
@@ -16,6 +16,8 @@ public class RunDefinitionRequest {
 
     private String runMode;
 
+    private String uiRunMode;
+
     private boolean isDebug;
 
     private boolean saved;

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -31,8 +31,8 @@ public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url, @Re
     }
 
     @GetMapping(value = "/ui/get")
-    public ResponseEntity<FileSystemResource> getUiFile(@RequestParam ("fileName") String fileName) {
-        return resourceService.getUiResultImage(fileName);
+    public ResponseEntity<FileSystemResource> getUiFile(@RequestParam ("fileName") String fileName, @RequestParam ("reportId") String reportId) {
+        return resourceService.getUiResultImage(fileName, reportId);
     }
 
     /**

File: backend/src/main/java/io/metersphere/service/ResourceService.java
Patch:
@@ -46,11 +46,11 @@ public ResponseEntity<FileSystemResource> getMdImage(String name) {
         return getImage(FileUtils.MD_IMAGE_DIR + "/" + name);
     }
 
-    public ResponseEntity<FileSystemResource> getUiResultImage(String name) {
+    public ResponseEntity<FileSystemResource> getUiResultImage(String name, String reportId) {
         if (name.contains("/")) {
             MSException.throwException(Translator.get("invalid_parameter"));
         }
-        return getImage(FileUtils.UI_IMAGE_DIR + "/" + name);
+        return getImage(FileUtils.UI_IMAGE_DIR + "/" + reportId +  "/" + name);
     }
 
     public ResponseEntity<FileSystemResource> getImage(String path) {

File: backend/src/main/java/io/metersphere/dto/UserGroupInfoDTO.java
Patch:
@@ -11,4 +11,5 @@ public class UserGroupInfoDTO {
     private String userEmail;
     private String groupId;
     private String groupName;
+    private String sourceId;
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldDao.java
Patch:
@@ -17,5 +17,7 @@ public class CustomFieldDao extends CustomField {
 
     private String customData;
 
+    private String originGlobalId;
+
     private String key;
 }

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -30,6 +30,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 
 @RequestMapping("user")
 @RestController
@@ -131,7 +132,7 @@ public void updateCurrentUserByResourceId(@PathVariable String resourceId) {
 
     @PostMapping("/switch/source/ws/{sourceId}")
     public UserDTO switchWorkspace(@PathVariable(value = "sourceId") String sourceId) {
-        userService.switchUserResource("workspace", sourceId);
+        userService.switchUserResource("workspace", sourceId, Objects.requireNonNull(SessionUtils.getUser()));
         return SessionUtils.getUser();
     }
 

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -410,14 +410,14 @@ public void updateUser(User user) {
         }
     }
 
-    public void switchUserResource(String sign, String sourceId) {
-        SessionUser sessionUser = SessionUtils.getUser();
+    public void switchUserResource(String sign, String sourceId, UserDTO sessionUser) {
         // 获取最新UserDTO
         UserDTO user = getUserDTO(sessionUser.getId());
         User newUser = new User();
 
         if (StringUtils.equals("workspace", sign)) {
             user.setLastWorkspaceId(sourceId);
+            sessionUser.setLastWorkspaceId(sourceId);
             List<Project> projects = getProjectListByWsAndUserId(sessionUser.getId(), sourceId);
             if (projects.size() > 0) {
                 user.setLastProjectId(projects.get(0).getId());
@@ -665,7 +665,7 @@ private void checkNewWorkspaceAndProject(UserDTO user) {
                     .collect(Collectors.toList());
             if (workspaces.size() > 0) {
                 String wsId = workspaces.get(0).getSourceId();
-                switchUserResource("workspace", wsId);
+                switchUserResource("workspace", wsId, user);
             } else {
                 // 用户登录之后没有项目和工作空间的权限就把值清空
                 user.setLastWorkspaceId("");

File: backend/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -44,6 +44,7 @@ public ResultHolder isLogin() throws NoSuchAlgorithmException {
             if (StringUtils.isBlank(user.getLanguage())) {
                 user.setLanguage(LocaleContextHolder.getLocale().toString());
             }
+            userService.autoSwitch(user);
             SessionUser sessionUser = SessionUser.fromUser(user);
             SessionUtils.putUser(sessionUser);
             return ResultHolder.success(sessionUser);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1687,6 +1687,7 @@ public Pager<List<ApiDefinitionResult>> listRelevance(ApiDefinitionRequest reque
         }
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<ApiDefinitionResult> resList = extApiDefinitionMapper.listRelevance(request);
+        buildUserInfo(resList);
         calculateResult(resList, request.getProjectId());
         return PageUtils.setPageInfo(page, resList);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -26,6 +26,8 @@ public interface ExtTestCaseMapper {
 
     int moduleCount(@Param("request") QueryTestCaseRequest request);
 
+    List<String> getPublicProjectIdByWorkSpaceId(@Param("request") QueryTestCaseRequest request);
+
     List<TestCaseDTO> listByMethod(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> listByTestCaseIds(@Param("request") TestCaseBatchRequest request);

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -558,6 +558,8 @@ private void processBackendListener(Element backendListener) {
         String resourcePoolId = context.getResourcePoolId();
         TestResourcePool resourcePool = CommonBeanFactory.getBean(TestResourcePoolService.class).getResourcePool(resourcePoolId);
         if (!BooleanUtils.toBoolean(resourcePool.getBackendListener())) {
+            // 禁用现有的backend listener
+            backendListener.addAttribute("enabled", "false");
             return;
         }
         KafkaProperties kafkaProperties = CommonBeanFactory.getBean(KafkaProperties.class);

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -163,9 +163,7 @@ public Pager<List<User>> getProjectMemberList(@PathVariable int goPage, @PathVar
     @PostMapping("/ws/project/member/list/{workspaceId}/{goPage}/{pageSize}")
     @RequiresPermissions(PermissionConstants.WORKSPACE_PROJECT_MANAGER_READ)
     public Pager<List<User>> getProjectMemberListForWorkspace(@PathVariable int goPage, @PathVariable int pageSize, @PathVariable String workspaceId, @RequestBody QueryMemberRequest request) {
-        request.setWorkspaceId(workspaceId); // workspaceId 作为验证权限用，不在查询中体现
-        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        return PageUtils.setPageInfo(page, userService.getProjectMemberList(request));
+        return userService.getProjectMemberListForWorkspace(workspaceId, goPage, pageSize, request);
     }
 
     @GetMapping("/project/member/list")

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -163,6 +163,7 @@ public Pager<List<User>> getProjectMemberList(@PathVariable int goPage, @PathVar
     @PostMapping("/ws/project/member/list/{workspaceId}/{goPage}/{pageSize}")
     @RequiresPermissions(PermissionConstants.WORKSPACE_PROJECT_MANAGER_READ)
     public Pager<List<User>> getProjectMemberListForWorkspace(@PathVariable int goPage, @PathVariable int pageSize, @PathVariable String workspaceId, @RequestBody QueryMemberRequest request) {
+        request.setWorkspaceId(workspaceId); // workspaceId 作为验证权限用，不在查询中体现
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, userService.getProjectMemberList(request));
     }

File: backend/src/main/java/io/metersphere/security/MsPermissionAnnotationMethodInterceptor.java
Patch:
@@ -37,10 +37,10 @@ public void assertAuthorized(MethodInvocation mi) throws AuthorizationException
                     }
                 } else {
                     try {
-                        if (isExistField(argument, "projectId")) {
+                        if (StringUtils.isEmpty(projectId) && isExistField(argument, "projectId")) {
                             projectId = (String) MethodUtils.invokeMethod(argument, "getProjectId");
                         }
-                        if (isExistField(argument, "workspaceId")) {
+                        if (StringUtils.isEmpty(workspaceId) && isExistField(argument, "workspaceId")) {
                             workspaceId = (String) MethodUtils.invokeMethod(argument, "getWorkspaceId");
                         }
                     } catch (Exception e) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -977,15 +977,15 @@ public void relevance(ApiCaseRelevanceRequest request) {
         Map<String, List<String>> mapping = request.getMapping();
         Map<String, String> envMap = request.getEnvMap();
         Set<String> set = mapping.keySet();
-        List<String> ids = new ArrayList<>(set);
-        Collections.reverse(ids);
+        List<String> relevanceIds = request.getSelectIds();
+        Collections.reverse(relevanceIds);
         String envType = request.getEnvironmentType();
         String envGroupId = request.getEnvGroupId();
         if (set.isEmpty()) {
             return;
         }
         Long nextOrder = ServiceUtils.getNextOrder(request.getPlanId(), extTestPlanScenarioCaseMapper::getLastOrder);
-        for (String id : ids) {
+        for (String id : relevanceIds) {
             Map<String, String> newEnvMap = new HashMap<>(16);
             List<String> list = mapping.get(id);
             list.forEach(l -> newEnvMap.put(l, envMap == null ? "" : envMap.getOrDefault(l, "")));

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -342,7 +342,7 @@ public ApiDefinitionResult create(SaveApiDefinitionRequest request, List<Multipa
     }
 
     public ApiDefinitionResult update(SaveApiDefinitionRequest request, List<MultipartFile> bodyFiles) {
-        if (request.getRequest() != null) {
+        if (request.getRequest() != null && StringUtils.isNotEmpty(request.getRequest().getId())) {
             deleteFileByTestId(request.getRequest().getId());
         }
         request.setBodyUploadIds(null);

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -80,6 +80,7 @@ protected HttpResponse parsePostmanResponse(PostmanItem requestItem) {
         addBodyHeader(request);
         HttpResponse response = new HttpResponse();
         BeanUtils.copyBean(response, request);
+        response.setStatusCode(new ArrayList<>());
         response.setType("HTTP");
         return response;
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -977,13 +977,15 @@ public void relevance(ApiCaseRelevanceRequest request) {
         Map<String, List<String>> mapping = request.getMapping();
         Map<String, String> envMap = request.getEnvMap();
         Set<String> set = mapping.keySet();
+        List<String> ids = new ArrayList<>(set);
+        Collections.reverse(ids);
         String envType = request.getEnvironmentType();
         String envGroupId = request.getEnvGroupId();
         if (set.isEmpty()) {
             return;
         }
         Long nextOrder = ServiceUtils.getNextOrder(request.getPlanId(), extTestPlanScenarioCaseMapper::getLastOrder);
-        for (String id : set) {
+        for (String id : ids) {
             Map<String, String> newEnvMap = new HashMap<>(16);
             List<String> list = mapping.get(id);
             list.forEach(l -> newEnvMap.put(l, envMap == null ? "" : envMap.getOrDefault(l, "")));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtOperatingLogMapper.java
Patch:
@@ -14,5 +14,7 @@ public interface ExtOperatingLogMapper {
 
     List<OperatingLogDTO> findBySourceIdEnv(@Param("request") OperatingLogRequest request);
 
+    List<OperatingLogDTO> findSourceIdByLogIds(@Param("ids") List<String> ids);
+
     boolean isNewInstallation();
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogDTO.java
Patch:
@@ -35,4 +35,6 @@ public class OperatingLogDTO implements Serializable {
     private OperatingLogDetails details;
 
     private String projectId;
+
+    private String operatingLogId;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -578,7 +578,7 @@ public void checkProjectTcpPort(AddProjectRequest project) {
                     .andTypeValueEqualTo(String.valueOf(project.getMockTcpPort()))
                     .andProjectIdNotEqualTo(projectId);
             if (projectApplicationMapper.countByExample(example) > 0) {
-                MSException.throwException("TCP Port is not unique！");
+                MSException.throwException(Translator.get("tcp_mock_not_unique"));
             }
         }
     }
@@ -971,7 +971,7 @@ public String genTcpMockPort(String id) {
             }
         }
         if (returnPort == 0) {
-            MSException.throwException("无可用TCP端口");
+            MSException.throwException(Translator.get("no_tcp_mock_port"));
         }
         return String.valueOf(returnPort);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JmeterDefinitionParser.java
Patch:
@@ -638,6 +638,9 @@ private void convertDubboSample(MsDubboSampler elementNode, DubboSample sampler)
             });
         }
         elementNode.setAttachmentArgs(attachmentArgs);
+        if(StringUtils.isEmpty(elementNode.getMethod())){
+            elementNode.setMethod(elementNode.getProtocol());
+        }
     }
 
     private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -33,7 +33,7 @@ public class MsDNSCacheManager extends MsTestElement {
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;
         // 非导出操作，且不是启用状态则跳过执行
-        if (!config.isOperating() && !this.isEnable()) {
+        if (!this.isEnable()) {
             return;
         }
         for (MsTestElement el : hashTree) {
@@ -103,9 +103,9 @@ private static DNSCacheManager dnsCacheManager(String name, List<Host> hosts) {
         dnsCacheManager.setName(name);
         dnsCacheManager.setProperty(TestElement.TEST_CLASS, DNSCacheManager.class.getName());
         dnsCacheManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DNSCachePanel"));
-        dnsCacheManager.setCustomResolver(true);
+        dnsCacheManager.setCustomResolver(false);
+        dnsCacheManager.setClearEachIteration(true);
         hosts.forEach(host -> dnsCacheManager.addHost(host.getDomain(), host.getIp()));
-        hosts.forEach(host -> dnsCacheManager.addServer(host.getDomain()));
 
         return dnsCacheManager;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -254,7 +254,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             httpSamplerTree.add(arguments);
         }
         //判断是否要开启DNS
-        if (!config.isOperating() && config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
+        if (config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && config.getConfig().get(this.getProjectId()).getCommonConfig().isEnableHost()) {
             MsDNSCacheManager.addEnvironmentVariables(httpSamplerTree, this.getName(), config.getConfig().get(this.getProjectId()));
             MsDNSCacheManager.addEnvironmentDNS(httpSamplerTree, this.getName(), config.getConfig().get(this.getProjectId()), httpConfig);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -76,8 +76,8 @@ public static Map<String, String> getEnvironmentDns(EnvironmentConfig config, Ht
                     String hostDomain = host.getDomain().trim().replace("http://", "").replace("https://", "");
                     if (StringUtils.equals(hostDomain, domain)) {
                         dnsMap.put(hostDomain, host.getIp());
-                    }else if(StringUtils.startsWith(hostDomain,domain+":")){
-                        dnsMap.put(domain,StringUtils.replace(hostDomain,domain,host.getIp()));
+                    } else if (StringUtils.startsWith(hostDomain, domain + ":")) {
+                        dnsMap.put(domain, StringUtils.replace(hostDomain, domain, host.getIp()));
                     }
                 }
             });
@@ -105,7 +105,7 @@ private static DNSCacheManager dnsCacheManager(String name, List<Host> hosts) {
         dnsCacheManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DNSCachePanel"));
         dnsCacheManager.setCustomResolver(true);
         hosts.forEach(host -> dnsCacheManager.addHost(host.getDomain(), host.getIp()));
-        hosts.forEach(host -> dnsCacheManager.addServer(host.getIp()));
+        hosts.forEach(host -> dnsCacheManager.addServer(host.getDomain()));
 
         return dnsCacheManager;
     }

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -26,8 +26,8 @@ public ResponseEntity<FileSystemResource> getFile(@RequestParam ("fileName") Str
     }
 
     @GetMapping(value = "/md/get/url")
-    public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url) {
-        return resourceService.getMdImageByUrl(url);
+    public ResponseEntity<byte[]> getFileByUrl(@RequestParam ("url") String url, @RequestParam (value = "platform", required = false) String platform) {
+        return resourceService.getMdImageByUrl(url, platform);
     }
 
     @GetMapping(value = "/ui/get")

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -154,7 +154,7 @@ public Pager<List<User>> getMemberList(@PathVariable int goPage, @PathVariable i
     }
 
     @PostMapping("/project/member/list/{goPage}/{pageSize}")
-    @RequiresPermissions(PermissionConstants.PROJECT_USER_READ)
+    @RequiresPermissions(value = {PermissionConstants.PROJECT_USER_READ, PermissionConstants.WORKSPACE_USER_READ}, logical = Logical.OR)
     public Pager<List<User>> getProjectMemberList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryMemberRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, userService.getProjectMemberList(request));

File: backend/src/main/java/io/metersphere/controller/WorkspaceController.java
Patch:
@@ -37,6 +37,7 @@ public class WorkspaceController {
             PermissionConstants.SYSTEM_GROUP_READ_EDIT,
             PermissionConstants.SYSTEM_USER_READ_CREATE,
             PermissionConstants.SYSTEM_USER_READ_EDIT,
+            PermissionConstants.SYSTEM_WORKSPACE_READ
     }, logical = Logical.OR)
     public List<Workspace> getWorkspaceList() {
         return workspaceService.getWorkspaceList(new WorkspaceRequest());

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogDTO.java
Patch:
@@ -33,4 +33,6 @@ public class OperatingLogDTO implements Serializable {
     private String operContent;
 
     private OperatingLogDetails details;
+
+    private String projectId;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.IssuesWithBLOBs;
 import io.metersphere.base.domain.ext.CustomFieldResource;
 import io.metersphere.track.issue.domain.jira.JiraTransitionsResponse;
+import io.metersphere.track.dto.PlatformStatusDTO;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -39,5 +40,5 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
      */
     private String devopsFields;
 
-    private JiraTransitionsResponse.Transitions transitions;
+    private PlatformStatusDTO transitions;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -73,8 +73,6 @@ public ApiModule get(String id) {
     }
 
     public List<ApiModuleDTO> getNodeTreeByProjectId(String projectId, String protocol, String versionId) {
-        // 判断当前项目下是否有默认模块，没有添加默认模块
-        this.getDefaultNode(projectId, protocol);
         List<ApiModuleDTO> apiModules = extApiModuleMapper.getNodeTreeByProjectId(projectId, protocol);
         ApiDefinitionRequest request = new ApiDefinitionRequest();
         request.setProjectId(projectId);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -62,9 +62,6 @@ public ApiScenarioModuleService() {
     }
 
     public List<ApiScenarioModuleDTO> getNodeTreeByProjectId(String projectId) {
-        // 判断当前项目下是否有默认模块，没有添加默认模块
-       this.getDefaultNode(projectId);
-
         List<ApiScenarioModuleDTO> nodes = extApiScenarioModuleMapper.getNodeTreeByProjectId(projectId);
         ApiScenarioRequest request = new ApiScenarioRequest();
         request.setProjectId(projectId);

File: backend/src/main/java/io/metersphere/base/domain/ModuleNode.java
Patch:
@@ -8,4 +8,5 @@
 @Data
 public class ModuleNode extends TestCaseNode {
     private Integer caseNum;
+    private String protocol;
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -148,8 +148,6 @@ public List<TestCaseNodeDTO> getNodeTreeByProjectId(String projectId) {
     }
 
     public List<TestCaseNodeDTO> getNodeTreeByProjectId(String projectId, QueryTestCaseRequest request) {
-        // 判断当前项目下是否有默认模块，没有添加默认模块
-        this.getDefaultNode(projectId);
         List<TestCaseNodeDTO> testCaseNodes = extTestCaseNodeMapper.getNodeTreeByProjectId(projectId);
         request.setUserId(SessionUtils.getUserId());
         request.setProjectId(projectId);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1415,9 +1415,9 @@ public void buildApiResponse(List<TestPlanFailureApiDTO> cases) {
             List<String> reportIds = cases.stream().map(TestPlanFailureApiDTO::getReportId).collect(Collectors.toList());
             ApiDefinitionExecResultExample example = new ApiDefinitionExecResultExample();
             example.createCriteria().andIdIn(reportIds);
-            List<ApiDefinitionExecResult> results = apiDefinitionExecResultMapper.selectByExampleWithBLOBs(example);
+            List<ApiDefinitionExecResultWithBLOBs> results = apiDefinitionExecResultMapper.selectByExampleWithBLOBs(example);
             // 格式化数据结果
-            Map<String, ApiDefinitionExecResult> resultMap = results.stream().collect(Collectors.toMap(ApiDefinitionExecResult::getId, item -> item, (k, v) -> k));
+            Map<String, ApiDefinitionExecResultWithBLOBs> resultMap = results.stream().collect(Collectors.toMap(ApiDefinitionExecResult::getId, item -> item, (k, v) -> k));
             cases.forEach(item -> {
                 if (resultMap.get(item.getReportId()) != null &&
                         StringUtils.isNotBlank(resultMap.get(item.getReportId()).getContent())) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1604,6 +1604,8 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
                             if(StringUtils.isEmpty(stepItem)){
                                 stepItem = "";
                             }
+                            //正则去空格、回车、换行符、制表符
+                            stepItem = stepItem.replaceAll("\\s*|\t|\r|\n", "");
                             step.append(num + "." + stepItem + "\n");
                             String resultItem = jsonArray.getJSONObject(j).getString("result");
                             if(StringUtils.isEmpty(resultItem)){
@@ -2748,4 +2750,5 @@ public List<TestCaseNodeDTO> getPublicCaseNode(QueryTestCaseRequest request) {
         List<TestCaseDTO> testCaseDTOS = publicListTestCase(request);
         return testCaseNodeService.getNodeByTestCases(testCaseDTOS);
     }
+
 }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -39,7 +39,6 @@ public class ProjectController {
     private ApiTestEnvironmentService apiTestEnvironmentService;
 
     @GetMapping("/listAll")
-    @RequiresPermissions(PermissionConstants.WORKSPACE_PROJECT_MANAGER_READ)
     public List<ProjectDTO> listAll() {
         String currentWorkspaceId = SessionUtils.getCurrentWorkspaceId();
         ProjectRequest request = new ProjectRequest();

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -377,7 +377,7 @@ public void calcTestPlanRate(List<TestPlanDTOWithMetric> testPlans) {
             Integer functionalExecTotal = 0;
 
             for (CountMapDTO item : statusCountMap) {
-                functionalExecTotal += functionalExecTotal + item.getValue();
+                functionalExecTotal += item.getValue();
                 if (!StringUtils.equals(item.getKey(), TestPlanTestCaseStatus.Prepare.name())
                         && !StringUtils.equals(item.getKey(), TestPlanTestCaseStatus.Underway.name())) {
                     testPlan.setTested(testPlan.getTested() + item.getValue());

File: backend/src/main/java/io/metersphere/track/issue/client/TapdClient.java
Patch:
@@ -81,7 +81,7 @@ public TapdGetIssueResponse getIssueForPageByIds(String projectId, int pageNum,
     }
 
     public JSONArray getDemands(String projectId) {
-        String url = getBaseUrl() + "/stories?workspace_id={1}&limit=200";
+        String url = getBaseUrl() + "/stories?workspace_id={1}&limit=200&fields=id,name";
         ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.GET, getAuthHttpEntity(), String.class, projectId);
         return JSONArray.parseObject(response.getBody()).getJSONArray("data");
     }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -29,6 +29,7 @@ public class TestPlanTestCaseController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TestPlanCaseDTO>> getTestPlanCases(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestPlanCaseRequest request) {
+        testPlanTestCaseService.wrapQueryTestPlanCaseRequest(request);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testPlanTestCaseService.list(request));
     }
@@ -94,6 +95,7 @@ public List<TestPlanCaseDTO> getPrepareTestCases(@PathVariable int count, @Reque
 
     @PostMapping("/list/all")
     public List<TestPlanCaseDTO> getTestPlanCases(@RequestBody QueryTestPlanCaseRequest request) {
+        testPlanTestCaseService.wrapQueryTestPlanCaseRequest(request);
         return testPlanTestCaseService.list(request);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -696,6 +696,8 @@ public List<TestPlan> listTestAllPlan(QueryTestPlanRequest request) {
     public List<TestPlanCaseDTO> listTestCaseByPlanId(String planId) {
         QueryTestPlanCaseRequest request = new QueryTestPlanCaseRequest();
         request.setPlanId(planId);
+        request.setProjectId(testPlanMapper.selectByPrimaryKey(planId).getProjectId());
+        testPlanTestCaseService.wrapQueryTestPlanCaseRequest(request);
         return testPlanTestCaseService.list(request);
     }
 

File: backend/src/main/java/io/metersphere/controller/WorkspaceController.java
Patch:
@@ -16,7 +16,6 @@
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.UserService;
 import io.metersphere.service.WorkspaceService;
-import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.*;

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -485,7 +485,7 @@ public List<TestReviewDTOWithMetric> listRelateAll(ReviewRelateRequest relateReq
     private String getReviewName(List<String> userIds, String projectId) {
         QueryMemberRequest queryMemberRequest = new QueryMemberRequest();
         queryMemberRequest.setProjectId(projectId);
-        Map<String, String> userMap = userService.getProjectMember(queryMemberRequest)
+        Map<String, String> userMap = userService.getProjectMemberList(queryMemberRequest)
                 .stream().collect(Collectors.toMap(User::getId, User::getName));
         StringBuilder stringBuilder = new StringBuilder();
         String name = "";

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -377,7 +377,7 @@ public void calcTestPlanRate(List<TestPlanDTOWithMetric> testPlans) {
             Integer functionalExecTotal = 0;
 
             for (CountMapDTO item : statusCountMap) {
-                functionalExecTotal++;
+                functionalExecTotal += functionalExecTotal + item.getValue();
                 if (!StringUtils.equals(item.getKey(), TestPlanTestCaseStatus.Prepare.name())
                         && !StringUtils.equals(item.getKey(), TestPlanTestCaseStatus.Underway.name())) {
                     testPlan.setTested(testPlan.getTested() + item.getValue());

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1049,7 +1049,7 @@ private Map<String, String> executeScenarioCase(String planReportId, String test
     }
 
     private Map<String, String> parseMsExecREsponseDTOToTestIdReportMap(List<MsExecResponseDTO> dtoList) {
-        Map<String, String> returnMap = new HashMap<>();
+        Map<String, String> returnMap = new LinkedHashMap<>();
         if (CollectionUtils.isNotEmpty(dtoList)) {
             dtoList.forEach(item -> {
                 if (StringUtils.isNotEmpty(item.getTestId()) && StringUtils.isNotEmpty(item.getReportId())) {
@@ -1704,7 +1704,6 @@ public TestPlanSimpleReportDTO buildPlanReport(TestPlanReport testPlanReport, Te
         } else {
             return null;
         }
-
     }
 
     public TestPlanSimpleReportDTO buildPlanReport(String planId, boolean saveResponse) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -37,7 +37,7 @@ public class MsExtract extends MsTestElement {
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;
         // 非导出操作，且不是启用状态则跳过执行
-        if (!config.isOperating() && !this.isEnable()) {
+        if (!this.isEnable()) {
             return;
         }
         addRequestExtractors(tree, config);

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -286,6 +286,9 @@ public TestPlanScheduleReportInfoDTO genTestPlanReport(TestPlanReportSaveRequest
         testPlanReport.setUpdateTime(System.currentTimeMillis());
         try {
             testPlanReport.setName(testPlan.getName() + "-" + DateUtils.getTimeString(new Date()));
+            if (testPlanReport.getName().length() > 128) {
+                testPlanReport.setName(testPlan.getName().substring(0, 106) + "-" + DateUtils.getTimeString(new Date()));
+            }
         } catch (Exception ignored) {
         }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1147,6 +1147,9 @@ public TestPlan copy(String planId) {
         // 覆盖原内容
         targetPlan.setId(targetPlanId);
         targetPlan.setName(testPlan.getName() + "_" + UUID.randomUUID().toString().substring(0, 5) + "_COPY");
+        if (targetPlan.getName().length() > 128) {
+            targetPlan.setName(testPlan.getName().substring(0, 116) + "_" + UUID.randomUUID().toString().substring(0, 5) + "_COPY");
+        }
         targetPlan.setStatus(TestPlanStatus.Prepare.name());
         targetPlan.setCreator(SessionUtils.getUserId());
         targetPlan.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1499,7 +1499,7 @@ public List<TestCaseDTO> findByBatchRequest(TestCaseBatchRequest request) {
         QueryTestCaseRequest condition = request.getCondition();
         List<OrderRequest> orderList = new ArrayList<>();
         if (condition != null) {
-            orderList = ServiceUtils.getDefaultSortOrder(request.getOrders());
+            orderList = ServiceUtils.getDefaultSortOrder(condition.getOrders());
         }
         OrderRequest order = new OrderRequest();
         order.setName("sort");

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -208,7 +208,7 @@ public void testEnded(ResultDTO dto) {
                     }
                 }
             }
-        } else if (StringUtils.equals(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
+        } else if (StringUtils.equalsAnyIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name())) {
             ApiDefinitionExecResultWithBLOBs record = new ApiDefinitionExecResultWithBLOBs();
             record.setId(dto.getReportId());
             record.setStatus("STOP");

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -358,6 +358,7 @@ public void testReviewRelevance(ReviewRelevanceRequest request) {
                 caseReview.setUpdateTime(System.currentTimeMillis());
                 caseReview.setReviewId(request.getReviewId());
                 caseReview.setStatus(TestCaseReviewStatus.Prepare.name());
+                caseReview.setIsDel(false);
                 caseReview.setOrder(nextOrder);
                 batchMapper.insert(caseReview);
                 nextOrder += ServiceUtils.ORDER_STEP;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -560,6 +560,7 @@ public void testPlanRelevance(PlanCaseRelevanceRequest request) {
             testPlanTestCase.setUpdateTime(System.currentTimeMillis());
             testPlanTestCase.setPlanId(request.getPlanId());
             testPlanTestCase.setStatus(TestPlanStatus.Prepare.name());
+            testPlanTestCase.setIsDel(false);
             testPlanTestCase.setOrder(nextOrder);
             nextOrder += ServiceUtils.ORDER_STEP;
             batchMapper.insert(testPlanTestCase);
@@ -1194,6 +1195,7 @@ public void copyPlanCase(String sourcePlanId, String targetPlanId) {
                     testPlanTestCase.setCreateUser(SessionUtils.getUserId());
                     testPlanTestCase.setRemark(testCase.getRemark());
                     testPlanTestCase.setOrder(nextTestCaseOrder);
+                    testPlanTestCase.setIsDel(false);
                     nextTestCaseOrder += 5000;
                     testCaseMapper.insert(testPlanTestCase);
                 }

File: backend/src/main/java/io/metersphere/base/mapper/TestCaseReviewTestCaseMapper.java
Patch:
@@ -27,4 +27,4 @@ public interface TestCaseReviewTestCaseMapper {
     int updateByPrimaryKeySelective(TestCaseReviewTestCase record);
 
     int updateByPrimaryKey(TestCaseReviewTestCase record);
-}
+}
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -297,6 +297,7 @@ public static <T> List<T> findFromHashTreeByType(MsTestElement hashTree, Class<T
         this.add("DNSCacheManager");
         this.add("DebugSampler");
         this.add("AuthManager");
+        this.add("AbstractSampler");
     }};
 
     private static void formatSampler(JSONObject element) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -88,4 +88,5 @@ public interface ExtApiDefinitionMapper {
 
     List<String> selectRefIdsForVersionChange(@Param("versionId") String versionId, @Param("projectId") String projectId);
 
+    String selectNameById(String testId);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -28,6 +28,7 @@ public interface ExtTestPlanApiCaseMapper {
 
     ApiTestCaseWithBLOBs getApiTestCaseById(String testPlanApiCaseId);
 
+    String getApiTestCaseIdById(String testPlanApiCaseId);
 
     List<TestPlanApiCase> selectLegalDataByTestPlanId(String planId);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.dto.RelationshipGraphData;
 import io.metersphere.track.dto.CustomFieldResourceCompatibleDTO;
 import io.metersphere.track.dto.TestCaseDTO;
+import io.metersphere.track.request.testcase.DeleteTestCaseRequest;
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
 import io.metersphere.track.request.testcase.TestCaseBatchRequest;
 import io.metersphere.track.response.TrackCountResult;
@@ -109,7 +110,7 @@ public interface ExtTestCaseMapper {
 
     List<TestCaseWithBLOBs> getCustomFieldsByIds(@Param("ids") List<String> ids);
 
-    int deleteToGc(@Param("request") TestCase testCase);
+    int deleteToGc(@Param("request") DeleteTestCaseRequest testCase);
 
     int deletePublic(@Param("request") TestCase testCase);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -47,5 +47,5 @@ public interface ExtApiDefinitionExecResultMapper {
 
     List<ApiDefinitionExecResult> findByProjectIds(@Param("request") TaskCenterRequest request);
 
-
+    List<String> selectDistinctStatusByReportId(String reportId);
 }

File: backend/src/main/java/io/metersphere/commons/constants/ExecuteResult.java
Patch:
@@ -5,14 +5,14 @@ public enum ExecuteResult {
     errorReportResult,
 
     //接口执行状态(兼容旧数据)
-    success,error,
+    success, error, STOP,
 
     //未执行状态
     unexecute,
 
     //场景执行状态(兼容旧数据)
-    Success,Error,
+    Success, Error,
 
     //测试计划执行状态(兼容旧数据)
-    PREPARE,RUNNING,SUCCESS,FAILD
+    PREPARE, RUNNING, SUCCESS, FAILD
 }

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -4,6 +4,7 @@ public enum ReportTriggerMode {
     MANUAL,
     SCHEDULE,
     API,
+    JENKINS_RUN_TEST_PLAN,
     /**
      * 性能测试用例执行触发报告
      */

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1020,7 +1020,7 @@ private Map<String, String> executeScenarioCase(String planReportId, String test
             scenarioRequest.setReportId(scenarioReportID);
             scenarioRequest.setProjectId(projectID);
             if (StringUtils.equals(triggerMode, ReportTriggerMode.API.name())) {
-                scenarioRequest.setTriggerMode(ReportTriggerMode.API.name());
+                scenarioRequest.setTriggerMode(ReportTriggerMode.JENKINS_RUN_TEST_PLAN.name());
                 scenarioRequest.setRunMode(ApiRunMode.JENKINS_SCENARIO_PLAN.name());
             } else if (StringUtils.equals(triggerMode, ReportTriggerMode.MANUAL.name())) {
                 scenarioRequest.setTriggerMode(ReportTriggerMode.MANUAL.name());

File: backend/src/main/java/io/metersphere/api/dto/share/ApiDocumentInfoDTO.java
Patch:
@@ -46,4 +46,5 @@ public class ApiDocumentInfoDTO {
     private String refId;
     private String versionId;
 
+    private String remark;
 }

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -402,6 +402,7 @@ public ApiDocumentInfoDTO conversionModelToDTO(ApiDefinitionWithBLOBs apiModel,
                     }
                 }
             }
+            apiInfoDTO.setRemark(apiModel.getRemark());
         }
         if (!previewJsonArray.isEmpty()) {
             if(previewJsonArray.size() == 1){

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -193,9 +193,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             if (StringUtils.isNotEmpty(this.body.getType()) && "Form Data".equals(this.body.getType())) {
                 AtomicBoolean kvIsEmpty = new AtomicBoolean(true);
                 this.body.getKvs().forEach(files -> {
-                    if (StringUtils.isNotEmpty(files.getName()) && "file".equals(files.getType()) && CollectionUtils.isNotEmpty(files.getFiles())) {
-                        sampler.setDoBrowserCompatibleMultipart(true);
-                    }
                     if (StringUtils.isNotEmpty(files.getName())) {
                         kvIsEmpty.set(false);
                     }

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -16,8 +16,8 @@ public class ResourceController {
     @Resource
     ResourceService resourceService;
     @PostMapping(value = "/md/upload", consumes = {"multipart/form-data"})
-    public void upload(@RequestPart(value = "request") MdUploadRequest request, @RequestPart(value = "file", required = false) MultipartFile file) {
-        resourceService.mdUpload(request, file);
+    public String upload(@RequestPart(value = "request") MdUploadRequest request, @RequestPart(value = "file", required = false) MultipartFile file) {
+        return resourceService.mdUpload(request, file);
     }
 
     @GetMapping(value = "/md/get")

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -222,7 +222,8 @@ private List<File> getImageFiles(IssuesUpdateRequest issuesRequest) {
             if (StringUtils.isNotBlank(fieldName)) {
                 if (item.getValue() != null) {
                     if (StringUtils.isNotBlank(item.getType())) {
-                        if (StringUtils.equalsAny(item.getType(),  "richText")) {
+                        if (StringUtils.equalsAny(item.getType(),  "richText")
+                                && !item.getId().equals("description")) {
                             files.addAll(getImageFiles(item.getValue().toString()));
                         }
                     }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -793,7 +793,7 @@ else if (key instanceof LoopController) {
                 ((MsLoopController) elementNode).setLoopType(LoopConstants.LOOP_COUNT.name());
                 LoopController loopController = (LoopController) key;
                 CountController countController = new CountController();
-                countController.setLoops(loopController.getLoops());
+                countController.setLoops(String.valueOf(loopController.getLoops()));
                 countController.setProceed(true);
                 ((MsLoopController) elementNode).setCountController(countController);
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -135,7 +135,7 @@ private LoopController initLoopController() {
         loopController.setProperty(TestElement.TEST_CLASS, LoopController.class.getName());
         loopController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("LoopControlPanel"));
         loopController.setLoops(countController.getLoops());
-        if (countController.getLoops() > 0) {
+        if (StringUtils.isNotEmpty(countController.getLoops())) {
             loopController.setContinueForever(true);
         }
         return loopController;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/loop/CountController.java
Patch:
@@ -4,7 +4,7 @@
 
 @Data
 public class CountController {
-    private int loops;
+    private String loops;
     private long interval;
     private boolean proceed;
     private Object requestResult;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -218,7 +218,7 @@ private void calculateScenarios(List<StepTreeDTO> dtoList,
             totalScenario.set(totalScenario.longValue() + 1);
             if (StringUtils.equalsIgnoreCase(step.getTotalStatus(), "fail")) {
                 scenarioError.set(scenarioError.longValue() + 1);
-            } else if (StringUtils.equalsIgnoreCase(step.getTotalStatus(), "errorCode")) {
+            } else if (StringUtils.equalsAnyIgnoreCase(step.getTotalStatus(), "errorCode", ExecuteResult.errorReportResult.name())) {
                 errorReport.set(errorReport.longValue() + 1);
             } else if (!StringUtils.equalsIgnoreCase(step.getTotalStatus(), "success")) {
                 unExecute.set(unExecute.longValue() + 1);

File: backend/src/main/java/io/metersphere/dto/TestPlanExecuteReportDTO.java
Patch:
@@ -16,4 +16,6 @@ public class TestPlanExecuteReportDTO {
     private Map<String,String> testPlanApiCaseIdAndReportIdMap;
     private Map<String,String> testPlanScenarioIdAndReportIdMap;
     private Map<String,String> testPlanLoadCaseIdAndReportIdMap;
+    private Map<String,TestPlanFailureApiDTO> apiCaseInfoDTOMap;
+    private Map<String,TestPlanFailureScenarioDTO> scenarioInfoDTOMap;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1544,9 +1544,9 @@ public void buildApiReport(TestPlanSimpleReportDTO report, JSONObject config, Te
             List<TestPlanFailureScenarioDTO> scenarioAllCases = null;
             if (checkReportConfig(config, "api", "all")) {
                 // 接口
-                apiAllCases = testPlanApiCaseService.getByApiExecReportIds(testPlanExecuteReportDTO.getTestPlanApiCaseIdAndReportIdMap());
+                apiAllCases = testPlanApiCaseService.getByApiExecReportIds(testPlanExecuteReportDTO.getTestPlanApiCaseIdAndReportIdMap(),testPlanExecuteReportDTO.getApiCaseInfoDTOMap());
                 //场景
-                scenarioAllCases = testPlanScenarioCaseService.getAllCases(testPlanExecuteReportDTO.getTestPlanScenarioIdAndReportIdMap());
+                scenarioAllCases = testPlanScenarioCaseService.getAllCases(testPlanExecuteReportDTO.getTestPlanScenarioIdAndReportIdMap(),testPlanExecuteReportDTO.getScenarioInfoDTOMap());
                 this.checkApiCaseCreatorName(apiAllCases, scenarioAllCases);
                 report.setApiAllCases(apiAllCases);
                 report.setScenarioAllCases(scenarioAllCases);

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -153,12 +153,12 @@ public Map<String, Object> getBuilds(String projectId) {
         return JSONObject.parseObject(response.getBody()).getJSONObject("data").getInnerMap();
     }
 
-    public JSONArray getBugsByProjectId(String projectId, int pageNum, int pageSize) {
+    public JSONObject getBugsByProjectId(String projectId, int pageNum, int pageSize) {
         String sessionId = login();
         ResponseEntity<String> response = restTemplate.exchange(requestUrl.getBugList(),
                 HttpMethod.GET, null, String.class, projectId, 9999999, pageSize, pageNum, sessionId);
         try {
-            return JSONObject.parseObject(response.getBody()).getJSONObject("data").getJSONArray("bugs");
+            return JSONObject.parseObject(response.getBody()).getJSONObject("data");
         } catch (Exception e) {
             LogUtil.error(e);
             MSException.throwException("请检查配置信息是否填写正确！");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -74,4 +74,6 @@ public interface ExtApiTestCaseMapper {
     List<ParamsDTO> getApiCaseEnvironments(@Param("caseIds") List<String> caseIds);
 
     void insertNewVersionCases(@Param("api") ApiDefinition apiDefinition, @Param("old") ApiDefinition old);
+
+    List<ApiTestCase> checkName(@Param("request") SaveApiTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.IssuesWithBLOBs;
 import io.metersphere.base.domain.ext.CustomFieldResource;
+import io.metersphere.track.issue.domain.jira.JiraTransitionsResponse;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -37,4 +38,6 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
      * azure devops bug同步fields
      */
     private String devopsFields;
+
+    private JiraTransitionsResponse.Transitions transitions;
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -87,7 +87,7 @@ public TestCaseComment edit(SaveCommentRequest request) {
     private void checkCommentOwner(String commentId) {
         TestCaseComment comment = testCaseCommentMapper.selectByPrimaryKey(commentId);
         if (comment == null) {
-            MSException.throwException("The requested resource does not exist.");
+            MSException.throwException(Translator.get("resource_not_exist"));
         }
         if (!StringUtils.equals(comment.getAuthor(), SessionUtils.getUser().getId())) {
             MSException.throwException(Translator.get("check_owner_comment"));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -127,7 +127,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                 }
             }
         }
-        if (CollectionUtils.isNotEmpty(this.getVariables())) {
+        if (CollectionUtils.isNotEmpty(this.getVariables()) &&  (this.variableEnable == null || this.variableEnable)) {
             config.setVariables(this.variables);
         }
         HashTree scenarioTree = tree;

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.dto.automation.ExecuteType;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
 import io.metersphere.api.dto.definition.RunDefinitionRequest;
+import io.metersphere.api.dto.definition.request.MsTestPlan;
 import io.metersphere.api.dto.definition.request.ParameterConfig;
 import io.metersphere.api.exec.queue.DBTestQueue;
 import io.metersphere.api.exec.utils.GenerateHashTreeUtil;
@@ -184,7 +185,7 @@ protected void execute(RunScenarioRequest request, String serialReportId, Map<St
         String finalSerialReportId = serialReportId;
         Thread thread = new Thread(() ->
         {
-            Thread.currentThread().setName("SCENARIO-PARALLEL-THREAD");
+            Thread.currentThread().setName("SCENARIO-THREAD");
             if (isSerial(request)) {
                 apiScenarioSerialService.serial(executionQueue, executionQueue.getQueue());
             } else {
@@ -416,6 +417,7 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
         String runMode = StringUtils.isEmpty(request.getRunMode()) ? ApiRunMode.SCENARIO.name() : request.getRunMode();
         // 调用执行方法
         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(request.getId(), request.getId(), runMode, hashTree);
+        LoggerUtil.info(new MsTestPlan().getJmx(hashTree));
         runRequest.setDebug(true);
         jMeterService.run(runRequest);
         return request.getId();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -159,7 +159,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         if (config.getConfig() == null) {
             // 单独接口执行
-            this.setProjectId(config.getProjectId());
+            if(StringUtils.isNotEmpty(config.getProjectId())) {
+                this.setProjectId(config.getProjectId());
+            }
             config.setConfig(ElementUtil.getEnvironmentConfig(StringUtils.isNotEmpty(this.getEnvironmentId()) ? this.getEnvironmentId() : useEnvironment, this.getProjectId(), this.isMockEnvironment()));
         }
         EnvironmentConfig envConfig = null;

File: backend/src/main/java/io/metersphere/dto/TestPlanExecuteReportDTO.java
Patch:
@@ -16,6 +16,4 @@ public class TestPlanExecuteReportDTO {
     private Map<String,String> testPlanApiCaseIdAndReportIdMap;
     private Map<String,String> testPlanScenarioIdAndReportIdMap;
     private Map<String,String> testPlanLoadCaseIdAndReportIdMap;
-    private List<TestPlanFailureApiDTO> apiCaseInfoDTOList;
-    private List<TestPlanFailureScenarioDTO> scenarioInfoDTOList;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -813,8 +813,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
         config.setOperating(true);
         config.getExcludeScenarioIds().add(apiScenario.getId());
         try {
-
-            MsScenario scenario = JSONObject.parseObject(apiScenario.getScenarioDefinition(), MsScenario.class);
+            MsScenario scenario = JSONObject.parseObject(apiScenario.getScenarioDefinition(), MsScenario.class,Feature.DisableSpecialKeyDetect);
             if (scenario == null) {
                 return null;
             }
@@ -824,7 +823,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
             String environmentJson = apiScenario.getEnvironmentJson();
             String environmentGroupId = apiScenario.getEnvironmentGroupId();
             if (StringUtils.equals(environmentType, EnvironmentType.JSON.name()) && StringUtils.isNotBlank(environmentJson)) {
-                scenario.setEnvironmentMap(JSON.parseObject(environmentJson, Map.class));
+                scenario.setEnvironmentMap(JSON.parseObject(environmentJson, Map.class,Feature.DisableSpecialKeyDetect));
             } else if (StringUtils.equals(environmentType, EnvironmentType.GROUP.name()) && StringUtils.isNotBlank(environmentGroupId)) {
                 Map<String, String> envMap = environmentGroupProjectService.getEnvMap(environmentGroupId);
                 scenario.setEnvironmentMap(envMap);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportResultMapper.java
Patch:
@@ -12,4 +12,5 @@ public interface ExtApiScenarioReportResultMapper {
 
     List<String> getReportIds(@Param("ids") List<String> ids);
 
+    List<String> selectDistinctStatusByReportId(String reportId);
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -86,6 +86,9 @@ public TestCaseComment edit(SaveCommentRequest request) {
 
     private void checkCommentOwner(String commentId) {
         TestCaseComment comment = testCaseCommentMapper.selectByPrimaryKey(commentId);
+        if (comment == null) {
+            MSException.throwException("The requested resource does not exist.");
+        }
         if (!StringUtils.equals(comment.getAuthor(), SessionUtils.getUser().getId())) {
             MSException.throwException(Translator.get("check_owner_comment"));
         }

File: backend/src/main/java/io/metersphere/commons/constants/FileType.java
Patch:
@@ -5,7 +5,7 @@ public enum FileType {
     JPG(".jpg"), PNG(".png"), JPEG(".jpeg"), DOC(".doc"),
     XLSX(".xlsx"), DOCX(".docx"), JAR(".jar"), JS(".js"), TXT(".txt"),
     P12(".p12"), JKS(".jks"), PFX(".pfx"),
-    DER(".der"), CER(".cer"), PEM(".pem"), CRT(".crt"),
+    DER(".der"), CER(".cer"), PEM(".pem"), CRT(".crt"), SIDE(".side")
     ;
 
     // 保存后缀

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -43,6 +43,8 @@
 import javax.annotation.Resource;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
 import java.util.List;
 import java.util.UUID;
 
@@ -359,7 +361,7 @@ public ResponseEntity<byte[]> download(@RequestBody FileOperationRequest fileOpe
         byte[] bytes = fileService.loadFileAsBytes(fileOperationRequest.getId());
         return ResponseEntity.ok()
                 .contentType(MediaType.parseMediaType("application/octet-stream"))
-                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileOperationRequest.getName() + "\"")
+                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + URLEncoder.encode(fileOperationRequest.getName(), StandardCharsets.UTF_8) + "\"")
                 .body(bytes);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -407,7 +407,7 @@ public JmxInfoDTO genPerformanceTest(@RequestPart("request") RunDefinitionReques
     public Pager<List<ApiDefinitionExecResultExpand>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryAPIReportRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setLimit("LIMIT " + (goPage - 1) * pageSize + "," + pageSize * 50);
-        return PageUtils.setPageInfo(page, apiDefinitionExecResultService.exceReportlist(request));
+        return PageUtils.setPageInfo(page, apiDefinitionExecResultService.apiReportList(request));
     }
 
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsScenarioParser.java
Patch:
@@ -89,6 +89,7 @@ private ScenarioImport parseMsFormat(String testStr, ApiTestImportRequest import
                         item.setEnvironmentType(EnvironmentType.JSON.name());
                         item.setEnvironmentJson(null);
                         item.setEnvironmentGroupId(null);
+                        scenarioDefinition.put("projectId", this.projectId);
                         item.setScenarioDefinition(JSONObject.toJSONString(scenarioDefinition));
                     }
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -471,8 +471,7 @@ private List<ApiDefinitionExecResultVo> formatApiReport(String reportId, List<St
                 RequestResultExpandDTO expandDTO = (RequestResultExpandDTO) vo.getRequestResult();
                 if (expandDTO.getAttachInfoMap() != null && expandDTO.getAttachInfoMap().get("errorReportResult") != null) {
                     treeDTO.setErrorCode(expandDTO.getAttachInfoMap().get("errorReportResult"));
-                    treeDTO.setTotalStatus("errorCode");
-                    vo.setStatus("errorReportResult");
+                    treeDTO.setTotalStatus(vo.getStatus());
                 } else if (StringUtils.isNotEmpty(expandDTO.getStatus())) {
                     vo.setStatus(expandDTO.getStatus());
                     treeDTO.setTotalStatus(expandDTO.getStatus());

File: backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -155,7 +155,7 @@ public void sampleOccurred(SampleEvent event) {
                 dto.setReportId("send." + this.getName());
                 dto.setToReport(this.getName());
 
-                String console = FixedCapacityUtils.getJmeterLogger(this.getName());
+                String console = FixedCapacityUtils.getJmeterLogger(this.getName(),false);
                 if (StringUtils.isNotEmpty(requestResult.getName()) && requestResult.getName().startsWith("Transaction=")) {
                     requestResult.getSubRequestResults().forEach(transactionResult -> {
                         transactionResult.getResponseResult().setConsole(console);

File: backend/src/main/java/io/metersphere/api/service/ApiExecutionQueueService.java
Patch:
@@ -218,7 +218,7 @@ private boolean failure(DBTestQueue executionQueue, ResultDTO dto) {
                 if (StringUtils.equalsIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
                     reportId = dto.getTestPlanReportId();
                 }
-                apiScenarioReportService.margeReport(reportId, dto.getRunMode());
+                apiScenarioReportService.margeReport(reportId, dto.getRunMode(), dto.getConsole());
             }
             return false;
         }
@@ -305,7 +305,7 @@ public void queueNext(ResultDTO dto) {
                     if (StringUtils.equalsIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
                         reportId = dto.getTestPlanReportId();
                     }
-                    apiScenarioReportService.margeReport(reportId, dto.getRunMode());
+                    apiScenarioReportService.margeReport(reportId, dto.getRunMode(), dto.getConsole());
                 }
             }
             return;
@@ -341,7 +341,7 @@ public void queueNext(ResultDTO dto) {
                     if (StringUtils.equalsIgnoreCase(dto.getRunMode(), ApiRunMode.DEFINITION.name())) {
                         reportId = dto.getTestPlanReportId();
                     }
-                    apiScenarioReportService.margeReport(reportId, dto.getRunMode());
+                    apiScenarioReportService.margeReport(reportId, dto.getRunMode(), dto.getConsole());
                 }
                 queueMapper.deleteByPrimaryKey(dto.getQueueId());
                 LoggerUtil.info("Queue execution ends：" + dto.getQueueId());

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -50,8 +50,6 @@ public class ApiScenarioReportStructureService {
     @Resource
     private ApiDefinitionExecResultMapper definitionExecResultMapper;
     @Resource
-    private ApiScenarioReportResultService apiScenarioReportResultService;
-    @Resource
     private ExtApiScenarioReportResultMapper extApiScenarioReportResultMapper;
 
     private static final List<String> requests = Arrays.asList("HTTPSamplerProxy", "DubboSampler", "JDBCSampler", "TCPSampler", "JSR223Processor", "AbstractSampler");

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -181,7 +181,7 @@ public void testEnded(JmeterRunRequestDTO request, String errorMsg) {
             LoggerUtil.info("进入异常结果处理报告【" + dto.getReportId() + " 】" + dto.getRunMode() + " 整体执行完成");
             // 全局并发队列
             PoolExecBlockingQueueUtil.offer(dto.getReportId());
-            String consoleMsg = FixedCapacityUtils.getJmeterLogger(dto.getReportId());
+            String consoleMsg = FixedCapacityUtils.getJmeterLogger(dto.getReportId(),true);
             dto.setConsole(consoleMsg + "\n" + errorMsg);
             // 整体执行结束更新资源状态
             CommonBeanFactory.getBean(TestResultService.class).testEnded(dto);

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -394,7 +394,7 @@ public void updateUser(User user) {
         // 变更前
         User userFromDB = userMapper.selectByPrimaryKey(user.getId());
         // last workspace id 变了
-        if (!StringUtils.equals(user.getLastWorkspaceId(), userFromDB.getLastWorkspaceId())) {
+        if (user.getLastWorkspaceId() != null && !StringUtils.equals(user.getLastWorkspaceId(), userFromDB.getLastWorkspaceId())) {
             List<Project> projects = getProjectListByWsAndUserId(user.getLastWorkspaceId());
             if (projects.size() > 0) {
                 user.setLastProjectId(projects.get(0).getId());

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -35,6 +35,8 @@
 import org.springframework.util.MultiValueMap;
 import org.springframework.web.client.RestTemplate;
 
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
 import java.util.*;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -460,6 +462,7 @@ private String packageDescriptionByPathAndName(String path, String name) {
                 name = name.replaceAll("&amp;", "&");
                 path = zentaoClient.getBaseUrl() + path.replaceAll("&amp;", "&");
             }
+            path = "/resource/md/get/url?url=" + URLEncoder.encode(path, StandardCharsets.UTF_8);
             // 图片与描述信息之间需换行，否则无法预览图片
             result = "\n\n![" + name + "](" + path + ")";
         }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -616,6 +616,8 @@ private ApiScenarioReportDTO getReport(String reportId, boolean selectContent) {
             AtomicLong allUnExecute = new AtomicLong();
             this.countAllUnexecute(stepList, allUnExecute);
             reportDTO.setUnExecute(allUnExecute.longValue());
+            //之前的total中请求数是按照获得报告的响应数来算的。这里要加上未执行的数量
+            reportDTO.setTotal(reportDTO.getTotal() + allUnExecute.longValue());
         }
         return reportDTO;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1965,6 +1965,7 @@ public void minderEdit(TestCaseMinderEditRequest request) {
                     EditTestCaseRequest editRequest = new EditTestCaseRequest();
                     BeanUtils.copyBean(editRequest, item);
                     editRequest.setCustomFields(null);
+                    editRequest.setTags(null);
                     editTestCase(editRequest);
                     changeOrder(item, request.getProjectId());
                     lastAddId = null;

File: backend/src/main/java/io/metersphere/api/exec/utils/ApiDefinitionExecResultUtil.java
Patch:
@@ -70,7 +70,7 @@ public static ApiDefinitionExecResultWithBLOBs addResult(BatchRunDefinitionReque
             apiResult.setUserId(request.getUserId());
         }
 
-        apiResult.setResourceId(key.getApiCaseId());
+        apiResult.setResourceId(key.getId());
         apiResult.setStartTime(System.currentTimeMillis());
         apiResult.setType(ApiRunMode.API_PLAN.name());
         apiResult.setStatus(status);

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -165,14 +165,14 @@ public String validate(TestCaseExcelData data, String errMsg) {
                 String customId = data.getCustomNum();
                 if (StringUtils.isEmpty(customId)) {
                     stringBuilder.append(Translator.get("id_required") + ";");
-                } else if (customIds.contains(customId)) {
+                } else if (customIds.contains(customId.toLowerCase())) {
                     stringBuilder.append(Translator.get("id_repeat_in_table") + ";");
                 } else if (StringUtils.equals(FunctionCaseImportEnum.Create.name(), importType) && savedCustomIds.contains(customId)) {
                     stringBuilder.append(Translator.get("custom_num_is_exist") + ";");
                 } else if (StringUtils.equals(FunctionCaseImportEnum.Update.name(), importType) && !savedCustomIds.contains(customId)) {
                     stringBuilder.append(Translator.get("custom_num_is_not_exist") + ";");
                 } else {
-                    customIds.add(customId);
+                    customIds.add(customId.toLowerCase());
                 }
             }
         }

File: backend/src/main/java/io/metersphere/api/jmeter/APISingleResultListener.java
Patch:
@@ -27,7 +27,7 @@ public class APISingleResultListener implements MsExecListener {
      */
     @Override
     public void setupTest() {
-        queues = new ArrayList<>();
+        queues = new LinkedList<>();
         LoggerUtil.info("初始化监听");
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -21,6 +21,7 @@
 import io.metersphere.task.service.TaskService;
 import io.metersphere.track.request.testcase.ApiCaseRelevanceRequest;
 import io.metersphere.track.request.testplan.FileOperationRequest;
+import io.metersphere.websocket.c.to.c.WebSocketUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
@@ -332,6 +333,8 @@ public void stop(@PathVariable String reportId) {
             taskRequest.setReportId(reportId);
             taskRequest.setType("SCENARIO");
             reportIds.add(taskRequest);
+
+            WebSocketUtils.onClose(reportId);
             taskService.stop(reportIds);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/CommandService.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.i18n.Translator;
+import io.metersphere.utils.LoggerUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jorphan.exec.SystemCommand;
@@ -122,7 +123,6 @@ public void mergeKeyStore(String newKeyStore, KeyStoreConfig sslConfig) {
                                 File destFile = new File(newKeyStore);
                                 List<String> arguments = new ArrayList();
                                 arguments.add("keytool");
-                                arguments.add("-genkeypair");
                                 arguments.add("-importkeystore");
                                 arguments.add("-srckeystore");
                                 arguments.add(srcFile.getName());
@@ -142,6 +142,7 @@ public void mergeKeyStore(String newKeyStore, KeyStoreConfig sslConfig) {
                                 arguments.add("-destkeypass");
                                 arguments.add("ms123...");
 
+                                LoggerUtil.info("证书合并命令：", String.join(" ", arguments));
                                 SystemCommand nativeCommand = new SystemCommand(destFile.getParentFile(), (Map) null);
                                 int exitVal = nativeCommand.run(arguments);
                                 if (exitVal > 0) {

File: backend/src/main/java/io/metersphere/api/jmeter/APISingleResultListener.java
Patch:
@@ -50,13 +50,14 @@ public void testEnded(ResultDTO dto, Map<String, Object> kafkaConfig) {
             }
 
             JMeterBase.resultFormatting(queues, dto);
+
+            dto.setConsole(FixedCapacityUtils.getJmeterLogger(dto.getReportId()));
             // 入库存储
             CommonBeanFactory.getBean(TestResultService.class).saveResults(dto);
 
             LoggerUtil.info("进入TEST-END处理报告【" + dto.getReportId() + " 】" + dto.getRunMode() + " 整体执行完成");
             // 全局并发队列
             PoolExecBlockingQueueUtil.offer(dto.getReportId());
-            dto.setConsole(FixedCapacityUtils.getJmeterLogger(dto.getReportId()));
             // 整体执行结束更新资源状态
             CommonBeanFactory.getBean(TestResultService.class).testEnded(dto);
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -239,7 +239,7 @@ private Arguments arguments(String name, List<KeyValue> variables) {
             arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());
             arguments.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ArgumentsPanel"));
             variables.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
-                    arguments.addArgument(keyValue.getName(), keyValue.getValue(), "=")
+                    arguments.addArgument(keyValue.getName(), ElementUtil.getEvlValue(keyValue.getValue()), "=")
             );
             return arguments;
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -239,7 +239,7 @@ private Arguments arguments(String name, List<KeyValue> variables) {
             arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());
             arguments.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ArgumentsPanel"));
             variables.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
-                    arguments.addArgument(keyValue.getName(), keyValue.getValue(), "=")
+                    arguments.addArgument(keyValue.getName(), ElementUtil.getEvlValue(keyValue.getValue()), "=")
             );
             return arguments;
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -205,7 +205,7 @@ private Arguments getConfigArguments(ParameterConfig config) {
         if (config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables())) {
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
-                    arguments.addArgument(keyValue.getName(), keyValue.getValue(), "=")
+                    arguments.addArgument(keyValue.getName(), ElementUtil.getEvlValue(keyValue.getValue()), "=")
             );
             // 清空变量，防止重复添加
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().clear();

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -644,7 +644,7 @@ private void buildCustomField(List<TestCaseDTO> data) {
     private void buildCustomField(TestCaseDTO data) {
         CustomFieldTestCaseExample example = new CustomFieldTestCaseExample();
         example.createCriteria().andResourceIdEqualTo(data.getId());
-        List<CustomFieldTestCase> customFieldTestCases = customFieldTestCaseMapper.selectByExample(example);
+        List<CustomFieldTestCase> customFieldTestCases = customFieldTestCaseMapper.selectByExampleWithBLOBs(example);
         List<CustomFieldDao> fields = new ArrayList<>();
         customFieldTestCases.forEach(i -> {
             CustomFieldDao customFieldDao = new CustomFieldDao();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -39,7 +39,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         ParameterConfig config = (ParameterConfig) msParameter;
         if (StringUtils.isEmpty(this.getEnvironmentId())) {
             if (config.getConfig() != null) {
-                if (config.getProjectId() != null) {
+                if (config.getProjectId() != null && config.getConfig().containsKey(config.getProjectId())) {
                     String evnId = config.getConfig().get(config.getProjectId()).getApiEnvironmentid();
                     this.setEnvironmentId(evnId);
                 } else {

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogDTO.java
Patch:
@@ -12,6 +12,8 @@ public class OperatingLogDTO implements Serializable {
 
     private String projectName;
 
+    private String workspaceName;
+
     private String operUser;
 
     private String userName;

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogRequest.java
Patch:
@@ -30,6 +30,8 @@ public class OperatingLogRequest implements Serializable {
 
     private List<String> projectIds;
 
+    private List<String> workspaceIds;
+
     private List<String> modules;
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtLoadTestReportMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.FileMetadata;
 import io.metersphere.base.domain.LoadTestReport;
 import io.metersphere.base.domain.LoadTestReportWithBLOBs;
 import io.metersphere.dto.DashboardTestDTO;
@@ -27,4 +28,6 @@ public interface ExtLoadTestReportMapper {
     List<PlanReportCaseDTO> selectForPlanReport(@Param("ids") List<String> reportIds);
 
     int updateReportVumStatus(String reportId,String reportKey ,String nextStatus, String preStatus);
+
+    List<FileMetadata> getFileMetadataById(@Param("reportId") String reportId);
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1926,8 +1926,6 @@ public void minderEdit(TestCaseMinderEditRequest request) {
 
             String lastAddId = null;
 
-            String lastAddId = null;
-
             for (TestCaseMinderEditRequest.TestCaseMinderEditItem item : data) {
                 if (StringUtils.isBlank(item.getNodeId()) || item.getNodeId().equals("root")) {
                     item.setNodeId("");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1926,6 +1926,8 @@ public void minderEdit(TestCaseMinderEditRequest request) {
 
             String lastAddId = null;
 
+            String lastAddId = null;
+
             for (TestCaseMinderEditRequest.TestCaseMinderEditItem item : data) {
                 if (StringUtils.isBlank(item.getNodeId()) || item.getNodeId().equals("root")) {
                     item.setNodeId("");

File: backend/src/main/java/io/metersphere/controller/request/ResetOrderRequest.java
Patch:
@@ -12,6 +12,8 @@ public class ResetOrderRequest {
     private String groupId;
 
     public enum MoveMode {
-        BEFORE, AFTER
+        BEFORE,
+        AFTER,
+        APPEND // 脑图添加多个用例时，后面的用例类型
     }
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -218,7 +218,9 @@ public TestCaseWithBLOBs addTestCase(EditTestCaseRequest request) {
 
         testCaseMapper.insert(request);
         saveFollows(request.getId(), request.getFollows());
-        customFieldTestCaseService.addFields(request.getId(), request.getAddFields());
+        List<CustomFieldResource> addFields = request.getAddFields();
+        addFields.addAll(request.getEditFields());
+        customFieldTestCaseService.addFields(request.getId(), addFields);
         return request;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -25,6 +25,7 @@
 public class MsAssertions extends MsTestElement {
     private String clazzName = MsAssertions.class.getCanonicalName();
 
+    private boolean scenarioAss;
     private List<MsAssertionRegex> regex;
     private List<MsAssertionJsonPath> jsonPath;
     private List<MsAssertionJSR223> jsr223;
@@ -40,7 +41,7 @@ public class MsAssertions extends MsTestElement {
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;
         // 非导出操作，且不是启用状态则跳过执行
-        if (!config.isOperating() && !this.isEnable()) {
+        if (this.isScenarioAss() && !config.isOperating() && !this.isEnable()) {
             return;
         }
         if (StringUtils.isEmpty(this.getName())) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -76,6 +76,8 @@ public static Map<String, String> getEnvironmentDns(EnvironmentConfig config, Ht
                     String hostDomain = host.getDomain().trim().replace("http://", "").replace("https://", "");
                     if (StringUtils.equals(hostDomain, domain)) {
                         dnsMap.put(hostDomain, host.getIp());
+                    }else if(StringUtils.startsWith(hostDomain,domain+":")){
+                        dnsMap.put(domain,StringUtils.replace(hostDomain,domain,host.getIp()));
                     }
                 }
             });

File: backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -86,7 +86,7 @@ public Pager<List<GroupDTO>> getGroupList(EditGroupRequest request) {
     public void buildUserInfo(List<GroupDTO> testCases) {
         List<String> userIds = new ArrayList();
         userIds.addAll(testCases.stream().map(GroupDTO::getCreator).collect(Collectors.toList()));
-        if (!org.apache.commons.collections.CollectionUtils.isEmpty(userIds)) {
+        if (!userIds.isEmpty()) {
             Map<String, String> userMap = ServiceUtils.getUserNameMap(userIds);
             testCases.forEach(caseResult -> {
                 caseResult.setCreator(userMap.get(caseResult.getCreator()));

File: backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -21,7 +21,6 @@
 import io.metersphere.log.vo.DetailColumn;
 import io.metersphere.log.vo.OperatingLogDetails;
 import io.metersphere.log.vo.system.SystemReference;
-import io.metersphere.track.dto.TestCaseDTO;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -65,13 +64,13 @@ public class GroupService {
 
     private static final String GLOBAL = "global";
 
-    private static final Map<String, List<String>> map = new HashMap<String, List<String>>(4) {{
+    private static final Map<String, List<String>> map = new HashMap<>(4) {{
         put(UserGroupType.SYSTEM, Arrays.asList(UserGroupType.SYSTEM, UserGroupType.WORKSPACE, UserGroupType.PROJECT));
         put(UserGroupType.WORKSPACE, Arrays.asList(UserGroupType.WORKSPACE, UserGroupType.PROJECT));
         put(UserGroupType.PROJECT, Collections.singletonList(UserGroupType.PROJECT));
     }};
 
-    private static final Map<String, String> typeMap = new HashMap<String, String>(4) {{
+    private static final Map<String, String> typeMap = new HashMap<>(4) {{
         put(UserGroupType.SYSTEM, "系统");
         put(UserGroupType.WORKSPACE, "工作空间");
         put(UserGroupType.PROJECT, "项目");

File: backend/src/main/java/io/metersphere/service/CustomFieldResourceService.java
Patch:
@@ -72,7 +72,9 @@ protected void addFields(String tableName, String resourceId, List<CustomFieldRe
         if (CollectionUtils.isNotEmpty(addFields)) {
             this.checkInit();
             addFields.forEach(field -> {
-                createOrUpdateFields(tableName, resourceId, field);
+                if (StringUtils.isNotBlank(field.getValue()) && StringUtils.isNotBlank(field.getTextValue())) {
+                    createOrUpdateFields(tableName, resourceId, field);
+                }
             });
         }
     }

File: backend/src/main/java/io/metersphere/track/request/testcase/EditTestCaseRequest.java
Patch:
@@ -22,6 +22,8 @@ public class EditTestCaseRequest extends TestCaseWithBLOBs {
      */
     private List<String> fileIds = new ArrayList<>();
     private List<List<String>> selected = new ArrayList<>();
+    // 是否处理附件文件
+    private boolean handleAttachment = true;
 
     /**
      * 创建新版本时 是否连带复制其他信息的配置类

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/HarParser.java
Patch:
@@ -164,7 +164,6 @@ private HttpResponse parseResponse(HarResponse response) {
         msResponse.setBody(new Body());
         msResponse.setHeaders(new ArrayList<>());
         msResponse.setType(RequestType.HTTP);
-        // todo 状态码要调整？
         msResponse.setStatusCode(new ArrayList<>());
         if (response != null) {
             String responseCode = String.valueOf(response.status);

File: backend/src/main/java/io/metersphere/base/mapper/TestPlanReportMapper.java
Patch:
@@ -32,7 +32,4 @@ public interface TestPlanReportMapper {
     int updateByPrimaryKeySelective(TestPlanReport record);
 
     int updateByPrimaryKey(TestPlanReport record);
-
-    @MapKey("id")
-    Map<String, ParamsDTO> reportCount(@Param("planIds") Set<String> planIds);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -147,7 +147,7 @@ public class TestPlanService {
     @Resource
     private TestCaseTestMapper testCaseTestMapper;
     @Resource
-    private TestPlanReportMapper testPlanReportMapper;
+    private ExtTestPlanReportMapper extTestPlanReportMapper;
     @Resource
     private TestPlanReportService testPlanReportService;
     @Lazy
@@ -438,7 +438,7 @@ public List<TestPlanDTOWithMetric> listTestPlan(QueryTestPlanRequest request) {
         ArrayList<String> idList = new ArrayList<>(ids);
         List<Schedule> scheduleByResourceIds = scheduleService.getScheduleByResourceIds(idList, ScheduleGroup.TEST_PLAN_TEST.name());
         Map<String, Schedule> scheduleMap = scheduleByResourceIds.stream().collect(Collectors.toMap(Schedule::getResourceId, Schedule -> Schedule));
-        Map<String, ParamsDTO> stringParamsDTOMap = testPlanReportMapper.reportCount(ids);
+        Map<String, ParamsDTO> stringParamsDTOMap = extTestPlanReportMapper.reportCount(ids);
 
         testPlans.forEach(item -> {
             item.setExecutionTimes(stringParamsDTOMap.get(item.getId()) == null ? 0 : Integer.parseInt(stringParamsDTOMap.get(item.getId()).getValue() == null ? "0" : stringParamsDTOMap.get(item.getId()).getValue()));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -149,4 +149,6 @@ public interface ExtTestCaseMapper {
     List<TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> getForNodeEdit(@Param("ids") List<String> ids);
+
+    List<Map<String, Object>> moduleExtraNodeCount(@Param("nodeIds") List<String> nodeIds);
 }

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -244,6 +244,7 @@ private void processCsvDataSet(Element element) {
 
     private void splitCsvFile(Node item) {
         String filename = item.getText();
+        filename = StringUtils.removeStart(filename, "/test/");
         // 已经分割过的不再二次分割
         if (BooleanUtils.toBoolean(context.getSplitFlag().get(filename))) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/PostmanDefinitionParser.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.api.dto.ApiTestImportRequest;
 import io.metersphere.api.dto.definition.request.sampler.MsHTTPSamplerProxy;
+import io.metersphere.api.dto.definition.response.HttpResponse;
 import io.metersphere.api.dto.parse.postman.PostmanCollection;
 import io.metersphere.api.dto.parse.postman.PostmanItem;
 import io.metersphere.api.dto.parse.postman.PostmanKeyValue;
@@ -69,7 +70,7 @@ protected void parseItem(List<PostmanItem> items, List<PostmanKeyValue> variable
                 parseItem(childItems, variables, results, module, path + "/" + module.getName(), cases, repeatMap, repeatable);
             } else {
                 MsHTTPSamplerProxy msHTTPSamplerProxy = parsePostman(item);
-                MsHTTPSamplerProxy response = parsePostmanResponse(item);
+                HttpResponse response = parsePostmanResponse(item);
                 ApiDefinitionWithBLOBs request = buildApiDefinition(msHTTPSamplerProxy.getId(), msHTTPSamplerProxy.getName(),
                         msHTTPSamplerProxy.getPath(), msHTTPSamplerProxy.getMethod(), new ApiTestImportRequest());
                 request.setPath(msHTTPSamplerProxy.getPath());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -78,6 +78,8 @@ public class MsJDBCPostProcessor extends MsTestElement {
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;
+        // 历史数据清理
+        this.dataSource = null;
         // 非导出操作，且不是启用状态则跳过执行
         if (!config.isOperating() && !this.isEnable()) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -84,6 +84,8 @@ public class MsJDBCSampler extends MsTestElement {
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;
+        // 清理掉历史遗留数据
+        this.dataSource = null;
         // 非导出操作，且不是启用状态则跳过执行
         if (config != null && !config.isOperating() && !this.isEnable()) {
             return;

File: backend/src/main/java/io/metersphere/track/controller/TrackController.java
Patch:
@@ -75,9 +75,9 @@ public TrackStatisticsDTO getRelevanceCount(@PathVariable String projectId) {
             statistics.setCoverageRage(df.format(coverageRageNumber) + "%");
         }
 
-        statistics.setApiCaseCountStr(Translator.get("api_case") + "&nbsp;&nbsp;<br/><br/>" + statistics.getApiCaseCount());
-        statistics.setPerformanceCaseCountStr(Translator.get("performance_case") + "&nbsp;&nbsp;<br/><br/>" + statistics.getPerformanceCaseCount());
-        statistics.setScenarioCaseStr(Translator.get("scenario_case") + "&nbsp;&nbsp;<br/><br/>" + statistics.getScenarioCaseCount());
+        statistics.setApiCaseCountStr(Translator.get("api_case") + "<br/><br/>" + statistics.getApiCaseCount());
+        statistics.setPerformanceCaseCountStr(Translator.get("performance_case") + "<br/><br/>" + statistics.getPerformanceCaseCount());
+        statistics.setScenarioCaseStr(Translator.get("scenario_case") + "<br/><br/>" + statistics.getScenarioCaseCount());
 
         return statistics;
     }

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -172,7 +172,7 @@ protected MsHTTPSamplerProxy buildRequest(String name, String path, String metho
         MsHTTPSamplerProxy request = buildRequest(name, path, method);
         if (StringUtils.isNotBlank(jsonSchema)) {
             request.getBody().setJsonSchema(JSONObject.parseObject(jsonSchema));
-            request.getBody().setFormat("Raw");
+            request.getBody().setFormat("JSON-SCHEMA");
         }
         return request;
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtJarConfigMapper.java
Patch:
@@ -8,4 +8,6 @@
 
 public interface ExtJarConfigMapper {
     List<JarConfig> list(@Param("request") JarConfigRequest request);
+
+    int checkExist(@Param("request") JarConfigRequest request);
 }

File: backend/src/main/java/io/metersphere/controller/request/JarConfigRequest.java
Patch:
@@ -7,6 +7,7 @@
 @Getter
 @Setter
 public class JarConfigRequest extends BaseQueryRequest {
+    private String id;
     private String resourceId;
     private String resourceType;
 }

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -172,7 +172,7 @@ protected MsHTTPSamplerProxy buildRequest(String name, String path, String metho
         MsHTTPSamplerProxy request = buildRequest(name, path, method);
         if (StringUtils.isNotBlank(jsonSchema)) {
             request.getBody().setJsonSchema(JSONObject.parseObject(jsonSchema));
-            request.getBody().setFormat("JSON-SCHEMA");
+            request.getBody().setFormat("Raw");
         }
         return request;
     }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -17,6 +17,7 @@
 import java.util.ArrayList;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.Optional;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
@@ -30,7 +31,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         }
         requestDesc.getAuth(); // todo 认证方式等待优化
         PostmanUrl url = requestDesc.getUrl();
-        MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url == null ? "" : url.getRaw(), requestDesc.getMethod(), requestDesc.getBody().getString("jsonSchema"));
+        MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url == null ? "" : url.getRaw(), requestDesc.getMethod(), Optional.ofNullable(requestDesc.getBody()).orElse(new JSONObject()).getString("jsonSchema"));
         request.setRest(parseKeyValue(requestDesc.getUrl().getVariable()));
         if (StringUtils.isNotBlank(request.getPath())) {
             String path = request.getPath().split("\\?")[0];

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -69,7 +69,7 @@ public class TestCaseExcelDataCn extends TestCaseExcelData {
     @ColumnWidth(50)
     @ExcelProperty("编辑模式")
     @NotRequired
-    @Pattern(regexp = "(^TEXT$)|(^STEP$)", message = "{test_case_step_model_validate}")
+    @Pattern(regexp = "(^TEXT$)|(^STEP$)|(.{0})", message = "{test_case_step_model_validate}")
     private String stepModel;
 
     @ColumnWidth(50)

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataTw.java
Patch:
@@ -69,7 +69,7 @@ public class TestCaseExcelDataTw extends TestCaseExcelData {
     @ColumnWidth(50)
     @ExcelProperty("編輯模式")
     @NotRequired
-    @Pattern(regexp = "(^TEXT$)|(^STEP$)", message = "{test_case_step_model_validate}")
+    @Pattern(regexp = "(^TEXT$)|(^STEP$)|(.{0})", message = "{test_case_step_model_validate}")
     private String stepModel;
 
     @ColumnWidth(50)

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataUs.java
Patch:
@@ -70,7 +70,7 @@ public class TestCaseExcelDataUs extends TestCaseExcelData {
     @ColumnWidth(50)
     @ExcelProperty("Edit Model")
     @NotRequired
-    @Pattern(regexp = "(^TEXT$)|(^STEP$)", message = "{test_case_step_model_validate}")
+    @Pattern(regexp = "(^TEXT$)|(^STEP$)|(.{0})", message = "{test_case_step_model_validate}")
     private String stepModel;
 
     @ColumnWidth(50)

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -214,6 +214,9 @@ public List<Statistics> getReportStatistics(String id) {
         String reportValue = getContent(id, ReportKeys.RequestStatistics);
         // 确定顺序
         List<Statistics> statistics = JSON.parseArray(reportValue, Statistics.class);
+        if (CollectionUtils.isEmpty(statistics)) {
+            return Collections.emptyList();
+        }
         List<LoadTestExportJmx> jmxContent = getJmxContent(id);
         String jmx = jmxContent.get(0).getJmx();
         // 按照JMX顺序重新排序

File: backend/src/main/java/io/metersphere/api/jmeter/MsGroovyLoadJarService.java
Patch:
@@ -4,14 +4,15 @@
 import io.metersphere.base.domain.JarConfig;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.jmeter.LoadJarService;
 import io.metersphere.service.JarConfigService;
 import org.springframework.stereotype.Service;
 
 import java.io.File;
 import java.util.List;
 
 @Service
-public class GroovyLoadJarService {
+public class MsGroovyLoadJarService implements LoadJarService {
     /**
      * groovy 使用的是自己的类加载器，
      * 这里再执行脚本前，使用 groovy的加载器加载jar包，

File: backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -51,9 +51,9 @@ public class MsKafkaListener {
     }};
 
     // 线程池维护线程的最少数量
-    private final static int CORE_POOL_SIZE = 50;
+    private final static int CORE_POOL_SIZE = 20;
     // 线程池维护线程的最大数量
-    private final static int MAX_POOL_SIZE = 50;
+    private final static int MAX_POOL_SIZE = 20;
     // 线程池维护线程所允许的空闲时间
     private final static int KEEP_ALIVE_TIME = 1;
     // 线程池所使用的缓冲队列大小

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.excel.annotation.NotRequired;
 import io.metersphere.excel.domain.ExcelErrData;
 import io.metersphere.excel.domain.TestCaseExcelData;
+import io.metersphere.excel.domain.TestCaseExcelDataFactory;
 import io.metersphere.excel.utils.ExcelValidateHelper;
 import io.metersphere.excel.utils.FunctionCaseImportEnum;
 import io.metersphere.i18n.Translator;
@@ -612,7 +613,7 @@ private RowInfo parseIndexInRow(String row,int rowIndex) {
     }
 
     private TestCaseExcelData parseDataToModel(Map<Integer, String> row) {
-        TestCaseExcelData data = new TestCaseExcelData();
+        TestCaseExcelData data = new TestCaseExcelDataFactory().getTestCaseExcelDataLocal();
         for (Map.Entry<Integer,String> headEntry: headMap.entrySet()) {
             Integer index = headEntry.getKey();
             String field = headEntry.getValue();

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -476,7 +476,8 @@ public TestCaseWithBLOBs checkTestCaseExist(TestCaseWithBLOBs testCase) {
             criteria.andNameEqualTo(testCase.getName())
                     .andProjectIdEqualTo(testCase.getProjectId())
                     .andNodePathEqualTo(nodePath)
-                    .andTypeEqualTo(testCase.getType());
+                    .andTypeEqualTo(testCase.getType())
+                    .andStatusNotEqualTo("Trash");
             if (StringUtils.isNotBlank(testCase.getPriority())) {
                 criteria.andPriorityEqualTo(testCase.getPriority());
             }

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanItem.java
Patch:
@@ -9,5 +9,6 @@ public class PostmanItem {
     private String name;
     private List<PostmanEvent> event;
     private PostmanRequest request;
+    private List<PostmanResponse> response;
     private List<PostmanItem> item;
 }

File: backend/src/main/java/io/metersphere/controller/request/group/EditGroupRequest.java
Patch:
@@ -27,4 +27,5 @@ public class EditGroupRequest extends Group {
     private List<GroupPermission> permissions;
     private String userGroupId;
     private List<OrderRequest> orders;
+    private boolean onlyQueryCurrentProject = false;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/TestPlanCaseBatchRequest.java
Patch:
@@ -12,4 +12,5 @@
 public class TestPlanCaseBatchRequest extends TestPlanTestCase {
     private List<String> ids;
     private TestPlanFuncCaseConditions condition;
+    private boolean modifyExecutor;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -130,6 +130,9 @@ public int deleteTestCase(String id) {
     public void editTestCaseBath(TestPlanCaseBatchRequest request) {
         TestPlanTestCaseExample testPlanTestCaseExample = getBatchExample(request);
         TestPlanTestCaseWithBLOBs testPlanTestCase = new TestPlanTestCaseWithBLOBs();
+        if (BooleanUtils.isFalse(request.isModifyExecutor()) && StringUtils.isNotBlank(SessionUtils.getUserId())) {
+            request.setExecutor(SessionUtils.getUserId());
+        }
         BeanUtils.copyBean(testPlanTestCase, request);
         testPlanTestCase.setUpdateTime(System.currentTimeMillis());
         testPlanTestCaseMapper.updateByExampleSelective(

File: backend/src/main/java/io/metersphere/commons/constants/TestPlanStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum TestPlanStatus {
-    Prepare, Underway, Completed, Finished
+    Prepare, Underway, Completed, Finished,Archived
 }

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -103,7 +103,7 @@ public List<ApiDefinitionResult> listBatch(@RequestBody ApiBatchRequest request)
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_READ_CREATE_API)
     @MsAuditLog(module = OperLogModule.API_DEFINITION, type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = ApiDefinitionService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_DEFINITION_TASK, event = NoticeConstants.Event.CREATE, subject = "接口定义通知")
-    public ApiDefinitionWithBLOBs create(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files", required = false) List<MultipartFile> bodyFiles) {
+    public ApiDefinitionResult create(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files", required = false) List<MultipartFile> bodyFiles) {
         checkPermissionService.checkProjectOwner(request.getProjectId());
         return apiDefinitionService.create(request, bodyFiles);
     }
@@ -112,7 +112,7 @@ public ApiDefinitionWithBLOBs create(@RequestPart("request") SaveApiDefinitionRe
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_READ_EDIT_API)
     @MsAuditLog(module = OperLogModule.API_DEFINITION, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = ApiDefinitionService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_DEFINITION_TASK, event = NoticeConstants.Event.UPDATE, subject = "接口定义通知")
-    public ApiDefinitionWithBLOBs update(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files", required = false) List<MultipartFile> bodyFiles) {
+    public ApiDefinitionResult update(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files", required = false) List<MultipartFile> bodyFiles) {
         checkPermissionService.checkProjectOwner(request.getProjectId());
         return apiDefinitionService.update(request, bodyFiles);
     }

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -102,6 +102,9 @@ public List<UserDetail> queryTypeByIds(List<String> userIds) {
     }
 
     public Map<String, User> queryNameByIds(List<String> userIds) {
+        if(userIds.isEmpty()){
+            return new HashMap<>(0);
+        }
         return extUserMapper.queryNameByIds(userIds);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -130,7 +130,7 @@ public ApiScenarioReport testEnded(ResultDTO dto) {
         return scenarioReport;
     }
 
-    public APIScenarioReportResult get(String reportId,boolean selectReportContent) {
+    public APIScenarioReportResult get(String reportId, boolean selectReportContent) {
         ApiDefinitionExecResult result = definitionExecResultMapper.selectByPrimaryKey(reportId);
         if (result != null) {
             APIScenarioReportResult reportResult = new APIScenarioReportResult();
@@ -144,7 +144,7 @@ public APIScenarioReportResult get(String reportId,boolean selectReportContent)
         APIScenarioReportResult reportResult = extApiScenarioReportMapper.get(reportId);
         if (reportResult != null) {
             if (reportResult.getReportVersion() != null && reportResult.getReportVersion() > 1) {
-                reportResult.setContent(JSON.toJSONString(apiScenarioReportStructureService.assembleReport(reportId,selectReportContent)));
+                reportResult.setContent(JSON.toJSONString(apiScenarioReportStructureService.assembleReport(reportId, selectReportContent)));
             } else {
                 ApiScenarioReportDetail detail = apiScenarioReportDetailMapper.selectByPrimaryKey(reportId);
                 if (detail != null && reportResult != null) {
@@ -848,7 +848,7 @@ private String getStatus(List<ApiScenarioReportResult> requestResults, ResultDTO
         } else if (errorReportResultSize > 0) {
             status = ExecuteResult.errorReportResult.name();
         } else {
-            status = ScenarioStatus.Success.name();
+            status = requestResults.isEmpty() ? ScenarioStatus.Error.name() : ScenarioStatus.Success.name();
         }
 
         if (dto != null && dto.getArbitraryData() != null && dto.getArbitraryData().containsKey("TIMEOUT") && (Boolean) dto.getArbitraryData().get("TIMEOUT")) {

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -31,7 +31,7 @@ public class MsDefinitionParser extends MsAbstractParser<ApiDefinitionImport> {
     @Override
     public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest request) {
         String testStr = getApiTestStr(source);
-        JSONObject testObject = JSONObject.parseObject(testStr, Feature.OrderedField);
+        JSONObject testObject = JSONObject.parseObject(testStr, Feature.DisableSpecialKeyDetect);
         this.projectId = request.getProjectId();
         if (StringUtils.isNotBlank(request.getModuleId())) {
             this.selectModule = ApiDefinitionImportUtil.getSelectModule(request.getModuleId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -993,7 +993,7 @@ private void reSetImportMocksApiId(List<MockConfigImportDTO> mocks, String origi
 
     private String setImportHashTree(ApiDefinitionWithBLOBs apiDefinition) {
         String request = apiDefinition.getRequest();
-        MsHTTPSamplerProxy msHTTPSamplerProxy = JSONObject.parseObject(request, MsHTTPSamplerProxy.class);
+        MsHTTPSamplerProxy msHTTPSamplerProxy = JSONObject.parseObject(request, MsHTTPSamplerProxy.class, Feature.DisableSpecialKeyDetect);
         msHTTPSamplerProxy.setId(apiDefinition.getId());
         msHTTPSamplerProxy.setHashTree(new LinkedList<>());
         apiDefinition.setRequest(JSONObject.toJSONString(msHTTPSamplerProxy));
@@ -1002,7 +1002,7 @@ private String setImportHashTree(ApiDefinitionWithBLOBs apiDefinition) {
 
     private String setImportTCPHashTree(ApiDefinitionWithBLOBs apiDefinition) {
         String request = apiDefinition.getRequest();
-        MsTCPSampler tcpSampler = JSONObject.parseObject(request, MsTCPSampler.class);
+        MsTCPSampler tcpSampler = JSONObject.parseObject(request, MsTCPSampler.class, Feature.DisableSpecialKeyDetect);
         tcpSampler.setId(apiDefinition.getId());
         tcpSampler.setHashTree(new LinkedList<>());
         apiDefinition.setRequest(JSONObject.toJSONString(tcpSampler));

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -279,11 +279,13 @@ public void testCaseReviewRelevance(@RequestBody ApiCaseRelevanceRequest request
     }
 
     @PostMapping(value = "/schedule/update")
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION_SCHEDULE, type = OperLogConstants.UPDATE, title = "#request.name", beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request.id)", msClass = ApiAutomationService.class)
     public void updateSchedule(@RequestBody Schedule request) {
         apiAutomationService.updateSchedule(request);
     }
 
     @PostMapping(value = "/schedule/create")
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION_SCHEDULE, type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request)", msClass = ApiAutomationService.class)
     public void createSchedule(@RequestBody ScheduleRequest request) {
         apiAutomationService.createSchedule(request);
     }

File: backend/src/main/java/io/metersphere/commons/constants/OperLogModule.java
Patch:
@@ -13,10 +13,12 @@ public class OperLogModule {
     public static final String WORKSPACE_TEMPLATE_SETTINGS_CASE = "WORKSPACE_TEMPLATE_SETTINGS_CASE";
     public static final String WORKSPACE_MEMBER = "WORKSPACE_MEMBER";
     public static final String API_AUTOMATION = "API_AUTOMATION";
+    public static final String API_AUTOMATION_SCHEDULE = "API_AUTOMATION_SCHEDULE";
     public static final String API_AUTOMATION_REPORT = "API_AUTOMATION_REPORT";
     public static final String API_DEFINITION = "API_DEFINITION";
     public static final String API_DEFINITION_CASE = "API_DEFINITION_CASE";
     public static final String TRACK_TEST_PLAN = "TRACK_TEST_PLAN";
+    public static final String TRACK_TEST_PLAN_SCHEDULE = "TRACK_TEST_PLAN_SCHEDULE";
     public static final String TRACK_BUG = "TRACK_BUG";
     public static final String TRACK_TEST_CASE_REVIEW = "TRACK_TEST_CASE_REVIEW";
     public static final String TRACK_TEST_CASE = "TRACK_TEST_CASE";

File: backend/src/main/java/io/metersphere/api/dto/share/ApiDocumentInfoDTO.java
Patch:
@@ -31,7 +31,7 @@ public class ApiDocumentInfoDTO {
     private String requestBodyFormData;
     private String requestBodyStrutureData;
     private Object requestPreviewData;
-    private String jsonSchemaBody;
+    private JSONSchemaBodyDTO jsonSchemaBody;
 
     private String responseHead;
     private String responseBody;

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseParallelExecuteService.java
Patch:
@@ -41,6 +41,9 @@ public void parallel(Map<String, ApiDefinitionExecResult> executeQueue, RunModeC
         // 获取可以执行的资源池
         BaseSystemConfigDTO baseInfo = CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo();
         for (String testId : executeQueue.keySet()) {
+            if (Thread.currentThread().isInterrupted()) {
+                break;
+            }
             ApiDefinitionExecResult result = executeQueue.get(testId);
             String reportId = result.getId();
             JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(testId, reportId, runMode, null);

File: backend/src/main/java/io/metersphere/api/exec/queue/ExecThreadPoolExecutor.java
Patch:
@@ -131,7 +131,7 @@ public void removeQueue(String reportId) {
         BlockingQueue workerQueue = threadPool.getQueue();
         workerQueue.forEach(item -> {
             ExecTask task = (ExecTask) item;
-            if (task.getRequest() != null && StringUtils.equals(task.getRequest().getReportId(), reportId)) {
+            if (task != null && task.getRequest() != null && StringUtils.equals(task.getRequest().getReportId(), reportId)) {
                 workerQueue.remove(item);
             }
         });

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioParallelService.java
Patch:
@@ -36,6 +36,9 @@ public void parallel(Map<String, RunModeDataDTO> executeQueue, RunScenarioReques
         // 获取可以执行的资源池
         BaseSystemConfigDTO baseInfo = CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo();
         for (String reportId : executeQueue.keySet()) {
+            if (Thread.currentThread().isInterrupted()) {
+                break;
+            }
             RunModeDataDTO dataDTO = executeQueue.get(reportId);
             JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(dataDTO.getTestId(), StringUtils.isNotEmpty(serialReportId) ? serialReportId : reportId, request.getRunMode(), null);
             runRequest.setReportType(StringUtils.isNotEmpty(serialReportId) ? RunModeConstants.SET_REPORT.toString() : RunModeConstants.INDEPENDENCE.toString());

File: backend/src/main/java/io/metersphere/api/jmeter/JmeterThreadUtils.java
Patch:
@@ -15,7 +15,7 @@ public static String stop(String name) {
         currentGroup.enumerate(lstThreads);
         StringBuilder threadNames = new StringBuilder();
         for (int i = 0; i < noThreads; i++) {
-            if (StringUtils.isNotEmpty(lstThreads[i].getName()) && lstThreads[i].getName().startsWith(name)) {
+            if (lstThreads[i]!=null && StringUtils.isNotEmpty(lstThreads[i].getName()) && lstThreads[i].getName().startsWith(name)) {
                 System.out.println("异常强制处理线程编号：" + i + " = " + lstThreads[i].getName());
                 LogUtil.error("异常强制处理线程编号：" + i + " = " + lstThreads[i].getName());
                 threadNames.append(lstThreads[i].getName()).append("；");

File: backend/src/main/java/io/metersphere/performance/controller/request/DeleteReportRequest.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.performance.controller.request;
 
-import io.metersphere.track.request.testplancase.TestPlanFuncCaseConditions;
 import lombok.Data;
 
 import java.util.List;
@@ -9,5 +8,5 @@
 public class DeleteReportRequest {
     private List<String> ids;
     private String projectId;
-    private TestPlanFuncCaseConditions condition;
+    private ReportRequest condition;
 }

File: backend/src/main/java/io/metersphere/performance/controller/request/ReportRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.performance.controller.request;
 
+import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.OrderRequest;
 import lombok.Getter;
 import lombok.Setter;
@@ -9,7 +10,7 @@
 
 @Getter
 @Setter
-public class ReportRequest {
+public class ReportRequest extends BaseQueryRequest {
     private String name;
     private String workspaceId;
     private String testId;

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -245,7 +245,7 @@ public void bathEdit(@RequestBody ApiScenarioBatchRequest request) {
 
     @PostMapping("/batch/copy")
     @RequiresPermissions(value = {PermissionConstants.PROJECT_API_SCENARIO_READ_CREATE, PermissionConstants.PROJECT_API_SCENARIO_READ_COPY}, logical = Logical.OR)
-    @MsAuditLog(module = "api_automation", type = OperLogConstants.BATCH_ADD, beforeEvent = "#msClass.getLogDetails(#request.ids)", content = "#msClass.getLogDetails(#request.ids)", msClass = ApiAutomationService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION, type = OperLogConstants.BATCH_ADD, beforeEvent = "#msClass.getLogDetails(#request.ids)", content = "#msClass.getLogDetails(#request.ids)", msClass = ApiAutomationService.class)
     public void batchCopy(@RequestBody ApiScenarioBatchRequest request) {
         apiAutomationService.batchCopy(request);
     }

File: backend/src/main/java/io/metersphere/api/controller/ApiScenarioModuleController.java
Patch:
@@ -29,13 +29,13 @@ public List<ApiScenarioModuleDTO> getNodeByProjectId(@PathVariable String projec
     }
 
     @PostMapping("/add")
-    @MsAuditLog(module = "api_automation", type = OperLogConstants.CREATE, title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION, type = OperLogConstants.CREATE, title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
     public String addNode(@RequestBody ApiScenarioModule node) {
         return apiScenarioModuleService.addNode(node);
     }
 
     @PostMapping("/edit")
-    @MsAuditLog(module = "api_automation", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#node)", title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#node)", title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
     public int editNode(@RequestBody DragApiScenarioModuleRequest node) {
         return apiScenarioModuleService.editNode(node);
     }

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -61,7 +61,7 @@ public void delete(@RequestBody DeleteAPIReportRequest request) {
     }
 
     @PostMapping("/batch/delete")
-    @MsAuditLog(module = OperLogModule.API_AUTOMATION_REPORT, type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#reportRequest.ids)", msClass = ApiScenarioReportService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION_REPORT, type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#request.ids)", msClass = ApiScenarioReportService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getByIds(#request.ids)", targetClass = ApiScenarioReportService.class,
             subject = "接口报告通知")
     public void deleteAPIReportBatch(@RequestBody APIReportBatchRequest request) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -188,7 +188,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         setSamplerPath(config, httpConfig, sampler);
 
         // 请求体处理
-        if (this.body != null && StringUtils.equalsAnyIgnoreCase(method, "POST", "PUT", "PATCH")) {
+        if (this.body != null && !StringUtils.equalsAnyIgnoreCase(method, "GET")) {
             List<KeyValue> bodyParams = this.body.getBodyParams(sampler, this.getId());
             if (StringUtils.isNotEmpty(this.body.getType()) && "Form Data".equals(this.body.getType())) {
                 AtomicBoolean kvIsEmpty = new AtomicBoolean(true);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/JsonSchemaItem.java
Patch:
@@ -21,6 +21,7 @@ public class JsonSchemaItem {
     private List<JsonSchemaItem> items;
     private Map<String, Object> mock;
     private Map<String, JsonSchemaItem> properties;
+    private JsonSchemaItem additionalProperties;
     private List<String> required ;
 
     @JSONField(name = "$schema")

File: backend/src/main/java/io/metersphere/commons/json/BasicConstant.java
Patch:
@@ -4,6 +4,7 @@ public class BasicConstant {
     public final static String REQUIRED = "required";
     public final static String ALL_OF = "allOf";
     public final static String PROPERTIES = "properties";
+    public final static String ADDITIONAL_PROPERTIES = "additionalProperties";
     public final static String TYPE = "type";
     public final static String MS_OBJECT = "MS-OBJECT";
     public final static String ARRAY = "array";

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceReportController.java
Patch:
@@ -126,7 +126,7 @@ public List<LogDetailDTO> getResourceIds(@PathVariable String reportId) {
 
     @GetMapping("log/{reportId}/{resourceId}/{goPage}")
     public Pager<List<LoadTestReportLog>> logs(@PathVariable String reportId, @PathVariable String resourceId, @PathVariable int goPage) {
-        Page<Object> page = PageHelper.startPage(goPage, 1, true);
+        Page<Object> page = PageHelper.startPage(goPage, 1, true, false, null);
         return PageUtils.setPageInfo(page, performanceReportService.getReportLogs(reportId, resourceId));
     }
 

File: backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -185,9 +185,11 @@ public MsExecResponseDTO debug(RunDefinitionRequest request, List<MultipartFile>
 
         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(testId, request.getId(), runMode, hashTree);
         runRequest.setDebug(request.isDebug());
+
         runRequest.setExtendedParameters(new HashMap<String, Object>() {{
             this.put("SYN_RES", request.isSyncResult());
-            this.put("user", Objects.requireNonNull(SessionUtils.getUser()));
+            this.put("userId", SessionUtils.getUser().getId());
+            this.put("userName", SessionUtils.getUser().getName());
         }});
         // 开始执行
         jMeterService.run(runRequest);

File: backend/src/main/java/io/metersphere/dto/RelationshipGraphData.java
Patch:
@@ -34,7 +34,6 @@ public static class Node {
         private Integer category; // 分组
         private Integer x;
         private Integer y;
-        private Boolean visited = false;
     }
 
     @Getter

File: backend/src/main/java/io/metersphere/api/jmeter/FixedTask.java
Patch:
@@ -9,7 +9,7 @@
 public class FixedTask {
     private ApiExecutionQueueService queueService;
 
-    @Scheduled(cron = "0 0/2 * * * ?")
+    @Scheduled(cron = "0 0/5 * * * ?")
     public void execute() {
         if (queueService == null) {
             queueService = CommonBeanFactory.getBean(ApiExecutionQueueService.class);

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -337,7 +337,7 @@ public void deleteToGcBatchPublic(@RequestBody TestCaseBatchRequest request) {
     }
 
     @PostMapping("/reduction")
-    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.GC, beforeEvent = "#msClass.getLogDetails(#testCaseId)", msClass = TestCaseService.class)
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.RESTORE, beforeEvent = "#msClass.getLogDetails(#request.ids)", msClass = TestCaseService.class)
     public void reduction(@RequestBody TestCaseBatchRequest request) {
         testCaseService.reduction(request);
     }

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogRequest.java
Patch:
@@ -22,7 +22,7 @@ public class OperatingLogRequest implements Serializable {
 
     private Long endTime;
 
-    private String operModule;
+    private List<String> operModule;
 
     private String operTitle;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/unknown/MsJmeterElement.java
Patch:
@@ -80,7 +80,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                 // 取出导入的测试计划中变量
                 if (scriptWrapper instanceof TestPlan) {
                     TestPlan testPlan = (TestPlan) scriptWrapper;
-                    if (testPlan.getArguments() != null) {
+                    if (testPlan.getArguments() != null && StringUtils.isNotEmpty(testPlan.getArguments().getName())) {
                         elementTree.add(testPlan.getArguments());
                     }
                 }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -39,6 +39,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         } else {
             request.setPath("/");
         }
+        request.getBody().setType("KeyValue");
         parseBody(request.getBody(), requestDesc);
         request.setArguments(parseKeyValue(url == null ? new ArrayList<>() : url.getQuery()));
         request.setHeaders(parseKeyValue(requestDesc.getHeader()));
@@ -104,7 +105,7 @@ private void addPreScript(MsHTTPSamplerProxy request, List<PostmanEvent> event)
 
     private List<KeyValue> parseKeyValue(List<PostmanKeyValue> postmanKeyValues) {
         if (postmanKeyValues == null) {
-            return null;
+            return new ArrayList<>();
         }
         List<KeyValue> keyValues = new ArrayList<>();
         postmanKeyValues.forEach(item -> {

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -21,7 +21,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final Pattern IMG_PATTERN = Pattern.compile("m=file&f=read&fileID=(.*?)\"/>");
     private static final String PRODUCT_GET = "&module=product&methodName=getById&params=productID={0}&zentaosid={1}";
     // 注意 recTotal={1}&recPerPage={2}&pageID={3} 顺序不能调换，有点恶心
-    private static final String BUG_LIST_URL = "/?m=bug&f=browse&productID={0}&branch=&browseType=&param=0&orderBy=&recTotal={1}&recPerPage={2}&pageID={3}&t=json&zentaosid={4}";
+    private static final String BUG_LIST_URL = "/?m=bug&f=browse&productID={0}&branch=&browseType=all&param=0&orderBy=&recTotal={1}&recPerPage={2}&pageID={3}&t=json&zentaosid={4}";
 
     RequestUrl request = new RequestUrl();
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -21,7 +21,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
     private static final String PRODUCT_GET = "/api-getModel-product-getById-productID={0}?zentaosid={1}";
-    private static final String BUG_LIST_URL = "/bug-browse-{1}---0--{2}-{3}-{4}.json?zentaosid={5}";
+    private static final String BUG_LIST_URL = "/bug-browse-{1}---0--{2}-{3}-{4}.json?browseType=all&zentaosid={5}";
 
 
     public ZentaoPathInfoClient(String url) {

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -229,7 +229,7 @@ public void setConfig(JiraConfig config) {
 
     public JiraIssueListResponse getProjectIssues(int startAt, int maxResults, String projectKey, String issueType) {
         ResponseEntity<String> responseEntity;
-        responseEntity = restTemplate.exchange(getBaseUrl() + "/search?startAt={1}&maxResults={2}&jql=project={3}+AND+issuetype={4}&fields=status,assignee,summary,created,updated,attachment,description",
+        responseEntity = restTemplate.exchange(getBaseUrl() + "/search?startAt={1}&maxResults={2}&jql=project={3}+AND+issuetype={4}",
                 HttpMethod.GET, getAuthHttpEntity(), String.class, startAt, maxResults, projectKey, issueType);
         return  (JiraIssueListResponse)getResultForObject(JiraIssueListResponse.class, responseEntity);
     }

File: backend/src/main/java/io/metersphere/task/controller/TaskController.java
Patch:
@@ -20,7 +20,7 @@ public class TaskController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TaskCenterDTO>> getTasks(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody TaskCenterRequest request) {
-        request.setProjects(taskService.getOwnerProjectIds(null));
+        request.setProjects(taskService.getOwnerProjectIds(request.getUserId()));
         request.setGoPage(goPage);
         request.setPageSize(pageSize);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -171,7 +171,7 @@ public APIReportResult getApiReport(@PathVariable String shareId, @PathVariable
     @GetMapping("/api/scenario/report/get/{shareId}/{reportId}")
     public APIScenarioReportResult get(@PathVariable String shareId, @PathVariable String reportId) {
         shareInfoService.validateExpired(shareId); // 测试计划，和接口都会用这个
-        return apiScenarioReportService.get(reportId,false);
+        return apiScenarioReportService.get(reportId,true);
     }
 
     @GetMapping("/performance/report/{shareId}/{reportId}")

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -451,7 +451,6 @@ private ApiDefinitionExecResult editResult(RequestResult item, String reportId,
             }
             saveResult.setType(type);
             saveResult.setStatus(status);
-            saveResult.setResourceId(item.getName());
             saveResult.setStartTime(item.getStartTime());
             saveResult.setEndTime(item.getEndTime());
 

File: backend/src/main/java/io/metersphere/api/service/ApiExecutionQueueService.java
Patch:
@@ -350,7 +350,8 @@ public void defendQueue() {
                 if (report == null) {
                     executionQueueDetailMapper.deleteByPrimaryKey(item.getId());
                 }
-                if (report != null && StringUtils.equalsAnyIgnoreCase(report.getStatus(), TestPlanReportStatus.RUNNING.name(), APITestStatus.Waiting.name())
+                // 这里只处理已经开始执行的队列如果 报告状态是 Waiting 表示还没开始暂不处理
+                if (report != null && StringUtils.equalsAnyIgnoreCase(report.getStatus(), TestPlanReportStatus.RUNNING.name())
                         && report.getUpdateTime() < timeout) {
                     report.setStatus(ScenarioStatus.Timeout.name());
                     apiScenarioReportMapper.updateByPrimaryKeySelective(report);

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -171,7 +171,7 @@ public static void checkCase(int i,JSONObject object, String versionId, String p
 
     public static ApiDefinitionResult structureApiDefinitionByJson(int i,ApiDefinitionService apiDefinitionService,JSONObject object, String versionId, String projectId,ApiDefinitionMapper apiDefinitionMapper,Map<String,ApiDefinition>definitionMap) {
         ApiDefinitionResult test = new ApiDefinitionResult();
-        apiDefinitionService.checkQuota();
+        apiDefinitionService.checkQuota(projectId);
         String protocal = object.getString("protocal");
         if (StringUtils.equals(protocal, "DUBBO")) {
             test.setMethod("dubbo://");

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -236,7 +236,7 @@ public void removeToGcByIds(List<String> nodeIds) {
     }
 
     public ApiScenario create(SaveApiScenarioRequest request, List<MultipartFile> bodyFiles, List<MultipartFile> scenarioFiles) {
-        checkQuota();
+        checkQuota(request.getProjectId());
         request.setId(UUID.randomUUID().toString());
         if (request.getScenarioDefinition() == null) {
             MsScenario msScenario = new MsScenario();
@@ -272,10 +272,10 @@ public ApiScenario create(SaveApiScenarioRequest request, List<MultipartFile> bo
         return scenario;
     }
 
-    private void checkQuota() {
+    private void checkQuota(String projectId) {
         QuotaService quotaService = CommonBeanFactory.getBean(QuotaService.class);
         if (quotaService != null) {
-            quotaService.checkAPIAutomationQuota();
+            quotaService.checkAPIAutomationQuota(projectId);
         }
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -319,7 +319,7 @@ public List<ApiDefinitionWithBLOBs> getBLOBs(List<String> idList) {
     }
 
     public ApiDefinitionWithBLOBs create(SaveApiDefinitionRequest request, List<MultipartFile> bodyFiles) {
-        checkQuota();
+        checkQuota(request.getProjectId());
         if (StringUtils.equals(request.getProtocol(), "DUBBO")) {
             request.setMethod("dubbo://");
         }
@@ -348,10 +348,10 @@ public ApiDefinitionWithBLOBs update(SaveApiDefinitionRequest request, List<Mult
         return getBLOBs(returnModel.getId());
     }
 
-    public void checkQuota() {
+    public void checkQuota(String projectId) {
         QuotaService quotaService = CommonBeanFactory.getBean(QuotaService.class);
         if (quotaService != null) {
-            quotaService.checkAPIDefinitionQuota();
+            quotaService.checkAPIDefinitionQuota(projectId);
         }
     }
 

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -536,6 +536,7 @@ private void checkLoadQuota(LoadTestReportWithBLOBs testReport, Engine engine) {
         RunTestPlanRequest checkRequest = new RunTestPlanRequest();
         QuotaService quotaService = CommonBeanFactory.getBean(QuotaService.class);
         checkRequest.setLoadConfiguration(testReport.getLoadConfiguration());
+        checkRequest.setProjectId(testReport.getProjectId());
         if (quotaService != null) {
             quotaService.checkLoadTestQuota(checkRequest, false);
             String projectId = testReport.getProjectId();

File: backend/src/main/java/io/metersphere/service/QuotaService.java
Patch:
@@ -17,12 +17,12 @@ public interface QuotaService {
     /**
      * api配额检查
      */
-    void checkAPIDefinitionQuota();
+    void checkAPIDefinitionQuota(String projectId);
 
     /**
      * api配额检查
      */
-    void checkAPIAutomationQuota();
+    void checkAPIAutomationQuota(String projectId);
 
     /**
      * 性能测试配额检查

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -341,7 +341,7 @@ public void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScen
                         failCount++;
                     } else if (StringUtils.equalsIgnoreCase(child.getTotalStatus(), "success")) {
                         successCount++;
-                    } else if (StringUtils.equalsIgnoreCase(child.getTotalStatus(), "errorCode")) {
+                    } else if (StringUtils.equalsAnyIgnoreCase(child.getTotalStatus(), "errorCode", "errorReportResult")) {
                         errorReportCount++;
                     }
                 }

File: backend/src/main/java/io/metersphere/commons/constants/OperLogModule.java
Patch:
@@ -36,8 +36,9 @@ public class OperLogModule {
     public static final String SYSTEM_QUOTA_MANAGEMENT = "SYSTEM_QUOTA_MANAGEMENT";
     public static final String ENTERPRISE_TEST_REPORT = "ENTERPRISE_TEST_REPORT";
     public static final String SYSTEM_AUTHORIZATION_MANAGEMENT = "SYSTEM_AUTHORIZATION_MANAGEMENT";
-
-
+    public static final String UI_ELEMENT = "UI_ELEMENT";
+    public static final String UI_AUTOMATION = "UI_AUTOMATION";
+    public static final String UI_AUTOMATION_REPORT = "UI_AUTOMATION_REPORT";
 
 
 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/environment/GlobalScriptFilterRequest.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.api.dto.scenario.environment;
 
 public enum GlobalScriptFilterRequest {
-    HTTP,TCP,JDBC
+    HTTP,TCP,JDBC,DUBBO
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -332,8 +332,8 @@ public void deleteToGcBatch(@RequestBody TestCaseBatchRequest request) {
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#request.ids)", msClass = TestCaseService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, target = "#targetClass.findByBatchRequest(#request)", targetClass = TestCaseService.class,
             event = NoticeConstants.Event.DELETE, mailTemplate = "track/TestCaseDelete", subject = "测试用例通知")
-    public void deleteToGcBatchPublic(@RequestBody List<String> ids) {
-        testCaseService.deleteToGcBatchPublic(ids);
+    public void deleteToGcBatchPublic(@RequestBody TestCaseBatchRequest request) {
+        testCaseService.deleteToGcBatchPublic(request);
     }
 
     @PostMapping("/reduction")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -188,7 +188,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         setSamplerPath(config, httpConfig, sampler);
 
         // 请求体处理
-        if (this.body != null) {
+        if (this.body != null && StringUtils.equalsAnyIgnoreCase(method,"POST","PUT","PATCH")) {
             List<KeyValue> bodyParams = this.body.getBodyParams(sampler, this.getId());
             if (StringUtils.isNotEmpty(this.body.getType()) && "Form Data".equals(this.body.getType())) {
                 AtomicBoolean kvIsEmpty = new AtomicBoolean(true);

File: backend/src/main/java/io/metersphere/base/domain/ShareInfo.java
Patch:
@@ -15,6 +15,8 @@ public class ShareInfo implements Serializable {
 
     private String shareType;
 
+    private String lang;
+
     private String customData;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -502,7 +502,7 @@ public String modifyTagPattern(TestCaseExcelData data) {
             return "[]";
         } catch (Exception e) {
             if (tags != null) {
-                Stream<String> stringStream = Arrays.stream(tags.split("[,;，；]"));  //当标签值以中英文的逗号和分号分隔时才能正确解析
+                Stream<String> stringStream = Arrays.stream(tags.split("[,;，；\"\\r|\\n|\\r\\n\"]"));  //当标签值以中英文的逗号和分号分隔时才能正确解析
                 List<String> tagList = stringStream.map(tag -> tag = "\"" + tag + "\"")
                         .collect(Collectors.toList());
                 String modifiedTags = StringUtils.join(tagList, ",");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1705,14 +1705,12 @@ public List<ApiDefinition> selectEffectiveIdByProjectId(String projectId) {
     }
 
     public List<ApiDefinitionWithBLOBs> preparedUrl(String projectId, String method, String baseUrlSuffix) {
-
         if (StringUtils.isEmpty(baseUrlSuffix)) {
             return new ArrayList<>();
         } else {
             ApiDefinitionExample example = new ApiDefinitionExample();
             example.createCriteria().andMethodEqualTo(method).andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andProtocolEqualTo("HTTP");
             List<ApiDefinition> apiList = apiDefinitionMapper.selectByExample(example);
-
             List<String> apiIdList = new ArrayList<>();
             boolean urlSuffixEndEmpty = false;
             String urlSuffix = baseUrlSuffix;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -88,4 +88,6 @@ public interface ExtApiScenarioMapper {
     void addLatestVersion(String refId);
 
     List<String> selectRefIdsForVersionChange(@Param("versionId") String versionId, @Param("projectId") String projectId);
+
+    List<ApiScenarioWithBLOBs> selectByStatusIsNotTrash();
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReferenceIdMapper.java
Patch:
@@ -1,9 +1,10 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.ApiScenarioReferenceId;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtApiScenarioReferenceIdMapper {
-    List<String> selectRefIdsFromScenarioIds(@Param("ids") List<String> scenarioIds);
+    List<ApiScenarioReferenceId> selectUrlByProjectId(String projectId);
 }

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -137,7 +137,7 @@ private void initOnceOperate(RunInterface initFuc, final String key) {
     }
 
     private void initOnceOperate() {
-        initOnceOperate(apiAutomationService::checkApiScenarioReferenceId, "init.scenario.referenceId");
+        initOnceOperate(apiAutomationService::resetApiScenarioReferenceId, "init.scenario.referenceId.reset");
         initOnceOperate(apiAutomationService::initExecuteTimes, "init.scenario.executeTimes");
         initOnceOperate(issuesService::syncThirdPartyIssues, "init.issue");
         initOnceOperate(issuesService::issuesCount, "init.issueCount");

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -210,6 +210,7 @@ public static ApiDefinitionResult structureApiDefinitionByJson(int i,ApiDefiniti
         object.put("resourceId", test.getId());
         object.put("projectId", projectId);
         object.put("useEnvironment","");
+        object.put("environmentId","");
         object.put("url","");
         JSONObject objectNew = JSONObject.parseObject(object.toJSONString(), Feature.DisableSpecialKeyDetect);
         objectNew.remove("refType");
@@ -252,6 +253,7 @@ public static void structureCaseByJson(int i,JSONObject object,ApiTestCaseServic
         object.put("resourceId", apiTestCase.getId());
         object.put("projectId", projectId);
         object.put("useEnvironment","");
+        object.put("environmentId","");
         JSONObject objectNew = JSONObject.parseObject(object.toJSONString(),Feature.DisableSpecialKeyDetect);
         objectNew.remove("refType");
         objectNew.remove("referenced");

File: backend/src/main/java/io/metersphere/api/dto/ErrorReportLibraryParseDTO.java
Patch:
@@ -12,8 +12,9 @@
 @Getter
 @Setter
 public class ErrorReportLibraryParseDTO {
-    public List<String> errorCodeList;
-    public RequestResult result;
+    private List<String> errorCodeList;
+    private RequestResult result;
+    private String requestStatus;
 
     public ErrorReportLibraryParseDTO() {
         this.errorCodeList = new ArrayList<>();

File: backend/src/main/java/io/metersphere/api/dto/RequestResultExpandDTO.java
Patch:
@@ -32,6 +32,7 @@ public RequestResultExpandDTO(ApiScenarioReportResultWithBLOBs requestResult) {
                 this.setTime(dto.getRspTime());
                 this.setEndTime(dto.getRspTime() - dto.getReqStartTime());
                 this.setUiImg(dto.getUiImg());
+                this.setStatus(requestResult.getStatus());
                 ResponseResult responseResult = this.getResponseResult();
                 responseResult.setResponseCode(dto.getRspCode());
                 responseResult.setResponseTime(dto.getRspTime());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -370,7 +370,7 @@ private HttpConfig getHttpConfig(ParameterConfig config) {
                 httpConfig.setGlobalScriptConfig(environmentConfig.getGlobalScriptConfig());
                 httpConfig.setAssertions(environmentConfig.getAssertions());
                 if (environmentConfig.isUseErrorCode()) {
-                    httpConfig.setErrorReportAssertions(HashTreeUtil.getErrorReportByProjectId(this.getProjectId()));
+                    httpConfig.setErrorReportAssertions(HashTreeUtil.getErrorReportByProjectId(this.getProjectId(),environmentConfig.isHigherThanSuccess(),environmentConfig.isHigherThanError()));
                 }
                 return httpConfig;
             }

File: backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvironmentConfig.java
Patch:
@@ -33,6 +33,8 @@ public class EnvironmentConfig {
     private JSONObject authManager;
     private List<MsAssertions> assertions;
     private boolean useErrorCode;
+    private boolean higherThanSuccess;
+    private boolean higherThanError;
 
     public EnvironmentConfig() {
         this.commonConfig = new CommonConfig();

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -442,7 +442,9 @@ private ApiDefinitionExecResult editResult(RequestResult item, String reportId,
             RequestResultExpandDTO expandDTO = ResponseUtil.parseByRequestResult(item);
             String status = item.isSuccess() ? ExecuteResult.success.name() : ExecuteResult.error.name();
             if (MapUtils.isNotEmpty(expandDTO.getAttachInfoMap())) {
-                status = expandDTO.getStatus();
+                if(StringUtils.isNotEmpty(expandDTO.getStatus())){
+                    status = expandDTO.getStatus();
+                }
                 saveResult.setContent(JSON.toJSONString(expandDTO));
             } else {
                 saveResult.setContent(JSON.toJSONString(item));

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -110,9 +110,11 @@ private ApiScenarioReportResultWithBLOBs newApiScenarioReportResult(String repor
         report.setPassAssertions(Long.parseLong(result.getPassAssertions() + ""));
         String status = result.getError() == 0 ? ExecuteResult.Success.name() : ExecuteResult.Error.name();
         if (CollectionUtils.isNotEmpty(errorCodeDTO.getErrorCodeList())) {
-            status = ExecuteResult.errorReportResult.name();
             report.setErrorCode(errorCodeDTO.getErrorCodeStr());
         }
+        if(StringUtils.equalsIgnoreCase(errorCodeDTO.getRequestStatus(),ExecuteResult.errorReportResult.name())){
+            status = errorCodeDTO.getRequestStatus();
+        }
         report.setStatus(status);
         report.setRequestTime(result.getEndTime() - result.getStartTime());
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -286,6 +286,7 @@ public void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScen
                         dto.setStepId(reportResults.get(0).getId());
                         dto.setValue(requestResultExpandDTO);
                         dto.setErrorCode(reportResults.get(0).getErrorCode());
+                        dto.setTotalStatus(requestResultExpandDTO.getStatus());
                     }
                 }
             }
@@ -312,7 +313,7 @@ public void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScen
                     }
                 }
             }
-            if (StringUtils.isNotEmpty(dto.getErrorCode())) {
+            if (StringUtils.isNotEmpty(dto.getErrorCode()) && StringUtils.isEmpty(dto.getTotalStatus())) {
                 dto.setTotalStatus("errorCode");
             }
 
@@ -545,7 +546,7 @@ private ApiScenarioReportDTO getReport(String reportId, boolean selectContent) {
 
             reportDTO.setTotal(reportResults.size());
             reportDTO.setError(reportResults.stream().filter(e -> StringUtils.equals(e.getStatus(), "Error")).collect(Collectors.toList()).size());
-            reportDTO.setErrorCode(reportResults.stream().filter(e -> StringUtils.isNotEmpty(e.getErrorCode())).collect(Collectors.toList()).size());
+            reportDTO.setErrorCode(reportResults.stream().filter(e -> StringUtils.equals(e.getStatus(), ExecuteResult.errorReportResult.name())).collect(Collectors.toList()).size());
             reportDTO.setPassAssertions(reportResults.stream().mapToLong(ApiScenarioReportResult::getPassAssertions).sum());
             reportDTO.setTotalAssertions(reportResults.stream().mapToLong(ApiScenarioReportResult::getTotalAssertions).sum());
 

File: backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -239,17 +239,17 @@ public MsAssertions duplicateRegexInAssertions(List<MsAssertions> compareList, M
         return target;
     }
 
-    public static List<MsAssertions> getErrorReportByProjectId(String projectId) {
+    public static List<MsAssertions> getErrorReportByProjectId(String projectId,boolean higherThanSuccess,boolean higherThanError) {
         ExtErrorReportLibraryService service = CommonBeanFactory.getBean(ExtErrorReportLibraryService.class);
-        return service.getAssertionByProjectIdAndStatusIsOpen(projectId);
+        return service.getAssertionByProjectIdAndStatusIsOpen(projectId,higherThanSuccess,higherThanError);
     }
 
     public static void addPositive(EnvironmentConfig envConfig, HashTree samplerHashTree, ParameterConfig config, String projectId) {
         if (envConfig == null) {
             return;
         }
         if (!config.isOperating() && envConfig.isUseErrorCode()) {
-            List<MsAssertions> errorReportAssertion = HashTreeUtil.getErrorReportByProjectId(projectId);
+            List<MsAssertions> errorReportAssertion = HashTreeUtil.getErrorReportByProjectId(projectId,envConfig.isHigherThanSuccess(),envConfig.isHigherThanError());
             for (MsAssertions assertion : errorReportAssertion) {
                 assertion.toHashTree(samplerHashTree, assertion.getHashTree(), config);
             }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -342,7 +342,6 @@ private int getNextNum(String projectId) {
     }
 
     public ApiScenario update(SaveApiScenarioRequest request, List<MultipartFile> bodyFiles, List<MultipartFile> scenarioFiles) {
-        checkQuota();
         checkNameExist(request);
         checkScenarioNum(request);
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -334,7 +334,6 @@ public ApiDefinitionWithBLOBs create(SaveApiDefinitionRequest request, List<Mult
     }
 
     public ApiDefinitionWithBLOBs update(SaveApiDefinitionRequest request, List<MultipartFile> bodyFiles) {
-        checkQuota();
         if (request.getRequest() != null) {
             deleteFileByTestId(request.getRequest().getId());
         }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -183,7 +183,7 @@ public String getReplaceImgUrl(String replaceImgUrl) {
         String suffix = split[split.length - 1];
         if (StringUtils.equals("biz", suffix)) {
             suffix = baseUrl;
-        } else if (!StringUtils.equalsAny(suffix, "zentao", "zentaopms", "zentaopro", "zentaobiz")) {
+        } else if (!StringUtils.equalsAny(suffix, "zentao", "pro", "zentaopms", "zentaopro", "zentaobiz")) {
             suffix = "";
         } else {
             suffix = "/" + suffix;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -281,6 +281,7 @@ public static <T> List<T> findFromHashTreeByType(MsTestElement hashTree, Class<T
 
     public final static List<String> requests = new ArrayList<String>() {{
         this.add("HTTPSamplerProxy");
+        this.add("MsUiCommand");
         this.add("DubboSampler");
         this.add("JDBCSampler");
         this.add("TCPSampler");

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -333,6 +333,7 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
             if (url != null) {
                 samplerProxy.setUrl(this.getUrl(source));
                 samplerProxy.setPath(null);
+                samplerProxy.setCustomizeReq(true);
             }
             samplerProxy.setId(UUID.randomUUID().toString());
             samplerProxy.setType("HTTPSamplerProxy");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -149,9 +149,10 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (arguments != null && (this.variableEnable == null || this.variableEnable)) {
             Arguments valueSupposeMock = ParameterConfig.valueSupposeMock(arguments);
             // 这里加入自定义变量解决ForEach循环控制器取值问题，循环控制器无法从vars中取值
-            scenarioTree.add(valueSupposeMock);
             if (this.variableEnable != null && this.variableEnable) {
                 scenarioTree.add(ElementUtil.argumentsToUserParameters(valueSupposeMock));
+            } else {
+                scenarioTree.add(valueSupposeMock);
             }
         }
         if (this.variableEnable == null || this.variableEnable) {
@@ -261,7 +262,7 @@ private void setNewConfig(Map<String, EnvironmentConfig> envConfig, ParameterCon
                 if (StringUtils.equals(environmentType, EnvironmentType.GROUP.name())) {
                     this.environmentMap = environmentGroupProjectService.getEnvMap(environmentGroupId);
                 } else if (StringUtils.equals(environmentType, EnvironmentType.JSON.name())) {
-                    this.environmentMap = JSON.parseObject(environmentJson, Map.class,Feature.DisableSpecialKeyDetect);
+                    this.environmentMap = JSON.parseObject(environmentJson, Map.class, Feature.DisableSpecialKeyDetect);
                 }
             } else {
                 this.setEnvironmentEnable(false);

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -179,6 +179,7 @@ public Schedule buildApiTestSchedule(ScheduleRequest request) {
         schedule.setUserId(SessionUtils.getUser().getId());
         schedule.setProjectId(request.getProjectId());
         schedule.setWorkspaceId(request.getWorkspaceId());
+        schedule.setConfig(request.getConfig());
         return schedule;
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -244,8 +244,6 @@ public TestPlan editTestPlanWithRequest(AddTestPlanRequest request) {
                 }
             }
         }
-        List<String> follows = request.getFollows();
-        editTestFollows(request.getId(), follows);
         return this.editTestPlan(request);
     }
 

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -316,6 +316,7 @@ public void updateSchedule(Schedule request) {
             triggerKey = ApiScenarioTestJob.getTriggerKey(request.getResourceId());
             clazz = ApiScenarioTestJob.class;
             request.setJob(ApiScenarioTestJob.class.getName());
+            needResetJob = true;
         }
         this.editSchedule(request);
 

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -649,7 +649,7 @@ private List<JSONObject> buildParameters(JSONObject request) {
 //                        schema.put("example", param.getString("value"));
 //                        swaggerParam.setSchema(schema);
 //                    }
-                    paramsList.add(JSON.parseObject(JSON.toJSONString(swaggerParam)));
+                    paramsList.add(JSON.parseObject(JSON.toJSONString(swaggerParam),Feature.DisableSpecialKeyDetect));
                 }
             }
         }

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -203,7 +203,7 @@ private String genScenarioInSubRequestResult(RequestResult item) {
         }
 
         if (StringUtils.isNotEmpty(item.getScenario())) {
-            List<String> id_names = JSON.parseObject(item.getScenario(), List.class);
+            List<String> id_names = JSON.parseObject(item.getScenario(), List.class, Feature.DisableSpecialKeyDetect);
             this.setStatus(id_names, item.getError() > 0);
             return item.getScenario();
         } else {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1378,7 +1378,7 @@ public void checkDefinition(ApiScenrioExportResult result, List<String> names, L
             if (scenario == null || StringUtils.isEmpty(scenario.getScenarioDefinition())) {
                 return;
             }
-            JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
+            JSONObject element = JSON.parseObject(scenario.getScenarioDefinition(),Feature.DisableSpecialKeyDetect);
             JSONArray hashTree = element.getJSONArray("hashTree");
             ApiScenarioImportUtil.formatHashTree(hashTree);
             setHashTree(hashTree);
@@ -1402,7 +1402,7 @@ public void setHashTree(JSONArray hashTree) {
                                 if (CollectionUtils.isEmpty(object.getJSONArray("hashTree"))) {
                                     ApiTestCaseInfo model = extApiTestCaseMapper.selectApiCaseInfoByPrimaryKey(object.getString("id"));
                                     if (model != null) {
-                                        JSONObject element = JSON.parseObject(model.getRequest());
+                                        JSONObject element = JSON.parseObject(model.getRequest(),Feature.DisableSpecialKeyDetect);
                                         object.put("hashTree", element.getJSONArray("hashTree"));
                                     }
                                 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.metersphere.api.dto.APIReportResult;
@@ -1973,7 +1974,7 @@ public List<DocumentElement> getDocument(String id, String type) {
         ApiDefinitionWithBLOBs bloBs = apiDefinitionMapper.selectByPrimaryKey(id);
         List<DocumentElement> elements = new LinkedList<>();
         if (bloBs != null && StringUtils.isNotEmpty(bloBs.getResponse())) {
-            JSONObject object = JSON.parseObject(bloBs.getResponse());
+            JSONObject object = JSON.parseObject(bloBs.getResponse(), Feature.DisableSpecialKeyDetect);
             JSONObject body = (JSONObject) object.get("body");
             if (body != null) {
                 String raw = body.getString("raw");

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.api.dto.*;
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
 import io.metersphere.api.dto.automation.ExecuteType;
@@ -452,7 +453,7 @@ public String getEnvironment(ApiScenarioWithBLOBs apiScenario) {
         String environmentType = apiScenario.getEnvironmentType();
         if (StringUtils.equals(environmentType, EnvironmentType.JSON.name()) && StringUtils.isNotEmpty(apiScenario.getEnvironmentJson())) {
             String environmentJson = apiScenario.getEnvironmentJson();
-            JSONObject jsonObject = JSON.parseObject(environmentJson);
+            JSONObject jsonObject = JSON.parseObject(environmentJson, Feature.DisableSpecialKeyDetect);
             ApiTestEnvironmentExample example = new ApiTestEnvironmentExample();
             List<String> collect = jsonObject.values().stream().map(Object::toString).collect(Collectors.toList());
             collect.add("-1");// 防止没有配置环境导致不能发送的问题

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.api.dto.ApiScenarioReportBaseInfoDTO;
 import io.metersphere.api.dto.ApiScenarioReportDTO;
 import io.metersphere.api.dto.RequestResultExpandDTO;
@@ -122,7 +123,7 @@ public static StepTreeDTO dataFormatting(UiScenarioWithBLOBs uiScenario, String
     }
 
     public static StepTreeDTO dataFormatting(String id, String name, String scenarioDefinition, String reportType) {
-        JSONObject element = JSON.parseObject(scenarioDefinition);
+        JSONObject element = JSON.parseObject(scenarioDefinition, Feature.DisableSpecialKeyDetect);
         StepTreeDTO dto = null;
         if (element != null && element.getBoolean("enable")) {
             element = getRefElement(element);
@@ -150,7 +151,7 @@ private static JSONObject getRefElement(JSONObject element) {
             if (StringUtils.equals(element.getString("type"), "scenario")) {
                 ApiScenarioWithBLOBs scenarioWithBLOBs = CommonBeanFactory.getBean(ApiScenarioMapper.class).selectByPrimaryKey(element.getString("id"));
                 if (scenarioWithBLOBs != null) {
-                    return JSON.parseObject(scenarioWithBLOBs.getScenarioDefinition());
+                    return JSON.parseObject(scenarioWithBLOBs.getScenarioDefinition(), Feature.DisableSpecialKeyDetect);
                 }
             }
         }

File: backend/src/main/java/io/metersphere/job/sechedule/SwaggerUrlImportJob.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.api.dto.ApiTestImportRequest;
 import io.metersphere.api.dto.definition.request.auth.MsAuthManager;
 import io.metersphere.api.dto.scenario.KeyValue;
@@ -55,7 +56,7 @@ public static TriggerKey getTriggerKey(String resourceId) {
     public void setAuthInfo(String config, ApiTestImportRequest request){
         // 获取鉴权设置
         if(StringUtils.isNotBlank(config)){
-            JSONObject configObj = JSON.parseObject(config);
+            JSONObject configObj = JSON.parseObject(config, Feature.DisableSpecialKeyDetect);
             List<KeyValue> headers = JSONObject.parseArray(configObj.getString("headers"), KeyValue.class);
             if(CollectionUtils.isNotEmpty(headers)){
                 request.setHeaders(headers);

File: backend/src/main/java/io/metersphere/log/utils/ApiTestEnvironmentDiffUtil.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.commons.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
 import java.util.LinkedHashMap;
@@ -11,8 +12,8 @@ public class ApiTestEnvironmentDiffUtil {
 
     public static String diff(String newValue, String oldValue) {
         try {
-            JSONObject bloBsNew = JSON.parseObject(newValue);
-            JSONObject bloBsOld = JSON.parseObject(oldValue);
+            JSONObject bloBsNew = JSON.parseObject(newValue, Feature.DisableSpecialKeyDetect);
+            JSONObject bloBsOld = JSON.parseObject(oldValue, Feature.DisableSpecialKeyDetect);
 
             Map<String, String> diffMap = new LinkedHashMap<>();
             diffMap.put("type", "preAndPostScript");

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -151,7 +151,7 @@ private void runNode(JmeterRunRequestDTO request, List<TestResource> resources)
         }
     }
 
-    private synchronized void send(JmeterRunRequestDTO request, List<TestResource> resources) {
+    private void send(JmeterRunRequestDTO request, List<TestResource> resources) {
         try {
             if (StringUtils.isNotEmpty(request.getPoolId()) && CollectionUtils.isEmpty(resources)) {
                 resources = GenerateHashTreeUtil.setPoolResource(request.getPoolId());

File: backend/src/main/java/io/metersphere/api/dto/DeleteAPIReportRequest.java
Patch:
@@ -31,4 +31,6 @@ public class DeleteAPIReportRequest {
     private List<String> moduleIds;
 
     private List<String> unSelectIds;
+
+    private Boolean isUi;
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -10,7 +10,6 @@
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
-import io.metersphere.dto.MsExecResponseDTO;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.notice.annotation.SendNotice;
 import io.metersphere.service.CheckPermissionService;
@@ -229,9 +228,9 @@ public String run(@RequestBody TestplanRunRequest testplanRunRequest) {
 
     @PostMapping(value = "/run/batch")
     @MsAuditLog(module = OperLogModule.TRACK_TEST_PLAN, type = OperLogConstants.EXECUTE, content = "#msClass.getLogDetails(#request.ids)", msClass = TestPlanService.class)
-    public List<MsExecResponseDTO> runBatch(@RequestBody TestplanRunRequest request) {
+    public void runBatch(@RequestBody TestplanRunRequest request) {
         request.setTriggerMode(TriggerMode.BATCH.name());
-        return testPlanService.runBatch(request);
+        testPlanService.runBatch(request);
     }
 
     @GetMapping("/report/export/{planId}")

File: backend/src/main/java/io/metersphere/track/request/testplan/TestplanRunRequest.java
Patch:
@@ -1,7 +1,5 @@
 package io.metersphere.track.request.testplan;
 
-
-import io.metersphere.track.dto.TestPlanScheduleReportInfoDTO;
 import io.metersphere.track.request.testcase.QueryTestPlanRequest;
 import lombok.Getter;
 import lombok.Setter;
@@ -26,7 +24,7 @@ public class TestplanRunRequest {
     private String environmentGroupId;
     private List<String> testPlanIds;
     private Boolean isAll;
-    private TestPlanScheduleReportInfoDTO planScheduleReportInfoDTO;
+    private String  reportId;
     private QueryTestPlanRequest queryTestPlanRequest;
 }
 

File: backend/src/main/java/io/metersphere/api/exec/utils/ResultParseUtil.java
Patch:
@@ -5,8 +5,8 @@
 
 public class ResultParseUtil {
 
-    private static final String PRE_PROCESS_SCRIPT = "PRE_PROCESSOR_ENV_";
-    private static final String POST_PROCESS_SCRIPT = "POST_PROCESSOR_ENV_";
+    public static final String PRE_PROCESS_SCRIPT = "PRE_PROCESSOR_ENV_";
+    public static final String POST_PROCESS_SCRIPT = "POST_PROCESSOR_ENV_";
 
     public static boolean isNotAutoGenerateSampler(RequestResult result) {
         if (StringUtils.equals(result.getMethod(), "Request") && StringUtils.startsWithAny(result.getName(), PRE_PROCESS_SCRIPT, POST_PROCESS_SCRIPT)) {

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -172,6 +172,9 @@ public void stopEngineHandleVum(LoadTestReportWithBLOBs report, Engine engine) {
         QuotaService quotaService = CommonBeanFactory.getBean(QuotaService.class);
         String projectId = report.getProjectId();
         Project project = projectMapper.selectByPrimaryKey(projectId);
+        if (project == null || StringUtils.isBlank(project.getWorkspaceId())) {
+            MSException.throwException("project is null or workspace_id of project is null. project id: " + projectId);
+        }
         RLock lock = redissonClient.getLock(project.getWorkspaceId());
         if (quotaService != null) {
             try {

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -540,6 +540,9 @@ private void checkLoadQuota(LoadTestReportWithBLOBs testReport, Engine engine) {
             quotaService.checkLoadTestQuota(checkRequest, false);
             String projectId = testReport.getProjectId();
             Project project = projectMapper.selectByPrimaryKey(projectId);
+            if (project == null || StringUtils.isBlank(project.getWorkspaceId())) {
+                MSException.throwException("project is null or workspace_id of project is null. project id: " + projectId);
+            }
             RLock lock = redissonClient.getLock(project.getWorkspaceId());
             try {
                 lock.lock();

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -539,7 +539,8 @@ private void checkLoadQuota(LoadTestReportWithBLOBs testReport, Engine engine) {
         if (quotaService != null) {
             quotaService.checkLoadTestQuota(checkRequest, false);
             String projectId = testReport.getProjectId();
-            RLock lock = redissonClient.getLock(projectId);
+            Project project = projectMapper.selectByPrimaryKey(projectId);
+            RLock lock = redissonClient.getLock(project.getWorkspaceId());
             try {
                 lock.lock();
                 BigDecimal toUsed = quotaService.checkVumUsed(checkRequest, projectId);

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -348,7 +348,7 @@ private void convertTCPSampler(MsTCPSampler msTCPSampler, TCPSampler tcpSampler)
         msTCPSampler.setName(tcpSampler.getName());
         msTCPSampler.setType("TCPSampler");
         msTCPSampler.setServer(tcpSampler.getServer());
-        msTCPSampler.setPort(tcpSampler.getPort() + "");
+        msTCPSampler.setPort(tcpSampler.getPropertyAsString(TCPSampler.PORT));
         msTCPSampler.setCtimeout(tcpSampler.getConnectTimeout() + "");
         msTCPSampler.setReUseConnection(tcpSampler.getProperty(TCPSampler.RE_USE_CONNECTION).getBooleanValue());
         msTCPSampler.setNodelay(tcpSampler.getProperty(TCPSampler.NODELAY).getBooleanValue());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanExecutionQueueProvider.java
Patch:
@@ -7,7 +7,7 @@
 public class ExtTestPlanExecutionQueueProvider {
     public String insertListSql(List<TestPlanExecutionQueue> list) {
         StringBuffer sqlList = new StringBuffer();
-        sqlList.append("insert into test_plan_execution_queue (id,report_id, run_mode, create_time) values ");
+        sqlList.append("insert into test_plan_execution_queue (id,report_id, run_mode, create_time, test_plan_id) values ");
         for (int i = 0; i < list.size(); i++) {
             TestPlanExecutionQueue result = list.get(i);
             sqlList.append(" (")
@@ -19,6 +19,8 @@ public String insertListSql(List<TestPlanExecutionQueue> list) {
                     .append(result.getRunMode())
                     .append("','")
                     .append(result.getCreateTime())
+                    .append("','")
+                    .append(result.getTestPlanId())
                     .append("'")
                     .append(")");
             if (i < list.size() - 1) {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -169,15 +169,15 @@ public static void dataFormatting(JSONArray hashTree, StepTreeDTO dto, String id
                 StepTreeDTO children = new StepTreeDTO(element.getString("name"), resourceId, element.getString("type"), resourceId, element.getIntValue("index"));
                 if (StringUtils.isNotBlank(children.getType()) && children.getType().equals("MsUiCommand")) {
                     children.setResourceId(resourceId);
-                    children.setLabel(element.getString("command"));
+                    children.setLabel(element.getString("name"));
+                    children.setCmdType(element.getString("commandType"));
                 } else if (StringUtils.isNotEmpty(dto.getAllIndex())) {
                     children.setAllIndex(dto.getAllIndex() + "_" + (children.getIndex() == 0 ? (i + 1) : children.getIndex()));
                     children.setResourceId(resourceId + "_" + children.getAllIndex());
                 } else {
                     children.setAllIndex("" + (children.getIndex() == 0 ? (i + 1) : children.getIndex()));
                     children.setResourceId(resourceId + "_" + children.getAllIndex());
                 }
-                children.setCmdType(element.getString("commandType"));
                 dto.getChildren().add(children);
                 if (element.containsKey("hashTree") && !requests.contains(children.getType())) {
                     JSONArray elementJSONArray = element.getJSONArray("hashTree");

File: backend/src/main/java/io/metersphere/service/TestResourcePoolService.java
Patch:
@@ -219,7 +219,7 @@ public List<TestResourcePoolDTO> listValidResourcePools() {
             }
             try {
                 validateTestResourcePool(pool);
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 LogUtil.error(e.getMessage(), e);
                 pool.setStatus(INVALID.name());
                 pool.setUpdateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -920,7 +920,9 @@ private void deleteReportBatch(List<String> reportIds) {
                 sqlSession.flushStatements();
             }
         } finally {
-            SqlSessionUtils.closeSqlSession(sqlSession, sqlSessionFactory);
+            if (sqlSession != null && sqlSessionFactory != null) {
+                SqlSessionUtils.closeSqlSession(sqlSession, sqlSessionFactory);
+            }
         }
 
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -483,7 +483,7 @@ private void handleArrayItemProperties(JsonSchemaItem item, Property value, Hash
     private void handleBaseProperties(JsonSchemaItem item, Property value) {
         if (value instanceof StringProperty || value instanceof DateProperty || value instanceof DateTimeProperty ) {
             item.setType("string");
-        } else if (value instanceof IntegerProperty) {
+        } else if (value instanceof IntegerProperty || value instanceof BaseIntegerProperty) {
             item.setType("integer");
         } else if (value instanceof BooleanProperty) {
             item.setType("boolean");

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -294,11 +294,10 @@ public String countInterfaceCoverage(@PathVariable String projectId) {
          * 接口覆盖率
          * 复制的接口定义/复制或引用的单接口用例/ 添加的自定义请求 url 路径与现有的接口定义一致的请求
          */
-        List<ApiScenarioWithBLOBs> allScenarioInfoList = apiAutomationService.selectIdAndUseUrlByProjectId(projectId);
+        List<String> allScenarioIdList = apiAutomationService.selectIdsByProjectId(projectId);
         List<ApiDefinition> allEffectiveApiIdList = apiDefinitionService.selectEffectiveIdByProjectId(projectId);
-//        List<ApiTestCase> allEffectiveApiCaseList = apiTestCaseService.selectEffectiveTestCaseByProjectId(projectId);
         try {
-            float intetfaceCoverageRageNumber = apiAutomationService.countInterfaceCoverage(allScenarioInfoList, allEffectiveApiIdList);
+            float intetfaceCoverageRageNumber = apiAutomationService.countInterfaceCoverage(allScenarioIdList, allEffectiveApiIdList);
             DecimalFormat df = new DecimalFormat("0.0");
             returnStr = df.format(intetfaceCoverageRageNumber) + "%";
         }catch (Exception e){

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiScenario implements Serializable {

File: backend/src/main/java/io/metersphere/base/domain/ApiScenarioWithBLOBs.java
Patch:
@@ -13,8 +13,6 @@ public class ApiScenarioWithBLOBs extends ApiScenario implements Serializable {
 
     private String description;
 
-    private String useUrl;
-
     private String environmentJson;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -137,7 +137,6 @@ private void initOnceOperate(RunInterface initFuc, final String key) {
     }
 
     private void initOnceOperate() {
-        initOnceOperate(apiAutomationService::checkApiScenarioUseUrl, "init.scenario.url");
         initOnceOperate(apiAutomationService::checkApiScenarioReferenceId, "init.scenario.referenceId");
         initOnceOperate(apiAutomationService::initExecuteTimes, "init.scenario.executeTimes");
         initOnceOperate(issuesService::syncThirdPartyIssues, "init.issue");

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -151,7 +151,7 @@ private void runNode(JmeterRunRequestDTO request, List<TestResource> resources)
         }
     }
 
-    private void send(JmeterRunRequestDTO request, List<TestResource> resources) {
+    private synchronized void send(JmeterRunRequestDTO request, List<TestResource> resources) {
         try {
             if (StringUtils.isNotEmpty(request.getPoolId()) && CollectionUtils.isEmpty(resources)) {
                 resources = GenerateHashTreeUtil.setPoolResource(request.getPoolId());

File: backend/src/main/java/io/metersphere/api/dto/ApiScenarioReportBaseInfoDTO.java
Patch:
@@ -17,4 +17,5 @@ public class ApiScenarioReportBaseInfoDTO {
     private String rspCode;
     private long rspTime;
     private String uiImg;
+    private Boolean isNotStep;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -99,7 +99,8 @@ private ApiScenarioReportResultWithBLOBs newUiScenarioReportResult(String report
         RequestResult result = JSONObject.parseObject(value.toJSONString(), RequestResult.class);
         ApiScenarioReportBaseInfoDTO baseInfo = getBaseInfo(result);
         baseInfo.setRspTime(result.getEndTime() - result.getStartTime());
-        baseInfo.setUiImg(result.getUrl());
+        baseInfo.setIsNotStep(value.getBooleanValue("isNotStep"));
+        baseInfo.setUiImg(value.getString("uiImg"));
         report.setBaseInfo(JSONObject.toJSONString(baseInfo));
         report.setContent(value.toJSONString().getBytes(StandardCharsets.UTF_8));
         return report;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -39,4 +39,6 @@ public interface ExtProjectMapper {
     void setDefaultMessageTask(@Param("projectId") String projectId);
 
     List<ProjectDTO> queryListByIds(@Param("ids") List<String> ids);
+
+    void updateUseDefaultCaseTemplateProject(@Param("originId") String originId,@Param("templateId") String templateId,@Param("projectId") String projectId);
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsScenarioParser.java
Patch:
@@ -61,7 +61,7 @@ protected ApiScenarioWithBLOBs parsePluginFormat(JSONObject testObject, ApiTestI
     }
 
     private ScenarioImport parseMsFormat(String testStr, ApiTestImportRequest importRequest) {
-        ScenarioImport scenarioImport = JSON.parseObject(testStr, ScenarioImport.class);
+        ScenarioImport scenarioImport = JSON.parseObject(testStr, ScenarioImport.class,Feature.DisableSpecialKeyDetect);
         List<ApiScenarioWithBLOBs> data = scenarioImport.getData();
 
         Set<String> moduleIdSet = scenarioImport.getData().stream()

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -72,7 +72,7 @@ protected List<ApiDefinitionWithBLOBs> parsePluginFormat(JSONObject testObject,
     }
 
     private ApiDefinitionImport parseMsFormat(String testStr, ApiTestImportRequest importRequest) {
-        ApiDefinitionImport apiDefinitionImport = JSON.parseObject(testStr, ApiDefinitionImport.class);
+        ApiDefinitionImport apiDefinitionImport = JSON.parseObject(testStr, ApiDefinitionImport.class,Feature.DisableSpecialKeyDetect);
 
         Map<String, List<ApiTestCaseWithBLOBs>> caseMap = new HashMap<>();
         if (apiDefinitionImport.getCases() != null) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -216,7 +217,7 @@ private boolean setRefScenario(List<MsTestElement> hashTree) {
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             ApiScenarioWithBLOBs scenario = apiAutomationService.selectByPrimaryKey(this.getId());
             if (scenario != null && StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
-                JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
+                JSONObject element = JSON.parseObject(scenario.getScenarioDefinition(), Feature.DisableSpecialKeyDetect);
                 // 历史数据处理
                 ElementUtil.dataFormatting(element.getJSONArray("hashTree"));
                 this.setName(scenario.getName());
@@ -260,7 +261,7 @@ private void setNewConfig(Map<String, EnvironmentConfig> envConfig, ParameterCon
                 if (StringUtils.equals(environmentType, EnvironmentType.GROUP.name())) {
                     this.environmentMap = environmentGroupProjectService.getEnvMap(environmentGroupId);
                 } else if (StringUtils.equals(environmentType, EnvironmentType.JSON.name())) {
-                    this.environmentMap = JSON.parseObject(environmentJson, Map.class);
+                    this.environmentMap = JSON.parseObject(environmentJson, Map.class,Feature.DisableSpecialKeyDetect);
                 }
             } else {
                 this.setEnvironmentEnable(false);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -182,7 +183,7 @@ private void setRefElement() {
                 if (bloBs != null) {
                     this.setName(bloBs.getName());
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsJDBCPostProcessor>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -182,7 +183,7 @@ private void setRefElement() {
                 if (bloBs != null) {
                     this.setName(bloBs.getName());
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsJDBCPreProcessor>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
@@ -118,7 +119,7 @@ private boolean setRefElement() {
                 ApiTestCaseWithBLOBs bloBs = apiTestCaseService.get(this.getId());
                 if (bloBs != null) {
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsDubboSampler>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -291,7 +292,7 @@ private boolean setRefElement() {
                 ApiTestCaseWithBLOBs bloBs = CommonBeanFactory.getBean(ApiTestCaseService.class).get(this.getId());
                 if (bloBs != null) {
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsHTTPSamplerProxy>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -242,7 +243,7 @@ private boolean setRefElement() {
                 if (bloBs != null) {
                     this.setName(bloBs.getName());
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsJDBCSampler>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -197,7 +198,7 @@ private boolean setRefElement() {
                 if (bloBs != null) {
                     this.setName(bloBs.getName());
                     this.setProjectId(bloBs.getProjectId());
-                    JSONObject element = JSON.parseObject(bloBs.getRequest());
+                    JSONObject element = JSON.parseObject(bloBs.getRequest(), Feature.DisableSpecialKeyDetect);
                     ElementUtil.dataFormatting(element);
                     proxy = mapper.readValue(element.toJSONString(), new TypeReference<MsTCPSampler>() {
                     });

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -97,7 +97,7 @@ private void parseJonBodyMock() {
             } else {
                 try {
                     if (StringUtils.isNotEmpty(this.getRaw())) {
-                        JSONObject jsonObject = JSON.parseObject(this.getRaw(), Feature.OrderedField);
+                        JSONObject jsonObject = JSON.parseObject(this.getRaw(), Feature.OrderedField,Feature.DisableSpecialKeyDetect);
                         if (!this.getRaw().contains("$ref")) {
                             jsonMockParse(jsonObject);
                         }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import io.metersphere.api.dto.definition.RunCaseRequest;
@@ -192,7 +193,7 @@ public MsExecResponseDTO debug(RunDefinitionRequest request, List<MultipartFile>
     }
 
     public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs testCaseWithBLOBs) throws Exception {
-        JSONObject elementObj = JSON.parseObject(testCaseWithBLOBs.getRequest());
+        JSONObject elementObj = JSON.parseObject(testCaseWithBLOBs.getRequest(), Feature.DisableSpecialKeyDetect);
         ElementUtil.dataFormatting(elementObj);
 
         MsTestElement element = mapper.readValue(elementObj.toJSONString(), new TypeReference<MsTestElement>() {

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioEnvService.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -177,7 +178,7 @@ private void getHashTree(List<MsTestElement> tree, ScenarioEnv env) {
                             if (apiScenario != null) {
                                 env.getProjectIds().add(apiScenario.getProjectId());
                                 String scenarioDefinition = apiScenario.getScenarioDefinition();
-                                JSONObject element1 = JSON.parseObject(scenarioDefinition);
+                                JSONObject element1 = JSON.parseObject(scenarioDefinition, Feature.DisableSpecialKeyDetect);
                                 ElementUtil.dataFormatting(element1);
                                 LinkedList<MsTestElement> hashTree1 = mapper.readValue(element1.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                                 });

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.commons.constants.DelimiterConstants;
 import io.metersphere.dto.RequestResult;
 import lombok.Data;
@@ -135,7 +136,7 @@ public void addScenario(ScenarioResult result) {
                 String itemAndScenarioName = "";
                 if (StringUtils.isNotEmpty(item.getScenario())) {
                     //第1个：当前场景， 第all_id_names个：最后一层场景
-                    List<String> all_id_names = JSON.parseObject(item.getScenario(), List.class);
+                    List<String> all_id_names = JSON.parseObject(item.getScenario(), List.class, Feature.DisableSpecialKeyDetect);
                     if (all_id_names.size() > 1) {
                         StringBuffer scenarioNames = new StringBuffer();
                         //因为要进行步骤统计，第一层级下的场景算作步骤，所以统计视角只按照第一级别场景来计算

File: backend/src/main/java/io/metersphere/api/parse/old/MsParser.java
Patch:
@@ -18,15 +18,15 @@ public class MsParser extends ApiImportAbstractParser {
     @Override
     public ApiImport parse(InputStream source, ApiTestImportRequest request) {
         String testStr = getApiTestStr(source);
-        ApiImport apiImport = JSON.parseObject(parsePluginFormat(testStr), ApiImport.class);
+        ApiImport apiImport = JSON.parseObject(parsePluginFormat(testStr), ApiImport.class,Feature.DisableSpecialKeyDetect);
         apiImport.getScenarios().forEach(scenario -> setScenarioByRequest(scenario, request));
         return apiImport;
     }
 
     @Override
     public ApiDefinitionImport parseApi(InputStream source, ApiTestImportRequest request) {
         String testStr = getApiTestStr(source);
-        ApiDefinitionImport apiImport = JSON.parseObject(testStr, ApiDefinitionImport.class);
+        ApiDefinitionImport apiImport = JSON.parseObject(testStr, ApiDefinitionImport.class,Feature.DisableSpecialKeyDetect);
         return apiImport;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReferenceIdService.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.base.domain.ApiScenarioReferenceId;
 import io.metersphere.base.domain.ApiScenarioReferenceIdExample;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
@@ -55,7 +56,7 @@ public void saveApiAndScenarioRelation(ApiScenarioWithBLOBs scenario) {
         this.deleteByScenarioId(scenario.getId());
         Map<String, ApiScenarioReferenceId> referenceIdMap = new HashMap<>();
         if (StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
-            JSONObject jsonObject = JSONObject.parseObject(scenario.getScenarioDefinition());
+            JSONObject jsonObject = JSONObject.parseObject(scenario.getScenarioDefinition(), Feature.DisableSpecialKeyDetect);
             if (!jsonObject.containsKey(MsHashTreeService.HASH_TREE)) {
                 return;
             }

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -31,7 +31,7 @@ public class APIScenarioReportController {
 
     @GetMapping("/get/{reportId}")
     public APIScenarioReportResult get(@PathVariable String reportId) {
-        return apiReportService.get(reportId);
+        return apiReportService.get(reportId,false);
     }
 
     @PostMapping("/list/{goPage}/{pageSize}")

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -126,7 +126,7 @@ public ApiScenarioReport testEnded(ResultDTO dto) {
         return scenarioReport;
     }
 
-    public APIScenarioReportResult get(String reportId) {
+    public APIScenarioReportResult get(String reportId,boolean selectReportContent) {
         ApiDefinitionExecResult result = definitionExecResultMapper.selectByPrimaryKey(reportId);
         if (result != null) {
             APIScenarioReportResult reportResult = new APIScenarioReportResult();
@@ -140,7 +140,7 @@ public APIScenarioReportResult get(String reportId) {
         APIScenarioReportResult reportResult = extApiScenarioReportMapper.get(reportId);
         if (reportResult != null) {
             if (reportResult.getReportVersion() != null && reportResult.getReportVersion() > 1) {
-                reportResult.setContent(JSON.toJSONString(apiScenarioReportStructureService.assembleReport(reportId)));
+                reportResult.setContent(JSON.toJSONString(apiScenarioReportStructureService.assembleReport(reportId,selectReportContent)));
             } else {
                 ApiScenarioReportDetail detail = apiScenarioReportDetailMapper.selectByPrimaryKey(reportId);
                 if (detail != null && reportResult != null) {

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -170,7 +170,7 @@ public APIReportResult getApiReport(@PathVariable String shareId, @PathVariable
     @GetMapping("/api/scenario/report/get/{shareId}/{reportId}")
     public APIScenarioReportResult get(@PathVariable String shareId, @PathVariable String reportId) {
         shareInfoService.validateExpired(shareId); // 测试计划，和接口都会用这个
-        return apiScenarioReportService.get(reportId);
+        return apiScenarioReportService.get(reportId,false);
     }
 
     @GetMapping("/performance/report/{shareId}/{reportId}")

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -496,7 +496,7 @@ private int getUnderwayStepsCounts(List<String> underwayIds) {
     private void calculateScenarioResultDTO(PlanReportCaseDTO item,
                                             TestPlanScenarioStepCountDTO stepCount) {
         if (StringUtils.isNotBlank(item.getReportId())) {
-            APIScenarioReportResult apiScenarioReportResult = apiScenarioReportService.get(item.getReportId());
+            APIScenarioReportResult apiScenarioReportResult = apiScenarioReportService.get(item.getReportId(),false);
             if (apiScenarioReportResult != null) {
                 String content = apiScenarioReportResult.getContent();
                 if (StringUtils.isNotBlank(content)) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1462,7 +1462,7 @@ public void buildApiResponse(List<TestPlanFailureApiDTO> cases) {
     public void buildScenarioResponse(List<TestPlanFailureScenarioDTO> cases) {
         if (!CollectionUtils.isEmpty(cases)) {
             cases.forEach((item) -> {
-                item.setResponse(apiScenarioReportService.get(item.getReportId()));
+                item.setResponse(apiScenarioReportService.get(item.getReportId(),true));
             });
         }
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -19,7 +19,6 @@
 import io.metersphere.plugin.core.MsParameter;
 import io.metersphere.plugin.core.MsTestElement;
 import io.metersphere.track.service.TestPlanApiCaseService;
-import io.metersphere.xpack.ui.impl.CommandConfig;
 import lombok.Data;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -37,7 +36,7 @@ public class ParameterConfig extends MsParameter {
     /**
      * UI 指令全局配置
      */
-    private CommandConfig commandConfig;
+    private Object commandConfig;
     /**
      * 缓存同一批请求的认证信息
      */

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.ApiScenarioReportDTO;
 import io.metersphere.api.dto.RequestResultExpandDTO;
 import io.metersphere.api.dto.StepTreeDTO;
+import io.metersphere.api.dto.definition.request.ElementUtil;
 import io.metersphere.api.service.vo.ApiDefinitionExecResultVo;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
@@ -393,7 +394,7 @@ public void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScen
         }
         // 循环步骤请求从新排序
         try {
-            if (dtoList.stream().filter(e -> e.getValue() != null).collect(Collectors.toList()).size() == dtoList.size()) {
+            if (dtoList.stream().filter(e -> e.getValue() != null && ElementUtil.requests.contains(e.getType())).collect(Collectors.toList()).size() == dtoList.size()) {
                 List<StepTreeDTO> unList = dtoList.stream().filter(e -> e.getValue() != null
                         && StringUtils.equalsIgnoreCase(e.getTotalStatus(), ExecuteResult.unexecute.name())).collect(Collectors.toList());
                 List<StepTreeDTO> list = dtoList.stream().filter(e -> e.getValue().getStartTime() != 0).collect(Collectors.toList());

File: backend/src/main/java/io/metersphere/base/domain/ApiScenarioReportResultWithBLOBs.java
Patch:
@@ -9,7 +9,9 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class ApiScenarioReportResultWithBLOBs extends ApiScenarioReportResult implements Serializable {
-    private String errorCode;
+    private byte[] content;
+
+    private String baseInfo;
 
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportResultMapper.java
Patch:
@@ -1,9 +1,9 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.base.domain.ApiScenarioReportResult;
+import io.metersphere.base.domain.ApiScenarioReportResultWithBLOBs;
 
 import java.util.List;
 
 public interface ExtApiScenarioReportResultMapper {
-    List<ApiScenarioReportResult> selectBaseInfoResultByReportId(String reportId);
+    List<ApiScenarioReportResultWithBLOBs> selectBaseInfoResultByReportId(String reportId);
 }

File: backend/src/main/java/io/metersphere/service/CustomFieldService.java
Patch:
@@ -135,7 +135,7 @@ public List<CustomFieldDao> getCustomFieldByTemplateId(String templateId) {
                 result.add(customFieldDao);
             });
         }
-        return result;
+        return result.stream().distinct().collect(Collectors.toList());
     }
 
     public List<CustomField> getFieldByIds(List<String> ids) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/ScenarioVariable.java
Patch:
@@ -53,7 +53,7 @@ public ScenarioVariable(String key, String value, String description, String typ
     }
 
     public boolean isConstantValid() {
-        if ((StringUtils.isEmpty(this.type) || StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name())) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
+        if ((StringUtils.isEmpty(this.type) || StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name())) && StringUtils.isNotEmpty(name)) {
             return true;
         }
         return false;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1282,6 +1282,9 @@ public void copyPlanCase(String sourcePlanId, String targetPlanId) {
                     planScenario.setTestPlanId(targetPlanId);
                     planScenario.setApiScenarioId(apiScenario.getApiScenarioId());
                     planScenario.setEnvironment(apiScenario.getEnvironment());
+                    if(apiScenario.getEnvironmentType()!=null){
+                        planScenario.setEnvironmentType(apiScenario.getEnvironmentType());
+                    }
                     planScenario.setCreateTime(System.currentTimeMillis());
                     planScenario.setUpdateTime(System.currentTimeMillis());
                     planScenario.setCreateUser(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -181,7 +181,9 @@ public String getReplaceImgUrl(String replaceImgUrl) {
         String baseUrl = getBaseUrl();
         String[] split = baseUrl.split("/");
         String suffix = split[split.length - 1];
-        if (!StringUtils.equalsAny(suffix, "zentao", "zentaopms", "zentaopro", "zentaobiz")) {
+        if (StringUtils.equals("biz", suffix)) {
+            suffix = baseUrl;
+        } else if (!StringUtils.equalsAny(suffix, "zentao", "zentaopms", "zentaopro", "zentaobiz")) {
             suffix = "";
         } else {
             suffix = "/" + suffix;

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -406,10 +406,10 @@ private Map<String, Set<String>> getCaseSetMap(List<IssuesDao> issues) {
             } else {
                 caseIdSet.add(i.getResourceId());
             }
-            if(map.get(i.getId())!=null){
-                map.get(i.getId()).addAll(caseIdSet);
+            if(map.get(i.getIssuesId())!=null){
+                map.get(i.getIssuesId()).addAll(caseIdSet);
             }else{
-                map.put(i.getId(),caseIdSet);
+                map.put(i.getIssuesId(),caseIdSet);
             }
         });
         return map;

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -293,8 +293,8 @@ private JsonSchemaItem parseJsonSchema(Model schema, HashSet<String> refSet) {
             ArrayModel arrayModel = (ArrayModel) schema;
             item.setType("array");
             item.setItems(new ArrayList<>());
-            JsonSchemaItem arrayItem = parseJsonSchema((Model) arrayModel.getItems(), refSet);
-            if (arrayItem != null) item.getItems().add(arrayItem);
+            JsonSchemaItem proItem = parseProperty(arrayModel.getItems(), refSet);
+            if (proItem != null) item.getItems().add(proItem);
         } else if (schema instanceof ModelImpl) {
             item.setType("object");
             ModelImpl model = (ModelImpl) schema;

File: backend/src/main/java/io/metersphere/api/dto/share/ApiDocumentInfoDTO.java
Patch:
@@ -31,7 +31,7 @@ public class ApiDocumentInfoDTO {
     private String requestBodyFormData;
     private String requestBodyStrutureData;
     private Object requestPreviewData;
-    private Object jsonSchemaBody;
+    private String jsonSchemaBody;
 
     private String responseHead;
     private String responseBody;

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -135,7 +135,7 @@ protected ApiDefinitionWithBLOBs buildApiDefinition(String id, String name, Stri
         return apiDefinition;
     }
 
-    private String formatPath(String url) {
+    public String formatPath(String url) {
         try {
             URL urlObject = new URL(url);
             String path = StringUtils.isBlank(urlObject.getPath()) ? "/" : urlObject.getPath();

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import com.alibaba.fastjson.serializer.SerializerFeature;
 import io.metersphere.api.dto.scenario.request.BodyFile;
 import io.metersphere.commons.json.JSONSchemaRunTest;
@@ -96,7 +97,7 @@ private void parseJonBodyMock() {
             } else {
                 try {
                     if (StringUtils.isNotEmpty(this.getRaw())) {
-                        JSONObject jsonObject = JSON.parseObject(this.getRaw());
+                        JSONObject jsonObject = JSON.parseObject(this.getRaw(), Feature.OrderedField);
                         if (!this.getRaw().contains("$ref")) {
                             jsonMockParse(jsonObject);
                         }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -268,7 +268,7 @@ public ApiDataCountDTO testSceneInfoCount(@PathVariable String projectId) {
 
     @GetMapping("/countApiCoverage/{projectId}")
     public String countApiCoverage(@PathVariable String projectId) {
-        String returnStr = "100%";
+        String returnStr = "0%";
         /**
          * 接口覆盖率
          * 接口有案例/被场景引用 ： 所有的接口
@@ -289,7 +289,7 @@ public String countApiCoverage(@PathVariable String projectId) {
 
     @GetMapping("/countInterfaceCoverage/{projectId}")
     public String countInterfaceCoverage(@PathVariable String projectId) {
-        String returnStr = "100%";
+        String returnStr = "0%";
         /**
          * 接口覆盖率
          * 复制的接口定义/复制或引用的单接口用例/ 添加的自定义请求 url 路径与现有的接口定义一致的请求

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1560,7 +1560,7 @@ public void deleteBatchByCondition(ApiScenarioBatchRequest request) {
      */
     public float countInterfaceCoverage(List<ApiScenarioWithBLOBs> allScenarioInfoList, List<ApiDefinition> allEffectiveApiList) {
         if (allEffectiveApiList == null || allEffectiveApiList.isEmpty()) {
-            return 100;
+            return 0;
         }
 
         Map<ApiMethodUrlDTO, List<String>> urlMap = new HashMap<>();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -93,7 +93,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 数据兼容处理
         if (config.getConfig() != null && StringUtils.isNotEmpty(this.getProjectId()) && config.getConfig().containsKey(this.getProjectId())) {
             EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-            if(environmentConfig.getDatabaseConfigs() != null){
+            if(environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())){
                 this.environmentId = environmentConfig.getApiEnvironmentid();
             }
             // 1.8 之后 当前正常数据

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -93,7 +93,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 数据兼容处理
         if (config.getConfig() != null && StringUtils.isNotEmpty(this.getProjectId()) && config.getConfig().containsKey(this.getProjectId())) {
             EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-            if(environmentConfig.getDatabaseConfigs() != null){
+            if(environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())){
                 this.environmentId = environmentConfig.getApiEnvironmentid();
             }
             // 1.8 之后 当前正常数据

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -103,7 +103,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 数据兼容处理
         if (config.getConfig() != null && StringUtils.isNotEmpty(this.getProjectId()) && config.getConfig().containsKey(this.getProjectId())) {
             EnvironmentConfig environmentConfig = config.getConfig().get(this.getProjectId());
-            if(environmentConfig.getDatabaseConfigs() != null){
+            if(environmentConfig.getDatabaseConfigs() != null && StringUtils.isNotEmpty(environmentConfig.getApiEnvironmentid())){
                 this.environmentId = environmentConfig.getApiEnvironmentid();
             }
             // 1.8 之后 当前正常数据
@@ -131,7 +131,6 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
             this.dataSource = null;
             envConfig = this.initDataSource();
         } else {
-            this.dataSource = null;
             // 取当前环境下默认的一个数据源
             if (config.isEffective(this.getProjectId())) {
                 if (config.getConfig().get(this.getProjectId()) != null) {

File: backend/src/main/java/io/metersphere/api/exec/utils/GenerateHashTreeUtil.java
Patch:
@@ -13,6 +13,7 @@
 import io.metersphere.api.service.ApiExecutionQueueService;
 import io.metersphere.api.service.RemakeReportService;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
+import io.metersphere.base.domain.TestResource;
 import io.metersphere.base.domain.TestResourcePool;
 import io.metersphere.base.mapper.TestResourcePoolMapper;
 import io.metersphere.commons.constants.ResourcePoolTypeEnum;
@@ -21,7 +22,6 @@
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.dto.JmeterRunRequestDTO;
-import io.metersphere.dto.JvmInfoDTO;
 import io.metersphere.dto.ResultDTO;
 import io.metersphere.dto.RunModeConfigDTO;
 import io.metersphere.plugin.core.MsTestElement;
@@ -128,7 +128,7 @@ public static BooleanPool isResourcePool(String id) {
         return pool;
     }
 
-    public static List<JvmInfoDTO> setPoolResource(String id) {
+    public static List<TestResource> setPoolResource(String id) {
         if (GenerateHashTreeUtil.isResourcePool(id).isPool() && !GenerateHashTreeUtil.isResourcePool(id).isK8s()) {
             ResourcePoolCalculation resourcePoolCalculation = CommonBeanFactory.getBean(ResourcePoolCalculation.class);
             return resourcePoolCalculation.getPools(id);

File: backend/src/main/java/io/metersphere/api/service/ApiExecutionQueueService.java
Patch:
@@ -241,6 +241,7 @@ public void testPlanReportTestEnded(String testPlanReportId) {
     }
 
     public void queueNext(ResultDTO dto) {
+        LoggerUtil.info("开始处理队列：" + dto.getReportId() + "QID：" + dto.getQueueId());
         if (StringUtils.equals(dto.getRunType(), RunModeConstants.PARALLEL.toString())) {
             ApiExecutionQueueDetailExample example = new ApiExecutionQueueDetailExample();
             example.createCriteria().andQueueIdEqualTo(dto.getQueueId()).andTestIdEqualTo(dto.getTestId());
@@ -292,6 +293,7 @@ public void queueNext(ResultDTO dto) {
             example.createCriteria().andQueueIdEqualTo(dto.getQueueId()).andTestIdEqualTo(dto.getTestId());
             executionQueueDetailMapper.deleteByExample(example);
         }
+        LoggerUtil.info("处理队列结束：" + dto.getReportId() + "QID：" + dto.getQueueId());
     }
 
     public void timeOut() {

File: backend/src/main/java/io/metersphere/track/issue/client/BaseClient.java
Patch:
@@ -45,6 +45,7 @@ protected  HttpHeaders getBasicHttpHeaders(String userName, String passWd) {
         String authKey = EncryptUtils.base64Encoding(userName + ":" + passWd);
         HttpHeaders headers = new HttpHeaders();
         headers.add("Authorization", "Basic " + authKey);
+        headers.add("Accept", "application/json");
         return headers;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -101,6 +101,9 @@ public static Map<String, EnvironmentConfig> getEnvironmentConfig(String environ
     public static void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, ParameterConfig config, String shareMode) {
         if (CollectionUtils.isNotEmpty(variables)) {
             List<ScenarioVariable> list = variables.stream().filter(ScenarioVariable::isCSVValid).collect(Collectors.toList());
+            if (CollectionUtils.isEmpty(list) && CollectionUtils.isNotEmpty(config.getTransferVariables())) {
+                list = config.getTransferVariables().stream().filter(ScenarioVariable::isCSVValid).collect(Collectors.toList());
+            }
             if (CollectionUtils.isNotEmpty(list)) {
                 list.forEach(item -> {
                     CSVDataSet csvDataSet = new CSVDataSet();

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -320,6 +320,7 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
             map = environmentGroupProjectService.getEnvMap(environmentGroupId);
         }
         ParameterConfig config = new ParameterConfig();
+        config.setScenarioId(request.getScenarioId());
         if (map != null) {
             apiScenarioEnvService.setEnvConfig(map, config);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -349,6 +349,7 @@ public void margeReport(String reportId, String runMode) {
             execResultExample.createCriteria().andIntegratedReportIdEqualTo(reportId).andStatusEqualTo("Error");
             long size = definitionExecResultMapper.countByExample(execResultExample);
             result.setStatus(size > 0 ? ScenarioStatus.Error.name() : ScenarioStatus.Success.name());
+            result.setEndTime(System.currentTimeMillis());
             definitionExecResultMapper.updateByPrimaryKeySelective(result);
         } else {
             ApiScenarioReport report = apiScenarioReportMapper.selectByPrimaryKey(reportId);
@@ -385,9 +386,9 @@ public ApiScenarioReport updateScenario(List<ApiScenarioReportResult> requestRes
             }
 
             long successSize = requestResults.stream().filter(requestResult -> StringUtils.equalsIgnoreCase(requestResult.getStatus(), ScenarioStatus.Success.name())).count();
-            if(requestResults.size() == 0){
+            if (requestResults.size() == 0) {
                 scenario.setPassRate("0%");
-            }else {
+            } else {
                 scenario.setPassRate(new DecimalFormat("0%").format((float) successSize / requestResults.size()));
             }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JmeterDefinitionParser.java
Patch:
@@ -723,7 +723,7 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
                     if (CollectionUtils.isNotEmpty(headers)) {
                         for (KeyValue header : headers) {
                             if (StringUtils.equals(header.getName(), "Content-Type") && StringUtils.equals(header.getValue(), "application/json")) {
-                                samplerProxy.getBody().setType(Body.JSON);
+                                samplerProxy.getBody().setType(Body.JSON_STR);
                                 jsonType = true;
                                 break;
                             }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -204,15 +204,15 @@ private void parseParameters(Operation operation, MsHTTPSamplerProxy request) {
 
     private String getBodyType(Operation operation) {
         if (CollectionUtils.isEmpty(operation.getConsumes())) {
-            return Body.JSON;
+            return Body.JSON_STR;
         }
         String contentType = operation.getConsumes().get(0);
         return getBodyType(contentType);
     }
 
     private String getResponseBodyType(Operation operation) {
         if (CollectionUtils.isEmpty(operation.getProduces())) {
-            return Body.JSON;
+            return Body.JSON_STR;
         }
         String contentType = operation.getProduces().get(0);
         return getBodyType(contentType);
@@ -355,7 +355,7 @@ private void parseResponseHeader(Response response, List<KeyValue> msHeaders) {
 
     private void parseRequestBodyParameters(Parameter parameter, Body body) {
         BodyParameter bodyParameter = (BodyParameter) parameter;
-        if (body.getType().equals(Body.JSON)) {
+        if (body.getType().equals(Body.JSON_STR)) {
             body.setJsonSchema(parseSchema2JsonSchema(bodyParameter.getSchema()));
             body.setFormat("JSON-SCHEMA");
         } else {

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -75,7 +75,7 @@ protected String getBodyType(String contentType) {
                 bodyType = Body.FORM_DATA;
                 break;
             case "application/json":
-                bodyType = Body.JSON;
+                bodyType = Body.JSON_STR;
                 break;
             case "application/xml":
                 bodyType = Body.XML;
@@ -96,7 +96,7 @@ protected void addBodyHeader(MsHTTPSamplerProxy request) {
                 case Body.WWW_FROM:
                     contentType = "application/x-www-form-urlencoded";
                     break;
-                case Body.JSON:
+                case Body.JSON_STR:
                     contentType = "application/json";
                     break;
                 case Body.XML:

File: backend/src/main/java/io/metersphere/api/parse/HarScenarioAbstractParser.java
Patch:
@@ -200,7 +200,7 @@ private void parseRawBody(Body body, JSONObject postmanBody, String bodyMode) {
                 String bodyType = "";
                 switch (raw.getString("language")) {
                     case "json":
-                        bodyType = Body.JSON;
+                        bodyType = Body.JSON_STR;
                         break;
                     case "xml":
                         bodyType = Body.XML;

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -155,7 +155,7 @@ private void parseRawBody(Body body, JSONObject postmanBody, String bodyMode) {
                 String bodyType = "";
                 switch (raw.getString("language")) {
                     case "json":
-                        bodyType = Body.JSON;
+                        bodyType = Body.JSON_STR;
                         break;
                     case "xml":
                         bodyType = Body.XML;

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -131,7 +131,7 @@ private MsScenario createScenario(Scenario oldScenario, String projectId) {
                     }
                     if ("json".equals(request1.getBody().getFormat())) {
                         if ("Raw".equals(request1.getBody().getType())) {
-                            request1.getBody().setType(Body.JSON);
+                            request1.getBody().setType(Body.JSON_STR);
                             if (CollectionUtils.isEmpty(request1.getHeaders())) {
                                 List<KeyValue> headers = new LinkedList<>();
                                 headers.add(new KeyValue("Content-Type", "application/json"));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -83,6 +83,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 非导出操作，且不是启用状态则跳过执行
         if (!config.isOperating() && !this.isEnable()) {
             return;
+        }else if(config.isOperating() && StringUtils.isNotEmpty(config.getOperatingSampleTestName())){
+            this.setName(config.getOperatingSampleTestName());
         }
         if (this.getReferenced() != null && "Deleted".equals(this.getReferenced())) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -134,6 +134,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 非导出操作，且不是启用状态则跳过执行Ms
         if (!config.isOperating() && !this.isEnable()) {
             return;
+        }else if(config.isOperating() && StringUtils.isNotEmpty(config.getOperatingSampleTestName())){
+            this.setName(config.getOperatingSampleTestName());
         }
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             boolean ref = this.setRefElement();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -83,6 +83,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 非导出操作，且不是启用状态则跳过执行
         if (config != null && !config.isOperating() && !this.isEnable()) {
             return;
+        }else if(config.isOperating() && StringUtils.isNotEmpty(config.getOperatingSampleTestName())){
+            this.setName(config.getOperatingSampleTestName());
         }
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             boolean ref = this.setRefElement();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -121,6 +121,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         // 非导出操作，且不是启用状态则跳过执行
         if (!config.isOperating() && !this.isEnable()) {
             return;
+        }else if(config.isOperating() && StringUtils.isNotEmpty(config.getOperatingSampleTestName())){
+            this.setName(config.getOperatingSampleTestName());
         }
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             boolean ref = this.setRefElement();

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -615,6 +615,7 @@ public JmxInfoDTO getJmxInfoDTO(RunDefinitionRequest runRequest, List<MultipartF
         ParameterConfig config = new ParameterConfig();
         config.setProjectId(runRequest.getProjectId());
         config.setOperating(true);
+        config.setOperatingSampleTestName(runRequest.getName());
 
         Map<String, EnvironmentConfig> envConfig = new HashMap<>();
         Map<String, String> map = runRequest.getEnvironmentMap();

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -413,8 +413,6 @@ private String ms2ZentaoDescription(String msDescription) {
     }
 
     private String zentao2MsDescription(String ztDescription) {
-        StringBuilder resultStr = new StringBuilder();
-
         String imgRegex ="<img src.*?/>";
         Pattern pattern = Pattern.compile(imgRegex);
         Matcher matcher = pattern.matcher(ztDescription);

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -160,7 +160,7 @@ public JSONArray getBugsByProjectId(String projectId, int pageNum, int pageSize)
         return JSONObject.parseObject(response.getBody()).getJSONObject("data").getJSONArray("bugs");
     }
 
-    protected String getBaseUrl() {
+    public String getBaseUrl() {
         if (ENDPOINT.endsWith("/")) {
             return ENDPOINT.substring(0, ENDPOINT.length() - 1);
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -2065,7 +2065,7 @@ private static long getNextTriggerTime(String cron) {
         CronTrigger trigger = TriggerBuilder.newTrigger().withIdentity("Caclulate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
         Date time0 = trigger.getStartTime();
         Date time1 = trigger.getFireTimeAfter(time0);
-        return time1.getTime();
+        return time1 == null ? 0 : time1.getTime();
     }
 
     public ScheduleDTO updateTestPlanBySchedule(ScheduleInfoRequest request) {

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -97,7 +97,7 @@ public List<Schedule> getScheduleByResourceIds(List<String>resourceIds, String g
         if (schedules.size() > 0) {
             return schedules;
         }
-        return null;
+        return new ArrayList<>();
     }
 
     public int deleteByResourceId(String resourceId, String group) {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -568,7 +568,7 @@ private void removeUiResultIfNotStep(List<ApiScenarioReportResult> reportResults
                 ApiScenarioReportResult item = iterator.next();
                 String result = new String(item.getContent(), StandardCharsets.UTF_8);
                 if (StringUtils.isNotBlank(result)) {
-                    Boolean isNoStep = JSONObject.parseObject(result).getBoolean("isNoStep");
+                    Boolean isNoStep = JSONObject.parseObject(result).getBoolean("isNotStep");
                     if (BooleanUtils.isTrue(isNoStep)) {
                         iterator.remove();
                     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -429,6 +429,9 @@ public List<TestPlanDTOWithMetric> listTestPlan(QueryTestPlanRequest request) {
             request.setProjectId(request.getProjectId());
         }
         List<TestPlanDTOWithMetric> testPlans = extTestPlanMapper.list(request);
+        if(testPlans.size()==0){
+            return new ArrayList<>();
+        }
         Set<String> ids = testPlans.stream().map(TestPlan::getId).collect(Collectors.toSet());
         Map<String, ParamsDTO> planTestCaseCountMap = extTestPlanMapper.testPlanTestCaseCount(ids);
         Map<String, ParamsDTO> planApiCaseMap = extTestPlanMapper.testPlanApiCaseCount(ids);

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -393,6 +393,9 @@ private Map<String, User> getUserMap(List<IssuesDao> issues) {
     private Map<String, Set<String>> getCaseSetMap(List<IssuesDao> issues) {
         List<String> ids = issues.stream().map(Issues::getId).collect(Collectors.toList());
         Map<String,Set<String>>map = new HashMap<>();
+        if(ids.size()==0){
+            return  map;
+        }
         TestCaseIssuesExample example = new TestCaseIssuesExample();
         example.createCriteria().andIssuesIdIn(ids);
         List<TestCaseIssues> testCaseIssues = testCaseIssuesMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/track/issue/client/TapdClient.java
Patch:
@@ -75,7 +75,7 @@ public TapdGetIssueResponse getIssueForPageByIds(String projectId, int pageNum,
     }
 
     public JSONArray getDemands(String projectId) {
-        String url = getBaseUrl() + "/stories?workspace_id={1}";
+        String url = getBaseUrl() + "/stories?workspace_id={1}&limit=200";
         ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.GET, getAuthHttpEntity(), String.class, projectId);
         return JSONArray.parseObject(response.getBody()).getJSONArray("data");
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -31,4 +31,6 @@ public interface ExtIssuesMapper {
     List<IssuesDao> getPlanIssues(@Param("request") IssuesRequest issueRequest);
 
     int deleteIssues(@Param("issuesId") String issuesId, @Param("resourceId") String resourceId);
+
+    IssuesDao selectByPrimaryKey(String id);
 }

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -565,8 +565,7 @@ public Project getProjectById(String id) {
     }
 
 
-    public boolean isThirdPartTemplate(String projectId) {
-        Project project = getProjectById(projectId);
+    public boolean isThirdPartTemplate(Project project) {
         if (project.getThirdPartTemplate() != null && project.getThirdPartTemplate()
                 && project.getPlatform().equals(IssuesManagePlatform.Jira.name())) {
             return true;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -146,7 +146,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             // 这里加入自定义变量解决ForEach循环控制器取值问题，循环控制器无法从vars中取值
             scenarioTree.add(valueSupposeMock);
             if (this.variableEnable != null && this.variableEnable) {
-                scenarioTree.add(ElementUtil.argumentsToProcessor(valueSupposeMock));
+                scenarioTree.add(ElementUtil.argumentsToUserParameters(valueSupposeMock));
             }
         }
         if (this.variableEnable == null || this.variableEnable) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -2075,6 +2075,9 @@ public void checkAutomation(JSONObject object) {
             Set<String> userRelatedProjectIds = checkPermissionService.getUserRelatedProjectIds();
             if(!userRelatedProjectIds.contains(bloBs.getProjectId())){
                 object.put("referenced", "Copy");
+            }else{
+                object.put("id", bloBs.getId());
+                object.put("resourceId", bloBs.getId());
             }
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1299,6 +1299,9 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
             if (StringUtils.isBlank(item.getId())) {
                 item.setId(UUID.randomUUID().toString());
             }
+            item.setCreateUser(SessionUtils.getUserId());
+            item.setUserId(SessionUtils.getUserId());
+            item.setPrincipal(SessionUtils.getUserId());
             // 导入之后刷新latest
             importCreate(item, batchMapper, extApiScenarioMapper, request,apiTestCaseMapper,apiDefinitionMapper);
             if (i % 300 == 0) {

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -51,6 +51,7 @@ public static void addToReportCommonStatusResultList(Map<String, TestCaseReportS
         addToReportStatusResultList(resultMap, statusResult, "success");
         addToReportStatusResultList(resultMap, statusResult, "Success");
         addToReportStatusResultList(resultMap, statusResult, "SUCCESS");
+        addToReportStatusResultList(resultMap, statusResult, "STOP");
         addToReportStatusResultList(resultMap, statusResult, TestPlanTestCaseStatus.Prepare.name());
         addToReportStatusResultList(resultMap, statusResult, ExecuteResult.errorReportResult.name());
     }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseParallelExecuteService.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.constants.RunModeConstants;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.dto.RunModeConfigDTO;
+import org.apache.commons.collections4.MapUtils;
 import org.apache.jorphan.collections.HashTree;
 import org.springframework.stereotype.Service;
 
@@ -33,8 +34,8 @@ public void parallel(Map<String, ApiDefinitionExecResult> executeQueue, RunModeC
             runRequest.setReportType(executionQueue.getReportType());
             runRequest.setRunType(RunModeConstants.PARALLEL.toString());
             runRequest.setQueueId(executionQueue.getId());
-            if (executionQueue.getQueue() != null) {
-                runRequest.setPlatformUrl(executionQueue.getQueue().getId());
+            if (MapUtils.isNotEmpty(executionQueue.getDetailMap())) {
+                runRequest.setPlatformUrl(executionQueue.getDetailMap().get(result.getId()));
             }
             if (!GenerateHashTreeUtil.isResourcePool(config.getResourcePoolId()).isPool()) {
                 hashTree = apiScenarioSerialService.generateHashTree(testId, config.getEnvMap(), runRequest);

File: backend/src/main/java/io/metersphere/api/dto/QueryAPIReportRequest.java
Patch:
@@ -17,7 +17,8 @@ public class QueryAPIReportRequest {
     private String workspaceId;
     private String userId;
     private String reportType;
-    private boolean recent = false;
+    private boolean recent;
+    private Boolean isUi = false;
     private List<OrderRequest> orders;
     private Map<String, List<String>> filters;
     private Map<String, Object> combine;

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -150,9 +150,8 @@ public static void checkCase(int i,JSONObject object, String versionId, String p
         if (bloBs == null) {
             ApiDefinition apiDefinition = getApiDefinitionResult(object,apiDefinitionService,definitionMap);
             if(apiDefinition!=null){
-                if(MapUtils.isNotEmpty(definitionMap)){
+                if(MapUtils.isNotEmpty(definitionMap)||definitionMap.size()==0){
                     structureCaseByJson(i,object,testCaseService, apiDefinition,apiTestCaseMapper);
-
                 }
             }else{
                 ApiDefinitionResult apiDefinitionResult = structureApiDefinitionByJson(i,apiDefinitionService, object, versionId, projectId, apiDefinitionMapper,definitionMap);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -39,9 +39,7 @@ public void save(String reportId, List<RequestResult> queue) {
                 if (StringUtils.isNotEmpty(item.getName()) && item.getName().startsWith("Transaction=") && CollectionUtils.isEmpty(item.getSubRequestResults())) {
                     LoggerUtil.debug("合并事物请求暂不入库");
                 } else {
-                    if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {
-                        apiScenarioReportResultMapper.insert(this.newApiScenarioReportResult(reportId, item));
-                    }
+                    apiScenarioReportResultMapper.insert(this.newApiScenarioReportResult(reportId, item));
                 }
             });
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1970,6 +1970,7 @@ public List<String> getProjects(RunScenarioRequest request) {
     private void setReferenced(JSONArray hashTree,String versionId,String projectId, ApiTestCaseMapper apiTestCaseMapper,ApiDefinitionMapper apiDefinitionMapper,boolean isAdd) {
         // 将引用转成复制
         if (CollectionUtils.isNotEmpty(hashTree)) {
+            Map<String,ApiDefinition>definitionMap = new HashMap<>();
             for (int i = 0; i < hashTree.size(); i++) {
                 JSONObject object = (JSONObject) hashTree.get(i);
                 String referenced = object.getString("referenced");
@@ -1978,7 +1979,7 @@ private void setReferenced(JSONArray hashTree,String versionId,String projectId,
                     String refType = object.getString("refType");
                     if (StringUtils.isNotEmpty(refType)) {
                         if (refType.equals("CASE")&&isAdd) {
-                            ApiScenarioImportUtil.checkCase(i,object,versionId,projectId,apiTestCaseMapper,apiDefinitionMapper);
+                            ApiScenarioImportUtil.checkCase(i,object,versionId,projectId,apiTestCaseMapper,apiDefinitionMapper,definitionMap);
                         } else {
                             checkAutomation(object);
                             object.put("projectId", projectId);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -2032,7 +2032,7 @@ public ApiDefinition getApiDefinition(ApiDefinitionExample apiDefinitionExample)
 
     public void initModulePathAndId(String projectId, ApiDefinitionWithBLOBs test) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("未规划接口");
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("未规划接口").andLevelEqualTo(1);
         List<ApiModule> modules = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             test.setModuleId(modules.get(0).getId());

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -456,7 +456,8 @@ private String startEngine(LoadTestWithBLOBs loadTest, RunTestPlanRequest reques
             // 保存测试里的配置
             testReport.setTestResourcePoolId(loadTest.getTestResourcePoolId());
             testReport.setLoadConfiguration(loadTest.getLoadConfiguration());
-
+            // 启动插入 report
+            testReport.setAdvancedConfiguration(loadTest.getAdvancedConfiguration());
             String testPlanLoadId = request.getTestPlanLoadId();
             if (StringUtils.isNotBlank(testPlanLoadId)) {
                 // 设置本次报告中的压力配置信息
@@ -471,8 +472,6 @@ private String startEngine(LoadTestWithBLOBs loadTest, RunTestPlanRequest reques
                     testReport.setTestResourcePoolId(testPlanLoadCase.getTestResourcePoolId());
                 }
             }
-            // 启动插入 report
-            testReport.setAdvancedConfiguration(loadTest.getAdvancedConfiguration());
             testReport.setStatus(PerformanceTestStatus.Starting.name());
             testReport.setProjectId(loadTest.getProjectId());
             testReport.setTestName(loadTest.getName());

File: backend/src/main/java/io/metersphere/api/exec/queue/ExecThreadPoolExecutor.java
Patch:
@@ -104,7 +104,7 @@ public void outApiThreadPoolExecutorLogger() {
 
     public void setCorePoolSize(int maximumPoolSize) {
         try {
-            int corePoolSize = maximumPoolSize > 1000 ? 1000 : maximumPoolSize;
+            int corePoolSize = maximumPoolSize > 500 ? 500 : maximumPoolSize;
             if (corePoolSize > CORE_POOL_SIZE) {
                 threadPool.setCorePoolSize(corePoolSize);
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -120,7 +120,6 @@ private void parseApiDefinition(ApiDefinitionWithBLOBs apiDefinition, ApiTestImp
         apiDefinition.setProjectId(this.projectId);
         String request = apiDefinition.getRequest();
         JSONObject requestObj = JSONObject.parseObject(request);
-//        requestObj.put("id", id);
         if(requestObj.get("projectId")!=null){
             requestObj.put("projectId", apiDefinition.getProjectId());
         }

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioSerialService.java
Patch:
@@ -182,6 +182,7 @@ public HashTree generateHashTree(String testId, Map<String, String> envMap, Jmet
             ResultDTO dto = new ResultDTO();
             BeanUtils.copyBean(dto, runRequest);
             CommonBeanFactory.getBean(ApiExecutionQueueService.class).queueNext(dto);
+            LoggerUtil.error("生成JMX执行脚本失败：", ex);
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -39,7 +39,9 @@ public void save(String reportId, List<RequestResult> queue) {
                 if (StringUtils.isNotEmpty(item.getName()) && item.getName().startsWith("Transaction=") && CollectionUtils.isEmpty(item.getSubRequestResults())) {
                     LoggerUtil.debug("合并事物请求暂不入库");
                 } else {
-                    apiScenarioReportResultMapper.insert(this.newApiScenarioReportResult(reportId, item));
+                    if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {
+                        apiScenarioReportResultMapper.insert(this.newApiScenarioReportResult(reportId, item));
+                    }
                 }
             });
         }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -270,9 +270,6 @@ private void calculateStep(List<StepTreeDTO> dtoList, AtomicLong stepTotal, Atom
     public static void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<ApiScenarioReportResult>> maps) {
         for (int index = 0; index < dtoList.size(); index++) {
             StepTreeDTO dto = dtoList.get(index);
-            if(dto.getResourceId().equals("a1db7c43-9d07-4c35-b36e-d4498a1dc78a_19")){
-                System.out.println("-----");
-            }
             dto.setIndex((index + 1));
             List<ApiScenarioReportResult> reportResults = maps.get(dto.getResourceId());
             if (CollectionUtils.isNotEmpty(reportResults)) {

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -121,6 +121,9 @@ private void parseApiDefinition(ApiDefinitionWithBLOBs apiDefinition, ApiTestImp
         String request = apiDefinition.getRequest();
         JSONObject requestObj = JSONObject.parseObject(request);
 //        requestObj.put("id", id);
+        if(requestObj.get("projectId")!=null){
+            requestObj.put("projectId", apiDefinition.getProjectId());
+        }
         apiDefinition.setRequest(JSONObject.toJSONString(requestObj));
         apiDefinition.setCreateUser(SessionUtils.getUserId());
         apiDefinition.setUserId(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/dto/QueryAPIReportRequest.java
Patch:
@@ -16,6 +16,7 @@ public class QueryAPIReportRequest {
     private String name;
     private String workspaceId;
     private String userId;
+    private String reportType;
     private boolean recent = false;
     private List<OrderRequest> orders;
     private Map<String, List<String>> filters;

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -2,5 +2,6 @@
 
 public enum ApiRunMode {
     RUN, DEBUG, DEFINITION, TEST_CASE, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS_SCENARIO_PLAN, JENKINS_PERFORMANCE_TEST, JENKINS,
-    SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST, MANUAL_PLAN
+    SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST, MANUAL_PLAN,
+    UI_SCENARIO, UI_SCENARIO_PLAN, UI_SCHEDULE_SCENARIO_PLAN, UI_JENKINS_SCENARIO_PLAN, UI_SCHEDULE_SCENARIO
 }

File: backend/src/main/java/io/metersphere/commons/constants/ReportTypeConstants.java
Patch:
@@ -4,5 +4,7 @@ public enum ReportTypeConstants {
     SCENARIO_INTEGRATED,
     SCENARIO_INDEPENDENT,
     API_INTEGRATED,
-    API_INDEPENDENT
+    API_INDEPENDENT,
+    UI_INTEGRATED,
+    UI_INDEPENDENT
 }

File: backend/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -25,6 +25,7 @@
 public class FileUtils {
     public static final String BODY_FILE_DIR = "/opt/metersphere/data/body";
     public static final String MD_IMAGE_DIR = "/opt/metersphere/data/image/markdown";
+    public static final String UI_IMAGE_DIR = "/opt/metersphere/data/image/ui/screenshots";
 
     public static byte[] listBytesToZip(Map<String, byte[]> mapReport) {
         try {

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -16,6 +16,7 @@ public class ShiroUtils {
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap) {
 
         filterChainDefinitionMap.put("/resource/md/get/**", "anon");
+        filterChainDefinitionMap.put("/resource/ui/get/**", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");

File: backend/src/main/java/io/metersphere/track/dto/TreeNodeDTO.java
Patch:
@@ -1,4 +1,5 @@
 package io.metersphere.track.dto;
+
 import lombok.Data;
 
 import java.util.List;

File: backend/src/main/java/io/metersphere/track/request/testcase/DragNodeRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.track.request.testcase;
 
-import io.metersphere.base.domain.TestCaseNode;
+import io.metersphere.base.domain.ModuleNode;
 import io.metersphere.track.dto.TestCaseNodeDTO;
 import lombok.Getter;
 import lombok.Setter;
@@ -9,7 +9,7 @@
 
 @Getter
 @Setter
-public class DragNodeRequest extends TestCaseNode {
+public class DragNodeRequest extends ModuleNode {
 
     List<String> nodeIds;
     TestCaseNodeDTO nodeTree;

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryNodeRequest.java
Patch:
@@ -3,6 +3,8 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class QueryNodeRequest {
@@ -11,4 +13,5 @@ public class QueryNodeRequest {
     private String projectId;
     private String reviewId;
 
+    private List<String> moduleIds;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -170,6 +170,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                     el.setParent(this);
                     el.setMockEnvironment(this.isMockEnvironment());
                     if (this.isEnvironmentEnable()) {
+                        newConfig.setScenarioId(config.getScenarioId());
+                        newConfig.setReportType(config.getReportType());
                         el.toHashTree(scenarioTree, el.getHashTree(), newConfig);
                     } else {
                         el.toHashTree(scenarioTree, el.getHashTree(), config);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -642,7 +642,7 @@ private String getRestParameters(String path) {
             });
         }
         try {
-            Pattern p = Pattern.compile("(\\{)([\\w-]+)(\\})");
+            Pattern p = Pattern.compile("(\\{)([\\w]+)(\\})");
             Matcher m = p.matcher(path);
             while (m.find()) {
                 String group = m.group(2);

File: backend/src/main/java/io/metersphere/api/mock/utils/MockTestDataUtil.java
Patch:
@@ -36,7 +36,7 @@ public String getTestData(MockTestDataRequest request) {
         } else if (StringUtils.equals(MockApiUtils.parseCondition(request.getCondition()), MockParamConditionEnum.LENGTH_SHOT_THAN.name())) {
             int length = Integer.parseInt(request.getValue());
             if(length > 1){
-                return RandomStringUtils.randomAlphanumeric(length);
+                return RandomStringUtils.randomAlphanumeric(length-1);
             }else {
                 return "";
             }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -401,7 +401,9 @@ private List<ApiDefinitionExecResultVo> formatApiReport(String reportId, List<St
                 if (expandDTO.getAttachInfoMap() != null && expandDTO.getAttachInfoMap().get("errorReportResult") != null) {
                     treeDTO.setErrorCode(expandDTO.getAttachInfoMap().get("errorReportResult"));
                     treeDTO.setTotalStatus("errorCode");
+                    vo.setStatus("errorReportResult");
                 } else if (StringUtils.isNotEmpty(expandDTO.getStatus())) {
+                    vo.setStatus(expandDTO.getStatus());
                     treeDTO.setTotalStatus(expandDTO.getStatus());
                 } else {
                     if (expandDTO.isSuccess()) {
@@ -426,7 +428,7 @@ public ApiScenarioReportDTO apiIntegratedReport(String reportId) {
         if (CollectionUtils.isNotEmpty(reportResults)) {
             reportDTO.setTotal(reportResults.size());
             reportDTO.setError(reportResults.stream().filter(e -> StringUtils.equalsAnyIgnoreCase(e.getStatus(), "Error")).collect(Collectors.toList()).size());
-            reportDTO.setUnExecute(reportResults.stream().filter(e -> StringUtils.equalsAnyIgnoreCase(e.getStatus(), "STOP")).collect(Collectors.toList()).size());
+            reportDTO.setUnExecute(reportResults.stream().filter(e -> StringUtils.equalsAnyIgnoreCase(e.getStatus(), "STOP","unexecute")).collect(Collectors.toList()).size());
             reportDTO.setErrorCode(reportResults.stream().filter(e -> StringUtils.equalsAnyIgnoreCase(e.getStatus(), "errorReportResult")).collect(Collectors.toList()).size());
             reportDTO.setPassAssertions(reportResults.stream().mapToLong(ApiDefinitionExecResultVo::getPassAssertions).sum());
             reportDTO.setTotalAssertions(reportResults.stream().mapToLong(ApiDefinitionExecResultVo::getTotalAssertions).sum());

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -767,7 +767,7 @@ public void openMockTcp(Project project) {
         } else {
             ProjectConfig config = projectApplicationService.getSpecificTypeValue(project.getId(), ProjectApplicationType.MOCK_TCP_PORT.name());
             Integer mockPort = config.getMockTcpPort();
-            if (mockPort == null || mockPort != 0) {
+            if (mockPort == null) {
                 MSException.throwException("Mock tcp port is not Found!");
             } else {
                 TCPPool.createTcp(mockPort);
@@ -791,7 +791,7 @@ public void closeMockTcp(Project project) {
         } else {
             ProjectConfig config = projectApplicationService.getSpecificTypeValue(project.getId(), ProjectApplicationType.MOCK_TCP_PORT.name());
             Integer mockPort = config.getMockTcpPort();
-            if (mockPort == null || mockPort != 0) {
+            if (mockPort == null) {
                 MSException.throwException("Mock tcp port is not Found!");
             } else {
                 this.closeMockTcp(mockPort);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1982,10 +1982,13 @@ private void setReferenced(JSONArray hashTree,String versionId,String projectId,
                             ApiScenarioImportUtil.checkCase(i,object,versionId,projectId,apiTestCaseMapper,apiDefinitionMapper);
                         } else {
                             checkAutomation(object);
+                            object.put("projectId", projectId);
                         }
                     }else{
                         object.put("referenced", "Copy");
                     }
+                }else{
+                    object.put("projectId", projectId);
                 }
                 JSONObject environmentMap = object.getJSONObject("environmentMap");
                 if (environmentMap != null) {

File: backend/src/main/java/io/metersphere/task/controller/TaskController.java
Patch:
@@ -20,6 +20,7 @@ public class TaskController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TaskCenterDTO>> getTasks(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody TaskCenterRequest request) {
+        request.setProjects(taskService.getOwnerProjectIds(null));
         request.setGoPage(goPage);
         request.setPageSize(pageSize);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -169,7 +169,7 @@ public APIReportResult getApiReport(@PathVariable String shareId, @PathVariable
 
     @GetMapping("/api/scenario/report/get/{shareId}/{reportId}")
     public APIScenarioReportResult get(@PathVariable String shareId, @PathVariable String reportId) {
-        shareInfoService.validate(shareId, reportId);
+        shareInfoService.validateExpired(shareId); // 测试计划，和接口都会用这个
         return apiScenarioReportService.get(reportId);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -143,6 +143,9 @@ public void setCaseEnvironment(List<ApiTestCaseDTO> apiTestCases) {
             if (environment != null) {
                 apiCase.setEnvironment(environment.getName());
             }
+            if(apiCase.getExecResult() == null && StringUtils.isNotEmpty(apiCase.getStatus()) && !StringUtils.equalsIgnoreCase(apiCase.getStatus(),"trash")){
+                apiCase.setExecResult(apiCase.getStatus());
+            }
         }
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -947,7 +947,9 @@ private JSONObject buildContent(JSONObject respOrReq) {
             } else if (bodyType.equalsIgnoreCase("RAW")) {
                 bodyInfo = new JSONObject();
                 ((JSONObject) bodyInfo).put("type", "string");
-                ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
+                if (body != null && body.get("raw") != null) {
+                    ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
+                }
             } else if (bodyType.equalsIgnoreCase("XML")) {
                 String xmlText = body.getString("raw");
                 JSONObject xmlToJson = XMLUtils.XmlToJson(xmlText);

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewApiCaseService.java
Patch:
@@ -42,7 +42,7 @@ public List<TestPlanApiCaseDTO> list(ApiTestCaseRequest request) {
         if (CollectionUtils.isEmpty(apiTestCases)) {
             return apiTestCases;
         }
-        apiTestCaseService.buildUserInfo(apiTestCases);
+        apiTestCaseService.buildUserInfo(apiTestCases, request.isSelectEnvironment());
         return apiTestCases;
     }
     public List<String> getExecResultByReviewId(String reviewId) {

File: backend/src/main/java/io/metersphere/notice/sender/SendNoticeAspect.java
Patch:
@@ -112,7 +112,7 @@ public void sendNotice(JoinPoint joinPoint, Object retValue) {
                 Object v = titleExp.getValue(context, Object.class);
                 // 查询结果如果是null或者是{}，不使用这个值
                 String jsonObject = JSON.toJSONString(v);
-                if (v != null && !StringUtils.equals("{}", jsonObject)) {
+                if (v != null && !StringUtils.equals("{}", jsonObject) && !StringUtils.equals("[]", jsonObject)) {
                     Map<String, Object> memberValues = (Map<String, Object>) value.get(invocationHandler);
                     memberValues.put("source", JSON.toJSONString(v, WriteMapNullValue));
                 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanSimpleReportDTO.java
Patch:
@@ -35,4 +35,6 @@ public class TestPlanSimpleReportDTO extends TestPlanReportContent {
     List<TestPlanLoadCaseDTO> loadFailureCases;
     List<TestPlanFailureApiDTO> errorReportCases;
     List<TestPlanFailureScenarioDTO> errorReportScenarios;
+    List<TestPlanFailureApiDTO> unExecuteCases;
+    List<TestPlanFailureScenarioDTO> unExecuteScenarios;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -130,7 +130,8 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
                 this.initDataSource();
             }
             if (this.dataSource == null) {
-                MSException.throwException("数据源为空无法执行");
+                String message = "数据源为空请选择数据源";
+                MSException.throwException(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "：" + message : message);
             }
         }
         final HashTree samplerHashTree = tree.add(jdbcPostProcessor(config));
@@ -241,7 +242,7 @@ private Arguments arguments(String name, List<KeyValue> variables) {
     private JDBCPostProcessor jdbcPostProcessor(ParameterConfig config) {
         JDBCPostProcessor jdbcPostProcessor = new JDBCPostProcessor();
         jdbcPostProcessor.setEnabled(this.isEnable());
-        jdbcPostProcessor.setName(this.getName() == null? "JDBCPostProcessor" : this.getName());
+        jdbcPostProcessor.setName(this.getName() == null ? "JDBCPostProcessor" : this.getName());
         jdbcPostProcessor.setProperty(TestElement.TEST_CLASS, JDBCPostProcessor.class.getName());
         jdbcPostProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -130,7 +130,8 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
                 this.initDataSource();
             }
             if (this.dataSource == null) {
-                MSException.throwException("数据源为空无法执行");
+                String message = "数据源为空请选择数据源";
+                MSException.throwException(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "：" + message : message);
             }
         }
         final HashTree samplerHashTree = tree.add(jdbcPreProcessor(config));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -10,7 +10,6 @@
 import io.metersphere.api.dto.definition.parse.JMeterScriptUtil;
 import io.metersphere.api.dto.definition.request.ElementUtil;
 import io.metersphere.api.dto.definition.request.ParameterConfig;
-import io.metersphere.api.dto.definition.request.assertions.MsAssertions;
 import io.metersphere.api.dto.scenario.DatabaseConfig;
 import io.metersphere.api.dto.scenario.KeyValue;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
@@ -145,7 +144,8 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
                 envConfig = this.initDataSource();
             }
             if (this.dataSource == null) {
-                MSException.throwException("数据源为空无法执行");
+                String message = "数据源为空请选择数据源";
+                MSException.throwException(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "：" + message : message);
             }
         }
         final HashTree samplerHashTree = tree.add(jdbcSampler(config));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -678,23 +678,23 @@ public static List<MsTestElement> order(List<MsTestElement> elements) {
                     if (groupMap.containsKey(ASSERTIONS)) {
                         groupMap.get(ASSERTIONS).add(item);
                     } else {
-                        groupMap.put(ASSERTIONS, new LinkedList<>() {{
+                        groupMap.put(ASSERTIONS, new LinkedList<MsTestElement>() {{
                             this.add(item);
                         }});
                     }
                 } else if (preOperates.contains(item.getType())) {
                     if (groupMap.containsKey(PRE)) {
                         groupMap.get(PRE).add(item);
                     } else {
-                        groupMap.put(PRE, new LinkedList<>() {{
+                        groupMap.put(PRE, new LinkedList<MsTestElement>() {{
                             this.add(item);
                         }});
                     }
                 } else if (postOperates.contains(item.getType())) {
                     if (groupMap.containsKey(POST)) {
                         groupMap.get(POST).add(item);
                     } else {
-                        groupMap.put(POST, new LinkedList<>() {{
+                        groupMap.put(POST, new LinkedList<MsTestElement>() {{
                             this.add(item);
                         }});
                     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1314,7 +1314,7 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
 
     private void replenishScenarioModuleIdPath(String request, ApiScenarioModuleMapper apiScenarioModuleMapper, ApiScenarioWithBLOBs item) {
         ApiScenarioModuleExample example = new ApiScenarioModuleExample();
-        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo("UNPLANNED");
+        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo("未规划场景");
         List<ApiScenarioModule> modules = apiScenarioModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             item.setApiScenarioModuleId(modules.get(0).getId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1114,7 +1114,7 @@ public ApiTestCaseWithBLOBs getApiCaseInfo(String apiCaseId) {
     private void setModule(ApiDefinitionWithBLOBs item) {
         if (item != null && StringUtils.isEmpty(item.getModuleId()) || "default-module".equals(item.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
-            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("UNPLANNED");
+            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("未规划接口");
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(modules)) {
                 item.setModuleId(modules.get(0).getId());
@@ -2031,7 +2031,7 @@ public ApiDefinitionResult getApiDefinitionResult(ApiDefinitionRequest request)
 
     public void initModulePathAndId(String projectId, ApiDefinitionWithBLOBs test) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("UNPLANNED");
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("未规划接口");
         List<ApiModule> modules = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             test.setModuleId(modules.get(0).getId());

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -527,12 +527,12 @@ public long countById(String nodeId) {
 
     public ApiModule getDefaultNode(String projectId,String protocol) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(protocol).andNameEqualTo("UNPLANNED").andParentIdIsNull();
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(protocol).andNameEqualTo("未规划接口").andParentIdIsNull();
         List<ApiModule> list = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(list)) {
             ApiModule record = new ApiModule();
             record.setId(UUID.randomUUID().toString());
-            record.setName("UNPLANNED");
+            record.setName("未规划接口");
             record.setProtocol(protocol);
             record.setPos(1.0);
             record.setLevel(1);
@@ -549,7 +549,7 @@ public ApiModule getDefaultNode(String projectId,String protocol) {
 
     public ApiModule getDefaultNodeUnCreateNew(String projectId,String protocol) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(protocol).andNameEqualTo("UNPLANNED").andParentIdIsNull();
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(protocol).andNameEqualTo("未规划接口").andParentIdIsNull();
         List<ApiModule> list = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(list)) {
             return null;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -454,12 +454,12 @@ public long countById(String id) {
 
     public ApiScenarioModule getDefaultNode(String projectId) {
         ApiScenarioModuleExample example = new ApiScenarioModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andNameEqualTo("UNPLANNED").andParentIdIsNull();
+        example.createCriteria().andProjectIdEqualTo(projectId).andNameEqualTo("未规划场景").andParentIdIsNull();
         List<ApiScenarioModule> list = apiScenarioModuleMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(list)) {
             ApiScenarioModule record = new ApiScenarioModule();
             record.setId(UUID.randomUUID().toString());
-            record.setName("UNPLANNED");
+            record.setName("未规划场景");
             record.setPos(1.0);
             record.setLevel(1);
             record.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -168,7 +168,7 @@ public class TestCaseService {
     private void setNode(TestCaseWithBLOBs testCase) {
         if (StringUtils.isEmpty(testCase.getNodeId()) || "default-module".equals(testCase.getNodeId())) {
             TestCaseNodeExample example = new TestCaseNodeExample();
-            example.createCriteria().andProjectIdEqualTo(testCase.getProjectId()).andNameEqualTo("UNPLANNED");
+            example.createCriteria().andProjectIdEqualTo(testCase.getProjectId()).andNameEqualTo("未规划用例");
             List<TestCaseNode> nodes = testCaseNodeMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(nodes)) {
                 testCase.setNodeId(nodes.get(0).getId());

File: backend/src/main/java/io/metersphere/xmind/pojo/TestCaseXmindData.java
Patch:
@@ -65,7 +65,7 @@ public void setData(TestCaseNode caseNode, List<TestCaseDTO> dataList) {
                 }
             }
             if (!matching) {
-                TestCaseXmindData child = new TestCaseXmindData(caseNode.getId(), dataList.get(0).getNodePath());
+                TestCaseXmindData child = new TestCaseXmindData(caseNode.getId(), caseNode.getName());
                 child.setTestCaseList(dataList);
                 this.children.add(child);
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -172,7 +172,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             hashTree = ElementUtil.order(hashTree);
             EnvironmentConfig finalEnvConfig = envConfig;
             hashTree.forEach(el -> {
-                if (el instanceof MsAssertions) {
+                if (el instanceof MsAssertions && finalEnvConfig != null) {
                     //断言设置需要和全局断言、误报进行去重
                     el = hashTreeUtil.duplicateRegexInAssertions(finalEnvConfig.getAssertions(), (MsAssertions) el);
                 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -212,6 +212,7 @@ public static void structureCaseByJson(JSONObject object, ApiDefinitionResult ap
         apiTestCase.setCreateTime(System.currentTimeMillis());
         apiTestCase.setUpdateTime(System.currentTimeMillis());
         apiTestCase.setVersionId(apiDefinition.getVersionId());
+        apiTestCase.setPriority("P0");
         object.put("id", apiTestCase.getId());
         object.put("resourceId", apiTestCase.getId());
         object.put("projectId", projectId);

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -225,7 +225,6 @@ public TestPlanScheduleReportInfoDTO genTestPlanReportBySchedule(String projectI
         }
         LoadCaseRequest loadCaseRequest = new LoadCaseRequest();
         loadCaseRequest.setTestPlanId(planId);
-        loadCaseRequest.setProjectId(projectID);
         List<TestPlanLoadCaseDTO> testPlanLoadCaseDTOList = extTestPlanLoadCaseMapper.selectTestPlanLoadCaseList(loadCaseRequest);
         for (TestPlanLoadCaseDTO dto : testPlanLoadCaseDTOList) {
             performanceIdMap.put(dto.getId(), dto.getLoadCaseId());

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -347,6 +347,8 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
             String reportType = request.getConfig() != null ? request.getConfig().getReportType() : null;
             if (scenario != null) {
                 report.setVersionId(scenario.getVersionId());
+                String scenarioDefinition = JSON.toJSONString(request.getTestElement().getHashTree().get(0).getHashTree().get(0));
+                scenario.setScenarioDefinition(scenarioDefinition);
                 reportStructureService.save(scenario, report.getId(), reportType);
             } else {
                 if (request.getTestElement() != null && CollectionUtils.isNotEmpty(request.getTestElement().getHashTree())) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -697,7 +697,7 @@ public static List<MsTestElement> order(List<MsTestElement> elements) {
                 elementList.addAll(groupMap.get(POST).stream().sorted(Comparator.comparing(MsTestElement::getIndex)).collect(Collectors.toList()));
             }
             if (CollectionUtils.isNotEmpty(groupMap.get(ASSERTIONS))) {
-                elementList.addAll(groupMap.get(ASSERTIONS).stream().sorted(Comparator.comparing(MsTestElement::getIndex)).collect(Collectors.toList()));
+                elementList.addAll(groupMap.get(ASSERTIONS));
             }
         }
         return elementList;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionDuration.java
Patch:
@@ -13,6 +13,6 @@ public MsAssertionDuration() {
     }
 
     public boolean isValid() {
-        return value > 0;
+        return value > 0 && isEnable();
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionJSR223.java
Patch:
@@ -20,6 +20,6 @@ public MsAssertionJSR223() {
     }
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(script) && StringUtils.isNotBlank(scriptLanguage);
+        return StringUtils.isNotBlank(script) && StringUtils.isNotBlank(scriptLanguage) && isEnable();
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionJsonPath.java
Patch:
@@ -17,6 +17,6 @@ public MsAssertionJsonPath() {
     }
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression);
+        return StringUtils.isNotBlank(expression) && isEnable();
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionRegex.java
Patch:
@@ -18,6 +18,6 @@ public MsAssertionRegex() {
     }
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(subject) && StringUtils.isNotBlank(expression);
+        return StringUtils.isNotBlank(subject) && StringUtils.isNotBlank(expression) && isEnable();
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionType.java
Patch:
@@ -10,6 +10,7 @@ public class MsAssertionType {
     public final static String JSR223 = "JSR223";
     public final static String TEXT = "Text";
     public final static String XPATH2 = "XPath2";
+    private boolean enable = true;
 
     private String type;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionXPath2.java
Patch:
@@ -14,6 +14,6 @@ public MsAssertionXPath2() {
     }
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(expression);
+        return StringUtils.isNotBlank(expression) && isEnable();
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/document/MsAssertionDocument.java
Patch:
@@ -4,6 +4,7 @@
 
 @Data
 public class MsAssertionDocument {
+    private boolean enable = true;
     private String type;
     private Document data;
 }

File: backend/src/main/java/io/metersphere/api/service/MsHashTreeService.java
Patch:
@@ -186,6 +186,7 @@ private JSONObject setRequest(JSONObject element) {
                     element.put(REST, refElement.get(REST));
                     element.put(PATH, refElement.get(PATH));
                     element.put(BODY, refElement.get(BODY));
+                    element.put("active", false);
                     element.put(AUTH_MANAGER, refElement.get(AUTH_MANAGER));
                     element.put(ARGUMENTS, refElement.get(ARGUMENTS));
                     if (array != null) {

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -180,6 +180,9 @@ public void resetJob(Schedule request, JobKey jobKey, TriggerKey triggerKey, Cla
             LogUtil.error(e);
             MSException.throwException("重置定时任务-删除旧定时任务时出现异常");
         }
+        if(!request.getEnable()){
+            return;
+        }
         try {
             scheduleManager.addCronJob(jobKey, triggerKey, clazz, request.getValue(),
                     scheduleManager.getDefaultJobDataMap(request, request.getValue(), SessionUtils.getUser().getId()));

File: backend/src/main/java/io/metersphere/api/service/MsHashTreeService.java
Patch:
@@ -13,7 +13,6 @@
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.mapper.ApiScenarioMapper;
 import io.metersphere.base.mapper.ext.ExtApiScenarioMapper;
-import io.metersphere.commons.utils.BeanUtils;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
@@ -182,7 +181,7 @@ private JSONObject setRequest(JSONObject element) {
                     JSONObject refElement = JSON.parseObject(apiTestCase.getRequest());
                     ElementUtil.dataFormatting(refElement);
                     JSONArray array = refElement.getJSONArray(HASH_TREE);
-                    BeanUtils.copyBean(element, refElement);
+                    ElementUtil.copyBean(element, refElement);
                     element.put(HEADERS, refElement.get(HEADERS));
                     element.put(REST, refElement.get(REST));
                     element.put(PATH, refElement.get(PATH));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultProvider.java
Patch:
@@ -15,7 +15,7 @@ public String insertListSql(List<ApiDefinitionExecResult> list) {
                     .append("'")
                     .append(result.getId())
                     .append("','")
-                    .append(result.getName())
+                    .append(result.getName().replace("\'", "\\'"))
                     .append("','")
                     .append(result.getResourceId())
                     .append("','")

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportProvider.java
Patch:
@@ -17,7 +17,7 @@ public String insertListSql(List<APIScenarioReportResult> list) {
                     .append("','")
                     .append(result.getProjectId())
                     .append("','")
-                    .append(result.getName())
+                    .append(result.getName().replace("\'", "\\'"))
                     .append("',")
                     .append(result.getCreateTime())
                     .append(",")
@@ -31,7 +31,7 @@ public String insertListSql(List<APIScenarioReportResult> list) {
                     .append("','")
                     .append(result.getExecuteType())
                     .append("','")
-                    .append(result.getScenarioName())
+                    .append(result.getScenarioName().replace("\'", "\\'"))
                     .append("','")
                     .append(result.getScenarioId())
                     .append("','")

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -287,7 +287,7 @@ private void splitCsvFile(Node item) {
                 String line = tokenizer.nextToken();
                 csv.append(line).append("\n");
             } else {
-                if (index < offset) {
+                if (index <= offset) {
                     tokenizer.nextToken();
                     index++;
                     continue;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1314,7 +1314,7 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
 
     private void replenishScenarioModuleIdPath(String request, ApiScenarioModuleMapper apiScenarioModuleMapper, ApiScenarioWithBLOBs item) {
         ApiScenarioModuleExample example = new ApiScenarioModuleExample();
-        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo("未规划场景");
+        example.createCriteria().andProjectIdEqualTo(request).andNameEqualTo("UNPLANNED");
         List<ApiScenarioModule> modules = apiScenarioModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             item.setApiScenarioModuleId(modules.get(0).getId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1108,7 +1108,7 @@ public ApiTestCaseWithBLOBs getApiCaseInfo(String apiCaseId) {
     private void setModule(ApiDefinitionWithBLOBs item) {
         if (item != null && StringUtils.isEmpty(item.getModuleId()) || "default-module".equals(item.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
-            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("未规划接口");
+            example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("UNPLANNED");
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(modules)) {
                 item.setModuleId(modules.get(0).getId());
@@ -2025,7 +2025,7 @@ public ApiDefinitionResult getApiDefinitionResult(ApiDefinitionRequest request)
 
     public void initModulePathAndId(String projectId, ApiDefinitionWithBLOBs test) {
         ApiModuleExample example = new ApiModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("未规划接口");
+        example.createCriteria().andProjectIdEqualTo(projectId).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("UNPLANNED");
         List<ApiModule> modules = apiModuleMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(modules)) {
             test.setModuleId(modules.get(0).getId());

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -454,12 +454,12 @@ public long countById(String id) {
 
     public ApiScenarioModule getDefaultNode(String projectId) {
         ApiScenarioModuleExample example = new ApiScenarioModuleExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andNameEqualTo("未规划场景").andParentIdIsNull();
+        example.createCriteria().andProjectIdEqualTo(projectId).andNameEqualTo("UNPLANNED").andParentIdIsNull();
         List<ApiScenarioModule> list = apiScenarioModuleMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(list)) {
             ApiScenarioModule record = new ApiScenarioModule();
             record.setId(UUID.randomUUID().toString());
-            record.setName("未规划场景");
+            record.setName("UNPLANNED");
             record.setPos(1.0);
             record.setLevel(1);
             record.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -168,7 +168,7 @@ public class TestCaseService {
     private void setNode(TestCaseWithBLOBs testCase) {
         if (StringUtils.isEmpty(testCase.getNodeId()) || "default-module".equals(testCase.getNodeId())) {
             TestCaseNodeExample example = new TestCaseNodeExample();
-            example.createCriteria().andProjectIdEqualTo(testCase.getProjectId()).andNameEqualTo("未规划用例");
+            example.createCriteria().andProjectIdEqualTo(testCase.getProjectId()).andNameEqualTo("UNPLANNED");
             List<TestCaseNode> nodes = testCaseNodeMapper.selectByExample(example);
             if (CollectionUtils.isNotEmpty(nodes)) {
                 testCase.setNodeId(nodes.get(0).getId());

File: backend/src/main/java/io/metersphere/xmind/pojo/TestCaseXmindData.java
Patch:
@@ -65,7 +65,7 @@ public void setData(TestCaseNode caseNode, List<TestCaseDTO> dataList) {
                 }
             }
             if (!matching) {
-                TestCaseXmindData child = new TestCaseXmindData(caseNode.getId(), caseNode.getName());
+                TestCaseXmindData child = new TestCaseXmindData(caseNode.getId(), dataList.get(0).getNodePath());
                 child.setTestCaseList(dataList);
                 this.children.add(child);
             }

File: backend/src/main/java/io/metersphere/api/dto/ErrorReportLibraryParseDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto;
 
+import io.metersphere.dto.RequestResult;
 import lombok.Getter;
 import lombok.Setter;
 import org.apache.commons.collections.CollectionUtils;
@@ -12,6 +13,7 @@
 @Setter
 public class ErrorReportLibraryParseDTO {
     public List<String> errorCodeList;
+    public RequestResult result;
 
     public ErrorReportLibraryParseDTO() {
         this.errorCodeList = new ArrayList<>();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionRegex.java
Patch:
@@ -11,6 +11,7 @@ public class MsAssertionRegex extends MsAssertionType {
     private String expression;
     private String description;
     private boolean assumeSuccess;
+    private int testType = 2;
 
     public MsAssertionRegex() {
         setType(MsAssertionType.REGEX);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -64,10 +64,11 @@ public void batchSave(List<ResultDTO> dtos) {
         }
     }
 
-    private ApiScenarioReportResult newApiScenarioReportResult(String reportId, RequestResult result) {
+    private ApiScenarioReportResult newApiScenarioReportResult(String reportId, RequestResult baseResult) {
         ApiScenarioReportResult report = new ApiScenarioReportResult();
         //解析误报内容
-        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(result);
+        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(baseResult);
+        RequestResult result = errorCodeDTO.getResult();
         report.setId(UUID.randomUUID().toString());
         String resourceId = result.getResourceId();
         report.setResourceId(resourceId);

File: backend/src/main/java/io/metersphere/api/service/ExtErrorReportLibraryService.java
Patch:
@@ -35,7 +35,9 @@ public List<MsAssertions> getAssertionByProjectIdAndStatusIsOpen(String projectI
                 try {
                     MsAssertions assertions = JSONObject.parseObject(item.getContent(), MsAssertions.class);
                     if (assertions != null && CollectionUtils.isNotEmpty(assertions.getRegex())) {
-                        assertions.getRegex().get(0).setDescription("Error report:" + item.getErrorCode());
+                        //误报的断言要设置取反
+                        assertions.getRegex().get(0).setTestType(6);
+                        assertions.getRegex().get(0).setDescription("Check Error report:" + item.getErrorCode());
                         returnList.add(assertions);
                     }
                 } catch (Exception e) {

File: backend/src/main/java/io/metersphere/commons/utils/ResponseUtil.java
Patch:
@@ -14,10 +14,10 @@
  */
 public class ResponseUtil {
 
-    public static RequestResultExpandDTO parseByRequestResult(RequestResult requestResult) {
+    public static RequestResultExpandDTO parseByRequestResult(RequestResult baseResult) {
         //解析是否含有误报库信息
-        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(requestResult);
-
+        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(baseResult);
+        RequestResult requestResult = errorCodeDTO.getResult();
         RequestResultExpandDTO expandDTO = new RequestResultExpandDTO();
         BeanUtils.copyBean(expandDTO, requestResult);
 

File: backend/src/main/java/io/metersphere/api/dto/automation/SaveApiScenarioRequest.java
Patch:
@@ -65,4 +65,6 @@ public class SaveApiScenarioRequest {
     private String environmentGroupId;
 
     private String versionId;
+
+    private List<String> repositoryFileIds;
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -253,7 +253,7 @@ public void deletePublic(@PathVariable String versionId, @PathVariable String re
 
 
     @PostMapping("/import")
-    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.IMPORT, project = "#projectId")
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.IMPORT, project = "#request.projectId")
     public ExcelResponse testCaseImport(@RequestPart("request") TestCaseImportRequest request, @RequestPart("file") MultipartFile file, HttpServletRequest httpRequest) {
         checkPermissionService.checkProjectOwner(request.getProjectId());
         return testCaseService.testCaseImport(file, request, httpRequest);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -395,7 +395,7 @@ private ApiScenarioReportDTO getReport(String reportId) {
             AtomicLong stepErrorCode = new AtomicLong();
             AtomicLong stepUnExecute = new AtomicLong();
             calculateStep(stepList, stepError, stepTotal, stepErrorCode, stepUnExecute, false);
-            reportDTO.setScenarioStepSuccess((stepTotal.longValue() - stepError.longValue() - stepErrorCode.longValue()));
+            reportDTO.setScenarioStepSuccess((stepTotal.longValue() - stepError.longValue() - stepErrorCode.longValue() -stepUnExecute.longValue()));
             reportDTO.setScenarioStepTotal(stepTotal.longValue());
             reportDTO.setScenarioStepError(stepError.longValue());
             reportDTO.setScenarioStepErrorReport(stepErrorCode.longValue());

File: backend/src/main/java/io/metersphere/track/dto/TestPlanScenarioStepCountDTO.java
Patch:
@@ -15,5 +15,6 @@ public class TestPlanScenarioStepCountDTO {
     private int scenarioStepErrorReport;
     private List<String> underwayIds = new ArrayList<>();
     private int scenarioStepUnderway;
+    private int scenarioStepUnExecute;
 }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -495,6 +495,7 @@ private void calculateScenarioResultDTO(PlanReportCaseDTO item,
                     stepCount.setScenarioStepSuccess(stepCount.getScenarioStepSuccess() + jsonObject.getIntValue("scenarioStepSuccess"));
                     stepCount.setScenarioStepError(stepCount.getScenarioStepError() + jsonObject.getIntValue("scenarioStepError"));
                     stepCount.setScenarioStepErrorReport(stepCount.getScenarioStepErrorReport() + jsonObject.getIntValue("scenarioStepErrorReport"));
+                    stepCount.setScenarioStepUnExecute(stepCount.getScenarioStepUnExecute() + jsonObject.getIntValue("scenarioStepUnExecuteReport"));
                 }
             }
         } else {

File: backend/src/main/java/io/metersphere/api/controller/ShareInfoController.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.base.domain.ShareInfo;
 import io.metersphere.base.domain.User;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.reportstatistics.dto.ReportStatisticsSaveRequest;
 import io.metersphere.reportstatistics.service.ReportStatisticsService;
 import io.metersphere.service.UserService;
@@ -88,13 +89,15 @@ public ApiDocumentInfoDTO selectApiInfoById(@PathVariable String id) {
 
     @PostMapping("/generateApiDocumentShareInfo")
     public ShareInfoDTO generateApiDocumentShareInfo(@RequestBody ApiDocumentShareRequest request) {
+        request.setCreateUserId(SessionUtils.getUserId());
         ShareInfo apiShare = shareInfoService.generateApiDocumentShareInfo(request);
         ShareInfoDTO returnDTO = shareInfoService.conversionShareInfoToDTO(apiShare);
         return returnDTO;
     }
 
     @PostMapping("/generateShareInfoWithExpired")
     public ShareInfoDTO generateShareInfo(@RequestBody ShareInfo request) {
+        request.setCreateUserId(SessionUtils.getUserId());
         ShareInfo apiShare = shareInfoService.createShareInfo(request);
         ShareInfoDTO returnDTO = shareInfoService.conversionShareInfoToDTO(apiShare);
         return returnDTO;

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -477,7 +477,7 @@ public ShareInfo createShareInfo(ShareInfo request) {
         ShareInfo shareInfo = new ShareInfo();
         shareInfo.setId(UUID.randomUUID().toString());
         shareInfo.setCustomData(request.getCustomData());
-        shareInfo.setCreateUserId(SessionUtils.getUserId());
+        shareInfo.setCreateUserId(request.getCreateUserId());
         shareInfo.setCreateTime(createTime);
         shareInfo.setUpdateTime(createTime);
         shareInfo.setShareType(request.getShareType());
@@ -511,10 +511,11 @@ public ShareInfoDTO conversionShareInfoToDTO(ShareInfo apiShare) {
         return returnDTO;
     }
 
-    public String getTestPlanShareUrl(String testPlanReportId) {
+    public String getTestPlanShareUrl(String testPlanReportId, String userId) {
         ShareInfo shareRequest = new ShareInfo();
         shareRequest.setCustomData(testPlanReportId);
         shareRequest.setShareType(ShareType.PLAN_DB_REPORT.name());
+        shareRequest.setCreateUserId(userId);
         ShareInfo shareInfo = generateShareInfo(shareRequest);
         return conversionShareInfoToDTO(shareInfo).getShareUrl();
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -671,7 +671,7 @@ public void sendMessage(TestPlanReport testPlanReport, String projectId) {
         String successfulMailTemplate = "TestPlanSuccessfulNotification";
         String errfoMailTemplate = "TestPlanFailedNotification";
 
-        String testPlanShareUrl = shareInfoService.getTestPlanShareUrl(testPlanReport.getId());
+        String testPlanShareUrl = shareInfoService.getTestPlanShareUrl(testPlanReport.getId(), creator);
         paramMap.put("planShareUrl", baseSystemConfigDTO.getUrl() + "/sharePlanReport" + testPlanShareUrl);
 
         NoticeModel noticeModel = NoticeModel.builder()

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -16,7 +16,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String STORY_GET = "/api-getModel-story-getProductStories-productID={key}?zentaosid=";
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={0}?zentaosid={1}";
-    private static final String CREATE_META_DATA="/bug-create-{0}.json";
+    private static final String CREATE_META_DATA="/bug-create-{0}.json?zentaosid={1}";
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -747,7 +747,7 @@ private JSONObject buildJsonSchema(JSONObject requestBody, JSONArray required) {
                 parsedParam.put("type", "boolean");
                 setCommonJsonSchemaParam(parsedParam, requestBody);
             } else if (StringUtils.equals(type, "number")) {  //  double 类型会被 fastJson 转换为 BigDecimal
-                parsedParam.put("type", "double");
+                parsedParam.put("type", "number");
                 setCommonJsonSchemaParam(parsedParam, requestBody);
             } else {
                 parsedParam.put("type", "string");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/JsonSchemaItem.java
Patch:
@@ -21,6 +21,7 @@ public class JsonSchemaItem {
     private List<JsonSchemaItem> items;
     private Map<String, Object> mock;
     private Map<String, JsonSchemaItem> properties;
+    private List<String> required ;
 
     @JSONField(name = "$schema")
     private String schema;

File: backend/src/main/java/io/metersphere/api/dto/definition/SaveApiDefinitionRequest.java
Patch:
@@ -64,4 +64,6 @@ public class SaveApiDefinitionRequest {
     // 创建新版本时用到的
     private boolean newVersionRemark;
     private boolean newVersionDeps;
+    // 复制的请求Id
+    private String sourceId;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -633,7 +633,7 @@ private String getRestParameters(String path) {
             });
         }
         try {
-            Pattern p = Pattern.compile("(\\{)([\\w]+)(\\})");
+            Pattern p = Pattern.compile("(\\{)([\\w-]+)(\\})");
             Matcher m = p.matcher(path);
             while (m.find()) {
                 String group = m.group(2);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -268,7 +268,7 @@ public static void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<
         }
         // 循环步骤请求从新排序
         if (dtoList.stream().filter(e -> e.getValue() != null && e.getAllIndex() != null).collect(Collectors.toList()).size() == dtoList.size()) {
-            List<StepTreeDTO> list = dtoList.stream().sorted(Comparator.comparing(x -> x.getAllIndex())).collect(Collectors.toList());
+            List<StepTreeDTO> list = dtoList.stream().sorted(Comparator.comparing(x -> x.getIndex())).collect(Collectors.toList());
             for (int index = 0; index < list.size(); index++) {
                 list.get(index).setIndex((index + 1));
             }

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -48,8 +48,8 @@ public void update(@RequestBody UpdateIssueTemplateRequest request) {
         issueTemplateService.update(request);
     }
 
-    @GetMapping("/option/{projectId}")
-    public List<IssueTemplate> list(@PathVariable String projectId) {
+    @GetMapping({"/option/{projectId}", "/option"})
+    public List<IssueTemplate> list(@PathVariable(required = false) String projectId) {
         return issueTemplateService.getOption(projectId);
     }
 

File: backend/src/main/java/io/metersphere/controller/TestCaseTemplateController.java
Patch:
@@ -50,8 +50,8 @@ public void update(@RequestBody UpdateCaseFieldTemplateRequest request) {
         testCaseTemplateService.update(request);
     }
 
-    @GetMapping("/option/{projectId}")
-    public List<TestCaseTemplate> list(@PathVariable String projectId) {
+    @GetMapping({"/option/{projectId}", "/option"})
+    public List<TestCaseTemplate> list(@PathVariable(required = false) String projectId) {
         return testCaseTemplateService.getOption(projectId);
     }
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -19,6 +19,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String CREATE_META_DATA="?m=bug&f=create&productID={0}&t=json&zentaosid={1}";
     private static final String REPLACE_IMG_URL="<img src=\"%s/index.php?m=file&f=read&fileID=$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("m=file&f=read&fileID=(.*?)\"/>");
+    private static final String PRODUCT_GET = "&module=product&methodName=getById&params=productID={0}&zentaosid={1}";
     // 注意 recTotal={1}&recPerPage={2}&pageID={3} 顺序不能调换，有点恶心
     private static final String BUG_LIST_URL = "/?m=bug&f=browse&productID={0}&branch=&browseType=&param=0&orderBy=&recTotal={1}&recPerPage={2}&pageID={3}&t=json&zentaosid={4}";
 
@@ -43,6 +44,7 @@ public ZentaoGetClient(String url) {
         request.setBugDelete(getNotSuperModelUrl(BUG_DELETE));
         request.setBugList(getNotSuperModelUrl(BUG_LIST_URL));
         request.setCreateMetaData(getNotSuperModelUrl(CREATE_META_DATA));
+        request.setProductGet(getUrl(PRODUCT_GET));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -20,6 +20,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
+    private static final String PRODUCT_GET = "/api-getModel-product-getById-productID={0}?zentaosid={1}";
     private static final String BUG_LIST_URL = "/bug-browse-{1}---0--{2}-{3}-{4}.json?zentaosid={5}";
 
 
@@ -44,6 +45,7 @@ public ZentaoPathInfoClient(String url) {
         request.setBugDelete(getUrl(BUG_DELETE));
         request.setBugList(getUrl(BUG_LIST_URL));
         request.setCreateMetaData(getUrl(CREATE_META_DATA));
+        request.setProductGet(getUrl(PRODUCT_GET));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/domain/zentao/RequestUrl.java
Patch:
@@ -21,5 +21,6 @@ public class RequestUrl {
     private String buildsGet;
     private String fileUpload;
     private String replaceImgUrl;
+    private String productGet;
     private Pattern imgPattern;
 }

File: backend/src/main/java/io/metersphere/notice/sender/AfterReturningNoticeSendService.java
Patch:
@@ -3,7 +3,6 @@
 import com.alibaba.fastjson.JSON;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.user.SessionUser;
-import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.notice.annotation.SendNotice;
 import io.metersphere.notice.service.NoticeSendService;
@@ -27,7 +26,7 @@ public class AfterReturningNoticeSendService {
     private NoticeSendService noticeSendService;
 
     @Async
-    public void sendNotice(SendNotice sendNotice, Object retValue, SessionUser sessionUser) {
+    public void sendNotice(SendNotice sendNotice, Object retValue, SessionUser sessionUser, String currentProjectId) {
         //
         List<Map> resources = new ArrayList<>();
         String source = sendNotice.source();
@@ -51,7 +50,7 @@ public void sendNotice(SendNotice sendNotice, Object retValue, SessionUser sessi
             paramMap.put("url", baseSystemConfigDTO.getUrl());
             paramMap.put("operator", sessionUser.getName());
             paramMap.putAll(resource);
-            paramMap.putIfAbsent("projectId", SessionUtils.getCurrentProjectId());
+            paramMap.putIfAbsent("projectId", currentProjectId);
             // 占位符
             handleDefaultValues(paramMap);
 

File: backend/src/main/java/io/metersphere/notice/sender/SendNoticeAspect.java
Patch:
@@ -123,7 +123,8 @@ public void sendNotice(JoinPoint joinPoint, Object retValue) {
                 context.setVariable(params[len], args[len]);
             }
             SessionUser sessionUser = SessionUtils.getUser();
-            afterReturningNoticeSendService.sendNotice(sendNotice, retValue, sessionUser);
+            String currentProjectId = SessionUtils.getCurrentProjectId();
+            afterReturningNoticeSendService.sendNotice(sendNotice, retValue, sessionUser, currentProjectId);
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
         }

File: backend/src/main/java/io/metersphere/base/domain/ApiTestEnvironmentWithBLOBs.java
Patch:
@@ -1,11 +1,10 @@
 package io.metersphere.base.domain;
 
+import java.io.Serializable;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.io.Serializable;
-
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1135,6 +1135,7 @@ public ApiDefinitionImport apiTestImport(MultipartFile file, ApiTestImportReques
                 String context = request.getSwaggerUrl() + "导入失败";
                 Map<String, Object> paramMap = new HashMap<>();
                 paramMap.put("url", request.getSwaggerUrl());
+                paramMap.put("projectId", request.getProjectId());
                 NoticeModel noticeModel = NoticeModel.builder()
                         .operator(SessionUtils.getUserId())
                         .context(context)

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.commons.constants.OperLogConstants;
 import io.metersphere.commons.constants.OperLogModule;
+import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.notice.domain.MessageDetail;
 import io.metersphere.notice.service.NoticeService;
@@ -24,7 +25,8 @@ public void saveMessage(@RequestBody MessageDetail messageDetail) {
 
     @GetMapping("/search/message/type/{type}")
     public List<MessageDetail> searchMessage(@PathVariable String type) {
-        return noticeService.searchMessageByType(type);
+        String projectId = SessionUtils.getCurrentProjectId();
+        return noticeService.searchMessageByTypeAndProjectId(type, projectId);
     }
 
     @GetMapping("/search/message/{testId}")

File: backend/src/main/java/io/metersphere/notice/sender/AfterReturningNoticeSendService.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSON;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.user.SessionUser;
+import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.notice.annotation.SendNotice;
 import io.metersphere.notice.service.NoticeSendService;
@@ -50,6 +51,7 @@ public void sendNotice(SendNotice sendNotice, Object retValue, SessionUser sessi
             paramMap.put("url", baseSystemConfigDTO.getUrl());
             paramMap.put("operator", sessionUser.getName());
             paramMap.putAll(resource);
+            paramMap.putIfAbsent("projectId", SessionUtils.getCurrentProjectId());
             // 占位符
             handleDefaultValues(paramMap);
 

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -61,7 +61,8 @@ private AbstractNoticeSender getNoticeSender(MessageDetail messageDetail) {
      */
     public void send(String taskType, NoticeModel noticeModel) {
         try {
-            List<MessageDetail> messageDetails = noticeService.searchMessageByType(taskType);
+            String projectId = (String) noticeModel.getParamMap().get("projectId");
+            List<MessageDetail> messageDetails = noticeService.searchMessageByTypeAndProjectId(taskType, projectId);
 
             // 异步发送通知
             messageDetails.stream()

File: backend/src/main/java/io/metersphere/service/ProjectApplicationService.java
Patch:
@@ -180,7 +180,7 @@ public void createOrUpdateConfig(ProjectApplication conf) {
             LogUtil.error("create or update project config error. project id or conf type or value is blank.");
             return;
         }
-
+        LogUtil.info("create or update project config: " + projectId + "-" + type + "-" + value);
         ProjectApplicationExample example = new ProjectApplicationExample();
         example.createCriteria().andProjectIdEqualTo(projectId).andTypeEqualTo(type);
         if (projectApplicationMapper.countByExample(example) > 0) {

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -368,6 +368,7 @@ public void addOrUpdateCleanUpSchedule(AddProjectRequest project) {
         Boolean cleanTrackReport = project.getCleanTrackReport();
         Boolean cleanApiReport = project.getCleanApiReport();
         Boolean cleanLoadReport = project.getCleanLoadReport();
+        LogUtil.info("clean track/api/performance report: " + cleanTrackReport + "/" + cleanApiReport + "/" + cleanLoadReport);
         // 未设置则不更新定时任务
         if (cleanTrackReport == null && cleanApiReport == null && cleanLoadReport == null) {
             return;

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -68,7 +68,7 @@ public void send(String taskType, NoticeModel noticeModel) {
                     .filter(messageDetail -> StringUtils.equals(messageDetail.getEvent(), noticeModel.getEvent()))
                     .forEach(messageDetail -> {
                         MessageDetail m = SerializationUtils.clone(messageDetail);
-                        NoticeModel n =  SerializationUtils.clone(noticeModel);
+                        NoticeModel n = SerializationUtils.clone(noticeModel);
                         this.getNoticeSender(m).send(m, n);
                     });
 
@@ -106,7 +106,7 @@ public void send(String triggerMode, String taskType, NoticeModel noticeModel) {
                     .filter(messageDetail -> StringUtils.equals(messageDetail.getEvent(), noticeModel.getEvent()))
                     .forEach(messageDetail -> {
                         MessageDetail m = SerializationUtils.clone(messageDetail);
-                        NoticeModel n =  SerializationUtils.clone(noticeModel);
+                        NoticeModel n = SerializationUtils.clone(noticeModel);
                         this.getNoticeSender(m).send(m, n);
                     });
 
@@ -139,7 +139,7 @@ public void send(Project project, String taskType, NoticeModel noticeModel) {
                     .filter(messageDetail -> StringUtils.equals(messageDetail.getEvent(), noticeModel.getEvent()))
                     .forEach(messageDetail -> {
                         MessageDetail m = SerializationUtils.clone(messageDetail);
-                        NoticeModel n =  SerializationUtils.clone(noticeModel);
+                        NoticeModel n = SerializationUtils.clone(noticeModel);
                         this.getNoticeSender(m).send(m, n);
                     });
 

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseExecuteService.java
Patch:
@@ -165,7 +165,7 @@ public List<MsExecResponseDTO> run(ApiCaseRunRequest request) {
                 && StringUtils.isNotEmpty(request.getConfig().getReportName())) {
             serialReportId = UUID.randomUUID().toString();
             APIScenarioReportResult report = apiScenarioReportService.init(request.getConfig().getReportId(), null, request.getConfig().getReportName(),
-                    ReportTriggerMode.MANUAL.name(), ExecuteType.Saved.name(), request.getProjectId(),
+                    ReportTriggerMode.BATCH.name(), ExecuteType.Saved.name(), request.getProjectId(),
                     null, request.getConfig());
             report.setVersionId(caseList.get(0).getVersionId());
             report.setName(request.getConfig().getReportName());

File: backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -98,7 +98,7 @@ public static boolean isSampleWanted(boolean success, boolean errorOnly,
 
     @Override
     public void testEnded(String host) {
-        LoggerUtil.debug("TestEnded " + this.getName());
+        LoggerUtil.info("Debug TestEnded " + this.getName());
         MsgDto dto = new MsgDto();
         dto.setExecEnd(false);
         dto.setContent(TEST_END);

File: backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -81,7 +81,7 @@ public Map<String, Map<String, String>> getEnvParamsDataByHashTree(HashTree hash
         return returnMap;
     }
 
-    public synchronized void setEnvParamsMapToHashTree(HashTree hashTree, Map<String, Map<String, String>> envParamsMap) {
+    public  void setEnvParamsMapToHashTree(HashTree hashTree, Map<String, Map<String, String>> envParamsMap) {
         if (hashTree != null) {
             Map<String, String> allParamMap = new HashMap<>();
             for (Map<String, String> paramMap : envParamsMap.values()) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -400,7 +400,7 @@ private String getPrincipalName(String planId) {
         return principalName;
     }
 
-    public synchronized void updateReport(List<String> testPlanReportIdList, String runMode, String triggerMode) {
+    public void updateReport(List<String> testPlanReportIdList, String runMode, String triggerMode) {
         for (String planReportId : testPlanReportIdList) {
             this.countReportByTestPlanReportId(planReportId, runMode, triggerMode);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1822,12 +1822,12 @@ public DeleteCheckResult checkBeforeDelete(ApiScenarioBatchRequest request) {
                         List<String> scenarioNames = extApiScenarioMapper.selectNameByIdIn(scenarioIdList);
 
                         if (StringUtils.isNotEmpty(deleteScenarioName) && CollectionUtils.isNotEmpty(scenarioNames)) {
-                            String nameListStr = "[";
+                            String nameListStr = " ";
                             for (String name : scenarioNames) {
                                 nameListStr += name + ",";
                             }
                             if (nameListStr.length() > 1) {
-                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + "]";
+                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + " ";
                             }
                             String msg = deleteScenarioName + " " + Translator.get("delete_check_reference_by") + ": " + nameListStr + " ";
                             checkMsgList.add(msg);

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -471,7 +471,7 @@ public TestPlanLoadCase getTestPlanLoadCase(String loadCaseId) {
     }
 
     public void initOrderField() {
-        ServiceUtils.initOrderField(TestPlanLoadCase.class, TestPlanLoadCaseMapper.class,
+        ServiceUtils.initOrderField(TestPlanLoadCaseWithBLOBs.class, TestPlanLoadCaseMapper.class,
                 extTestPlanLoadCaseMapper::selectPlanIds,
                 extTestPlanLoadCaseMapper::getIdsOrderByUpdateTime);
     }

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -36,6 +36,7 @@ public APIScenarioReportResult get(@PathVariable String reportId) {
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<APIScenarioReportResult>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryAPIReportRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
+        request.setLimit("LIMIT " + (goPage - 1) * pageSize + "," + pageSize * 50);
         return PageUtils.setPageInfo(page, apiReportService.list(request));
     }
 

File: backend/src/main/java/io/metersphere/api/dto/QueryAPIReportRequest.java
Patch:
@@ -20,4 +20,6 @@ public class QueryAPIReportRequest {
     private List<OrderRequest> orders;
     private Map<String, List<String>> filters;
     private Map<String, Object> combine;
+
+    private String limit;
 }

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioSerialService.java
Patch:
@@ -166,7 +166,7 @@ public HashTree generateHashTree(String testId, Map<String, String> envMap, Jmet
 
                 MsThreadGroup group = new MsThreadGroup();
                 group.setLabel(caseWithBLOBs.getName());
-                group.setName(caseWithBLOBs.getName());
+                group.setName(runRequest.getReportId());
                 group.setProjectId(caseWithBLOBs.getProjectId());
 
                 MsTestElement testElement = parse(caseWithBLOBs, testId, envId);

File: backend/src/main/java/io/metersphere/api/exec/utils/ApiDefinitionExecResultUtil.java
Patch:
@@ -49,6 +49,7 @@ public static ApiDefinitionExecResult addResult(BatchRunDefinitionRequest reques
         if (caseWithBLOBs != null) {
             apiResult.setName(caseWithBLOBs.getName());
             apiResult.setProjectId(caseWithBLOBs.getProjectId());
+            apiResult.setVersionId(caseWithBLOBs.getVersionId());
         }
         apiResult.setTriggerMode(request.getTriggerMode());
         apiResult.setActuator("LOCAL");

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -267,7 +267,7 @@ public static void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<
             }
         }
         // 循环步骤请求从新排序
-        if (dtoList.stream().filter(e -> e.getValue() != null).collect(Collectors.toList()).size() == dtoList.size()) {
+        if (dtoList.stream().filter(e -> e.getValue() != null && e.getAllIndex() != null).collect(Collectors.toList()).size() == dtoList.size()) {
             List<StepTreeDTO> list = dtoList.stream().sorted(Comparator.comparing(x -> x.getAllIndex())).collect(Collectors.toList());
             for (int index = 0; index < list.size(); index++) {
                 list.get(index).setIndex((index + 1));

File: backend/src/main/java/io/metersphere/api/mock/utils/MockApiUtils.java
Patch:
@@ -299,7 +299,7 @@ public static ApiDefinitionResponseDTO getApiResponse(String response) {
                         if (statusCodeArray != null) {
                             for (int i = 0; i < statusCodeArray.size(); i++) {
                                 JSONObject object = statusCodeArray.getJSONObject(i);
-                                if (object.containsKey("name")) {
+                                if (object.containsKey("name") && StringUtils.isNotEmpty(object.getString("name"))) {
                                     try {
                                         code = Integer.parseInt(object.getString("name"));
                                         break;

File: backend/src/main/java/io/metersphere/track/issue/domain/zentao/GetCreateMetaDataResponse.java
Patch:
@@ -16,6 +16,6 @@ public static class MetaData {
         private String title;
         private JSONObject users;
         private JSONObject customFields;
-        private Map<String, String> builds;
+        private Map<String, Object> builds;
     }
 }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -14,7 +14,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String BUG_GET="&module=bug&methodName=getById&params=bugID={1}&t=json&zentaosid={2}";
     private static final String STORY_GET="&module=story&methodName=getProductStories&params=productID={key}&t=json&zentaosid=";
     private static final String USER_GET="&module=user&methodName=getList&t=json&zentaosid=";
-    private static final String BUILDS_GET="&module=build&methodName=getProductBuildPairs&productID={0}&zentaosid=";
+    private static final String BUILDS_GET="&module=build&methodName=getProductBuildPairs&productID={0}&zentaosid={1}";
     private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&t=json&zentaosid=";
     private static final String CREATE_META_DATA="?m=bug&f=create&productID={0}&t=json&zentaosid={1}";
     private static final String REPLACE_IMG_URL="<img src=\"%s/index.php?m=file&f=read&fileID=$1\"/>";

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -15,7 +15,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String BUG_GET = "/api-getModel-bug-getById-bugID={1}?zentaosid={2}";
     private static final String STORY_GET = "/api-getModel-story-getProductStories-productID={key}?zentaosid=";
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
-    private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={projectId}?zentaosid=";
+    private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={0}?zentaosid={1}";
     private static final String CREATE_META_DATA="/bug-create-{0}.json";
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtLoadTestMapper.java
Patch:
@@ -37,4 +37,6 @@ List<FileMetadata> getProjectFiles(@Param("projectId") String projectId, @Param(
     void clearLatestVersion(String refId);
 
     List<String> selectRefIdsForVersionChange(@Param("versionId") String versionId, @Param("projectId") String projectId);
+
+    List<FileMetadata> getFileMetadataByIds(@Param("testId") String testId);
 }

File: backend/src/main/java/io/metersphere/api/service/MsHashTreeService.java
Patch:
@@ -185,6 +185,7 @@ private JSONObject setRequest(JSONObject element) {
                     BeanUtils.copyBean(element, refElement);
                     element.put(HEADERS, refElement.get(HEADERS));
                     element.put(REST, refElement.get(REST));
+                    element.put(PATH, refElement.get(PATH));
                     element.put(BODY, refElement.get(BODY));
                     element.put(AUTH_MANAGER, refElement.get(AUTH_MANAGER));
                     element.put(ARGUMENTS, refElement.get(ARGUMENTS));

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1202,7 +1202,9 @@ private String getApiDefinitionResponse(ApiDefinitionWithBLOBs api, HttpServletR
             response.setStatus(responseDTO.getReturnCode());
             if (MapUtils.isNotEmpty(responseDTO.getHeaders())) {
                 for (Map.Entry<String, String> entry : responseDTO.getHeaders().entrySet()) {
-                    response.setHeader(entry.getKey(), entry.getValue());
+                    if(StringUtils.isNotEmpty(entry.getKey())){
+                        response.setHeader(entry.getKey(), entry.getValue());
+                    }
                 }
             }
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -8,7 +8,6 @@
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
 import io.metersphere.track.request.testcase.TestCaseBatchRequest;
 import io.metersphere.track.response.TrackCountResult;
-import org.apache.ibatis.annotations.MapKey;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -146,4 +145,6 @@ public interface ExtTestCaseMapper {
     int addLatestVersion(@Param("refId") String refId);
 
     List<TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
+
+    List<TestCaseDTO> getForNodeEdit(@Param("ids") List<String> ids);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseNodeMapper.java
Patch:
@@ -16,4 +16,6 @@ public interface ExtTestCaseNodeMapper {
     void updatePos(String id, Double pos);
 
     List<String> getNodes(@Param("parentId") String parentId);
+
+    List<TestCaseNodeDTO> getNodeTreeByIds(@Param("nodeIds") List<String> nodeIds);
 }

File: backend/src/main/java/io/metersphere/track/dto/TreeNodeDTO.java
Patch:
@@ -1,6 +1,4 @@
 package io.metersphere.track.dto;
-
-import io.metersphere.api.dto.definition.ApiModuleDTO;
 import lombok.Data;
 
 import java.util.List;

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionEnvController.java
Patch:
@@ -14,9 +14,9 @@ public class ApiDefinitionEnvController {
     @Resource
     private ApiDefinitionEnvService apiDefinitionEnvService;
 
-    @GetMapping("/get/{id}")
-    public ApiDefinitionEnv get(@PathVariable String id) {
-        return apiDefinitionEnvService.get(id);
+    @GetMapping("/get/{id}/{projectId}")
+    public ApiDefinitionEnv get(@PathVariable String id, @PathVariable String projectId) {
+        return apiDefinitionEnvService.get(id, projectId);
     }
 
     @PostMapping(value = "/create")

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -10,7 +10,6 @@
 import io.metersphere.api.exec.api.ApiExecuteService;
 import io.metersphere.api.service.ApiTestCaseService;
 import io.metersphere.base.domain.ApiTestCase;
-import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.ApiTestEnvironment;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.constants.OperLogConstants;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -282,7 +282,7 @@ public static void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<
     private List<ApiDefinitionExecResultVo> formatApiReport(String reportId, List<StepTreeDTO> stepList) {
         ApiDefinitionExecResultExample example = new ApiDefinitionExecResultExample();
         example.createCriteria().andIntegratedReportIdEqualTo(reportId);
-        example.setOrderByClause("end_time desc");
+        example.setOrderByClause("create_time asc");
         List<ApiDefinitionExecResult> reportResults = definitionExecResultMapper.selectByExampleWithBLOBs(example);
         List<ApiDefinitionExecResultVo> resultVos = new LinkedList<>();
         for (int i = 0; i < reportResults.size(); i++) {

File: backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -244,7 +244,7 @@ public static void addPositive(EnvironmentConfig envConfig, HashTree samplerHash
         if (envConfig == null) {
             return;
         }
-        if (envConfig.isUseErrorCode()) {
+        if (!config.isOperating() && envConfig.isUseErrorCode()) {
             List<MsAssertions> errorReportAssertion = HashTreeUtil.getErrorReportByProjectId(projectId);
             for (MsAssertions assertion : errorReportAssertion) {
                 assertion.toHashTree(samplerHashTree, assertion.getHashTree(), config);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -25,8 +25,6 @@ public interface ExtTestCaseMapper {
 
     int moduleCount(@Param("request") QueryTestCaseRequest request);
 
-    List<TestCaseDTO> listIds(@Param("request") QueryTestCaseRequest request);
-
     List<TestCaseDTO> listByMethod(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> listByTestCaseIds(@Param("request") TestCaseBatchRequest request);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -388,7 +388,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                     url = this.getUrl();
                 }
                 if (isUrl()) {
-                    if (this.isCustomizeReq()) {
+                    if (this.isCustomizeReq() && StringUtils.isNotEmpty(this.getUrl())) {
                         url = this.getUrl();
                         sampler.setProperty("HTTPSampler.path", url);
                     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -135,7 +135,7 @@ public List<ApiDefinitionResult> list(ApiDefinitionRequest request) {
         if (StringUtils.isNotBlank(request.getProjectId())) {
             buildProjectInfo(resList, request.getProjectId());
             calculateResult(resList, request.getProjectId());
-        }else{
+        } else {
             buildProjectInfoWidthoutProject(resList);
         }
         return resList;
@@ -1083,6 +1083,7 @@ public APIReportResult buildAPIReportResult(ApiDefinitionExecResult result) {
             return null;
         }
         APIReportResult reportResult = new APIReportResult();
+        reportResult.setStatus(result.getStatus());
         reportResult.setContent(result.getContent());
         return reportResult;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -224,6 +224,9 @@ public int editNode(DragNodeRequest request) {
             });
             batchUpdateTestCase(testCases);
         }
+        if (StringUtils.isBlank(request.getParentId())) {
+            request.setParentId(null);
+        }
         return testCaseNodeMapper.updateByPrimaryKeySelective(request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/loop/CountController.java
Patch:
@@ -5,7 +5,7 @@
 @Data
 public class CountController {
     private int loops;
-    private int interval;
+    private long interval;
     private boolean proceed;
     private Object requestResult;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -475,7 +475,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                 if (StringUtils.isNotEmpty(this.getPort()) && this.getPort().startsWith("${")) {
                     url = url.replace(this.getPort(), "10990");
                 }
-                if (url == null) {
+                if (StringUtils.isEmpty(url)) {
                     MSException.throwException("请重新选择环境");
                 }
                 URL urlObject = new URL(url);

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -322,6 +322,7 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
             hashTree = request.getTestElement().generateHashTree(config);
             LogUtil.info(request.getTestElement().getJmx(hashTree));
         } catch (Exception e) {
+            LoggerUtil.error(e);
             MSException.throwException(e.getMessage());
         }
         if (request.isSaved()) {

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -30,6 +30,7 @@
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.ApiTestJob;
+import io.metersphere.performance.parse.EngineSourceParserFactory;
 import io.metersphere.service.FileService;
 import io.metersphere.service.ScheduleService;
 import io.metersphere.track.service.TestCaseService;
@@ -465,7 +466,7 @@ public JmxInfoDTO updateJmxString(String jmx, String projectId) {
         //获取要转化的文件
         List<String> attachmentFilePathList = new ArrayList<>();
         try {
-            Document doc = DocumentHelper.parseText(jmx);// 获取可续保保单列表报文模板
+            Document doc = EngineSourceParserFactory.getDocument(new ByteArrayInputStream(jmx.getBytes("utf-8")));
             Element root = doc.getRootElement();
             Element rootHashTreeElement = root.element("hashTree");
             List<Element> innerHashTreeElementList = rootHashTreeElement.elements("hashTree");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -147,6 +147,5 @@ public interface ExtTestCaseMapper {
 
     int addLatestVersion(@Param("refId") String refId);
 
-    @MapKey("id")
-    Map<String, TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
+    List<TestCase> getMaintainerMap(@Param("request") QueryTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/EsbDataParser.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSONArray;
 import io.metersphere.api.dto.automation.EsbDataStruct;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.XMLUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.dom4j.Document;
 import org.dom4j.DocumentHelper;
@@ -29,6 +30,7 @@ public static String esbData2XmlByParamStruct(List<EsbDataStruct> esbDataList, S
             }
             // 创建解析器工厂
             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+            XMLUtils.setExpandEntityReferencesFalse(factory);
             DocumentBuilder db = factory.newDocumentBuilder();
             Document document = DocumentHelper.createDocument();
             EsbDataStruct dataStruct = selectEsbDataStructByNameStruct(esbDataList, paramArr, 0);

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/TcpTreeTableDataParser.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.mock.MockConfigRequestParams;
 import io.metersphere.api.mock.utils.MockApiUtils;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.XMLUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.dom4j.Document;
 import org.dom4j.DocumentHelper;
@@ -33,6 +34,7 @@ public static String treeTableData2Xml(List<TcpTreeTableDataStruct> treeDataList
             }
             // 创建解析器工厂
             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+            XMLUtils.setExpandEntityReferencesFalse(factory);
             DocumentBuilder db = factory.newDocumentBuilder();
             Document document = DocumentHelper.createDocument();
 

File: backend/src/main/java/io/metersphere/api/parse/JmeterDocumentParser.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.parse;
 
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.XMLUtils;
 import io.metersphere.jmeter.utils.ScriptEngineUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.w3c.dom.Document;
@@ -32,6 +33,7 @@ public class JmeterDocumentParser {
     public static byte[] parse(byte[] source) {
 
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+        XMLUtils.setExpandEntityReferencesFalse(factory);
         try (
                 ByteArrayInputStream byteStream = new ByteArrayInputStream(source)
         ) {

File: backend/src/main/java/io/metersphere/api/parse/old/JmeterDocumentParser.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.parse.old;
 
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.XMLUtils;
 import io.metersphere.jmeter.utils.ScriptEngineUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.w3c.dom.Document;
@@ -34,6 +35,7 @@ public class JmeterDocumentParser {
     public static byte[] parse(byte[] source) {
 
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+        XMLUtils.setExpandEntityReferencesFalse(factory);
         try (
                 ByteArrayInputStream byteStream = new ByteArrayInputStream(source)
         ) {

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1347,10 +1347,12 @@ private boolean checkMessageIsXml(String message) {
         boolean isXml = false;
         try {
             DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+            XMLUtils.setExpandEntityReferencesFalse(documentBuilderFactory);
             DocumentBuilder builder = documentBuilderFactory.newDocumentBuilder();
             builder.parse(new InputSource(new ByteArrayInputStream(message.getBytes("utf-8"))));
             isXml = true;
         } catch (Exception e) {
+            e.printStackTrace();
         }
         return isXml;
     }

File: backend/src/main/java/io/metersphere/service/ProjectApplicationService.java
Patch:
@@ -50,7 +50,7 @@ public ProjectApplication getProjectApplication(String projectId, String type) {
         ProjectApplicationExample projectApplicationExample = new ProjectApplicationExample();
         projectApplicationExample.createCriteria().andProjectIdEqualTo(projectId).andTypeEqualTo(type);
         List<ProjectApplication> projectApplications = projectApplicationMapper.selectByExample(projectApplicationExample);
-        if(projectApplications==null||projectApplications.size()==0){
+        if(projectApplications == null || projectApplications.size() == 0){
             return new ProjectApplication();
         }
         return projectApplications.get(0);

File: backend/src/main/java/io/metersphere/api/jmeter/FixedCapacityUtils.java
Patch:
@@ -45,7 +45,7 @@ public static String getJmeterLogger(String testId) {
             Long endTime = System.currentTimeMillis();
             Long finalStartTime = startTime;
             String logMessage = FixedCapacityUtils.fixedCapacityCache.entrySet().stream()
-                    .filter(map -> map.getKey() > finalStartTime && map.getKey() < endTime)
+                    .filter(map -> map.getKey() > finalStartTime && map.getKey() <= endTime)
                     .map(map -> map.getValue()).collect(Collectors.joining());
             return logMessage;
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/base/domain/IssuesDao.java
Patch:
@@ -19,4 +19,6 @@ public class IssuesDao extends IssuesWithBLOBs {
     private List<String> tapdUsers;
     private List<String>zentaoBuilds;
     private String zentaoAssigned;
+    private String refType;
+    private String refId;
 }

File: backend/src/main/java/io/metersphere/api/tcp/server/TCPServicer.java
Patch:
@@ -83,6 +83,7 @@ private String getReturnMsg(String message) {
                 LogUtil.error(e);
             }
         }
+        LogUtil.info("TCP-Mock start. port: " + this.port + "; Message:" + message + "; response:" + returnMsg);
         return returnMsg;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -249,7 +249,7 @@ private JSONObject buildUpdateParam(IssuesUpdateRequest issuesRequest, String is
         project.put("key", jiraKey);
 
         JSONObject issuetype = new JSONObject();
-        issuetype.put("name", issuetypeStr);
+        issuetype.put("id", issuetypeStr);
         fields.put("issuetype", issuetype);
 
         JSONObject addJiraIssueParam = new JSONObject();
@@ -484,7 +484,7 @@ public IssueTemplateDao getThirdPartTemplate() {
 
     public String getIssueType(String configStr) {
         ProjectIssueConfig projectConfig = super.getProjectConfig(configStr);
-        String jiraIssueType = projectConfig.getJiraIssueType();
+        String jiraIssueType = projectConfig.getJiraIssueTypeId();
         if (StringUtils.isBlank(jiraIssueType)) {
             MSException.throwException("请在项目中配置 Jira 问题类型！");
         }
@@ -493,7 +493,7 @@ public String getIssueType(String configStr) {
 
     public String getStoryType(String configStr) {
         ProjectIssueConfig projectConfig = super.getProjectConfig(configStr);
-        String jiraStoryType = projectConfig.getJiraStoryType();
+        String jiraStoryType = projectConfig.getJiraStoryTypeId();
        if (StringUtils.isBlank(jiraStoryType)) {
             MSException.throwException("请在项目中配置 Jira 需求类型！");
         }

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -35,7 +35,7 @@ public JiraIssue getIssues(String issuesId) {
     }
 
     public Map<String, JiraCreateMetadataResponse.Field> getCreateMetadata(String projectKey, String issueType) {
-        String url = getBaseUrl() + "/issue/createmeta?projectKeys={1}&issuetypeNames={2}&expand=projects.issuetypes.fields";
+        String url = getBaseUrl() + "/issue/createmeta?projectKeys={1}&issuetypeIds={2}&expand=projects.issuetypes.fields";
         ResponseEntity<String> response = null;
         Map<String, JiraCreateMetadataResponse.Field> fields = null;
         try {

File: backend/src/main/java/io/metersphere/track/issue/domain/ProjectIssueConfig.java
Patch:
@@ -6,7 +6,7 @@
 @Getter
 @Setter
 public class ProjectIssueConfig {
-    private String jiraIssueType;
-    private String jiraStoryType;
+    private String jiraIssueTypeId;
+    private String jiraStoryTypeId;
     private String projectKey;
 }

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -430,6 +430,7 @@ public JiraConfig setUserConfig() {
     }
 
     public IssueTemplateDao getThirdPartTemplate() {
+        setUserConfig();
         Set<String> ignoreSet = new HashSet() {{
             add("timetracking");
             add("attachment");

File: backend/src/main/java/io/metersphere/track/response/TestPlanBugCount.java
Patch:
@@ -13,4 +13,5 @@ public class TestPlanBugCount {
     private int caseSize;
     private int bugSize;
     private String passRage;
+    private String planId;
 }

File: backend/src/main/java/io/metersphere/track/service/TrackService.java
Patch:
@@ -131,6 +131,7 @@ public BugStatustics getBugStatistics(String projectId) {
             testPlanBug.setPlanName(plan.getName());
             testPlanBug.setCreateTime(plan.getCreateTime());
             testPlanBug.setStatus(plan.getStatus());
+            testPlanBug.setPlanId(plan.getId());
 
             int planCaseSize = getPlanCaseSize(plan.getId());
             testPlanBug.setCaseSize(planCaseSize);

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -16,6 +16,7 @@
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.commons.utils.SessionUtils;
+import io.metersphere.i18n.Translator;
 import io.metersphere.service.ProjectApplicationService;
 import io.metersphere.track.service.TestPlanApiCaseService;
 import io.metersphere.track.service.TestPlanScenarioCaseService;
@@ -518,7 +519,7 @@ public void validateExpired(String shareId) {
     public void validateExpired(ShareInfo shareInfo) {
         // 有效期根据类型从ProjectApplication中获取
         if(shareInfo == null ){
-            MSException.throwException("连接已失效，请重新获取!");
+            MSException.throwException(Translator.get("connection_expired"));
         }
         String type = "";
         if(shareInfo.getShareType().equals("PERFORMANCE_REPORT")){
@@ -544,7 +545,7 @@ public void validateExpired(ShareInfo shareInfo) {
     private void millisCheck(long compareMillis, long millis,String shareInfoId) {
         if (compareMillis>millis) {
             shareInfoMapper.deleteByPrimaryKey(shareInfoId);
-            MSException.throwException("连接已失效，请重新获取!");
+            MSException.throwException(Translator.get("connection_expired"));
         }
     }
 

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -134,7 +134,7 @@ public List<MessageDetail> searchMessageByTypeAndWorkspaceId(String type, String
     public List<MessageDetail> searchMessageByTypeBySend(String type, String projectId) {
         try {
             String workspaceId = "";
-            if (null == SessionUtils.getUser()) {
+            if (null == SessionUtils.getCurrentWorkspaceId()) {
                 Project project = projectMapper.selectByPrimaryKey(projectId);
                 workspaceId = project.getWorkspaceId();
             } else {

File: backend/src/main/java/io/metersphere/api/controller/MockConfigController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.controller;
 
 import io.metersphere.api.dto.automation.TcpTreeTableDataStruct;
+import io.metersphere.api.dto.mock.ApiDefinitionResponseDTO;
 import io.metersphere.api.dto.mock.MockParamSuggestions;
 import io.metersphere.api.dto.mock.MockTestDataRequest;
 import io.metersphere.api.dto.mockconfig.MockConfigRequest;
@@ -71,9 +72,9 @@ public Map<String, List<MockParamSuggestions>> getApiParams(@PathVariable String
     }
 
     @GetMapping("/getApiResponse/{id}")
-    public Map<String, String> getApiResponse(@PathVariable String id) {
+    public ApiDefinitionResponseDTO getApiResponse(@PathVariable String id) {
         ApiDefinitionWithBLOBs apiDefinitionWithBLOBs = apiDefinitionService.getBLOBs(id);
-        Map<String, String> returnMap = MockApiUtils.getApiResponse(apiDefinitionWithBLOBs.getResponse());
+        ApiDefinitionResponseDTO returnMap = MockApiUtils.getApiResponse(apiDefinitionWithBLOBs.getResponse());
         return returnMap;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -66,7 +66,6 @@ public void saveApiResult(List<RequestResult> requestResults, ResultDTO dto) {
         LoggerUtil.info("接收到API/CASE执行结果【 " + requestResults.size() + " 】");
 
         for (RequestResult item : requestResults) {
-            item.setEndTime(System.currentTimeMillis());
             if (item.getResponseResult() != null && item.getResponseResult().getResponseTime() <= 0) {
                 item.getResponseResult().setResponseTime((item.getEndTime() - item.getStartTime()));
             }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -195,6 +195,9 @@ private void calculate(List<StepTreeDTO> dtoList, AtomicLong totalScenario, Atom
             } else if (step.getValue() != null) {
                 if (step.getValue().getStartTime() == 0 || step.getValue().getEndTime() == 0) {
                     totalTime.set(totalTime.longValue() + 0);
+                } else if (step.getValue().getStartTime() > step.getValue().getEndTime() && step.getValue().getResponseResult() != null) {
+                    // 异常时间处理
+                    totalTime.set(totalTime.longValue() + step.getValue().getResponseResult().getResponseTime());
                 } else {
                     totalTime.set((totalTime.longValue() + (step.getValue().getEndTime() - step.getValue().getStartTime())));
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -395,6 +395,7 @@ private ApiScenarioReportDTO getReport(String reportId) {
             reportDTO.setScenarioTotal(totalScenario.longValue());
             reportDTO.setScenarioError(scenarioError.longValue());
             reportDTO.setScenarioErrorReport(errorReport.longValue());
+            reportDTO.setScenarioSuccess((totalScenario.longValue() - scenarioError.longValue()));
             //统计步骤数据
             AtomicLong stepErrorCode = new AtomicLong();
             calculateStep(stepList, stepError, stepTotal, stepErrorCode, false);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1321,6 +1321,8 @@ public List<ApiDefinition> selectApiDefinitionBydIds(List<String> ids) {
     }
 
     public void deleteByParams(ApiBatchRequest request) {
+        ServiceUtils.getSelectAllIds(request, request.getCondition(),
+                (query) -> extApiDefinitionMapper.selectIds(query));
         List<String> ids = request.getIds();
         if (CollectionUtils.isEmpty(ids)) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -421,14 +421,15 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                             if (StringUtils.isNotBlank(this.getPath())) {
                                 envPath += this.getPath();
                             }
+                            sampler.setPort(httpConfig.getPort());
                             if (StringUtils.isNotEmpty(httpConfig.getDomain())) {
                                 sampler.setDomain(URLDecoder.decode(httpConfig.getDomain(), "UTF-8"));
                                 sampler.setProtocol(httpConfig.getProtocol());
                             } else {
                                 sampler.setDomain("");
                                 sampler.setProtocol("");
+                                sampler.setPort(-1);
                             }
-                            sampler.setPort(httpConfig.getPort());
                         } else {
                             URL urlObject = new URL(this.path);
                             envPath = StringUtils.equals(urlObject.getPath(), "/") ? "" : urlObject.getFile();

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -632,7 +632,7 @@ public void deleteAPIReportBatch(APIReportBatchRequest reportRequest) {
             definitionExecResultMapper.deleteByExample(definitionExecResultExample);
 
             ApiDefinitionExecResultExample execResultExample = new ApiDefinitionExecResultExample();
-            execResultExample.createCriteria().andIntegratedReportIdIn(handleIdList);
+            execResultExample.createCriteria().andIntegratedReportIdIn(ids);
             definitionExecResultMapper.deleteByExample(execResultExample);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -357,7 +357,7 @@ private ApiDefinitionExecResult save(RequestResult item, String reportId, String
             saveResult.setStatus(status);
             saveResult.setResourceId(item.getName());
             saveResult.setStartTime(item.getStartTime());
-            saveResult.setEndTime(item.getResponseResult().getResponseTime());
+            saveResult.setEndTime(item.getEndTime());
             // 清空上次执行结果的内容，只保留近五条结果
             ApiDefinitionExecResult prevResult = extApiDefinitionExecResultMapper.selectMaxResultByResourceIdAndType(item.getName(), type);
             if (prevResult != null) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1851,7 +1851,9 @@ public void minderEdit(TestCaseMinderEditRequest request) {
                     editTestCase(editRequest);
                     changeOrder(item, request.getProjectId());
                 } else {
-                    item.setMaintainer(SessionUtils.getUserId());
+                    if (StringUtils.isBlank(item.getMaintainer())) {
+                        item.setMaintainer(SessionUtils.getUserId());
+                    }
                     EditTestCaseRequest editTestCaseRequest = new EditTestCaseRequest();
                     BeanUtils.copyBean(editTestCaseRequest, item);
                     addTestCase(editTestCaseRequest);

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -316,6 +316,8 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
         }
         HashTree hashTree = null;
         try {
+            uploadBodyFiles(request.getBodyFileRequestIds(), bodyFiles);
+            FileUtils.createBodyFiles(request.getScenarioFileIds(), scenarioFiles);
             this.testElement(request);
             hashTree = request.getTestElement().generateHashTree(config);
             LogUtil.info(request.getTestElement().getJmx(hashTree));
@@ -350,8 +352,6 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
             }
             apiScenarioReportMapper.insert(report);
         }
-        uploadBodyFiles(request.getBodyFileRequestIds(), bodyFiles);
-        FileUtils.createBodyFiles(request.getScenarioFileIds(), scenarioFiles);
         String runMode = StringUtils.isEmpty(request.getRunMode()) ? ApiRunMode.SCENARIO.name() : request.getRunMode();
         // 调用执行方法
         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(request.getId(), request.getId(), runMode, hashTree);

File: backend/src/main/java/io/metersphere/log/utils/ReflexObjectUtil.java
Patch:
@@ -176,7 +176,7 @@ public static List<DetailColumn> compared(OperatingLogDetails obj, OperatingLogD
                             column.setDiffValue(diffValue);
                         }
                         // 深度对比
-                        else if (StringUtils.equals(module, "api_definition")) {
+                        else if (StringUtils.equals(module, "API_DEFINITION")) {
                             if (originalColumns.get(i).getColumnName().equals("request")) {
                                 String newValue = newColumns.get(i).getOriginalValue().toString();
                                 String oldValue = column.getOriginalValue().toString();

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -522,10 +522,10 @@ public void validateExpired(ShareInfo shareInfo) {
         }
         String type = "";
         if(shareInfo.getShareType().equals("PERFORMANCE_REPORT")){
-            type = ProjectApplicationType.TRACK_SHARE_REPORT_TIME.toString();
+            type = ProjectApplicationType.PERFORMANCE_SHARE_REPORT_TIME.toString();
         }
         if(shareInfo.getShareType().equals("PLAN_DB_REPORT")){
-            type = ProjectApplicationType.PERFORMANCE_SHARE_REPORT_TIME.toString();
+            type = ProjectApplicationType.TRACK_SHARE_REPORT_TIME.toString();
         }
         if(StringUtils.isBlank(type)){
             millisCheck(System.currentTimeMillis() - shareInfo.getUpdateTime() ,1000 * 60 * 60 * 24,shareInfo.getId());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -224,7 +224,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             MsDNSCacheManager.addEnvironmentDNS(httpSamplerTree, this.getName(), config.getConfig().get(this.getProjectId()), httpConfig);
         }
 
-        if (this.authManager != null) {
+        if (this.authManager != null && StringUtils.equals(this.authManager.getVerification(), "Basic Auth")) {
             this.authManager.setAuth(httpSamplerTree, this.authManager, sampler);
         }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -27,4 +27,6 @@ public interface ExtIssuesMapper {
     List<IssuesDao>getCountByStatus(@Param("request") IssuesRequest issuesRequest);
 
     List<String> selectIdNotInUuIds(@Param("projectId") String projectId, @Param("platform") String platform, @Param("platformIds")  List<String> platformIds);
+
+    List<IssuesDao> getPlanIssues(@Param("request") IssuesRequest issueRequest);
 }

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -74,7 +74,7 @@ public class ShareController {
     @GetMapping("/issues/plan/get/{shareId}/{planId}")
     public List<IssuesDao> getIssuesByPlanoId(@PathVariable String shareId, @PathVariable String planId) {
         shareInfoService.validate(shareId, planId);
-        return issuesService.getIssuesByPlanoId(planId);
+        return issuesService.getIssuesByPlanId(planId);
     }
 
     @GetMapping("/test/plan/report/{shareId}/{planId}")

File: backend/src/main/java/io/metersphere/track/controller/IssuesController.java
Patch:
@@ -82,7 +82,7 @@ public IssuesWithBLOBs getIssue(@PathVariable String id) {
     @GetMapping("/plan/get/{planId}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_ISSUE_READ)
     public List<IssuesDao> getIssuesByPlanId(@PathVariable String planId) {
-        return issuesService.getIssuesByPlanoId(planId);
+        return issuesService.getIssuesByPlanId(planId);
     }
 
     @GetMapping("/auth/{workspaceId}/{platform}")

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesRequest.java
Patch:
@@ -43,9 +43,11 @@ public class IssuesRequest extends BaseQueryRequest {
     private String platform;
     private String customFields;
     private List<String> testCaseIds;
+    private List<String> notInIds;
 
     private String requestType;
     private String status;
     private String defaultCustomFields;
     private Boolean isPlanEdit = false;
+    private String planId;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1397,7 +1397,7 @@ public void buildFunctionalReport(TestPlanSimpleReportDTO report, JSONObject con
                 report.setFunctionFailureCases(failureCases);
             }
             if (checkReportConfig(config, "functional", "issue")) {
-                List<IssuesDao> issueList = issuesService.getIssuesByPlanoId(planId);
+                List<IssuesDao> issueList = issuesService.getIssuesByPlanId(planId);
                 report.setIssueList(issueList);
             }
         }

File: backend/src/main/java/io/metersphere/base/domain/ProjectApplication.java
Patch:
@@ -9,7 +9,7 @@ public class ProjectApplication implements Serializable {
 
     private String type;
 
-    private String shareReportExpr;
+    private String typeValue;
 
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ProjectApplicationMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.base.mapper;
 
-import io.metersphere.base.domain.Project;
 import io.metersphere.base.domain.ProjectApplication;
 import io.metersphere.base.domain.ProjectApplicationExample;
 import java.util.List;
@@ -20,5 +19,4 @@ public interface ProjectApplicationMapper {
     int updateByExampleSelective(@Param("record") ProjectApplication record, @Param("example") ProjectApplicationExample example);
 
     int updateByExample(@Param("record") ProjectApplication record, @Param("example") ProjectApplicationExample example);
-
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/system/SystemReference.java
Patch:
@@ -114,7 +114,7 @@ public class SystemReference {
 
         projectApplicationColumns.put("projectId", "项目ID");
         projectApplicationColumns.put("type", "类型");
-        projectApplicationColumns.put("shareReportExpr", "报告分享链接时间");
+        projectApplicationColumns.put("typeValue", "值");
 
         jarColumns.put("name", "名称");
         jarColumns.put("fileName", "文件名称");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -67,7 +67,7 @@ public void saveApiResult(List<RequestResult> requestResults, ResultDTO dto) {
 
         for (RequestResult item : requestResults) {
             item.setEndTime(System.currentTimeMillis());
-            if (item.getResponseResult() != null) {
+            if (item.getResponseResult() != null && item.getResponseResult().getResponseTime() <= 0) {
                 item.getResponseResult().setResponseTime((item.getEndTime() - item.getStartTime()));
             }
             if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -610,8 +610,9 @@ public TestPlanReport update(TestPlanReport report) {
             try {
                 //更新TestPlan状态为完成
                 TestPlanWithBLOBs testPlan = testPlanMapper.selectByPrimaryKey(report.getTestPlanId());
-                if (testPlan != null) {
-                    testPlanService.checkStatus(testPlan);
+                if (testPlan != null && !StringUtils.equals(testPlan.getStatus(), TestPlanStatus.Completed.name())) {
+                    testPlan.setStatus(TestPlanStatus.Completed.name());
+                    testPlanService.editTestPlan(testPlan);
                 }
                 if (testPlan != null && StringUtils.equalsAny(report.getTriggerMode(),
                         ReportTriggerMode.MANUAL.name(),

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -164,7 +164,7 @@ public void startEnableSchedules() {
     public Schedule buildApiTestSchedule(ScheduleRequest request) {
         Schedule schedule = new Schedule();
         schedule.setResourceId(request.getResourceId());
-        schedule.setEnable(true);
+        schedule.setEnable(request.getEnable());
         schedule.setValue(request.getValue().trim());
         schedule.setKey(request.getResourceId());
         schedule.setUserId(SessionUtils.getUser().getId());

File: backend/src/main/java/io/metersphere/api/service/ShareInfoService.java
Patch:
@@ -534,14 +534,14 @@ public void validateExpired(ShareInfo shareInfo) {
                 millisCheck(shareInfo,1000 * 60 * 60 * 24);
             }else {
                 String expr= projectApplication.getShareReportExpr();
-                long timeMills = getTimeMills(expr);
+                long timeMills = getTimeMills(shareInfo.getUpdateTime(),expr);
                 millisCheck(shareInfo,timeMills);
             }
         }
     }
 
     private void millisCheck(ShareInfo shareInfo, long millis) {
-        if (System.currentTimeMillis() - shareInfo.getUpdateTime() > millis) {
+        if (shareInfo.getUpdateTime()<millis) {
             shareInfoMapper.deleteByPrimaryKey(shareInfo.getId());
             MSException.throwException("连接已失效，请重新获取!");
         }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -152,9 +152,8 @@ public void setCaseEnvironment(List<ApiTestCaseDTO> apiTestCases) {
 
     public List<String> idSimple(ApiTestCaseRequest request) {
         request = this.initRequest(request, true, true);
-
-        List<String> ids = extApiTestCaseMapper.idSimple(request);
-        return ids;
+        List<ApiTestCaseDTO> apiTestCaseDTOS = extApiTestCaseMapper.listSimple(request);
+        return apiTestCaseDTOS.stream().map(ApiTestCaseDTO::getId).collect(Collectors.toList());
     }
 
     /**

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -613,6 +613,7 @@ private String updateJmxMessage(String jmx) {
     public JmxInfoDTO getJmxInfoDTO(RunDefinitionRequest runRequest, List<MultipartFile> bodyFiles) {
         ParameterConfig config = new ParameterConfig();
         config.setProjectId(runRequest.getProjectId());
+        config.setOperating(true);
 
         Map<String, EnvironmentConfig> envConfig = new HashMap<>();
         Map<String, String> map = runRequest.getEnvironmentMap();

File: backend/src/main/java/io/metersphere/api/dto/datacount/request/ScheduleInfoRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.datacount.request;
 
+import io.metersphere.track.request.testcase.QueryTestPlanRequest;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -16,4 +17,6 @@ public class ScheduleInfoRequest {
     private String taskID;
     private boolean enable;
     private List<String> taskIds;
+    private boolean selectAll;
+    private QueryTestPlanRequest queryTestPlanRequest;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JmeterDefinitionParser.java
Patch:
@@ -111,7 +111,9 @@ public ApiDefinitionImport parse(InputStream inputSource, ApiTestImportRequest r
                     apiTestCase.setPriority("P0");
                     definitionCases.add(apiTestCase);
 
-                    element.getHashTree().clear();
+                    if (element.getHashTree() != null) {
+                        element.getHashTree().clear();
+                    }
                     apiDefinitionWithBLOBs.setRequest(JSON.toJSONString(element));
                     definitions.add(apiDefinitionWithBLOBs);
                 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -372,7 +372,7 @@ public void deleteTestCaseByPlanId(String testPlanId) {
         testPlanTestCaseMapper.deleteByExample(testPlanTestCaseExample);
     }
 
-    private void calcTestPlanRate(List<TestPlanDTOWithMetric> testPlans) {
+    public void calcTestPlanRate(List<TestPlanDTOWithMetric> testPlans) {
         testPlans.forEach(testPlan -> {
             testPlan.setTested(0);
             testPlan.setPassed(0);

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -393,7 +393,7 @@ private void processCheckoutArguments(Element ele) {
       </Arguments>
          */
 
-        Element element = ele.addElement(ARGUMENTS);
+        Element element = hashTree.addElement(ARGUMENTS);
         element.addAttribute("guiclass", "ArgumentsPanel");
         element.addAttribute("testclass", "Arguments");
         element.addAttribute("testname", "User Defined Variables");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -161,7 +161,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         HashTree scenarioTree = tree;
         if (config != null && !config.getExcludeScenarioIds().contains(this.getId())) {
-            scenarioTree = MsCriticalSectionController.createHashTree(tree, this.getName());
+            scenarioTree = MsCriticalSectionController.createHashTree(tree, this.getName(), this.isEnable());
         }
         // 场景变量和环境变量
         Arguments arguments = arguments(config);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsCriticalSectionController.java
Patch:
@@ -17,12 +17,12 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
 
     }
 
-    public static HashTree createHashTree(HashTree tree, String name) {
+    public static HashTree createHashTree(HashTree tree, String name, boolean enable) {
         CriticalSectionController criticalSectionController = new CriticalSectionController();
         criticalSectionController.setName(StringUtils.isNotEmpty(name) ? "Csc_" + name
                 : "Scenario Critical Section Controller");
         criticalSectionController.setLockName("global_lock_" + getUUID(8));
-        criticalSectionController.setEnabled(true);
+        criticalSectionController.setEnabled(enable);
         criticalSectionController.setProperty(TestElement.TEST_CLASS, CriticalSectionController.class.getName());
         criticalSectionController.setProperty(TestElement.GUI_CLASS, "CriticalSectionControllerGui");
         return tree.add(criticalSectionController);

File: backend/src/main/java/io/metersphere/track/controller/TestCaseReviewController.java
Patch:
@@ -21,7 +21,6 @@
 import io.metersphere.track.request.testreview.*;
 import io.metersphere.track.service.TestCaseCommentService;
 import io.metersphere.track.service.TestCaseReviewService;
-import io.metersphere.track.service.TestCaseService;
 import io.metersphere.track.service.TestReviewProjectService;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.web.bind.annotation.*;
@@ -157,7 +156,7 @@ public void editTestFollows(@RequestBody SaveTestCaseReviewRequest testCaseRevie
     @PostMapping("/comment/save")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
     @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE_REVIEW, type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseCommentService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, target = "#targetClass.getTestCase(#request.caseId)", targetClass = TestCaseService.class,
+    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, target = "#targetClass.getTestReview(#request.reviewId)", targetClass = TestCaseReviewService.class,
             event = NoticeConstants.Event.COMMENT, mailTemplate = "track/TestCaseComment", subject = "测试评审通知")
     public TestCaseComment saveComment(@RequestBody SaveCommentRequest request) {
         request.setId(UUID.randomUUID().toString());

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -263,6 +263,7 @@ public void createSchedule(ScheduleRequest request) {
             schedule.setProjectId(testPlan.getProjectId());
             schedule.setGroup(ScheduleGroup.TEST_PLAN_TEST.name());
             schedule.setType(ScheduleType.CRON.name());
+            schedule.setConfig(request.getConfig());
             jobKey = TestPlanTestJob.getJobKey(request.getResourceId());
             triggerKey = TestPlanTestJob.getTriggerKey(request.getResourceId());
             clazz = TestPlanTestJob.class;

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -213,7 +213,7 @@ public List<User> getWsMemberList(@PathVariable String workspaceId) {
      * 修改当前用户密码
      * */
     @PostMapping("/update/password")
-    @MsAuditLog(module = "system_user", type = OperLogConstants.UPDATE, title = "个人密码")
+    @MsAuditLog(module = OperLogModule.SYSTEM_USER, type = OperLogConstants.UPDATE, title = "个人密码")
     public int updateCurrentUserPassword(@RequestBody EditPassWordRequest request) {
         return userService.updateCurrentUserPassword(request);
     }

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.notice.controller;
 
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.notice.domain.MessageDetail;
 import io.metersphere.notice.service.NoticeService;
@@ -16,7 +17,7 @@ public class NoticeController {
     private NoticeService noticeService;
 
     @PostMapping("save/message/task")
-    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_MESSAGE_SETTINGS, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
     public void saveMessage(@RequestBody MessageDetail messageDetail) {
         noticeService.saveMessageTask(messageDetail);
     }
@@ -32,7 +33,7 @@ public List<MessageDetail> searchMessageSchedule(@PathVariable String testId) {
     }
 
     @GetMapping("/delete/message/{identification}")
-    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_MESSAGE_SETTINGS, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
     public int deleteMessage(@PathVariable String identification) {
         return noticeService.delMessage(identification);
     }

File: backend/src/main/java/io/metersphere/commons/utils/FileUtils.java
Patch:
@@ -222,10 +222,10 @@ public static void getFiles(HashTree tree, List<BodyFile> files) {
                 }
             } else if (key instanceof CSVDataSet) {
                 CSVDataSet source = (CSVDataSet) key;
-                if (source != null && source.getFilename() != null) {
+                if (source != null && StringUtils.isNotEmpty(source.getPropertyAsString("filename"))) {
                     BodyFile file = new BodyFile();
-                    file.setId(source.getFilename());
-                    file.setName(source.getFilename());
+                    file.setId(source.getPropertyAsString("filename"));
+                    file.setName(source.getPropertyAsString("filename"));
                     files.add(file);
                 }
             }

File: backend/src/main/java/io/metersphere/track/issue/domain/jira/JiraIssueProject.java
Patch:
@@ -3,10 +3,13 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class JiraIssueProject {
     private String id;
     private String name;
     private String key;
+    private List<JiraIssueType> issueTypes;
 }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -192,7 +192,7 @@ public List<ScenarioIdProjectInfo> getApiScenarioProjectIdByConditions(@RequestB
 
     @PostMapping("/getApiScenarios")
     public List<ApiScenarioDTO> getApiScenarios(@RequestBody List<String> ids) {
-        return apiAutomationService.getApiScenarios(ids);
+        return apiAutomationService.getNewApiScenarios(ids);
     }
 
     @PostMapping(value = "/run/debug")

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.api.service.ApiScenarioReportService;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.log.annotation.MsAuditLog;
@@ -44,15 +45,15 @@ public String update(@RequestBody APIScenarioReportResult node) {
     }
 
     @PostMapping("/delete")
-    @MsAuditLog(module = "api_automation_report", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = ApiScenarioReportService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION_REPORT, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = ApiScenarioReportService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.get(#request.id)", targetClass = ApiScenarioReportService.class,
             mailTemplate = "api/ReportDelete", subject = "接口报告通知")
     public void delete(@RequestBody DeleteAPIReportRequest request) {
         apiReportService.delete(request);
     }
 
     @PostMapping("/batch/delete")
-    @MsAuditLog(module = "api_automation_report", type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#reportRequest.ids)", msClass = ApiScenarioReportService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION_REPORT, type = OperLogConstants.BATCH_DEL, beforeEvent = "#msClass.getLogDetails(#reportRequest.ids)", msClass = ApiScenarioReportService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.API_REPORT_TASK, event = NoticeConstants.Event.DELETE, target = "#targetClass.getByIds(#request.ids)", targetClass = ApiScenarioReportService.class,
             mailTemplate = "api/ReportDelete", subject = "接口报告通知")
     public void deleteAPIReportBatch(@RequestBody APIReportBatchRequest request) {

File: backend/src/main/java/io/metersphere/api/controller/ApiScenarioModuleController.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.api.service.ApiScenarioModuleService;
 import io.metersphere.base.domain.ApiScenarioModule;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
 import org.springframework.web.bind.annotation.*;
@@ -46,14 +47,14 @@ public List<ApiScenarioModuleDTO> getNodeByPlanId(@PathVariable String planId) {
     }
 
     @PostMapping("/delete")
-    @MsAuditLog(module = "api_automation", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#nodeIds)", msClass = ApiScenarioModuleService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#nodeIds)", msClass = ApiScenarioModuleService.class)
     public int deleteNode(@RequestBody List<String> nodeIds) {
         //nodeIds 包含删除节点ID及其所有子节点ID
         return apiScenarioModuleService.deleteNode(nodeIds);
     }
 
     @PostMapping("/drag")
-    @MsAuditLog(module = "api_automation", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#node)", title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
+    @MsAuditLog(module = OperLogModule.API_AUTOMATION, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#node)", title = "#node.name", content = "#msClass.getLogDetails(#node)", msClass = ApiScenarioModuleService.class)
     public void dragNode(@RequestBody DragApiScenarioModuleRequest node) {
         apiScenarioModuleService.dragNode(node);
     }

File: backend/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.controller;
 
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.commons.constants.UserSource;
 import io.metersphere.commons.user.SessionUser;
 import io.metersphere.commons.utils.RsaKey;
@@ -50,7 +51,7 @@ public ResultHolder isLogin() throws NoSuchAlgorithmException {
     }
 
     @PostMapping(value = "/signin")
-    @MsAuditLog(module = "auth_title", type = OperLogConstants.LOGIN, title = "登录")
+    @MsAuditLog(module = OperLogModule.AUTH_TITLE, type = OperLogConstants.LOGIN, title = "登录")
     public ResultHolder login(@RequestBody LoginRequest request) {
         SessionUser sessionUser = SessionUtils.getUser();
         if (sessionUser != null) {
@@ -68,7 +69,7 @@ public ResultHolder currentUser() {
     }
 
     @GetMapping(value = "/signout")
-    @MsAuditLog(module = "auth_title", beforeEvent = "#msClass.getUserId(id)", type = OperLogConstants.LOGIN, title = "登出", msClass = SessionUtils.class)
+    @MsAuditLog(module = OperLogModule.AUTH_TITLE, beforeEvent = "#msClass.getUserId(id)", type = OperLogConstants.LOGIN, title = "登出", msClass = SessionUtils.class)
     public ResultHolder logout() throws Exception {
         userService.logout();
         SecurityUtils.getSubject().logout();

File: backend/src/main/java/io/metersphere/controller/ServiceIntegrationController.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.base.domain.ServiceIntegration;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.controller.request.IntegrationRequest;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.IntegrationService;
@@ -18,7 +19,7 @@ public class ServiceIntegrationController {
     private IntegrationService integrationService;
 
     @PostMapping("/save")
-    @MsAuditLog(module = "workspace_service_integration", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#service.id)", msClass = IntegrationService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#service.id)", msClass = IntegrationService.class)
     public ServiceIntegration save(@RequestBody ServiceIntegration service) {
         return integrationService.save(service);
     }
@@ -29,7 +30,7 @@ public ServiceIntegration getByPlatform(@RequestBody IntegrationRequest request)
     }
 
     @PostMapping("/delete")
-    @MsAuditLog(module = "workspace_service_integration", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = IntegrationService.class)
+    @MsAuditLog(module = OperLogModule.WORKSPACE_SERVICE_INTEGRATION, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#request.id)", msClass = IntegrationService.class)
     public void delete(@RequestBody IntegrationRequest request) {
         integrationService.delete(request);
     }

File: backend/src/main/java/io/metersphere/ldap/controller/LdapController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.ldap.controller;
 
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.controller.ResultHolder;
 import io.metersphere.controller.request.LoginRequest;
 import io.metersphere.ldap.service.LdapService;
@@ -16,7 +17,7 @@ public class LdapController {
     private LdapService ldapService;
 
     @PostMapping(value = "/signin")
-    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.LOGIN, title = "LDAP")
+    @MsAuditLog(module = OperLogModule.SYSTEM_PARAMETER_SETTING, type = OperLogConstants.LOGIN, title = "LDAP")
     public ResultHolder login(@RequestBody LoginRequest request) {
         return ldapService.login(request);
     }
@@ -27,7 +28,7 @@ public void testConnect() {
     }
 
     @PostMapping("/test/login")
-    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.LOGIN, title = "LDAP")
+    @MsAuditLog(module = OperLogModule.SYSTEM_PARAMETER_SETTING, type = OperLogConstants.LOGIN, title = "LDAP")
     public void testLogin(@RequestBody LoginRequest request) {
         ldapService.authenticate(request);
     }

File: backend/src/main/java/io/metersphere/log/aspect/MsLogAspect.java
Patch:
@@ -137,7 +137,7 @@ public void saveLog(JoinPoint joinPoint) {
                 // 项目ID
                 msOperLog.setProjectId(msLog.project());
 
-                String module = Translator.get(msLog.module());
+                String module = msLog.module();
                 msOperLog.setOperModule(StringUtils.isNotEmpty(module) ? module : msLog.module());
                 //获取方法参数名
                 String[] params = discoverer.getParameterNames(method);

File: backend/src/main/java/io/metersphere/track/controller/IssueCommentController.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.IssueComment;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.commons.constants.PermissionConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.notice.annotation.SendNotice;
@@ -42,14 +43,14 @@ public List<IssueCommentDTO> getComments(@PathVariable String issueId) {
 
     @GetMapping("/delete/{commentId}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
-    @MsAuditLog(module = "track_bug", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#commentId)", msClass = TestCaseCommentService.class)
+    @MsAuditLog(module = OperLogModule.TRACK_BUG, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#commentId)", msClass = TestCaseCommentService.class)
     public void deleteComment(@PathVariable String commentId) {
         issueCommentService.delete(commentId);
     }
 
     @PostMapping("/edit")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
-    @MsAuditLog(module = "track_bug", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseCommentService.class)
+    @MsAuditLog(module = OperLogModule.TRACK_BUG, type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseCommentService.class)
     public IssueComment editComment(@RequestBody SaveIssueCommentRequest request) {
        return issueCommentService.edit(request);
     }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseIssuesController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.track.controller;
 
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.track.dto.TestCaseDTO;
 import io.metersphere.track.request.issues.IssuesRelevanceRequest;
@@ -26,7 +27,7 @@ public List<TestCaseDTO> list(@RequestBody IssuesRelevanceRequest request) {
     }
 
     @PostMapping("/relate")
-    @MsAuditLog(module = "track_test_case", type = OperLogConstants.ASSOCIATE_ISSUE, content = "#msClass.getLogDetails(#request)", msClass = TestCaseIssueService.class)
+    @MsAuditLog(module = OperLogModule.TRACK_TEST_CASE, type = OperLogConstants.ASSOCIATE_ISSUE, content = "#msClass.getLogDetails(#request)", msClass = TestCaseIssueService.class)
     public void relate(@RequestBody IssuesRelevanceRequest request) {
         testCaseIssueService.relate(request);
     }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanReportController.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.TestPlanReport;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.OperLogModule;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
@@ -66,7 +67,7 @@ public String getStatus(@PathVariable String planId) {
     }
 
     @PostMapping("/delete")
-    @MsAuditLog(module = "track_report", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#testPlanReportIdList)", msClass = TestPlanReportService.class)
+    @MsAuditLog(module = OperLogModule.TRACK_REPORT, type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#testPlanReportIdList)", msClass = TestPlanReportService.class)
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_REPORT_TASK, target = "#targetClass.getReports(#testPlanReportIdList)", targetClass = TestPlanReportService.class,
             event = NoticeConstants.Event.DELETE, mailTemplate = "track/ReportDelete", subject = "报告通知")
     public void delete(@RequestBody List<String> testPlanReportIdList) {

File: backend/src/main/java/io/metersphere/notice/sender/SendNoticeAspect.java
Patch:
@@ -179,6 +179,7 @@ private Map<String, Object> getParamMap(Map resource) {
         BaseSystemConfigDTO baseSystemConfigDTO = systemParameterService.getBaseInfo();
         paramMap.put("url", baseSystemConfigDTO.getUrl());
         paramMap.put("operator", SessionUtils.getUser().getName());
+        paramMap.put("planShareUrl", ""); // 占位符
         paramMap.putAll(resource);
         return paramMap;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -238,7 +238,7 @@ public TestCaseReview editCaseReview(SaveTestCaseReviewRequest testCaseReview) {
         testCaseReview.setUpdateTime(System.currentTimeMillis());
         checkCaseReviewExist(testCaseReview);
         testCaseReviewMapper.updateByPrimaryKeySelective(testCaseReview);
-        return testCaseReview;
+        return testCaseReviewMapper.selectByPrimaryKey(testCaseReview.getId());
     }
 
     private void editCaseReviewer(SaveTestCaseReviewRequest testCaseReview) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -161,10 +161,9 @@ private DubboSample dubboSample(ParameterConfig config) {
                 String testName = testNameArr[0];
                 sampler.setName(testName);
             }
-        } else {
-            sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
-            sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         }
+        sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
+        sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         ElementUtil.setBaseParams(sampler, this.getParent(), config, this.getId(), this.getIndex());
         sampler.addTestElement(configCenter(this.getConfigCenter()));
         sampler.addTestElement(registryCenter(this.getRegistryCenter()));

File: backend/src/main/java/io/metersphere/performance/engine/EngineFactory.java
Patch:
@@ -349,7 +349,7 @@ public static byte[] mergeJmx(List<FileMetadata> jmxFiles) {
                 //
                 inputSource.close();
             }
-            return EngineSourceParserFactory.formatXml(rootDocument);
+            return EngineSourceParserFactory.getBytes(rootDocument);
         } catch (Exception e) {
             MSException.throwException(e);
         }

File: backend/src/main/java/io/metersphere/performance/parse/EngineSourceParserFactory.java
Patch:
@@ -38,8 +38,8 @@ public static Document getDocument(InputStream source) throws DocumentException
         return reader.read(source);
     }
 
-    public static byte[] formatXml(Document document) throws Exception {
-        OutputFormat format = OutputFormat.createPrettyPrint();
+    public static byte[] getBytes(Document document) throws Exception {
+        OutputFormat format = OutputFormat.createCompactFormat();
         try (
                 ByteArrayOutputStream out = new ByteArrayOutputStream();
         ) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/JmeterDocumentParser.java
Patch:
@@ -62,7 +62,7 @@ public byte[] parse(EngineContext context, InputStream source) throws Exception
             parseHashTree(ele);
         }
 
-        return EngineSourceParserFactory.formatXml(document);
+        return EngineSourceParserFactory.getBytes(document);
     }
 
 

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -194,12 +194,14 @@ private void sendTask(ApiTestReportVariable report, String testId) {
         if (StringUtils.equals("error", report.getStatus())) {
             event = NoticeConstants.Event.EXECUTE_FAILED;
         }
+        ApiScenarioWithBLOBs scenario = apiScenarioMapper.selectByPrimaryKey(testId);
         Map paramMap = new HashMap<>();
         paramMap.put("type", "api");
         paramMap.put("url", baseSystemConfigDTO.getUrl());
         paramMap.put("reportUrl", reportUrl);
         paramMap.put("operator", report.getExecutor());
         paramMap.putAll(new BeanMap(report));
+        paramMap.putAll(new BeanMap(scenario));
         NoticeModel noticeModel = NoticeModel.builder()
                 .operator(report.getUserId())
                 .successContext(successContext)

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -153,8 +153,6 @@ public class TestCaseService {
     @Resource
     private MinderExtraNodeService minderExtraNodeService;
     @Resource
-    private ProjectVersionService projectVersionService;
-    @Resource
     @Lazy
     private IssuesService issuesService;
     @Resource

File: backend/src/main/java/io/metersphere/service/NodeTreeService.java
Patch:
@@ -170,7 +170,7 @@ protected void createNodeByPath(Iterator<String> pathIterator, String nodeName,
 
         path.append("/" + nodeName);
 
-        String pid = null;
+        String pid;
         //创建过不创建
         if (pathMap.get(path.toString()) != null) {
             pid = pathMap.get(path.toString());

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -405,7 +405,7 @@ public Map<String, String> createNodes(List<String> nodePaths, String projectId)
             List<String> nodeNameList = new ArrayList<>(Arrays.asList(item.split("/")));
             Iterator<String> itemIterator = nodeNameList.iterator();
             Boolean hasNode = false;
-            String rootNodeName = null;
+            String rootNodeName;
 
             if (nodeNameList.size() <= 1) {
                 throw new ExcelException(Translator.get("test_case_create_module_fail") + ":" + item);

File: backend/src/main/java/io/metersphere/commons/utils/ErrorReportLibraryUtil.java
Patch:
@@ -26,9 +26,9 @@ public static ErrorReportLibraryParseDTO parseAssertions(RequestResult result) {
                 if (StringUtils.startsWith(assertion.getContent(), ERROR_CODE_START)) {
                     errorReportAssertionList.add(assertion);
                 }else {
+                    otherAssertionCount ++;
                     if(!assertion.isPass()){
                         hasOtherErrorAssertion = true;
-                        otherAssertionCount ++;
                     }
                 }
             }

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -467,6 +467,7 @@ public ApiModule getModuleByName(String projectId, String protocol) {
             node.setCreateTime(System.currentTimeMillis());
             node.setUpdateTime(System.currentTimeMillis());
             node.setId(UUID.randomUUID().toString());
+            node.setCreateUser(SessionUtils.getUserId());
             apiModuleMapper.insertSelective(node);
             return node;
         }
@@ -538,6 +539,7 @@ public ApiModule getDefaultNode(String projectId,String protocol) {
             record.setCreateTime(System.currentTimeMillis());
             record.setUpdateTime(System.currentTimeMillis());
             record.setProjectId(projectId);
+            record.setCreateUser(SessionUtils.getUserId());
             apiModuleMapper.insert(record);
             return record;
         }else {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -465,6 +465,7 @@ public ApiScenarioModule getDefaultNode(String projectId) {
             record.setCreateTime(System.currentTimeMillis());
             record.setUpdateTime(System.currentTimeMillis());
             record.setProjectId(projectId);
+            record.setCreateUser(SessionUtils.getUserId());
             apiScenarioModuleMapper.insert(record);
             return  record;
         }else {

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -404,7 +404,6 @@ private TestCaseWithBLOBs convert2TestCase(TestCaseExcelData data) {
         testCase.setTags(modifiedTags);
         testCase.setType("functional");
 
-        JSONArray customArr = new JSONArray();
         String caseStatusValue = "";
         if (StringUtils.equalsAnyIgnoreCase(data.getStatus(), "Underway", "进行中", "進行中")) {
             caseStatusValue = "Underway";

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -648,7 +648,7 @@ public List<ApiTestCase> selectCasesBydIds(List<String> caseIds) {
 
     public List<ApiTestCaseWithBLOBs> selectCasesBydApiIds(List<String> apiIds) {
         ApiTestCaseExample example = new ApiTestCaseExample();
-        example.createCriteria().andApiDefinitionIdIn(apiIds);
+        example.createCriteria().andApiDefinitionIdIn(apiIds).andStatusNotEqualTo("Trash");
         return apiTestCaseMapper.selectByExampleWithBLOBs(example);
     }
 

File: backend/src/main/java/io/metersphere/commons/utils/ErrorReportLibraryUtil.java
Patch:
@@ -21,12 +21,14 @@ public static ErrorReportLibraryParseDTO parseAssertions(RequestResult result) {
         if (result != null && result.getResponseResult() != null && CollectionUtils.isNotEmpty(result.getResponseResult().getAssertions())) {
             List<ResponseAssertionResult> errorReportAssertionList = new ArrayList<>();
             boolean hasOtherErrorAssertion = false;
+            int otherAssertionCount = 0;
             for (ResponseAssertionResult assertion : result.getResponseResult().getAssertions()) {
                 if (StringUtils.startsWith(assertion.getContent(), ERROR_CODE_START)) {
                     errorReportAssertionList.add(assertion);
                 }else {
                     if(!assertion.isPass()){
                         hasOtherErrorAssertion = true;
+                        otherAssertionCount ++;
                     }
                 }
             }
@@ -46,7 +48,7 @@ public static ErrorReportLibraryParseDTO parseAssertions(RequestResult result) {
                     if (result.getResponseResult() != null
                             && StringUtils.equalsIgnoreCase(result.getResponseResult().getResponseCode(), "200")
                             && result.getError() > 0) {
-                        if(!hasOtherErrorAssertion){
+                        if(otherAssertionCount == 0 || !hasOtherErrorAssertion){
                             result.setError(result.getError() - 1);
                         }
                     }

File: backend/src/main/java/io/metersphere/commons/utils/ResponseUtil.java
Patch:
@@ -15,11 +15,12 @@
 public class ResponseUtil {
 
     public static RequestResultExpandDTO parseByRequestResult(RequestResult requestResult) {
+        //解析是否含有误报库信息
+        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(requestResult);
+
         RequestResultExpandDTO expandDTO = new RequestResultExpandDTO();
         BeanUtils.copyBean(expandDTO, requestResult);
 
-        //解析是否含有误报库信息
-        ErrorReportLibraryParseDTO errorCodeDTO = ErrorReportLibraryUtil.parseAssertions(requestResult);
         if(CollectionUtils.isNotEmpty(errorCodeDTO.getErrorCodeList())){
             Map<String, String> expandMap = new HashMap<>();
             expandDTO.setStatus(ExecuteResult.errorReportResult.name());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1887,7 +1887,8 @@ private boolean editCustomFieldsPriority(TestCaseWithBLOBs dbCase, String priori
 
     public List<TestCase> getTestCaseByProjectId(String projectId) {
         TestCaseExample example = new TestCaseExample();
-        example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash");
+        example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andLatestEqualTo(true);
+        example.or().andProjectIdEqualTo(projectId).andStatusIsNull().andLatestEqualTo(true);
         return testCaseMapper.selectByExample(example);
     }
 

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -143,6 +143,6 @@ public void remakeScenario(String runMode, String scenarioId, ApiScenarioWithBLO
             apiScenarioMapper.updateByPrimaryKey(scenarioWithBLOBs);
         }
         report.setStatus(APITestStatus.Error.name());
-        apiScenarioReportMapper.insert(report);
+        apiScenarioReportMapper.updateByPrimaryKeySelective(report);
     }
 }

File: backend/src/main/java/io/metersphere/base/mapper/TestCaseReviewTestCaseMapper.java
Patch:
@@ -27,4 +27,4 @@ public interface TestCaseReviewTestCaseMapper {
     int updateByPrimaryKeySelective(TestCaseReviewTestCase record);
 
     int updateByPrimaryKey(TestCaseReviewTestCase record);
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.TestCase;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.track.dto.PlanReportCaseDTO;
 import io.metersphere.track.dto.TestCaseReportStatusResultDTO;
@@ -68,4 +69,6 @@ public interface ExtTestPlanTestCaseMapper {
     Long getPreOrder(@Param("planId")String planId, @Param("baseOrder") Long baseOrder);
 
     Long getLastOrder(@Param("planId")String planId, @Param("baseOrder") Long baseOrder);
+
+    List<TestCase> getTestCaseWithNodeInfo(@Param("planId") String planId);
 }

File: backend/src/main/java/io/metersphere/api/dto/shell/filter/ScriptFilter.java
Patch:
@@ -28,6 +28,9 @@ private static void blackList(StringBuffer buffer, String script, String path) {
     }
 
     public static void verify(String language, String label, String script) {
+        if(language == null){
+            language = "";
+        }
         if (StringUtils.isNotEmpty(script)) {
             final StringBuffer buffer = new StringBuffer();
             switch (language) {

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -405,7 +405,7 @@ public void saveFollows(String testId, List<String> follows) {
     private ApiTestCase createTest(SaveApiTestCaseRequest request, List<MultipartFile> bodyFiles) {
         checkNameExist(request);
         FileUtils.createBodyFiles(request.getId(), bodyFiles);
-
+        request.setRequest(tcpApiParamService.parseMsTestElement(request.getRequest()));
         if (StringUtils.isNotEmpty(request.getEsbDataStruct()) || StringUtils.isNotEmpty(request.getBackEsbDataStruct())) {
             request = esbApiParamService.handleEsbRequest(request);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -169,15 +169,15 @@ && isDataSource(config.getConfig().get(this.getProjectId()).getDatabaseConfigs()
             environmentId = this.useEnvironment;
         }
         //根据配置将脚本放置在私有脚本之前
-        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.JDBC.name(), environmentId, config, false);
+        JMeterScriptUtil.setScriptByEnvironmentConfig(envConfig, samplerHashTree, GlobalScriptFilterRequest.JDBC.name(), environmentId, config, false);
 
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {
                 el.toHashTree(samplerHashTree, el.getHashTree(), config);
             });
         }
         //根据配置将脚本放置在私有脚本之后
-        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.JDBC.name(), environmentId, config, true);
+        JMeterScriptUtil.setScriptByEnvironmentConfig(envConfig, samplerHashTree, GlobalScriptFilterRequest.JDBC.name(), environmentId, config, true);
 
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -164,7 +164,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             environmentId = this.useEnvironment;
         }
         //根据配置将脚本放置在私有脚本之前
-        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), environmentId, config, false);
+        JMeterScriptUtil.setScriptByEnvironmentConfig(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), environmentId, config, false);
 
         HashTreeUtil hashTreeUtil = new HashTreeUtil();
 
@@ -179,7 +179,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             });
         }
         //根据配置将脚本放置在私有脚本之后
-        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), environmentId, config, true);
+        JMeterScriptUtil.setScriptByEnvironmentConfig(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), environmentId, config, true);
     }
 
     private boolean setRefElement() {

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsScenarioParser.java
Patch:
@@ -56,7 +56,7 @@ public ScenarioImport parse(InputStream source, ApiTestImportRequest request) {
     protected ApiScenarioWithBLOBs parsePluginFormat(JSONObject testObject, ApiTestImportRequest importRequest) {
         LinkedList<MsTestElement> results = new LinkedList<>();
         testObject.keySet().forEach(tag -> {
-            results.addAll(parseMsHTTPSamplerProxy(testObject, tag));
+            results.addAll(parseMsHTTPSamplerProxy(testObject, tag, true));
         });
         MsScenario msScenario = new MsScenario();
         msScenario.setName(importRequest.getFileName());

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -38,7 +38,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
             }
         }
 
-        if (testObject.get("projectName") != null || testObject.get("projectId") != null ) {//  metersphere 格式导入
+        if (testObject.get("projectName") != null || testObject.get("projectId") != null) {//  metersphere 格式导入
             return parseMsFormat(testStr, request);
         } else {    //  chrome 插件录制格式导入
             request.setPlatform(ApiImportPlatform.Plugin.name());
@@ -56,7 +56,7 @@ protected List<ApiDefinitionWithBLOBs> parsePluginFormat(JSONObject testObject,
             if (isCreateModule) {
                 moduleId = ApiDefinitionImportUtil.buildModule(this.selectModule, tag, this.projectId).getId();
             }
-            List<MsHTTPSamplerProxy> msHTTPSamplerProxies = parseMsHTTPSamplerProxy(testObject, tag);
+            List<MsHTTPSamplerProxy> msHTTPSamplerProxies = parseMsHTTPSamplerProxy(testObject, tag, false);
             for (MsHTTPSamplerProxy msHTTPSamplerProxy : msHTTPSamplerProxies) {
                 ApiDefinitionWithBLOBs apiDefinition = buildApiDefinition(msHTTPSamplerProxy.getId(), msHTTPSamplerProxy.getName(), msHTTPSamplerProxy.getPath(), msHTTPSamplerProxy.getMethod(), importRequest);
                 apiDefinition.setModuleId(moduleId);
@@ -161,7 +161,7 @@ private void parseModule(String modulePath, ApiTestImportRequest importRequest,
                 String path = apiDefinition.getModulePath() == null ? "" : apiDefinition.getModulePath();
                 if (StringUtils.isNotBlank(this.selectModulePath)) {
                     apiDefinition.setModulePath(this.selectModulePath + path);
-                } else if (StringUtils.isBlank(importRequest.getModuleId())){
+                } else if (StringUtils.isBlank(importRequest.getModuleId())) {
                     apiDefinition.setModulePath("/未规划接口" + path);
                 }
             }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1571,7 +1571,7 @@ private void screenScenariosByStatusAndReportConfig(TestPlanSimpleReportDTO repo
             List<TestPlanFailureScenarioDTO> failureScenarios = new ArrayList<>();
             List<TestPlanFailureScenarioDTO> errorReportScenarios = new ArrayList<>();
             for (TestPlanFailureScenarioDTO scenario : scenarios) {
-                if (StringUtils.equalsIgnoreCase(scenario.getLastResult(), "Fail")) {
+                if (StringUtils.equalsAnyIgnoreCase(scenario.getLastResult(), "Fail", "Error")) {
                     failureScenarios.add(scenario);
                 } else if (StringUtils.equalsIgnoreCase(scenario.getLastResult(), ExecuteResult.errorReportResult.name())) {
                     errorReportScenarios.add(scenario);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1625,7 +1625,7 @@ public void buildLoadReport(TestPlanSimpleReportDTO report, JSONObject config, M
                 if (!CollectionUtils.isEmpty(allCases)) {
                     failureCases = allCases.stream()
                             .filter(i -> StringUtils.isNotBlank(i.getStatus())
-                                    && i.getStatus().equals("error"))
+                                    && StringUtils.equalsAnyIgnoreCase(i.getStatus(), "error"))
                             .collect(Collectors.toList());
                 }
                 report.setLoadFailureCases(failureCases);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -509,6 +509,7 @@ public static void mergeHashTree(JSONObject element, JSONArray targetHashTree) {
             if (CollectionUtils.isNotEmpty(targetHashTree)) {
                 for (int i = 0; i < targetHashTree.size(); i++) {
                     JSONObject item = targetHashTree.getJSONObject(i);
+                    item.put("disabled", true);
                     if (StringUtils.isNotEmpty(item.getString("id"))) {
                         updateMap.put(item.getString("id"), item);
                     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -167,6 +167,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         Arguments arguments = arguments(config);
         if (arguments != null) {
             Arguments valueSupposeMock = ParameterConfig.valueSupposeMock(arguments);
+            // 这里加入自定义变量解决ForEach循环控制器取值问题，循环控制器无法从vars中取值
+            scenarioTree.add(valueSupposeMock);
             scenarioTree.add(ElementUtil.argumentsToProcessor(valueSupposeMock));
         }
         ElementUtil.addCsvDataSet(scenarioTree, variables, config, "shareMode.group");

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -47,7 +47,7 @@ public class TestCaseNoModelDataListener extends AnalysisEventListener<Map<Integ
     /**
      * 每隔2000条存储数据库，然后清理list ，方便内存回收
      */
-    protected static final int BATCH_COUNT = 2000;
+    protected static final int BATCH_COUNT = 5000;
 
     private TestCaseService testCaseService;
 
@@ -158,7 +158,7 @@ public String validate(TestCaseExcelData data, String errMsg) {
             if (data.getCustomNum() == null) {
                 stringBuilder.append(Translator.get("id_required") + ";");
             } else {
-                String customId = data.getCustomNum().toString();
+                String customId = data.getCustomNum();
                 if (StringUtils.isEmpty(customId)) {
                     stringBuilder.append(Translator.get("id_required") + ";");
                 } else if (customIds.contains(customId)) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -80,6 +80,7 @@ public List<TestPlanApiCaseDTO> list(ApiTestCaseRequest request) {
         request.setProjectId(null);
         request.setOrders(ServiceUtils.getDefaultSortOrder(request.getOrders()));
         List<TestPlanApiCaseDTO> apiTestCases = extTestPlanApiCaseMapper.list(request);
+        ServiceUtils.buildVersionInfo(apiTestCases);
         if (CollectionUtils.isEmpty(apiTestCases)) {
             return apiTestCases;
         }
@@ -244,6 +245,7 @@ public List<TestPlanApiCaseDTO> selectAllTableRows(TestPlanApiCaseBatchRequest r
         ApiTestCaseRequest selectReq = new ApiTestCaseRequest();
         selectReq.setIds(ids);
         List<TestPlanApiCaseDTO> returnList = extTestPlanApiCaseMapper.list(selectReq);
+        ServiceUtils.buildVersionInfo(returnList);
         return returnList;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -59,7 +59,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         script = StringUtils.replace(script, RunningParamKeys.API_ENVIRONMENT_ID, "\"" + RunningParamKeys.RUNNING_PARAMS_PREFIX + this.getEnvironmentId() + ".\"");
 
-        if(config.isOperating()){
+        if (config.isOperating()) {
             if (script.startsWith("io.metersphere.utils.JMeterVars.addVars")) {
                 return;
             }
@@ -76,7 +76,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         } else {
             processor.setName("JSR223Processor");
         }
-        ElementUtil.setBaseParams(processor, this.getParent(), config, this.getId(), this.getIndex());
+        String resourceId = StringUtils.isNotEmpty(this.getId()) ? this.getId() : this.getResourceId();
+        ElementUtil.setBaseParams(processor, this.getParent(), config, resourceId, this.getIndex());
         processor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         processor.setProperty("scriptLanguage", this.getScriptLanguage());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1780,7 +1780,7 @@ public long countEffectiveByProjectId(String projectId) {
             return 0;
         } else {
             ApiDefinitionExample example = new ApiDefinitionExample();
-            example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash");
+            example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash").andLatestEqualTo(true);
             return apiDefinitionMapper.countByExample(example);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1961,6 +1961,7 @@ public void batchCopy(ApiScenarioBatchRequest request) {
                 api.setUpdateTime(System.currentTimeMillis());
                 api.setRefId(api.getId());
                 api.setNum(nextNum++);
+                api.setCustomNum(String.valueOf(api.getNum()));
                 mapper.insert(api);
                 if (i % 50 == 0)
                     sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/commons/json/JSONToDocumentUtils.java
Patch:
@@ -5,6 +5,7 @@
 import com.alibaba.fastjson.JSONObject;
 import io.metersphere.api.dto.definition.request.assertions.document.DocumentElement;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.utils.DocumentUtils;
 import net.sf.json.util.JSONTokener;
 import org.apache.commons.lang3.StringUtils;
 import org.dom4j.Document;
@@ -67,6 +68,8 @@ public static void jsonDataFormatting(JSONObject object, List<DocumentElement> c
                         type = "integer";
                     } else if (isNumber(value.toString())) {
                         type = "number";
+                    } else if (StringUtils.equalsIgnoreCase(DocumentUtils.getType(value), "boolean")) {
+                        type = "boolean";
                     }
                 }
                 children.add(new DocumentElement(key, type, value, null));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -580,7 +580,8 @@ public static String getResourceId(String resourceId, ParameterConfig config, Ms
     public static JSR223PreProcessor argumentsToProcessor(Arguments arguments) {
         JSR223PreProcessor processor = new JSR223PreProcessor();
         processor.setEnabled(true);
-        processor.setName("scene variable");
+        processor.setName("User Defined Variables");
+        processor.setProperty("scriptLanguage", "beanshell");
         processor.setProperty(TestElement.TEST_CLASS, JSR223PreProcessor.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         StringBuffer script = new StringBuffer();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -57,7 +57,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.UUID;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
@@ -533,7 +532,7 @@ private void addCertificate(ParameterConfig config, HashTree httpSamplerTree) {
                 }
 
                 if (StringUtils.isNotEmpty(this.alias)) {
-                    String aliasVar = UUID.randomUUID().toString();
+                    String aliasVar = "User-Defined-KeyStore-" + this.alias.trim();
                     this.addArguments(httpSamplerTree, aliasVar, this.alias.trim());
                     // 校验 keystore
                     commandService.checkKeyStore(msKeyStore.getPassword(), msKeyStore.getPath());
@@ -744,7 +743,7 @@ private Arguments getConfigArguments(ParameterConfig config) {
     private void addArguments(HashTree tree, String key, String value) {
         Arguments arguments = new Arguments();
         arguments.setEnabled(true);
-        arguments.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "-KeyStoreAlias" : "KeyStoreAlias");
+        arguments.setName("User Defined KeyStoreAlias");
         arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());
         arguments.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ArgumentsPanel"));
         arguments.addArgument(key, value, "=");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -2452,6 +2452,8 @@ public void deleteTestCaseByVersion(String refId, String version) {
      * @param versionId
      */
     private void checkAndSetLatestVersion(String refId, String versionId, String projectId) {
+        if (StringUtils.isAnyBlank(refId, versionId, projectId))
+            return;
         TestCaseExample e = new TestCaseExample();
         e.createCriteria().andRefIdEqualTo(refId).andLatestEqualTo(true);
         //如果因为删除导致没有了最新的版本，则按照版本创建顺序选择一个版本为最新版本

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -144,7 +144,7 @@ public interface ExtTestCaseMapper {
 
     int addLatestVersion(@Param("refId") String refId);
 
-    int clearLatestVersion(@Param("refId") String refId);
+    int clearLatestVersion(@Param("refId") String refId, @Param("projectId") String projectId);
 
     int setLatestVersion(@Param("refId") String refId, @Param("versionId") String versionId);
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -871,6 +871,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
         testPlan.setHashTree(new LinkedList<>());
         ParameterConfig config = new ParameterConfig();
         config.setOperating(true);
+        config.getExcludeScenarioIds().add(apiScenario.getId());
         try {
 
             MsScenario scenario = JSONObject.parseObject(apiScenario.getScenarioDefinition(), MsScenario.class);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1950,6 +1950,9 @@ public void batchCopy(ApiBatchRequest request) {
                 api.setModulePath(request.getModulePath());
                 api.setOrder(nextOrder += ServiceUtils.ORDER_STEP);
                 api.setNum(nextNum++);
+                api.setCreateTime(System.currentTimeMillis());
+                api.setUpdateTime(System.currentTimeMillis());
+                api.setRefId(api.getId());
                 mapper.insert(api);
                 if (i % 50 == 0)
                     sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -2386,6 +2386,8 @@ public void copyTestCaseBath(TestCaseBatchRequest request) {
                 testCase.setCustomNum(String.valueOf(nextNum));
                 testCase.setNum(nextNum++);
                 testCase.setCasePublic(false);
+                testCase.setCreateTime(System.currentTimeMillis());
+                testCase.setUpdateTime(System.currentTimeMillis());
                 testCase.setRefId(id);
                 mapper.insert(testCase);
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1101,6 +1101,9 @@ public ApiDefinitionImport apiTestImport(MultipartFile file, ApiTestImportReques
         ApiDefinitionImport apiImport = null;
         try {
             apiImport = (ApiDefinitionImport) Objects.requireNonNull(runService).parse(file == null ? null : file.getInputStream(), request);
+            if(apiImport.getMocks() == null){
+                apiImport.setMocks(new ArrayList<>());
+            }
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
             String returnThrowException = e.getMessage();

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -358,7 +358,7 @@ public ResponseEntity<byte[]> downloadBodyFiles(@RequestBody ApiScenarioBatchReq
     @PostMapping(value = "/export/jmx")
     @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_READ_EXPORT_SCENARIO)
     @MsAuditLog(module = "api_automation", type = OperLogConstants.EXPORT, sourceId = "#request.id", title = "#request.name", project = "#request.projectId")
-    public List<ApiScenrioExportJmx> exportJmx(@RequestBody ApiScenarioBatchRequest request) {
+    public List<ApiScenarioExportJmxDTO> exportJmx(@RequestBody ApiScenarioBatchRequest request) {
         return apiAutomationService.exportJmx(request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioExportJmxDTO.java
Patch:
@@ -8,7 +8,7 @@
 
 @Getter
 @Setter
-public class ApiScenrioExportJmx {
+public class ApiScenarioExportJmxDTO {
     private String name;
     private String id;
     private String jmx;
@@ -17,7 +17,7 @@ public class ApiScenrioExportJmx {
     //性能测试引用场景时需要场景下的附件
     private List<FileMetadata> fileMetadataList;
 
-    public ApiScenrioExportJmx(String name, String jmx) {
+    public ApiScenarioExportJmxDTO(String name, String jmx) {
         this.name = name;
         this.jmx = jmx;
     }

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -5,7 +5,7 @@
 import com.alibaba.fastjson.TypeReference;
 import io.metersphere.api.dto.JmxInfoDTO;
 import io.metersphere.api.dto.automation.ApiScenarioBatchRequest;
-import io.metersphere.api.dto.automation.ApiScenrioExportJmx;
+import io.metersphere.api.dto.automation.ApiScenarioExportJmxDTO;
 import io.metersphere.api.service.ApiAutomationService;
 import io.metersphere.api.service.ApiTestCaseService;
 import io.metersphere.base.domain.*;
@@ -795,7 +795,7 @@ public void syncScenario(LoadTestWithBLOBs loadTest, List<ApiLoadTest> apiLoadTe
         if (!CollectionUtils.isEmpty(scenarioIds)) {
             ApiScenarioBatchRequest scenarioRequest = new ApiScenarioBatchRequest();
             scenarioRequest.setIds(scenarioIds);
-            List<ApiScenrioExportJmx> apiScenrioExportJmxes = apiAutomationService.exportJmx(scenarioRequest);
+            List<ApiScenarioExportJmxDTO> apiScenrioExportJmxes = apiAutomationService.exportJmx(scenarioRequest);
 
             deleteLoadTestFiles(loadTest.getId());
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1930,6 +1930,9 @@ public void batchCopy(ApiScenarioBatchRequest request) {
                 api.setApiScenarioModuleId(request.getApiScenarioModuleId());
                 api.setModulePath(request.getModulePath());
                 api.setOrder(nextOrder += ServiceUtils.ORDER_STEP);
+                api.setCreateTime(System.currentTimeMillis());
+                api.setUpdateTime(System.currentTimeMillis());
+                api.setRefId(api.getId());
                 api.setNum(nextNum++);
                 mapper.insert(api);
                 if (i % 50 == 0)

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -8,7 +8,6 @@
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import io.metersphere.api.dto.EnvironmentType;
-import io.metersphere.api.dto.definition.request.controller.MsCriticalSectionController;
 import io.metersphere.api.dto.definition.request.variable.ScenarioVariable;
 import io.metersphere.api.dto.mockconfig.MockConfigStaticData;
 import io.metersphere.api.dto.scenario.KeyValue;
@@ -159,7 +158,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         if (CollectionUtils.isNotEmpty(this.getVariables())) {
             config.setVariables(this.variables);
         }
-        final HashTree scenarioTree = MsCriticalSectionController.createHashTree(tree, this.getName());
+        final HashTree scenarioTree = tree;
         // 场景变量和环境变量
         Arguments arguments = arguments(config);
         if (arguments != null) {

File: backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -241,7 +241,7 @@ public static List<MsAssertions> getErrorReportByProjectId(String projectId) {
     }
 
     public static void addPositive(EnvironmentConfig envConfig, HashTree samplerHashTree, ParameterConfig config, String projectId) {
-        if (envConfig != null) {
+        if (envConfig == null) {
             return;
         }
         if (envConfig.isUseErrorCode()) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -559,6 +559,7 @@ public void setDefaultOrder(QueryTestCaseRequest request) {
         order.setName("sort");
         order.setType("desc");
         orders.add(order);
+        orders.forEach(i -> i.setPrefix("test_case"));
         request.setOrders(orders);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.api.dto.automation.*;
 import io.metersphere.api.dto.automation.parse.ScenarioImport;
 import io.metersphere.api.dto.definition.RunDefinitionRequest;
-import io.metersphere.api.exec.queue.ExecThreadPoolExecutor;
 import io.metersphere.api.service.ApiAutomationService;
 import io.metersphere.base.domain.ApiScenario;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
@@ -43,8 +42,6 @@ public class ApiAutomationController {
     private ApiAutomationService apiAutomationService;
     @Resource
     private TaskService taskService;
-    @Resource
-    private ExecThreadPoolExecutor execThreadPoolExecutor;
 
     @PostMapping("/list/{goPage}/{pageSize}")
     @RequiresPermissions("PROJECT_API_SCENARIO:READ")

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -87,6 +87,7 @@ public Pager<List<LoadTestDTO>> relevanceList(LoadCaseRequest request, int goPag
         }
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         QueryTestPlanRequest newRequest = new QueryTestPlanRequest();
+        BeanUtils.copyBean(newRequest, request);
         Map filters = new HashMap();
         filters.put("id", ids);
         newRequest.setFilters(filters);

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanScenarioRequest.java
Patch:
@@ -27,6 +27,8 @@ public class TestPlanScenarioRequest {
     private Map<String, Object> combine;
     private List<String> ids;
     private String reviewId;
+    private String versionId;
+    private String refId;
 
     /**
      * 是否选中所有数据

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinition.java
Patch:
@@ -54,8 +54,6 @@ public class ApiDefinition implements Serializable {
 
     private Long order;
 
-    private String version;
-
     private String refId;
 
     private String versionId;

File: backend/src/main/java/io/metersphere/base/domain/LoadTest.java
Patch:
@@ -34,8 +34,6 @@ public class LoadTest implements Serializable {
 
     private Long order;
 
-    private String version;
-
     private String refId;
 
     private String versionId;

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -28,8 +28,6 @@ public class ApiScenario implements Serializable {
 
     private Integer stepTotal;
 
-    private String followPeople;
-
     private String schedule;
 
     private Long createTime;

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseParallelExecuteService.java
Patch:
@@ -34,7 +34,7 @@ public void run() {
                         String reportId = result.getId();
                         HashTree hashTree = null;
                         if (!GenerateHashTreeUtil.isResourcePool(config.getResourcePoolId()).isPool()) {
-                            hashTree = apiScenarioSerialService.generateHashTree(testId, config.getEnvMap());
+                            hashTree = apiScenarioSerialService.generateHashTree(testId, result.getId(), runMode, config.getEnvMap());
                         }
                         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(testId, reportId, runMode, hashTree);
                         runRequest.setPool(GenerateHashTreeUtil.isResourcePool(config.getResourcePoolId()));

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -137,7 +137,7 @@ private void sendNotice(ApiDefinitionExecResult result) {
         }
     }
 
-    private void editStatus(ApiDefinitionExecResult saveResult, String type, String status, Long time, String reportId, String testId) {
+    public void editStatus(ApiDefinitionExecResult saveResult, String type, String status, Long time, String reportId, String testId) {
         String name = testId;
         String version = "";
         if (StringUtils.equalsAnyIgnoreCase(type, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -72,7 +72,7 @@ public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String re
         }
         HashTree hashTree;
         if (StringUtils.equalsAnyIgnoreCase(runMode, ApiRunMode.DEFINITION.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
-            hashTree = apiScenarioSerialService.generateHashTree(remoteTestId, envMap);
+            hashTree = apiScenarioSerialService.generateHashTree(remoteTestId, reportId, runMode, envMap);
         } else {
             if (scenario == null) {
                 scenario = apiScenarioMapper.selectByPrimaryKey(remoteTestId);

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1421,7 +1421,7 @@ private void updateMockExpectConfigs(MockConfig mockConfig, List<MockExpectConfi
                 mockExpect.setMockConfigId(mockConfig.getId());
                 mockExpect.setId(expectInDb.getId());
                 mockExpect.setUpdateTime(System.currentTimeMillis());
-                mockExpectConfigMapper.updateByPrimaryKey(mockExpect);
+                mockExpectConfigMapper.updateByPrimaryKeyWithBLOBs(mockExpect);
             }
 
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -63,7 +63,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             boolean isConnScenarioPost = false;
             //获取projectConfig
             String projectId = this.checkProjectId(hashTree);
-            this.checkEnvironmentConfig(projectId,config,hashTree);
+            if(StringUtils.isNotEmpty(projectId)){
+                this.checkEnvironmentConfig(projectId,config,hashTree);
+            }
             if (config.getConfig() != null) {
                 if (config.isEffective(projectId)) {
                     EnvironmentConfig environmentConfig = config.getConfig().get(projectId);

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioSerialService.java
Patch:
@@ -173,6 +173,7 @@ public HashTree generateHashTree(String testId, Map<String, String> envMap) {
                 MsThreadGroup group = new MsThreadGroup();
                 group.setLabel(caseWithBLOBs.getName());
                 group.setName(caseWithBLOBs.getName());
+                group.setProjectId(caseWithBLOBs.getProjectId());
 
                 MsTestElement testElement = parse(caseWithBLOBs, testId, envId);
                 group.setHashTree(new LinkedList<>());

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -228,6 +228,9 @@ public static void reportFormatting(List<StepTreeDTO> dtoList, Map<String, List<
             if (StringUtils.isNotEmpty(dto.getType()) && requests.contains(dto.getType()) && dto.getValue() == null) {
                 RequestResultExpandDTO requestResultExpandDTO = new RequestResultExpandDTO();
                 requestResultExpandDTO.setStatus("unexecute");
+                if(StringUtils.equalsAnyIgnoreCase(dto.getType(),"AbstractSampler")){
+                    requestResultExpandDTO.setSuccess(true);
+                }
                 requestResultExpandDTO.setName(dto.getLabel());
                 dto.setValue(requestResultExpandDTO);
             }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -67,8 +67,11 @@ public interface ExtTestCaseMapper {
 
     List<String> selectIds(@Param("request") BaseQueryRequest condition);
 
+    List<String> selectPublicIds(@Param("request") BaseQueryRequest condition);
+
     /**
      * 按照用例等级统计
+     *
      * @param projectId 项目ID
      * @return 统计结果
      */

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1466,7 +1466,7 @@ public void editTestCaseBath(TestCaseBatchRequest request) {
 
     public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
         ServiceUtils.getSelectAllIds(request, request.getCondition(),
-                (query) -> extTestCaseMapper.selectIds(query));
+                (query) -> extTestCaseMapper.selectPublicIds(query));
         List<String> ids = request.getIds();
         if (CollectionUtils.isEmpty(ids)) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImport.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.base.domain.EsbApiParamsWithBLOBs;
 import lombok.Data;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 
@@ -17,7 +18,7 @@ public class ApiDefinitionImport {
     private List<ApiDefinitionWithBLOBs> data;
 
     // 新版本带用例导出
-    private List<ApiTestCaseWithBLOBs> cases;
+    private List<ApiTestCaseWithBLOBs> cases = new ArrayList<>();
 
     //ESB文件导入的附属数据类
     private Map<String,EsbApiParamsWithBLOBs> esbApiParamsMap;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -67,8 +67,11 @@ public interface ExtTestCaseMapper {
 
     List<String> selectIds(@Param("request") BaseQueryRequest condition);
 
+    List<String> selectPublicIds(@Param("request") BaseQueryRequest condition);
+
     /**
      * 按照用例等级统计
+     *
      * @param projectId 项目ID
      * @return 统计结果
      */

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1466,7 +1466,7 @@ public void editTestCaseBath(TestCaseBatchRequest request) {
 
     public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
         ServiceUtils.getSelectAllIds(request, request.getCondition(),
-                (query) -> extTestCaseMapper.selectIds(query));
+                (query) -> extTestCaseMapper.selectPublicIds(query));
         List<String> ids = request.getIds();
         if (CollectionUtils.isEmpty(ids)) {
             return;

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -534,7 +534,9 @@ public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request) {
         }
         List<TestCaseDTO> list = extTestCaseMapper.list(request);
         buildUserInfo(list);
-        buildProjectInfo(request.getProjectId(), list);
+        if(StringUtils.isNotBlank(request.getProjectId())){
+            buildProjectInfo(request.getProjectId(), list);
+        }
         list = this.parseStatus(list);
         return list;
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1222,6 +1222,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
                 scenarioWithBLOBs.setId(existScenario.getId());
                 scenarioWithBLOBs.setRefId(existScenario.getRefId());
                 scenarioWithBLOBs.setVersionId(apiTestImportRequest.getUpdateVersionId());
+                scenarioWithBLOBs.setOrder(existScenario.getOrder());
                 scenarioWithBLOBs.setNum(existScenario.getNum());
                 List<ApiMethodUrlDTO> useUrl = this.parseUrl(scenarioWithBLOBs);
                 scenarioWithBLOBs.setUseUrl(JSONArray.toJSONString(useUrl));

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -459,7 +459,7 @@ public void mergeCreate(SaveAPITestRequest request, MultipartFile file, List<Str
      * @return
      * @author song tianyang
      */
-    public JmxInfoDTO updateJmxString(String jmx) {
+    public JmxInfoDTO updateJmxString(String jmx,String projectId) {
         jmx = this.updateJmxMessage(jmx);
 
         //获取要转化的文件
@@ -495,7 +495,7 @@ public JmxInfoDTO updateJmxString(String jmx) {
             File file = new File(filePath);
             if (file.exists() && file.isFile()) {
                 try {
-                    FileMetadata fileMetadata = fileService.saveFile(file, FileUtil.readAsByteArray(file));
+                    FileMetadata fileMetadata = fileService.saveFile(file, FileUtil.readAsByteArray(file),projectId);
                     fileMetadataList.add(fileMetadata);
                     attachmentFiles.put(fileMetadata.getId(), fileMetadata.getName());
                 } catch (Exception e) {
@@ -623,7 +623,7 @@ public JmxInfoDTO getJmxInfoDTO(RunDefinitionRequest runRequest, List<MultipartF
         HashTree hashTree = runRequest.getTestElement().generateHashTree(config);
         String jmxString = runRequest.getTestElement().getJmx(hashTree);
         //将jmx处理封装为通用方法
-        JmxInfoDTO dto = updateJmxString(jmxString);
+        JmxInfoDTO dto = updateJmxString(jmxString,runRequest.getProjectId());
         dto.setName(runRequest.getName() + ".jmx");
         return dto;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1712,8 +1712,8 @@ public String editTestCase(EditTestCaseRequest request, List<MultipartFile> file
     public List<TestCaseDTO> listTestCaseIds(QueryTestCaseRequest request) {
         setDefaultOrder(request);
         List<String> selectFields = new ArrayList<>();
-        selectFields.add("id");
-        selectFields.add("name");
+        selectFields.add("test_case.id");
+        selectFields.add("test_case.name");
         request.setSelectFields(selectFields);
         return extTestCaseMapper.listIds(request);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -125,7 +125,7 @@ public interface ExtTestCaseMapper {
 
     Long getPreOrder(@Param("projectId") String projectId, @Param("baseOrder") Long baseOrder);
 
-    List<TestCase> getTestCase(@Param("request") QueryTestCaseRequest request);
+    List<TestCaseDTO> getTestCase(@Param("request") QueryTestCaseRequest request);
 
     List<RelationshipGraphData.Node> getTestCaseForGraph(@Param("ids") Set<String> ids);
 

File: backend/src/main/java/io/metersphere/dto/RelationshipEdgeDTO.java
Patch:
@@ -11,4 +11,5 @@ public class RelationshipEdgeDTO extends RelationshipEdge {
     private String status;
     private String creator;
     private String versionId;
+    private String versionName;
 }

File: backend/src/main/java/io/metersphere/dto/TestCaseTestDao.java
Patch:
@@ -9,4 +9,6 @@
 public class TestCaseTestDao extends TestCaseTest {
     private String name;
     private String num;
+    private String projectName;
+    private String versionName;
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -140,7 +140,7 @@ public Pager<List<TestCaseDTO>> getTestCaseRelateList(@PathVariable int goPage,
     }
 
     @PostMapping("/relationship/relate/{goPage}/{pageSize}")
-    public Pager<List<TestCase>> getRelationshipRelateList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestCaseRequest request) {
+    public Pager<List<TestCaseDTO>> getRelationshipRelateList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestCaseRequest request) {
         return testCaseService.getRelationshipRelateList(request, goPage, pageSize);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1211,6 +1211,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
                 scenarioWithBLOBs.setRefId(sameRequest.get(0).getRefId());
                 scenarioWithBLOBs.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 scenarioWithBLOBs.setNum(sameRequest.get(0).getNum()); // 使用第一个num当作本次的num
+                scenarioWithBLOBs.setOrder(sameRequest.get(0).getOrder());
                 batchMapper.insert(scenarioWithBLOBs);
             } else {
                 ApiScenarioWithBLOBs existScenario = scenarioOp.get();

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -788,6 +788,7 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
                 apiDefinition.setRefId(sameRequest.get(0).getRefId());
                 apiDefinition.setVersionId(apiTestImportRequest.getUpdateVersionId());
                 apiDefinition.setNum(sameRequest.get(0).getNum()); // 使用第一个num当作本次的num
+                apiDefinition.setOrder(sameRequest.get(0).getOrder());
                 batchMapper.insert(apiDefinition);
             } else {
                 ApiDefinition existApi = apiOp.get();

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -576,6 +576,7 @@ public void copy(SaveTestPlanRequest request) {
         copy.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
         copy.setCreateUser(Objects.requireNonNull(SessionUtils.getUser()).getId());
         copy.setNum(getNextNum(copy.getProjectId()));
+        copy.setRefId(copy.getId());
         loadTestMapper.insert(copy);
         // copy test file
         copyLoadTestFiles(request.getId(), copy.getId());

File: backend/src/main/java/io/metersphere/track/issue/domain/jira/JiraUser.java
Patch:
@@ -7,6 +7,7 @@
 @Getter
 public class JiraUser {
     private String accountId;
+    private String key;
     private String displayName;
     private String emailAddress;
     private Boolean active;

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -568,6 +568,7 @@ public void copy(SaveTestPlanRequest request) {
         copy.setUpdateTime(System.currentTimeMillis());
         copy.setStatus(APITestStatus.Saved.name());
         copy.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
+        copy.setCreateUser(Objects.requireNonNull(SessionUtils.getUser()).getId());
         copy.setNum(getNextNum(copy.getProjectId()));
         loadTestMapper.insert(copy);
         // copy test file

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -70,7 +70,7 @@ public ApiScenarioDTO getById(@PathVariable String id) {
 
     @PostMapping("/list/all")
     @RequiresPermissions("PROJECT_API_SCENARIO:READ")
-    public List<ApiScenarioWithBLOBs> listAll(@RequestBody ApiScenarioBatchRequest request) {
+    public List<ApiScenarioDTO> listAll(@RequestBody ApiScenarioBatchRequest request) {
         return apiAutomationService.listAll(request);
     }
 
@@ -194,7 +194,7 @@ public List<ScenarioIdProjectInfo> getApiScenarioProjectIdByConditions(@RequestB
     }
 
     @PostMapping("/getApiScenarios")
-    public List<ApiScenarioWithBLOBs> getApiScenarios(@RequestBody List<String> ids) {
+    public List<ApiScenarioDTO> getApiScenarios(@RequestBody List<String> ids) {
         return apiAutomationService.getApiScenarios(ids);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -123,6 +123,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                     }
                     this.setHashTree(sourceHashTree);
                     hashTree = sourceHashTree;
+                } else {
+                    return;
                 }
 
             } catch (Exception ex) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -23,7 +23,7 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenarioWithBLOBs> selectByTagId(@Param("id") String id);
 
-    List<ApiScenarioWithBLOBs> selectIds(@Param("ids") List<String> ids);
+    List<ApiScenarioDTO> selectIds(@Param("ids") List<String> ids);
 
     int selectTrash(@Param("projectId") String projectId);
 

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -328,6 +328,9 @@ public ApiTestCase getSameCase(SaveApiTestCaseRequest request) {
         if (StringUtils.isNotBlank(request.getId())) {
             criteria.andIdNotEqualTo(request.getId());
         }
+        if (StringUtils.isNotBlank(request.getVersionId())) {
+            criteria.andVersionIdEqualTo(request.getVersionId());
+        }
         List<ApiTestCase> apiTestCases = apiTestCaseMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(apiTestCases)) {
             return apiTestCases.get(0);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -100,6 +100,8 @@ public class ApiTestCaseService {
     private ApiTestCaseFollowMapper apiTestCaseFollowMapper;
     @Resource
     private ExtProjectVersionMapper extProjectVersionMapper;
+    @Resource
+    private TcpApiParamService tcpApiParamService;
 
     private static final String BODY_FILE_DIR = FileUtils.BODY_FILE_DIR;
 
@@ -350,7 +352,7 @@ public ApiTestCase getSameCaseById(SaveApiTestCaseRequest request) {
 
     private ApiTestCase updateTest(SaveApiTestCaseRequest request) {
         checkNameExist(request);
-
+        request.setRequest(tcpApiParamService.parseMsTestElement(request.getRequest()));
         if (StringUtils.isNotEmpty(request.getEsbDataStruct())) {
             request = esbApiParamService.handleEsbRequest(request);
         }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -16,6 +16,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String USER_GET="&module=user&methodName=getList&t=json&zentaosid=";
     private static final String BUILDS_GET="&module=build&methodName=getProductBuildPairs&productID={0}&zentaosid=";
     private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&t=json&zentaosid=";
+    private static final String CREATE_META_DATA="?m=bug&f=create&productID={0}&t=json&zentaosid={1}";
     private static final String REPLACE_IMG_URL="<img src=\"%s/index.php?m=file&f=read&fileID=$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("m=file&f=read&fileID=(.*?)\"/>");
     // 注意 recTotal={1}&recPerPage={2}&pageID={3} 顺序不能调换，有点恶心
@@ -41,6 +42,7 @@ public ZentaoGetClient(String url) {
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getNotSuperModelUrl(BUG_DELETE));
         request.setBugList(getNotSuperModelUrl(BUG_LIST_URL));
+        request.setCreateMetaData(getNotSuperModelUrl(CREATE_META_DATA));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -16,6 +16,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String STORY_GET = "/api-getModel-story-getProductStories-productID={key}?zentaosid=";
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={projectId}?zentaosid=";
+    private static final String CREATE_META_DATA="/bug-create-{0}.json";
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
@@ -42,6 +43,7 @@ public ZentaoPathInfoClient(String url) {
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getUrl(BUG_DELETE));
         request.setBugList(getUrl(BUG_LIST_URL));
+        request.setCreateMetaData(getUrl(CREATE_META_DATA));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/domain/zentao/RequestUrl.java
Patch:
@@ -11,6 +11,7 @@ public class RequestUrl {
     private String login;
     private String sessionGet;
     private String bugCreate;
+    private String createMetaData;
     private String bugUpdate;
     private String bugList;
     private String bugDelete;

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseParallelExecuteService.java
Patch:
@@ -38,6 +38,7 @@ public void run() {
                         }
                         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(testId, reportId, runMode, hashTree);
                         runRequest.setPool(GenerateHashTreeUtil.isResourcePool(config.getResourcePoolId()));
+                        runRequest.setTestPlanReportId(executionQueue.getReportId());
                         runRequest.setPoolId(config.getResourcePoolId());
                         runRequest.setReportType(executionQueue.getReportType());
                         runRequest.setRunType(RunModeConstants.PARALLEL.toString());

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioParallelService.java
Patch:
@@ -58,6 +58,7 @@ public void parallel(Map<String, RunModeDataDTO> executeQueue, RunScenarioReques
             runRequest.setTestPlanReportId(request.getTestPlanReportId());
             runRequest.setHashTree(executeQueue.get(reportId).getHashTree());
             runRequest.setPlatformUrl(executionQueue.getDetailMap().get(reportId));
+            runRequest.setRunType(RunModeConstants.PARALLEL.toString());
             if (LoggerUtil.getLogger().isDebugEnabled()) {
                 LoggerUtil.debug("Scenario run-开始并发执行：" + JSON.toJSONString(request));
             }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportStructureService.java
Patch:
@@ -143,7 +143,7 @@ private void scenarioCalculate(List<StepTreeDTO> dtoList, AtomicLong isError, At
             if (step.getValue() != null) {
                 if (StringUtils.isNotEmpty(step.getErrorCode())) {
                     isErrorReport.set(isErrorReport.longValue() + 1);
-                } else if (step.getValue().getError() > 0) {
+                } else if (step.getValue().getError() > 0 || !step.getValue().isSuccess()) {
                     isError.set(isError.longValue() + 1);
                 }
             } else if (CollectionUtils.isNotEmpty(step.getChildren())) {
@@ -308,7 +308,7 @@ private void stepChildrenErrorCalculate(List<StepTreeDTO> dtoList, AtomicLong is
             if (step.getValue() != null && step.getValue().getError() > 0) {
                 if (StringUtils.isNotEmpty(step.getErrorCode())) {
                     isErrorReport.set(isErrorReport.longValue() + 1);
-                } else if (step.getValue().getError() > 0) {
+                } else if (step.getValue().getError() > 0 || !step.getValue().isSuccess()) {
                     isError.set(isError.longValue() + 1);
                 }
                 break;

File: backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -22,6 +22,7 @@
 import io.metersphere.api.dto.ErrorReportLibraryParseDTO;
 import io.metersphere.api.dto.RunningParamKeys;
 import io.metersphere.api.exec.queue.PoolExecBlockingQueueUtil;
+import io.metersphere.api.exec.utils.ResultParseUtil;
 import io.metersphere.api.service.MsResultService;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.ErrorReportLibraryUtil;
@@ -151,8 +152,7 @@ public void sampleOccurred(SampleEvent event) {
         this.setVars(result);
         if (isSampleWanted(result.isSuccessful()) && !StringUtils.equals(result.getSampleLabel(), RunningParamKeys.RUNNING_DEBUG_SAMPLER_NAME)) {
             RequestResult requestResult = JMeterBase.getRequestResult(result);
-            if (requestResult != null) {
-
+            if (requestResult != null && ResultParseUtil.isNotAutoGenerateSampler(requestResult)) {
                 MsgDto dto = new MsgDto();
                 dto.setExecEnd(false);
                 dto.setReportId("send." + this.getName());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1460,6 +1460,7 @@ public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
                 TestCaseWithBLOBs batchCopy = new TestCaseWithBLOBs();
                 BeanUtils.copyBean(batchCopy, list.get(i));
                 checkTestCaseExist(batchCopy);
+                String oldTestCaseId = batchCopy.getId();
                 String id = UUID.randomUUID().toString();
                 batchCopy.setId(id);
                 batchCopy.setName(ServiceUtils.getCopyName(batchCopy.getName()));
@@ -1482,6 +1483,7 @@ public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
                 batchCopy.setCustomNum(String.valueOf(nextNum));
                 batchCopy.setNum(nextNum++);
                 mapper.insert(batchCopy);
+                dealWithCopyOtherInfo(batchCopy, oldTestCaseId);
                 if (i % 50 == 0)
                     sqlSession.flushStatements();
             }

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -64,7 +64,7 @@ public void addSwaggerUrlSchedule(SwaggerUrlProject swaggerUrlProject) {
     }
 
     public void updateSwaggerUrlSchedule(SwaggerUrlProject swaggerUrlProject) {
-        swaggerUrlProjectMapper.updateByPrimaryKeySelective(swaggerUrlProject);
+        swaggerUrlProjectMapper.updateByPrimaryKeyWithBLOBs(swaggerUrlProject);
     }
 
     public ApiSwaggerUrlDTO selectApiSwaggerUrlDTO(String id) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1219,7 +1219,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
 
         if (CollectionUtils.isNotEmpty(list)) {
             LogUtil.error("import scenario fail, custom num is exist: " + scenarioWithBLOBs.getCustomNum());
-            return scenarioWithBLOBs;
+            MSException.throwException(Translator.get("import_fail_custom_num_exists") + ": " + scenarioWithBLOBs.getCustomNum());
         }
 
         if (StringUtils.equals("fullCoverage", apiTestImportRequest.getModeId())) {

File: backend/src/main/java/io/metersphere/api/exec/api/ApiCaseExecuteService.java
Patch:
@@ -74,6 +74,7 @@ public List<MsExecResponseDTO> run(BatchRunDefinitionRequest request) {
             request.getConfig().setEnvMap(environmentGroupProjectService.getEnvMap(request.getConfig().getEnvironmentGroupId()));
         }
         LoggerUtil.debug("开始查询测试计划用例");
+
         TestPlanApiCaseExample example = new TestPlanApiCaseExample();
         example.createCriteria().andIdIn(ids);
         example.setOrderByClause("`order` DESC");
@@ -84,8 +85,8 @@ public List<MsExecResponseDTO> run(BatchRunDefinitionRequest request) {
             request.setTriggerMode(ApiRunMode.API_PLAN.name());
         }
 
+        Map<String, ApiDefinitionExecResult> executeQueue = new LinkedHashMap<>();
         List<MsExecResponseDTO> responseDTOS = new LinkedList<>();
-        Map<String, ApiDefinitionExecResult> executeQueue = new HashMap<>();
         String status = request.getConfig().getMode().equals(RunModeConstants.SERIAL.toString()) ? APITestStatus.Waiting.name() : APITestStatus.Running.name();
         planApiCases.forEach(testPlanApiCase -> {
             ApiDefinitionExecResult report = ApiDefinitionExecResultUtil.addResult(request, testPlanApiCase, status, batchMapper);

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -210,7 +210,6 @@ public Project getProjectByTestCaseId(@PathVariable String testCaseId) {
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, targetClass = TestCaseMapper.class,
             event = NoticeConstants.Event.CREATE, mailTemplate = "track/TestCaseCreate", subject = "测试用例通知")
     public TestCase addTestCase(@RequestPart("request") EditTestCaseRequest request, @RequestPart(value = "file", required = false) List<MultipartFile> files) {
-        request.setId(UUID.randomUUID().toString());
         return testCaseService.save(request, files);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -418,6 +418,9 @@ public void countReportByTestPlanReportId(String planReportId, String resourceRu
     public TestPlanReportContentWithBLOBs parseReportDaoToReportContent(TestPlanSimpleReportDTO reportDTO, TestPlanReportContentWithBLOBs testPlanReportContentWithBLOBs) {
         String id = testPlanReportContentWithBLOBs.getId();
         String testPlanReportId = testPlanReportContentWithBLOBs.getTestPlanReportId();
+        if(testPlanReportContentWithBLOBs.getEndTime() != null){
+            reportDTO.setEndTime(testPlanReportContentWithBLOBs.getEndTime());
+        }
         BeanUtils.copyBean(testPlanReportContentWithBLOBs, reportDTO);
         testPlanReportContentWithBLOBs.setId(id);
         testPlanReportContentWithBLOBs.setTestPlanReportId(testPlanReportId);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1712,6 +1712,9 @@ public List<RelationshipEdgeDTO> getRelationshipApi(String id, String relationsh
                 } else {
                     apiDefinition = apiMap.get(relationshipEdge.getSourceId());
                 }
+                if (apiDefinition == null) {
+                    continue;
+                }
                 relationshipEdgeDTO.setTargetName(apiDefinition.getName());
                 relationshipEdgeDTO.setCreator(apiDefinition.getUserId());
                 relationshipEdgeDTO.setTargetNum(apiDefinition.getNum());

File: backend/src/main/java/io/metersphere/api/exec/queue/DBTestQueue.java
Patch:
@@ -9,7 +9,7 @@
 
 @Data
 public class DBTestQueue extends ApiExecutionQueue {
-    private String nowReportId;
+    private String completedReportId;
     private ApiExecutionQueueDetail queue;
     private Map<String, String> detailMap = new HashMap<>();
 }

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.service;
 
 import io.metersphere.api.dto.automation.ScenarioStatus;
-import io.metersphere.api.jmeter.MessageCache;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.commons.constants.APITestStatus;
@@ -39,7 +38,7 @@ public void remake(JmeterRunRequestDTO request) {
                 example.createCriteria().andQueueIdEqualTo(request.getQueueId()).andTestIdEqualTo(request.getTestId());
                 CommonBeanFactory.getBean(ApiExecutionQueueDetailMapper.class).deleteByExample(example);
 
-                CommonBeanFactory.getBean(ApiExecutionQueueService.class).edit(request.getQueueId(), request.getTestId());
+                CommonBeanFactory.getBean(ApiExecutionQueueService.class).handleQueue(request.getQueueId(), request.getTestId());
             }
             // 清理零时报告
             if (StringUtils.equalsAnyIgnoreCase(request.getRunMode(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1044,7 +1044,6 @@ public String run(String testPlanID, String projectID, String userId, String tri
         RunModeConfigDTO runModeConfig = null;
         try {
             runModeConfig = JSONObject.parseObject(apiRunConfig, RunModeConfigDTO.class);
-            runModeConfig.setOnSampleError(false);
         } catch (Exception e) {
             LogUtil.error(e);
         }

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioSerialService.java
Patch:
@@ -137,7 +137,7 @@ public void serial(ApiExecutionQueue executionQueue, ApiExecutionQueueDetail que
             } else {
                 ApiDefinitionExecResult apiDefinitionExecResult = apiDefinitionExecResultMapper.selectByPrimaryKey(queue.getReportId());
                 if (apiDefinitionExecResult != null) {
-                    apiDefinitionExecResult.setStatus("timeout");
+                    apiDefinitionExecResult.setStatus("Error");
                     apiDefinitionExecResultMapper.updateByPrimaryKey(apiDefinitionExecResult);
                 }
             }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanReportController.java
Patch:
@@ -93,6 +93,7 @@ public String saveTestPlanReport(@PathVariable String planId, @PathVariable Stri
         String reportId = UUID.randomUUID().toString();
         TestPlanReportSaveRequest saveRequest = new TestPlanReportSaveRequest(reportId, planId, userId, triggerMode);
         TestPlanScheduleReportInfoDTO report = testPlanReportService.genTestPlanReport(saveRequest);
+        testPlanReportService.genTestPlanReportContent(report);
         testPlanReportService.countReportByTestPlanReportId(report.getTestPlanReport().getId(), null, triggerMode);
         return "success";
     }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -15,7 +15,7 @@ public class ShiroUtils {
 
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap) {
 
-        filterChainDefinitionMap.put("/resource/md/get", "anon");
+        filterChainDefinitionMap.put("/resource/md/get/**", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -135,7 +135,6 @@ public void uploadAttachment(String issueKey, File file) {
             response = restTemplate.exchange(getBaseUrl() + "/issue/" + issueKey + "/attachments", HttpMethod.POST, requestEntity, String.class);
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
-            MSException.throwException(e.getMessage());
         }
         System.out.println(response);
     }

File: backend/src/main/java/io/metersphere/api/jmeter/FixedTask.java
Patch:
@@ -10,7 +10,7 @@
 public class FixedTask {
     private ApiExecutionQueueService queueService;
 
-    @Scheduled(cron = "0 */2 * * * ?")
+    @Scheduled(cron = "0 0/2 * * * ?")
     public void execute() {
         if (queueService == null) {
             queueService = CommonBeanFactory.getBean(ApiExecutionQueueService.class);

File: backend/src/main/java/io/metersphere/api/service/ApiExecutionQueueService.java
Patch:
@@ -237,15 +237,16 @@ public void timeOut() {
                     if (report != null && StringUtils.equalsAny(report.getStatus(), TestPlanReportStatus.RUNNING.name()) && report.getUpdateTime() < now) {
                         report.setStatus(ScenarioStatus.Timeout.name());
                         apiScenarioReportMapper.updateByPrimaryKeySelective(report);
+                        executionQueueDetailMapper.deleteByPrimaryKey(item.getId());
                     }
                 } else {
                     ApiDefinitionExecResult result = apiDefinitionExecResultMapper.selectByPrimaryKey(item.getReportId());
                     if (result != null && StringUtils.equalsAny(result.getStatus(), TestPlanReportStatus.RUNNING.name())) {
                         result.setStatus(ScenarioStatus.Timeout.name());
                         apiDefinitionExecResultMapper.updateByPrimaryKeySelective(result);
+                        executionQueueDetailMapper.deleteByPrimaryKey(item.getId());
                     }
                 }
-                executionQueueDetailMapper.deleteByPrimaryKey(item.getId());
             });
         }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -214,6 +214,7 @@ public List<MsExecResponseDTO> run(RunTestPlanScenarioRequest testPlanScenarioRe
     }
 
     public void setScenarioEnv(List<String> planScenarioIds, RunModeConfigDTO runModeConfig) {
+        if (CollectionUtils.isEmpty(planScenarioIds)) return;
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         TestPlanApiScenarioExample testPlanApiScenarioExample = new TestPlanApiScenarioExample();
         testPlanApiScenarioExample.createCriteria().andIdIn(planScenarioIds);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -352,7 +352,7 @@ public ApiScenario update(SaveApiScenarioRequest request, List<MultipartFile> bo
         deleteUpdateBodyFile(scenario, beforeScenario);
         List<ApiMethodUrlDTO> useUrl = this.parseUrl(scenario);
         scenario.setUseUrl(JSONArray.toJSONString(useUrl));
-
+        scenario.setCreateUser(null); // 更新时不更新创建人
         ApiScenarioExample example = new ApiScenarioExample();
         example.createCriteria().andIdEqualTo(scenario.getId()).andVersionIdEqualTo(request.getVersionId());
         if (apiScenarioMapper.updateByExampleSelective(scenario, example) == 0) {

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -334,6 +334,7 @@ public void updateProject(Project project) {
         this.checkProjectTcpPort(project);
 
         project.setCreateTime(null);
+        project.setCreateUser(null);
         project.setUpdateTime(System.currentTimeMillis());
         checkProjectExist(project);
         if (BooleanUtils.isTrue(project.getCustomNum())) {

File: backend/src/main/java/io/metersphere/api/exec/queue/DBTestQueue.java
Patch:
@@ -9,6 +9,7 @@
 
 @Data
 public class DBTestQueue extends ApiExecutionQueue {
+    private String nowReportId;
     private ApiExecutionQueueDetail queue;
     private Map<String, String> detailMap = new HashMap<>();
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -32,4 +32,7 @@ public interface ExtApiDefinitionExecResultMapper {
     List<ApiDefinitionExecResult> selectApiResultByProjectId(String projectId);
 
     List<PlanReportCaseDTO> selectForPlanReport(@Param("ids") List<String> apiReportIds);
+
+    void update(@Param("ids") List<String> ids);
+
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -37,4 +37,6 @@ public interface ExtApiScenarioReportMapper {
     List<ApiScenarioReport> selectReportByProjectId(String projectId);
 
     List<PlanReportCaseDTO> selectForPlanReport(@Param("ids") List<String> reportIds);
+
+    void update(@Param("ids") List<String> ids);
 }

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.notice.service;
 
-import com.alibaba.nacos.client.utils.StringUtils;
 import io.metersphere.base.domain.Project;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.utils.LogUtil;
@@ -9,6 +8,7 @@
 import io.metersphere.notice.sender.NoticeModel;
 import io.metersphere.notice.sender.impl.*;
 import org.apache.commons.lang3.SerializationUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/jmeter/FixedTask.java
Patch:
@@ -10,7 +10,7 @@
 public class FixedTask {
     private ApiExecutionQueueService queueService;
 
-    @Scheduled(cron = "0 */5 * * * ?")
+    @Scheduled(cron = "0 */2 * * * ?")
     public void execute() {
         if (queueService == null) {
             queueService = CommonBeanFactory.getBean(ApiExecutionQueueService.class);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiExecutionQueueMapper.java
Patch:
@@ -8,4 +8,6 @@ public interface ExtApiExecutionQueueMapper {
     void delete();
 
     List<ApiExecutionQueue> findTestPlanReportQueue();
+
+    List<String> findTestPlanRunningReport();
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -66,13 +66,13 @@ public List<IssuesDao> getIssue(IssuesRequest issuesRequest) {
 
     public IssuesDao getZentaoAssignedAndBuilds(IssuesDao issue){
         JSONObject zentaoIssue = zentaoClient.getBugById(issue.getPlatformId());
-        String openedBy = zentaoIssue.getString("openedBy");
+        String assignedTo = zentaoIssue.getString("assignedTo");
         String openedBuild = zentaoIssue.getString("openedBuild");
         List<String>zentaoBuilds = new ArrayList<>();
         if(Strings.isNotBlank(openedBuild)){
             zentaoBuilds = Arrays.asList(openedBuild.split(","));
         }
-        issue.setZentaoAssigned(openedBy);
+        issue.setZentaoAssigned(assignedTo);
         issue.setZentaoBuilds(zentaoBuilds);
         return issue;
     }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -15,7 +15,7 @@ public class ShiroUtils {
 
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap) {
 
-        filterChainDefinitionMap.put("/resource/md/get/*", "anon");
+        filterChainDefinitionMap.put("/resource/md/get", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");
@@ -78,7 +78,6 @@ public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap
         filterChainDefinitionMap.put("/language", "apikey, authc");// 跳转到 /language 不用校验 csrf
         filterChainDefinitionMap.put("/test/case/file/preview/**", "apikey, authc"); // 预览测试用例附件 不用校验 csrf
         filterChainDefinitionMap.put("/mock", "apikey, authc"); // 跳转到 /mock接口 不用校验 csrf
-        filterChainDefinitionMap.put("/resource/md/get/**", "apikey, authc");
     }
 
     public static Cookie getSessionIdCookie() {

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -20,8 +20,8 @@ public void upload(@RequestPart(value = "request") MdUploadRequest request, @Req
         resourceService.mdUpload(request, file);
     }
 
-    @GetMapping(value = "/md/get/{fileName}")
-    public ResponseEntity<FileSystemResource> getFile(@PathVariable("fileName") String fileName) {
+    @GetMapping(value = "/md/get")
+    public ResponseEntity<FileSystemResource> getFile(@RequestParam ("fileName") String fileName) {
         return resourceService.getMdImage(fileName);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -408,8 +408,8 @@ public List<TestPlanLoadCaseDTO> getAllCases(String planId) {
         return buildCases(cases);
     }
 
-    public List<TestPlanLoadCaseDTO> getAllCases(Collection<String> ids, String planId, String status) {
-        List<TestPlanLoadCaseDTO> cases = extTestPlanLoadCaseMapper.getCasesByIds(ids, planId, status);
+    public List<TestPlanLoadCaseDTO> getAllCases(Collection<String> ids, Collection<String> reportIds) {
+        List<TestPlanLoadCaseDTO> cases = extTestPlanLoadCaseMapper.getCasesByIds(ids, reportIds);
         return buildCases(cases);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -605,7 +605,7 @@ public List<TestPlanReport> getReports(List<String> ids) {
     public void delete(QueryTestPlanReportRequest request) {
         List<String> deleteReportIds = request.getDataIds();
         if (request.isSelectAllDate()) {
-            deleteReportIds = this.getAllApiIdsByFontedSelect(request.getFilters(), request.getName(), request.getProjectId(), request.getUnSelectIds(), request.getCombine());
+            deleteReportIds = this.getAllApiIdsByFrontedSelect(request.getFilters(), request.getName(), request.getProjectId(), request.getUnSelectIds(), request.getCombine());
         }
         if (CollectionUtils.isNotEmpty(deleteReportIds)) {
             TestPlanReportExample deleteReportExample = new TestPlanReportExample();
@@ -623,7 +623,7 @@ public void delete(QueryTestPlanReportRequest request) {
         }
     }
 
-    private List<String> getAllApiIdsByFontedSelect(Map<String, List<String>> filters, String name, String projectId, List<String> unSelectIds, Map<String, Object> combine) {
+    private List<String> getAllApiIdsByFrontedSelect(Map<String, List<String>> filters, String name, String projectId, List<String> unSelectIds, Map<String, Object> combine) {
         QueryTestPlanReportRequest request = new QueryTestPlanReportRequest();
         request.setFilters(filters);
         request.setName(name);

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -44,6 +44,7 @@ public static void addToReportCommonStatusResultList(Map<String, TestCaseReportS
         addToReportStatusResultList(resultMap, statusResult, TestPlanTestCaseStatus.Pass.name());
         addToReportStatusResultList(resultMap, statusResult, TestPlanTestCaseStatus.Failure.name());
         addToReportStatusResultList(resultMap, statusResult, "error");
+        addToReportStatusResultList(resultMap, statusResult, "Error");
         addToReportStatusResultList(resultMap, statusResult, "run");
         addToReportStatusResultList(resultMap, statusResult, "Fail");
         addToReportStatusResultList(resultMap, statusResult, "success");

File: backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -46,7 +46,5 @@ public class RunScenarioRequest {
     //生成测试报告：当isTestPlanScheduleJob为ture时使用
     private String testPlanReportId;
 
-    private String testPlanReportContentId;
-
     private String requestOriginator;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/SchedulePlanScenarioExecuteRequest.java
Patch:
@@ -37,7 +37,5 @@ public class SchedulePlanScenarioExecuteRequest {
 
     private String testPlanReportId;
 
-    private String planReportContentId;
-
     private RunModeConfigDTO config;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/BatchRunDefinitionRequest.java
Patch:
@@ -22,6 +22,4 @@ public class BatchRunDefinitionRequest {
     //测试计划报告ID。 测试计划执行时使用
     private String planReportId;
 
-    private String planReportContentId;
-
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanScheduleReportInfoDTO.java
Patch:
@@ -16,7 +16,6 @@
 @Setter
 public class TestPlanScheduleReportInfoDTO {
     private TestPlanReport testPlanReport;
-    private TestPlanReportContent testPlanReportContent;
     private Map<String, String> planScenarioIdMap = new LinkedHashMap<>();
     private Map<String, String> apiTestCaseDataMap = new LinkedHashMap<>();
     private Map<String, String> performanceIdMap = new LinkedHashMap<>();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.dto.definition.request.ElementUtil;
 import io.metersphere.api.dto.definition.request.ParameterConfig;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.shell.filter.ScriptFilter;
 import io.metersphere.plugin.core.MsParameter;
 import io.metersphere.plugin.core.MsTestElement;
 import lombok.Data;
@@ -37,6 +38,7 @@ public class MsJSR223Processor extends MsTestElement {
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
+        ScriptFilter.verify(this.getScriptLanguage(), this.getName(), script);
         ParameterConfig config = (ParameterConfig) msParameter;
         //替换Metersphere环境变量
         if (StringUtils.isEmpty(this.getEnvironmentId())) {

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -225,6 +225,7 @@ protected IssuesWithBLOBs insertIssues(IssuesUpdateRequest issuesRequest) {
         issues.setUpdateTime(System.currentTimeMillis());
         issues.setNum(getNextNum(issuesRequest.getProjectId()));
         issues.setPlatformStatus(issuesRequest.getPlatformStatus());
+        issues.setCreator(SessionUtils.getUserId());
         issuesMapper.insert(issues);
         return issues;
     }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -202,9 +202,8 @@ public List<ApiScenarioWithBLOBs> getApiScenarios(@RequestBody List<String> ids)
     @MsAuditLog(module = "api_automation", type = OperLogConstants.DEBUG, title = "#request.scenarioName", sourceId = "#request.scenarioId", project = "#request.projectId")
     public void runDebug(@RequestPart("request") RunDefinitionRequest request,
                          @RequestPart(value = "bodyFiles", required = false) List<MultipartFile> bodyFiles, @RequestPart(value = "scenarioFiles", required = false) List<MultipartFile> scenarioFiles) {
-        request.setExecuteType(ExecuteType.Debug.name());
-        if (request.isSaved()) {
-            request.setExecuteType(ExecuteType.Saved.name());
+        if (StringUtils.isEmpty(request.getExecuteType())) {
+            request.setExecuteType(ExecuteType.Debug.name());
         }
         apiAutomationService.debugRun(request, bodyFiles, scenarioFiles);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -154,7 +154,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -200,7 +200,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -302,7 +302,7 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -244,7 +244,7 @@ private TCPSampler tcpSampler(ParameterConfig config) {
         tcpSampler.setName(this.getName());
         tcpSampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        tcpSampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
+        tcpSampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         tcpSampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/exec/utils/GenerateHashTreeUtil.java
Patch:
@@ -35,7 +35,9 @@ public class GenerateHashTreeUtil {
     public static MsScenario parseScenarioDefinition(String scenarioDefinition) {
         if (StringUtils.isNotEmpty(scenarioDefinition)) {
             MsScenario scenario = JSONObject.parseObject(scenarioDefinition, MsScenario.class);
-            parse(scenarioDefinition, scenario);
+            if (scenario != null) {
+                parse(scenarioDefinition, scenario);
+            }
             return scenario;
         }
         return null;

File: backend/src/main/java/io/metersphere/api/dto/StepTreeDTO.java
Patch:
@@ -14,6 +14,7 @@ public class StepTreeDTO {
     private String resourceId;
     private String label;
     private RequestResult value;
+    private String allIndex;
 
     //误报库编码
     private String errorCode;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -154,7 +154,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + ElementUtil.getFullIndexPath(this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -200,7 +200,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + ElementUtil.getFullIndexPath(this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -302,7 +302,7 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         sampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + ElementUtil.getFullIndexPath(this.getParent(), indexPath));
+        sampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -20,7 +20,6 @@
 import io.metersphere.api.service.ApiTestCaseService;
 import io.metersphere.base.domain.ApiDefinitionWithBLOBs;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
-import io.metersphere.commons.constants.DelimiterConstants;
 import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
@@ -245,7 +244,7 @@ private TCPSampler tcpSampler(ParameterConfig config) {
         tcpSampler.setName(this.getName());
         tcpSampler.setProperty("MS-ID", this.getId());
         String indexPath = this.getIndex();
-        tcpSampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + ElementUtil.getFullIndexPath(this.getParent(), indexPath));
+        tcpSampler.setProperty("MS-RESOURCE-ID", ElementUtil.getResourceId(this.getResourceId(), config, this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         ElementUtil.getScenarioSet(this, id_names);
         tcpSampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioEnvService.java
Patch:
@@ -225,7 +225,7 @@ public void setScenarioEnv(ApiScenarioWithBLOBs apiScenarioWithBLOBs, RunScenari
         }
         String definition = apiScenarioWithBLOBs.getScenarioDefinition();
         MsScenario scenario = JSONObject.parseObject(definition, MsScenario.class);
-        GenerateHashTreeUtil.parse(definition, scenario, apiScenarioWithBLOBs.getId(), null);
+        GenerateHashTreeUtil.parse(definition, scenario);
         if (StringUtils.equals(environmentType, EnvironmentType.JSON.toString())) {
             scenario.setEnvironmentMap(JSON.parseObject(environmentJson, Map.class));
         } else if (StringUtils.equals(environmentType, EnvironmentType.GROUP.toString())) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -740,7 +740,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
             if (scenario == null) {
                 return null;
             }
-            GenerateHashTreeUtil.parse(apiScenario.getScenarioDefinition(), scenario, apiScenario.getId(), null);
+            GenerateHashTreeUtil.parse(apiScenario.getScenarioDefinition(), scenario);
             String environmentType = apiScenario.getEnvironmentType();
             String environmentJson = apiScenario.getEnvironmentJson();
             String environmentGroupId = apiScenario.getEnvironmentGroupId();

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportResultService.java
Patch:
@@ -52,9 +52,6 @@ private ApiScenarioReportResult newApiScenarioReportResult(String reportId, Requ
             }
         }
         String resourceId = result.getResourceId();
-        if (StringUtils.isNotEmpty(resourceId) && resourceId.contains("_")) {
-            resourceId = StringUtils.substringBefore(result.getResourceId(), "_");
-        }
         report.setResourceId(resourceId);
         report.setReportId(reportId);
         report.setTotalAssertions(Long.parseLong(result.getTotalAssertions() + ""));

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -362,7 +362,7 @@ public ApiScenarioReport updateScenario(List<ApiScenarioReportResult> requestRes
     public String getEnvironment(ApiScenarioWithBLOBs apiScenario) {
         String environment = "未配置";
         String environmentType = apiScenario.getEnvironmentType();
-        if (StringUtils.equals(environmentType, EnvironmentType.JSON.name())) {
+        if (StringUtils.equals(environmentType, EnvironmentType.JSON.name()) && StringUtils.isNotEmpty(apiScenario.getEnvironmentJson())) {
             String environmentJson = apiScenario.getEnvironmentJson();
             JSONObject jsonObject = JSON.parseObject(environmentJson);
             ApiTestEnvironmentExample example = new ApiTestEnvironmentExample();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -820,6 +820,7 @@ private HttpConfig matchConfig(ParameterConfig parameterConfig) {
                             } else {
                                 TestPlanApiCaseService testPlanApiCaseService = CommonBeanFactory.getBean(TestPlanApiCaseService.class);
                                 TestPlanApiCase testPlanApiCase = testPlanApiCaseService.getById(this.getId());
+                                testPlanApiCase = testPlanApiCase == null ? testPlanApiCaseService.getById(this.getName()) : testPlanApiCase;
                                 if (testPlanApiCase != null) {
                                     ApiTestCaseWithBLOBs caseWithBLOBs = apiTestCaseService.get(testPlanApiCase.getApiCaseId());
                                     if (caseWithBLOBs != null) {

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -71,9 +71,6 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         //mock接口
         filterChainDefinitionMap.put("/mock/**", "anon");
         filterChainDefinitionMap.put("/ws/**", "anon");
-
-        filterChainDefinitionMap.put("/plugin/**", "anon");
-
     }
 
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -327,7 +327,9 @@ private ApiDefinitionExecResult save(RequestResult item, String reportId, String
             }
             item.getResponseResult().setConsole(console);
             saveResult.setId(reportId);
-            saveResult.setActuator("LOCAL");
+            if (StringUtils.isEmpty(saveResult.getActuator())) {
+                saveResult.setActuator("LOCAL");
+            }
             saveResult.setName(item.getName());
             saveResult.setType(type);
             saveResult.setCreateTime(item.getStartTime());

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -70,6 +70,7 @@ public String getStateByTestPlan(@PathVariable String id) {
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<ApiTestCaseDTO>> listSimple(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
+        request.setSelectEnvironment(true);
         return PageUtils.setPageInfo(page, apiTestCaseService.listSimple(request));
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -16,6 +16,7 @@ public class ApiTestCaseDTO extends ApiTestCase {
     private String apiName;
     private String passRate;
     private String projectName;
+    private String environment;
     private String execResult;
     private String versionName;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1895,7 +1895,7 @@ public boolean checkScenarioEnv(ApiScenarioWithBLOBs request) {
 
     public boolean checkScenarioEnv(String scenarioId) {
         ApiScenarioWithBLOBs apiScenarioWithBLOBs = apiScenarioMapper.selectByPrimaryKey(scenarioId);
-        apiScenarioEnvService.setScenarioEnv(apiScenarioWithBLOBs);
+        apiScenarioEnvService.setScenarioEnv(apiScenarioWithBLOBs, null);
         return apiScenarioEnvService.checkScenarioEnv(apiScenarioWithBLOBs, null);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -163,6 +163,7 @@ private void setRefElement() {
                 } else {
                     this.setHashTree(proxy.getHashTree());
                 }
+                this.setPath(proxy.getPath());
                 this.setMethod(proxy.getMethod());
                 this.setBody(proxy.getBody());
                 this.setRest(proxy.getRest());

File: backend/src/main/java/io/metersphere/commons/utils/HashTreeUtil.java
Patch:
@@ -6,8 +6,8 @@
 import io.metersphere.api.dto.definition.request.assertions.MsAssertionRegex;
 import io.metersphere.api.dto.definition.request.assertions.MsAssertions;
 import io.metersphere.api.service.ApiTestEnvironmentService;
+import io.metersphere.api.service.ExtErrorReportLibraryService;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
-import io.metersphere.xpack.errorreportlibrary.service.ErrorReportLibraryService;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.config.Argument;
@@ -224,7 +224,7 @@ public MsAssertions duplicateRegexInAssertions(List<MsAssertions> compareList, M
                         break;
                     }
                 }
-                if(!isExit){
+                if (!isExit) {
                     duplicatedList.add(regex);
                 }
             }
@@ -234,7 +234,7 @@ public MsAssertions duplicateRegexInAssertions(List<MsAssertions> compareList, M
     }
 
     public static List<MsAssertions> getErrorReportByProjectId(String projectId) {
-        ErrorReportLibraryService service = CommonBeanFactory.getBean(ErrorReportLibraryService.class);
+        ExtErrorReportLibraryService service = CommonBeanFactory.getBean(ExtErrorReportLibraryService.class);
         return service.getAssertionByProjectIdAndStatusIsOpen(projectId);
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -37,7 +37,7 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
             swagger = new SwaggerParser().read(request.getSwaggerUrl(), auths, true);
         } else {
             sourceStr = getApiTestStr(source);  //  导入的二进制文件转换为 String
-            swagger = new SwaggerParser().readWithInfo(sourceStr, auths, true).getSwagger();
+            swagger = new SwaggerParser().readWithInfo(sourceStr).getSwagger();
         }
         if (swagger == null || swagger.getSwagger() == null) {  //  不是 2.0 版本，则尝试转换 3.0
             Swagger3Parser swagger3Parser = new Swagger3Parser();

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -57,7 +57,7 @@ public ApiDefinitionImport parse(String sourceStr, ApiTestImportRequest request)
         if (StringUtils.isNotBlank(request.getSwaggerUrl())) {
             result = new OpenAPIParser().readLocation(request.getSwaggerUrl(), auths, null);
         } else {
-            result = new OpenAPIParser().readContents(sourceStr, auths, null);
+            result = new OpenAPIParser().readContents(sourceStr, null, null);
         }
         if (result == null) {
             MSException.throwException("解析失败，请确认选择的是 swagger 格式！");

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -100,6 +100,8 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
         Set<String> pathNames = paths.keySet();
 
         this.definitions = swagger.getDefinitions();
+        if (this.definitions == null)
+            this.definitions = new HashMap<>();
 
         List<ApiDefinitionWithBLOBs> results = new ArrayList<>();
 

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -35,7 +35,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/jmeter/ready/**", "anon");
         filterChainDefinitionMap.put("/authsource/list/allenable", "anon");
         filterChainDefinitionMap.put("/sso/signin", "anon");
-        filterChainDefinitionMap.put("/sso/callback", "anon");
+        filterChainDefinitionMap.put("/sso/callback/**", "anon");
         filterChainDefinitionMap.put("/license/valid", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/files", "anon");

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -15,7 +15,7 @@ public class ShiroUtils {
 
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap) {
 
-        filterChainDefinitionMap.put("/resource/md/get/", "anon");
+        filterChainDefinitionMap.put("/resource/md/get/*", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -170,7 +170,7 @@ public String getUrl(HTTPSamplerProxy source) throws MalformedURLException {
         String path = source.getPath();
         // Request Defaults
         if (StringUtils.isEmpty(source.getDomain())) {
-            return null;
+            return path;
         }
         if (!path.startsWith("http://") && !path.startsWith("https://")) {
             String domain = source.getDomain();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -33,6 +33,7 @@ public class MsAssertions extends MsTestElement {
     private MsAssertionDocument document;
 
     private static final String delimiter = "split==";
+    private static final String delimiterScript = "split&&";
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
@@ -176,9 +177,9 @@ private JSR223Assertion jsr223Assertion(MsAssertionJSR223 assertionJSR223) {
         JSR223Assertion assertion = new JSR223Assertion();
         assertion.setEnabled(this.isEnable());
         if (StringUtils.isNotEmpty(assertionJSR223.getDesc())) {
-            assertion.setName("JSR223" + delimiter + this.getName() + delimiter + assertionJSR223.getDesc() + "&&" + assertionJSR223.getScript());
+            assertion.setName("JSR223" + delimiter + this.getName() + delimiter + assertionJSR223.getDesc() + delimiterScript + assertionJSR223.getScript());
         } else {
-            assertion.setName("JSR223" + delimiter + this.getName() + delimiter + "JSR223Assertion" + "&&" + assertionJSR223.getScript());
+            assertion.setName("JSR223" + delimiter + this.getName() + delimiter + "JSR223Assertion" + delimiterScript + assertionJSR223.getScript());
         }
         assertion.setProperty(TestElement.TEST_CLASS, JSR223Assertion.class.getName());
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -66,7 +66,7 @@ private void addRequestExtractors(HashTree samplerHashTree, ParameterConfig conf
             shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
             shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
             shell.setProperty("cacheKey", false);
-            shell.setProperty("script", "io.metersphere.utils.JMeterVars.addVars(prev.hashCode(),vars," + "\"" + extract.toString() + "\"" + ");");
+            shell.setProperty("script", "io.metersphere.utils.JMeterVars.addVars(prev.getResourceId(),vars," + "\"" + extract.toString() + "\"" + ");");
             samplerHashTree.add(shell);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1189,6 +1189,9 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
             if (StringUtils.isBlank(item.getId())) {
                 item.setId(UUID.randomUUID().toString());
             }
+            // 导入时设置版本
+            item.setVersionId(extProjectVersionMapper.getDefaultVersion(project.getId()));
+            item.setRefId(item.getId());
             importCreate(item, batchMapper, request);
             if (i % 300 == 0) {
                 sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -15,7 +15,6 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.util.LinkedMultiValueMap;
 import org.springframework.util.MultiValueMap;
-import org.springframework.web.client.RestTemplate;
 
 public abstract class ZentaoClient extends BaseClient {
 
@@ -74,7 +73,6 @@ public String getSessionId() {
     public AddIssueResponse.Issue addIssue(MultiValueMap<String, Object> paramMap) {
         String sessionId = login();
         HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(paramMap, new HttpHeaders());
-        RestTemplate restTemplate = new RestTemplate();
         ResponseEntity<String> response = null;
         try {
             String bugCreate = requestUrl.getBugCreate();
@@ -91,7 +89,6 @@ public AddIssueResponse.Issue addIssue(MultiValueMap<String, Object> paramMap) {
     public void updateIssue(String id, MultiValueMap<String, Object> paramMap) {
         String sessionId = login();
         HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(paramMap, new HttpHeaders());
-        RestTemplate restTemplate = new RestTemplate();
         try {
             restTemplate.exchange(requestUrl.getBugUpdate(),
                     HttpMethod.POST, requestEntity, String.class, id, sessionId);

File: backend/src/main/java/io/metersphere/api/dto/RunRequest.java
Patch:
@@ -11,6 +11,8 @@
 public class RunRequest {
     private String testId;
     private String poolId;
+    // 开启定时同步
+    private boolean enable;
     // api / case 或有这个属性值
     private String reportId;
     private String url;

File: backend/src/main/java/io/metersphere/dto/NodeDTO.java
Patch:
@@ -7,6 +7,7 @@
 @Setter
 public class NodeDTO {
     private String ip;
+    private boolean enable;
     private Integer port;
     private Integer monitorPort;
     private Integer maxConcurrency;

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiTestReportVariable.java
Patch:
@@ -9,4 +9,5 @@ public class ApiTestReportVariable extends ApiTestReport {
     public String executor;
     public String environment;
     public String principal;
+    private String projectId;
 }

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -107,6 +107,7 @@ public void testEnded(ResultDTO dto) {
                 reportTask.setPrincipal(principal);
                 reportTask.setExecutionTime(DateUtils.getTimeString(scenarioReport.getUpdateTime()));
                 reportTask.setEnvironment(environment);
+                reportTask.setProjectId(scenarioReport.getProjectId());
 
                 updateScenarioTestCaseStates(dto.getTestId(), dto.getRunMode());
                 if (reportTask != null) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -325,9 +325,6 @@ private ApiDefinitionExecResult save(RequestResult item, String reportId, String
             saveResult.setId(reportId);
             saveResult.setActuator("LOCAL");
             saveResult.setName(item.getName());
-            if (StringUtils.equals(type, TriggerMode.SCHEDULE.name())) {
-                saveResult.setTriggerMode(TriggerMode.SCHEDULE.name());
-            }
             saveResult.setType(type);
             saveResult.setCreateTime(item.getStartTime());
             if (SessionUtils.getUser() != null) {

File: backend/src/main/java/io/metersphere/api/dto/definition/RunDefinitionRequest.java
Patch:
@@ -14,6 +14,8 @@ public class RunDefinitionRequest {
 
     private String reportId;
 
+    private String runMode;
+
     private boolean isDebug;
 
     private boolean saved;

File: backend/src/main/java/io/metersphere/api/exec/scenario/ApiScenarioExecuteService.java
Patch:
@@ -374,9 +374,9 @@ public String debug(RunDefinitionRequest request, List<MultipartFile> bodyFiles,
         }
         uploadBodyFiles(request.getBodyFileRequestIds(), bodyFiles);
         FileUtils.createBodyFiles(request.getScenarioFileIds(), scenarioFiles);
-
+        String runMode = StringUtils.isEmpty(request.getRunMode()) ? ApiRunMode.SCENARIO.name() : request.getRunMode();
         // 调用执行方法
-        JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(request.getId(), request.getId(), ApiRunMode.SCENARIO.name(), hashTree);
+        JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(request.getId(), request.getId(), runMode, hashTree);
         runRequest.setDebug(true);
         jMeterService.run(runRequest);
         return request.getId();

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -71,6 +71,7 @@ public List<TestPlanDTOWithMetric> listByProjectId(@PathVariable String projectI
     }
 
     @PostMapping("/list/all")
+    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_PLAN_READ)
     public List<TestPlan> listAll(@RequestBody QueryTestPlanRequest request) {
         return testPlanService.listTestAllPlan(request);
     }
@@ -87,6 +88,7 @@ public List<TestPlan> recentTestPlans(@PathVariable("count") int count, @PathVar
     }
 
     @PostMapping("/get/{testPlanId}")
+    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_PLAN_READ)
     public TestPlan getTestPlan(@PathVariable String testPlanId) {
         checkPermissionService.checkTestPlanOwner(testPlanId);
         return testPlanService.getTestPlan(testPlanId);

File: backend/src/main/java/io/metersphere/api/jmeter/MsResultCollector.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.alibaba.fastjson.JSON;
 import io.metersphere.api.dto.RunningParamKeys;
+import io.metersphere.api.exec.queue.PoolExecBlockingQueueUtil;
 import io.metersphere.api.service.MsResultService;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
@@ -105,12 +106,12 @@ public void testEnded(String host) {
         LoggerUtil.debug("send. " + this.getName());
         WebSocketUtils.sendMessageSingle(dto);
         WebSocketUtils.onClose(this.getName());
+        PoolExecBlockingQueueUtil.offer(this.getName());
     }
 
     @Override
     public void testStarted(String host) {
         LogUtil.debug("TestStarted " + this.getName());
-
     }
 
     @Override

File: backend/src/main/java/io/metersphere/log/vo/api/DefinitionReference.java
Patch:
@@ -29,6 +29,7 @@ public class DefinitionReference {
         definitionColumns.put("response", "返回参数");
         definitionColumns.put("description", "描述");
         definitionColumns.put("followPeople", "关注人");
+        definitionColumns.put("remark", "备注");
         // 需要深度对比的字段，可以支持多个req1,req2
         definitionColumns.put("ms-dff-col", "request,response,tags");
 

File: backend/src/main/java/io/metersphere/base/domain/IssuesDao.java
Patch:
@@ -17,4 +17,6 @@ public class IssuesDao extends IssuesWithBLOBs {
     private String caseId;
     private int totalIssueCount;
     private List<String> tapdUsers;
+    private List<String>zentaoBuilds;
+    private String zentaoAssigned;
 }

File: backend/src/main/java/io/metersphere/service/CustomFunctionService.java
Patch:
@@ -116,6 +116,7 @@ public CustomFunctionWithBLOBs get(String id) {
     }
 
     public MsExecResponseDTO run(RunDefinitionRequest request) {
+        request.setDebug(true);
         return apiDefinitionService.run(request, new LinkedList<>());
     }
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1337,6 +1337,7 @@ public void copyTestCaseBathPublic(TestCaseBatchRequest request) {
             BeanUtils.copyBean(batchCopy, item);
             checkTestCaseExist(batchCopy);
             batchCopy.setId(UUID.randomUUID().toString());
+            batchCopy.setName("copy_" + item.getName());
             batchCopy.setCreateTime(System.currentTimeMillis());
             batchCopy.setUpdateTime(System.currentTimeMillis());
             batchCopy.setNum(getNextNum(SessionUtils.getCurrentProjectId()));

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.base.domain.ApiTestEnvironment;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.ResetOrderRequest;
@@ -192,6 +193,7 @@ public void testCaseReviewRelevance(@RequestBody ApiCaseRelevanceRequest request
     @PostMapping(value = "/batch/run")
     @MsAuditLog(module = "api_definition_case", type = OperLogConstants.EXECUTE, content = "#msClass.getLogDetails(#request.caseId)", msClass = ApiTestCaseService.class)
     public void batchRun(@RequestBody ApiCaseRunRequest request) {
+        request.setTriggerMode(ReportTriggerMode.BATCH.name());
         apiTestCaseService.batchRun(request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/ApiCaseRunRequest.java
Patch:
@@ -11,6 +11,7 @@
 @Setter
 public class ApiCaseRunRequest {
     private String reportId;
+    private String triggerMode;
     private String id;
     private List<String> ids;
     private List<OrderRequest> orders;

File: backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -91,6 +91,7 @@ public List<MsExecResponseDTO> run(ApiCaseRunRequest request) {
         for (ApiTestCaseWithBLOBs caseWithBLOBs : list) {
             ApiDefinitionExecResult report = ApiDefinitionExecResultUtil.initBase(caseWithBLOBs.getId(), APITestStatus.Running.name(), null);
             report.setName(caseWithBLOBs.getName());
+            report.setTriggerMode(request.getTriggerMode());
             caseWithBLOBs.setLastResultId(report.getId());
             caseWithBLOBs.setUpdateTime(System.currentTimeMillis());
             caseWithBLOBs.setStatus(APITestStatus.Running.name());

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -768,7 +768,7 @@ public MsExecResponseDTO jenkinsRun(RunCaseRequest request) {
         //提前生成报告
         ApiDefinitionExecResult report = ApiDefinitionExecResultUtil.add(caseWithBLOBs.getId(), APITestStatus.Running.name(), request.getReportId());
         report.setName(caseWithBLOBs.getName());
-        report.setTriggerMode(ApiRunMode.API.name());
+        report.setTriggerMode(ApiRunMode.JENKINS.name());
         report.setType(ApiRunMode.JENKINS.name());
         apiDefinitionExecResultMapper.insert(report);
         //更新接口案例的最后执行状态等信息

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -270,7 +270,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
 
         if (this.authManager != null) {
-            this.authManager.setAuth(tree, this.authManager, sampler);
+            this.authManager.setAuth(httpSamplerTree, this.authManager, sampler);
         }
 
         addCertificate(config, httpSamplerTree);

File: backend/src/main/java/io/metersphere/notice/sender/SendNoticeAspect.java
Patch:
@@ -119,7 +119,9 @@ public void sendNotice(JoinPoint joinPoint, Object retValue) {
                 String target = sendNotice.target();
                 Expression titleExp = parser.parseExpression(target);
                 Object v = titleExp.getValue(context, Object.class);
-                if (v != null) {
+                // 查询结果如果是null或者是{}，不使用这个值
+                String jsonObject = JSON.toJSONString(v);
+                if (v != null && !StringUtils.equals("{}", jsonObject)) {
                     Map<String, Object> memberValues = (Map<String, Object>) value.get(invocationHandler);
                     memberValues.put("source", JSON.toJSONString(v, WriteMapNullValue));
                 }

File: backend/src/main/java/io/metersphere/track/controller/IssueCommentController.java
Patch:
@@ -29,7 +29,7 @@ public class IssueCommentController {
     @PostMapping("/save")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
     @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.get(#request.issuesId)", targetClass = IssuesService.class,
-            event = NoticeConstants.Event.COMMENT, mailTemplate = "track/IssuesCommentUpdate", subject = "缺陷评论更新通知")
+            event = NoticeConstants.Event.COMMENT, mailTemplate = "track/IssuesCommentUpdate", subject = "缺陷")
     public IssueComment saveComment(@RequestBody IssuesRelevanceRequest request) {
         request.setId(UUID.randomUUID().toString());
         return issueCommentService.saveComment(request);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JMeterScriptUtil.java
Patch:
@@ -84,9 +84,9 @@ public static void setScript(EnvironmentConfig envConfig, HashTree samplerHashTr
     }
 
     private static void addItemHashTree(MsTestElement element, HashTree samplerHashTree, ParameterConfig config, String enviromentId) {
-        if (element != null && element.getEnvironmentId() == null) {
-            element.setEnvironmentId(enviromentId);
+        if (element != null) {
+            element.setEnvironmentId(element.getEnvironmentId() == null ? enviromentId : element.getEnvironmentId());
+            element.toHashTree(samplerHashTree, element.getHashTree(), config);
         }
-        element.toHashTree(samplerHashTree, element.getHashTree(), config);
     }
 }

File: backend/src/main/java/io/metersphere/track/controller/IssueCommentController.java
Patch:
@@ -29,7 +29,7 @@ public class IssueCommentController {
     @PostMapping("/save")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_COMMENT)
     @SendNotice(taskType = NoticeConstants.TaskType.DEFECT_TASK, target = "#targetClass.get(#request.issuesId)", targetClass = IssuesService.class,
-            event = NoticeConstants.Event.COMMENT, mailTemplate = "track/IssuesCommentUpdate", subject = "缺陷评论更新通知")
+            event = NoticeConstants.Event.COMMENT, mailTemplate = "track/IssuesCommentUpdate", subject = "缺陷")
     public IssueComment saveComment(@RequestBody IssuesRelevanceRequest request) {
         request.setId(UUID.randomUUID().toString());
         return issueCommentService.saveComment(request);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImportUtil.java
Patch:
@@ -61,6 +61,7 @@ public static ApiModule buildModule(ApiModule parentModule, String name, String
         if (parentModule != null) {
             module = apiModuleService.getNewModule(name, projectId, parentModule.getLevel() + 1);
             module.setParentId(parentModule.getId());
+            module.setProtocol(parentModule.getProtocol());
         } else {
             module = apiModuleService.getNewModule(name, projectId, 1);
         }
@@ -121,6 +122,7 @@ public static ApiModule buildModule(ApiModule parentModule, String name, String
         if (parentModule != null) {
             module = apiModuleService.getNewModule(name, projectId, parentModule.getLevel() + 1);
             module.setParentId(parentModule.getId());
+            module.setProtocol(parentModule.getProtocol());
         } else {
             module = apiModuleService.getNewModule(name, projectId, 1);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -346,13 +346,13 @@ private ApiDefinitionExecResult save(RequestResult item, String reportId, String
             ApiDefinitionExecResult prevResult = extApiDefinitionExecResultMapper.selectMaxResultByResourceIdAndType(item.getName(), type);
             if (prevResult != null) {
                 prevResult.setContent(null);
-                apiDefinitionExecResultMapper.updateByPrimaryKeyWithBLOBs(prevResult);
+                apiDefinitionExecResultMapper.updateByPrimaryKeySelective(prevResult);
             }
 
             if (StringUtils.isNotEmpty(saveResult.getTriggerMode()) && saveResult.getTriggerMode().equals("CASE")) {
                 saveResult.setTriggerMode(TriggerMode.MANUAL.name());
             }
-            apiDefinitionExecResultMapper.updateByPrimaryKeyWithBLOBs(saveResult);
+            apiDefinitionExecResultMapper.updateByPrimaryKeySelective(saveResult);
             return saveResult;
         }
         return null;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1120,8 +1120,8 @@ public String run(String testPlanID, String projectID, String userId, String tri
                 testPlanLoadCaseService.update(testPlanLoadCase);
                 LogUtil.error(e);
             }
-            performaneThreadIDMap.put(performanceRequest.getTestPlanLoadId(), reportId);
             if (StringUtils.isNotEmpty(reportId)) {
+                performaneThreadIDMap.put(performanceRequest.getTestPlanLoadId(), reportId);
                 executePerformanceIdMap.put(performanceRequest.getTestPlanLoadId(), TestPlanApiExecuteStatus.RUNNING.name());
             } else {
                 executePerformanceIdMap.put(performanceRequest.getTestPlanLoadId(), TestPlanApiExecuteStatus.PREPARE.name());

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -139,8 +139,8 @@ private synchronized void send(JmeterRunRequestDTO request) {
             JvmInfoDTO jvmInfoDTO = resources.get(index);
             TestResourceDTO testResource = jvmInfoDTO.getTestResource();
             String configuration = testResource.getConfiguration();
-            request.setCorePoolSize(MessageCache.corePoolSize);
             NodeDTO node = JSON.parseObject(configuration, NodeDTO.class);
+            request.setCorePoolSize(node.getMaxConcurrency());
             String nodeIp = node.getIp();
             Integer port = node.getPort();
             String uri = String.format(BASE_URL + "/jmeter/api/start", nodeIp, port);

File: backend/src/main/java/io/metersphere/api/dto/automation/ScenarioStatus.java
Patch:
@@ -1,5 +1,7 @@
 package io.metersphere.api.dto.automation;
 
+import org.junit.internal.runners.statements.Fail;
+
 public enum ScenarioStatus {
-    Saved, Success, Fail, Trash,Underway
+    Saved, Success, Error, Timeout, Fail, Trash, Underway
 }

File: backend/src/main/java/io/metersphere/api/exec/queue/ExecTask.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.exec.queue;
 
 import io.metersphere.api.jmeter.JMeterService;
+import io.metersphere.api.jmeter.JmeterThreadUtils;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.utils.LoggerUtil;
@@ -23,7 +24,7 @@ public void run() {
         jMeterService.addQueue(request);
         if (request.getPool() == null || !request.getPool().isPool()) {
             Object res = PoolExecBlockingQueueUtil.take(request.getReportId());
-            if (res == null) {
+            if (res == null && !JmeterThreadUtils.isRunning(request.getReportId(), request.getTestId())) {
                 LoggerUtil.info("执行报告：【 " + request.getReportId() + " 】,资源ID【 " + request.getTestId() + " 】执行超时");
             }
         }

File: backend/src/main/java/io/metersphere/api/exec/queue/PoolExecBlockingQueueUtil.java
Patch:
@@ -33,7 +33,7 @@ public static Object take(String key) {
             if (StringUtils.isNotEmpty(key) && !queue.containsKey(key)) {
                 BlockingQueue<Object> blockingQueue = new ArrayBlockingQueue<>(QUEUE_SIZE);
                 queue.put(key, blockingQueue);
-                return blockingQueue.poll(5, TimeUnit.MINUTES);
+                return blockingQueue.poll(10, TimeUnit.MINUTES);
             }
         } catch (Exception e) {
             LogUtil.error("初始化队列失败：" + e.getMessage());

File: backend/src/main/java/io/metersphere/api/exec/utils/ApiDefinitionExecResultUtil.java
Patch:
@@ -91,7 +91,6 @@ public static ApiDefinitionExecResult add(String resourceId, String status, Stri
         apiResult.setStartTime(System.currentTimeMillis());
         apiResult.setType(ApiRunMode.DEFINITION.name());
         apiResult.setStatus(status);
-
         return apiResult;
     }
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -133,7 +133,7 @@ public void editTestFollows(@PathVariable String planId,@RequestBody List<String
     @PostMapping("/delete/{testPlanId}")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_PLAN_READ_DELETE)
     @MsAuditLog(module = "track_test_plan", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#testPlanId)", msClass = TestPlanService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, target = "#targetClass.getTestPlan(#testPlanId)", targetClass = TestPlanService.class,
+    @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, target = "#targetClass.get(#testPlanId)", targetClass = TestPlanService.class,
             event = NoticeConstants.Event.DELETE, mailTemplate = "track/TestPlanDelete", subject = "测试计划通知")
     public int deleteTestPlan(@PathVariable String testPlanId) {
         checkPermissionService.checkTestPlanOwner(testPlanId);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JMeterScriptUtil.java
Patch:
@@ -86,7 +86,7 @@ public static void setScript(EnvironmentConfig envConfig, HashTree samplerHashTr
     private static void addItemHashTree(MsTestElement element, HashTree samplerHashTree, ParameterConfig config, String enviromentId) {
         if (element != null && element.getEnvironmentId() == null) {
             element.setEnvironmentId(enviromentId);
-            element.toHashTree(samplerHashTree, element.getHashTree(), config);
         }
+        element.toHashTree(samplerHashTree, element.getHashTree(), config);
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -164,7 +164,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             });
         }
         //根据配置将脚本放置在私有脚本之后
-        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), enviromentId, config, false);
+        JMeterScriptUtil.setScript(envConfig, samplerHashTree, GlobalScriptFilterRequest.TCP.name(), enviromentId, config, true);
     }
 
     private void addItemHashTree(MsTestElement element, HashTree samplerHashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/performance/engine/AbstractEngine.java
Patch:
@@ -3,7 +3,6 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
-import io.metersphere.api.dto.RunRequest;
 import io.metersphere.base.domain.LoadTestReportWithBLOBs;
 import io.metersphere.base.domain.TestResource;
 import io.metersphere.base.domain.TestResourcePool;
@@ -13,6 +12,7 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.config.JmeterProperties;
+import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.performance.service.PerformanceTestService;
 import io.metersphere.service.TestResourcePoolService;
 import io.metersphere.service.TestResourceService;
@@ -42,7 +42,7 @@ public AbstractEngine() {
         GC_ALGO = CommonBeanFactory.getBean(JmeterProperties.class).getGcAlgo();
     }
 
-    protected void initApiConfig(RunRequest runRequest) {
+    protected void initApiConfig(JmeterRunRequestDTO runRequest) {
         String resourcePoolId = runRequest.getPoolId();
         resourcePool = testResourcePoolService.getResourcePool(resourcePoolId);
         if (resourcePool == null || StringUtils.equals(resourcePool.getStatus(), ResourceStatusEnum.DELETE.name())) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -116,8 +116,8 @@ private void sendNotice(ApiDefinitionExecResult result) {
                 .operator(SessionUtils.getUserId())
                 .context(context)
                 .subject("接口用例通知")
-                .successMailTemplate("api/CaseResult")
-                .failedMailTemplate("api/CaseResult")
+                .successMailTemplate("api/CaseResultSuccess")
+                .failedMailTemplate("api/CaseResultFailed")
                 .paramMap(paramMap)
                 .event(event)
                 .build();

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -437,8 +437,8 @@ private void sendNotice(ApiScenarioWithBLOBs scenario, ApiScenarioReport result)
                 .operator(userId)
                 .context(context)
                 .subject("接口自动化通知")
-                .successMailTemplate("api/ScenarioResult")
-                .failedMailTemplate("api/ScenarioResult")
+                .successMailTemplate("api/ScenarioResultSuccess")
+                .failedMailTemplate("api/ScenarioResultFailed")
                 .paramMap(paramMap)
                 .event(event)
                 .build();

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -68,9 +68,9 @@ public String getJmeterHome() {
     }
 
     private void addDebugListener(String testId, HashTree testPlan) {
-        MsDebugListener resultCollector = new MsDebugListener();
+        MsResultCollector resultCollector = new MsResultCollector();
         resultCollector.setName(testId);
-        resultCollector.setProperty(TestElement.TEST_CLASS, MsDebugListener.class.getName());
+        resultCollector.setProperty(TestElement.TEST_CLASS, MsResultCollector.class.getName());
         resultCollector.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ViewResultsFullVisualizer"));
         resultCollector.setEnabled(true);
         testPlan.add(testPlan.getArray()[0], resultCollector);

File: backend/src/main/java/io/metersphere/websocket/c/to/c/IndexWebSocket.java
Patch:
@@ -22,7 +22,7 @@ public class IndexWebSocket {
     public void openSession(@PathParam("reportId") String reportId, Session session) {
         WebSocketUtils.ONLINE_USER_SESSIONS.put(reportId, session);
         log.info("客户端: [" + reportId + "] : 连接成功！");
-        WebSocketUtils.sendMessageAll("客户端: [" + reportId + "] : 连接成功！");
+        //WebSocketUtils.sendMessageAll("客户端: [" + reportId + "] : 连接成功！");
     }
 
     /**
@@ -45,7 +45,7 @@ public void onClose(@PathParam("reportId") String reportId, Session session) thr
         WebSocketUtils.ONLINE_USER_SESSIONS.remove(reportId);
         log.info("[" + reportId + "] : 断开连接！");
         //并且通知其他人当前用户已经断开连接了
-        WebSocketUtils.sendMessageAll("[" + reportId + "] : 断开连接！");
+        //WebSocketUtils.sendMessageAll("[" + reportId + "] : 断开连接！");
         session.close();
     }
 

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -174,7 +174,9 @@ protected void insertTestCaseIssues(String issuesId, String caseId) {
     protected void handleIssueUpdate(IssuesUpdateRequest request) {
         request.setUpdateTime(System.currentTimeMillis());
         issuesMapper.updateByPrimaryKeySelective(request);
-        handleTestCaseIssues(request);
+        if (!request.isWithoutTestCaseIssue()) {
+            handleTestCaseIssues(request);
+        }
     }
 
     protected void handleTestCaseIssues(IssuesUpdateRequest issuesRequest) {

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -28,4 +28,6 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
     private boolean thirdPartPlatform;
 
     private List<String> follows;
+
+    private boolean withoutTestCaseIssue; // 不更新用例和缺陷的关联关系
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1818,12 +1818,12 @@ public DeleteCheckResult checkBeforeDelete(ApiScenarioBatchRequest request) {
                         List<String> scenarioNames = extApiScenarioMapper.selectNameByIdIn(scenarioIdList);
 
                         if (StringUtils.isNotEmpty(deleteScenarioName) && CollectionUtils.isNotEmpty(scenarioNames)) {
-                            String nameListStr = "【";
+                            String nameListStr = "[";
                             for (String name : scenarioNames) {
                                 nameListStr += name + ",";
                             }
                             if (nameListStr.length() > 1) {
-                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + "】";
+                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + "]";
                             }
                             String msg = deleteScenarioName + " " + Translator.get("delete_check_reference_by") + ": " + nameListStr + " ";
                             checkMsgList.add(msg);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -962,12 +962,12 @@ public DeleteCheckResult checkDeleteDatas(ApiTestBatchRequest request) {
                         String deleteCaseName = extApiTestCaseMapper.selectNameById(refreceId);
 
                         if (StringUtils.isNotEmpty(deleteCaseName) && CollectionUtils.isNotEmpty(scenarioNameList)) {
-                            String nameListStr = "【";
+                            String nameListStr = "[";
                             for (String name : scenarioNameList) {
                                 nameListStr += name + ",";
                             }
                             if (nameListStr.length() > 1) {
-                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + "】";
+                                nameListStr = nameListStr.substring(0, nameListStr.length() - 1) + "]";
                             }
                             String msg = deleteCaseName + " " + Translator.get("delete_check_reference_by") + ": " + nameListStr + " ";
                             checkMsgList.add(msg);

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -43,10 +43,10 @@ public String login() {
             HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(paramMap, new HttpHeaders());
             ResponseEntity<String> response = restTemplate.exchange(loginUrl + sessionId, HttpMethod.POST, requestEntity, String.class);
             getUserResponse = (GetUserResponse) getResultForObject(GetUserResponse.class, response);
+        } catch (JSONException e) {
+            MSException.throwException(Translator.get("zentao_test_type_error"));
         } catch (Exception e) {
             LogUtil.error(e);
-            if (e instanceof JSONException)
-                MSException.throwException(Translator.get("zentao_test_type_error"));
             MSException.throwException(e.getMessage());
         }
         GetUserResponse.User user = getUserResponse.getUser();

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -18,6 +18,8 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&t=json&zentaosid=";
     private static final String REPLACE_IMG_URL="<img src=\"%s/index.php?m=file&f=read&fileID=$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("m=file&f=read&fileID=(.*?)\"/>");
+    // 注意 recTotal={1}&recPerPage={2}&pageID={3} 顺序不能调换，有点恶心
+    private static final String BUG_LIST_URL = "/?m=bug&f=browse&productID={0}&branch=&browseType=&param=0&orderBy=&recTotal={1}&recPerPage={2}&pageID={3}&t=json&zentaosid={4}";
 
     RequestUrl request = new RequestUrl();
 
@@ -38,6 +40,7 @@ public ZentaoGetClient(String url) {
         request.setImgPattern(IMG_PATTERN);
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getNotSuperModelUrl(BUG_DELETE));
+        request.setBugList(getNotSuperModelUrl(BUG_LIST_URL));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -19,6 +19,8 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
     private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
+    private static final String BUG_LIST_URL = "/bug-browse-{1}---0--{2}-{3}-{4}.json?zentaosid={5}";
+
 
     public ZentaoPathInfoClient(String url) {
         super(url);
@@ -39,6 +41,7 @@ public ZentaoPathInfoClient(String url) {
         request.setImgPattern(IMG_PATTERN);
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getUrl(BUG_DELETE));
+        request.setBugList(getUrl(BUG_LIST_URL));
         requestUrl = request;
     }
 

File: backend/src/main/java/io/metersphere/track/issue/domain/zentao/RequestUrl.java
Patch:
@@ -12,6 +12,7 @@ public class RequestUrl {
     private String sessionGet;
     private String bugCreate;
     private String bugUpdate;
+    private String bugList;
     private String bugDelete;
     private String bugGet;
     private String storyGet;

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -7,7 +7,6 @@
 import io.metersphere.api.dto.automation.parse.ScenarioImport;
 import io.metersphere.api.dto.definition.RunDefinitionRequest;
 import io.metersphere.api.exec.queue.ExecThreadPoolExecutor;
-import io.metersphere.api.jmeter.MessageCache;
 import io.metersphere.api.service.ApiAutomationService;
 import io.metersphere.base.domain.ApiScenario;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
@@ -330,7 +329,6 @@ public ApiScenrioExportResult export(@RequestBody ApiScenarioBatchRequest reques
     @GetMapping(value = "/stop/{reportId}")
     public void stop(@PathVariable String reportId) {
         if (StringUtils.isNotEmpty(reportId)) {
-            MessageCache.caseExecResourceLock.remove(reportId);
             execThreadPoolExecutor.removeQueue(reportId);
             new LocalRunner().stop(reportId);
         }

File: backend/src/main/java/io/metersphere/api/controller/ApiJmeterFileController.java
Patch:
@@ -47,8 +47,8 @@ public ResponseEntity<byte[]> downloadJmeterFiles() {
     }
 
     @GetMapping("download")
-    public ResponseEntity<byte[]> downloadJmeterFiles(@RequestParam("testId") String testId, @RequestParam("reportId") String reportId, @RequestParam("runMode") String runMode) {
-        byte[] bytes = apiJmeterFileService.downloadJmeterFiles(runMode, testId, reportId);
+    public ResponseEntity<byte[]> downloadJmeterFiles(@RequestParam("testId") String testId, @RequestParam("reportId") String reportId, @RequestParam("runMode") String runMode, @RequestParam("reportType") String reportType) {
+        byte[] bytes = apiJmeterFileService.downloadJmeterFiles(runMode, testId, reportId, reportType);
         return ResponseEntity.ok()
                 .contentType(MediaType.parseMediaType("application/octet-stream"))
                 .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + reportId + "_" + testId + ".zip\"")

File: backend/src/main/java/io/metersphere/api/exec/api/TestPlanApiExecuteService.java
Patch:
@@ -7,7 +7,6 @@
 import io.metersphere.api.exec.utils.ApiDefinitionExecResultUtil;
 import io.metersphere.api.exec.utils.GenerateHashTreeUtil;
 import io.metersphere.api.jmeter.JMeterService;
-import io.metersphere.api.jmeter.MessageCache;
 import io.metersphere.api.service.ApiExecutionQueueService;
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiExecutionQueue;
@@ -102,7 +101,6 @@ public List<MsExecResponseDTO> run(BatchRunDefinitionRequest request) {
                 ApiDefinitionExecResult report = ApiDefinitionExecResultUtil.addResult(request, testPlanApiCase, APITestStatus.Running.name(), batchMapper);
                 executeQueue.put(report.getId(), testPlanApiCase);
                 executeThreadIdMap.put(testPlanApiCase.getId(), report.getId());
-                MessageCache.caseExecResourceLock.put(report.getId(), report);
                 responseDTOS.add(new MsExecResponseDTO(testPlanApiCase.getId(), report.getId(), request.getTriggerMode()));
             });
             sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/api/jmeter/FixedTask.java
Patch:
@@ -12,9 +12,6 @@ public class FixedTask {
 
     @Scheduled(cron = "0 */5 * * * ?")
     public void execute() {
-        if (MessageCache.caseExecResourceLock.size() > 10000) {
-            MessageCache.caseExecResourceLock.clear();
-        }
         if (queueService == null) {
             queueService = CommonBeanFactory.getBean(ApiExecutionQueueService.class);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -721,7 +721,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
             if (scenario == null) {
                 return null;
             }
-            GenerateHashTreeUtil.parse(apiScenario.getScenarioDefinition(), scenario);
+            GenerateHashTreeUtil.parse(apiScenario.getScenarioDefinition(), scenario, apiScenario.getId(), null);
             String environmentType = apiScenario.getEnvironmentType();
             String environmentJson = apiScenario.getEnvironmentJson();
             String environmentGroupId = apiScenario.getEnvironmentGroupId();

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -58,7 +58,7 @@ public byte[] downloadJmeterFiles(List<BodyFile> bodyFileList) {
         return listBytesToZip(files);
     }
 
-    public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String reportId) {
+    public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String reportId, String reportType) {
         Map<String, String> planEnvMap = new HashMap<>();
         ApiScenarioWithBLOBs scenario = null;
         if (StringUtils.equalsAny(runMode, ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.JENKINS_SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {
@@ -96,7 +96,7 @@ public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String re
                     planEnvMap = environmentGroupProjectService.getEnvMap(envGroupId);
                 }
             }
-            hashTree = GenerateHashTreeUtil.generateHashTree(scenario, reportId, planEnvMap);
+            hashTree = GenerateHashTreeUtil.generateHashTree(scenario, reportId, planEnvMap, reportType);
         }
         return zipFilesToByteArray((reportId + "_" + remoteTestId), hashTree);
     }

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -114,7 +114,6 @@ public void remake(JmeterRunRequestDTO request) {
                     }
                 }
             }
-            MessageCache.caseExecResourceLock.remove(request.getReportId());
         } catch (Exception e) {
             LogUtil.error(e);
         }
@@ -143,6 +142,5 @@ public void remakeScenario(String runMode, String scenarioId, ApiScenarioWithBLO
         }
         report.setStatus(APITestStatus.Error.name());
         apiScenarioReportMapper.insert(report);
-        MessageCache.caseExecResourceLock.remove(report.getId());
     }
 }

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -4,7 +4,6 @@
 import io.metersphere.api.dto.automation.TaskRequest;
 import io.metersphere.api.exec.queue.ExecThreadPoolExecutor;
 import io.metersphere.api.jmeter.JMeterService;
-import io.metersphere.api.jmeter.MessageCache;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.ApiDefinitionExecResultMapper;
 import io.metersphere.base.mapper.ApiScenarioReportMapper;
@@ -124,7 +123,6 @@ public String stop(List<TaskRequest> reportIds) {
                             result.setStatus("STOP");
                             apiDefinitionExecResultMapper.updateByPrimaryKeySelective(result);
                             actuator = result.getActuator();
-                            MessageCache.caseExecResourceLock.remove(result.getId());
                         }
                     } else if (StringUtils.equals(request.getType(), "SCENARIO")) {
                         ApiScenarioReport report = apiScenarioReportMapper.selectByPrimaryKey(request.getReportId());
@@ -145,7 +143,6 @@ public String stop(List<TaskRequest> reportIds) {
                                 item.setStatus("STOP");
                                 apiDefinitionExecResultMapper.updateByPrimaryKeySelective(item);
                                 actuator = item.getActuator();
-                                MessageCache.caseExecResourceLock.remove(item.getId());
                                 request.setReportId(item.getId());
                                 extracted(poolMap, request, actuator);
                             }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -280,7 +280,7 @@ public ApiDefinitionWithBLOBs update(SaveApiDefinitionRequest request, List<Mult
         MockConfigService mockConfigService = CommonBeanFactory.getBean(MockConfigService.class);
         mockConfigService.updateMockReturnMsgByApi(returnModel);
         FileUtils.createBodyFiles(request.getRequest().getId(), bodyFiles);
-        return returnModel;
+        return getBLOBs(request.getId());
     }
 
     private void checkQuota() {

File: backend/src/main/java/io/metersphere/api/dto/mock/MockApiUtils.java
Patch:
@@ -407,6 +407,8 @@ private static String parseScript(String url, Map<String, String> headerMap, Req
             JSONObject queryParamsObj = requestMockParams.getQueryParamsObj();
             for (String key : queryParamsObj.keySet()) {
                 String value = String.valueOf(queryParamsObj.get(key));
+                value = StringUtils.replace(value, "\\", "\\\\");
+                value = StringUtils.replace(value, "\"", "\\\"");
                 scriptStringBuffer.append("requestParams.put(\"query." + key + "\",\"" + value + "\");\n");
             }
         }

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceTestController.java
Patch:
@@ -198,7 +198,7 @@ public ResponseEntity<byte[]> downloadJmx(@RequestBody FileOperationRequest file
         byte[] bytes = fileService.loadFileAsBytes(fileOperationRequest.getId());
         return ResponseEntity.ok()
                 .contentType(MediaType.parseMediaType("application/octet-stream"))
-                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileOperationRequest.getName() + "\"")
+                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileOperationRequest.getId()+".jmx" + "\"")
                 .body(bytes);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -690,6 +690,8 @@ public List<ApiScenarioWithBLOBs> getApiScenarios(List<String> ids) {
     }
 
     public byte[] loadFileAsBytes(FileOperationRequest fileOperationRequest) {
+        if (fileOperationRequest.getId().contains("/") || fileOperationRequest.getName().contains("/"))
+            MSException.throwException(Translator.get("invalid_parameter"));
         File file = new File(FileUtils.BODY_FILE_DIR + "/" + fileOperationRequest.getId() + "_" + fileOperationRequest.getName());
         try (FileInputStream fis = new FileInputStream(file);
              ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);) {

File: backend/src/main/java/io/metersphere/api/exec/schedule/TestPlanReportListenerScheduled.java
Patch:
@@ -26,9 +26,9 @@ public void testPlanScheduled() {
     }
 
     private void listener(String planReportId) {
-        LoggerUtil.info("检查测试计划执行报告：【" + planReportId + "】");
         if (TestPlanReportExecuteCatch.getTestPlanExecuteInfo(planReportId) != null) {
             if (!CommonBeanFactory.getBean(ExecThreadPoolExecutor.class).checkPlanReport(planReportId)) {
+                LoggerUtil.info("检查测试计划执行报告：【" + planReportId + "】");
                 CommonBeanFactory.getBean(TestPlanReportService.class).countReport(planReportId);
             }
         } else {

File: backend/src/main/java/io/metersphere/api/dto/RunModeDataDTO.java
Patch:
@@ -27,8 +27,7 @@ public RunModeDataDTO() {
 
     }
 
-    public RunModeDataDTO(HashTree hashTree, APIScenarioReportResult report, String testId) {
-        this.hashTree = hashTree;
+    public RunModeDataDTO(APIScenarioReportResult report, String testId) {
         this.report = report;
         this.testId = testId;
     }

File: backend/src/main/java/io/metersphere/api/exec/api/ApiExecuteService.java
Patch:
@@ -213,7 +213,6 @@ public MsExecResponseDTO debug(RunDefinitionRequest request, List<MultipartFile>
                 CollectionUtils.isNotEmpty(request.getTestElement().getHashTree().get(0).getHashTree()) ?
                 request.getTestElement().getHashTree().get(0).getHashTree().get(0).getName() : request.getId();
         JmeterRunRequestDTO runRequest = new JmeterRunRequestDTO(testId, request.getId(), runMode, hashTree);
-        runRequest.setConfig(request.getConfig());
         runRequest.setDebug(request.isDebug());
         // 开始执行
         jMeterService.run(runRequest);

File: backend/src/main/java/io/metersphere/api/exec/queue/ExecThreadPoolExecutor.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.exec.queue;
 
 import io.metersphere.api.exec.utils.NamedThreadFactory;
+import io.metersphere.api.jmeter.MessageCache;
 import io.metersphere.dto.JmeterRunRequestDTO;
 import io.metersphere.utils.LoggerUtil;
 import org.apache.commons.collections.CollectionUtils;
@@ -103,6 +104,7 @@ public void outApiThreadPoolExecutorLogger() {
 
     public void setCorePoolSize(int corePoolSize) {
         try {
+            MessageCache.corePoolSize = corePoolSize;
             threadPool.setCorePoolSize(corePoolSize);
             threadPool.setMaximumPoolSize(corePoolSize);
             threadPool.allowCoreThreadTimeOut(true);

File: backend/src/main/java/io/metersphere/api/exec/utils/ApiDefinitionExecResultUtil.java
Patch:
@@ -54,7 +54,7 @@ public static ApiDefinitionExecResult addResult(BatchRunDefinitionRequest reques
             apiResult.setTriggerMode(TriggerMode.BATCH.name());
         }
         apiResult.setActuator("LOCAL");
-        if (GenerateHashTreeUtil.isResourcePool(request.getConfig()).isPool()) {
+        if (request.getConfig() != null && GenerateHashTreeUtil.isResourcePool(request.getConfig().getResourcePoolId()).isPool()) {
             apiResult.setActuator(request.getConfig().getResourcePoolId());
         }
         if (StringUtils.isEmpty(request.getUserId())) {

File: backend/src/main/java/io/metersphere/api/jmeter/MessageCache.java
Patch:
@@ -10,8 +10,6 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 public class MessageCache {
-    public final static Map<String, ReportCounter> concurrencyCounter = new HashMap<>();
-
     public final static ConcurrentHashMap<String, Session> reportCache = new ConcurrentHashMap<>();
     // 用例并发锁
     public final static ConcurrentHashMap<String, ApiDefinitionExecResult> caseExecResourceLock = new ConcurrentHashMap<>();
@@ -20,4 +18,6 @@ public class MessageCache {
 
     // 定时任务报告
     public final static List<String> jobReportCache = new LinkedList<>();
+
+    public static int corePoolSize = 10;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/MsDebugListener.java
Patch:
@@ -19,7 +19,6 @@
 
 import com.alibaba.fastjson.JSON;
 import io.metersphere.api.dto.RunningParamKeys;
-import io.metersphere.api.exec.queue.SerialBlockingQueueUtil;
 import io.metersphere.api.service.MsResultService;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
@@ -105,7 +104,6 @@ public void testEnded(String host) {
         result.setResponseCode(TEST_END);
         ResultDTO dto = new ResultDTO();
         dto.setReportId(this.getName());
-        SerialBlockingQueueUtil.offer(dto, SerialBlockingQueueUtil.END_SIGN);
         try {
             if (client != null) {
                 client.close();

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -4,7 +4,7 @@
 import io.metersphere.api.dto.EnvironmentType;
 import io.metersphere.api.dto.definition.request.MsTestPlan;
 import io.metersphere.api.dto.scenario.request.BodyFile;
-import io.metersphere.api.exec.api.TestPlanApiExecuteService;
+import io.metersphere.api.exec.scenario.ApiScenarioSerialService;
 import io.metersphere.api.exec.utils.GenerateHashTreeUtil;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.JarConfig;
@@ -38,7 +38,7 @@
 public class ApiJmeterFileService {
 
     @Resource
-    private TestPlanApiExecuteService testPlanApiExecuteService;
+    private ApiScenarioSerialService apiScenarioSerialService;
     @Resource
     private TestPlanApiScenarioMapper testPlanApiScenarioMapper;
     @Resource
@@ -78,7 +78,7 @@ public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String re
         }
         HashTree hashTree;
         if (StringUtils.equalsAnyIgnoreCase(runMode, ApiRunMode.DEFINITION.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
-            hashTree = testPlanApiExecuteService.generateHashTree(remoteTestId);
+            hashTree = apiScenarioSerialService.generateHashTree(remoteTestId);
         } else {
             if (scenario == null) {
                 scenario = apiScenarioMapper.selectByPrimaryKey(remoteTestId);

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -192,6 +192,5 @@ private void extracted(Map<String, List<String>> poolMap, TaskRequest request, S
         } else {
             new LocalRunner().stop(request.getReportId());
         }
-        MessageCache.concurrencyCounter.remove(request.getReportId());
     }
 }

File: backend/src/main/java/io/metersphere/reportstatistics/service/ReportStatisticsService.java
Patch:
@@ -250,7 +250,7 @@ public List<ReportStatistics> selectByRequest(ReportStatisticsSaveRequest reques
         return reportStatisticsMapper.selectByExample(example);
     }
 
-    public String getImageContentById(ReportStatisticsWithBLOBs reportRecordId) {
+    public String getImageContentById(ReportStatisticsWithBLOBs reportRecordId, String language) {
         ChromeUtils chromeUtils = ChromeUtils.getInstance();
         HeadlessRequest headlessRequest = new HeadlessRequest();
         BaseSystemConfigDTO baseInfo = CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo();
@@ -264,7 +264,7 @@ public String getImageContentById(ReportStatisticsWithBLOBs reportRecordId) {
         platformUrl += "/echartPic?shareId=" + reportRecordId.getId();
         headlessRequest.setUrl(platformUrl);
         headlessRequest.setRemoteDriverUrl(remoteDriverUrl);
-        String imageData = chromeUtils.getImageInfo(headlessRequest);
+        String imageData = chromeUtils.getImageInfo(headlessRequest, language);
         return imageData;
     }
 

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -15,7 +15,7 @@ public class ShiroUtils {
 
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap) {
 
-        filterChainDefinitionMap.put("/resource/**", "anon");
+        filterChainDefinitionMap.put("/resource/md/get/", "anon");
         filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -30,4 +30,5 @@ public class ApiScenarioDTO extends ApiScenarioWithBLOBs {
      */
     private String env;
     private Map<String, String> environmentMap;
+    private String creator;
 }

File: backend/src/main/java/io/metersphere/reportstatistics/service/ReportStatisticsService.java
Patch:
@@ -146,7 +146,7 @@ private TestCaseCountTableDataDTO countShowTable(String groupName, List<String>
             yaxis = new ArrayList<>();
         }
         TestCaseCountTableDataDTO returnDTO = new TestCaseCountTableDataDTO();
-        String[] headers = new String[]{groupName, "总计", "testCase", "apiCase", "scenarioCase", "loadCaseCount"};
+        String[] headers = new String[]{groupName, "Count", "testCase", "apiCase", "scenarioCase", "loadCaseCount"};
 
         List<TestCaseCountTableItemDataDTO> heads = new ArrayList<>();
         boolean showTestCase = true;
@@ -155,7 +155,7 @@ private TestCaseCountTableDataDTO countShowTable(String groupName, List<String>
         boolean showLoad = true;
 
         for (String head : headers) {
-            if (StringUtils.equalsAnyIgnoreCase(head, groupName, "总计") || yaxis.contains(head)) {
+            if (StringUtils.equalsAnyIgnoreCase(head, groupName, "Count") || yaxis.contains(head)) {
                 TestCaseCountTableItemDataDTO headData = new TestCaseCountTableItemDataDTO();
                 headData.setId(UUID.randomUUID().toString());
                 headData.setValue(head);

File: backend/src/main/java/io/metersphere/reportstatistics/service/TestAnalysisService.java
Patch:
@@ -113,7 +113,7 @@ public TestAnalysisResult getReport(TestAnalysisChartRequest request) {
         List<Integer> upCollect = dtos.stream().map(item -> Integer.valueOf(item.getUpdateCount())).collect(Collectors.toList());
         // reduce求和
         Optional<Integer> updateCount = upCollect.stream().reduce(Integer::sum);
-        dtos.add(new TestAnalysisTableDTO("总计", createCount.get().toString(), updateCount.get().toString(), new LinkedList<>()));
+        dtos.add(new TestAnalysisTableDTO("Count", createCount.get().toString(), updateCount.get().toString(), new LinkedList<>()));
 
         TestAnalysisResult testAnalysisResult = new TestAnalysisResult();
         testAnalysisResult.setChartDTO(dto);

File: backend/src/main/java/io/metersphere/reportstatistics/service/TestCaseCountService.java
Patch:
@@ -338,15 +338,15 @@ public TestCaseCountResponse getReport(TestCaseCountRequest request) {
 
     private TestCaseCountTableDataDTO countShowTable(String groupName, List<String> yaxis, List<TestCaseCountTableDTO> dtos) {
         TestCaseCountTableDataDTO returnDTO = new TestCaseCountTableDataDTO();
-        String[] headers = new String[]{groupName, "总计", "testCase", "apiCase", "scenarioCase", "loadCaseCount"};
+        String[] headers = new String[]{groupName, "Count", "testCase", "apiCase", "scenarioCase", "loadCaseCount"};
 
         List<TestCaseCountTableItemDataDTO> heads = new ArrayList<>();
         boolean showTestCase = true;
         boolean showApi = true;
         boolean showScenario = true;
         boolean showLoad = true;
         for (String head : headers) {
-            if (StringUtils.equalsAnyIgnoreCase(head, groupName, "总计") || yaxis.contains(head)) {
+            if (StringUtils.equalsAnyIgnoreCase(head, groupName, "Count") || yaxis.contains(head)) {
                 TestCaseCountTableItemDataDTO headData = new TestCaseCountTableItemDataDTO();
                 headData.setId(UUID.randomUUID().toString());
                 headData.setValue(head);

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -188,6 +188,7 @@ public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
     }
 
     @PostMapping("/copy/{id}")
+    @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, event = NoticeConstants.Event.CREATE, mailTemplate = "track/TestPlanStart", subject = "测试计划通知")
     public TestPlan copy(@PathVariable String id) {
         return testPlanService.copy(id);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -551,6 +551,8 @@ private void addCertificate(ParameterConfig config, HashTree httpSamplerTree) {
                 }
                 if (StringUtils.isEmpty(this.alias)) {
                     this.alias = sslConfig.getDefaultAlias();
+                } else {
+                    this.alias = sslConfig.getAlias(this.alias);
                 }
 
                 if (StringUtils.isNotEmpty(this.alias)) {

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1202,7 +1202,7 @@ public String checkReturnWithMockExpectByBodyParam(String method, Map<String, St
 
         if (!isMatch) {
             response.setStatus(404);
-            returnStr = "未找到匹配的Mock期望!";
+            returnStr = Translator.get("mock_warning");
         }
         return returnStr;
     }
@@ -1244,7 +1244,7 @@ public String checkReturnWithMockExpectByUrlParam(String method, Map<String, Str
 
         if (!isMatch) {
             response.setStatus(404);
-            returnStr = "未找到匹配的Mock期望!";
+            returnStr = Translator.get("mock_warning");
         }
         return returnStr;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1280,7 +1280,7 @@ public void editTestCaseBath(TestCaseBatchRequest request) {
             List<TestCaseWithBLOBs> testCases = extTestCaseMapper.getCustomFieldsByIds(ids);
             testCases.forEach((testCase) -> {
                 String customFields = testCase.getCustomFields();
-                List<TestCaseBatchRequest.CustomFiledRequest> fields = null;
+                List<TestCaseBatchRequest.CustomFiledRequest> fields;
                 if (StringUtils.isBlank(customFields)) {
                     fields = new ArrayList<>();
                 } else {
@@ -1289,7 +1289,7 @@ public void editTestCaseBath(TestCaseBatchRequest request) {
 
                 boolean hasField = false;
                 for (TestCaseBatchRequest.CustomFiledRequest field : fields) {
-                    if (StringUtils.equals(request.getCustomTemplateFieldId(), field.getId())) {
+                    if (StringUtils.equals(request.getCustomField().getName(), field.getName())) {
                         field.setValue(request.getCustomField().getValue());
                         hasField = true;
                         break;

File: backend/src/main/java/io/metersphere/notice/sender/impl/DingNoticeSender.java
Patch:
@@ -26,7 +26,7 @@ public void sendNailRobot(MessageDetail messageDetail, NoticeModel noticeModel,
         OapiRobotSendRequest request = new OapiRobotSendRequest();
         request.setMsgtype("text");
         OapiRobotSendRequest.Text text = new OapiRobotSendRequest.Text();
-        text.setContent(context);
+        text.setContent("消息通知: \n" + context);
         request.setText(text);
         if (CollectionUtils.isNotEmpty(receivers)) {
             OapiRobotSendRequest.At at = new OapiRobotSendRequest.At();

File: backend/src/main/java/io/metersphere/notice/sender/impl/LarkNoticeSender.java
Patch:
@@ -30,7 +30,7 @@ public void sendLark(MessageDetail messageDetail, NoticeModel noticeModel, Strin
 
         LogUtil.info("飞书收件人: {}", userIds);
         context += StringUtils.join(collect, " ");
-        LarkClient.send(messageDetail.getWebhook(), context);
+        LarkClient.send(messageDetail.getWebhook(), "消息通知: \n" + context);
     }
 
     @Override

File: backend/src/main/java/io/metersphere/notice/sender/impl/WeComNoticeSender.java
Patch:
@@ -22,7 +22,7 @@ public class WeComNoticeSender extends AbstractNoticeSender {
     public void sendWechatRobot(MessageDetail messageDetail, NoticeModel noticeModel, String context) {
         List<Receiver> receivers = noticeModel.getReceivers();
 
-        TextMessage message = new TextMessage(context);
+        TextMessage message = new TextMessage("消息通知: \n" + context);
         if (CollectionUtils.isNotEmpty(receivers)) {
             List<String> userIds = receivers.stream()
                     .map(Receiver::getUserId)

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -294,6 +294,7 @@ public List<PlatformUser> getPlatformUser() {
 
     @Override
     public void syncIssues(Project project, List<IssuesDao> issues) {
+        isThirdPartTemplate = isThirdPartTemplate();
         issues.forEach(item -> {
             try {
                 IssuesWithBLOBs issuesWithBLOBs = issuesMapper.selectByPrimaryKey(item.getId());

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoGetClient.java
Patch:
@@ -16,7 +16,7 @@ public class ZentaoGetClient extends ZentaoClient {
     private static final String USER_GET="&module=user&methodName=getList&t=json&zentaosid=";
     private static final String BUILDS_GET="&module=build&methodName=getProductBuildPairs&productID={0}&zentaosid=";
     private static final String FILE_UPLOAD="&module=file&methodName=saveUpload&t=json&zentaosid=";
-    private static final String REPLACE_IMG_URL="<img src=\"/zentao/index.php?m=file&f=read&fileID=$1\"/>";
+    private static final String REPLACE_IMG_URL="<img src=\"%s/index.php?m=file&f=read&fileID=$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("m=file&f=read&fileID=(.*?)\"/>");
 
     RequestUrl request = new RequestUrl();
@@ -34,7 +34,7 @@ public ZentaoGetClient(String url) {
         request.setUserGet(getUrl(USER_GET));
         request.setBuildsGet(getUrl(BUILDS_GET));
         request.setFileUpload(getUrl(FILE_UPLOAD));
-        request.setReplaceImgUrl(REPLACE_IMG_URL);
+        request.setReplaceImgUrl(getReplaceImgUrl(REPLACE_IMG_URL));
         request.setImgPattern(IMG_PATTERN);
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getNotSuperModelUrl(BUG_DELETE));

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -17,7 +17,7 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String USER_GET = "/api-getModel-user-getList?zentaosid=";
     private static final String BUILDS_GET = "/api-getModel-build-getProductBuildPairs-productID={projectId}?zentaosid=";
     private static final String FILE_UPLOAD = "/api-getModel-file-saveUpload.json?zentaosid=";
-    private static final String REPLACE_IMG_URL = "<img src=\"/zentao/file-read-$1\"/>";
+    private static final String REPLACE_IMG_URL = "<img src=\"%s/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
 
     public ZentaoPathInfoClient(String url) {
@@ -35,7 +35,7 @@ public ZentaoPathInfoClient(String url) {
         request.setUserGet(getUrl(USER_GET));
         request.setBuildsGet(getUrl(BUILDS_GET));
         request.setFileUpload(getUrl(FILE_UPLOAD));
-        request.setReplaceImgUrl(REPLACE_IMG_URL);
+        request.setReplaceImgUrl(getReplaceImgUrl(REPLACE_IMG_URL));
         request.setImgPattern(IMG_PATTERN);
         request.setBugUpdate(getUrl(BUG_UPDATE));
         request.setBugDelete(getUrl(BUG_DELETE));

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.base.mapper.ext.ExtTestPlanLoadCaseMapper;
 import io.metersphere.commons.constants.PerformanceTestStatus;
 import io.metersphere.commons.constants.ReportTriggerMode;
+import io.metersphere.commons.constants.TestPlanLoadCaseStatus;
 import io.metersphere.commons.consumer.LoadTestFinishEvent;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
@@ -24,10 +25,10 @@ private void updateLoadCaseStatus(LoadTestReport loadTestReport) {
         if (StringUtils.isNotBlank(reportId)) {
             String result = "";
             if (StringUtils.equals(PerformanceTestStatus.Error.name(), status)) {
-                result = "error";
+                result = TestPlanLoadCaseStatus.error.name();
             }
             if (StringUtils.equals(PerformanceTestStatus.Completed.name(), status)) {
-                result = "success";
+                result = TestPlanLoadCaseStatus.success.name();
             }
             extTestPlanLoadCaseMapper.updateCaseStatus(reportId, result);
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -898,7 +898,7 @@ public void updatePerformanceInfo(TestPlanReport testPlanReport, Map<String, Str
                                 if (errorDataCheckMap.get(loadTestReportId) > 10) {
                                     performaneReportIDList.remove(loadTestReportId);
                                     if (performaneReportIDMap.containsKey(loadTestReportId)) {
-                                        finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanApiExecuteStatus.FAILD.name());
+                                        finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanLoadCaseStatus.error.name());
                                         caseReportMap.put(performaneReportIDMap.get(loadTestReportId), loadTestReportId);
                                     }
                                 } else {
@@ -911,14 +911,14 @@ public void updatePerformanceInfo(TestPlanReport testPlanReport, Map<String, Str
                             testPlanLog.info("TestPlanReportId[" + testPlanReport.getId() + "] SELECT performance ID:" + loadTestReportId + ",RESULT :" + loadTestReportFromDatabase.getStatus());
                             if (StringUtils.equalsAny(loadTestReportFromDatabase.getStatus(),
                                     PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
-                                finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanApiExecuteStatus.SUCCESS.name());
+                                finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanLoadCaseStatus.success.name());
                                 caseReportMap.put(performaneReportIDMap.get(loadTestReportId), loadTestReportId);
                                 performaneReportIDList.remove(loadTestReportId);
                             }
                         }
                     } catch (Exception e) {
                         performaneReportIDList.remove(loadTestReportId);
-                        finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanApiExecuteStatus.FAILD.name());
+                        finishLoadTestId.put(performaneReportIDMap.get(loadTestReportId), TestPlanLoadCaseStatus.error.name());
                         caseReportMap.put(performaneReportIDMap.get(loadTestReportId), loadTestReportId);
                         testPlanLog.error(e.getMessage());
                     }

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -39,6 +39,7 @@ public class TestResultService {
     private ApiAutomationService apiAutomationService;
 
     public void saveResult(TestResult testResult, String runMode, String debugReportId, String testId) {
+        LogUtil.info("Save result:["+testId+"]; RUN MODE:"+runMode);
         try {
             ApiTestReportVariable reportTask = null;
             if (StringUtils.equals(runMode, ApiRunMode.DEFINITION.name())) {

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -178,14 +178,14 @@ public void resetJob(Schedule request, JobKey jobKey, TriggerKey triggerKey, Cla
             scheduleManager.removeJob(jobKey, triggerKey);
         } catch (Exception e) {
             LogUtil.error(e);
-            MSException.throwException("重置定时任务-删除时异常");
+            MSException.throwException("重置定时任务-删除旧定时任务时出现异常");
         }
         try {
             scheduleManager.addCronJob(jobKey, triggerKey, clazz, request.getValue(),
                     scheduleManager.getDefaultJobDataMap(request, request.getValue(), SessionUtils.getUser().getId()));
         } catch (Exception e) {
             LogUtil.error(e);
-            MSException.throwException("重置定时任务-删除时异常");
+            MSException.throwException("重置定时任务-启动新定时任务出现异常");
         }
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtCustomFieldTemplateMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.base.domain.CustomFieldTemplate;
+import io.metersphere.dto.CustomFieldDao;
 import io.metersphere.dto.CustomFieldTemplateDao;
 import org.apache.ibatis.annotations.Param;
 
@@ -10,4 +11,6 @@ public interface ExtCustomFieldTemplateMapper {
     List<String> getCustomFieldIds(@Param("templateId") String templateId);
 
     List<CustomFieldTemplateDao> list(@Param("request") CustomFieldTemplate request);
+
+    List<CustomFieldDao> lisSimple(@Param("request") CustomFieldTemplate request);
 }

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -1255,7 +1255,7 @@ public UserDTO updateCurrentUser(User user) {
     public UserDTO.PlatformInfo getCurrentPlatformInfo(String workspaceId) {
         User user = userMapper.selectByPrimaryKey(SessionUtils.getUserId());
         String platformInfoStr = user.getPlatformInfo();
-        if (StringUtils.isBlank(workspaceId) || StringUtils.isBlank(platformInfoStr)) {
+        if (StringUtils.isBlank(workspaceId) || StringUtils.isBlank(platformInfoStr) || platformInfoStr.equals("null")) {
             return null;
         }
         JSONObject platformInfos = JSONObject.parseObject(platformInfoStr);

File: backend/src/main/java/io/metersphere/base/domain/ApiScenarioReport.java
Patch:
@@ -34,8 +34,6 @@ public class ApiScenarioReport implements Serializable {
 
     private String description;
 
-    private String testPlanScenarioId;
-
     private Long endTime;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -34,8 +34,6 @@ public interface ExtTestPlanTestCaseMapper {
 
     int updateTestCaseStates(@Param("ids") List<String> ids, @Param("reportStatus") String reportStatus);
 
-    List<String> getTestPlanTestCaseIds(String testId);
-
     /**
      * 根据项目 ids 查询 TestPlanCaseDTO 列表
      * @param ids project id list

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -12,7 +12,6 @@
 import org.springframework.util.MultiValueMap;
 
 import java.io.File;
-import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 

File: backend/src/main/java/io/metersphere/track/request/testcase/TestCaseBatchRequest.java
Patch:
@@ -15,6 +15,7 @@ public class TestCaseBatchRequest extends TestCaseWithBLOBs {
     private String projectId;
     private CustomFiledRequest customField;
     private QueryTestCaseRequest condition;
+    private String customTemplateFieldId;
 
     @Getter
     @Setter

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -770,7 +770,7 @@ public void setHeader(HashTree tree, List<KeyValue> headers) {
                 for (int i = 0; i < headerManager.getHeaders().size(); i++) {
                     Header header = headerManager.getHeader(i);
                     String headName = header.getName();
-                    if (StringUtils.equals(headName, keyValue.getName())) {
+                    if (StringUtils.equals(headName, keyValue.getName()) && !StringUtils.equals(headName, "Cookie")) {
                         hasHead = true;
                         break;
                     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -1239,6 +1239,7 @@ private boolean checkTestPlanReportIsTimeOut(String planReportId) {
             //20分钟没有案例执行结果更新，则定位超时
             long lastCountTime = executeInfo.getLastFinishedNumCountTime();
             long nowTime = System.currentTimeMillis();
+            testPlanLog.info("ReportId: ["+planReportId+"];  timeCount:"+ (nowTime - lastCountTime));
             if (nowTime - lastCountTime > 1200000) {
                 return true;
             }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -821,6 +821,7 @@ private void insertOrUpdateImportCase(ApiTestCaseWithBLOBs apiTestCase, ApiTestI
         apiTestCase.setUpdateUserId(SessionUtils.getUserId());
         if (sameCase == null) {
             apiTestCase.setId(UUID.randomUUID().toString());
+            apiTestCase.setStatus("");
             apiTestCase.setNum(apiTestCaseService.getNextNum(apiTestCase.getApiDefinitionId(), apiDefinition.getNum()));
             apiTestCase.setCreateTime(System.currentTimeMillis());
             apiTestCase.setUpdateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaGenerator.java
Patch:
@@ -139,7 +139,7 @@ private static void analyzeProperty(JSONObject concept, String propertyName, Jso
                     try {
                         Number value = object.get("mock").getAsJsonObject().get("mock").getAsNumber();
                         if (value.toString().indexOf(".") == -1) {
-                            concept.put(propertyName, value.intValue());
+                            concept.put(propertyName, value.longValue());
                         } else {
                             concept.put(propertyName, value.floatValue());
                         }

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaRunTest.java
Patch:
@@ -88,7 +88,7 @@ private static void analyzeProperty(JSONObject concept, String propertyName, Jso
                     if (object.has("mock") && object.get("mock").getAsJsonObject() != null && StringUtils.isNotEmpty(object.get("mock").getAsJsonObject().get("mock").getAsString())) {
                         Number value = object.get("mock").getAsJsonObject().get("mock").getAsNumber();
                         if (value.toString().indexOf(".") == -1) {
-                            concept.put(propertyName, value.intValue());
+                            concept.put(propertyName, value.longValue());
                         } else {
                             concept.put(propertyName, value.floatValue());
                         }

File: backend/src/main/java/io/metersphere/track/dto/TestReviewCaseDTO.java
Patch:
@@ -11,6 +11,7 @@
 public class TestReviewCaseDTO extends TestCaseWithBLOBs {
     private String reviewer;
     private String reviewerName;
+    private String maintainerName;
     private String reviewStatus;
     private String results;
     private String reviewId;

File: backend/src/main/java/io/metersphere/track/service/TestReviewTestCaseService.java
Patch:
@@ -71,6 +71,7 @@ public List<TestReviewCaseDTO> list(QueryCaseReviewRequest request) {
             String reviewId = item.getReviewId();
             List<String> userIds = getReviewUserIds(reviewId);
             item.setReviewerName(getReviewName(userIds, userMap));
+            item.setMaintainerName(userMap.get(item.getMaintainer()));
         });
         return list;
     }

File: backend/src/main/java/io/metersphere/base/domain/SwaggerUrlProject.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class SwaggerUrlProject implements Serializable {
@@ -18,5 +17,7 @@ public class SwaggerUrlProject implements Serializable {
 
     private String modeId;
 
+    private String config;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -662,7 +662,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
                 testcase.setUpdateTime(System.currentTimeMillis());
                 testcase.setNodeId(nodePathMap.get(testcase.getNodePath()));
                 testcase.setSort(sort.getAndIncrement());
-                int number = num.decrementAndGet();
+                int number = num.incrementAndGet();
                 testcase.setNum(number);
                 if (project.getCustomNum() && StringUtils.isBlank(testcase.getCustomNum())) {
                     testcase.setCustomNum(String.valueOf(number));

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -1248,10 +1248,10 @@ private boolean checkTestPlanReportIsTimeOut(String planReportId) {
         TestPlanExecuteInfo executeInfo = TestPlanReportExecuteCatch.getTestPlanExecuteInfo(planReportId);
         int unFinishNum = executeInfo.countUnFinishedNum();
         if (unFinishNum > 0) {
-            //15分钟没有案例执行结果更新，则定位超时
+            //20分钟没有案例执行结果更新，则定位超时
             long lastCountTime = executeInfo.getLastFinishedNumCountTime();
             long nowTime = System.currentTimeMillis();
-            if (nowTime - lastCountTime > 9000) {
+            if (nowTime - lastCountTime > 1200000) {
                 return true;
             }
         }

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -44,6 +44,7 @@ public static void addToReportCommonStatusResultList(Map<String, TestCaseReportS
         addToReportStatusResultList(resultMap, statusResult, "Fail");
         addToReportStatusResultList(resultMap, statusResult, "success");
         addToReportStatusResultList(resultMap, statusResult, "Success");
+        addToReportStatusResultList(resultMap, statusResult, "SUCCESS");
         addToReportStatusResultList(resultMap, statusResult, TestPlanTestCaseStatus.Prepare.name());
     }
 

File: backend/src/main/java/io/metersphere/track/dto/TestPlanLoadCaseEventDTO.java
Patch:
@@ -14,4 +14,5 @@ public class TestPlanLoadCaseEventDTO {
     private String reportId;
     private String triggerMode;
     private String status;
+    private String id;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1171,7 +1171,7 @@ public String run(String testPlanID, String projectID, String userId, String tri
             try {
                 reportId = performanceTestService.run(performanceRequest);
                 if (reportId != null) {
-                    performaneReportIDMap.put(reportId, caseID);
+                    performaneReportIDMap.put(reportId, id);
                     TestPlanLoadCaseWithBLOBs testPlanLoadCase = new TestPlanLoadCaseWithBLOBs();
                     testPlanLoadCase.setId(performanceRequest.getTestPlanLoadId());
                     testPlanLoadCase.setLoadReportId(reportId);
@@ -1189,9 +1189,9 @@ public String run(String testPlanID, String projectID, String userId, String tri
             }
             performaneThreadIDMap.put(performanceRequest.getTestPlanLoadId(), reportId);
             if (StringUtils.isNotEmpty(reportId)) {
-                executePerformanceIdMap.put(caseID, TestPlanApiExecuteStatus.RUNNING.name());
+                executePerformanceIdMap.put(performanceRequest.getTestPlanLoadId(), TestPlanApiExecuteStatus.RUNNING.name());
             } else {
-                executePerformanceIdMap.put(caseID, TestPlanApiExecuteStatus.PREPARE.name());
+                executePerformanceIdMap.put(performanceRequest.getTestPlanLoadId(), TestPlanApiExecuteStatus.PREPARE.name());
             }
         }
         TestPlanReportExecuteCatch.updateTestPlanThreadInfo(planReportId, null, null, performaneThreadIDMap);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -162,7 +162,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             tree.add(ParameterConfig.valueSupposeMock(arguments));
         }
         ElementUtil.addCsvDataSet(tree, variables, config, "shareMode.group");
-        ElementUtil.addCounter(tree, variables);
+        ElementUtil.addCounter(tree, variables, false);
         ElementUtil.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(this.headers)) {
             config.setHeaders(this.headers);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -60,7 +60,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         final HashTree groupTree = controller(tree);
         if (CollectionUtils.isNotEmpty(config.getVariables())) {
             ElementUtil.addCsvDataSet(groupTree, config.getVariables(), config, "shareMode.thread");
-            ElementUtil.addCounter(groupTree, config.getVariables());
+            ElementUtil.addCounter(groupTree, config.getVariables(), true);
             ElementUtil.addRandom(groupTree, config.getVariables());
         }
 

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanUrl.java
Patch:
@@ -11,4 +11,5 @@ public class PostmanUrl {
     private String protocol;
     private String port;
     private List<PostmanKeyValue> query;
+    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -31,6 +31,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         requestDesc.getAuth(); // todo 认证方式等待优化
         PostmanUrl url = requestDesc.getUrl();
         MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url == null ? "" : url.getRaw(), requestDesc.getMethod());
+        request.setRest(parseKeyValue(requestDesc.getUrl().getVariable()));
         if (StringUtils.isNotBlank(request.getPath())) {
             String path = request.getPath().split("\\?")[0];
             path = parseVariable(path);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -933,7 +933,7 @@ private void getHashTree(List<MsTestElement> tree, ScenarioEnv env) {
                         // 校验是否是全路径
                         MsHTTPSamplerProxy httpSamplerProxy = (MsHTTPSamplerProxy) tr;
                         if (httpSamplerProxy.isEnable()) {
-                            if (StringUtils.isBlank(httpSamplerProxy.getUrl()) || !ElementUtil.isURL(httpSamplerProxy.getUrl())) {
+                            if (StringUtils.isBlank(httpSamplerProxy.getUrl()) || (httpSamplerProxy.getIsRefEnvironment() != null && httpSamplerProxy.getIsRefEnvironment())) {
                                 env.setFullUrl(false);
                                 env.getProjectIds().add(httpSamplerProxy.getProjectId());
                             }

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -59,8 +59,6 @@ public static void calculatePlanReport(List<PlanReportCaseDTO> planReportCaseDTO
                 if (StringUtils.equals(successStatus, status)) {
                     report.setPassCount(report.getPassCount() + 1);
                 }
-            }else {
-                System.out.println(status);
             }
             TestPlanUtils.getStatusResultMap(statusResultMap, status);
         });

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -442,7 +442,7 @@ public String modeRun(BatchRunDefinitionRequest request) {
         }
         // 开始选择执行模式
         if (request.getConfig() != null && request.getConfig().getMode().equals(RunModeConstants.SERIAL.toString())) {
-            Map<TestPlanApiCase, ApiDefinitionExecResult> executeQueue = new HashMap<>();
+            Map<TestPlanApiCase, ApiDefinitionExecResult> executeQueue = new LinkedHashMap<>();
 
             //记录案例线程结果以及执行失败的案例ID
             Map<String, String> executeThreadIdMap = new HashMap<>();

File: backend/src/main/java/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java
Patch:
@@ -112,6 +112,9 @@ protected HTTPSampleResult sample(URL u, String method, boolean areFollowingRedi
         }
         try {
             String url = toExternalForm(u);
+            if (StringUtils.isNotEmpty(url) && url.startsWith("http:/http")) {
+                url = url.substring(6);
+            }
             u = new URL(url);
         } catch (Exception ex) {
             LogUtil.error(ex);

File: backend/src/main/java/io/metersphere/controller/request/EnvironmentGroupRequest.java
Patch:
@@ -19,4 +19,5 @@ public class EnvironmentGroupRequest extends EnvironmentGroup {
      */
     private Map<String, String> map;
     private List<String> groupIds;
+    private List<String> projectIds;
 }

File: backend/src/main/java/io/metersphere/api/service/MsResultService.java
Patch:
@@ -102,6 +102,9 @@ public void delete(String testId) {
 
     public void formatTestResult(TestResult testResult, Map<String, ScenarioResult> scenarios, SampleResult result) {
         String scenarioName = StringUtils.substringBeforeLast(result.getThreadName(), THREAD_SPLIT);
+        if (StringUtils.equals(scenarioName, "parallel")) {
+            scenarioName = testResult.getTestId();
+        }
         ScenarioResult scenarioResult;
         if (!scenarios.containsKey(scenarioName)) {
             scenarioResult = new ScenarioResult();

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -187,8 +187,8 @@ private void sendTask(ApiTestReportVariable report, TestResult testResult) {
 
         String subject = "";
         String event = "";
-        String successContext = "${operator}执行接口测试成功: ${name}" + ", 报告: ${reportUrl}";
-        String failedContext = "${operator}执行接口测试失败: ${name}" + ", 报告: ${reportUrl}";
+        String successContext = "${operator}执行接口自动化成功: ${name}" + ", 报告: ${reportUrl}";
+        String failedContext = "${operator}执行接口自动化失败: ${name}" + ", 报告: ${reportUrl}";
 
         if (StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())) {
             subject = Translator.get("task_notification_jenkins");

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -42,7 +42,7 @@ public void delete(@PathVariable(value = "id") String id) {
     }
 
     @PostMapping("/update")
-    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
+    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id,#request.customFields)", content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
     public void update(@RequestBody UpdateIssueTemplateRequest request) {
         issueTemplateService.update(request);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -35,4 +35,6 @@ public interface ExtProjectMapper {
     long getProjectMemberSize(@Param("projectId") String projectId);
 
     List<Project>getProjectByUserId(@Param("userId")String userId);
+
+    int getProjectPlanBugSize(@Param("projectId") String projectId);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -174,9 +174,9 @@ private JSR223Assertion jsr223Assertion(MsAssertionJSR223 assertionJSR223) {
         JSR223Assertion assertion = new JSR223Assertion();
         assertion.setEnabled(this.isEnable());
         if (StringUtils.isNotEmpty(assertionJSR223.getDesc())) {
-            assertion.setName("JSR223" + "==" + this.getName() + "==" + assertionJSR223.getDesc() + "==" + assertionJSR223.getScript());
+            assertion.setName("JSR223" + "==" + this.getName() + "==" + assertionJSR223.getDesc() + "&&" + assertionJSR223.getScript());
         } else {
-            assertion.setName("JSR223" + "==" + this.getName() + "==" + "JSR223Assertion" + "==" + assertionJSR223.getScript());
+            assertion.setName("JSR223" + "==" + this.getName() + "==" + "JSR223Assertion" + "&&" + assertionJSR223.getScript());
         }
         assertion.setProperty(TestElement.TEST_CLASS, JSR223Assertion.class.getName());
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -810,6 +810,9 @@ public String jenkinsRun(RunCaseRequest request) {
         if (caseWithBLOBs == null) {
             return null;
         }
+        if (StringUtils.isBlank(request.getEnvironmentId())) {
+            request.setEnvironmentId(extApiTestCaseMapper.getApiCaseEnvironment(request.getCaseId()));
+        }
         //提前生成报告
         ApiDefinitionExecResult report = addResult(caseWithBLOBs.getId(), APITestStatus.Running.name(), request.getReportId());
         report.setName(caseWithBLOBs.getName());
@@ -1202,9 +1205,7 @@ public ApiTestEnvironment getApiCaseEnvironment(String caseId) {
         if (StringUtils.isBlank(environmentId)) {
             return null;
         }
-        // "environmentId"
         try {
-            environmentId = environmentId.substring(1, environmentId.length() - 1);
             return apiTestEnvironmentMapper.selectByPrimaryKey(environmentId);
         } catch (Exception e) {
             LogUtil.error("api case environmentId incorrect parsing. api case id: " + caseId);

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -196,7 +196,7 @@ public void batchRun(@RequestBody ApiCaseBatchRequest request) {
     @PostMapping(value = "/jenkins/run")
     @MsAuditLog(module = "api_definition_case", type = OperLogConstants.EXECUTE, content = "#msClass.getLogDetails(#request.caseId)", msClass = ApiTestCaseService.class)
     public String jenkinsRun(@RequestBody RunCaseRequest request) {
-        return apiTestCaseService.run(request);
+        return apiTestCaseService.jenkinsRun(request);
     }
 
     @GetMapping(value = "/jenkins/exec/result/{id}")

File: backend/src/main/java/io/metersphere/base/domain/CustomField.java
Patch:
@@ -30,5 +30,7 @@ public class CustomField implements Serializable {
 
     private String options;
 
+    private String defaultValue;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -24,7 +24,7 @@ public class IssueTemplateController {
     private IssueTemplateService issueTemplateService;
 
     @PostMapping("/add")
-    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#request.id)", msClass = IssueTemplateService.class)
+    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
     public void add(@RequestBody UpdateIssueTemplateRequest request) {
         issueTemplateService.add(request);
     }
@@ -42,7 +42,7 @@ public void delete(@PathVariable(value = "id") String id) {
     }
 
     @PostMapping("/update")
-    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request.id)", msClass = IssueTemplateService.class)
+    @MsAuditLog(module = "workspace_template_settings_issue", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", content = "#msClass.getLogDetails(#request)", msClass = IssueTemplateService.class)
     public void update(@RequestBody UpdateIssueTemplateRequest request) {
         issueTemplateService.update(request);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -121,10 +121,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                                 });
                         this.setHeaders(headers);
                     }
-                    if (element.get("environmentMap") != null) {
-                        this.setEnvironmentMap((Map) element.get("environmentMap"));
-                    }
                     this.setHashTree(sourceHashTree);
+                    hashTree = sourceHashTree;
                 }
 
             } catch (Exception ex) {

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeEvent.java
Patch:
@@ -76,7 +76,7 @@ public void sendNotice(LoadTestReport loadTestReport) {
             NoticeModel noticeModel = NoticeModel.builder()
                     .operator(loadTestReport.getUserId())
                     .successContext(successContext)
-                    .successMailTemplate("PerformanceApiSuccessNotification")
+                    .successMailTemplate("PerformanceSuccessNotification")
                     .failedContext(failedContext)
                     .failedMailTemplate("PerformanceFailedNotification")
                     .testId(loadTestReport.getTestId())

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -800,9 +800,7 @@ public String run(RunCaseRequest request) {
             //通过测试计划id查询环境
             request.setReportId(request.getTestPlanId());
         }
-        if (StringUtils.equals(request.getRunMode(), ApiRunMode.JENKINS.name())) {
-            request.setReportId(request.getEnvironmentId());
-        }
+
         // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
         if (testCaseWithBLOBs != null && StringUtils.isNotEmpty(testCaseWithBLOBs.getRequest())) {
             try {

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -73,7 +73,7 @@ public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String re
             }
         }
         HashTree hashTree;
-        if (StringUtils.equalsAnyIgnoreCase(runMode, ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
+        if (StringUtils.equalsAnyIgnoreCase(runMode, ApiRunMode.DEFINITION.name(), ApiRunMode.JENKINS_API_PLAN.name(),ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
             String testId = remoteTestId;
             if (remoteTestId.contains(":")) {
                 //执行测试计划案例时会有拼接ID,ID为 planTestCaseId:测试计划报告ID

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -10,5 +10,6 @@ public enum ReportTriggerMode {
     CASE,
     TEST_PLAN_SCHEDULE,
     TEST_PLAN_API,
-    API_PLAN
+    API_PLAN,
+    BATCH
 }

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -36,6 +36,7 @@ private void updateLoadCaseStatus(LoadTestReport loadTestReport) {
     @Override
     public void execute(LoadTestReport loadTestReport) {
         if (StringUtils.equals(ReportTriggerMode.MANUAL.name(), loadTestReport.getTriggerMode())
+                || StringUtils.equals(ReportTriggerMode.BATCH.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.TEST_PLAN_SCHEDULE.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.TEST_PLAN_API.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/document/DocumentElement.java
Patch:
@@ -46,12 +46,12 @@ public DocumentElement(String name, String type, Object expectedOutcome, List<Do
         }
     }
 
-    public DocumentElement(String name, String type, Object expectedOutcome, boolean typeVerification, List<DocumentElement> children) {
+    public DocumentElement(String name, String type, Object expectedOutcome, boolean include, List<DocumentElement> children) {
         this.id = UUID.randomUUID().toString();
         this.name = name;
         this.expectedOutcome = expectedOutcome;
         this.type = type;
-        this.typeVerification = typeVerification;
+        this.include = include;
         this.children = children == null ? this.children = new LinkedList<>() : children;
         this.rowspan = 1;
         this.contentVerification = "value_eq";

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -125,6 +125,7 @@ private JSONPostProcessor jsonPostProcessor(MsExtractJSONPath extractJSONPath, S
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("JSONPostProcessorGui"));
         extractor.setRefNames(extractJSONPath.getVariable());
         extractor.setJsonPathExpressions(extractJSONPath.getExpression());
+        extractor.setComputeConcatenation(true);
         if (extractJSONPath.isMultipleMatching()) {
             extractor.setMatchNumbers("-1");
         }

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.serializer.SerializerFeature;
 import io.metersphere.api.dto.scenario.request.BodyFile;
-import io.metersphere.commons.json.JSONSchemaGenerator;
+import io.metersphere.commons.json.JSONSchemaRunTest;
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.jmeter.utils.ScriptEngineUtils;
 import lombok.Data;
@@ -87,7 +87,7 @@ private void parseJonBodyMock() {
         if (StringUtils.isNotBlank(this.type) && StringUtils.equals(this.type, "JSON")) {
             if(StringUtils.isNotEmpty(this.format) && this.getJsonSchema() != null
                     && "JSON-SCHEMA".equals(this.format)) {
-                this.raw = JSONSchemaGenerator.getJson(com.alibaba.fastjson.JSON.toJSONString(this.getJsonSchema()));
+                this.raw = JSONSchemaRunTest.getJson(com.alibaba.fastjson.JSON.toJSONString(this.getJsonSchema()));
             } else {    //  json 文本也支持 mock 参数
                 try {
                     JSONObject jsonObject = com.alibaba.fastjson.JSON.parseObject(this.getRaw());

File: backend/src/main/java/io/metersphere/api/dto/definition/BatchRunDefinitionRequest.java
Patch:
@@ -19,4 +19,6 @@ public class BatchRunDefinitionRequest {
 
     //测试计划报告ID。 测试计划执行时使用
     private String planReportId;
+
+    private String userId;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -73,7 +73,7 @@ public byte[] downloadJmeterFiles(String runMode, String remoteTestId, String re
             }
         }
         HashTree hashTree;
-        if (ApiRunMode.DEFINITION.name().equals(runMode) || ApiRunMode.API_PLAN.name().equals(runMode) || ApiRunMode.MANUAL_PLAN.name().equals(runMode)) {
+        if (StringUtils.equalsAnyIgnoreCase(runMode, ApiRunMode.DEFINITION.name(), ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
             String testId = remoteTestId;
             if (remoteTestId.contains(":")) {
                 //执行测试计划案例时会有拼接ID,ID为 planTestCaseId:测试计划报告ID

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -677,7 +677,7 @@ private String getRestParameters(String path) {
                 try {
                     String value = keyValue.getValue() != null && keyValue.getValue().startsWith("@") ?
                             ScriptEngineUtils.buildFunctionCallString(keyValue.getValue()) : keyValue.getValue();
-                    value = keyValue.isUrlEncode() ? URLEncoder.encode(value, "utf-8") : value;
+                    value = keyValue.isUrlEncode() ? "${__urlencode(" + value + ")}" : value;
                     keyValueMap.put(keyValue.getName(), value);
                 } catch (Exception e) {
                     LogUtil.error(e);
@@ -708,7 +708,7 @@ private String getPostQueryParameters(String path) {
             if (keyValue.getValue() != null) {
                 try {
                     String value = keyValue.getValue().startsWith("@") ? ScriptEngineUtils.buildFunctionCallString(keyValue.getValue()) : keyValue.getValue();
-                    value = keyValue.isUrlEncode() ? URLEncoder.encode(value, "utf-8") : value;
+                    value = keyValue.isUrlEncode() ? "${__urlencode(" + value + ")}" : value;
                     stringBuffer.append("=").append(value);
                 } catch (Exception e) {
                     LogUtil.error(e);
@@ -726,7 +726,6 @@ private Arguments httpArguments(List<KeyValue> list) {
                 filter(KeyValue::isEnable).forEach(keyValue -> {
                     try {
                         String value = StringUtils.isNotEmpty(keyValue.getValue()) && keyValue.getValue().startsWith("@") ? ScriptEngineUtils.buildFunctionCallString(keyValue.getValue()) : keyValue.getValue();
-                        value = keyValue.isUrlEncode() ? URLEncoder.encode(value, "utf-8") : value;
                         HTTPArgument httpArgument = new HTTPArgument(keyValue.getName(), value);
                         if (keyValue.getValue() == null) {
                             httpArgument.setValue("");

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -175,7 +175,6 @@ protected void handleIssueUpdate(IssuesUpdateRequest request) {
     }
 
     protected void handleTestCaseIssues(IssuesUpdateRequest issuesRequest) {
-        if (!issuesRequest.isWithCaseId()) return;
         String issuesId = issuesRequest.getId();
         if (StringUtils.isNotBlank(issuesRequest.getTestCaseId())) {
             insertTestCaseIssues(issuesId, issuesRequest.getTestCaseId());

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -12,8 +12,6 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
     private String content;
     private String testCaseId;
     private String workspaceId;
-    // 带caseId的更新, 默认更新是同时保存用例的关联关系，脑图保存缺陷，不带caseId
-    private boolean withCaseId = true;
 
     private List<String> tapdUsers;
     /**

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaToDocumentUtils.java
Patch:
@@ -74,7 +74,7 @@ private static void analyzeProperty(List<DocumentElement> concept,
             Object value = null;
             boolean required = requiredList.contains(propertyName);
             if (object.has("default")) {
-                value = object.get("default") != null ? object.get("default").toString() : "";
+                value = object.get("default") != null ? object.get("default").getAsString() : "";
                 concept.add(new DocumentElement(propertyName, propertyObjType, value, required, null));
             } else if (object.has("enum")) {
                 try {
@@ -97,7 +97,7 @@ private static void analyzeProperty(List<DocumentElement> concept,
             } else if (propertyObjType.equals("string")) {
                 // 先设置空值
                 if (object.has("default")) {
-                    value = object.get("default") != null ? object.get("default").toString() : "";
+                    value = object.get("default") != null ? object.get("default").getAsString() : "";
                 }
                 if (object.has("mock") && object.get("mock").getAsJsonObject() != null && StringUtils.isNotEmpty(object.get("mock").getAsJsonObject().get("mock").getAsString()) && StringUtils.isNotEmpty(object.get("mock").getAsJsonObject().get("mock").getAsString())) {
                     value = ScriptEngineUtils.buildFunctionCallString(object.get("mock").getAsJsonObject().get("mock").getAsString());
@@ -140,7 +140,7 @@ private static void analyzeProperty(List<DocumentElement> concept,
                 concept.add(new DocumentElement(propertyName, propertyObjType, value, required, null));
             } else if (propertyObjType.equals("array")) {
                 List<DocumentElement> elements = new LinkedList<>();
-                concept.add(new DocumentElement(propertyName, propertyObjType, "", requiredList.contains(propertyName), elements));
+                concept.add(new DocumentElement(propertyName, propertyObjType, "", requiredList.contains(propertyName), true, elements));
                 JsonArray jsonArray = object.get("items").getAsJsonArray();
                 analyzeArray(propertyName, jsonArray, elements, requiredList);
             } else if (propertyObjType.equals("object")) {

File: backend/src/main/java/io/metersphere/controller/request/MdUploadRequest.java
Patch:
@@ -7,4 +7,5 @@
 @Setter
 public class MdUploadRequest {
     private String id;
+    private String fileName;
 }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -172,6 +172,8 @@ public IssuesWithBLOBs addIssue(IssuesUpdateRequest issuesRequest) {
 
             // 用例与第三方缺陷平台中的缺陷关联
             handleTestCaseIssues(issuesRequest);
+        } else {
+            MSException.throwException("请确认该Zentao账号是否开启超级modle调用接口权限");
         }
         return issues;
     }
@@ -235,7 +237,7 @@ public void testAuth() {
 
     @Override
     public void userAuth(UserDTO.PlatformInfo userInfo) {
-        setUserConfig();
+        setUserConfig(userInfo);
         zentaoClient.login();
     }
 

File: backend/src/main/java/io/metersphere/track/request/testcase/TestPlanApiCaseBatchRequest.java
Patch:
@@ -23,4 +23,6 @@ public class TestPlanApiCaseBatchRequest extends TestPlanTestCase {
     private Map<String, String> projectEnvMap;
 
     private ApiCaseBatchCondition condition;
+    private String environmentType;
+    private String environmentGroupId;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1138,11 +1138,11 @@ public String run(String testPlanID, String projectID, String userId, String tri
                 performanceRequest.setTestResourcePoolId(runModeConfig.getResourcePoolId());
             }
             if (StringUtils.equals(ReportTriggerMode.API.name(), triggerMode)) {
-                performanceRequest.setTriggerMode(ReportTriggerMode.API.name());
+                performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_API.name());
             } else if (StringUtils.equals(ReportTriggerMode.MANUAL.name(), triggerMode)) {
                 performanceRequest.setTriggerMode(ReportTriggerMode.MANUAL.name());
             } else {
-                performanceRequest.setTriggerMode(ReportTriggerMode.SCHEDULE.name());
+                performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_SCHEDULE.name());
             }
             String reportId = null;
             try {

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanCollection.java
Patch:
@@ -9,4 +9,5 @@ public class PostmanCollection {
 
     private PostmanCollectionInfo info;
     private List<PostmanItem> item;
+    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanUrl.java
Patch:
@@ -11,5 +11,4 @@ public class PostmanUrl {
     private String protocol;
     private String port;
     private List<PostmanKeyValue> query;
-    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -1176,6 +1176,7 @@ private void updateReportExecResult(TestPlanReportContentWithBLOBs testPlanRepor
                     ApiScenarioReport apiReport = apiScenarioReportMapper.selectByPrimaryKey(dto.getReportId());
                     if (apiReport != null) {
                         dto.setLastResult(apiReport.getStatus());
+                        dto.setStatus(apiReport.getStatus());
                     }
                 }
             }

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -163,7 +163,7 @@ public Boolean isExistReport(@PathVariable String shareId, @RequestBody LoadCase
 
     @GetMapping("/performance/report/get-jmx-content/{shareId}/{reportId}")
     public LoadTestExportJmx getJmxContent(@PathVariable String shareId, @PathVariable String reportId) {
-        return performanceReportService.getJmxContent(reportId);
+        return performanceReportService.getJmxContent(reportId).get(0);
     }
 
     @GetMapping("/performance/get-jmx-content/{shareId}/{testId}")

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1632,9 +1632,9 @@ public void buildLoadResponse(List<TestPlanLoadCaseDTO> cases) {
                                 String loadConfiguration = performanceTestService.getLoadConfiguration(item.getId());
                                 response.setFixLoadConfiguration(loadConfiguration);
                             }
-                            LoadTestExportJmx jmxContent = performanceReportService.getJmxContent(reportId);
-                            if (jmxContent != null) {
-                                response.setJmxContent(JSONObject.toJSONString(jmxContent));
+                            List<LoadTestExportJmx> jmxContent = performanceReportService.getJmxContent(reportId);
+                            if (!CollectionUtils.isEmpty(jmxContent)) {
+                                response.setJmxContent(JSONObject.toJSONString(jmxContent.get(0)));
                             }
                             List<LoadTestExportJmx> fixJmxContent = performanceTestService.getJmxContent(item.getId());
                             response.setFixJmxContent(fixJmxContent);

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanCollection.java
Patch:
@@ -9,5 +9,4 @@ public class PostmanCollection {
 
     private PostmanCollectionInfo info;
     private List<PostmanItem> item;
-    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanUrl.java
Patch:
@@ -11,4 +11,5 @@ public class PostmanUrl {
     private String protocol;
     private String port;
     private List<PostmanKeyValue> query;
+    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/base/domain/IssuesDao.java
Patch:
@@ -16,4 +16,5 @@ public class IssuesDao extends IssuesWithBLOBs {
     private List<String> caseIds;
     private String caseId;
     private int totalIssueCount;
+    private List<String> tapdUsers;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/document/Document.java
Patch:
@@ -128,7 +128,7 @@ private String getConditionStr(DocumentElement item, ElementCondition elementCon
         StringBuilder conditionStr = new StringBuilder();
         if (elementCondition != null && CollectionUtils.isNotEmpty(elementCondition.getConditions())) {
             elementCondition.getConditions().forEach(condition -> {
-                conditionStr.append(item.getLabel(item.getContentVerification()).replace("'%'", (item.getExpectedOutcome() != null ? item.getExpectedOutcome().toString() : "")));
+                conditionStr.append(item.getLabel(condition.getKey()).replace("'%'", (condition.getValue() != null ? condition.getValue().toString() : "")));
                 conditionStr.append(" and ");
             });
         }

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -37,9 +37,9 @@ public class JiraPlatform extends AbstractIssuePlatform {
 
     public JiraPlatform(IssuesRequest issuesRequest) {
         super(issuesRequest);
+        this.key = IssuesManagePlatform.Jira.name();
         jiraClientV2 = new JiraClientV2();
         setConfig();
-        this.key = IssuesManagePlatform.Jira.name();
     }
 
     @Override

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -38,9 +38,9 @@ public class TapdPlatform extends AbstractIssuePlatform {
 
     public TapdPlatform(IssuesRequest issueRequest) {
         super(issueRequest);
+        this.key = IssuesManagePlatform.Tapd.name();
         tapdClient = new TapdClient();
         setConfig();
-        this.key = IssuesManagePlatform.Tapd.name();
     }
 
     @Override

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -39,11 +39,11 @@ public class ZentaoPlatform extends AbstractIssuePlatform {
 
     public ZentaoPlatform(IssuesRequest issuesRequest) {
         super(issuesRequest);
+        this.key = IssuesManagePlatform.Zentao.name();
         ZentaoConfig zentaoConfig = getConfig();
         this.workspaceId = issuesRequest.getWorkspaceId();
         this.zentaoClient = ZentaoFactory.getInstance(zentaoConfig.getUrl(), zentaoConfig.getRequest());
         this.zentaoClient.setConfig(zentaoConfig);
-        this.key = IssuesManagePlatform.Zentao.name();
     }
 
     @Override

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -92,7 +92,7 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
                 ApiScenarioReport scenarioReport = apiScenarioReportService.complete(testResult, runMode);
                 //环境
                 if (scenarioReport != null) {
-                    ApiScenarioWithBLOBs apiScenario = apiAutomationService.getDto(scenarioReport.getScenarioId());
+                    ApiScenarioWithBLOBs apiScenario = apiAutomationService.getApiScenario(scenarioReport.getScenarioId());
                     String environment = "";
                     //执行人
                     String userName = "";

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiTestReportVariable.java
Patch:
@@ -7,6 +7,6 @@
 public class ApiTestReportVariable extends ApiTestReport {
     public String executionTime;
     public String executor;
-    public String executionEnvironment;
+    public String environment;
     public String principal;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -168,7 +168,7 @@ public ApiScenarioDTO getDto(String id) {
         return null;
     }
 
-    public ApiTestEnvironment get(String id) {
+    public ApiTestEnvironment getEnvironment(String id) {
         return apiTestEnvironmentMapper.selectByPrimaryKey(id);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1912,10 +1912,10 @@ public void preduceTestElement(RunDefinitionRequest request) throws Exception {
 
     public ReferenceDTO getReference(ApiScenarioRequest request) {
         ReferenceDTO dto = new ReferenceDTO();
-        request.setProjectId(null);
         dto.setScenarioList(extApiScenarioMapper.selectReference(request));
         QueryTestPlanRequest planRequest = new QueryTestPlanRequest();
         planRequest.setScenarioId(request.getId());
+        planRequest.setProjectId(request.getProjectId());
         dto.setTestPlanList(extTestPlanMapper.selectTestPlanByRelevancy(planRequest));
         return dto;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -741,13 +741,13 @@ public List<TestPlanFailureApiDTO> getByApiExecReportIds(Map<String,String> test
             String reportId = testPlanApiCaseReportMap.get(testPlanApiCaseId);
             dto.setReportId(reportId);
             if(StringUtils.isEmpty(reportId)){
-                dto.setStatus(defaultStatus);
+                dto.setExecResult(defaultStatus);
             }else {
                 String status = reportResult.get(reportId);
                 if(status == null){
                     status = defaultStatus;
                 }
-                dto.setStatus(status);
+                dto.setExecResult(status);
             }
         }
         return buildCases(apiTestCases);

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -511,7 +511,7 @@ public List<TestPlanFailureScenarioDTO> getAllCases(Map<String,String> idMap, bo
                 if(status == null ){
                     status = defaultStatus;
                 }
-                dto.setStatus(status);
+                dto.setLastResult(status);
             }
 
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1728,7 +1728,6 @@ public void buildApiReport(TestPlanSimpleReportDTO report, JSONObject config, Te
         if (MapUtils.isEmpty(executeInfo.getApiCaseExecInfo()) && MapUtils.isEmpty(executeInfo.getApiScenarioCaseExecInfo())) {
             return;
         }
-        ApiDefinitionExecResultMapper apiDefinitionExecResultMapper = CommonBeanFactory.getBean(ApiDefinitionExecResultMapper.class);
         if (checkReportConfig(config, "api")) {
             List<TestPlanFailureApiDTO> apiAllCases = null;
             List<TestPlanFailureScenarioDTO> scenarioAllCases = null;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1753,7 +1753,7 @@ public List<DocumentElement> getDocument(String id, String type) {
             if (body != null) {
                 String raw = body.getString("raw");
                 String dataType = body.getString("type");
-                if (StringUtils.isNotEmpty(raw) && StringUtils.isNotEmpty(dataType)) {
+                if ((StringUtils.isNotEmpty(raw) || StringUtils.isNotEmpty(body.getString("jsonSchema"))) && StringUtils.isNotEmpty(dataType)) {
                     if (StringUtils.equals(type, "JSON")) {
                         String format = body.getString("format");
                         if (StringUtils.equals(format, "JSON-SCHEMA") && StringUtils.isNotEmpty(body.getString("jsonSchema"))) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -692,7 +692,9 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
             apiDefinition.setOriginalState(sameRequest.get(0).getOriginalState());
             apiDefinition.setCaseStatus(sameRequest.get(0).getCaseStatus());
             apiDefinition.setNum(sameRequest.get(0).getNum()); //id 不变
-            apiDefinition.setTags(sameRequest.get(0).getTags()); //tag 不变
+            if (!StringUtils.equalsIgnoreCase(apiTestImportRequest.getPlatform(), ApiImportPlatform.Metersphere.name())) {
+                apiDefinition.setTags(sameRequest.get(0).getTags()); // 其他格式 tag 不变，MS 格式替换
+            }
             if (StringUtils.equalsIgnoreCase(apiDefinition.getProtocol(), RequestType.HTTP)) {
                 //如果存在则修改
                 apiDefinition.setId(sameRequest.get(0).getId());

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -237,7 +237,7 @@ private void checkExist(TestPlanRequest request) {
                 criteria.andIdNotEqualTo(request.getId());
             }
             if (loadTestMapper.selectByExample(example).size() > 0) {
-                MSException.throwException(Translator.get("plan_name_already_exists"));
+                MSException.throwException(Translator.get("api_test_name_already_exists"));
             }
         }
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -32,4 +32,6 @@ public interface ExtApiScenarioReportMapper {
     List<ApiReportCountDTO> countByApiScenarioId();
 
     List<ApiScenarioReport> selectStatusByIds(@Param("ids") Collection<String> values);
+
+    List<ApiScenarioReport> selectReportByProjectId(String projectId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -148,6 +148,7 @@ public IssuesWithBLOBs getUpdateIssues(IssuesWithBLOBs issue, JSONObject bug) {
         issue.setTitle(bugObj.getTitle());
         issue.setDescription(steps);
         issue.setReporter(bugObj.getOpenedBy());
+        issue.setPlatform(key);
         issue.setCustomFields(syncIssueCustomField(issue.getCustomFields(), bug));
         return issue;
     }
@@ -311,13 +312,12 @@ public void syncIssues(Project project, List<IssuesDao> issues) {
 
     public List<ZentaoBuild> getBuilds() {
         String session = zentaoClient.login();;
-        String projectId1 = getProjectId(projectId);
         HttpHeaders httpHeaders = new HttpHeaders();
         HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(httpHeaders);
         RestTemplate restTemplate = new RestTemplate();
         String buildGet = zentaoClient.requestUrl.getBuildsGet();
         ResponseEntity<String> responseEntity = restTemplate.exchange(buildGet + session,
-                HttpMethod.GET, requestEntity, String.class, projectId1);
+                HttpMethod.GET, requestEntity, String.class, getProjectId(projectId));
         String body = responseEntity.getBody();
         JSONObject obj = JSONObject.parseObject(body);
 

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -29,7 +29,8 @@ public ZentaoClient(String url) {
         ENDPOINT = url;
     }
 
-    private static final String BUG_LIST_URL="?m=bug&f=browse&productID={0}&branch=&browseType=&param=0&orderBy=&pageID={1}&recPerPage={2}&t=json&zentaosid=";
+    // 注意 recTotal={1}&recPerPage={2}&pageID={3} 顺序不能调换，实在恶心
+    private static final String BUG_LIST_URL="?m=bug&f=browse&productID={0}&branch=&browseType=&param=0&orderBy=&recTotal={1}&recPerPage={2}&pageID={3}&t=json&zentaosid={4}";
 
     public String login() {
         GetUserResponse getUserResponse = new GetUserResponse();
@@ -121,7 +122,7 @@ public JSONObject getBugById(String id) {
     public JSONArray getBugsByProjectId(String projectId, int pageNum, int pageSize) {
         String sessionId = login();
         ResponseEntity<String> response = restTemplate.exchange(getBaseUrl() + BUG_LIST_URL,
-                HttpMethod.GET, null, String.class, projectId, pageNum, pageSize, sessionId);
+                HttpMethod.GET, null, String.class, projectId, 9999999, pageSize, pageNum, sessionId);
         return JSONObject.parseObject(response.getBody()).getJSONObject("data").getJSONArray("bugs");
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -374,7 +374,9 @@ private HttpConfig getHttpConfig(ParameterConfig config) {
                     try {
                         JSONObject authObject = environmentConfig.getAuthManager().getJSONObject("authManager");
                         if (authObject != null) {
-                            this.authManager = authObject.toJavaObject(MsAuthManager.class);
+                            if (authObject.containsKey("verification") && !StringUtils.equalsIgnoreCase(authObject.getString("verification"), "No Auth")) {
+                                this.authManager = authObject.toJavaObject(MsAuthManager.class);
+                            }
                         }
                     } catch (Exception e) {
                     }

File: backend/src/main/java/io/metersphere/api/dto/automation/TaskRequest.java
Patch:
@@ -6,5 +6,6 @@
 public class TaskRequest {
     private String type;
     private String reportId;
+    private String projectId;
 
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtLoadTestReportMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.LoadTestReport;
 import io.metersphere.base.domain.LoadTestReportWithBLOBs;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.dto.ReportDTO;
@@ -19,4 +20,6 @@ public interface ExtLoadTestReportMapper {
     List<String> selectResourceId(@Param("reportId") String reportId);
 
     void updateJmxContentIfAbsent(LoadTestReportWithBLOBs record);
+
+    List<LoadTestReport> selectReportByProjectId(String projectId);
 }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -40,6 +40,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/api/jmeter/download", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/files", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/jar", "anon");
+        filterChainDefinitionMap.put("/api/jmeter/download/plug/jar", "anon");
 
         // for swagger
         filterChainDefinitionMap.put("/swagger-ui.html", "anon");

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanFailureApiDTO.java
Patch:
@@ -10,4 +10,5 @@
 @JsonInclude(JsonInclude.Include.NON_NULL)
 public class TestPlanFailureApiDTO extends TestPlanApiCaseDTO {
     private String response;
+    private String reportId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface ExtApiDefinitionExecResultMapper {
@@ -24,4 +25,6 @@ public interface ExtApiDefinitionExecResultMapper {
     String  selectExecResult(String resourceId);
 
     ApiDefinitionExecResult selectPlanApiMaxResultByTestIdAndType(String resourceId, String type);
+
+    List<ApiDefinitionExecResult> selectStatusByIdList(@Param("ids")Collection<String> values);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.dto.ApiReportCountDTO;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface ExtApiScenarioReportMapper {
@@ -29,4 +30,6 @@ public interface ExtApiScenarioReportMapper {
     List<String> idList(@Param("request") QueryAPIReportRequest request);
 
     List<ApiReportCountDTO> countByApiScenarioId();
+
+    List<ApiScenarioReport> selectStatusByIds(@Param("ids") Collection<String> values);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/dto/TestPlanLoadCaseDTO.java
Patch:
@@ -24,6 +24,7 @@ public class TestPlanLoadCaseDTO extends TestPlanLoadCaseWithBLOBs {
     private String num;
     private String name;
     private ResponseDTO response;
+    private String reportId;
 
     @Getter
     @Setter

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -595,7 +595,7 @@ public TestPlanReport updateReport(TestPlanReport testPlanReport, TestPlanReport
         Map<String, Map<String, String>> testPlanExecuteResult = executeInfo.getExecutedResult();
         testPlanLog.info("ReportId[" + testPlanReport.getId() + "] COUNT OVER. COUNT RESULT :" + JSONObject.toJSONString(testPlanExecuteResult));
 
-        TestPlanSimpleReportDTO reportDTO = testPlanService.buildPlanReport(executeInfo, testPlanReport.getTestPlanId(), false);
+        TestPlanSimpleReportDTO reportDTO = testPlanService.buildPlanReport(executeInfo, testPlanReport.getTestPlanId(), apiCaseIsOk && scenarioIsOk && performanceIsOk);
         reportDTO.setStartTime(testPlanReport.getStartTime());
         long endTime = System.currentTimeMillis();
         //全部结束时，更新时间
@@ -1102,7 +1102,7 @@ public void countReport(String planReportId) {
             //如果间隔超过5分钟没有案例执行完成，则把执行结果变成false
             long lastCountTime = executeInfo.getLastFinishedNumCountTime();
             long nowTime = System.currentTimeMillis();
-            if (nowTime - lastCountTime > 300000) {
+            if (nowTime - lastCountTime > 1800000) {
                 TestPlanReportExecuteCatch.finishAllTask(planReportId);
             }
         }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -43,7 +43,7 @@ public ZentaoPlatform(IssuesRequest issuesRequest) {
         super(issuesRequest);
         ZentaoConfig zentaoConfig = getConfig();
         this.workspaceId = issuesRequest.getWorkspaceId();
-        this.zentaoClient = ZentaoFactory.getInstance(zentaoConfig.getRequest());
+        this.zentaoClient = ZentaoFactory.getInstance(zentaoConfig.getUrl(), zentaoConfig.getRequest());
         this.zentaoClient.setConfig(zentaoConfig);
     }
 

File: backend/src/main/java/io/metersphere/controller/GroupController.java
Patch:
@@ -42,7 +42,7 @@ public Pager<List<GroupDTO>> getGroupList(@PathVariable int goPage, @PathVariabl
     }
 
     @GetMapping("/get/all")
-    public List<Group> getAllGroup() {
+    public List<GroupDTO> getAllGroup() {
         return groupService.getAllGroup();
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/JmeterDefinitionParser.java
Patch:
@@ -247,7 +247,7 @@ private void preBuildApiDefinition(ApiDefinitionWithBLOBs apiDefinition, MsTestE
         apiDefinition.setName(element.getName());
         apiDefinition.setProjectId(this.projectId);
         apiDefinition.setRequest(JSON.toJSONString(element));
-        if (this.selectModule != null) {
+        if (this.apiModule != null) {
             apiDefinition.setModuleId(this.apiModule.getId());
             if (StringUtils.isNotBlank(this.selectModulePath)) {
                 apiDefinition.setModulePath(this.selectModulePath + "/" + this.apiModule.getName());

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -526,7 +526,7 @@ private User updateCurrentUserPwd(EditPassWordRequest request) {
         String newPassword = request.getNewpassword();
         String newPasswordMd5 = CodingUtil.md5(newPassword);
         if(StringUtils.equals(oldPassword,newPasswordMd5)){
-            MSException.throwException(Translator.get("新修改的密码不能与旧密码一样 "));
+            return null;
         }
         UserExample userExample = new UserExample();
         userExample.createCriteria().andIdEqualTo(SessionUtils.getUser().getId()).andPasswordEqualTo(oldPassword);

File: backend/src/main/java/io/metersphere/service/QuotaService.java
Patch:
@@ -7,7 +7,9 @@
 
 public interface QuotaService {
 
-    void checkAPITestQuota();
+    void checkAPIDefinitionQuota();
+
+    void checkAPIAutomationQuota();
 
     void checkLoadTestQuota(TestPlanRequest request, boolean checkPerformance);
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -657,6 +657,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
                     testcase.setCustomNum(String.valueOf(number));
                 }
                 testcase.setReviewStatus(TestCaseReviewStatus.Prepare.name());
+                testcase.setStatus(TestCaseReviewStatus.Prepare.name());
                 testcase.setOrder(nextOrder);
                 mapper.insert(testcase);
                 nextOrder += 5000;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -45,7 +45,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
     private void addAssertions(HashTree hashTree) {
         // 增加JSON文档结构校验
         if (this.getDocument() != null && this.getDocument().getType().equals("JSON")) {
-            if (StringUtils.isNotEmpty(this.getDocument().getData().getJsonFollowAPI())) {
+            if (StringUtils.isNotEmpty(this.getDocument().getData().getJsonFollowAPI()) && !this.getDocument().getData().getJsonFollowAPI().equals("false")) {
                 ApiDefinitionService apiDefinitionService = CommonBeanFactory.getBean(ApiDefinitionService.class);
                 this.getDocument().getData().setJson(apiDefinitionService.getDocument(this.getDocument().getData().getJsonFollowAPI(), "JSON"));
             }
@@ -55,7 +55,7 @@ private void addAssertions(HashTree hashTree) {
         }
         // 增加XML文档结构校验
         if (this.getDocument() != null && this.getDocument().getType().equals("XML") && CollectionUtils.isNotEmpty(this.getDocument().getData().getXml())) {
-            if (StringUtils.isNotEmpty(this.getDocument().getData().getXmlFollowAPI())) {
+            if (StringUtils.isNotEmpty(this.getDocument().getData().getXmlFollowAPI()) && !this.getDocument().getData().getXmlFollowAPI().equals("false")) {
                 ApiDefinitionService apiDefinitionService = CommonBeanFactory.getBean(ApiDefinitionService.class);
                 this.getDocument().getData().setXml(apiDefinitionService.getDocument(this.getDocument().getData().getXmlFollowAPI(), "XML"));
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/document/DocumentUtils.java
Patch:
@@ -38,10 +38,10 @@ public static boolean documentChecked(Object subj, String condition, ThreadLocal
                             isTrue = getLength(subj, decimalFormatter) != getLength(item.getValue(), decimalFormatter);
                             break;
                         case "length_gt":
-                            isTrue = getLength(subj, decimalFormatter) > getLength(item.getValue(), decimalFormatter);
+                            isTrue = getLength(subj, decimalFormatter) < getLength(item.getValue(), decimalFormatter);
                             break;
                         case "length_lt":
-                            isTrue = getLength(subj, decimalFormatter) < getLength(item.getValue(), decimalFormatter);
+                            isTrue = getLength(subj, decimalFormatter) > getLength(item.getValue(), decimalFormatter);
                             break;
                         case "regular":
                             Pattern pattern = JMeterUtils.getPatternCache().getPattern(expectedValue);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1127,11 +1127,11 @@ public String run(String testPlanID, String projectID, String userId, String tri
             performanceRequest.setId(caseID);
             performanceRequest.setTestPlanLoadId(id);
             if (StringUtils.equals(ReportTriggerMode.API.name(), triggerMode)) {
-                performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_API.name());
+                performanceRequest.setTriggerMode(ReportTriggerMode.API.name());
             } else if (StringUtils.equals(ReportTriggerMode.MANUAL.name(), triggerMode)) {
                 performanceRequest.setTriggerMode(ReportTriggerMode.MANUAL.name());
             } else {
-                performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_SCHEDULE.name());
+                performanceRequest.setTriggerMode(ReportTriggerMode.SCHEDULE.name());
             }
             String reportId = null;
             try {

File: backend/src/main/java/io/metersphere/commons/json/JSONToDocumentUtils.java
Patch:
@@ -73,7 +73,7 @@ public static List<DocumentElement> getDocument(String json, String type) {
                 return getXmlDocument(json);
             } else {
                 return new LinkedList<DocumentElement>() {{
-                    this.add(new DocumentElement().newRoot("root", null));
+                    this.add(new DocumentElement().newRoot("object", null));
                 }};
             }
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -683,13 +683,14 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
             apiDefinition.setStatus(sameRequest.get(0).getStatus());
             apiDefinition.setOriginalState(sameRequest.get(0).getOriginalState());
             apiDefinition.setCaseStatus(sameRequest.get(0).getCaseStatus());
+            apiDefinition.setNum(sameRequest.get(0).getNum()); //id 不变
+            apiDefinition.setTags(sameRequest.get(0).getTags()); //tag 不变
             if (StringUtils.equalsIgnoreCase(apiDefinition.getProtocol(), RequestType.HTTP)) {
                 //如果存在则修改
                 apiDefinition.setId(sameRequest.get(0).getId());
                 String request = setImportHashTree(apiDefinition);
                 apiDefinition.setModuleId(sameRequest.get(0).getModuleId());
                 apiDefinition.setModulePath(sameRequest.get(0).getModulePath());
-                apiDefinition.setNum(sameRequest.get(0).getNum()); //id 不变
                 apiDefinition.setOrder(sameRequest.get(0).getOrder());
                 apiDefinitionMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
                 apiDefinition.setRequest(request);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -502,7 +502,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         return scenario;
     }
 
-    private void saveFollows(String scenarioId, List<String> follows) {
+    public void saveFollows(String scenarioId, List<String> follows) {
         ApiScenarioFollowExample example = new ApiScenarioFollowExample();
         example.createCriteria().andScenarioIdEqualTo(scenarioId);
         apiScenarioFollowMapper.deleteByExample(example);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -512,11 +512,11 @@ private ApiDefinitionWithBLOBs updateTest(SaveApiDefinitionRequest request) {
         List<String> ids = new ArrayList<>();
         ids.add(request.getId());
         apiTestCaseService.updateByApiDefinitionId(ids, test.getPath(), test.getMethod(), test.getProtocol());
-        saveFollows(test.getId(), request.getFollows());
+        //saveFollows(test.getId(), request.getFollows());
         return test;
     }
 
-    private void saveFollows(String definitionId, List<String> follows) {
+    public void saveFollows(String definitionId, List<String> follows) {
         ApiDefinitionFollowExample example = new ApiDefinitionFollowExample();
         example.createCriteria().andDefinitionIdEqualTo(definitionId);
         apiDefinitionFollowMapper.deleteByExample(example);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -378,7 +378,7 @@ private ApiTestCase updateTest(SaveApiTestCaseRequest request) {
         return test;
     }
 
-    private void saveFollows(String testId, List<String> follows) {
+    public void saveFollows(String testId, List<String> follows) {
         ApiTestCaseFollowExample example = new ApiTestCaseFollowExample();
         example.createCriteria().andCaseIdEqualTo(testId);
         apiTestCaseFollowMapper.deleteByExample(example);

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -308,13 +308,13 @@ public LoadTest edit(EditTestPlanRequest request, List<MultipartFile> files) {
         loadTest.setAdvancedConfiguration(request.getAdvancedConfiguration());
         loadTest.setTestResourcePoolId(request.getTestResourcePoolId());
         loadTest.setStatus(PerformanceTestStatus.Saved.name());
-        saveFollows(loadTest.getId(), request.getFollows());
+        //saveFollows(loadTest.getId(), request.getFollows());
         loadTestMapper.updateByPrimaryKeySelective(loadTest);
 
         return loadTest;
     }
 
-    private void saveFollows(String testId, List<String> follows) {
+    public void saveFollows(String testId, List<String> follows) {
         LoadTestFollowExample example = new LoadTestFollowExample();
         example.createCriteria().andTestIdEqualTo(testId);
         loadTestFollowMapper.deleteByExample(example);

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -105,10 +105,10 @@ public void updateIssues(IssuesUpdateRequest issuesRequest) {
         platformList.forEach(platform -> {
             platform.updateIssue(issuesRequest);
         });
-        saveFollows(issuesRequest.getId(), issuesRequest.getFollows());
+        //saveFollows(issuesRequest.getId(), issuesRequest.getFollows());
         // todo 缺陷更新事件？
     }
-    private void saveFollows(String issueId, List<String> follows) {
+    public void saveFollows(String issueId, List<String> follows) {
         IssueFollowExample example = new IssueFollowExample();
         example.createCriteria().andIssueIdEqualTo(issueId);
         issueFollowMapper.deleteByExample(example);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -183,7 +183,7 @@ public TestCaseWithBLOBs addTestCase(EditTestCaseRequest request) {
         return request;
     }
 
-    private void saveFollows(String caseId, List<String> follows) {
+    public void saveFollows(String caseId, List<String> follows) {
         TestCaseFollowExample example = new TestCaseFollowExample();
         example.createCriteria().andCaseIdEqualTo(caseId);
         testCaseFollowMapper.deleteByExample(example);
@@ -1429,7 +1429,7 @@ public TestCase edit(EditTestCaseRequest request, List<MultipartFile> files) {
         }
         this.setNode(request);
         editTestCase(request);
-        saveFollows(request.getId(), request.getFollows());
+        //saveFollows(request.getId(), request.getFollows());
         return testCaseWithBLOBs;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -182,7 +182,7 @@ private String getName(String type, String id, String status, Long time, String
         if (id.indexOf(DelimiterConstants.SEPARATOR.toString()) != -1) {
             return id.substring(0, id.indexOf(DelimiterConstants.SEPARATOR.toString()));
         }
-        if (StringUtils.equalsAnyIgnoreCase(type, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
+        if (StringUtils.equalsAnyIgnoreCase(type, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
             TestPlanApiCase testPlanApiCase = testPlanApiCaseService.getById(id);
             ApiTestCaseWithBLOBs caseWithBLOBs = null;
             if (testPlanApiCase != null) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -582,7 +582,7 @@ private void addCertificate(ParameterConfig config, HashTree httpSamplerTree) {
      * @return
      */
     private boolean isCustomizeReqCompleteUrl(String url) {
-        if (isCustomizeReq() && (url.startsWith("http://") || url.startsWith("https://"))) {
+        if (isCustomizeReq() && StringUtils.isNotEmpty(url) && (url.startsWith("http://") || url.startsWith("https://"))) {
             return true;
         }
         return false;

File: backend/src/main/java/io/metersphere/task/dto/TaskCenterRequest.java
Patch:
@@ -18,4 +18,7 @@ public class TaskCenterRequest {
      * 执行人
      */
     private String executor;
+
+    private int goPage;
+    private int pageSize;
 }

File: backend/src/main/java/io/metersphere/commons/constants/PermissionConstants.java
Patch:
@@ -84,6 +84,7 @@ public class PermissionConstants {
     public static final String PROJECT_GROUP_READ_CREATE = "PROJECT_GROUP:READ+CREATE";
     public static final String PROJECT_GROUP_READ_EDIT = "PROJECT_GROUP:READ+EDIT";
     public static final String PROJECT_GROUP_READ_DELETE = "PROJECT_GROUP:READ+DELETE";
+    public static final String PROJECT_GROUP_READ_SETTING_PERMISSION = "PROJECT_GROUP:READ+SETTING_PERMISSION";
 
     public static final String PROJECT_ENVIRONMENT_READ = "PROJECT_ENVIRONMENT:READ";
     public static final String PROJECT_ENVIRONMENT_READ_CREATE = "PROJECT_ENVIRONMENT:READ+CREATE";

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -129,7 +129,7 @@ private void setRefElement() {
             }
             if (proxy != null) {
                 if (StringUtils.equals(this.getRefType(), "CASE")) {
-                    ElementUtil.mergeHashTree(this.getHashTree(), proxy.getHashTree());
+                    ElementUtil.mergeHashTree(this, proxy.getHashTree());
                 } else {
                     this.setHashTree(proxy.getHashTree());
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -159,7 +159,7 @@ private void setRefElement() {
             }
             if (proxy != null) {
                 if (StringUtils.equals(this.getRefType(), "CASE")) {
-                    ElementUtil.mergeHashTree(this.getHashTree(), proxy.getHashTree());
+                    ElementUtil.mergeHashTree(this, proxy.getHashTree());
                 } else {
                     this.setHashTree(proxy.getHashTree());
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -256,7 +256,7 @@ private void setRefElement() {
             }
             if (proxy != null) {
                 if (StringUtils.equals(this.getRefType(), "CASE")) {
-                    ElementUtil.mergeHashTree(this.getHashTree(), proxy.getHashTree());
+                    ElementUtil.mergeHashTree(this, proxy.getHashTree());
                 } else {
                     this.setHashTree(proxy.getHashTree());
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -233,7 +233,7 @@ private void setRefElement() {
             }
             if (proxy != null) {
                 if (StringUtils.equals(this.getRefType(), "CASE")) {
-                    ElementUtil.mergeHashTree(this.getHashTree(), proxy.getHashTree());
+                    ElementUtil.mergeHashTree(this, proxy.getHashTree());
                 }else {
                     this.setHashTree(proxy.getHashTree());
                 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -75,7 +75,7 @@ public List<KeyValue> getBodyParams(HTTPSamplerProxy sampler, String requestId)
             KeyValue keyValue = new KeyValue("", "JSON-SCHEMA", this.getRaw(), true, true);
             sampler.setPostBodyRaw(true);
             keyValue.setEnable(true);
-            keyValue.setEncode(false);
+            keyValue.setUrlEncode(false);
             body.add(keyValue);
         }
         return body;

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -16,7 +16,7 @@ public class KeyValue {
     private String description;
     private String contentType;
     private boolean enable = true;
-    private boolean encode = true;
+    private boolean urlEncode;
     private boolean required;
     private Integer min;
     private Integer max;

File: backend/src/main/java/io/metersphere/controller/GroupController.java
Patch:
@@ -34,7 +34,7 @@ public class GroupController {
     private GroupService groupService;
 
     @PostMapping("/get/{goPage}/{pageSize}")
-    @RequiresPermissions(value= {PermissionConstants.SYSTEM_GROUP_READ}, logical = Logical.OR)
+    @RequiresPermissions(value= {PermissionConstants.SYSTEM_GROUP_READ,PermissionConstants.PROJECT_GROUP_READ}, logical = Logical.OR)
     public Pager<List<GroupDTO>> getGroupList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody EditGroupRequest request) {
         request.setGoPage(goPage);
         request.setPageSize(pageSize);

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -41,7 +41,9 @@ public T call() {
             if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
                 String testPlanScenarioId = "";
                 if (request.getScenarioTestPlanIdMap() != null && request.getScenarioTestPlanIdMap().containsKey(runModeDataDTO.getTestId())) {
-                    testPlanScenarioId = request.getScenarioTestPlanIdMap().get(runModeDataDTO.getTestId());
+                    testPlanScenarioId = runModeDataDTO.getTestId();
+                    String scenarioId = request.getScenarioTestPlanIdMap().get(runModeDataDTO.getTestId());
+                    runModeDataDTO.setTestId(scenarioId);
                 } else {
                     testPlanScenarioId = request.getPlanScenarioId();
                 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -182,7 +182,7 @@ public String run(RunTestPlanScenarioRequest testPlanScenarioRequest) {
         Map<String, String> scenarioIdApiScarionMap = new HashMap<>();
         for (TestPlanApiScenario apiScenario : testPlanApiScenarioList) {
             scenarioIds.add(apiScenario.getApiScenarioId());
-            scenarioIdApiScarionMap.put(apiScenario.getApiScenarioId(), apiScenario.getId());
+            scenarioIdApiScarionMap.put(apiScenario.getId(), apiScenario.getApiScenarioId());
         }
         if (scenarioIdApiScarionMap.isEmpty()) {
             MSException.throwException("未找到执行场景！");

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -39,21 +39,21 @@ public T call() {
                 return null;
             }
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, runModeDataDTO.getDebugReportId(), config);
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
             } else {
                 String debugId = runModeDataDTO.getDebugReportId();
                 if(debugId == null){
                     debugId = runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null;
                 }
-                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), config, runModeDataDTO.getHashTree(), debugId, runMode);
+                jMeterService.runLocal(runModeDataDTO.getApiCaseId()+":"+debugId, config, runModeDataDTO.getHashTree(), debugId, runMode);
             }
             // 轮询查看报告状态，最多200次，防止死循环
             ApiDefinitionExecResult report = null;
             int index = 1;
             while (index < 200) {
                 Thread.sleep(3000);
                 index++;
-                report = mapper.selectByPrimaryKey(runModeDataDTO.getApiCaseId());
+                 report = mapper.selectByPrimaryKey(runModeDataDTO.getApiCaseId());
                 if (report != null && !report.getStatus().equals(APITestStatus.Running.name())) {
                     break;
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -324,7 +324,7 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
                             if (StringUtils.isNotEmpty(caseId)) {
                                 apiIdResultMap.put(caseId, item.isSuccess() ? TestPlanApiExecuteStatus.SUCCESS.name() : TestPlanApiExecuteStatus.FAILD.name());
                             }
-
+                            //更新报告ID
                             caseReportMap.put(caseId, saveResult.getId());
                         }
 
@@ -334,7 +334,7 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
         }
         testPlanLog.info("TestPlanReportId[" + testPlanReportId + "] APICASE OVER. API CASE STATUS:" + JSONObject.toJSONString(apiIdResultMap));
         TestPlanReportExecuteCatch.updateApiTestPlanExecuteInfo(testPlanReportId, apiIdResultMap, null, null);
-//        TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(testPlanReportId, caseReportMap, null, null);
+        TestPlanReportExecuteCatch.updateTestPlanReport(testPlanReportId, caseReportMap, null);
     }
 
     public void deleteByResourceId(String resourceId) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -35,7 +35,7 @@ public interface ExtTestPlanApiCaseMapper {
 
     List<TestPlanFailureApiDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);
 
-    List<TestPlanFailureApiDTO> getFailureListByIds(@Param("caseIdList") Collection<String> caseIdList, @Param("planId") String planId, @Param("status") String status);
+    List<TestPlanFailureApiDTO> getFailureListByIds(@Param("ids") Collection<String> caseIdList,@Param("status") String status);
 
     List<String> selectPlanIds();
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -31,7 +31,7 @@ public interface ExtTestPlanScenarioCaseMapper {
 
     List<TestPlanFailureScenarioDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);
 
-    List<TestPlanFailureScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids, @Param("planId") String planId, @Param("status") String status);
+    List<TestPlanFailureScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids,@Param("status") String status);
 
     List<Integer> getUnderwaySteps(@Param("ids") List<String> underwayIds);
 

File: backend/src/main/java/io/metersphere/api/dto/RunModeDataDTO.java
Patch:
@@ -20,6 +20,9 @@ public class RunModeDataDTO {
     private String apiCaseId;
 
     private Map<String, String> planEnvMap;
+
+    private String debugReportId;
+
     public RunModeDataDTO(){
 
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -467,6 +467,7 @@ public void run() {
                                 }
                                 mapper.updateByPrimaryKey(execResult);
                                 modeDataDTO.setApiCaseId(execResult.getId());
+                                modeDataDTO.setDebugReportId(request.getPlanReportId());
                                 Future<ApiDefinitionExecResult> future = executorService.submit(new SerialApiExecTask(jMeterService, mapper, modeDataDTO, request.getConfig(), request.getTriggerMode()));
                                 ApiDefinitionExecResult report = future.get();
                                 // 如果开启失败结束执行，则判断返回结果状态

File: backend/src/main/java/io/metersphere/config/KafkaConfig.java
Patch:
@@ -7,9 +7,9 @@
 @Configuration
 public class KafkaConfig {
     // 执行内容监听
-    public final static String EXEC_TOPIC = "ms-automation-exec-topic123";
+    public final static String EXEC_TOPIC = "ms-automation-exec-topic";
     //执行结果回传
-    public static final String TOPICS = "ms-api-exec-topic123";
+    public static final String TOPICS = "ms-api-exec-topic";
 
     @Bean
     public NewTopic apiExecTopic() {

File: backend/src/main/java/io/metersphere/api/jmeter/FixedTask.java
Patch:
@@ -35,8 +35,8 @@ public void execute() {
                 ReportCounter counter = MessageCache.cache.get(key);
                 LogUtil.info("集成报告：【" + key + "】总执行场景：【" + counter.getReportIds().size() + "】已经执行完成场景：【" + counter.getCompletedIds().size() + "】");
                 List<String> filterList = counter.getReportIds().stream().filter(t -> !counter.getCompletedIds().contains(t)).collect(Collectors.toList());
-                LogUtil.info("剩余要执行的报告" + JSON.toJSONString(filterList));
 
+                LogUtil.debug("剩余要执行的报告" + JSON.toJSONString(filterList));
                 // 合并
                 if (counter.getCompletedIds().size() >= counter.getReportIds().size()) {
                     scenarioReportService.margeReport(key, counter.getReportIds());
@@ -55,7 +55,7 @@ public void execute() {
                             // 资源池中已经没有执行的请求了
                             int runningCount = scenarioReportService.get(key, counter);
                             if (runningCount == 0) {
-                                LogUtil.info("发生未知异常，进行资源合并，请检查资源池是否正常运行");
+                                LogUtil.error("发生未知异常，进行资源合并，请检查资源池是否正常运行");
                                 scenarioReportService.margeReport(key, counter.getReportIds());
                                 guardTask.remove(key);
                                 MessageCache.cache.remove(key);

File: backend/src/main/java/io/metersphere/config/KafkaConfig.java
Patch:
@@ -7,9 +7,9 @@
 @Configuration
 public class KafkaConfig {
     // 执行内容监听
-    public final static String EXEC_TOPIC = "ms-automation-exec-topic";
+    public final static String EXEC_TOPIC = "ms-automation-exec-topic123";
     //执行结果回传
-    public static final String TOPICS = "ms-api-exec-topic";
+    public static final String TOPICS = "ms-api-exec-topic123";
 
     @Bean
     public NewTopic apiExecTopic() {

File: backend/src/main/java/io/metersphere/api/dto/definition/BatchRunDefinitionRequest.java
Patch:
@@ -17,4 +17,6 @@ public class BatchRunDefinitionRequest {
 
     private RunModeConfig config;
 
+    //测试计划报告ID。 测试计划执行时使用
+    private String planReportId;
 }

File: backend/src/main/java/io/metersphere/api/dto/mock/MockApiUtils.java
Patch:
@@ -352,7 +352,6 @@ public static String getResultByResponseResult(JSONObject bodyObj,String url, Ma
                         String baseScript = parseScript(url,headerMap,requestMockParams);
                         try {
                             script = baseScript + script;
-                            System.out.println(script);
                             if(StringUtils.isEmpty(scriptLanguage)){
                                 scriptLanguage = "beanshell";
                             }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanScheduleReportInfoDTO.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.track.dto;
 
-import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.TestPlanReport;
 import lombok.Getter;
 import lombok.Setter;
@@ -17,6 +16,6 @@
 public class TestPlanScheduleReportInfoDTO {
     private TestPlanReport testPlanReport;
     private Map<String, String> planScenarioIdMap = new LinkedHashMap<>();
-    private Map<ApiTestCaseWithBLOBs, String> apiTestCaseDataMap = new LinkedHashMap<>();
+    private Map<String, String> apiTestCaseDataMap = new LinkedHashMap<>();
     private Map<String, String> performanceIdMap = new LinkedHashMap<>();
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -398,7 +398,9 @@ public static void mergeHashTree(List<MsTestElement> sourceHashTree, List<MsTest
         List<String> delIds = new ArrayList<>();
         Map<String, MsTestElement> updateMap = new HashMap<>();
         if (CollectionUtils.isEmpty(sourceHashTree)) {
-            sourceHashTree.addAll(targetHashTree);
+            if (CollectionUtils.isNotEmpty(targetHashTree)) {
+                sourceHashTree.addAll(targetHashTree);
+            }
             return;
         }
         if (CollectionUtils.isNotEmpty(targetHashTree)) {

File: backend/src/main/java/io/metersphere/api/jmeter/ReportCounter.java
Patch:
@@ -7,7 +7,7 @@
 
 @Data
 public class ReportCounter {
-    private int number;
+    private List<String> completedIds;
     private List<JvmInfoDTO> poolUrls;
     private List<String> reportIds;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1229,7 +1229,7 @@ public String modeRun(RunScenarioRequest request) {
                 List<String> reportIds = executeQueue.entrySet().stream()
                         .map(reports -> reports.getKey()).collect(Collectors.toList());
                 ReportCounter counter = new ReportCounter();
-                counter.setNumber(0);
+                counter.setCompletedIds(new LinkedList<>());
                 if (CollectionUtils.isNotEmpty(request.getConfig().getTestResources())) {
                     counter.setPoolUrls(request.getConfig().getTestResources());
                 }
@@ -1369,7 +1369,7 @@ public void run() {
                     APIScenarioReportResult report = executeQueue.get(reportId).getReport();
                     batchMapper.insert(report);
                     // 增加一个本地锁，防止并发找不到资源
-                    MessageCache.scenarioExecResourceLock.put(reportId,report);
+                    MessageCache.scenarioExecResourceLock.put(reportId, report);
                 }
                 sqlSession.flushStatements();
                 sqlSession.commit();

File: backend/src/main/java/io/metersphere/api/service/RemakeReportService.java
Patch:
@@ -31,7 +31,7 @@ public class RemakeReportService {
     private TestPlanApiScenarioMapper testPlanApiScenarioMapper;
 
     public void remake(RunRequest runRequest, RunModeConfig config, String reportId) {
-        if (MessageCache.cache.get(config.getAmassReport()) != null
+        if (config != null && config.getAmassReport() != null && MessageCache.cache.get(config.getAmassReport()) != null
                 && MessageCache.cache.get(config.getAmassReport()).getReportIds() != null) {
             MessageCache.cache.get(config.getAmassReport()).getReportIds().remove(reportId);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -248,6 +248,7 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
                         String creator = TestPlanReportExecuteCatch.getCreator(testPlanReportId);
 
                         String status = item.isSuccess() ? "success" : "error";
+                        item.getResponseResult().setConsole(result.getConsole());
                         ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
                         saveResult.setId(UUID.randomUUID().toString());
                         saveResult.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -326,7 +326,7 @@ public ApiScenrioExportResult export(@RequestBody ApiScenarioBatchRequest reques
     @GetMapping(value = "/stop/{reportId}")
     public void stop(@PathVariable String reportId) {
         if (StringUtils.isNotEmpty(reportId)) {
-            MessageCache.batchTestCases.remove(reportId);
+            MessageCache.caseExecResourceLock.remove(reportId);
             new LocalRunner().stop(reportId);
         }
     }

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -14,6 +14,8 @@ public class TestResult {
 
     private String testId;
 
+    private String setReportId;
+
     private int scenarioTotal;
 
     private int scenarioSuccess;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -71,7 +71,7 @@ public void saveApiResult(TestResult result, String type, String triggerMode) {
                 if (scenarioResult != null && CollectionUtils.isNotEmpty(scenarioResult.getRequestResults())) {
                     scenarioResult.getRequestResults().forEach(item -> {
                         if (!StringUtils.startsWithAny(item.getName(), "PRE_PROCESSOR_ENV_", "POST_PROCESSOR_ENV_")) {
-                            ApiDefinitionExecResult saveResult = MessageCache.batchTestCases.get(result.getTestId());
+                            ApiDefinitionExecResult saveResult = MessageCache.caseExecResourceLock.get(result.getTestId());
                             if (saveResult == null) {
                                 saveResult = apiDefinitionExecResultMapper.selectByPrimaryKey(result.getTestId());
                             }
@@ -125,7 +125,7 @@ public void saveApiResult(TestResult result, String type, String triggerMode) {
                             }
                             apiDefinitionService.removeCache(result.getTestId());
                             if (StringUtils.isNotEmpty(result.getTestId())) {
-                                MessageCache.batchTestCases.remove(result.getTestId());
+                                MessageCache.caseExecResourceLock.remove(result.getTestId());
                             }
                             // 发送通知
                             sendNotice(saveResult);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -901,7 +901,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
             jMeterService.runTest(request.getId(), request.getId(), runMode, null, request.getConfig());
         } else {
-            jMeterService.runLocal(request.getId(), hashTree, request.getReportId(), runMode);
+            jMeterService.runLocal(request.getId(),request.getConfig(), hashTree, request.getReportId(), runMode);
         }
         return request.getId();
     }

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -53,7 +53,7 @@ public T call() {
                 jMeterService.runTest(runModeDataDTO.getTestId(), reportId, request.getRunMode(), testPlanScenarioId, request.getConfig());
             } else {
                 reportId = runModeDataDTO.getReport().getId();
-                jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
+                jMeterService.runLocal(runModeDataDTO.getReport().getId(),request.getConfig(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
             }
             while (MessageCache.executionQueue.containsKey(reportId)) {
                 long time = MessageCache.executionQueue.get(runModeDataDTO.getReport().getId());
@@ -68,8 +68,8 @@ public T call() {
                     }
                     break;
                 }
-                if (runModeDataDTO.getReport() != null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
-                    MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
+                if (MessageCache.terminationOrderDeque.contains(reportId)) {
+                    MessageCache.terminationOrderDeque.remove(reportId);
                     break;
                 }
                 Thread.sleep(1000);

File: backend/src/main/java/io/metersphere/service/CustomFunctionService.java
Patch:
@@ -121,7 +121,7 @@ public String run(RunDefinitionRequest request) {
         config.setProjectId(request.getProjectId());
         HashTree hashTree = request.getTestElement().generateHashTree(config);
         String runMode = ApiRunMode.DEFINITION.name();
-        jMeterService.runLocal(request.getId(), hashTree, request.getReportId(), runMode);
+        jMeterService.runLocal(request.getId(),request.getConfig(), hashTree, request.getReportId(), runMode);
         return request.getId();
     }
 }

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -108,7 +108,7 @@ public String stop(List<TaskRequest> reportIds) {
                         result.setStatus("STOP");
                         apiDefinitionExecResultMapper.updateByPrimaryKeySelective(result);
                         actuator = result.getActuator();
-                        MessageCache.batchTestCases.remove(result.getId());
+                        MessageCache.caseExecResourceLock.remove(result.getId());
                     }
                 } else if (StringUtils.equals(request.getType(), "SCENARIO")) {
                     ApiScenarioReport report = apiScenarioReportMapper.selectByPrimaryKey(request.getReportId());

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -497,7 +497,7 @@ public void run() {
             planApiCases.forEach(testPlanApiCase -> {
                 ApiDefinitionExecResult report = addResult(request, testPlanApiCase, APITestStatus.Running.name(), batchMapper);
                 executeQueue.put(report.getId(), testPlanApiCase);
-                MessageCache.batchTestCases.put(report.getId(), report);
+                MessageCache.caseExecResourceLock.put(report.getId(), report);
             });
             sqlSession.commit();
 
@@ -507,7 +507,7 @@ public void run() {
                     jMeterService.runTest(executeQueue.get(reportId).getId(), reportId, request.getTriggerMode(), null, request.getConfig());
                 } else {
                     HashTree hashTree = generateHashTree(executeQueue.get(reportId).getId());
-                    jMeterService.runLocal(reportId, hashTree, TriggerMode.BATCH.name(), request.getTriggerMode());
+                    jMeterService.runLocal(reportId,request.getConfig(), hashTree, TriggerMode.BATCH.name(), request.getTriggerMode());
                 }
             }
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -998,7 +998,7 @@ public String runScenarioCase(SchedulePlanScenarioExecuteRequest request) {
             testPlan.toHashTree(jmeterHashTree, testPlan.getHashTree(), new ParameterConfig());
             String runMode = ApiRunMode.SCHEDULE_SCENARIO_PLAN.name();
             // 调用执行方法
-            jMeterService.runLocal(request.getId(), jmeterHashTree, request.getReportId(), runMode);
+            jMeterService.runLocal(request.getId(),request.getConfig(), jmeterHashTree, request.getReportId(), runMode);
         }
 
         return returnId;

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -34,14 +34,14 @@ public SerialApiExecTask(JMeterService jMeterService, ApiDefinitionExecResultMap
     @Override
     public T call() {
         try {
-            if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+            if (runModeDataDTO.getReport() != null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                 MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                 return null;
             }
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
             } else {
-                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
+                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), config, runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }
             // 轮询查看报告状态，最多200次，防止死循环
             ApiDefinitionExecResult report = null;
@@ -53,7 +53,7 @@ public T call() {
                 if (report != null && !report.getStatus().equals(APITestStatus.Running.name())) {
                     break;
                 }
-                if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+                if (runModeDataDTO.getReport() != null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                     MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                     break;
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/BatchRunDefinitionRequest.java
Patch:
@@ -13,6 +13,8 @@ public class BatchRunDefinitionRequest {
 
     private List<String> planIds;
 
+    private String triggerMode;
+
     private RunModeConfig config;
 
 }

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -62,7 +62,7 @@ public byte[] downloadJmeterFiles(String runMode, String testId, String reportId
                 planEnvMap = JSON.parseObject(environment, Map.class);
             }
         }
-        HashTree hashTree = null;
+        HashTree hashTree;
         if (ApiRunMode.DEFINITION.name().equals(runMode) || ApiRunMode.API_PLAN.name().equals(runMode)) {
             hashTree = testPlanApiCaseService.generateHashTree(testId);
         } else {

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -10,4 +10,5 @@ public enum ReportTriggerMode {
     CASE,
     TEST_PLAN_SCHEDULE,
     TEST_PLAN_API,
+    API_PLAN
 }

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1198,7 +1198,7 @@ public String checkReturnWithMockExpectByUrlParam(String method, Map<String, Str
             request, HttpServletResponse response) {
         String returnStr = "";
         boolean isMatch = false;
-        String url = request.getRequestURI();
+        String url = request.getRequestURL().toString();
         List<ApiDefinitionWithBLOBs> aualifiedApiList = new ArrayList<>();
         if (project != null) {
             String urlSuffix = this.getUrlSuffix(project.getSystemId(), request);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -289,6 +289,7 @@ public ApiScenarioReport updatePlanCase(TestResult result, String runMode) {
             }
             returnReport = report;
             reportIds.add(report.getId());
+            MessageCache.executionQueue.remove(report.getId());
         }
         return returnReport;
     }
@@ -394,8 +395,7 @@ public ApiScenarioReport updateSchedulePlanCase(TestResult result, String runMod
 
             lastReport = report;
 
-            APIScenarioReportResult reportResult = this.get(report.getId());
-//            caseReportMap.put(testPlanApiScenario.getApiScenarioId(), reportResult);
+            MessageCache.executionQueue.remove(report.getId());
             reportIds.add(report.getId());
         }
         testPlanLog.info("TestPlanReportId" + JSONArray.toJSONString(testPlanReportIdList) + " EXECUTE OVER. SCENARIO STATUS : " + JSONObject.toJSONString(scenarioAndErrorMap));
@@ -600,6 +600,7 @@ public ApiScenarioReport updateScenario(TestResult result) {
                     sendNotice(scenario, report);
                 }
                 lastReport = report;
+                MessageCache.executionQueue.remove(report.getId());
                 if (report.getExecuteType().equals(ExecuteType.Marge.name())) {
                     Object obj = MessageCache.cache.get(report.getScenarioId());
                     if (obj != null) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTaskMapper.java
Patch:
@@ -8,8 +8,6 @@
 
 public interface ExtTaskMapper {
 
-    void deleteByResourceId(String id);
-
     List<TaskCenterDTO> getTasks(@Param("request") TaskCenterRequest request);
 
     int getRunningTasks(@Param("request") TaskCenterRequest request);
@@ -18,6 +16,6 @@ public interface ExtTaskMapper {
 
     List<TaskCenterDTO> getScenario(@Param("id") String id);
 
-    int checkActuator (@Param("actuator") String actuator);
+    List<String> checkActuator (@Param("actuator") String actuator);
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/service/TestResourcePoolService.java
Patch:
@@ -105,9 +105,6 @@ public void updateTestResourcePoolStatus(String poolId, String status) {
         testResourcePool.setStatus(status);
         // 禁用/删除 资源池
         if (INVALID.name().equals(status) || DELETE.name().equals(status)) {
-            if(extTaskMapper.checkActuator(testResourcePool.getId())>0){
-                MSException.throwException("当前资源池正在使用中不能删除");
-            }
             testResourcePoolMapper.updateByPrimaryKeySelective(testResourcePool);
             return;
         }
@@ -154,6 +151,9 @@ public UpdatePoolDTO checkHaveTestUsePool(String poolId) {
                 }
             });
         }
+        // api
+        List<String> apiNames = extTaskMapper.checkActuator(testResourcePool.getId());
+        builder.append(StringUtils.join(apiNames, "; "));
         result.setTestName(builder.toString());
         return result;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSON;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
+import io.metersphere.api.service.task.NamedThreadFactory;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.LoadTestMapper;
 import io.metersphere.base.mapper.LoadTestReportMapper;
@@ -153,7 +154,7 @@ public void runBatch(RunBatchTestPlanRequest request) {
             if (request.getConfig() != null && request.getConfig().getMode().equals(RunModeConstants.SERIAL.toString())) {
                 serialRun(request);
             } else {
-                ExecutorService executorService = Executors.newFixedThreadPool(request.getRequests().size());
+                ExecutorService executorService = Executors.newFixedThreadPool(request.getRequests().size(),new NamedThreadFactory("TestPlanLoadCaseService"));
                 request.getRequests().forEach(item -> {
                     executorService.submit(new ParallelExecTask(performanceTestService, testPlanLoadCaseMapper, item));
                 });
@@ -168,7 +169,7 @@ public void runBatch(RunBatchTestPlanRequest request) {
     }
 
     private void serialRun(RunBatchTestPlanRequest request) throws Exception {
-        ExecutorService executorService = Executors.newFixedThreadPool(request.getRequests().size());
+        ExecutorService executorService = Executors.newFixedThreadPool(request.getRequests().size(),new NamedThreadFactory("TestPlanLoadCaseService-serial"));
         for (RunTestPlanRequest runTestPlanRequest : request.getRequests()) {
             Future<LoadTestReportWithBLOBs> future = executorService.submit(new SerialExecTask(performanceTestService, testPlanLoadCaseMapper, loadTestReportMapper, runTestPlanRequest, request.getConfig()));
             LoadTestReportWithBLOBs report = future.get();

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.api.dto.definition.ApiTestCaseRequest;
 import io.metersphere.api.dto.definition.TestPlanApiCaseDTO;
 import io.metersphere.api.service.ShareInfoService;
+import io.metersphere.api.service.task.NamedThreadFactory;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.base.mapper.ext.*;
@@ -96,7 +97,7 @@ public class TestPlanReportService {
     @Resource
     private ProjectService projectService;
 
-    private final ExecutorService executorService = Executors.newFixedThreadPool(20);
+    private final ExecutorService executorService = Executors.newFixedThreadPool(20,new NamedThreadFactory("TestPlanReportService"));
 
     public List<TestPlanReportDTO> list(QueryTestPlanReportRequest request) {
         List<TestPlanReportDTO> list = new ArrayList<>();
@@ -1125,6 +1126,7 @@ public void countReport(String planReportId) {
                 TestPlanReportExecuteCatch.finishAllTask(planReportId);
             }
         }
+
         this.updateExecuteApis(planReportId);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -21,6 +21,7 @@
 import io.metersphere.api.service.ApiDefinitionService;
 import io.metersphere.api.service.ApiScenarioReportService;
 import io.metersphere.api.service.ApiTestCaseService;
+import io.metersphere.api.service.task.NamedThreadFactory;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.base.mapper.ext.*;
@@ -189,7 +190,7 @@ public class TestPlanService {
     @Resource
     private TestPlanFollowMapper testPlanFollowMapper;
 
-    private final ExecutorService executorService = Executors.newFixedThreadPool(20);
+    private final ExecutorService executorService = Executors.newFixedThreadPool(20,new NamedThreadFactory("TestPlanService"));
 
     public synchronized TestPlan addTestPlan(AddTestPlanRequest testPlan) {
         if (getTestPlanByName(testPlan.getName()).size() > 0) {

File: backend/src/main/java/io/metersphere/api/cache/TestPlanReportExecuteCatch.java
Patch:
@@ -73,6 +73,7 @@ public static synchronized void setReportDataCheckResult(String reportId, boolea
 
     public static synchronized void remove(String reportId){
         if(testPlanReportMap.containsKey(reportId)){
+            testPlanReportMap.get(reportId).finishAllTask();
             testPlanReportMap.remove(reportId);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1170,7 +1170,7 @@ public String modeRun(RunScenarioRequest request) {
                 if(report != null && StringUtils.isNotEmpty(request.getTestPlanReportId())){
                     Map<String,String> scenarioReportIdMap = new HashMap<>();
                     scenarioReportIdMap.put(item.getId(),report.getId());
-                    TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(reportId, null, scenarioReportIdMap, null);
+                    TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(request.getTestPlanReportId(), null, scenarioReportIdMap, null);
                 }
             } else {
                 report = createScenarioReport(reportId, ExecuteType.Marge.name().equals(request.getExecuteType()) ? serialReportId : item.getId(), item.getName(), request.getTriggerMode(),

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -325,7 +325,7 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
         }
         testPlanLog.info("TestPlanReportId[" + testPlanReportId + "] APICASE OVER. API CASE STATUS:" + JSONObject.toJSONString(apiIdResultMap));
         TestPlanReportExecuteCatch.updateApiTestPlanExecuteInfo(testPlanReportId, apiIdResultMap, null, null);
-        TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(testPlanReportId, caseReportMap, null, null);
+//        TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(testPlanReportId, caseReportMap, null, null);
     }
 
     public void deleteByResourceId(String resourceId) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1193,7 +1193,7 @@ private void executeApiTestCase(String triggerMode, String planReportId, String
                 TestPlanReportExecuteCatch.updateApiTestPlanExecuteInfo(planReportId, executeErrorMap, null, null);
             }
             if (!executeReportIdMap.isEmpty()) {
-                TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(planReportId, null, executeReportIdMap, null);
+                TestPlanReportExecuteCatch.updateTestPlanExecuteResultInfo(planReportId, executeReportIdMap,null, null);
             }
         });
     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1263,7 +1263,7 @@ public void removeToGcByParams(ApiBatchRequest request) {
 
     public Pager<List<ApiDefinitionResult>> listRelevance(ApiDefinitionRequest request, int goPage, int pageSize) {
         request.setOrders(ServiceUtils.getDefaultSortOrder(request.getOrders()));
-        if (testPlanService.isAllowedRepeatCase(request.getPlanId())) {
+        if (StringUtils.isNotBlank(request.getPlanId()) && testPlanService.isAllowedRepeatCase(request.getPlanId())) {
             request.setRepeatCase(true);
         }
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -139,7 +139,7 @@ public List<String> getExecResultByPlanId(String plan) {
     }
 
     public Pager<List<ApiTestCaseDTO>> relevanceList(int goPage, int pageSize, ApiTestCaseRequest request) {
-        if (!testPlanService.isAllowedRepeatCase(request.getPlanId())) { // 不允许重复关联
+        if (StringUtils.isNotBlank(request.getPlanId()) && !testPlanService.isAllowedRepeatCase(request.getPlanId())) { // 不允许重复关联
             List<String> ids = apiTestCaseService.selectIdsNotExistsInPlan(request.getProjectId(), request.getPlanId());
             if (CollectionUtils.isEmpty(ids)) {
                 return PageUtils.setPageInfo(PageHelper.startPage(goPage, pageSize, true), new ArrayList<>());

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestPlanRequest.java
Patch:
@@ -41,4 +41,6 @@ public class QueryTestPlanRequest extends TestPlan {
      * 是否通过筛选条件查询（这个字段针对我的工作台-页面列表上的筛选做特殊处理）
      */
     private boolean byFilter;
+
+    private List<String> filterStatus;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/MsResultCollector.java
Patch:
@@ -141,11 +141,11 @@ public void sampleStarted(SampleEvent e) {
             dto.setContent(e.getThreadGroup());
             dto.setReportId("send." + this.getName());
             dto.setToReport(this.getName());
+            LogUtil.debug("send. " + this.getName());
             if (client != null) {
                 client.send(JSON.toJSONString(dto));
             }
         } catch (Exception ex) {
-            ex.printStackTrace();
         }
     }
 

File: backend/src/main/java/io/metersphere/websocket/ScenarioReportWebSocket.java
Patch:
@@ -100,10 +100,10 @@ public static class ApiDebugResultTask extends TimerTask {
         @Override
         public void run() {
             try {
-                TestResult report = resultService.sysnSampleResult(reportId);
                 if (!session.isOpen()) {
                     return;
                 }
+                TestResult report = resultService.synSampleResult(reportId);
                 if (report != null) {
                     session.getBasicRemote().sendText(JSON.toJSONString(report));
                     if (report.isEnd()) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1465,6 +1465,7 @@ public String editTestCase(EditTestCaseRequest request, List<MultipartFile> file
             });
         }
         this.setNode(request);
+        request.setStatus(null); // 不更新状态
         editTestCase(request);
         return request.getId();
     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -625,6 +625,7 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
                 batchMapper.insert(apiDefinition);
                 String requestStr = setImportHashTree(apiDefinition);
                 reSetImportCasesApiId(cases, originId, apiDefinition.getId());
+                reSetImportMocksApiId(mocks, originId, apiDefinition.getId(), apiDefinition.getNum());
                 apiDefinition.setRequest(requestStr);
                 importApiCase(apiDefinition, apiTestImportRequest);
             }

File: backend/src/main/java/io/metersphere/commons/utils/JsonStructUtils.java
Patch:
@@ -30,7 +30,7 @@ public static boolean checkJsonObjCompliance(JSONObject sourceObj, JSONObject ma
         if(matchObj == null){
             matchObj = new JSONObject();
         }
-        if (sourceObj .isEmpty() && matchObj.isEmpty()) {
+        if (matchObj.isEmpty()) {
             return true;
         } else if (sourceObj != null && matchObj != null) {
             boolean lastMatchResultIsTrue = false;

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -21,7 +21,6 @@
 import javax.annotation.Resource;
 import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 
 @RestController
 @RequestMapping(value = "/system")

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1641,10 +1641,10 @@ public void preduceTestElement(RunDefinitionRequest request) throws Exception {
 
     public ReferenceDTO getReference(ApiScenarioRequest request) {
         ReferenceDTO dto = new ReferenceDTO();
+        request.setProjectId(null);
         dto.setScenarioList(extApiScenarioMapper.selectReference(request));
         QueryTestPlanRequest planRequest = new QueryTestPlanRequest();
         planRequest.setScenarioId(request.getId());
-        planRequest.setProjectId(request.getProjectId());
         dto.setTestPlanList(extTestPlanMapper.selectTestPlanByRelevancy(planRequest));
         return dto;
     }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoPathInfoClient.java
Patch:
@@ -20,8 +20,9 @@ public class ZentaoPathInfoClient extends ZentaoClient {
     private static final String REPLACE_IMG_URL = "<img src=\"/zentao/file-read-$1\"/>";
     private static final Pattern IMG_PATTERN = Pattern.compile("file-read-(.*?)\"/>");
 
+    RequestUrl request = new RequestUrl();
+
     {
-        RequestUrl request = new RequestUrl();
         request.setLogin(getUrl(LOGIN));
         request.setSessionGet(getUrl(SESSION_GET));
         request.setBugCreate(getUrl(BUG_CREATE));

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -82,7 +82,7 @@ public void update(UpdateIssueTemplateRequest request) {
             String originId = request.getId();
             // 如果是全局字段，则创建对应工作空间字段
             String id = add(request);
-            projectService.updateIssueTemplate(originId, id);
+            projectService.updateIssueTemplate(originId, id, request.getWorkspaceId());
         } else {
             checkExist(request);
             customFieldTemplateService.deleteByTemplateId(request.getId());

File: backend/src/main/java/io/metersphere/service/TestCaseTemplateService.java
Patch:
@@ -82,7 +82,7 @@ public void update(UpdateCaseFieldTemplateRequest request) {
             String originId = request.getId();
             // 如果是全局字段，则创建对应工作空间字段
             String id = add(request);
-            projectService.updateCaseTemplate(originId, id);
+            projectService.updateCaseTemplate(originId, id, request.getWorkspaceId());
         } else {
             checkExist(request);
             customFieldTemplateService.deleteByTemplateId(request.getId());

File: backend/src/main/java/io/metersphere/base/domain/TestPlan.java
Patch:
@@ -43,8 +43,6 @@ public class TestPlan implements Serializable {
 
     private Boolean automaticStatusUpdate;
 
-    private String followPeople;
-
     private Boolean repeatCase;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/api/controller/MockConfigController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.controller;
 
 import io.metersphere.api.dto.mock.MockApiUtils;
+import io.metersphere.api.dto.mock.MockParamSuggestions;
 import io.metersphere.api.dto.mockconfig.MockConfigRequest;
 import io.metersphere.api.dto.mockconfig.MockExpectConfigRequest;
 import io.metersphere.api.dto.mockconfig.response.MockConfigResponse;
@@ -69,9 +70,9 @@ public String deleteMockExpectConfig(@PathVariable String id) {
     }
 
     @GetMapping("/getApiParams/{id}")
-    public List<Map<String, String>> getApiParams(@PathVariable String id) {
+    public Map<String, List<MockParamSuggestions>> getApiParams(@PathVariable String id) {
         ApiDefinitionWithBLOBs apiDefinitionWithBLOBs = apiDefinitionService.getBLOBs(id);
-        List<Map<String, String>> apiParams = mockConfigService.getApiParamsByApiDefinitionBLOBs(apiDefinitionWithBLOBs);
+        Map<String, List<MockParamSuggestions>> apiParams = mockConfigService.getApiParamsByApiDefinitionBLOBs(apiDefinitionWithBLOBs);
         return apiParams;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanFailureApiDTO.java
Patch:
@@ -9,8 +9,5 @@
 @Setter
 @JsonInclude(JsonInclude.Include.NON_NULL)
 public class TestPlanFailureApiDTO extends TestPlanApiCaseDTO {
-
-    private String projectName;
-
     private String response;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/TestPlanApiCaseDTO.java
Patch:
@@ -8,7 +8,6 @@
 public class TestPlanApiCaseDTO extends ApiTestCaseDTO {
     private String environmentId;
     private String caseId;
-    private String execResult;
     private String userId;
     private String creatorName;
     private String principalName;

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -16,4 +16,5 @@ public class ApiTestCaseDTO extends ApiTestCase {
     private String apiName;
     private String passRate;
     private String projectName;
+    private String execResult;
 }

File: backend/src/main/java/io/metersphere/api/dto/mockconfig/response/MockExpectConfigResponse.java
Patch:
@@ -19,6 +19,8 @@ public class MockExpectConfigResponse {
 
     private String id;
 
+    private String expectNum;
+
     private String mockConfigId;
 
     private String name;
@@ -40,6 +42,7 @@ public class MockExpectConfigResponse {
     public MockExpectConfigResponse(MockExpectConfigWithBLOBs expectConfig) {
         this.id = expectConfig.getId();
         this.mockConfigId = expectConfig.getMockConfigId();
+        this.expectNum = expectConfig.getExpectNum();
         this.name = expectConfig.getName();
         this.status = Boolean.parseBoolean(expectConfig.getStatus());
         this.createTime = expectConfig.getCreateTime();

File: backend/src/main/java/io/metersphere/base/domain/MockExpectConfig.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.base.domain;
 
 import java.io.Serializable;
-
 import lombok.Data;
 
 @Data
@@ -22,5 +21,7 @@ public class MockExpectConfig implements Serializable {
 
     private String createUserId;
 
+    private String expectNum;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/MockExpectConfigWithBLOBs.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.base.domain;
 
 import java.io.Serializable;
-
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;

File: backend/src/main/java/io/metersphere/base/mapper/MockExpectConfigMapper.java
Patch:
@@ -3,9 +3,7 @@
 import io.metersphere.base.domain.MockExpectConfig;
 import io.metersphere.base.domain.MockExpectConfigExample;
 import io.metersphere.base.domain.MockExpectConfigWithBLOBs;
-
 import java.util.List;
-
 import org.apache.ibatis.annotations.Param;
 
 public interface MockExpectConfigMapper {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -454,6 +454,9 @@ public List<TestCaseDTO> listTestCaseMthod(QueryTestCaseRequest request) {
      */
     public List<TestCase> getTestCaseRelateList(QueryTestCaseRequest request) {
         setDefaultOrder(request);
+        request.getOrders().forEach(order -> {
+            order.setPrefix("test_case");
+        });
         return getTestCaseByNotInPlan(request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseRequest.java
Patch:
@@ -33,5 +33,8 @@ public class ApiTestCaseRequest extends BaseQueryRequest {
     private String reviewId;
     private String deleteUserId;
     private long deleteTime;
+    /**
+     * 检查待更新的（近三天有更新的或者状态为error的）
+     */
     private boolean toUpdate;
 }

File: backend/src/main/java/io/metersphere/service/RelationshipEdgeService.java
Patch:
@@ -232,6 +232,9 @@ public void saveBatch(RelationshipEdgeRequest request) {
             if (addEdgesIds.contains(item.getSourceId() + item.getTargetId())) {
                 if(batchMapper.selectByPrimaryKey(item) == null ) {
                     batchMapper.insert(item);
+                }else{
+                    item.setGraphId(graphId); // 把原来图的id设置成合并后新的图的id
+                    batchMapper.updateByPrimaryKey(item);
                 }
             } else {
                 item.setGraphId(graphId); // 把原来图的id设置成合并后新的图的id

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -874,6 +874,7 @@ public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs te
         Map<String, EnvironmentConfig> envConfig = new HashMap<>(16);
         if (environment != null && environment.getConfig() != null) {
             EnvironmentConfig environmentConfig = JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class);
+            environmentConfig.setApiEnvironmentid(environment.getId());
             envConfig.put(testCaseWithBLOBs.getProjectId(), environmentConfig);
             parameterConfig.setConfig(envConfig);
         }

File: backend/src/main/java/io/metersphere/service/RelationshipEdgeService.java
Patch:
@@ -63,7 +63,7 @@ public void updateGraphId(String graphId, String sourceId, String targetId) {
 
         // 去掉要删除的边
         edges = edges.stream()
-                .filter(i -> i.getSourceId() != sourceId || i.getTargetId() != targetId)
+                .filter(i -> !i.getSourceId().equals(sourceId) && !i.getTargetId().equals(targetId))
                 .collect(Collectors.toList());
 
         Set<String> nodes = new HashSet<>();
@@ -114,7 +114,7 @@ public void dfsForMark(String node, List<RelationshipEdge> edges, Set<String> ma
         }
 
         nextLevelNodes.forEach(nextNode -> {
-            if (!markSet.contains(node)) {
+            if (!markSet.contains(nextNode)) {
                 dfsForMark(nextNode, edges, markSet, true);
                 dfsForMark(nextNode, edges, markSet, false);
             }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -98,7 +98,7 @@ public TestPlan addTestPlan(@RequestBody AddTestPlanRequest testPlan) {
     @PostMapping("/edit")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_PLAN_READ_EDIT)
     @MsAuditLog(module = "track_test_plan", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#testPlanDTO.id)", content = "#msClass.getLogDetails(#testPlanDTO.id)", msClass = TestPlanService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, event = NoticeConstants.Event.UPDATE, mailTemplate = "track/TestPlanEnd", subject = "测试计划通知")
+    @SendNotice(taskType = NoticeConstants.TaskType.TEST_PLAN_TASK, event = NoticeConstants.Event.UPDATE, mailTemplate = "track/TestPlanUpdate", subject = "测试计划通知")
     public TestPlan editTestPlan(@RequestBody AddTestPlanRequest testPlanDTO) {
         return testPlanService.editTestPlanWithRequest(testPlanDTO);
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -840,6 +840,7 @@ public void sendMessage(TestPlanReport testPlanReport, String projectId) {
         String event = "";
         String successContext = "${operator}执行的 ${name} 测试计划运行成功, 报告: ${planShareUrl}";
         String failedContext = "${operator}执行的 ${name} 测试计划运行失败, 报告: ${planShareUrl}";
+        String context = "${operator}完成了测试计划: ${name}";
         if (StringUtils.equals(testPlanReport.getTriggerMode(), ReportTriggerMode.API.name())) {
             subject = Translator.get("task_notification_jenkins");
         } else {
@@ -874,10 +875,12 @@ public void sendMessage(TestPlanReport testPlanReport, String projectId) {
 
         NoticeModel noticeModel = NoticeModel.builder()
                 .operator(creator)
+                .context(context)
                 .successContext(successContext)
                 .successMailTemplate(successfulMailTemplate)
                 .failedContext(failedContext)
                 .failedMailTemplate(errfoMailTemplate)
+                .mailTemplate("track/TestPlanComplete")
                 .testId(testPlan.getId())
                 .status(testPlanReport.getStatus())
                 .event(event)

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -729,7 +729,7 @@ public void editTestPlanStatus(String planId) {
     private void sendCompletedNotice(TestPlan testPlan) {
         if (StringUtils.equals(TestPlanStatus.Completed.name(), testPlan.getStatus())) {
             try {
-                String context = getTestPlanContext(testPlan, NoticeConstants.Event.UPDATE);
+                String context = getTestPlanContext(testPlan, NoticeConstants.Event.COMPLETE);
                 Map paramMap = getTestPlanParamMap(testPlan);
                 SessionUser user = SessionUtils.getUser();
                 if (user != null) {
@@ -739,7 +739,7 @@ private void sendCompletedNotice(TestPlan testPlan) {
                         .operator(SessionUtils.getUserId())
                         .context(context)
                         .subject(Translator.get("test_plan_notification"))
-                        .mailTemplate("track/TestPlanEnd")
+                        .mailTemplate("track/TestPlanComplete")
                         .paramMap(paramMap)
                         .event(NoticeConstants.Event.COMPLETE)
                         .build();

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/swagger/SwaggerApiInfo.java
Patch:
@@ -15,4 +15,5 @@ public class SwaggerApiInfo {
     private List<JSONObject> parameters; //  对应 API 的请求参数
     private JSONObject requestBody;
     private JSONObject responses;
+    private String description;
 }

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -406,7 +406,7 @@ private String startEngine(LoadTestWithBLOBs loadTest, RunTestPlanRequest reques
                 if (testPlanLoadCase != null && StringUtils.isNotBlank(testPlanLoadCase.getLoadConfiguration())) {
                     testReport.setLoadConfiguration(testPlanLoadCase.getLoadConfiguration());
                 }
-                if (StringUtils.isNotBlank(testPlanLoadCase.getTestResourcePoolId())) {
+                if (testPlanLoadCase != null && StringUtils.isNotBlank(testPlanLoadCase.getTestResourcePoolId())) {
                     testReport.setTestResourcePoolId(testPlanLoadCase.getTestResourcePoolId());
                 }
             }

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -31,7 +31,6 @@
 import org.apache.jorphan.collections.HashTree;
 import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.http.ResponseEntity;
-import org.springframework.kafka.core.KafkaTemplate;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.client.RestTemplate;
@@ -51,8 +50,6 @@ public class JMeterService {
     @Resource
     private TestResourcePoolMapper testResourcePoolMapper;
     @Resource
-    private KafkaTemplate<String, Object> kafkaTemplate;
-    @Resource
     private RestTemplate restTemplate;
 
     @PostConstruct

File: backend/src/main/java/io/metersphere/api/jmeter/ResourcePoolCalculation.java
Patch:
@@ -78,7 +78,7 @@ public TestResource getPool(String resourcePoolId) {
     public List<JvmInfoDTO> getPools(String resourcePoolId) {
         // 获取可以执行的资源池
         TestResourcePoolExample example = new TestResourcePoolExample();
-        example.createCriteria().andStatusEqualTo("VALID").andIdEqualTo(resourcePoolId);
+        example.createCriteria().andStatusEqualTo("VALID").andTypeEqualTo("NODE").andIdEqualTo(resourcePoolId);
         List<TestResourcePool> pools = testResourcePoolMapper.selectByExample(example);
 
         // 按照NODE节点的可用内存空间大小排序

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -382,9 +382,8 @@ public void checkMockEvnInfoByBaseUrl(String baseUrl) {
 
     private String getSystemIdByProjectId(String projectId){
         ProjectService projectService = CommonBeanFactory.getBean(ProjectService.class);
-
-        if(projectService != null){
-            Project project = projectService.getProjectById(projectId);
+        Project project = projectService.getProjectById(projectId);
+        if(project != null){
             project = projectService.checkSystemId(project);
             return  projectService.getSystemIdByProjectId(projectId);
         }else {

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -127,8 +127,10 @@ protected ApiDefinitionWithBLOBs buildApiDefinition(String id, String name, Stri
         apiDefinition.setProjectId(this.projectId);
         if (StringUtils.equalsIgnoreCase("schedule", importRequest.getType())) {
             apiDefinition.setUserId(importRequest.getUserId());
+            apiDefinition.setCreateUser(importRequest.getUserId());
         } else {
             apiDefinition.setUserId(SessionUtils.getUserId());
+            apiDefinition.setCreateUser(SessionUtils.getUserId());
         }
         return apiDefinition;
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -153,10 +153,10 @@ private Map<String, String> getReviewParamMap(SaveTestCaseReviewRequest reviewRe
 
     public List<TestCaseReviewDTO> listCaseReview(QueryCaseReviewRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
-        String projectId = request.getProjectId();
+        /*String projectId = request.getProjectId();
         if (StringUtils.isBlank(projectId)) {
             return new ArrayList<>();
-        }
+        }*/
         //update   reviewerId
         if(StringUtils.equalsIgnoreCase(request.getReviewerId(),"currentUserId")){
             request.setReviewerId(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -783,7 +783,8 @@ public void batchRun(ApiCaseBatchRequest request) {
             batchMapper.insert(report);
             executeQueue.add(runCaseRequest);
         }
-        sqlSession.flushStatements();
+        sqlSession.commit();
+
         for (RunCaseRequest runCaseRequest : executeQueue) {
             run(runCaseRequest);
             MessageCache.batchTestCases.put(runCaseRequest.getReportId(), runCaseRequest.getReport());

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -108,6 +108,7 @@ public String stop(List<TaskRequest> reportIds) {
                         result.setStatus("STOP");
                         apiDefinitionExecResultMapper.updateByPrimaryKeySelective(result);
                         actuator = result.getActuator();
+                        MessageCache.batchTestCases.remove(result.getId());
                     }
                 } else if (StringUtils.equals(request.getType(), "SCENARIO")) {
                     ApiScenarioReport report = apiScenarioReportMapper.selectByPrimaryKey(request.getReportId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -282,6 +282,8 @@ public ApiDefinitionWithBLOBs update(SaveApiDefinitionRequest request, List<Mult
             request.setMethod("dubbo://");
         }
         ApiDefinitionWithBLOBs returnModel = updateTest(request);
+        MockConfigService mockConfigService = CommonBeanFactory.getBean(MockConfigService.class);
+        mockConfigService.updateMockReturnMsgByApi(returnModel);
         FileUtils.createBodyFiles(request.getRequest().getId(), bodyFiles);
         return returnModel;
     }

File: backend/src/main/java/io/metersphere/api/jmeter/ResourcePoolCalculation.java
Patch:
@@ -43,7 +43,7 @@ private JvmInfoDTO getNodeJvmInfo(String uri) {
     public TestResource getPool(String resourcePoolId) {
         // 获取可以执行的资源池
         TestResourcePoolExample example = new TestResourcePoolExample();
-        example.createCriteria().andStatusEqualTo("VALID").andTypeEqualTo("NODE").andIdEqualTo(resourcePoolId);
+        example.createCriteria().andStatusEqualTo("VALID").andIdEqualTo(resourcePoolId);
         List<TestResourcePool> pools = testResourcePoolMapper.selectByExample(example);
         // 按照NODE节点的可用内存空间大小排序
         List<JvmInfoDTO> availableNodes = new ArrayList<>();
@@ -78,7 +78,7 @@ public TestResource getPool(String resourcePoolId) {
     public List<JvmInfoDTO> getPools(String resourcePoolId) {
         // 获取可以执行的资源池
         TestResourcePoolExample example = new TestResourcePoolExample();
-        example.createCriteria().andStatusEqualTo("VALID").andTypeEqualTo("NODE").andIdEqualTo(resourcePoolId);
+        example.createCriteria().andStatusEqualTo("VALID").andIdEqualTo(resourcePoolId);
         List<TestResourcePool> pools = testResourcePoolMapper.selectByExample(example);
 
         // 按照NODE节点的可用内存空间大小排序

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -255,7 +255,6 @@ public TestPlan editTestPlanWithRequest(AddTestPlanRequest request) {
             }
         }
         List<String> follows = request.getFollows();
-        if (!CollectionUtils.isEmpty(follows)) {
             if (StringUtils.isNotBlank(request.getId())) {
                 testPlanFollowService.deleteTestPlanFollowByPlanId(request.getId());
                 for (String follow : follows) {
@@ -265,7 +264,7 @@ public TestPlan editTestPlanWithRequest(AddTestPlanRequest request) {
                     testPlanFollowService.insert(testPlanFollow);
                 }
             }
-        }
+
         return this.editTestPlan(request);
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanMapper.java
Patch:
@@ -35,4 +35,6 @@ public interface ExtTestPlanMapper {
     List<String> findIdByPerformanceReportId(String reportId);
 
     List<TestPlan> listRecent(@Param("userId") String userId, @Param("projectId") String currentProjectId);
+
+    int updateActualEndTimeIsNullById(String testPlanID);
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -805,8 +805,9 @@ public TestPlanReport update(TestPlanReport report) {
                 //更新TestPlan状态为完成
                 TestPlanWithBLOBs testPlan = testPlanMapper.selectByPrimaryKey(report.getTestPlanId());
                 if (testPlan != null) {
+                    testPlanService.checkStatus(testPlan);
 //                    testPlan.setStatus(TestPlanStatus.Completed.name());
-                    testPlanMapper.updateByPrimaryKeySelective(testPlan);
+//                    testPlanMapper.updateByPrimaryKeySelective(testPlan);
                 }
                 if (testPlan != null && StringUtils.equalsAny(report.getTriggerMode(),
                         ReportTriggerMode.MANUAL.name(),

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -217,7 +217,6 @@ public List<ApiDefinitionResult> listBatch(ApiBatchRequest request) {
         return resList;
     }
 
-
     /**
      * 初始化部分参数
      *

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -111,8 +111,9 @@ protected void addBodyHeader(MsHTTPSamplerProxy request) {
                 headers = new ArrayList<>();
                 request.setHeaders(headers);
             }
-            addContentType(request.getHeaders(), contentType);
-
+            if (StringUtils.isNotEmpty(contentType)) {
+                addContentType(request.getHeaders(), contentType);
+            }
         }
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -240,7 +240,7 @@ private ApiDefinitionRequest initRequest(ApiDefinitionRequest request, boolean s
             }
         }
         //update userId
-        if(request.getUserId()!=null&&request.getUserId().equals("currentUserId")){
+        if(StringUtils.equalsIgnoreCase(request.getUserId(),"currentUserId")){
             request.setUserId(SessionUtils.getUserId());
         }
         return request;

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -158,7 +158,7 @@ public List<TestCaseReviewDTO> listCaseReview(QueryCaseReviewRequest request) {
             return new ArrayList<>();
         }
         //update   reviewerId
-        if(request.getReviewerId()!=null&&request.getReviewerId().equals("currentUserId")){
+        if(StringUtils.equalsIgnoreCase(request.getReviewerId(),"currentUserId")){
             request.setReviewerId(SessionUtils.getUserId());
         }
         return extTestCaseReviewMapper.list(request);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -240,7 +240,7 @@ private ApiDefinitionRequest initRequest(ApiDefinitionRequest request, boolean s
             }
         }
         //update userId
-        if(request.getUserId().equals("currentUserId")){
+        if(request.getUserId()!=null&&request.getUserId().equals("currentUserId")){
             request.setUserId(SessionUtils.getUserId());
         }
         return request;

File: backend/src/main/java/io/metersphere/service/WorkstationService.java
Patch:
@@ -42,6 +42,7 @@ public Map<String, Integer> getMyCreatedCaseGroupContMap() {
         operatorValue.put("operator","current user");
         operatorValue.put("value","current user");
         combine.put("creator",operatorValue);
+        testPlanRequest.setCombine(combine);
         apiTestCaseRequest.setCombine(combine);
         ApiScenarioRequest apiScenarioRequest = new ApiScenarioRequest();
         apiScenarioRequest.setCombine(combine);

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -158,7 +158,7 @@ public List<TestCaseReviewDTO> listCaseReview(QueryCaseReviewRequest request) {
             return new ArrayList<>();
         }
         //update   reviewerId
-        if(request.getReviewerId().equals("currentUserId")){
+        if(request.getReviewerId()!=null&&request.getReviewerId().equals("currentUserId")){
             request.setReviewerId(SessionUtils.getUserId());
         }
         return extTestCaseReviewMapper.list(request);

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestPlanRequest.java
Patch:
@@ -31,4 +31,7 @@ public class QueryTestPlanRequest extends TestPlan {
     private String projectId;
 
     private String projectName;
+
+    //执行人或者负责人
+    private String executorOrPrincipal;
 }

File: backend/src/main/java/io/metersphere/track/request/testreview/QueryCaseReviewRequest.java
Patch:
@@ -40,4 +40,6 @@ public class QueryCaseReviewRequest extends TestCaseReviewTestCase {
     private String projectId;
 
     private String projectName;
+
+    private String reviewerId;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -87,6 +87,9 @@ public void relevanceCase(LoadCaseRequest request) {
         TestPlanLoadCaseMapper testPlanLoadCaseMapper = sqlSession.getMapper(TestPlanLoadCaseMapper.class);
         Long nextOrder = ServiceUtils.getNextOrder(request.getTestPlanId(), extTestPlanLoadCaseMapper::getLastOrder);
 
+        // 尽量保持与用例顺序一致
+        Collections.reverse(caseIds);
+
         for (String id : caseIds) {
             TestPlanLoadCase t = new TestPlanLoadCase();
             t.setId(UUID.randomUUID().toString());

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -525,6 +525,9 @@ public void testPlanRelevance(PlanCaseRelevanceRequest request) {
             return;
         }
 
+        // 尽量保持与用例顺序一致
+        Collections.reverse(testCaseIds);
+
         TestCaseExample testCaseExample = new TestCaseExample();
         testCaseExample.createCriteria().andIdIn(testCaseIds);
         List<TestCase> testCaseList = testCaseMapper.selectByExample(testCaseExample);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -611,7 +611,6 @@ public void testPlanRelevance(PlanCaseRelevanceRequest request) {
                                 t.setId(UUID.randomUUID().toString());
                                 t.setTestPlanId(request.getPlanId());
                                 t.setApiScenarioId(l.getTestId());
-                                t.setLastResult(testPlanApiScenario.getLastResult());
                                 t.setPassRate(testPlanApiScenario.getPassRate());
                                 t.setReportId(testPlanApiScenario.getReportId());
                                 t.setStatus(testPlanApiScenario.getStatus());

File: backend/src/main/java/io/metersphere/dto/RelationshipGraphData.java
Patch:
@@ -37,6 +37,7 @@ public static class Node {
     public static class Edge {
         private Integer source;
         private Integer target;
+        private float curveness;
     }
 
     /**

File: backend/src/main/java/io/metersphere/log/controller/OperatingLogController.java
Patch:
@@ -30,9 +30,9 @@ public OperatingLogDTO get(@PathVariable String id) {
     }
 
 
-    @GetMapping("/get/source/{id}")
-    public List<OperatingLogDTO> findBySourceId(@PathVariable String id) {
-        return operatingLogService.findBySourceId(id);
+    @PostMapping("/get/source")
+    public List<OperatingLogDTO> findBySourceId(@RequestBody OperatingLogRequest request) {
+        return operatingLogService.findBySourceId(request);
     }
 
 }

File: backend/src/main/java/io/metersphere/log/service/OperatingLogService.java
Patch:
@@ -47,9 +47,8 @@ public OperatingLogDTO get(String id) {
         return dto;
     }
 
-    public List<OperatingLogDTO> findBySourceId(String id) {
-        OperatingLogRequest request = new OperatingLogRequest();
-        request.setSourceId("%" + id + "%");
+    public List<OperatingLogDTO> findBySourceId(OperatingLogRequest request) {
+        request.setSourceId("%" + request.getSourceId() + "%");
         List<OperatingLogDTO> logWithBLOBs = extOperatingLogMapper.findBySourceId(request);
         List<OperatingLogDTO> dtos = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(logWithBLOBs)) {

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogRequest.java
Patch:
@@ -30,4 +30,6 @@ public class OperatingLogRequest implements Serializable {
 
     private List<String> projectIds;
 
+    private List<String> modules;
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/notice/domain/MessageDetail.java
Patch:
@@ -2,11 +2,12 @@
 
 import lombok.Data;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
 @Data
-public class MessageDetail {
+public class MessageDetail implements Serializable {
     private List<String> userIds = new ArrayList<>();
     private String id;
     private String event;

File: backend/src/main/java/io/metersphere/notice/sender/NoticeModel.java
Patch:
@@ -4,12 +4,13 @@
 import lombok.Builder;
 import lombok.Data;
 
+import java.io.Serializable;
 import java.util.List;
 import java.util.Map;
 
 @Data
 @Builder
-public class NoticeModel {
+public class NoticeModel implements Serializable {
     /**
      * 保存 测试id
      */

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1416,6 +1416,7 @@ public TestCase edit(EditTestCaseRequest request, List<MultipartFile> files) {
         }
         this.setNode(request);
         editTestCase(request);
+        saveFollows(request.getId(), request.getFollows());
         return testCaseWithBLOBs;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/EsbDataStruct.java
Patch:
@@ -123,7 +123,6 @@ public Element genXmlElementByChildren(Element document) {
                 element.addAttribute("attr", attrString);
             }
         } catch (Exception e) {
-            System.out.println(this.name);
             e.printStackTrace();
         }
 
@@ -163,7 +162,6 @@ public Element genXmlElementByDocument(Document document) {
                 element.addAttribute("attr", attrString);
             }
         } catch (Exception e) {
-            System.out.println(this.name);
             e.printStackTrace();
         }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/TcpTreeTableDataStruct.java
Patch:
@@ -123,7 +123,6 @@ public Element genXmlElementByChildren(Element document) {
                 element.addAttribute("attr", attrString);
             }
         } catch (Exception e) {
-            System.out.println(this.name);
             e.printStackTrace();
         }
 
@@ -163,7 +162,6 @@ public Element genXmlElementByDocument(Document document) {
                 element.addAttribute("attr", attrString);
             }
         } catch (Exception e) {
-            System.out.println(this.name);
             e.printStackTrace();
         }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -605,7 +605,6 @@ public ApiScenarioReport updateScenario(TestResult result) {
                     if (obj != null) {
                         ReportCounter counter = (ReportCounter) obj;
                         counter.setNumber(counter.getNumber() + 1);
-                        System.out.println("得到统计数量：" + counter.getNumber());
                         MessageCache.cache.put(report.getScenarioId(), counter);
                     }
                 }

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1032,7 +1032,7 @@ public String checkReturnWithMockExpectByBodyParam(String method, Map<String, St
         List<ApiDefinitionWithBLOBs> aualifiedApiList = new ArrayList<>();
         if (project != null) {
             String urlSuffix = this.getUrlSuffix(project.getSystemId(), request);
-            aualifiedApiList = apiDefinitionService.preparedUrl(project.getId(), method, urlSuffix, urlSuffix);
+            aualifiedApiList = apiDefinitionService.preparedUrl(project.getId(), method, urlSuffix);
 
             JSON paramJson = MockApiUtils.getPostParamMap(request);
             JSONObject parameterObject = MockApiUtils.getParameterJsonObject(request);
@@ -1094,7 +1094,7 @@ public String checkReturnWithMockExpectByUrlParam(String method, Map<String, Str
         List<ApiDefinitionWithBLOBs> aualifiedApiList = new ArrayList<>();
         if (project != null) {
             String urlSuffix = this.getUrlSuffix(project.getSystemId(), request);
-            aualifiedApiList = apiDefinitionService.preparedUrl(project.getId(), method, null, urlSuffix);
+            aualifiedApiList = apiDefinitionService.preparedUrl(project.getId(), method, urlSuffix);
 
             /**
              * GET/DELETE 这种通过url穿参数的接口，在接口路径相同的情况下可能会出现这样的情况：

File: backend/src/main/java/io/metersphere/base/domain/TestCase.java
Patch:
@@ -59,7 +59,5 @@ public class TestCase implements Serializable {
 
     private Long order;
 
-    private String demandPlatform;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/reportstatistics/dto/charts/Series.java
Patch:
@@ -17,4 +17,5 @@ public class Series {
     private String stack;
     private JSONObject encode;
     private List<String> center;
+    private String barWidth = null;
 }

File: backend/src/main/java/io/metersphere/base/domain/TestCaseReview.java
Patch:
@@ -25,8 +25,6 @@ public class TestCaseReview implements Serializable {
 
     private String createUser;
 
-    private String followPeople;
-
     private String description;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/base/domain/TestPlan.java
Patch:
@@ -43,7 +43,5 @@ public class TestPlan implements Serializable {
 
     private Boolean automaticStatusUpdate;
 
-    private String followPeople;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/dto/TestPlanDTO.java
Patch:
@@ -13,6 +13,7 @@ public class TestPlanDTO extends TestPlanWithBLOBs {
     private String userName;
     private List<String> projectIds;
     private List<String> principals;
+    private List<String> follows;
     /**
      * 定时任务ID
      */

File: backend/src/main/java/io/metersphere/track/request/testplan/AddTestPlanRequest.java
Patch:
@@ -11,4 +11,5 @@
 public class AddTestPlanRequest extends TestPlanWithBLOBs {
     private List<String> projectIds;
     private List<String> principals;
+    private List<String> follows;
 }

File: backend/src/main/java/io/metersphere/track/request/testreview/SaveTestCaseReviewRequest.java
Patch:
@@ -11,4 +11,5 @@
 public class SaveTestCaseReviewRequest extends TestCaseReview {
     private List<String> projectIds;
     private List<String> userIds;
+    private List<String> followIds;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionResult.java
Patch:
@@ -27,4 +27,6 @@ public class ApiDefinitionResult extends ApiDefinitionWithBLOBs {
     private String caseType;
 
     private String scenarioType;
+
+    private String apiType;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -152,6 +152,7 @@ public List<ApiDefinitionResult> weekList(ApiDefinitionRequest request) {
             List<ApiDefinitionResult> resList = extApiDefinitionMapper.weekList(request, startTime.getTime());
             calculateResult(resList, request.getProjectId());
             calculateResultSce(resList);
+            resList.stream().forEach(item -> item.setApiType("api"));
             return resList;
         }
     }

File: backend/src/main/java/io/metersphere/service/CustomFieldService.java
Patch:
@@ -190,6 +190,7 @@ private void checkExist(CustomField customField) {
             CustomFieldExample.Criteria criteria = example.createCriteria();
             criteria.andNameEqualTo(customField.getName());
             criteria.andWorkspaceIdEqualTo(customField.getWorkspaceId());
+            criteria.andSceneEqualTo(customField.getScene());
             if (StringUtils.isNotBlank(customField.getId())) {
                 criteria.andIdNotEqualTo(customField.getId());
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -90,6 +90,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             this.setRefElement();
+            hashTree = this.getHashTree();
         }
 
         final HashTree testPlanTree = tree.add(dubboSample(config));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -11,7 +11,6 @@
 import io.metersphere.api.dto.automation.TcpTreeTableDataStruct;
 import io.metersphere.api.dto.definition.request.ElementUtil;
 import io.metersphere.api.dto.definition.request.ParameterConfig;
-import io.metersphere.api.dto.definition.request.processors.post.MsJSR223PostProcessor;
 import io.metersphere.api.dto.definition.request.processors.pre.MsJSR223PreProcessor;
 import io.metersphere.api.dto.scenario.KeyValue;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
@@ -122,6 +121,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
         }
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             this.setRefElement();
+            hashTree = this.getHashTree();
         }
         if (config.getConfig() == null) {
             // 单独接口执行

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -355,7 +355,7 @@ public ApiScenario update(SaveApiScenarioRequest request, List<MultipartFile> bo
             scenario.setVersion(version + 1);
         }
 
-        deleteUpdateBodyFile(scenario);
+        deleteUpdateBodyFile(scenario,beforeScenario);
         List<ApiMethodUrlDTO> useUrl = this.parseUrl(scenario);
         scenario.setUseUrl(JSONArray.toJSONString(useUrl));
         apiScenarioMapper.updateByPrimaryKeySelective(scenario);
@@ -376,8 +376,7 @@ public ApiScenario update(SaveApiScenarioRequest request, List<MultipartFile> bo
      *
      * @param scenario
      */
-    public void deleteUpdateBodyFile(ApiScenarioWithBLOBs scenario) {
-        ApiScenarioWithBLOBs oldScenario = apiScenarioMapper.selectByPrimaryKey(scenario.getId());
+    public void deleteUpdateBodyFile(ApiScenarioWithBLOBs scenario,ApiScenarioWithBLOBs oldScenario) {
         Set<String> newRequestIds = getRequestIds(scenario.getScenarioDefinition());
         MsTestElement msTestElement = parseScenarioDefinition(oldScenario.getScenarioDefinition());
         List<MsHTTPSamplerProxy> oldRequests = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msTestElement);

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -322,7 +322,6 @@ public int getRelationshipApi(@PathVariable("id") String id) {
 
     @PostMapping("/relationship/relate/{goPage}/{pageSize}")
     public Pager< List<ApiDefinitionResult>> getRelationshipRelateList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiDefinitionRequest request) {
-        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        return PageUtils.setPageInfo(page, apiDefinitionService.getRelationshipRelateList(request));
+        return apiDefinitionService.getRelationshipRelateList(request, goPage, pageSize);
     }
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -127,8 +127,7 @@ public Pager<List<TestCase>> getTestCaseRelateList(@PathVariable int goPage, @Pa
 
     @PostMapping("/relationship/relate/{goPage}/{pageSize}")
     public Pager<List<TestCase>> getRelationshipRelateList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestCaseRequest request) {
-        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        return PageUtils.setPageInfo(page, testCaseService.getRelationshipRelateList(request));
+        return testCaseService.getRelationshipRelateList(request, goPage, pageSize);
     }
 
     @PostMapping("/relate/issue/{goPage}/{pageSize}")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataCn.java
Patch:
@@ -33,7 +33,7 @@ public class UserExcelDataCn extends UserExcelData {
     @Length(max = 255)
     @ExcelProperty("密码")
     @ColumnWidth(30)
-    @Pattern(regexp = "^(?![0-9]+$)(?![^0-9]+$)(?![a-zA-Z]+$)(?![^a-zA-Z]+$)(?![a-zA-Z0-9]+$)[a-zA-Z0-9\\S]{8,30}$", message = "{user_import_format_wrong}")
+    @Pattern(regexp = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[\\s\\S]{8,30}$", message = "{user_import_format_wrong}")
     private String password;
 
     @ExcelProperty("电话")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataTw.java
Patch:
@@ -33,7 +33,7 @@ public class UserExcelDataTw extends TestCaseExcelData {
     @Length(max = 255)
     @ExcelProperty("密碼")
     @ColumnWidth(30)
-    @Pattern(regexp = "^(?![0-9]+$)(?![^0-9]+$)(?![a-zA-Z]+$)(?![^a-zA-Z]+$)(?![a-zA-Z0-9]+$)[a-zA-Z0-9\\S]{8,30}$", message = "{user_import_format_wrong}")
+    @Pattern(regexp = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[\\s\\S]{8,30}$", message = "{user_import_format_wrong}")
     private String password;
 
     @ExcelProperty("電話")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataUs.java
Patch:
@@ -34,7 +34,7 @@ public class UserExcelDataUs extends UserExcelData {
     @Length(max = 255)
     @ExcelProperty("Password")
     @ColumnWidth(30)
-    @Pattern(regexp = "^(?![0-9]+$)(?![^0-9]+$)(?![a-zA-Z]+$)(?![^a-zA-Z]+$)(?![a-zA-Z0-9]+$)[a-zA-Z0-9\\S]{8,30}$", message = "{user_import_format_wrong}")
+    @Pattern(regexp = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[\\s\\S]{8,30}$", message = "{user_import_format_wrong}")
     private String password;
 
     @ExcelProperty("Phone")

File: backend/src/main/java/io/metersphere/dto/RelationshipGraphData.java
Patch:
@@ -29,6 +29,7 @@ public static class Node {
         private Integer category; // 分组
         private Integer x;
         private Integer y;
+        private Boolean visited = false;
     }
 
     @Getter

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -302,7 +302,7 @@ public void deleteTestCaseBath(@RequestBody TestCaseBatchRequest request) {
     @SendNotice(taskType = NoticeConstants.TaskType.TRACK_TEST_CASE_TASK, target = "#targetClass.findByBatchRequest(#request)", targetClass = TestCaseService.class,
             event = NoticeConstants.Event.DELETE, mailTemplate = "track/TestCaseDelete", subject = "测试用例通知")
     public void deleteToGcBatch(@RequestBody TestCaseBatchRequest request) {
-        testCaseService.deleteToGcBatch(request);
+        testCaseService.deleteToGcBatch(request.getIds());
     }
 
     @PostMapping("/reduction")

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -259,7 +259,7 @@ public int deleteNode(List<String> nodeIds) {
         List<String> testCaseIdList = this.selectCaseIdByNodeIds(nodeIds);
         TestCaseBatchRequest request = new TestCaseBatchRequest();
         request.setIds(testCaseIdList);
-        testCaseService.deleteToGcBatch(request);
+        testCaseService.deleteToGcBatch(request.getIds());
 
         TestCaseNodeExample testCaseNodeExample = new TestCaseNodeExample();
         testCaseNodeExample.createCriteria().andIdIn(nodeIds);

File: backend/src/main/java/io/metersphere/service/RelationshipEdgeService.java
Patch:
@@ -153,7 +153,9 @@ public void saveBatch(RelationshipEdgeRequest request) {
 
         relationshipEdges.forEach(item -> {
             if (addEdgesIds.contains(item.getSourceId() + item.getTargetId())) {
-                batchMapper.insert(item);
+                if(batchMapper.selectByPrimaryKey(item) == null ) {
+                    batchMapper.insert(item);
+                }
             } else {
                 item.setGraphId(graphId); // 把原来图的id设置成合并后新的图的id
                 batchMapper.updateByPrimaryKey(item);

File: backend/src/main/java/io/metersphere/api/controller/APIReportController.java
Patch:
@@ -6,14 +6,11 @@
 import io.metersphere.api.dto.DeleteAPIReportRequest;
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.api.service.APIReportService;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiModuleController.java
Patch:
@@ -5,13 +5,10 @@
 import io.metersphere.api.service.ApiModuleService;
 import io.metersphere.base.domain.ApiModule;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.ApiDefinitionDefaultApiTypeUtil;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiMonitorController.java
Patch:
@@ -5,9 +5,6 @@
 import io.metersphere.api.dto.ApiResponseCodeMonitor;
 import io.metersphere.api.dto.ApiResponseTimeMonitor;
 import io.metersphere.api.service.APIMonitorService;
-import io.metersphere.commons.constants.RoleConstants;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiScenarioModuleController.java
Patch:
@@ -5,11 +5,8 @@
 import io.metersphere.api.service.ApiScenarioModuleService;
 import io.metersphere.base.domain.ApiScenarioModule;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiTestEnvironmentController.java
Patch:
@@ -8,14 +8,11 @@
 import io.metersphere.api.service.CommandService;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.EnvironmentRequest;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 

File: backend/src/main/java/io/metersphere/base/domain/Quota.java
Patch:
@@ -17,8 +17,6 @@ public class Quota implements Serializable {
 
     private String resourcePool;
 
-    private String organizationId;
-
     private String workspaceId;
 
     private Boolean useDefault;

File: backend/src/main/java/io/metersphere/base/domain/ServiceIntegration.java
Patch:
@@ -7,10 +7,10 @@
 public class ServiceIntegration implements Serializable {
     private String id;
 
-    private String organizationId;
-
     private String platform;
 
+    private String workspaceId;
+
     private String configuration;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/base/domain/User.java
Patch:
@@ -23,8 +23,6 @@ public class User implements Serializable {
 
     private String lastWorkspaceId;
 
-    private String lastOrganizationId;
-
     private String phone;
 
     private String source;

File: backend/src/main/java/io/metersphere/base/domain/Workspace.java
Patch:
@@ -7,8 +7,6 @@
 public class Workspace implements Serializable {
     private String id;
 
-    private String organizationId;
-
     private String name;
 
     private String description;

File: backend/src/main/java/io/metersphere/base/mapper/MessageTaskMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.MessageTask;
 import io.metersphere.base.domain.MessageTaskExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface MessageTaskMapper {
     long countByExample(MessageTaskExample example);

File: backend/src/main/java/io/metersphere/controller/CustomFieldController.java
Patch:
@@ -4,14 +4,11 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.CustomField;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.QueryCustomFieldRequest;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CustomFieldService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -4,16 +4,13 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.IssueTemplate;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.UpdateIssueTemplateRequest;
 import io.metersphere.dto.IssueTemplateDao;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.IssueTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/JarConfigController.java
Patch:
@@ -4,13 +4,10 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.JarConfig;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.JarConfigService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -1,10 +1,7 @@
 package io.metersphere.controller;
 
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.controller.request.MdUploadRequest;
 import io.metersphere.service.ResourceService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.core.io.FileSystemResource;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;

File: backend/src/main/java/io/metersphere/controller/TestCaseTemplateController.java
Patch:
@@ -5,16 +5,13 @@
 import io.metersphere.base.domain.TestCaseTemplate;
 import io.metersphere.base.domain.TestCaseTemplateWithBLOBs;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.UpdateCaseFieldTemplateRequest;
 import io.metersphere.dto.TestCaseTemplateDao;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.TestCaseTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/TestResourcePoolController.java
Patch:
@@ -3,7 +3,6 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.consul.CacheNode;
@@ -12,8 +11,6 @@
 import io.metersphere.dto.UpdatePoolDTO;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.TestResourcePoolService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/UserKeysController.java
Patch:
@@ -2,13 +2,10 @@
 
 import io.metersphere.base.domain.UserKey;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.security.ApiKeyHandler;
 import io.metersphere.service.UserKeyService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.apache.shiro.web.util.WebUtils;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;

File: backend/src/main/java/io/metersphere/controller/request/BaseQueryRequest.java
Patch:
@@ -16,8 +16,6 @@ public class BaseQueryRequest {
 
     private String workspaceId;
 
-    private String organizationId;
-
     private List<String> ids;
 
     private List<String> moduleIds;

File: backend/src/main/java/io/metersphere/controller/request/IntegrationRequest.java
Patch:
@@ -7,5 +7,5 @@
 @Setter
 public class IntegrationRequest {
     private String platform;
-    private String orgId;
+    private String workspaceId;
 }

File: backend/src/main/java/io/metersphere/controller/request/WorkspaceRequest.java
Patch:
@@ -6,6 +6,5 @@
 @Getter
 @Setter
 public class WorkspaceRequest {
-    private String organizationId;
     private String name;
 }

File: backend/src/main/java/io/metersphere/controller/request/organization/AddOrgMemberRequest.java
Patch:
@@ -9,7 +9,6 @@
 @Setter
 public class AddOrgMemberRequest {
 
-    private String organizationId;
     private List<String> userIds;
     private List<String> roleIds;
     private List<String> groupIds;

File: backend/src/main/java/io/metersphere/controller/request/resourcepool/UserBatchProcessRequest.java
Patch:
@@ -19,7 +19,7 @@ public class UserBatchProcessRequest {
     String projectId;
     String batchType;
     List<String> batchProcessValue;
-    String organizationId;
+    String workspaceId;
     UserRequest condition;
 }
 

File: backend/src/main/java/io/metersphere/dto/RelatedSource.java
Patch:
@@ -4,7 +4,6 @@
 
 @Data
 public class RelatedSource {
-    private String organizationId;
     private String workspaceId;
     private String projectId;
 }

File: backend/src/main/java/io/metersphere/dto/WorkspaceDTO.java
Patch:
@@ -9,8 +9,5 @@ public class WorkspaceDTO {
 
     private String id;
     private String name;
-    private String organizationId;
     private String description;
-    private String organizationName;
-
 }

File: backend/src/main/java/io/metersphere/dto/WorkspaceResource.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.dto;
 
-import io.metersphere.base.domain.Organization;
 import io.metersphere.base.domain.Project;
 import io.metersphere.base.domain.Workspace;
 import lombok.Data;
@@ -9,8 +8,7 @@
 import java.util.List;
 
 @Data
-public class OrganizationResource {
-    private List<Organization> organizations = new ArrayList<>();
+public class WorkspaceResource {
     private List<Workspace> workspaces = new ArrayList<>();
     private List<Project> projects = new ArrayList<>();
 }

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -16,7 +16,7 @@ public class NoticeController {
     private NoticeService noticeService;
 
     @PostMapping("save/message/task")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
+    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
     public void saveMessage(@RequestBody MessageDetail messageDetail) {
         noticeService.saveMessageTask(messageDetail);
     }
@@ -32,7 +32,7 @@ public List<MessageDetail> searchMessageSchedule(@PathVariable String testId) {
     }
 
     @GetMapping("/delete/message/{identification}")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
+    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
     public int deleteMessage(@PathVariable String identification) {
         return noticeService.delMessage(identification);
     }

File: backend/src/main/java/io/metersphere/notice/domain/MessageDetail.java
Patch:
@@ -14,7 +14,6 @@ public class MessageDetail {
     private String webhook;
     private String type;
     private String identification;
-    private String organizationId;
     private Boolean isSet;
     private String testId;
     private Long createTime;

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.notice.service;
 
 import com.alibaba.nacos.client.utils.StringUtils;
-import io.metersphere.base.domain.Organization;
+import io.metersphere.base.domain.Project;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.notice.domain.MessageDetail;
@@ -113,7 +113,7 @@ public void send(String triggerMode, String taskType, NoticeModel noticeModel) {
     /**
      * 后台触发的发送，没有session
      */
-    public void send(Organization organization, String taskType, NoticeModel noticeModel) {
+    public void send(Project project, String taskType, NoticeModel noticeModel) {
         try {
             List<MessageDetail> messageDetails;
 //            switch (taskType) {
@@ -127,7 +127,7 @@ public void send(Organization organization, String taskType, NoticeModel noticeM
 //                default:
 //                    break;
 //            }
-            messageDetails = noticeService.searchMessageByTypeAndOrganizationId(taskType, organization.getId());
+            messageDetails = noticeService.searchMessageByTypeAndWorkspaceId(taskType, project.getWorkspaceId());
 
             // 异步发送通知
             messageDetails.stream()

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -36,9 +36,6 @@ public byte[] downloadZip(String reportId, double[] ratios, int resourceIndex) {
             }
             EngineContext context = EngineFactory.createContext(loadTestReport, ratios, reportId, resourceIndex);
             return zipFilesToByteArray(context);
-        } catch (MSException e) {
-            LogUtil.error(e.getMessage(), e);
-            throw e;
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
             MSException.throwException(e);

File: backend/src/main/java/io/metersphere/track/controller/IssuesController.java
Patch:
@@ -66,9 +66,9 @@ public List<IssuesDao> getIssuesByPlanoId(@PathVariable String planId) {
         return issuesService.getIssuesByPlanoId(planId);
     }
 
-    @GetMapping("/auth/{orgId}/{platform}")
-    public void testAuth(@PathVariable String orgId, @PathVariable String platform) {
-        issuesService.testAuth(orgId, platform);
+    @GetMapping("/auth/{workspaceId}/{platform}")
+    public void testAuth(@PathVariable String workspaceId, @PathVariable String platform) {
+        issuesService.testAuth(workspaceId, platform);
     }
 
     @PostMapping("/user/auth")

File: backend/src/main/java/io/metersphere/track/controller/TestCaseNodeController.java
Patch:
@@ -2,16 +2,13 @@
 
 import io.metersphere.base.domain.TestCaseNode;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
 import io.metersphere.track.dto.TestCaseNodeDTO;
 import io.metersphere.track.request.testcase.DragNodeRequest;
 import io.metersphere.track.request.testcase.QueryNodeRequest;
 import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
 import io.metersphere.track.service.TestCaseNodeService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseReportTemplateController.java
Patch:
@@ -2,12 +2,9 @@
 
 import io.metersphere.base.domain.TestCaseReportTemplate;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.track.request.testCaseReport.QueryTemplateRequest;
 import io.metersphere.track.service.TestCaseReportTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -56,7 +56,7 @@ public JiraConfig getUserConfig() {
         String config = getPlatformConfig(IssuesManagePlatform.Jira.toString());
         if (StringUtils.isNotBlank(config)) {
             jiraConfig = JSONObject.parseObject(config, JiraConfig.class);
-            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
             if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getJiraAccount())
                     && StringUtils.isNotBlank(userPlatInfo.getJiraPassword())) {
                 jiraConfig.setAccount(userPlatInfo.getJiraAccount());

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -257,7 +257,7 @@ public TapdConfig getConfig() {
     }
 
     public String getReporter() {
-        UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+        UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
         if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getTapdUserName())) {
             return userPlatInfo.getTapdUserName();
         }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -65,7 +65,7 @@ public ZentaoPlatform(IssuesRequest issuesRequest) {
         this.password = object.getString("password");
         this.url = object.getString("url");
         String type = object.getString("request");
-        this.orgId = issuesRequest.getOrganizationId();
+        this.workspaceId = issuesRequest.getWorkspaceId();
         this.zentaoClient = ZentaoFactory.getInstance(this.url, type);
     }
 
@@ -282,7 +282,7 @@ public ZentaoConfig getUserConfig() {
         String config = getPlatformConfig(IssuesManagePlatform.Zentao.toString());
         if (StringUtils.isNotBlank(config)) {
             zentaoConfig = JSONObject.parseObject(config, ZentaoConfig.class);
-            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
             if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getZentaoUserName())
                     && StringUtils.isNotBlank(userPlatInfo.getZentaoPassword())) {
                 zentaoConfig.setAccount(userPlatInfo.getZentaoUserName());

File: backend/src/main/java/io/metersphere/track/request/testcase/AuthUserIssueRequest.java
Patch:
@@ -8,6 +8,6 @@
 @Getter
 @Setter
 public class AuthUserIssueRequest extends UserDTO.PlatformInfo {
-    private String orgId;
+    private String workspaceId;
     private String platform;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -11,7 +11,7 @@
 public class IssuesUpdateRequest extends IssuesWithBLOBs {
     private String content;
     private String testCaseId;
-    private String organizationId;
+    private String workspaceId;
 
     private List<String> tapdUsers;
     /**

File: backend/src/main/java/io/metersphere/api/controller/APIReportController.java
Patch:
@@ -6,14 +6,11 @@
 import io.metersphere.api.dto.DeleteAPIReportRequest;
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.api.service.APIReportService;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiModuleController.java
Patch:
@@ -5,13 +5,10 @@
 import io.metersphere.api.service.ApiModuleService;
 import io.metersphere.base.domain.ApiModule;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.ApiDefinitionDefaultApiTypeUtil;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiMonitorController.java
Patch:
@@ -5,9 +5,6 @@
 import io.metersphere.api.dto.ApiResponseCodeMonitor;
 import io.metersphere.api.dto.ApiResponseTimeMonitor;
 import io.metersphere.api.service.APIMonitorService;
-import io.metersphere.commons.constants.RoleConstants;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiScenarioModuleController.java
Patch:
@@ -5,11 +5,8 @@
 import io.metersphere.api.service.ApiScenarioModuleService;
 import io.metersphere.base.domain.ApiScenarioModule;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/api/controller/ApiTestEnvironmentController.java
Patch:
@@ -8,14 +8,11 @@
 import io.metersphere.api.service.CommandService;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.EnvironmentRequest;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 

File: backend/src/main/java/io/metersphere/base/domain/Quota.java
Patch:
@@ -17,8 +17,6 @@ public class Quota implements Serializable {
 
     private String resourcePool;
 
-    private String organizationId;
-
     private String workspaceId;
 
     private Boolean useDefault;

File: backend/src/main/java/io/metersphere/base/domain/ServiceIntegration.java
Patch:
@@ -7,10 +7,10 @@
 public class ServiceIntegration implements Serializable {
     private String id;
 
-    private String organizationId;
-
     private String platform;
 
+    private String workspaceId;
+
     private String configuration;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/base/domain/User.java
Patch:
@@ -23,8 +23,6 @@ public class User implements Serializable {
 
     private String lastWorkspaceId;
 
-    private String lastOrganizationId;
-
     private String phone;
 
     private String source;

File: backend/src/main/java/io/metersphere/base/domain/Workspace.java
Patch:
@@ -7,8 +7,6 @@
 public class Workspace implements Serializable {
     private String id;
 
-    private String organizationId;
-
     private String name;
 
     private String description;

File: backend/src/main/java/io/metersphere/base/mapper/MessageTaskMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.MessageTask;
 import io.metersphere.base.domain.MessageTaskExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface MessageTaskMapper {
     long countByExample(MessageTaskExample example);

File: backend/src/main/java/io/metersphere/controller/CustomFieldController.java
Patch:
@@ -4,14 +4,11 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.CustomField;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.QueryCustomFieldRequest;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CustomFieldService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/IssueTemplateController.java
Patch:
@@ -4,16 +4,13 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.IssueTemplate;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.UpdateIssueTemplateRequest;
 import io.metersphere.dto.IssueTemplateDao;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.IssueTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/JarConfigController.java
Patch:
@@ -4,13 +4,10 @@
 import com.github.pagehelper.PageHelper;
 import io.metersphere.base.domain.JarConfig;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.JarConfigService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 

File: backend/src/main/java/io/metersphere/controller/ResourceController.java
Patch:
@@ -1,10 +1,7 @@
 package io.metersphere.controller;
 
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.controller.request.MdUploadRequest;
 import io.metersphere.service.ResourceService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.core.io.FileSystemResource;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;

File: backend/src/main/java/io/metersphere/controller/TestCaseTemplateController.java
Patch:
@@ -5,16 +5,13 @@
 import io.metersphere.base.domain.TestCaseTemplate;
 import io.metersphere.base.domain.TestCaseTemplateWithBLOBs;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.UpdateCaseFieldTemplateRequest;
 import io.metersphere.dto.TestCaseTemplateDao;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.TestCaseTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/TestResourcePoolController.java
Patch:
@@ -3,7 +3,6 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.consul.CacheNode;
@@ -12,8 +11,6 @@
 import io.metersphere.dto.UpdatePoolDTO;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.TestResourcePoolService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/controller/UserKeysController.java
Patch:
@@ -2,13 +2,10 @@
 
 import io.metersphere.base.domain.UserKey;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.security.ApiKeyHandler;
 import io.metersphere.service.UserKeyService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.apache.shiro.web.util.WebUtils;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;

File: backend/src/main/java/io/metersphere/controller/request/BaseQueryRequest.java
Patch:
@@ -16,8 +16,6 @@ public class BaseQueryRequest {
 
     private String workspaceId;
 
-    private String organizationId;
-
     private List<String> ids;
 
     private List<String> moduleIds;

File: backend/src/main/java/io/metersphere/controller/request/IntegrationRequest.java
Patch:
@@ -7,5 +7,5 @@
 @Setter
 public class IntegrationRequest {
     private String platform;
-    private String orgId;
+    private String workspaceId;
 }

File: backend/src/main/java/io/metersphere/controller/request/WorkspaceRequest.java
Patch:
@@ -6,6 +6,5 @@
 @Getter
 @Setter
 public class WorkspaceRequest {
-    private String organizationId;
     private String name;
 }

File: backend/src/main/java/io/metersphere/controller/request/organization/AddOrgMemberRequest.java
Patch:
@@ -9,7 +9,6 @@
 @Setter
 public class AddOrgMemberRequest {
 
-    private String organizationId;
     private List<String> userIds;
     private List<String> roleIds;
     private List<String> groupIds;

File: backend/src/main/java/io/metersphere/controller/request/resourcepool/UserBatchProcessRequest.java
Patch:
@@ -19,7 +19,7 @@ public class UserBatchProcessRequest {
     String projectId;
     String batchType;
     List<String> batchProcessValue;
-    String organizationId;
+    String workspaceId;
     UserRequest condition;
 }
 

File: backend/src/main/java/io/metersphere/dto/RelatedSource.java
Patch:
@@ -4,7 +4,6 @@
 
 @Data
 public class RelatedSource {
-    private String organizationId;
     private String workspaceId;
     private String projectId;
 }

File: backend/src/main/java/io/metersphere/dto/WorkspaceDTO.java
Patch:
@@ -9,8 +9,5 @@ public class WorkspaceDTO {
 
     private String id;
     private String name;
-    private String organizationId;
     private String description;
-    private String organizationName;
-
 }

File: backend/src/main/java/io/metersphere/dto/WorkspaceResource.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.dto;
 
-import io.metersphere.base.domain.Organization;
 import io.metersphere.base.domain.Project;
 import io.metersphere.base.domain.Workspace;
 import lombok.Data;
@@ -9,8 +8,7 @@
 import java.util.List;
 
 @Data
-public class OrganizationResource {
-    private List<Organization> organizations = new ArrayList<>();
+public class WorkspaceResource {
     private List<Workspace> workspaces = new ArrayList<>();
     private List<Project> projects = new ArrayList<>();
 }

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -16,7 +16,7 @@ public class NoticeController {
     private NoticeService noticeService;
 
     @PostMapping("save/message/task")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
+    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
     public void saveMessage(@RequestBody MessageDetail messageDetail) {
         noticeService.saveMessageTask(messageDetail);
     }
@@ -32,7 +32,7 @@ public List<MessageDetail> searchMessageSchedule(@PathVariable String testId) {
     }
 
     @GetMapping("/delete/message/{identification}")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
+    @MsAuditLog(module = "workspace_message_settings", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#identification)", msClass = NoticeService.class)
     public int deleteMessage(@PathVariable String identification) {
         return noticeService.delMessage(identification);
     }

File: backend/src/main/java/io/metersphere/notice/domain/MessageDetail.java
Patch:
@@ -14,7 +14,6 @@ public class MessageDetail {
     private String webhook;
     private String type;
     private String identification;
-    private String organizationId;
     private Boolean isSet;
     private String testId;
     private Long createTime;

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.notice.service;
 
 import com.alibaba.nacos.client.utils.StringUtils;
-import io.metersphere.base.domain.Organization;
+import io.metersphere.base.domain.Project;
 import io.metersphere.commons.constants.NoticeConstants;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.notice.domain.MessageDetail;
@@ -113,7 +113,7 @@ public void send(String triggerMode, String taskType, NoticeModel noticeModel) {
     /**
      * 后台触发的发送，没有session
      */
-    public void send(Organization organization, String taskType, NoticeModel noticeModel) {
+    public void send(Project project, String taskType, NoticeModel noticeModel) {
         try {
             List<MessageDetail> messageDetails;
 //            switch (taskType) {
@@ -127,7 +127,7 @@ public void send(Organization organization, String taskType, NoticeModel noticeM
 //                default:
 //                    break;
 //            }
-            messageDetails = noticeService.searchMessageByTypeAndOrganizationId(taskType, organization.getId());
+            messageDetails = noticeService.searchMessageByTypeAndWorkspaceId(taskType, project.getWorkspaceId());
 
             // 异步发送通知
             messageDetails.stream()

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -36,9 +36,6 @@ public byte[] downloadZip(String reportId, double[] ratios, int resourceIndex) {
             }
             EngineContext context = EngineFactory.createContext(loadTestReport, ratios, reportId, resourceIndex);
             return zipFilesToByteArray(context);
-        } catch (MSException e) {
-            LogUtil.error(e.getMessage(), e);
-            throw e;
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
             MSException.throwException(e);

File: backend/src/main/java/io/metersphere/track/controller/IssuesController.java
Patch:
@@ -66,9 +66,9 @@ public List<IssuesDao> getIssuesByPlanoId(@PathVariable String planId) {
         return issuesService.getIssuesByPlanoId(planId);
     }
 
-    @GetMapping("/auth/{orgId}/{platform}")
-    public void testAuth(@PathVariable String orgId, @PathVariable String platform) {
-        issuesService.testAuth(orgId, platform);
+    @GetMapping("/auth/{workspaceId}/{platform}")
+    public void testAuth(@PathVariable String workspaceId, @PathVariable String platform) {
+        issuesService.testAuth(workspaceId, platform);
     }
 
     @PostMapping("/user/auth")

File: backend/src/main/java/io/metersphere/track/controller/TestCaseNodeController.java
Patch:
@@ -2,16 +2,13 @@
 
 import io.metersphere.base.domain.TestCaseNode;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
 import io.metersphere.track.dto.TestCaseNodeDTO;
 import io.metersphere.track.request.testcase.DragNodeRequest;
 import io.metersphere.track.request.testcase.QueryNodeRequest;
 import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
 import io.metersphere.track.service.TestCaseNodeService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseReportTemplateController.java
Patch:
@@ -2,12 +2,9 @@
 
 import io.metersphere.base.domain.TestCaseReportTemplate;
 import io.metersphere.commons.constants.OperLogConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.track.request.testCaseReport.QueryTemplateRequest;
 import io.metersphere.track.service.TestCaseReportTemplateService;
-import org.apache.shiro.authz.annotation.Logical;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -56,7 +56,7 @@ public JiraConfig getUserConfig() {
         String config = getPlatformConfig(IssuesManagePlatform.Jira.toString());
         if (StringUtils.isNotBlank(config)) {
             jiraConfig = JSONObject.parseObject(config, JiraConfig.class);
-            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
             if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getJiraAccount())
                     && StringUtils.isNotBlank(userPlatInfo.getJiraPassword())) {
                 jiraConfig.setAccount(userPlatInfo.getJiraAccount());

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -257,7 +257,7 @@ public TapdConfig getConfig() {
     }
 
     public String getReporter() {
-        UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+        UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
         if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getTapdUserName())) {
             return userPlatInfo.getTapdUserName();
         }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -65,7 +65,7 @@ public ZentaoPlatform(IssuesRequest issuesRequest) {
         this.password = object.getString("password");
         this.url = object.getString("url");
         String type = object.getString("request");
-        this.orgId = issuesRequest.getOrganizationId();
+        this.workspaceId = issuesRequest.getWorkspaceId();
         this.zentaoClient = ZentaoFactory.getInstance(this.url, type);
     }
 
@@ -282,7 +282,7 @@ public ZentaoConfig getUserConfig() {
         String config = getPlatformConfig(IssuesManagePlatform.Zentao.toString());
         if (StringUtils.isNotBlank(config)) {
             zentaoConfig = JSONObject.parseObject(config, ZentaoConfig.class);
-            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.orgId);
+            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(this.workspaceId);
             if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getZentaoUserName())
                     && StringUtils.isNotBlank(userPlatInfo.getZentaoPassword())) {
                 zentaoConfig.setAccount(userPlatInfo.getZentaoUserName());

File: backend/src/main/java/io/metersphere/track/request/testcase/AuthUserIssueRequest.java
Patch:
@@ -8,6 +8,6 @@
 @Getter
 @Setter
 public class AuthUserIssueRequest extends UserDTO.PlatformInfo {
-    private String orgId;
+    private String workspaceId;
     private String platform;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -11,7 +11,7 @@
 public class IssuesUpdateRequest extends IssuesWithBLOBs {
     private String content;
     private String testCaseId;
-    private String organizationId;
+    private String workspaceId;
 
     private List<String> tapdUsers;
     /**

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -264,6 +264,7 @@ public void delete(String apiId) {
         esbApiParamService.deleteByResourceId(apiId);
         MockConfigService mockConfigService = CommonBeanFactory.getBean(MockConfigService.class);
         mockConfigService.deleteMockConfigByApiId(apiId);
+        relationshipEdgeService.delete(apiId); // 删除关系图
         FileUtils.deleteBodyFiles(apiId);
     }
 
@@ -274,6 +275,7 @@ public void deleteBatch(List<String> apiIds) {
         apiDefinitionMapper.deleteByExample(example);
         apiTestCaseService.deleteBatchByDefinitionId(apiIds);
         MockConfigService mockConfigService = CommonBeanFactory.getBean(MockConfigService.class);
+        relationshipEdgeService.delete(apiIds); // 删除关系图
         for (String apiId : apiIds) {
             mockConfigService.deleteMockConfigByApiId(apiId);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/swagger/SwaggerParams.java
Patch:
@@ -7,6 +7,7 @@
 @Setter
 public class SwaggerParams {
     private String name;    //  对应 API 请求参数名
+    private String example;    //  参数值
     private String in;  //  参数类型，可选值为 path,header,query 等
     private String description;
     private boolean required;   //  是否是必填参数

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1349,9 +1349,7 @@ public ApiExportResult export(ApiBatchRequest request, String type) {
             }
         } else { //  导出为 Swagger 格式
             Swagger3Parser swagger3Parser = new Swagger3Parser();
-            System.out.println(apiDefinitionMapper.selectByExampleWithBLOBs(example));
             apiExportResult = swagger3Parser.swagger3Export(apiDefinitionMapper.selectByExampleWithBLOBs(example));
-
         }
 
         return apiExportResult;

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -60,6 +60,9 @@ public ApiModuleService() {
         super(ApiModuleDTO.class);
     }
 
+    public ApiModule get(String id) {
+        return apiModuleMapper.selectByPrimaryKey(id);
+    }
     public List<ApiModuleDTO> getNodeTreeByProjectId(String projectId, String protocol) {
         // 判断当前项目下是否有默认模块，没有添加默认模块
         this.getDefaultNode(projectId,protocol);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -73,7 +73,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
             }
 
             //检查全局前后置脚本
-            if (preProcessor != null) {
+            if (preProcessor != null && StringUtils.isNotEmpty(preProcessor.getScript())) {
                 preProcessor.setType("JSR223Processor");
                 preProcessor.setName("PRE_PROCESSOR_ENV_"+preProcessor.isConnScenario());
                 preProcessor.setClazzName("io.metersphere.api.dto.definition.request.processors.MsJSR223Processor");
@@ -83,7 +83,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
                 el.toHashTree(groupTree, el.getHashTree(), config);
             }
 
-            if (postProcessor != null) {
+            if (postProcessor != null && StringUtils.isNotEmpty(postProcessor.getScript())) {
                 postProcessor.setType("JSR223Processor");
                 postProcessor.setName("POST_PROCESSOR_ENV_"+preProcessor.isConnScenario());
                 postProcessor.setClazzName("io.metersphere.api.dto.definition.request.processors.MsJSR223Processor");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -36,6 +36,9 @@ public class MsJSR223Processor extends MsTestElement {
     @JSONField(ordinal = 21)
     private String scriptLanguage;
 
+    @JSONField(ordinal = 22)
+    private boolean connScenario = true;
+
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter msParameter) {
         ParameterConfig config = (ParameterConfig) msParameter;

File: backend/src/main/java/io/metersphere/api/dto/scenario/environment/EnvironmentConfig.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.dto.scenario.environment;
 
 import com.alibaba.fastjson.JSONObject;
+import io.metersphere.api.dto.definition.request.processors.MsJSR223Processor;
 import io.metersphere.api.dto.definition.request.processors.post.MsJSR223PostProcessor;
 import io.metersphere.api.dto.definition.request.processors.pre.MsJSR223PreProcessor;
 import io.metersphere.api.dto.scenario.DatabaseConfig;
@@ -20,8 +21,8 @@ public class EnvironmentConfig {
     private List<DatabaseConfig> databaseConfigs;
     private TCPConfig tcpConfig;
     private KeyStoreConfig sslConfig;
-    private MsJSR223PostProcessor postProcessor;
-    private MsJSR223PreProcessor preProcessor;
+    private MsJSR223Processor postProcessor;
+    private MsJSR223Processor preProcessor;
     private JSONObject authManager;
 
     public EnvironmentConfig() {

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -20,7 +20,6 @@
 import io.metersphere.controller.request.ResetOrderRequest;
 import io.metersphere.dto.LoadTestDTO;
 import io.metersphere.dto.RelationshipEdgeDTO;
-import io.metersphere.dto.RelationshipGraphData;
 import io.metersphere.dto.TestCaseTestDao;
 import io.metersphere.excel.domain.ExcelResponse;
 import io.metersphere.log.annotation.MsAuditLog;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -757,6 +757,9 @@ private HttpConfig matchConfig(ParameterConfig parameterConfig) {
                         apiDefinition = apiDefinitionService.get(this.getId());
                         if (apiDefinition == null) {
                             ApiTestCaseWithBLOBs apiTestCaseWithBLOBs = apiTestCaseService.get(this.getId());
+                            if (apiTestCaseWithBLOBs == null) {
+                                apiTestCaseWithBLOBs = apiTestCaseService.get(this.getName());
+                            }
                             if (apiTestCaseWithBLOBs != null) {
                                 apiDefinition = apiDefinitionService.get(apiTestCaseWithBLOBs.getApiDefinitionId());
                             } else {

File: backend/src/main/java/io/metersphere/controller/ShareController.java
Patch:
@@ -133,13 +133,13 @@ public List<TestPlanFailureScenarioDTO> getScenarioAllList(@PathVariable String
 
     @GetMapping("/api/definition/report/getReport/{shareId}/{testId}")
     public APIReportResult getApiReport(@PathVariable String shareId, @PathVariable String testId) {
-        shareInfoService.apiReportValidate(shareId, testId);
+//        shareInfoService.apiReportValidate(shareId, testId);
         return apiDefinitionService.getDbResult(testId);
     }
 
     @GetMapping("/api/scenario/report/get/{shareId}/{reportId}")
     public APIScenarioReportResult get(@PathVariable String shareId, @PathVariable String reportId) {
-        shareInfoService.scenarioReportValidate(shareId, reportId);
+//        shareInfoService.scenarioReportValidate(shareId, reportId);
         return apiScenarioReportService.get(reportId);
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -155,9 +155,9 @@ public void runTest(String testId, String reportId, String runMode, String testP
         if (baseInfo != null) {
             platformUrl = baseInfo.getUrl();
         }
-        platformUrl += "/api/jmeter/download?testId=" + testId + "&reportId=" + reportId + "&runMode=" + runMode;
+        platformUrl += "/api/jmeter/download?testId=" + testId + "&reportId=" + reportId + "&runMode=" + runMode + "&testPlanScenarioId";
         if (StringUtils.isNotEmpty(testPlanScenarioId)) {
-            platformUrl += "&testPlanScenarioId=" + testPlanScenarioId;
+            platformUrl += "=" + testPlanScenarioId;
         }
         runRequest.setUrl(platformUrl);
         runRequest.setRunMode(runMode);

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -155,9 +155,9 @@ public void runTest(String testId, String reportId, String runMode, String testP
         if (baseInfo != null) {
             platformUrl = baseInfo.getUrl();
         }
-        platformUrl += "/api/jmeter/download?testId=" + testId + "&reportId=" + reportId + "&testPlanScenarioId" + "&runMode=" + runMode;
+        platformUrl += "/api/jmeter/download?testId=" + testId + "&reportId=" + reportId + "&runMode=" + runMode;
         if (StringUtils.isNotEmpty(testPlanScenarioId)) {
-            platformUrl += "=" + testPlanScenarioId;
+            platformUrl += "&testPlanScenarioId=" + testPlanScenarioId;
         }
         runRequest.setUrl(platformUrl);
         runRequest.setRunMode(runMode);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -608,6 +608,9 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
             }
 
         } else {
+            apiDefinition.setStatus(sameRequest.get(0).getStatus());
+            apiDefinition.setOriginalState(sameRequest.get(0).getOriginalState());
+            apiDefinition.setCaseStatus(sameRequest.get(0).getCaseStatus());
             if (StringUtils.equalsIgnoreCase(apiDefinition.getProtocol(), RequestType.HTTP)) {
                 //如果存在则修改
                 apiDefinition.setId(sameRequest.get(0).getId());

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -131,6 +131,8 @@ private void initOnceOperate() {
         initOnceOperate(testPlanScenarioCaseService::initOrderField, "init.sort.plan.api.scenario");
         initOnceOperate(testPlanLoadCaseService::initOrderField, "init.sort.plan.api.load");
         initOnceOperate(testReviewTestCaseService::initOrderField, "init.sort.review.test.case");
+        initOnceOperate(apiDefinitionService::initDefaultModuleId, "init.default.module.id");
+
     }
 
     /**

File: backend/src/main/java/io/metersphere/commons/constants/FileType.java
Patch:
@@ -3,7 +3,8 @@
 public enum FileType {
     JMX(".jmx"), CSV(".csv"), JSON(".json"), PDF(".pdf"),
     JPG(".jpg"), PNG(".png"), JPEG(".jpeg"), DOC(".doc"),
-    XLSX(".xlsx"), DOCX(".docx"), JAR(".jar"), JS(".js"), TXT(".txt");
+    XLSX(".xlsx"), DOCX(".docx"), JAR(".jar"), JS(".js"), TXT(".txt"),
+    P12("p12"),JKS("jks"),PFX("pfx");
 
     // 保存后缀
     private String suffix;

File: backend/src/main/java/io/metersphere/api/service/NodeKafkaService.java
Patch:
@@ -56,8 +56,8 @@ public String createKafkaProducer(RunModeConfig config) {
                     config.getTestResources().remove(jvmInfoDTO);
                 }
 
-                String cUri = String.format(BASE_URL + "/consumer/create", nodeIp, port);
-                restTemplate.postForEntity(cUri, consumerProps, void.class);
+                //String cUri = String.format(BASE_URL + "/consumer/create", nodeIp, port);
+                //restTemplate.postForEntity(cUri, consumerProps, void.class);
             }
         } catch (Exception e) {
             LogUtil.error(e.getMessage());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1191,9 +1191,10 @@ public void run() {
                             executeQueue.get(key).setHashTree(hashTree);
                         }
                         Future<ApiScenarioReport> future = executorService.submit(new SerialScenarioExecTask(jMeterService, apiScenarioReportMapper, executeQueue.get(key), request));
-                        ApiScenarioReport scenarioReport = future.get();
+                        future.get();
                         // 如果开启失败结束执行，则判断返回结果状态
                         if (request.getConfig().isOnSampleError()) {
+                            ApiScenarioReport scenarioReport = apiScenarioReportMapper.selectByPrimaryKey(key);
                             if (scenarioReport == null || !scenarioReport.getStatus().equals("Success")) {
                                 reportIds.remove(key);
                                 break;

File: backend/src/main/java/io/metersphere/track/dto/TestPlanReportDTO.java
Patch:
@@ -31,6 +31,7 @@ public class TestPlanReportDTO {
     private List<Issues> Issues;
     private List<String> executors;
     private String principal;
+    private String principalName;
     private Long startTime;
     private Long endTime;
     private String projectName;

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -557,7 +557,7 @@ public void changeStatus(IssuesRequest request) {
                 break;
             }
         }
-
+        issues.setStatus(status);
         issues.setCustomFields(JSONObject.toJSONString(fields));
         issuesMapper.updateByPrimaryKeySelective(issues);
     }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerHandler.java
Patch:
@@ -56,5 +56,8 @@ public void handleTeardownTest(List<SampleResult> queue, String runMode, String
         if (!MessageCache.reportCache.containsKey(testId) && resultService.getProcessCache().containsKey(testId)) {
             resultService.getProcessCache().remove(testId);
         }
+        if(StringUtils.isNotEmpty(testId)) {
+            MessageCache.executionQueue.remove(testId);
+        }
     }
 }

File: backend/src/main/java/io/metersphere/api/jmeter/MessageCache.java
Patch:
@@ -20,4 +20,7 @@ public class MessageCache {
 
     public static ConcurrentHashMap<String, ApiDefinitionExecResult> batchTestCases = new ConcurrentHashMap<>();
 
+    // 串行执行队列 KEY=报告ID VALUE=开始时间
+    public static Map<String, Long> executionQueue = new HashMap<>();
+
 }

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -134,7 +134,7 @@ public List<MessageDetail> searchMessageByTypeAndOrganizationId(String type, Str
     public List<MessageDetail> searchMessageByTypeBySend(String type, String projectId) {
         try {
             String orgId = "";
-            if (null == SessionUtils.getUser()) {
+            if (StringUtils.isNotEmpty(projectId)) {
                 Organization organization = extProjectMapper.getOrganizationByProjectId(projectId);
                 orgId = organization.getId();
             } else {

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -152,7 +152,7 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
             }
             if (reportTask != null) {
                 if (!StringUtils.equals(ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), runMode) && !StringUtils.equals(ApiRunMode.JENKINS_SCENARIO_PLAN.name(), runMode) && StringUtils.equals(ReportTriggerMode.API.name(), reportTask.getTriggerMode()) || StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), reportTask.getTriggerMode())) {
-                    sendTask(reportTask, reportUrl, testResult);
+//                    sendTask(reportTask, reportUrl, testResult);
                 }
             }
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -22,6 +22,7 @@
 import io.metersphere.track.request.testcase.ApiCaseRelevanceRequest;
 import io.metersphere.track.request.testplan.FileOperationRequest;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.MediaType;
@@ -96,7 +97,7 @@ public List<ApiScenarioDTO> list(@PathVariable String projectId) {
 
     @PostMapping(value = "/create")
     @MsAuditLog(module = "api_automation", type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = ApiAutomationService.class)
-    @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_READ_CREATE)
+    @RequiresPermissions(value={PermissionConstants.PROJECT_API_SCENARIO_READ_CREATE, PermissionConstants.PROJECT_API_SCENARIO_READ_COPY}, logical = Logical.OR)
     @SendNotice(taskType = NoticeConstants.TaskType.API_AUTOMATION_TASK, event = NoticeConstants.Event.CREATE, mailTemplate = "api/AutomationCreate", subject = "接口自动化通知")
     public ApiScenario create(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "bodyFiles", required = false) List<MultipartFile> bodyFiles,
                               @RequestPart(value = "scenarioFiles", required = false) List<MultipartFile> scenarioFiles) {
@@ -105,7 +106,7 @@ public ApiScenario create(@RequestPart("request") SaveApiScenarioRequest request
 
     @PostMapping(value = "/update")
     @MsAuditLog(module = "api_automation", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#request.id)", title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = ApiAutomationService.class)
-    @RequiresPermissions(PermissionConstants.PROJECT_API_SCENARIO_READ_EDIT)
+    @RequiresPermissions(value={PermissionConstants.PROJECT_API_SCENARIO_READ_EDIT, PermissionConstants.PROJECT_API_SCENARIO_READ_COPY}, logical = Logical.OR)
     @SendNotice(taskType = NoticeConstants.TaskType.API_AUTOMATION_TASK, event = NoticeConstants.Event.UPDATE, mailTemplate = "api/AutomationUpdate", subject = "接口自动化通知")
     public ApiScenario update(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "bodyFiles", required = false) List<MultipartFile> bodyFiles,
                               @RequestPart(value = "scenarioFiles", required = false) List<MultipartFile> scenarioFiles) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1860,6 +1860,7 @@ private ApiScenarioWithBLOBs importCreate(ApiScenarioWithBLOBs request, ApiScena
                 List<ApiMethodUrlDTO> useUrl = this.parseUrl(scenarioWithBLOBs);
                 scenarioWithBLOBs.setUseUrl(JSONArray.toJSONString(useUrl));
                 scenarioWithBLOBs.setOrder(getImportNextOrder(request.getProjectId()));
+                scenarioWithBLOBs.setId(UUID.randomUUID().toString());
                 batchMapper.insert(scenarioWithBLOBs);
                 apiScenarioReferenceIdService.saveByApiScenario(scenarioWithBLOBs);
             }

File: backend/src/main/java/io/metersphere/track/issue/client/ZentaoClient.java
Patch:
@@ -41,7 +41,7 @@ public String login() {
             ResponseEntity<String> response = restTemplate.exchange(loginUrl + sessionId, HttpMethod.POST, requestEntity, String.class);
             getUserResponse = (GetUserResponse) getResultForObject(GetUserResponse.class, response);
         } catch (Exception e) {
-            LogUtil.error("get result for object error," + e.getMessage());
+            LogUtil.error(e);
             MSException.throwException(e.getMessage());
         }
         GetUserResponse.User user = getUserResponse.getUser();

File: backend/src/main/java/io/metersphere/api/dto/definition/MsApiExportResult.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition;
 
+import io.metersphere.api.dto.mockconfig.MockConfigImportDTO;
 import io.metersphere.base.domain.ApiDefinitionWithBLOBs;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 
@@ -17,4 +18,5 @@ public class MsApiExportResult extends ApiExportResult {
     private String version;
     private List<ApiDefinitionWithBLOBs> data;
     private List<ApiTestCaseWithBLOBs> cases;
+    private List<MockConfigImportDTO> mocks;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -348,7 +348,7 @@ private void checkTestPlanExist(TestPlan testPlan) {
             TestPlanExample example = new TestPlanExample();
             example.createCriteria()
                     .andNameEqualTo(testPlan.getName())
-                    .andWorkspaceIdEqualTo(SessionUtils.getCurrentWorkspaceId())
+                    .andProjectIdEqualTo(testPlan.getProjectId())
                     .andIdNotEqualTo(testPlan.getId());
             if (testPlanMapper.selectByExample(example).size() > 0) {
                 MSException.throwException(Translator.get("plan_name_already_exists"));

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1493,7 +1493,7 @@ private boolean editCustomFieldsPriority(TestCaseWithBLOBs dbCase, String priori
 
     public List<TestCase> getTestCaseByProjectId(String projectId) {
         TestCaseExample example = new TestCaseExample();
-        example.createCriteria().andProjectIdEqualTo(projectId);
+        example.createCriteria().andProjectIdEqualTo(projectId).andStatusNotEqualTo("Trash");
         return testCaseMapper.selectByExample(example);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -47,7 +47,7 @@ public static void addEnvironmentVariables(HashTree samplerHashTree, String name
     }
 
     public static void addEnvironmentDNS(HashTree samplerHashTree, String name, EnvironmentConfig config, HttpConfig httpConfig) {
-        if (config.getCommonConfig().isEnableHost() && CollectionUtils.isNotEmpty(config.getCommonConfig().getHosts()) && httpConfig != null) {
+        if (config.getCommonConfig().isEnableHost() && CollectionUtils.isNotEmpty(config.getCommonConfig().getHosts()) && httpConfig != null && httpConfig.getDomain() != null) {
             String domain = httpConfig.getDomain().trim();
             List<Host> hosts = new ArrayList<>();
             config.getCommonConfig().getHosts().forEach(host -> {

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -121,9 +121,9 @@ public void addScenario(ScenarioResult result) {
                 if (StringUtils.isNotEmpty(item.getName()) && item.getName().indexOf(SEPARATOR) != -1) {
                     String array[] = item.getName().split(SEPARATOR);
                     item.setName(array[1] + array[0]);
-                    item.getSubRequestResults().forEach(subItem -> {
-                        subItem.setName(array[0]);
-                    });
+//                    item.getSubRequestResults().forEach(subItem -> {
+//                        subItem.setName(array[0]);
+//                    });
                 } else {
                     this.genScenarioInSubRequestResult(item);
                 }

File: backend/src/main/java/io/metersphere/api/dto/ApiCaseBatchRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto;
 
+import io.metersphere.api.dto.definition.ApiTestCaseRequest;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.OrderRequest;
@@ -15,5 +16,5 @@ public class ApiCaseBatchRequest extends ApiTestCaseWithBLOBs {
     private List<OrderRequest> orders;
     private String projectId;
     private String environmentId;
-    private BaseQueryRequest condition;
+    private ApiTestCaseRequest condition;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -701,7 +701,7 @@ private ApiDefinitionExecResult addResult(String id, String status) {
 
     public void batchRun(ApiCaseBatchRequest request) {
         ServiceUtils.getSelectAllIds(request, request.getCondition(),
-                (query) -> extApiTestCaseMapper.selectIdsByQuery(query));
+                (query) -> extApiTestCaseMapper.selectIdsByQuery((ApiTestCaseRequest)query));
         Map<String, ApiDefinitionExecResult> executeQueue = new HashMap<>();
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         ApiDefinitionExecResultMapper batchMapper = sqlSession.getMapper(ApiDefinitionExecResultMapper.class);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -48,7 +48,7 @@ public interface ExtApiTestCaseMapper {
     List<String> selectNameByIdIn(@Param("ids")List<String> ids);
     String selectNameById(String id);
 
-    List<String> selectIdsByQuery(BaseQueryRequest query);
+    List<String> selectIdsByQuery(@Param("request") ApiTestCaseRequest request);
 
     List<String> selectProjectIds();
 

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -342,7 +342,7 @@ private void batchUpdateApiDefinition(List<ApiDefinitionResult> apiModule) {
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         ApiDefinitionMapper apiDefinitionMapper = sqlSession.getMapper(ApiDefinitionMapper.class);
         apiModule.forEach((value) -> {
-            apiDefinitionMapper.updateByPrimaryKey(value);
+            apiDefinitionMapper.updateByPrimaryKeySelective(value);
         });
         sqlSession.flushStatements();
     }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -287,7 +287,7 @@ public int deleteNode(List<String> nodeIds) {
     private void batchUpdateApiScenario(List<ApiScenarioDTO> apiScenarios) {
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         ApiScenarioMapper apiScenarioMapper = sqlSession.getMapper(ApiScenarioMapper.class);
-        apiScenarios.forEach(apiScenarioMapper::updateByPrimaryKey);
+        apiScenarios.forEach(apiScenarioMapper::updateByPrimaryKeySelective);
         sqlSession.flushStatements();
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -576,7 +576,7 @@ private void batchUpdateTestCase(List<TestCaseDTO> testCases) {
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         TestCaseMapper testCaseMapper = sqlSession.getMapper(TestCaseMapper.class);
         testCases.forEach((value) -> {
-            testCaseMapper.updateByPrimaryKey(value);
+            testCaseMapper.updateByPrimaryKeySelective(value);
         });
         sqlSession.flushStatements();
     }

File: backend/src/main/java/io/metersphere/api/tcp/server/TCPServer.java
Patch:
@@ -34,7 +34,7 @@ public void openSocket() throws Exception {
     }
 
     public boolean  isSocketOpen(){
-        if (this.serverSocket != null && !this.serverSocket.isClosed() &&this.servicer != null) {
+        if (this.serverSocket != null && !this.serverSocket.isClosed()) {
             return true;
         }else {
             return false;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -220,6 +220,7 @@ public void deleteBatch(List<String> apiIds) {
         example.createCriteria().andIdIn(apiIds);
         esbApiParamService.deleteByResourceIdIn(apiIds);
         apiDefinitionMapper.deleteByExample(example);
+        apiTestCaseService.deleteBatchByDefinitionId(apiIds);
     }
 
     public void removeToGc(List<String> apiIds) {
@@ -1051,6 +1052,7 @@ public List<ApiDefinition> selectApiDefinitionBydIds(List<String> ids) {
 
     public void deleteByParams(ApiBatchRequest request) {
         apiDefinitionMapper.deleteByExample(getBatchExample(request));
+        apiTestCaseService.deleteBatchByDefinitionId(request.getIds());
     }
 
     public ApiDefinitionExample getBatchExample(ApiBatchRequest request) {

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -313,6 +313,9 @@ public String run(RunTestPlanRequest request) {
         if (request.getUserId() != null) {
             loadTest.setUserId(request.getUserId());
         }
+        if(StringUtils.isNotEmpty(request.getProjectId())){
+            loadTest.setProjectId(request.getProjectId());
+        }
         if (loadTest == null) {
             MSException.throwException(Translator.get("run_load_test_not_found") + request.getId());
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -305,7 +305,7 @@ private void setScript(HttpConfig httpConfig, HashTree httpSamplerTree, Paramete
             }
             preProcessor.toHashTree(httpSamplerTree, preProcessor.getHashTree(), config);
         }
-        if (postProcessor != null && StringUtils.isNotEmpty(preProcessor.getScript())) {
+        if (postProcessor != null && StringUtils.isNotEmpty(postProcessor.getScript())) {
             if (postProcessor.getEnvironmentId() == null) {
                 if (this.getEnvironmentId() == null) {
                     postProcessor.setEnvironmentId(useEnvironment);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -205,6 +205,7 @@ private String getName(String type, String id, String status, Long time, String
                     // 更新用例最后执行结果
                     caseWithBLOBs.setLastResultId(resourceId);
                     caseWithBLOBs.setStatus(status);
+                    caseWithBLOBs.setUpdateTime(System.currentTimeMillis());
                     apiTestCaseMapper.updateByPrimaryKey(caseWithBLOBs);
                     return caseWithBLOBs.getName();
                 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -57,6 +57,4 @@ public interface ExtApiTestCaseMapper {
     Long getPreOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
 
     Long getLastOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
-
-    ApiTestCase selectSameCase(@Param("request") SaveApiTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -480,9 +480,9 @@ public void run() {
                 ApiDefinitionExecResult report = addResult(request, key, APITestStatus.Running.name(), batchMapper);
                 modeDataDTO.setApiCaseId(report.getId());
                 if (request.getConfig() != null && StringUtils.isNotEmpty(request.getConfig().getResourcePoolId())) {
-                    jMeterService.runTest(modeDataDTO.getTestId(), modeDataDTO.getApiCaseId(), ApiRunMode.API_PLAN.name(), null, request.getConfig());
+                    jMeterService.runTest(report.getId(), modeDataDTO.getApiCaseId(), ApiRunMode.API_PLAN.name(), null, request.getConfig());
                 } else {
-                    jMeterService.runLocal(modeDataDTO.getTestId(), modeDataDTO.getHashTree(),  TriggerMode.BATCH.name() , ApiRunMode.API_PLAN.name());
+                    jMeterService.runLocal(report.getId(), modeDataDTO.getHashTree(),  TriggerMode.BATCH.name() , ApiRunMode.API_PLAN.name());
                 }
             }
             sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaGenerator.java
Patch:
@@ -103,7 +103,9 @@ private static void analyzeProperty(JSONObject concept, String propertyName, Jso
                 }
             }
 
-            if (object.has("enum")) {
+            if(object.has("default")){
+                concept.put(propertyName, object.get("default"));
+            }else if (object.has("enum")) {
                 concept.put(propertyName, analyzeEnumProperty(object));
             } else if (propertyObjType.equals("string")) {
                 // 先设置空值

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -394,7 +394,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                         sampler.setPath(url);
                     }
                     if (StringUtils.isNotEmpty(this.getPort()) && this.getPort().startsWith("${")) {
-                        url = url.replaceAll(this.getPort(), "10990");
+                        url = url.replace(this.getPort(), "10990");
                     }
                     try {
                         URL urlObject = new URL(url);
@@ -465,7 +465,7 @@ private void setSamplerPath(ParameterConfig config, HttpConfig httpConfig, HTTPS
                     url = "http://" + url;
                 }
                 if (StringUtils.isNotEmpty(this.getPort()) && this.getPort().startsWith("${")) {
-                    url = url.replaceAll(this.getPort(), "10990");
+                    url = url.replace(this.getPort(), "10990");
                 }
                 if (url == null) {
                     MSException.throwException("请重新选择环境");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ElementUtil.java
Patch:
@@ -264,7 +264,7 @@ public static <T> List<T> findFromHashTreeByType(MsTestElement hashTree, Class<T
             put("ThreadGroup", "io.metersphere.api.dto.definition.request.MsThreadGroup");
             put("DNSCacheManager", "io.metersphere.api.dto.definition.request.dns.MsDNSCacheManager");
             put("DebugSampler", "io.metersphere.api.dto.definition.request.sampler.MsDebugSampler");
-
+            put("AuthManager", "io.metersphere.api.dto.definition.request.auth.MsAuthManager");
         }
     };
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1556,6 +1556,8 @@ public String addScenarioToPlan(SaveApiPlanRequest request) {
                     testPlanApiScenario.setCreateTime(System.currentTimeMillis());
                     testPlanApiScenario.setUpdateTime(System.currentTimeMillis());
                     testPlanApiScenario.setEnvironment(JSON.toJSONString(newEnvMap));
+                    Long nextScenarioOrder = ServiceUtils.getNextOrder(testPlan.getId(), extTestPlanScenarioCaseMapper::getLastOrder);
+                    testPlanApiScenario.setOrder(nextScenarioOrder);
                     scenarioBatchMapper.insertIfNotExists(testPlanApiScenario);
                 });
             }

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialScenarioExecTask(JMeterService jMeterService, ApiScenarioReportMapp
     @Override
     public T call() {
         try {
-            if (MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+            if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                 MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                 return null;
             }
@@ -52,7 +52,7 @@ public T call() {
                 if (report != null && !report.getStatus().equals(APITestStatus.Running.name())) {
                     break;
                 }
-                if (MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+                if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                     MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                     break;
                 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -421,7 +421,7 @@ public String modeRun(BatchRunDefinitionRequest request) {
                 public void run() {
                     for (TestPlanApiCase testPlanApiCase : executeQueue.keySet()) {
                         try {
-                            if (MessageCache.terminationOrderDeque.contains(executeQueue.get(testPlanApiCase).getId())) {
+                            if (executeQueue.get(testPlanApiCase)!=null && MessageCache.terminationOrderDeque.contains(executeQueue.get(testPlanApiCase).getId())) {
                                 MessageCache.terminationOrderDeque.remove(executeQueue.get(testPlanApiCase).getId());
                                 break;
                             }

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialApiExecTask(JMeterService jMeterService, ApiDefinitionExecResultMap
     @Override
     public T call() {
         try {
-            if (MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+            if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                 MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                 return null;
             }
@@ -53,7 +53,7 @@ public T call() {
                 if (report != null && !report.getStatus().equals(APITestStatus.Running.name())) {
                     break;
                 }
-                if (MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
+                if (runModeDataDTO.getReport()!=null && MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                     MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
                     break;
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -295,7 +295,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, MsParameter
     private void setScript(HttpConfig httpConfig, HashTree httpSamplerTree, ParameterConfig config) {
         MsJSR223PreProcessor preProcessor = httpConfig.getPreProcessor();
         MsJSR223PostProcessor postProcessor = httpConfig.getPostProcessor();
-        if (preProcessor != null) {
+        if (preProcessor != null && StringUtils.isNotEmpty(preProcessor.getScript())) {
             if (preProcessor.getEnvironmentId() == null) {
                 if (this.getEnvironmentId() == null) {
                     preProcessor.setEnvironmentId(useEnvironment);
@@ -305,7 +305,7 @@ private void setScript(HttpConfig httpConfig, HashTree httpSamplerTree, Paramete
             }
             preProcessor.toHashTree(httpSamplerTree, preProcessor.getHashTree(), config);
         }
-        if (postProcessor != null) {
+        if (postProcessor != null && StringUtils.isNotEmpty(preProcessor.getScript())) {
             if (postProcessor.getEnvironmentId() == null) {
                 if (this.getEnvironmentId() == null) {
                     postProcessor.setEnvironmentId(useEnvironment);

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseNoModelDataListener.java
Patch:
@@ -519,7 +519,7 @@ public String getSteps(TestCaseExcelData data) {
         List<String> stepResList = new ArrayList<>();
         ListUtils<String> listUtils = new ListUtils<String>();
         if (data.getStepDesc() != null) {
-            String desc = data.getStepDesc().replaceAll("\\n([1-9]\\.)", "\r\n$1");
+            String desc = data.getStepDesc().replaceAll("\\n([0-9]+\\.)", "\r\n$1");
             String[] stepDesc = desc.split("\r\n");
             StringBuffer stepBuffer = new StringBuffer();
             int lastStepIndex = 1;
@@ -544,7 +544,7 @@ public String getSteps(TestCaseExcelData data) {
         }
 
         if (data.getStepResult() != null) {
-            String stepResult = data.getStepResult().replaceAll("\\n([1-9]\\.)", "\r\n$1");
+            String stepResult = data.getStepResult().replaceAll("\\n([0-9]+\\.)", "\r\n$1");
             String[] stepRes = stepResult.split("\r\n");
             StringBuffer stepBuffer = new StringBuffer();
             int lastStepIndex = 1;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseReviewController.java
Patch:
@@ -73,7 +73,7 @@ public List<TestCaseReviewDTO> recentTestPlans(@PathVariable int count) {
     @PostMapping("/edit")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_REVIEW_READ_EDIT)
     @MsAuditLog(module = "track_test_case_review", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#testCaseReview.id)", title = "#testCaseReview.name", content = "#msClass.getLogDetails(#testCaseReview.id)", msClass = TestCaseReviewService.class)
-    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, event = NoticeConstants.Event.UPDATE, mailTemplate = "track/ReviewEnd", subject = "测试评审通知")
+    @SendNotice(taskType = NoticeConstants.TaskType.REVIEW_TASK, event = NoticeConstants.Event.UPDATE, mailTemplate = "track/ReviewUpdate", subject = "测试评审通知")
     public TestCaseReview editCaseReview(@RequestBody SaveTestCaseReviewRequest testCaseReview) {
         return testCaseReviewService.editCaseReview(testCaseReview);
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -415,6 +415,7 @@ public void editTestReviewStatus(String reviewId) {
                 BeanUtils.copyProperties(testCaseReviewRequest, _testCaseReview);
                 String context = getReviewContext(testCaseReviewRequest, NoticeConstants.Event.UPDATE);
                 Map<String, Object> paramMap = new HashMap<>(getReviewParamMap(testCaseReviewRequest));
+                paramMap.put("operator", SessionUtils.getUser().getName());
                 NoticeModel noticeModel = NoticeModel.builder()
                         .operator(SessionUtils.getUserId())
                         .context(context)

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -71,7 +71,7 @@ public List<TestPlanTestCaseWithBLOBs> listAll() {
     }
 
     public void updateIssues(int issuesCount, String id, String caseId, String issues) {
-        extTestPlanTestCaseMapper.update(issuesCount, id, caseId, issues);
+        extTestPlanTestCaseMapper.update(issuesCount, id, caseId, issues);//to
     }
 
     public List<TestPlanCaseDTO> list(QueryTestPlanCaseRequest request) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -299,7 +299,7 @@ public void reduction(ApiBatchRequest request) {
 
     private void checkNameExist(SaveApiDefinitionRequest request) {
         ApiDefinitionExample example = new ApiDefinitionExample();
-        if (request.getProtocol().equals(RequestType.HTTP)) {
+        if (StringUtils.isNotEmpty(request.getProtocol()) && request.getProtocol().equals(RequestType.HTTP)) {
             ApiDefinitionExample.Criteria criteria = example.createCriteria();
             criteria.andMethodEqualTo(request.getMethod()).andStatusNotEqualTo("Trash")
                     .andProtocolEqualTo(request.getProtocol()).andPathEqualTo(request.getPath())

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -231,7 +231,8 @@ private void checkCaseReviewExist(TestCaseReview testCaseReview) {
             TestCaseReviewExample example = new TestCaseReviewExample();
             TestCaseReviewExample.Criteria criteria = example
                     .createCriteria()
-                    .andNameEqualTo(testCaseReview.getName());
+                    .andNameEqualTo(testCaseReview.getName())
+                    .andProjectIdEqualTo(testCaseReview.getProjectId());
 
             if (StringUtils.isNotBlank(testCaseReview.getId())) {
                 criteria.andIdNotEqualTo(testCaseReview.getId());

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -781,7 +781,7 @@ public TestPlanReport update(TestPlanReport report) {
                     sendMessage(report, testPlan.getProjectId());
                 }
             } catch (Exception e) {
-
+                LogUtil.error(e);
             }
         } else {
         }

File: backend/src/main/java/io/metersphere/controller/PluginController.java
Patch:
@@ -27,8 +27,8 @@ public String create(@RequestPart(value = "file", required = false) MultipartFil
     }
 
     @GetMapping("/list")
-    public List<PluginDTO> list() {
-        return pluginService.list();
+    public List<PluginDTO> list(String name) {
+        return pluginService.list(name);
     }
 
     @GetMapping("/get/{id}")

File: backend/src/main/java/io/metersphere/commons/constants/FileType.java
Patch:
@@ -3,7 +3,7 @@
 public enum FileType {
     JMX(".jmx"), CSV(".csv"), JSON(".json"), PDF(".pdf"),
     JPG(".jpg"), PNG(".png"), JPEG(".jpeg"), DOC(".doc"),
-    XLSX(".xlsx"), DOCX(".docx"), JAR(".jar"), TXT(".txt");
+    XLSX(".xlsx"), DOCX(".docx"), JAR(".jar"), JS(".js"), TXT(".txt");
 
     // 保存后缀
     private String suffix;

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -119,7 +119,7 @@ public String stop(List<TaskRequest> reportIds) {
                 } else if (StringUtils.equals(request.getType(), "PERFORMANCE")) {
                     performanceTestService.stopTest(request.getReportId(), false);
                 }
-                if (StringUtils.isNotEmpty(actuator)) {
+                if (StringUtils.isNotEmpty(actuator) && !StringUtils.equals(actuator, "LOCAL")) {
                     if (poolMap.containsKey(actuator)) {
                         poolMap.get(actuator).add(request.getReportId());
                     } else {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -651,7 +651,7 @@ private void insertOrUpdateImportCase(ApiTestCaseWithBLOBs apiTestCase, ApiTestI
         apiTestCase.setUpdateUserId(SessionUtils.getUserId());
         if (sameCase == null) {
             apiTestCase.setId(UUID.randomUUID().toString());
-            apiTestCase.setNum(getNextNum(apiTestCase.getApiDefinitionId()));
+            apiTestCase.setNum(apiTestCaseService.getNextNum(apiTestCase.getApiDefinitionId()));
             apiTestCase.setCreateTime(System.currentTimeMillis());
             apiTestCase.setUpdateTime(System.currentTimeMillis());
             apiTestCase.setCreateUserId(SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -36,7 +36,7 @@ public T call() {
         try {
             if (MessageCache.terminationOrderDeque.contains(runModeDataDTO.getReport().getId())) {
                 MessageCache.terminationOrderDeque.remove(runModeDataDTO.getReport().getId());
-                return (T) report;
+                return null;
             }
             if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1098,6 +1098,7 @@ public String modeRun(RunScenarioRequest request) {
                     counter.setPoolUrls(request.getConfig().getTestResources());
                 }
                 counter.setReportIds(reportIds);
+                request.getConfig().setAmassReport(serialReportId);
                 MessageCache.cache.put(serialReportId, counter);
             }
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -112,7 +112,7 @@ public String getCondition() {
             value = "\"" + this.value + "\"";
         }
         if (StringUtils.contains(operator, "~")) {
-            value = "\".*" + this.value + ".*\"";
+            value = "\"(\\n|.)*" + this.value + "(\\n|.)*\"";
         }
 
         if (StringUtils.equals(operator, "is empty")) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -126,7 +126,7 @@ private String getCondition() {
         }
 
         if (StringUtils.contains(operator, "~")) {
-            value = "\".*" + this.whileController.getValue() + ".*\"";
+            value = "\"(\\n|.)*" + this.whileController.getValue() + "(\\n|.)*\"";
         }
 
         if (StringUtils.equals(operator, "is empty")) {

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -280,7 +280,7 @@ public Boolean hasSameCase(SaveApiTestCaseRequest request) {
     public ApiTestCase getSameCase(SaveApiTestCaseRequest request) {
         ApiTestCaseExample example = new ApiTestCaseExample();
         ApiTestCaseExample.Criteria criteria = example.createCriteria();
-        criteria.andNameEqualTo(request.getName()).andApiDefinitionIdEqualTo(request.getApiDefinitionId());
+        criteria.andStatusNotEqualTo("Trash").andNameEqualTo(request.getName()).andApiDefinitionIdEqualTo(request.getApiDefinitionId());
         if (StringUtils.isNotBlank(request.getId())) {
             criteria.andIdNotEqualTo(request.getId());
         }

File: backend/src/main/java/io/metersphere/commons/constants/ParamConstants.java
Patch:
@@ -103,6 +103,7 @@ private MAIL(String value) {
             this.value = value;
         }
 
+        @Override
         public String getValue() {
             return this.value;
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -2508,7 +2508,7 @@ public long countExecuteTimesByProjectID(String projectId) {
     public void initOrderField() {
         ServiceUtils.initOrderField(ApiScenarioWithBLOBs.class, ApiScenarioMapper.class,
                 extApiScenarioMapper::selectProjectIds,
-                extApiScenarioMapper::getIdsOrderByCreateTime);
+                extApiScenarioMapper::getIdsOrderByUpdateTime);
     }
 
     /**

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -1025,7 +1025,7 @@ public List<ApiTestCase> getApiCaseByIds(List<String> apiCaseIds) {
     public void initOrderField() {
         ServiceUtils.initOrderField(ApiTestCaseWithBLOBs.class, ApiTestCaseMapper.class,
                 extApiTestCaseMapper::selectProjectIds,
-                extApiTestCaseMapper::getIdsOrderByCreateTime);
+                extApiTestCaseMapper::getIdsOrderByUpdateTime);
     }
 
     /**

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -75,7 +75,7 @@ public interface ExtApiScenarioMapper {
 
     List<String> selectProjectIds();
 
-    List<String> getIdsOrderByCreateTime(@Param("projectId") String projectId);
+    List<String> getIdsOrderByUpdateTime(@Param("projectId") String projectId);
 
     Long getPreOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -55,7 +55,7 @@ public interface ExtApiTestCaseMapper {
 
     List<String> selectProjectIds();
 
-    List<String> getIdsOrderByCreateTime(@Param("projectId") String projectId);
+    List<String> getIdsOrderByUpdateTime(@Param("projectId") String projectId);
 
     Long getPreOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtLoadTestMapper.java
Patch:
@@ -24,7 +24,7 @@ List<FileMetadata> getProjectFiles(@Param("projectId") String projectId, @Param(
 
     List<String> selectProjectIds();
 
-    List<String> getIdsOrderByCreateTime(@Param("projectId") String projectId);
+    List<String> getIdsOrderByUpdateTime(@Param("projectId") String projectId);
 
     Long getPreOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -113,7 +113,7 @@ public interface ExtTestCaseMapper {
 
     List<String> selectProjectIds();
 
-    List<String> getIdsOrderByCreateTime(@Param("projectId") String projectId);
+    List<String> getIdsOrderByUpdateTime(@Param("projectId") String projectId);
 
     Long getLastOrder(@Param("projectId")String projectId, @Param("baseOrder") Long baseOrder);
 

File: backend/src/main/java/io/metersphere/commons/utils/ServiceUtils.java
Patch:
@@ -121,13 +121,13 @@ public static Map<String, String> getProjectNameMap(List<String> ids) {
      * @param clazz
      * @param mapClazz
      * @param selectProjectIdsFunc
-     * @param getIdsOrderByCreateTimeFunc
+     * @param getIdsOrderByUpdateTimeFunc
      * @param <T>
      * @param <M>
      */
     public static <T, M> void initOrderField(Class<T> clazz, Class<M> mapClazz,
                                           Supplier<List<String>> selectProjectIdsFunc,
-                                          Function<String, List<String>> getIdsOrderByCreateTimeFunc) {
+                                          Function<String, List<String>> getIdsOrderByUpdateTimeFunc) {
 
         try {
 
@@ -140,7 +140,7 @@ public static <T, M> void initOrderField(Class<T> clazz, Class<M> mapClazz,
             List<String> projectIds = selectProjectIdsFunc.get();
             for (String projectId : projectIds) {
                 Long order = 0L;
-                List<String> ids = getIdsOrderByCreateTimeFunc.apply(projectId);
+                List<String> ids = getIdsOrderByUpdateTimeFunc.apply(projectId);
                 for (String id : ids) {
                     T item = clazz.newInstance();
                     setId.invoke(item, id);

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -869,7 +869,7 @@ public List<LoadTest> getLoadCaseByIds(List<String> ids) {
     public void initOrderField() {
         ServiceUtils.initOrderField(LoadTestWithBLOBs.class, LoadTestMapper.class,
                 extLoadTestMapper::selectProjectIds,
-                extLoadTestMapper::getIdsOrderByCreateTime);
+                extLoadTestMapper::getIdsOrderByUpdateTime);
     }
 
     /**

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1894,7 +1894,7 @@ public TestCaseWithBLOBs getTestCaseStep(String testCaseId) {
     public void initOrderField() {
         ServiceUtils.initOrderField(TestCaseWithBLOBs.class, TestCaseMapper.class,
                 extTestCaseMapper::selectProjectIds,
-                extTestCaseMapper::getIdsOrderByCreateTime);
+                extTestCaseMapper::getIdsOrderByUpdateTime);
     }
 
     /**

File: backend/src/main/java/io/metersphere/service/utils/CommonUtil.java
Patch:
@@ -53,7 +53,6 @@ public static List<Class<?>> getClasses(File dir, String pk) throws ClassNotFoun
 
     public static List<Class<?>> getSubClass(String fileName) throws Exception {
         List<Class<?>> classes = new LinkedList<>();
-        ResourcePatternResolver resourceLoader = new PathMatchingResourcePatternResolver();
         if (StringUtil.isNotEmpty(fileName) && fileName.endsWith(".jar")) {
             fileName = fileName.substring(0, fileName.length() - 4);
         }

File: backend/src/main/java/io/metersphere/base/domain/Plugin.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class Plugin implements Serializable {
@@ -12,6 +11,8 @@ public class Plugin implements Serializable {
 
     private String pluginId;
 
+    private String scriptId;
+
     private String clazzName;
 
     private String sourcePath;

File: backend/src/main/java/io/metersphere/base/domain/PluginWithBLOBs.java
Patch:
@@ -1,11 +1,10 @@
 package io.metersphere.base.domain;
 
+import java.io.Serializable;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.io.Serializable;
-
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: backend/src/main/java/io/metersphere/service/PluginService.java
Patch:
@@ -64,6 +64,7 @@ private void create(PluginResourceDTO resource, String path, String name) {
             plugin.setUpdateTime(System.currentTimeMillis());
             plugin.setName(item.getName());
             plugin.setPluginId(resource.getPluginId());
+            plugin.setScriptId(item.getId());
             plugin.setSourcePath(path);
             plugin.setFormOption(item.getFormOption());
             plugin.setFormScript(item.getFormScript());
@@ -156,9 +157,9 @@ public List<Plugin> list() {
         return plugins;
     }
 
-    public Plugin get(String pluginId) {
+    public Plugin get(String scriptId) {
         PluginExample example = new PluginExample();
-        example.createCriteria().andPluginIdEqualTo(pluginId);
+        example.createCriteria().andScriptIdEqualTo(scriptId);
         List<PluginWithBLOBs> plugins = pluginMapper.selectByExampleWithBLOBs(example);
         if (CollectionUtils.isNotEmpty(plugins)) {
             return plugins.get(0);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -536,7 +536,7 @@ public ExcelResponse testCaseImport(MultipartFile multipartFile, String projectI
                         testCaseNodeService.createNodes(xmindParser.getNodePaths(), projectId);
                     }
                     if (CollectionUtils.isNotEmpty(xmindParser.getTestCase())) {
-                        Collections.reverse(xmindParser.getTestCase());
+//                        Collections.reverse(xmindParser.getTestCase());
                         this.saveImportData(xmindParser.getTestCase(), projectId);
                         names = xmindParser.getTestCase().stream().map(TestCase::getName).collect(Collectors.toList());
                         ids = xmindParser.getTestCase().stream().map(TestCase::getId).collect(Collectors.toList());
@@ -1572,7 +1572,7 @@ public ExcelResponse testCaseImportIgnoreError(MultipartFile multipartFile, Stri
                         testCaseNodeService.createNodes(nodePathList, projectId);
                     }
                     if (CollectionUtils.isNotEmpty(continueCaseList)) {
-                        Collections.reverse(continueCaseList);
+//                        Collections.reverse(continueCaseList);
                         this.saveImportData(continueCaseList, projectId);
                         names.addAll(continueCaseList.stream().map(TestCase::getName).collect(Collectors.toList()));
                         ids.addAll(continueCaseList.stream().map(TestCase::getId).collect(Collectors.toList()));

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -254,7 +254,7 @@ public TestPlanReport genTestPlanReport(TestPlanReportSaveRequest saveRequest) {
             performanceInfoMap = saveRequest.getPerformanceIdMap();
         }
 
-        TestPlanReportExecuteCatch.addApiTestPlanExecuteInfo(testPlanReportID, apiCaseInfoMap, scenarioInfoMap, performanceInfoMap);
+        TestPlanReportExecuteCatch.addApiTestPlanExecuteInfo(testPlanReportID,saveRequest.getUserId(), apiCaseInfoMap, scenarioInfoMap, performanceInfoMap);
 
         testPlanReport.setPrincipal(testPlan.getPrincipal());
         if (testPlanReport.getIsScenarioExecuting() || testPlanReport.getIsApiCaseExecuting() || testPlanReport.getIsPerformanceExecuting()) {

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesRequest.java
Patch:
@@ -35,4 +35,5 @@ public class IssuesRequest extends BaseQueryRequest {
     private List<String> testCaseIds;
 
     private String requestType;
+    private String status;
 }

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaGenerator.java
Patch:
@@ -109,7 +109,7 @@ private static void analyzeProperty(JSONObject concept, String propertyName, Jso
                 concept.put(propertyName, analyzeEnumProperty(object));
             } else if (propertyObjType.equals("string")) {
                 // 先设置空值
-                concept.put(propertyName, null);
+                concept.put(propertyName, "");
                 if (object.has("format")) {
                     String propertyFormat = object.get("format").getAsString();
                     if (propertyFormat.equals("date-time")) {

File: backend/src/main/java/io/metersphere/controller/request/OrderRequest.java
Patch:
@@ -8,4 +8,6 @@
 public class OrderRequest {
     private String name;
     private String type;
+    // 表前缀
+    private String prefix;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -643,6 +643,7 @@ private void sendNotice(ApiScenario result) {
                 .failedMailTemplate("api/ScenarioResult")
                 .paramMap(paramMap)
                 .event(event)
+                .excludeSelf(true)
                 .build();
 
         String taskType = NoticeConstants.TaskType.API_AUTOMATION_TASK;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -224,7 +224,7 @@ private String getName(String type, String id, String status, Long time, String
     public void saveApiResultByScheduleTask(TestResult result, String testPlanReportId, String type) {
         testPlanLog.info("TestPlanReportId[" + testPlanReportId + "] APICASE OVER.");
         String saveResultType = type;
-        if (StringUtils.equalsAny(saveResultType, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
+        if (StringUtils.equalsAny(saveResultType, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
             saveResultType = ApiRunMode.API_PLAN.name();
         }
         String finalSaveResultType = saveResultType;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
+import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import com.fasterxml.jackson.core.type.TypeReference;

File: backend/src/main/java/io/metersphere/track/controller/TestReviewTestCaseController.java
Patch:
@@ -48,10 +48,10 @@ public void editTestCaseBatch(@RequestBody TestReviewCaseBatchRequest request) {
         testReviewTestCaseService.editTestCaseBatchStatus(request);
     }
 
-    @PostMapping("/minder/edit")
+    @PostMapping("/minder/edit/{reviewId}")
     @MsAuditLog(module = "track_test_case_review", type = OperLogConstants.ASSOCIATE_CASE, content = "#msClass.getLogDetails(#testCases)", msClass = TestReviewTestCaseService.class)
-    public void editTestCaseForMinder(@RequestBody List<TestCaseReviewTestCase> testCases) {
-        testReviewTestCaseService.editTestCaseForMinder(testCases);
+    public void editTestCaseForMinder(@PathVariable("reviewId") String reviewId, @RequestBody List<TestCaseReviewTestCase> testCases) {
+        testReviewTestCaseService.editTestCaseForMinder(reviewId, testCases);
     }
 
     @PostMapping("/list/minder")

File: backend/src/main/java/io/metersphere/track/service/TestReviewTestCaseService.java
Patch:
@@ -229,7 +229,8 @@ private void checkReviewCase(String reviewId) {
         }
     }
 
-    public void editTestCaseForMinder(List<TestCaseReviewTestCase> testCaseReviewTestCases) {
+    public void editTestCaseForMinder(String reviewId, List<TestCaseReviewTestCase> testCaseReviewTestCases) {
+        checkReviewCase(reviewId);
         if (!CollectionUtils.isEmpty(testCaseReviewTestCases)) {
             List<TestCaseWithBLOBs> testCaseList = new ArrayList<>();
             testCaseReviewTestCases.forEach((item) -> {

File: backend/src/main/java/io/metersphere/api/dto/RunModeDataDTO.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.dto;
 
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
-import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 import org.apache.jorphan.collections.HashTree;
@@ -20,7 +19,6 @@ public class RunModeDataDTO {
     //
     private String apiCaseId;
 
-    private ApiScenarioWithBLOBs scenario;
     private Map<String, String> planEnvMap;
     public RunModeDataDTO(){
 

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -16,6 +16,7 @@
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.config.JmeterProperties;
+import io.metersphere.config.KafkaConfig;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.dto.NodeDTO;
 import io.metersphere.i18n.Translator;
@@ -175,7 +176,7 @@ public void runTest(String testId, String reportId, String runMode, String testP
             }
         } else {
             try {
-                SendResult result = kafkaTemplate.send(MsKafkaListener.EXEC_TOPIC, JSON.toJSONString(runRequest)).get();
+                SendResult result = kafkaTemplate.send(KafkaConfig.EXEC_TOPIC, JSON.toJSONString(runRequest)).get();
                 if (result != null) {
                     LogUtil.debug("获取ack 结果：" + result.getRecordMetadata());
                 }

File: backend/src/main/java/io/metersphere/api/dto/RunRequest.java
Patch:
@@ -16,5 +16,7 @@ public class RunRequest {
     private boolean isDebug;
     private String runMode;
     private String jmx;
+    // 集成报告ID
+    private String amassReport;
     private RunModeConfig config;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/RunModeConfig.java
Patch:
@@ -13,6 +13,7 @@ public class RunModeConfig {
     private String reportType;
     private String reportName;
     private String reportId;
+    private String amassReport;
     private boolean onSampleError;
     private String resourcePoolId;
     private BaseSystemConfigDTO baseInfo;

File: backend/src/main/java/io/metersphere/api/jmeter/ReportCounter.java
Patch:
@@ -1,11 +1,13 @@
 package io.metersphere.api.jmeter;
 
+import io.metersphere.api.dto.JvmInfoDTO;
 import lombok.Data;
 
 import java.util.List;
 
 @Data
 public class ReportCounter {
     private int number;
+    private List<JvmInfoDTO> poolUrls;
     private List<String> reportIds;
 }

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialScenarioExecTask(JMeterService jMeterService, ApiScenarioReportMapp
     public T call() {
         try {
             if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig(), runModeDataDTO.getHashTree());
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig());
             } else {
                 jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
             }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -904,7 +904,7 @@ public String scenarioRunModeConfig(SchedulePlanScenarioExecuteRequest planScena
                     returnStr = apiAutomationService.modeRun(request);
                 }
             } else {
-                returnStr = apiAutomationService.excute(request);
+                returnStr = apiAutomationService.execute(request);
             }
         }
         return returnStr;

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialApiExecTask(JMeterService jMeterService, ApiDefinitionExecResultMap
     public T call() {
         try {
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config, runModeDataDTO.getHashTree());
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
             } else {
                 jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -244,7 +244,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
             testPlan.setActualEndTime(null);
         }
 
-        if ((testPlan.getStatus().equals(TestPlanStatus.Finished.name()) || testPlan.getStatus().equals(TestPlanStatus.Completed.name()))
+        if (StringUtils.equalsAnyIgnoreCase(testPlan.getStatus(),TestPlanStatus.Finished.name(),TestPlanStatus.Completed.name())
         && res.getActualEndTime() == null) {
             testPlan.setActualEndTime(System.currentTimeMillis());
         }
@@ -256,7 +256,6 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
             extScheduleMapper.updateNameByResourceID(testPlan.getId(), testPlan.getName());//   同步更新该测试的定时任务的name
             i = testPlanMapper.updateByPrimaryKeyWithBLOBs(testPlan); //  更新
         }
-
         return testPlanMapper.selectByPrimaryKey(testPlan.getId());
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -177,6 +177,7 @@ public void runTest(String testId, String reportId, String runMode,
         } else {
             runRequest.setJmx(new MsTestPlan().getJmx(hashTree));
             kafkaTemplate.send(MsKafkaListener.EXEC_TOPIC, JSON.toJSONString(runRequest));
+            kafkaTemplate.flush();
         }
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -38,7 +38,6 @@
 import io.metersphere.service.SystemParameterService;
 import io.metersphere.track.dto.*;
 import io.metersphere.track.request.testcase.TestPlanApiCaseBatchRequest;
-import io.metersphere.track.service.task.ParallelApiExecTask;
 import io.metersphere.track.service.task.SerialApiExecTask;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.ibatis.session.ExecutorType;
@@ -450,7 +449,6 @@ public void run() {
                 }
                 ApiDefinitionExecResult report = addResult(request, key, APITestStatus.Running.name(), batchMapper);
                 modeDataDTO.setApiCaseId(report.getId());
-                executorService.submit(new ParallelApiExecTask(jMeterService, mapper, modeDataDTO, request.getConfig(), ApiRunMode.API_PLAN.name()));
                 if (request.getConfig() != null && StringUtils.isNotEmpty(request.getConfig().getResourcePoolId())) {
                     jMeterService.runTest(modeDataDTO.getTestId(), modeDataDTO.getApiCaseId(), ApiRunMode.API_PLAN.name(), null, request.getConfig(),  hashTree);
                 } else {

File: backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -16,6 +16,8 @@
 @Service
 public class MsKafkaListener {
     public static final String TOPICS = "ms-api-exec-topic";
+    public final static String EXEC_TOPIC = "ms-automation-exec-topic";
+
     public static final String CONSUME_ID = "ms-api-exec-consume";
 
     @KafkaListener(id = CONSUME_ID, topics = TOPICS, groupId = "${spring.kafka.consumer.group-id}")

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -689,7 +689,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
             RunModeConfig configs = request.getConfig();
             configs.setBaseInfo(CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo());
-            jMeterService.runTest(request.getId(), request.getId(), runMode, null, configs);
+            jMeterService.runTest(request.getId(), request.getId(), runMode, null, configs, hashTree);
         } else {
             jMeterService.runLocal(request.getId(), hashTree, request.getReportId(), runMode);
         }

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialScenarioExecTask(JMeterService jMeterService, ApiScenarioReportMapp
     public T call() {
         try {
             if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig());
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig(), runModeDataDTO.getHashTree());
             } else {
                 jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
             }

File: backend/src/main/java/io/metersphere/track/service/task/ParallelApiExecTask.java
Patch:
@@ -32,7 +32,7 @@ public ParallelApiExecTask(JMeterService jMeterService, ApiDefinitionExecResultM
     public T call() {
         try {
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config, runModeDataDTO.getHashTree());
             } else {
                 jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -34,7 +34,7 @@ public SerialApiExecTask(JMeterService jMeterService, ApiDefinitionExecResultMap
     public T call() {
         try {
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
-                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
+                jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config, runModeDataDTO.getHashTree());
             } else {
                 jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }

File: backend/src/main/java/io/metersphere/consul/ConsulService.java
Patch:
@@ -45,9 +45,6 @@ public void updateCache() {
         resourcePoolRequest.setStatus(ResourceStatusEnum.VALID.name());
         List<TestResourcePoolDTO> testResourcePoolDTOS = testResourcePoolService.listResourcePools(resourcePoolRequest);
         QueryTestPlanRequest request = new QueryTestPlanRequest();
-        request.setFilters(new HashMap<String, List<String>>() {{
-            put("status", Arrays.asList(PerformanceTestStatus.Starting.name(), PerformanceTestStatus.Running.name()));
-        }});
         List<LoadTestDTO> list = performanceTestService.list(request);
         for (LoadTestDTO loadTestDTO : list) {
             String advancedConfiguration = performanceTestService.getAdvancedConfiguration(loadTestDTO.getId());

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -16,7 +16,6 @@
 import io.metersphere.service.SystemParameterService;
 import io.metersphere.track.request.testcase.TrackCount;
 import io.metersphere.track.service.TestPlanApiCaseService;
-import io.metersphere.track.service.TestPlanReportService;
 import io.metersphere.track.service.TestPlanScenarioCaseService;
 import io.metersphere.track.service.TestPlanTestCaseService;
 import org.apache.commons.collections4.CollectionUtils;
@@ -42,8 +41,6 @@ public class TestResultService {
     @Resource
     private ApiDefinitionExecResultService apiDefinitionExecResultService;
     @Resource
-    private TestPlanReportService testPlanReportService;
-    @Resource
     private ApiScenarioReportService apiScenarioReportService;
     @Resource
     private ApiTestCaseService apiTestCaseService;
@@ -158,6 +155,7 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
                 }
             }
         } catch (Exception e) {
+            e.printStackTrace();
             LogUtil.error(e.getMessage(), e);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/task/ParallelScenarioExecTask.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.RunModeDataDTO;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
 import io.metersphere.api.jmeter.JMeterService;
+import io.metersphere.commons.constants.TriggerMode;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
@@ -26,10 +27,10 @@ public ParallelScenarioExecTask(JMeterService jMeterService, RunModeDataDTO runM
     @Override
     public T call() {
         try {
-            if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
+            if (request.getConfig() != null && StringUtils.isNotEmpty(request.getConfig().getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig());
             } else {
-                jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), request.getReportId(), request.getRunMode());
+                jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
             }
             return null;
         } catch (Exception ex) {

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.base.domain.ApiScenarioReport;
 import io.metersphere.base.mapper.ApiScenarioReportMapper;
 import io.metersphere.commons.constants.APITestStatus;
+import io.metersphere.commons.constants.TriggerMode;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
@@ -35,7 +36,7 @@ public T call() {
             if (request.getConfig() != null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getReport().getId(), request.getRunMode(), request.getPlanScenarioId(), request.getConfig());
             } else {
-                jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), request.getReportId(), request.getRunMode());
+                jMeterService.runLocal(runModeDataDTO.getReport().getId(), runModeDataDTO.getHashTree(), TriggerMode.BATCH.name().equals(request.getTriggerMode()) ? TriggerMode.BATCH.name() : request.getReportId(), request.getRunMode());
             }
             // 轮询查看报告状态，最多200次，防止死循环
             int index = 1;

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -38,6 +38,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/sso/callback", "anon");
         filterChainDefinitionMap.put("/license/valid", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download", "anon");
+        filterChainDefinitionMap.put("/api/jmeter/download/files", "anon");
         filterChainDefinitionMap.put("/api/jmeter/download/jar", "anon");
 
         // for swagger

File: backend/src/main/java/io/metersphere/track/service/task/ParallelApiExecTask.java
Patch:
@@ -34,7 +34,7 @@ public T call() {
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
             } else {
-                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), null, runMode);
+                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }
             return null;
         } catch (Exception ex) {

File: backend/src/main/java/io/metersphere/track/service/task/SerialApiExecTask.java
Patch:
@@ -36,7 +36,7 @@ public T call() {
             if (config != null && StringUtils.isNotBlank(config.getResourcePoolId())) {
                 jMeterService.runTest(runModeDataDTO.getTestId(), runModeDataDTO.getApiCaseId(), runMode, null, config);
             } else {
-                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), null, runMode);
+                jMeterService.runLocal(runModeDataDTO.getApiCaseId(), runModeDataDTO.getHashTree(), runModeDataDTO.getReport() != null ? runModeDataDTO.getReport().getTriggerMode() : null, runMode);
             }
             // 轮询查看报告状态，最多200次，防止死循环
             ApiDefinitionExecResult report = null;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -780,7 +780,7 @@ private void setModule(ApiDefinitionWithBLOBs item) {
     }
 
     public ApiDefinitionImport apiTestImport(MultipartFile file, ApiTestImportRequest request) {
-
+        //通过platform，获取对应的导入解析类型。
         ApiImportParser apiImportParser = ApiDefinitionImportParserFactory.getApiImportParser(request.getPlatform());
         ApiDefinitionImport apiImport = null;
         try {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -149,7 +149,7 @@ private void sendNotice(ApiDefinitionExecResult result) {
         }
 
         Map paramMap = new HashMap<>(beanMap);
-        paramMap.put("operator", SessionUtils.getUserId());
+        paramMap.put("operator", SessionUtils.getUser().getName());
         paramMap.put("status", result.getStatus());
         String context = "${operator}执行接口用例" + status + ": ${name}";
         NoticeModel noticeModel = NoticeModel.builder()

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -623,7 +623,7 @@ private void sendNotice(ApiScenario result) {
         }
 
         Map paramMap = new HashMap<>(beanMap);
-        paramMap.put("operator", SessionUtils.getUserId());
+        paramMap.put("operator", SessionUtils.getUser().getName());
         paramMap.put("status", result.getLastResult());
         String context = "${operator}执行接口自动化" + status + ": ${name}";
         NoticeModel noticeModel = NoticeModel.builder()

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -558,6 +558,9 @@ public TestPlanReport updateReport(TestPlanReport testPlanReport,TestPlanReportC
         testPlanLog.info("ReportId[" + testPlanReport.getId() + "] COUNT OVER. COUNT RESULT :" + JSONObject.toJSONString(testPlanExecuteResult));
 
         TestPlanSimpleReportDTO reportDTO = testPlanService.buildPlanReport(executeInfo, testPlanReport.getTestPlanId(),false);
+        //更新执行时间
+        reportDTO.setStartTime(testPlanReport.getStartTime());
+        reportDTO.setEndTime(System.currentTimeMillis());
         testPlanReportContentMapper.updateByPrimaryKeySelective(parseReportDaoToReportContent(reportDTO, reportContent));
 
         String testPlanStatus = this.getTestPlanReportStatus(testPlanReport, reportDTO);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1646,7 +1646,6 @@ public TestPlanSimpleReportDTO buildPlanReport(TestPlanExecuteInfo executeInfo,S
 
             buildApiReport(report, config, executeInfo, planId, saveResponse);
             buildLoadReport(report, config, executeInfo, planId, saveResponse);
-            report.setEndTime(System.currentTimeMillis());
             return report;
         }else {
             return null;

File: backend/src/main/java/io/metersphere/log/vo/StatusReference.java
Patch:
@@ -69,6 +69,8 @@ public class StatusReference {
         statusMap.put("TEST_PLAN_TASK", "测试计划任务");
         statusMap.put("REVIEW_TASK", "评审任务");
         statusMap.put("SWAGGER_TASK", "SWAGGER 任务");
+        statusMap.put("SWAGGER_URL", "SWAGGER 地址");
+        statusMap.put("SCHEDULE_TASK", "定时任务");
         statusMap.put("API_AUTOMATION_TASK", "接口自动化任务");
         statusMap.put("API_DEFINITION_TASK", "接口定义任务");
         statusMap.put("API_HOME_TASK", "接口主页任务");

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -990,7 +990,6 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
 
     @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public String run(String testPlanID, String projectID, String userId, String triggerMode, String apiRunConfig) {
-        triggerMode = ReportTriggerMode.SCHEDULE.name();
         //创建测试报告，然后返回的ID重新赋值为resourceID，作为后续的参数
         TestPlanScheduleReportInfoDTO reportInfoDTO = testPlanReportService.genTestPlanReportBySchedule(projectID, testPlanID, userId, triggerMode);
 
@@ -1647,6 +1646,7 @@ public TestPlanSimpleReportDTO buildPlanReport(TestPlanExecuteInfo executeInfo,S
 
             buildApiReport(report, config, executeInfo, planId, saveResponse);
             buildLoadReport(report, config, executeInfo, planId, saveResponse);
+            report.setEndTime(System.currentTimeMillis());
             return report;
         }else {
             return null;

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.api.dto.scenario;
 
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.serializer.SerializerFeature;
 import io.metersphere.api.dto.scenario.request.BodyFile;
 import io.metersphere.commons.json.JSONSchemaGenerator;
 import io.metersphere.commons.utils.FileUtils;
@@ -89,7 +90,7 @@ private void parseJonBodyMock() {
                 try {
                     JSONObject jsonObject = com.alibaba.fastjson.JSON.parseObject(this.getRaw());
                     jsonMockParse(jsonObject);
-                    this.raw = JSONObject.toJSONString(jsonObject);
+                    this.raw = JSONObject.toJSONString(jsonObject, SerializerFeature.WriteMapNullValue);
                 } catch (Exception e) {}
             }
         }

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -134,7 +134,7 @@ public void delete(DeleteTestPlanRequest request) {
             record.setJmxContent(new String(bytes, StandardCharsets.UTF_8));
             extLoadTestReportMapper.updateJmxContentIfAbsent(record);
         });
-        //delete schedule
+        //delete scheduleFunctionalCases
         scheduleService.deleteByResourceId(testId, ScheduleGroup.PERFORMANCE_TEST.name());
 
         // delete load_test

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -34,4 +34,6 @@ public interface ExtTestPlanScenarioCaseMapper {
     List<TestPlanFailureScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids, @Param("planId") String planId, @Param("status") String status);
 
     List<Integer> getUnderwaySteps(@Param("ids") List<String> underwayIds);
+
+    String getProjectIdById(String testPlanScenarioId);
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -990,6 +990,7 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
 
     @Transactional(propagation = Propagation.NOT_SUPPORTED)
     public String run(String testPlanID, String projectID, String userId, String triggerMode, String apiRunConfig) {
+        triggerMode = ReportTriggerMode.SCHEDULE.name();
         //创建测试报告，然后返回的ID重新赋值为resourceID，作为后续的参数
         TestPlanScheduleReportInfoDTO reportInfoDTO = testPlanReportService.genTestPlanReportBySchedule(projectID, testPlanID, userId, triggerMode);
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -94,7 +94,7 @@ public ApiScenarioReport complete(TestResult result, String runMode) {
     public APIScenarioReportResult get(String reportId) {
         APIScenarioReportResult reportResult = extApiScenarioReportMapper.get(reportId);
         ApiScenarioReportDetail detail = apiScenarioReportDetailMapper.selectByPrimaryKey(reportId);
-        if (detail != null) {
+        if (detail != null && reportResult != null) {
             reportResult.setContent(new String(detail.getContent(), StandardCharsets.UTF_8));
         }
         return reportResult;

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -78,7 +78,7 @@ public void buildProjectInfo(List<? extends ApiScenarioDTO> apiTestCases) {
 
         apiTestCases.forEach(item -> {
             Project project = projectMap.get(item.getProjectId());
-            if (project.getScenarioCustomNum() != null && project.getScenarioCustomNum()) {
+            if (project != null && project.getScenarioCustomNum() != null && project.getScenarioCustomNum()) {
                 item.setCustomNum(item.getCustomNum());
             } else {
                 item.setCustomNum(item.getNum().toString());

File: backend/src/main/java/io/metersphere/performance/service/MetricQueryService.java
Patch:
@@ -266,7 +266,7 @@ private Integer getGranularity(long start, long end) {
                     .findFirst();
             if (dataOptional.isPresent()) {
                 GranularityData.Data data = dataOptional.get();
-                granularity = data.getGranularity();
+                granularity = data.getGranularity() / 1000;
             }
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/log/vo/api/DefinitionReference.java
Patch:
@@ -22,6 +22,7 @@ public class DefinitionReference {
         definitionColumns.put("request", "请求参数");
         definitionColumns.put("response", "返回参数");
         definitionColumns.put("description", "描述");
+        definitionColumns.put("followPeople", "关注人");
         // 需要深度对比的字段，可以支持多个req1,req2
         definitionColumns.put("ms-dff-col", "request,response,tags");
 
@@ -33,6 +34,8 @@ public class DefinitionReference {
         caseColumns.put("tags", "标签");
         caseColumns.put("description", "描述");
         caseColumns.put("request", "请求参数");
+        caseColumns.put("followPeople", "关注人");
+
         // 深度对比字段
         caseColumns.put("ms-dff-col", "request,tags");
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -1034,7 +1034,7 @@ public List<ApiDefinitionResult> listRelevanceReview(ApiDefinitionRequest reques
     public void calculateResult(List<ApiDefinitionResult> resList, String projectId) {
         if (!resList.isEmpty()) {
             List<String> ids = resList.stream().map(ApiDefinitionResult::getId).collect(Collectors.toList());
-            List<ApiComputeResult> results = extApiDefinitionMapper.selectByIds(ids, projectId);
+            List<ApiComputeResult> results = extApiDefinitionMapper.selectByIdsAndStatusIsNotTrash(ids, projectId);
             Map<String, ApiComputeResult> resultMap = results.stream().collect(Collectors.toMap(ApiComputeResult::getApiDefinitionId, Function.identity()));
             for (ApiDefinitionResult res : resList) {
                 ApiComputeResult compRes = resultMap.get(res.getId());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -25,6 +25,8 @@ public interface ExtApiDefinitionMapper {
 
     List<ApiComputeResult> selectByIds(@Param("ids") List<String> ids, @Param("projectId") String projectId);
 
+    List<ApiComputeResult> selectByIdsAndStatusIsNotTrash(@Param("ids") List<String> ids, @Param("projectId") String projectId);
+
 //    int removeToGc(@Param("ids") List<String> ids);
 
     int removeToGcByExample(ApiDefinitionExampleWithOperation example);

File: backend/src/main/java/io/metersphere/xmind/pojo/TestCaseXmindData.java
Patch:
@@ -27,6 +27,7 @@ public class TestCaseXmindData {
     public TestCaseXmindData(String moduleId, String moduleName) {
         this.moduleId = moduleId;
         this.moduleName = moduleName;
+        this.testCaseList = new ArrayList<>();
     }
 
     public void setItem(LinkedList<TestCaseNode> modulePathDataList, List<TestCaseDTO> dataList) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1037,6 +1037,7 @@ public String run(String testPlanID, String projectID, String userId, String tri
                     TestPlanLoadCase loadCase = new TestPlanLoadCaseDTO();
                     loadCase.setId(id);
                     loadCase.setLoadReportId(reportId);
+                    loadCase.setStatus("run");
                     testPlanLoadCaseService.update(loadCase);
                 }
             } catch (Exception e) {

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -16,7 +16,6 @@ public class ApiScenarioDTO extends ApiScenarioWithBLOBs {
     private String principalName;
     private List<String> tagNames;
     private String deleteUser;
-    private Long deleteTime;
 
     /**
      * 场景跨项目ID

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanFailureApiDTO.java
Patch:
@@ -12,7 +12,5 @@ public class TestPlanFailureApiDTO extends TestPlanApiCaseDTO {
 
     private String projectName;
 
-    private String caseId;
-
     private String response;
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanCaseDTO.java
Patch:
@@ -11,7 +11,6 @@
 public class TestPlanCaseDTO extends TestCaseWithBLOBs {
     private String executor;
     private String executorName;
-    private String status;
     private String results;
     private String planId;
     private String planName;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -7,6 +7,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import com.google.gson.Gson;
 import io.metersphere.api.cache.TestPlanExecuteInfo;
 import io.metersphere.api.cache.TestPlanReportExecuteCatch;
 import io.metersphere.api.dto.APIReportResult;
@@ -1693,7 +1694,7 @@ public void render(TestPlanSimpleReportDTO report, HttpServletResponse response)
             String line = null;
             while (null != (line = bufferedReader.readLine())) {
                 if (line.contains("\"#report\"")) {
-                    line = line.replace("\"#report\"", JSONObject.toJSONString(report));
+                    line = line.replace("\"#report\"", new Gson().toJson(report));
                 }
                 line += "\n";
                 byte[] lineBytes = line.getBytes(StandardCharsets.UTF_8);

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -51,9 +51,10 @@ public static void calculatePlanReport(List<PlanReportCaseDTO> planReportCaseDTO
                                                    Map<String, TestCaseReportStatusResultDTO> statusResultMap,
                                                    TestPlanSimpleReportDTO report, String successStatus) {
         planReportCaseDTOS.forEach(item -> {
-            report.setCaseCount(report.getCaseCount() == null ? 0 : report.getCaseCount() + 1);
+            report.setCaseCount((report.getCaseCount() == null ? 0 : report.getCaseCount()) + 1);
             String status = item.getStatus();
-            if (StringUtils.isNotBlank(status) && !StringUtils.equals(TestPlanTestCaseStatus.Underway.name(), status)) {
+            if (StringUtils.isNotBlank(status)
+                    && !StringUtils.equalsAny(status, TestPlanTestCaseStatus.Underway.name(), TestPlanTestCaseStatus.Prepare.name())) {
                 report.setExecuteCount(report.getExecuteCount() + 1);
                 if (StringUtils.equals(successStatus, status)) {
                     report.setPassCount(report.getPassCount() + 1);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1732,12 +1732,12 @@ public TestPlanSimpleReportDTO getReport(String planId) {
         testPlanScenarioCaseService.calculatePlanReport(planId, report);
         testPlanLoadCaseService.calculatePlanReport(planId, report);
         if(report.getExecuteCount() != 0 && report.getCaseCount() != null){
-            report.setExecuteRate(report.getExecuteCount() * 0.1 / report.getCaseCount());
+            report.setExecuteRate(report.getExecuteCount() * 0.1 * 10 / report.getCaseCount());
         }else {
             report.setExecuteRate(0.0);
         }
         if(report.getPassCount() != 0 && report.getCaseCount() != null){
-            report.setPassRate(report.getPassCount() * 0.1 / report.getCaseCount());
+            report.setPassRate(report.getPassCount() * 0.1 * 10/ report.getExecuteCount());
         }else {
             report.setPassRate(0.0);
         }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.track.dto.PlanReportCaseDTO;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface ExtTestPlanApiCaseMapper {
@@ -33,5 +34,7 @@ public interface ExtTestPlanApiCaseMapper {
     List<PlanReportCaseDTO> selectForPlanReport(String planId);
 
     List<TestPlanFailureApiDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);
+
+    List<TestPlanFailureApiDTO> getFailureListByIds(@Param("caseIdList") Collection<String> caseIdList, @Param("planId") String planId, @Param("status") String status);
 }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.track.request.testplan.LoadCaseRequest;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface ExtTestPlanLoadCaseMapper {
@@ -25,4 +26,5 @@ public interface ExtTestPlanLoadCaseMapper {
     List<PlanReportCaseDTO> selectForPlanReport(String planId);
 
     List<TestPlanLoadCaseDTO> getCases(@Param("planId") String planId, @Param("status") String status);
+    List<TestPlanLoadCaseDTO> getCasesByIds(@Param("ids") Collection<String> ids, @Param("planId") String planId, @Param("status") String status);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.track.dto.PlanReportCaseDTO;
 import org.apache.ibatis.annotations.Param;
 
+import java.util.Collection;
 import java.util.List;
 
 public interface ExtTestPlanScenarioCaseMapper {
@@ -30,5 +31,7 @@ public interface ExtTestPlanScenarioCaseMapper {
 
     List<TestPlanFailureScenarioDTO> getFailureList(@Param("planId") String planId, @Param("status") String status);
 
+    List<TestPlanFailureScenarioDTO> getFailureListByIds(@Param("ids") Collection<String> ids, @Param("planId") String planId, @Param("status") String status);
+
     List<Integer> getUnderwaySteps(@Param("ids") List<String> underwayIds);
 }

File: backend/src/main/java/io/metersphere/commons/utils/TestPlanUtils.java
Patch:
@@ -58,6 +58,8 @@ public static void calculatePlanReport(List<PlanReportCaseDTO> planReportCaseDTO
                 if (StringUtils.equals(successStatus, status)) {
                     report.setPassCount(report.getPassCount() + 1);
                 }
+            }else {
+                System.out.println(status);
             }
             TestPlanUtils.getStatusResultMap(statusResultMap, status);
         });

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTaskMapper.java
Patch:
@@ -17,4 +17,7 @@ public interface ExtTaskMapper {
     List<TaskCenterDTO> getCases(@Param("id") String id);
 
     List<TaskCenterDTO> getScenario(@Param("id") String id);
+
+    int checkActuator (@Param("actuator") String actuator);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/api/AutomationReference.java
Patch:
@@ -21,6 +21,8 @@ public class AutomationReference {
         automationColumns.put("tags", "标签");
         automationColumns.put("scenarioDefinition", "场景步骤");
         automationColumns.put("description", "描述");
+        automationColumns.put("followPeople", "关注人");
+
         // 需要深度对比的字段，可以支持多个req1,req2
         automationColumns.put("ms-dff-col", "scenarioDefinition,tags");
     }

File: backend/src/main/java/io/metersphere/log/vo/performance/PerformanceReference.java
Patch:
@@ -13,6 +13,7 @@ public class PerformanceReference {
         performanceColumns.put("name", "用例名称");
         performanceColumns.put("status", "状态");
         performanceColumns.put("loadConfiguration", "压力配置");
+        performanceColumns.put("followPeople", "关注人");
         performanceColumns.put("advancedConfiguration", "高级配置");
         performanceColumns.put("description", "描述");
         performanceColumns.put("ms-dff-col", "loadConfiguration,advancedConfiguration");

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -309,7 +309,7 @@ private ApiTestCase updateTest(SaveApiTestCaseRequest request) {
             test.setTags(request.getTags());
         }
         apiTestCaseMapper.updateByPrimaryKeySelective(test);
-        return test;
+        return apiTestCaseMapper.selectByPrimaryKey(request.getId());
     }
 
     private ApiTestCase createTest(SaveApiTestCaseRequest request, List<MultipartFile> bodyFiles) {

File: backend/src/main/java/io/metersphere/notice/sender/AbstractNoticeSender.java
Patch:
@@ -133,6 +133,7 @@ private List<Receiver> getRealUserIds(List<String> userIds, NoticeModel noticeMo
                 case NoticeConstants.RelatedUser.CREATOR:
                     Object creator = paramMap.get("creator");
                     Object createUser = paramMap.get("createUser");
+                    Object createUserId = paramMap.get("createUserId");
                     Object userId1 = paramMap.get("userId");
 
                     if (userId1 != null) {
@@ -141,6 +142,8 @@ private List<Receiver> getRealUserIds(List<String> userIds, NoticeModel noticeMo
                         toUsers.add(new Receiver(creator.toString(), NotificationConstants.Type.SYSTEM_NOTICE.name()));
                     } else if (createUser != null) {
                         toUsers.add(new Receiver(createUser.toString(), NotificationConstants.Type.SYSTEM_NOTICE.name()));
+                    } else if (createUserId != null) {
+                        toUsers.add(new Receiver(createUserId.toString(), NotificationConstants.Type.SYSTEM_NOTICE.name()));
                     }
                     break;
                 case NoticeConstants.RelatedUser.MAINTAINER:

File: backend/src/main/java/io/metersphere/notice/sender/impl/InSiteNoticeSender.java
Patch:
@@ -27,8 +27,8 @@ public void sendAnnouncement(MessageDetail messageDetail, NoticeModel noticeMode
             return;
         }
 
+        LogUtil.info("发送站内通知: {}", messageDetail.getUserIds());
         receivers.forEach(receiver -> {
-            LogUtil.debug("发送站内通知: {}, 内容: {}", receiver, context);
 
             Map<String, Object> paramMap = noticeModel.getParamMap();
             Notification notification = new Notification();

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -35,7 +35,7 @@ private void updateLoadCaseStatus(LoadTestReport loadTestReport) {
 
     @Override
     public void execute(LoadTestReport loadTestReport) {
-        if (StringUtils.equals(ReportTriggerMode.CASE.name(), loadTestReport.getTriggerMode())
+        if (StringUtils.equals(ReportTriggerMode.MANUAL.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.TEST_PLAN_SCHEDULE.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.TEST_PLAN_API.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -271,8 +271,9 @@ public List<JmxInfoDTO> batchGenPerformanceTestJmx(@RequestBody ApiScenarioBatch
     }
 
     @PostMapping("/batchCopy")
-    public void batchCopy(@RequestBody ApiScenarioBatchRequest request) {
-        apiAutomationService.batchCopy(request);
+    public BatchOperaResponse batchCopy(@RequestBody ApiScenarioBatchRequest request) {
+        BatchOperaResponse response = apiAutomationService.batchCopy(request);
+        return response;
     }
 
 

File: backend/src/main/java/io/metersphere/api/service/MockConfigService.java
Patch:
@@ -1168,11 +1168,9 @@ private boolean checkMessageIsXml(String message) {
         try {
             DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
             DocumentBuilder builder = documentBuilderFactory.newDocumentBuilder();
-//            builder.parse(message);
             builder.parse(new InputSource(new ByteArrayInputStream(message.getBytes("utf-8"))));
             isXml = true;
         } catch (Exception e) {
-            e.printStackTrace();
         }
         return isXml;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -269,9 +269,6 @@ public TestPlanReportDTO getMetric(String reportId) {
         TestPlanReportDTO returnDTO = new TestPlanReportDTO();
         TestPlanReport report = testPlanReportMapper.selectByPrimaryKey(reportId);
         if (report != null) {
-//            if (StringUtils.equalsIgnoreCase(report.getStatus(), TestPlanApiExecuteStatus.RUNNING.name())) {
-//                report = this.updateExecuteApis(reportId);
-//            }
             TestPlanReportDataExample example = new TestPlanReportDataExample();
             example.createCriteria().andTestPlanReportIdEqualTo(reportId);
             List<TestPlanReportDataWithBLOBs> reportDataList = testPlanReportDataMapper.selectByExampleWithBLOBs(example);

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -76,7 +76,7 @@ public class TestCaseExcelDataCn extends TestCaseExcelData {
     @ExcelProperty("用例状态")
     private String status;
 
-    @ExcelProperty(value = "责任人")
+    @ExcelProperty(value = "责任人(ID)")
     private String maintainer;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataTw.java
Patch:
@@ -81,7 +81,7 @@ public class TestCaseExcelDataTw extends TestCaseExcelData {
     @Pattern(regexp = "(^P0$)|(^P1$)|(^P2$)|(^P3$)", message = "{test_case_priority_validate}")
     private String priority;
 
-    @ExcelProperty("維護人")
+    @ExcelProperty("維護人(ID)")
     private String maintainer;
 
     @Override

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataUs.java
Patch:
@@ -81,7 +81,7 @@ public class TestCaseExcelDataUs extends TestCaseExcelData {
     @Pattern(regexp = "(^P0$)|(^P1$)|(^P2$)|(^P3$)", message = "{test_case_priority_validate}")
     private String priority;
 
-    @ExcelProperty("Maintainer")
+    @ExcelProperty("Maintainer(ID)")
     private String maintainer;
 
     @Override

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -28,6 +28,7 @@ public class TestCaseReference {
         testCaseColumns.put("stepDescription", "步骤描述");
         testCaseColumns.put("expectedResult", "预期结果");
         testCaseColumns.put("demandName", "关联需求");
+        testCaseColumns.put("followPeople", "关注人");
         testCaseColumns.put("comment", "评论");
         testCaseColumns.put("ms-dff-col", "tags,steps");
 

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -323,6 +323,7 @@ private ApiTestCase createTest(SaveApiTestCaseRequest request) {
         final ApiTestCaseWithBLOBs test = new ApiTestCaseWithBLOBs();
         test.setId(request.getId());
         test.setName(request.getName());
+        test.setStatus("");
         test.setApiDefinitionId(request.getApiDefinitionId());
         test.setCreateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
         test.setUpdateUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
@@ -883,7 +884,6 @@ public List<String> reduction(ApiTestBatchRequest request) {
             cannotReductionApiCaseList.stream().map(ApiTestCaseDTO::getId).collect(Collectors.toList());
             List<String> deleteIds = ids.stream().filter(id -> !cannotReductionCaseId.contains(id)).collect(Collectors.toList());
             if (CollectionUtils.isNotEmpty(deleteIds)) {
-                extApiTestCaseMapper.checkOriginalStatusByIds(deleteIds);
                 extApiTestCaseMapper.reduction(deleteIds);
             }
         }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -43,7 +43,6 @@ public interface ExtApiTestCaseMapper {
     int deleteToGc(ApiTestCaseRequest request);
 
     int reduction(@Param("ids") List<String> ids);
-    void checkOriginalStatusByIds(@Param("ids") List<String> ids);
 
     List<ApiTestCaseDTO> getCannotReductionApiCaseList(@Param("ids") List<String> ids);
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -206,6 +206,8 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
                         }
                         if (StringUtils.equals(type, ApiRunMode.JENKINS_API_PLAN.name())) {
                             saveResult.setTriggerMode(TriggerMode.API.name());
+                        } else if (StringUtils.equals(type, ApiRunMode.MANUAL_PLAN.name())) {
+                            saveResult.setTriggerMode(TriggerMode.MANUAL.name());
                         } else {
                             saveResult.setTriggerMode(TriggerMode.SCHEDULE.name());
                         }

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -89,9 +89,9 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
                 reportTask.setExecutionTime(DateUtils.getTimeString(apiTestCaseWithBLOBs.getCreateTime()));
                 reportTask.setExecutionEnvironment(name);
                 //测试计划用例，定时，jenkins
-            } else if (StringUtils.equalsAny(runMode, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
+            } else if (StringUtils.equalsAny(runMode, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
                 //测试计划定时任务-接口执行逻辑的话，需要同步测试计划的报告数据
-                if (StringUtils.equalsAny(runMode, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
+                if (StringUtils.equalsAny(runMode, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name(), ApiRunMode.MANUAL_PLAN.name())) {
                     apiDefinitionExecResultService.saveApiResultByScheduleTask(testResult, debugReportId, runMode);
                 } else {
                     apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.API_PLAN.name(), TriggerMode.MANUAL.name());

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -2,5 +2,5 @@
 
 public enum ApiRunMode {
     RUN, DEBUG, DEFINITION, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS_SCENARIO_PLAN, JENKINS_PERFORMANCE_TEST, JENKINS,
-    SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST
+    SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST, MANUAL_PLAN
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanScheduleReportInfoDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.track.dto;
 
+import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.TestPlanReport;
 import lombok.Getter;
 import lombok.Setter;
@@ -16,6 +17,6 @@
 public class TestPlanScheduleReportInfoDTO {
     private TestPlanReport testPlanReport;
     private Map<String, String> planScenarioIdMap = new LinkedHashMap<>();
-    private Map<String, String> apiTestCaseIdMap = new LinkedHashMap<>();
+    private Map<ApiTestCaseWithBLOBs, String> apiTestCaseDataMap = new LinkedHashMap<>();
     private Map<String, String> performanceIdMap = new LinkedHashMap<>();
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -227,7 +227,7 @@ public void saveApiResultByScheduleTask(TestResult result, String testPlanReport
                             apiCase.setStatus(status);
                             apiCase.setUpdateTime(System.currentTimeMillis());
                             testPlanApiCaseService.updateByPrimaryKeySelective(apiCase);
-                        } else if (StringUtils.equals(type, ApiRunMode.JENKINS_SCENARIO_PLAN.name())) {
+                        } else if (StringUtils.equals(type, ApiRunMode.JENKINS_API_PLAN.name())) {
                             TestPlanApiCase apiCase = testPlanApiCaseService.getById(item.getName());
                             userID = Objects.requireNonNull(SessionUtils.getUser()).getId();
                             apiCase.setStatus(status);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -71,5 +71,5 @@ public interface ExtApiScenarioMapper {
 
     List<String> selectIdsByExecuteTimeIsNull();
 
-    long countExeciteTimesByProjectID(String projectId);
+    Long countExecuteTimesByProjectID(String projectId);
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -333,6 +333,7 @@ private void convertTCPSampler(MsTCPSampler msTCPSampler, TCPSampler tcpSampler)
         msTCPSampler.setRequest(tcpSampler.getRequestData());
         msTCPSampler.setUsername(tcpSampler.getProperty(ConfigTestElement.USERNAME).getStringValue());
         msTCPSampler.setPassword(tcpSampler.getProperty(ConfigTestElement.PASSWORD).getStringValue());
+        msTCPSampler.setClassname(tcpSampler.getClassname());
     }
 
     private void convertDubboSample(MsDubboSampler elementNode, DubboSample sampler) {

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -342,7 +342,7 @@ private ApiTestEnvironmentWithBLOBs genHttpApiTestEnvironmentByUrl(Project proje
         tcpConfigObj.put("closeConnection", false);
         if(project.getMockTcpPort() != null && project.getMockTcpPort().intValue() != 0){
             tcpConfigObj.put("server", tcpSocket);
-            tcpConfigObj.put("port", 12138);
+            tcpConfigObj.put("port", project.getMockTcpPort().intValue());
         }
 
         JSONObject object = new JSONObject();

File: backend/src/main/java/io/metersphere/api/tcp/TCPPool.java
Patch:
@@ -63,7 +63,7 @@ public static String getTcpStatus() {
                     stringBuffer.append("Server is null;");
                 }else {
                     stringBuffer.append("Port is "+port + ";");
-                    stringBuffer.append("Server is open: "+ tcpServer.isSocketOpen());
+                    stringBuffer.append("Server is open: "+ tcpServer.isSocketOpen()+";");
                 }
             }
             return stringBuffer.toString();

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -30,4 +30,6 @@ public interface ExtProjectMapper {
     Map<String, Project> queryNameByIds(@Param("ids") List<String> ids);
 
     Organization getOrganizationByProjectId(@Param("projectId")String projectId);
+
+    List<Integer> selectTcpPorts();
 }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -252,7 +252,7 @@ public ApiDataCountDTO testSceneInfoCount(@PathVariable String projectId) {
         apiCountResult.setThisWeekAddedCount(dateCountByCreateInThisWeek);
         long executedInThisWeekCountNumber = apiScenarioReportService.countByProjectIdAndCreateInThisWeek(projectId);
         apiCountResult.setThisWeekExecutedCount(executedInThisWeekCountNumber);
-        long executedCountNumber = apiScenarioReportService.countByProjectID(projectId);
+        long executedCountNumber = apiAutomationService.countExecuteTimesByProjectID(projectId);
         apiCountResult.setExecutedCount(executedCountNumber);
 
         //未执行、未通过、已通过

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -168,7 +168,7 @@ private String getName(String type, String id, String status, Long time) {
      * @param result
      * @param type
      */
-    public void saveApiResultByScheduleTask(TestResult result, String testPlanReportId, String type, String trigeMode) {
+    public void saveApiResultByScheduleTask(TestResult result, String testPlanReportId, String type) {
         testPlanLog.info("TestPlanReportId[" + testPlanReportId + "] APICASE OVER.");
         String saveResultType = type;
         if (StringUtils.equalsAny(saveResultType, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
 import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.base.domain.ApiScenarioReport;
+import io.metersphere.dto.ApiReportCountDTO;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -26,4 +27,6 @@ public interface ExtApiScenarioReportMapper {
     ApiScenarioReport selectPreviousReportByScenarioId(@Param("scenarioId") String scenarioId, @Param("nowId") String nowId);
 
     List<String> idList(@Param("request") QueryAPIReportRequest request);
+
+    List<ApiReportCountDTO> countByApiScenarioId();
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -55,5 +55,7 @@ public class ApiScenario implements Serializable {
 
     private String deleteUserId;
 
+    private Integer executeTimes;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -165,7 +165,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         this.addCounter(tree, variables);
         this.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(this.headers)) {
-            setHeader(tree, this.headers);
+            //setHeader(tree, this.headers);
+            config.setHeaders(this.headers);
         }
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {

File: backend/src/main/java/io/metersphere/track/service/TestReviewTestCaseService.java
Patch:
@@ -62,7 +62,7 @@ public List<TestReviewCaseDTO> list(QueryCaseReviewRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
         List<TestReviewCaseDTO> list = extTestReviewCaseMapper.list(request);
         QueryMemberRequest queryMemberRequest = new QueryMemberRequest();
-        queryMemberRequest.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
+        queryMemberRequest.setWorkspaceId(SessionUtils.getCurrentProjectId());
         Map<String, String> userMap = userService.getMemberList(queryMemberRequest)
                 .stream().collect(Collectors.toMap(User::getId, User::getName));
         list.forEach(item -> {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1001,6 +1001,8 @@ public String run(String testPlanID, String projectID, String userId, String tri
             performanceRequest.setTestPlanLoadId(caseID);
             if (StringUtils.equals(ReportTriggerMode.API.name(), triggerMode)) {
                 performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_API.name());
+            } else if (StringUtils.equals(ReportTriggerMode.MANUAL.name(), triggerMode)) {
+                performanceRequest.setTriggerMode(ReportTriggerMode.MANUAL.name());
             } else {
                 performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_SCHEDULE.name());
             }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerHandler.java
Patch:
@@ -82,8 +82,8 @@ public void handleTeardownTest() throws Exception {
         testResult.setConsole(resultService.getJmeterLogger(testId, true));
         testResultService.saveResult(testResult, this.runMode, this.debugReportId, this.testId);
         // 清除已经中断的过程数据
-        if (!MessageCache.reportCache.containsKey(testId) && resultService.processCache.containsKey(testId)) {
-            resultService.processCache.remove(testId);
+        if (!MessageCache.reportCache.containsKey(testId) && resultService.getProcessCache().containsKey(testId)) {
+            resultService.getProcessCache().remove(testId);
         }
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -22,4 +22,6 @@ public interface ExtApiDefinitionExecResultMapper {
     List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("startTimestamp") long startTimestamp);
 
     String  selectExecResult(String resourceId);
+
+    ApiDefinitionExecResult selectPlanApiMaxResultByTestIdAndType(String resourceId, String type);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -30,7 +30,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
         }
         requestDesc.getAuth(); // todo 认证方式等待优化
         PostmanUrl url = requestDesc.getUrl();
-        MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url.getRaw(), requestDesc.getMethod());
+        MsHTTPSamplerProxy request = buildRequest(requestItem.getName(), url == null ? "" : url.getRaw(), requestDesc.getMethod());
         if (StringUtils.isNotBlank(request.getPath())) {
             String path = request.getPath().split("\\?")[0];
             path = parseVariable(path);
@@ -39,7 +39,7 @@ protected MsHTTPSamplerProxy parsePostman(PostmanItem requestItem) {
             request.setPath("/");
         }
         parseBody(request.getBody(), requestDesc);
-        request.setArguments(parseKeyValue(url.getQuery()));
+        request.setArguments(parseKeyValue(url == null ? new ArrayList<>() : url.getQuery()));
         request.setHeaders(parseKeyValue(requestDesc.getHeader()));
         addBodyHeader(request);
         addPreScript(request, requestItem.getEvent());

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -21,13 +21,15 @@
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TestResultService {
 
     @Resource

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -71,6 +71,7 @@
 import java.util.stream.Stream;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TestPlanService {
     Logger testPlanLog = LoggerFactory.getLogger("testPlanExecuteLog");
 

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -30,6 +30,7 @@
 import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.client.RestTemplate;
 
 import javax.annotation.PostConstruct;
@@ -39,6 +40,7 @@
 import java.lang.reflect.Field;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class JMeterService {
     private static final String BASE_URL = "http://%s:%d";
     @Resource

File: backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -10,10 +10,12 @@
 import org.apache.kafka.clients.consumer.ConsumerRecord;
 import org.springframework.kafka.annotation.KafkaListener;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class MsKafkaListener {
     public static final String TOPICS = "ms-api-exec-topic";
     public static final String CONSUME_ID = "ms-api-exec-consume";

File: backend/src/main/java/io/metersphere/api/jmeter/ResourcePoolCalculation.java
Patch:
@@ -12,13 +12,15 @@
 import io.metersphere.dto.NodeDTO;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.client.RestTemplate;
 
 import javax.annotation.Resource;
 import java.util.List;
 import java.util.stream.Collectors;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class ResourcePoolCalculation {
     @Resource
     TestResourcePoolMapper testResourcePoolMapper;

File: backend/src/main/java/io/metersphere/api/service/ApiJmeterFileService.java
Patch:
@@ -20,6 +20,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jorphan.collections.HashTree;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.io.ByteArrayOutputStream;
@@ -30,6 +31,7 @@
 import java.util.zip.ZipOutputStream;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class ApiJmeterFileService {
 
     @Resource

File: backend/src/main/java/io/metersphere/api/service/CommandService.java
Patch:
@@ -11,6 +11,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.jorphan.exec.SystemCommand;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.multipart.MultipartFile;
 
 import java.io.BufferedReader;
@@ -19,6 +20,7 @@
 import java.util.*;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class CommandService {
 
     public List<KeyStoreEntry> get(String password, MultipartFile file) {

File: backend/src/main/java/io/metersphere/api/service/MsResultService.java
Patch:
@@ -12,13 +12,15 @@
 import org.apache.jmeter.threads.JMeterVariables;
 import org.springframework.http.HttpMethod;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import sun.security.util.Cache;
 
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.stream.Collectors;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class MsResultService {
     // 零时存放实时结果
     private Cache cache = Cache.newHardMemoryCache(0, 3600 * 2);

File: backend/src/main/java/io/metersphere/commons/consumer/LoadTestConsumer.java
Patch:
@@ -10,10 +10,12 @@
 import org.reflections8.Reflections;
 import org.springframework.kafka.annotation.KafkaListener;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.Set;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class LoadTestConsumer {
     public static final String CONSUME_ID = "load-test-data";
 

File: backend/src/main/java/io/metersphere/consul/ConsulService.java
Patch:
@@ -16,12 +16,14 @@
 import io.metersphere.service.TestResourcePoolService;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class ConsulService {
     private final Map<String, List<String>> cache = new ConcurrentHashMap<>();
     @Resource

File: backend/src/main/java/io/metersphere/ldap/service/LdapService.java
Patch:
@@ -21,6 +21,7 @@
 import org.springframework.ldap.core.support.LdapContextSource;
 import org.springframework.ldap.query.SearchScope;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import javax.naming.directory.DirContext;
@@ -32,6 +33,7 @@
 import static org.springframework.ldap.query.LdapQueryBuilder.query;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class LdapService {
 
     @Resource

File: backend/src/main/java/io/metersphere/notice/service/ApiAndPerformanceHelper.java
Patch:
@@ -13,6 +13,7 @@
 import io.metersphere.performance.request.QueryTestPlanRequest;
 import io.metersphere.service.ScheduleService;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;
 
 import javax.annotation.Resource;
@@ -21,6 +22,7 @@
 
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class ApiAndPerformanceHelper {
     @Resource
     private ExtLoadTestMapper extLoadTestMapper;

File: backend/src/main/java/io/metersphere/performance/engine/EngineFactory.java
Patch:
@@ -26,6 +26,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.reflections8.Reflections;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
@@ -47,6 +48,7 @@
 import java.util.stream.Collectors;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class EngineFactory {
     private static FileService fileService;
     private static PerformanceTestService performanceTestService;

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.performance.engine.EngineContext;
 import io.metersphere.performance.engine.EngineFactory;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.io.ByteArrayOutputStream;
@@ -22,6 +23,7 @@
 import java.util.zip.ZipOutputStream;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class JmeterFileService {
 
     @Resource

File: backend/src/main/java/io/metersphere/service/BaseDisplayService.java
Patch:
@@ -11,12 +11,14 @@
 import org.springframework.http.MediaType;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.io.IOException;
 import java.util.List;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class BaseDisplayService {
     @Resource
     private SystemParameterMapper systemParameterMapper;

File: backend/src/main/java/io/metersphere/service/CheckPermissionService.java
Patch:
@@ -10,13 +10,15 @@
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.List;
 import java.util.Set;
 import java.util.stream.Collectors;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class CheckPermissionService {
     @Resource
     private ExtApiTestMapper extApiTestMapper;

File: backend/src/main/java/io/metersphere/service/FileService.java
Patch:
@@ -8,6 +8,7 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.performance.request.QueryProjectFileRequest;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.multipart.MultipartFile;
@@ -22,6 +23,7 @@
 import java.util.stream.Collectors;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class FileService {
     @Resource
     private FileMetadataMapper fileMetadataMapper;
@@ -215,4 +217,4 @@ public List<FileMetadata> getFileMetadataByIds(List<String> fileIds) {
         example.createCriteria().andIdIn(fileIds);
         return fileMetadataMapper.selectByExample(example);
     }
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/service/NodeResourcePoolService.java
Patch:
@@ -16,6 +16,7 @@
 import org.apache.commons.lang3.tuple.ImmutablePair;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.client.RestTemplate;
 
 import javax.annotation.Resource;
@@ -27,6 +28,7 @@
 import static io.metersphere.commons.constants.ResourceStatusEnum.VALID;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class NodeResourcePoolService {
     private final static String nodeControllerUrl = "http://%s:%s/status";
 

File: backend/src/main/java/io/metersphere/service/UserKeyService.java
Patch:
@@ -8,13 +8,15 @@
 import io.metersphere.i18n.Translator;
 import org.apache.commons.lang3.RandomStringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;
 
 import javax.annotation.Resource;
 import java.util.List;
 import java.util.UUID;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class UserKeyService {
 
     @Resource

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -5,12 +5,14 @@
 import io.metersphere.task.dto.TaskCenterRequest;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TaskService {
     @Resource
     private ExtTaskMapper extTaskMapper;

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -7,9 +7,12 @@
 import io.metersphere.commons.consumer.LoadTestFinishEvent;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
+import org.springframework.transaction.annotation.Transactional;
+
 import javax.annotation.Resource;
 
 @Component
+@Transactional(rollbackFor = Exception.class)
 public class LoadReportStatusEvent implements LoadTestFinishEvent {
 
     @Resource

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseEvent.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.track.dto.TestPlanLoadCaseEventDTO;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 
@@ -19,6 +20,7 @@
  * @Description
  */
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TestPlanLoadCaseEvent implements LoadTestFinishEvent {
     @Resource
     TestPlanReportService testPlanReportService;

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportResourceService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.base.mapper.ext.ExtTestPlanReportResourceMapper;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.HashMap;
@@ -17,6 +18,7 @@
  * @Date 2021/8/2 1:57 下午
  */
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TestPlanReportResourceService {
     @Resource
     private TestPlanReportResourceMapper testPlanReportResourceMapper;

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -34,6 +34,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
 import java.util.*;
@@ -47,6 +48,7 @@
  */
 
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class TestPlanReportService {
 
     Logger testPlanLog = LoggerFactory.getLogger("testPlanExecuteLog");

File: backend/src/main/java/io/metersphere/api/jmeter/MsResultCollector.java
Patch:
@@ -136,7 +136,6 @@ public void testStarted() {
 
     @Override
     public void sampleStarted(SampleEvent e) {
-        System.out.println("start ====");
         try {
             MsgDto dto = new MsgDto();
             dto.setContent(e.getThreadGroup());

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -156,7 +156,7 @@ public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         ApiRunConfigDTO api = new ApiRunConfigDTO();
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
-        api.setOnSampleError(true);
+        api.setOnSampleError(false);
         api.setReportType("iddReport");
         String apiRunConfig = JSONObject.toJSONString(api);
         return testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -1144,7 +1144,7 @@ public String getLogDetails(List<String> ids) {
 
     public synchronized TestPlanReport updateExecuteApis(String planReportId, Map<String, String> executeApiCaseIdMap, Map<String, String> executeScenarioCaseIdMap, Map<String, String> executePerformanceIdMap) {
         TestPlanReportDataExample example = new TestPlanReportDataExample();
-        List<String> resourceIdList = new ArrayList<>();
+//        List<String> resourceIdList = new ArrayList<>();
         if(executeApiCaseIdMap == null){
             executeApiCaseIdMap = new HashMap<>();
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1019,7 +1019,7 @@ public String run(String testPlanID, String projectID, String userId, String tri
 
         String planReportId = testPlanReport.getId();
 
-        testPlanLog.info("ReportId[" + planReportId + "] created. TestPlanID:[" + testPlanID + "]. ");
+        testPlanLog.info("ReportId[" + planReportId + "] created. TestPlanID:[" + testPlanID + "]. "+"API Run Config:【"+apiRunConfig+"】");
 
         //不同任务的执行ID
         Map<String, String> executePerformanceIdMap = new HashMap<>();

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1368,6 +1368,8 @@ public String excute(RunScenarioRequest request) {
         String runMode = ApiRunMode.SCENARIO.name();
         if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name())) {
             runMode = ApiRunMode.SCENARIO_PLAN.name();
+        }else if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.SCHEDULE_SCENARIO.name())) {
+            runMode = ApiRunMode.SCHEDULE_SCENARIO.name();
         }
         if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.DEFINITION.name())) {
             runMode = ApiRunMode.DEFINITION.name();

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -238,7 +238,7 @@ protected String msImg2HtmlImg(String input, String endpoint) {
             return "";
         }
         Matcher matcher = pattern.matcher(input);
-        String result = "";
+        String result = input;
         while (matcher.find()) {
             String path = matcher.group(2);
             if (endpoint.endsWith("/")) {

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -332,6 +332,7 @@ public List<ExecutedCaseInfoDTO> faliureCaseAboutTestPlan(@PathVariable String p
                 dataDTO.setTestPlan(selectData.getTestPlan());
                 dataDTO.setFailureTimes(selectData.getFailureTimes());
                 dataDTO.setCaseType(selectData.getCaseType());
+                dataDTO.setId(selectData.getId());
                 dataDTO.setTestPlanDTOList(selectData.getTestPlanDTOList());
             } else {
                 dataDTO.setCaseName("");

File: backend/src/main/java/io/metersphere/api/dto/datacount/ExecutedCaseInfoResult.java
Patch:
@@ -13,6 +13,7 @@
 @Setter
 public class ExecutedCaseInfoResult {
     private String testCaseID;
+    private String id;
     //案例名称
     private String caseName;
     //所属测试计划

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ExecutedCaseInfoDTO.java
Patch:
@@ -22,8 +22,10 @@ public class ExecutedCaseInfoDTO {
     private Long failureTimes;
     //案例类型
     private String caseType;
-    //案例ID
+    //案例ID -- 目前被用为案例-测试计划 关联表ID
     private String caseID;
+    //ID
+    private String id;
     //测试计划集合
     private List<TestPlanDTO> testPlanDTOList;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -236,7 +236,7 @@ private Arguments arguments(String name, List<KeyValue> variables) {
     private JDBCPostProcessor jdbcPostProcessor(ParameterConfig config) {
         JDBCPostProcessor jdbcPostProcessor = new JDBCPostProcessor();
         jdbcPostProcessor.setEnabled(this.isEnable());
-        jdbcPostProcessor.setName(this.getName());
+        jdbcPostProcessor.setName(this.getName() == null? "JDBCPostProcessor" : this.getName());
         String name = this.getParentName(this.getParent());
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             jdbcPostProcessor.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -236,7 +236,7 @@ private Arguments arguments(String name, List<KeyValue> variables) {
     private JDBCPreProcessor jdbcPreProcessor(ParameterConfig config) {
         JDBCPreProcessor jdbcPreProcessor = new JDBCPreProcessor();
         jdbcPreProcessor.setEnabled(this.isEnable());
-        jdbcPreProcessor.setName(this.getName());
+        jdbcPreProcessor.setName(this.getName() == null? "JDBCPreProcessor" : this.getName());
         String name = this.getParentName(this.getParent());
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             jdbcPreProcessor.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -178,6 +178,7 @@ public void addIssue(IssuesUpdateRequest issuesRequest) {
         // transfer description
         try {
             zentaoSteps = ms2ZentaoDescription(description);
+            zentaoSteps = zentaoSteps.replaceAll("\\n", "<br/>");
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
         }

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -101,7 +101,7 @@ public void addScenario(ScenarioResult result) {
         if (result != null && CollectionUtils.isNotEmpty(result.getRequestResults())) {
             result.getRequestResults().forEach(item -> {
                 String itemAndScenarioName = "";
-                if (StringUtils.isNotEmpty(item.getScenario())) {
+                 if (StringUtils.isNotEmpty(item.getScenario())) {
                     //第1个：当前场景， 第all_id_names个：最后一层场景
                     List<String> all_id_names = JSON.parseObject(item.getScenario(), List.class);
                     if(all_id_names.size()>1){

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -24,4 +24,6 @@ public interface ExtTestPlanApiCaseMapper {
     List<String> selectIds(@Param("request") ApiTestCaseRequest request);
 
     ApiTestCaseWithBLOBs getApiTestCaseById(String testPlanApiCaseId);
+
+    List<TestPlanApiCase> selectLegalDataByTestPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -22,4 +22,5 @@ public interface ExtTestPlanScenarioCaseMapper {
 
     List<TestPlanApiScenario> selectByIds(@Param("ids")String ids ,@Param("oderId")String oderId );
 
+    List<TestPlanApiScenario> selectLegalDataByTestPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -59,7 +59,7 @@ private void addAssertions(HashTree hashTree) {
             );
         }
 
-        if (this.getDuration().isValid()) {
+        if (this.getDuration() != null && this.getDuration().isValid()) {
             hashTree.add(durationAssertion(this.getDuration()));
         }
     }

File: backend/src/main/java/io/metersphere/track/issue/IssueFactory.java
Patch:
@@ -19,7 +19,7 @@ public static AbstractIssuePlatform createPlatform(String platform, IssuesReques
         } else if (StringUtils.equals(IssuesManagePlatform.AzureDevops.toString(), platform)) {
             ClassLoader loader = Thread.currentThread().getContextClassLoader();
             try {
-                Class clazz = loader.loadClass("io.metersphere.xpack.issue.azureDevops.AzureDevopsPlatform");
+                Class clazz = loader.loadClass("io.metersphere.xpack.issue.azuredevops.AzureDevopsPlatform");
                 Constructor cons = clazz.getDeclaredConstructor(new Class[] { IssuesRequest.class });
                 AbstractIssuePlatform azureDevopsPlatform = (AbstractIssuePlatform) cons.newInstance(addIssueRequest);
                 return azureDevopsPlatform;

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -479,7 +479,7 @@ public void syncThirdPartyIssues(String projectId) {
             if (CollectionUtils.isNotEmpty(azureDevopsIssues)) {
                 ClassLoader loader = Thread.currentThread().getContextClassLoader();
                 try {
-                    Class clazz = loader.loadClass("io.metersphere.xpack.issue.azureDevops.AzureDevopsPlatform");
+                    Class clazz = loader.loadClass("io.metersphere.xpack.issue.azuredevops.AzureDevopsPlatform");
                     Constructor cons = clazz.getDeclaredConstructor(new Class[] { IssuesRequest.class });
                     AbstractIssuePlatform azureDevopsPlatform = (AbstractIssuePlatform) cons.newInstance(issuesRequest);
                     syncThirdPartyIssues(azureDevopsPlatform::syncIssues, project, azureDevopsIssues);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -309,7 +309,7 @@ protected String getParentName(MsTestElement parent) {
     }
 
     public String getFullIndexPath(MsTestElement element, String path) {
-        if (element.getParent() == null) {
+        if (element == null || element.getParent() == null) {
             return path;
         }
         path = element.getIndex() + "_" + path;

File: backend/src/main/java/io/metersphere/performance/controller/request/MetricQuery.java
Patch:
@@ -10,7 +10,7 @@ public static Map<String, String> getMetricQueryMap() {
             // 指标名:promQL
             put("cpu", "100 - (avg by (instance) (irate(node_cpu_seconds_total{instance='%1$s', mode='idle'}[1m])) * 100)");
             put("disk", "100 - node_filesystem_free_bytes{instance='%1$s'} / node_filesystem_size_bytes{instance='%1$s'} * 100");
-            put("memory", "(node_memory_MemTotal_bytes{instance='%1$s'} - node_memory_MemFree_bytes{instance='%1$s'}) / node_memory_MemTotal_bytes{instance='%1$s'} * 100");
+            put("memory", "(node_memory_MemTotal_bytes{instance='%1$s'} - node_memory_MemAvailable_bytes{instance='%1$s'}) / node_memory_MemTotal_bytes{instance='%1$s'} * 100");
             put("netIn", "sum by (instance) (irate(node_network_receive_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024)");
             put("netOut", "sum by (instance) (irate(node_network_transmit_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024)");
         }};

File: backend/src/main/java/io/metersphere/base/domain/Project.java
Patch:
@@ -23,6 +23,8 @@ public class Project implements Serializable {
 
     private String zentaoId;
 
+    private String azureDevopsId;
+
     private Boolean repeatable;
 
     private String caseTemplateId;

File: backend/src/main/java/io/metersphere/commons/constants/IssuesManagePlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum IssuesManagePlatform {
-    Tapd, Jira, Local, Zentao
+    Tapd, Jira, Local, Zentao, AzureDevops
 }

File: backend/src/main/java/io/metersphere/dto/UserDTO.java
Patch:
@@ -29,6 +29,7 @@ public static class PlatformInfo {
         private String  tapdUserName;
         private String  zentaoUserName;
         private String  zentaoPassword;
+        private String  azureDevopsPat;
     }
 
 }

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -130,7 +130,7 @@ protected HttpHeaders auth(String apiUser, String password) {
      *
      * @return 其他平台和本地项目绑定的属性值
      */
-    abstract String getProjectId(String projectId);
+    public abstract String getProjectId(String projectId);
 
     protected boolean isIntegratedPlatform(String orgId, String platform) {
         IntegrationRequest request = new IntegrationRequest();

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -298,7 +298,7 @@ public void syncIssues(Project project, List<IssuesDao> issues) {
     }
 
     @Override
-    String getProjectId(String projectId) {
+    public String getProjectId(String projectId) {
         if (StringUtils.isNotBlank(projectId)) {
             return projectService.getProjectById(projectId).getJiraKey();
         }

File: backend/src/main/java/io/metersphere/track/issue/LocalAbstractPlatform.java
Patch:
@@ -25,5 +25,5 @@ public void userAuth(UserDTO.PlatformInfo userInfo) {}
     public void syncIssues(Project project, List<IssuesDao> tapdIssues) {}
 
     @Override
-    String getProjectId(String projectId) { return null; }
+    public String getProjectId(String projectId) { return null; }
 }

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -236,7 +236,7 @@ public void syncIssues(Project project, List<IssuesDao> tapdIssues) {
     }
 
     @Override
-    String getProjectId(String projectId) {
+    public String getProjectId(String projectId) {
         if (StringUtils.isNotBlank(projectId)) {
             return projectService.getProjectById(projectId).getTapdId();
         }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -70,7 +70,7 @@ public ZentaoPlatform(IssuesRequest issuesRequest) {
     }
 
     @Override
-    String getProjectId(String projectId) {
+    public String getProjectId(String projectId) {
         if (StringUtils.isNotBlank(projectId)) {
             return projectService.getProjectById(projectId).getZentaoId();
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -244,7 +244,8 @@ private JDBCPostProcessor jdbcPostProcessor(ParameterConfig config) {
         jdbcPostProcessor.setProperty(TestElement.TEST_CLASS, JDBCPostProcessor.class.getName());
         jdbcPostProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPostProcessor.setProperty("MS-ID", this.getId());
-        jdbcPostProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
+        String indexPath = this.getIndex();
+        jdbcPostProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getFullIndexPath(this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPostProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -244,7 +244,8 @@ private JDBCPreProcessor jdbcPreProcessor(ParameterConfig config) {
         jdbcPreProcessor.setProperty(TestElement.TEST_CLASS, JDBCPreProcessor.class.getName());
         jdbcPreProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPreProcessor.setProperty("MS-ID", this.getId());
-        jdbcPreProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
+        String indexPath = this.getIndex();
+        jdbcPreProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getFullIndexPath(this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPreProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -141,7 +141,8 @@ private DubboSample dubboSample(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
+        String indexPath = this.getIndex();
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getFullIndexPath(this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -240,7 +240,8 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, JDBCSampler.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         sampler.setProperty("MS-ID", this.getId());
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
+        String indexPath = this.getIndex();
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getFullIndexPath(this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -204,7 +204,8 @@ private TCPSampler tcpSampler(ParameterConfig config) {
             tcpSampler.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);
         }
         tcpSampler.setProperty("MS-ID", this.getId());
-        tcpSampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getIndex());
+        String indexPath = this.getIndex();
+        tcpSampler.setProperty("MS-RESOURCE-ID", this.getResourceId() + "_" + this.getFullIndexPath(this.getParent(), indexPath));
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         tcpSampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -2366,10 +2366,12 @@ public void batchCopy(ApiScenarioBatchRequest batchRequest) {
                 (query) -> extApiScenarioMapper.selectIdsByQuery((ApiScenarioRequest) query));
         List<ApiScenarioWithBLOBs> apiScenarioList = extApiScenarioMapper.selectIds(batchRequest.getIds());
         for (ApiScenarioWithBLOBs apiModel : apiScenarioList) {
+            long time = System.currentTimeMillis();
             ApiScenarioWithBLOBs newModel = apiModel;
             newModel.setId(UUID.randomUUID().toString());
             newModel.setName("copy_" + apiModel.getName());
-            newModel.setCreateTime(System.currentTimeMillis());
+            newModel.setCreateTime(time);
+            newModel.setUpdateTime(time);
             newModel.setNum(getNextNum(newModel.getProjectId()));
 
             ApiScenarioExample example = new ApiScenarioExample();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -253,9 +253,10 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
 
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {
-                if(this.getEnvironmentId() == null){
+                if(this.getEnvironmentId() == null || el.getEnvironmentId() == null){
                     el.setEnvironmentId(useEnvironment);
                 }
+
                 el.toHashTree(httpSamplerTree, el.getHashTree(), config);
             }
         }

File: backend/src/main/java/io/metersphere/base/domain/TestPlanTestCase.java
Patch:
@@ -11,8 +11,6 @@ public class TestPlanTestCase implements Serializable {
 
     private String caseId;
 
-    private String reportId;
-
     private String executor;
 
     private String status;
@@ -23,9 +21,11 @@ public class TestPlanTestCase implements Serializable {
 
     private Long updateTime;
 
+    private String reportId;
+
     private String createUser;
 
     private Integer issuesCount;
 
     private static final long serialVersionUID = 1L;
-}
+}
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -151,7 +151,7 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
                 }
             }
         } catch (Exception e) {
-            LogUtil.error(e.getMessage());
+            LogUtil.error(e.getMessage(), e);
         }
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -72,7 +72,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             processor.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);
         }
         processor.setProperty("MS-ID", this.getId());
-        processor.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        processor.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         processor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -244,7 +244,7 @@ private JDBCPostProcessor jdbcPostProcessor(ParameterConfig config) {
         jdbcPostProcessor.setProperty(TestElement.TEST_CLASS, JDBCPostProcessor.class.getName());
         jdbcPostProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPostProcessor.setProperty("MS-ID", this.getId());
-        jdbcPostProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        jdbcPostProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPostProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -244,7 +244,7 @@ private JDBCPreProcessor jdbcPreProcessor(ParameterConfig config) {
         jdbcPreProcessor.setProperty(TestElement.TEST_CLASS, JDBCPreProcessor.class.getName());
         jdbcPreProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPreProcessor.setProperty("MS-ID", this.getId());
-        jdbcPreProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        jdbcPreProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPreProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -141,7 +141,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -182,7 +182,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         sampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -240,7 +240,7 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, JDBCSampler.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         sampler.setProperty("MS-ID", this.getId());
-        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId()+ "_" + this.getIndex());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -308,6 +308,9 @@ private void parseKvBody(Schema schema, Body body, Object data, Map<String, Sche
                 }
             }
             if (body != null) {
+                if (body.getKvs() == null) {
+                    body.setKvs(new ArrayList<>());
+                }
                 body.getKvs().add(kv);
             }
         }

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -344,7 +344,7 @@ public List<ZentaoBuild> getBuilds() {
 
     private String uploadFile(FileSystemResource resource) {
         String id = "";
-        setConfig();
+        zentaoClient.setConfig(getUserConfig());
         String session = zentaoClient.login();
         HttpHeaders httpHeaders = new HttpHeaders();
         MultiValueMap<String, Object> paramMap = new LinkedMultiValueMap<>();

File: backend/src/main/java/io/metersphere/dto/GroupPermission.java
Patch:
@@ -8,4 +8,5 @@ public class GroupPermission {
     private String name;
     private String resourceId;
     private Boolean checked = false;
+    private Boolean license = false;
 }

File: backend/src/main/java/io/metersphere/dto/GroupResource.java
Patch:
@@ -6,4 +6,5 @@
 public class GroupResource {
     private String id;
     private String name;
+    private Boolean license = false;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiTestReportVariable.java
Patch:
@@ -8,4 +8,5 @@ public class ApiTestReportVariable extends ApiTestReport {
     public String executionTime;
     public String executor;
     public String executionEnvironment;
+    public String principal;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1043,8 +1043,8 @@ public String modeRun(RunScenarioRequest request) {
         if (request.getConfig() != null && StringUtils.equals(request.getConfig().getReportType(), RunModeConstants.SET_REPORT.toString()) && StringUtils.isNotEmpty(request.getConfig().getReportName())) {
             request.getConfig().setReportId(UUID.randomUUID().toString());
             APIScenarioReportResult report = createScenarioReport(request.getConfig().getReportId(),
-                    JSON.toJSONString(CollectionUtils.isNotEmpty(scenarioIds) && scenarioIds.size() > 100 ? scenarioIds.subList(0, 100) : scenarioIds),
-                    scenarioNames.length() >= 6000 ? scenarioNames.substring(0, 5999) : scenarioNames.deleteCharAt(scenarioNames.toString().length() - 1).toString(),
+                    JSON.toJSONString(CollectionUtils.isNotEmpty(scenarioIds) && scenarioIds.size() > 50 ? scenarioIds.subList(0, 50) : scenarioIds),
+                    scenarioNames.length() >= 3000 ? scenarioNames.substring(0, 2000) : scenarioNames.deleteCharAt(scenarioNames.toString().length() - 1).toString(),
                     ReportTriggerMode.MANUAL.name(), ExecuteType.Saved.name(), request.getProjectId(), request.getReportUserID(), request.getConfig());
 
             report.setName(request.getConfig().getReportName());

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -248,7 +248,7 @@ public ApiModule buildNewModule(ApiModule node) {
 
     private void validateNode(ApiModule node) {
         if (node.getLevel() > TestCaseConstants.MAX_NODE_DEPTH) {
-            throw new RuntimeException(Translator.get("test_case_node_level_tip")
+            MSException.throwException(Translator.get("test_case_node_level_tip")
                     + TestCaseConstants.MAX_NODE_DEPTH + Translator.get("test_case_node_level"));
         }
         checkApiModuleExist(node);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -221,7 +221,7 @@ private List<ApiScenarioModuleDTO> getNodeDTO(String projectId, String planId) {
 
     private void validateNode(ApiScenarioModule node) {
         if (node.getLevel() > TestCaseConstants.MAX_NODE_DEPTH) {
-            throw new RuntimeException(Translator.get("test_case_node_level_tip")
+            MSException.throwException(Translator.get("test_case_node_level_tip")
                     + TestCaseConstants.MAX_NODE_DEPTH + Translator.get("test_case_node_level"));
         }
         checkApiScenarioModuleExist(node);

File: backend/src/main/java/io/metersphere/websocket/ApiReportWebSocket.java
Patch:
@@ -33,7 +33,7 @@ public void setReportService(ApiDefinitionService apiDefinitionService) {
     public void onOpen(@PathParam("reportId") String reportId, @PathParam("runMode") String runMode, Session session) {
         Timer timer = new Timer(true);
         ApiReportTask task = new ApiReportTask(session, reportId, runMode);
-        timer.schedule(task, 0, 1000);
+        timer.schedule(task, 0, 3 * 1000);
         refreshTasks.putIfAbsent(session, timer);
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -70,7 +70,6 @@ public void handleSampleResults(List<SampleResult> sampleResults, BackendListene
     public void teardownTest(BackendListenerContext context) throws Exception {
         TestResult testResult = new TestResult();
         testResult.setTestId(testId);
-        testResult.setConsole(resultService.getJmeterLogger(testId, true));
         testResult.setTotal(0);
         // 一个脚本里可能包含多个场景(ThreadGroup)，所以要区分开，key: 场景Id
         final Map<String, ScenarioResult> scenarios = new LinkedHashMap<>();
@@ -87,6 +86,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
         super.teardownTest(context);
         testResult.getScenarios().addAll(scenarios.values());
         testResult.getScenarios().sort(Comparator.comparing(ScenarioResult::getId));
+        testResult.setConsole(resultService.getJmeterLogger(testId, true));
         testResultService.saveResult(testResult, this.runMode, this.debugReportId, this.testId);
     }
 

File: backend/src/main/java/io/metersphere/websocket/ScenarioReportWebSocket.java
Patch:
@@ -88,7 +88,7 @@ public static class ApiDebugResultTask extends TimerTask {
         @Override
         public void run() {
             try {
-                TestResult report = resultService.getResult(reportId);
+                TestResult report = resultService.sysnSampleResult(reportId);
                 if (!session.isOpen()) {
                     return;
                 }

File: backend/src/main/java/io/metersphere/websocket/TaskCenterWebSocket.java
Patch:
@@ -31,7 +31,7 @@ public void setTaskService(TaskService taskService) {
     public void onOpen(@PathParam("projectId") String projectId, Session session) {
         Timer timer = new Timer(true);
         TaskCenterWebSocket.TaskCenter task = new TaskCenterWebSocket.TaskCenter(session, projectId);
-        timer.schedule(task, 0, 6 * 1000);
+        timer.schedule(task, 0, 10 * 1000);
         refreshTasks.putIfAbsent(session, timer);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -975,11 +975,11 @@ public void calculateResult(List<ApiDefinitionResult> resList, String projectId)
                     res.setCasePassingRate(compRes.getPassRate());
                     // 状态优先级 未执行，未通过，通过
                     if ((compRes.getError() + compRes.getSuccess()) < compRes.getCaseTotal()) {
-                        res.setCaseStatus("未执行");
+                        res.setCaseStatus(Translator.get("not_execute"));
                     } else if (compRes.getError() > 0) {
-                        res.setCaseStatus("未通过");
+                        res.setCaseStatus(Translator.get("execute_not_pass"));
                     } else {
-                        res.setCaseStatus("通过");
+                        res.setCaseStatus(Translator.get("execute_pass"));
                     }
                 } else {
                     res.setCaseTotal("-");

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -461,7 +461,8 @@ public void testPlanRelevance(PlanCaseRelevanceRequest request) {
         TestCaseExample testCaseExample = new TestCaseExample();
         testCaseExample.createCriteria().andIdIn(testCaseIds);
         List<TestCase> testCaseList = testCaseMapper.selectByExample(testCaseExample);
-        Map<String, String> userMap = testCaseList.stream().collect(Collectors.toMap(TestCase::getId, TestCase::getMaintainer));
+        Map<String, String> userMap = testCaseList.stream()
+                .collect(HashMap::new, (m,v)-> m.put(v.getId(), v.getMaintainer()), HashMap::putAll);
 
         SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
         TestPlanTestCaseMapper batchMapper = sqlSession.getMapper(TestPlanTestCaseMapper.class);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -798,6 +798,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
             if (i % 300 == 0) {
                 sqlSession.flushStatements();
             }
+            sqlSession.flushStatements();
         }
         //判断EsbData是否需要存储
         if (apiImport.getEsbApiParamsMap() != null && apiImport.getEsbApiParamsMap().size() > 0) {
@@ -819,7 +820,6 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
         if (!CollectionUtils.isEmpty(apiImport.getCases())) {
             importMsCase(apiImport, sqlSession, apiTestCaseMapper);
         }
-        sqlSession.flushStatements();
     }
 
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTaskMapper.java
Patch:
@@ -11,6 +11,6 @@ public interface ExtTaskMapper {
     void deleteByResourceId(String id);
     List<TaskCenterDTO> getTasks (@Param("request") TaskCenterRequest request);
 
-    List<TaskCenterDTO> getRunningTasks (@Param("request") TaskCenterRequest request);
+    int getRunningTasks (@Param("request") TaskCenterRequest request);
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/task/controller/TaskController.java
Patch:
@@ -27,7 +27,7 @@ public List<TaskCenterDTO> getTasks(@RequestBody TaskCenterRequest request) {
     @PostMapping("/count/running")
     @RequiresPermissions("PROJECT_API_SCENARIO:READ")
     public int getRunningTasks(@RequestBody TaskCenterRequest request) {
-        return taskService.getRunningTasks(request).size();
+        return taskService.getRunningTasks(request);
     }
 
 }

File: backend/src/main/java/io/metersphere/task/service/TaskService.java
Patch:
@@ -22,9 +22,9 @@ public List<TaskCenterDTO> getTasks(TaskCenterRequest request) {
         return extTaskMapper.getTasks(request);
     }
 
-    public List<TaskCenterDTO> getRunningTasks(TaskCenterRequest request) {
+    public int getRunningTasks(TaskCenterRequest request) {
         if (StringUtils.isEmpty(request.getProjectId())) {
-            return new ArrayList<>();
+            return 0;
         }
         return extTaskMapper.getRunningTasks(request);
     }

File: backend/src/main/java/io/metersphere/commons/utils/JsonPathUtils.java
Patch:
@@ -226,7 +226,7 @@ private static boolean checkObjCompliance(Object sourceObjItem, Object matchObjI
                         for (int j = i; j < sourceArr.size(); j++) {
                             Object matchItemObj = matchArr.get(i);
                             Object sourceItemObj = sourceArr.get(j);
-                            boolean check = checkObjCompliance(sourceObjItem, matchObjItem);
+                            boolean check = checkObjCompliance(sourceItemObj, matchItemObj);
                             if (!check) {
                                 return check;
                             }

File: backend/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -64,7 +64,7 @@ public ResultHolder currentUser() {
     }
 
     @GetMapping(value = "/signout")
-    @MsAuditLog(module = "auth_title", type = OperLogConstants.LOGIN, title = "登出")
+    @MsAuditLog(module = "auth_title", beforeEvent = "#msClass.getUserId(id)",type = OperLogConstants.LOGIN, title = "登出",msClass = SessionUtils.class)
     public ResultHolder logout() throws Exception {
         userService.logout();
         SecurityUtils.getSubject().logout();

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -224,7 +224,7 @@ public TestCaseWithBLOBs checkTestCaseExist(TestCaseWithBLOBs testCase) {
                     .andProjectIdEqualTo(testCase.getProjectId())
                     .andNodePathEqualTo(nodePath)
                     .andTypeEqualTo(testCase.getType())
-                    .andMaintainerEqualTo(testCase.getMaintainer())
+//                    .andMaintainerEqualTo(testCase.getMaintainer())
                     .andPriorityEqualTo(testCase.getPriority());
 //                    .andMethodEqualTo(testCase.getMethod());
 

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsScenarioParser.java
Patch:
@@ -97,7 +97,7 @@ private ScenarioImport parseMsFormat(String testStr, ApiTestImportRequest import
                     }
                 }
 
-                if (finalNodeMap != null) {
+                if (finalNodeMap != null && finalNodeMap.get(item.getApiScenarioModuleId()) != null) {
                     NodeTree node = finalNodeMap.get(item.getApiScenarioModuleId());
                     item.setApiScenarioModuleId(node.getNewId());
                     item.setModulePath(node.getPath());

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -106,7 +106,7 @@ private void parseApiDefinition(ApiDefinitionWithBLOBs apiDefinition, ApiTestImp
         String originId = apiDefinition.getId();
         String id = UUID.randomUUID().toString();
 
-        if (nodeMap != null) {
+        if (nodeMap != null && nodeMap.get(apiDefinition.getModuleId()) != null) {
             NodeTree nodeTree = nodeMap.get(apiDefinition.getModuleId());
             apiDefinition.setModuleId(nodeTree.getNewId());
             apiDefinition.setModulePath(nodeTree.getPath());

File: backend/src/main/java/io/metersphere/api/service/TestResultService.java
Patch:
@@ -144,7 +144,7 @@ public void saveResult(TestResult testResult, String runMode, String debugReport
                 }
             }
             if (reportTask != null) {
-                if (StringUtils.equals(ReportTriggerMode.API.name(), reportTask.getTriggerMode()) || StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), reportTask.getTriggerMode())) {
+                if (!StringUtils.equals(ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), runMode) && !StringUtils.equals(ApiRunMode.JENKINS_SCENARIO_PLAN.name(), runMode) && StringUtils.equals(ReportTriggerMode.API.name(), reportTask.getTriggerMode()) || StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), reportTask.getTriggerMode())) {
                     sendTask(reportTask, reportUrl, testResult);
                 }
             }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1139,7 +1139,7 @@ public void run() {
                     //存储报告
                     APIScenarioReportResult report = executeQueue.get(reportId).getReport();
                     batchMapper.insert(report);
-                    executorService.submit(new ParallelScenarioExecTask(jMeterService, executeQueue.get(report), request));
+                    executorService.submit(new ParallelScenarioExecTask(jMeterService, executeQueue.get(reportId), request));
                 }
                 sqlSession.flushStatements();
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -253,7 +253,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
 
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {
-                el.setEnvironmentId(useEnvironment);
+                if(this.getEnvironmentId() == null){
+                    el.setEnvironmentId(useEnvironment);
+                }
                 el.toHashTree(httpSamplerTree, el.getHashTree(), config);
             }
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -52,7 +52,6 @@
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.ibatis.annotations.Param;
 import org.apache.ibatis.session.ExecutorType;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -121,7 +121,7 @@ private String getName(String type, String id, String status, Long time) {
         if (id.indexOf(DelimiterConstants.SEPARATOR.toString()) != -1) {
             return id.substring(0, id.indexOf(DelimiterConstants.SEPARATOR.toString()));
         }
-        if (StringUtils.equals(type, ApiRunMode.API_PLAN.name())) {
+        if (StringUtils.equalsAnyIgnoreCase(type, ApiRunMode.API_PLAN.name(),ApiRunMode.SCHEDULE_API_PLAN.name(),ApiRunMode.JENKINS_API_PLAN.name())) {
             TestPlanApiCase testPlanApiCase = testPlanApiCaseService.getById(id);
             ApiTestCaseWithBLOBs caseWithBLOBs = null;
             if (testPlanApiCase != null) {
@@ -174,7 +174,8 @@ public void saveApiResultByScheduleTask(TestResult result,String testPlanReportI
                         ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
                         saveResult.setId(UUID.randomUUID().toString());
                         saveResult.setCreateTime(System.currentTimeMillis());
-                        saveResult.setName(item.getName());
+//                        saveResult.setName(item.getName());
+                        saveResult.setName(getName(type, item.getName(), status, saveResult.getCreateTime()));
                         ApiDefinitionWithBLOBs apiDefinitionWithBLOBs = apiDefinitionMapper.selectByPrimaryKey(item.getName());
                         if (apiDefinitionWithBLOBs != null) {
                             saveResult.setName(apiDefinitionWithBLOBs.getName());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -54,4 +54,6 @@ public interface ExtApiDefinitionMapper {
     List<Map<String, Object>> moduleCountByCollection(@Param("request") ApiDefinitionRequest request);
 
     ApiDefinition selectUrlAndMethodById(String id);
+
+    int checkOriginalStatusByIds(@Param("ids")List<String> ids);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -66,4 +66,6 @@ public interface ExtApiScenarioMapper {
     List<String> selectNameByIdIn(@Param("ids") List<String> id);
 
     List<ApiScenarioWithBLOBs> selectByNoReferenceId();
+
+    void checkOriginalStatusByIds(@Param("ids")List<String> ids);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -106,4 +106,6 @@ public interface ExtTestCaseMapper {
     int reduction(@Param("ids") List<String> ids);
 
     void checkOriginalStatusByIds(@Param("ids") List<String> ids);
+
+    List<String> selectIdsByNodeIds(@Param("ids")List<String> nodeIds);
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanScenarioRequest.java
Patch:
@@ -15,6 +15,7 @@ public class TestPlanScenarioRequest {
     private String projectId;
     private String moduleId;
     private List<String> moduleIds;
+    private List<String> scenarioIds;
     private String name;
     private String status;
     private String workspaceId;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -2342,7 +2342,6 @@ public void batchCopy(ApiScenarioBatchRequest batchRequest) {
                 }
             }
         }
-//        uploadFiles(request, bodyFiles, scenarioFiles);
     }
 
     public DeleteCheckResult checkBeforeDelete(ApiScenarioBatchRequest request) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.dto.definition.ApiTestCaseRequest;
 import io.metersphere.api.dto.definition.TestPlanApiCaseDTO;
+import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.TestPlanApiCase;
 import org.apache.ibatis.annotations.Param;
 
@@ -21,4 +22,6 @@ public interface ExtTestPlanApiCaseMapper {
     List<String> getStatusByTestPlanId(String id);
 
     List<String> selectIds(@Param("request") ApiTestCaseRequest request);
+
+    ApiTestCaseWithBLOBs getApiTestCaseById(String testPlanApiCaseId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -9,7 +9,6 @@
 import io.metersphere.commons.constants.PermissionConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
-import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.service.CheckPermissionService;
 import io.metersphere.track.dto.ApiRunConfigDTO;
@@ -162,4 +161,5 @@ public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         String apiRunConfig = JSONObject.toJSONString(api);
         return testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
     }
+
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ScenarioImport.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.automation.parse;
 
+import io.metersphere.api.dto.definition.parse.ms.NodeTree;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import lombok.Data;
 
@@ -9,4 +10,5 @@
 public class ScenarioImport {
     private String projectId;
     private List<ApiScenarioWithBLOBs> data;
+    private List<NodeTree> nodeTree;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImport.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition.parse;
 
+import io.metersphere.api.dto.definition.parse.ms.NodeTree;
 import io.metersphere.base.domain.ApiDefinitionWithBLOBs;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import io.metersphere.base.domain.EsbApiParamsWithBLOBs;
@@ -19,4 +20,6 @@ public class ApiDefinitionImport {
 
     //ESB文件导入的附属数据类
     private Map<String,EsbApiParamsWithBLOBs> esbApiParamsMap;
+
+    private List<NodeTree> nodeTree;
 }

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -90,7 +90,6 @@ public void addIssue(IssuesUpdateRequest issuesRequest) {
 
         List<CustomFieldItemDTO> customFields = getCustomFields(issuesRequest.getCustomFields());
 
-        String url = "https://api.tapd.cn/bugs";
         String tapdId = getProjectId(issuesRequest.getProjectId());
 
         if (StringUtils.isBlank(tapdId)) {

File: backend/src/main/java/io/metersphere/track/controller/TestPlanApiCaseController.java
Patch:
@@ -65,6 +65,7 @@ public void batchUpdateEnv(@RequestBody TestPlanApiCaseBatchRequest request) {
     }
 
     @PostMapping(value = "/run")
+    @MsAuditLog(module = "track_test_plan", type = OperLogConstants.EXECUTE, content = "#msClass.getLogDetails(#request.planIds)", msClass = TestPlanApiCaseService.class)
     public String run(@RequestBody BatchRunDefinitionRequest request) {
         return testPlanApiCaseService.run(request);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -66,7 +66,7 @@ public ThreadGroup getThreadGroup() {
         threadGroup.setDuration(0);
         threadGroup.setProperty(ThreadGroup.ON_SAMPLE_ERROR, ThreadGroup.ON_SAMPLE_ERROR_CONTINUE);
         threadGroup.setScheduler(false);
-        if (onSampleError != null && onSampleError) {   // onSampleError 为true 表示失败停止
+        if (onSampleError != null && !onSampleError) {
             threadGroup.setProperty("ThreadGroup.on_sample_error", "stoptest");
         }
         threadGroup.setSamplerController(loopController);

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -157,7 +157,7 @@ public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         ApiRunConfigDTO api = new ApiRunConfigDTO();
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
-        api.setOnSampleError(false);    // OnSampleError 为false表示失败不停止，若设置为true会导致bug #4809
+        api.setOnSampleError(true);
         api.setReportType("iddReport");
         String apiRunConfig = JSONObject.toJSONString(api);
         return testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -16,7 +16,7 @@ public class NoticeController {
     private NoticeService noticeService;
 
     @PostMapping("save/message/task")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.UPDATE, content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
+    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#messageDetail.id)", content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
     public void saveMessage(@RequestBody MessageDetail messageDetail) {
         noticeService.saveMessageTask(messageDetail);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -47,4 +47,7 @@ public interface ExtApiTestCaseMapper {
     List<ApiTestCaseDTO> getCannotReductionApiCaseList(@Param("ids") List<String> ids);
 
     List<String> selectCaseIdsByApiIds(@Param("ids")List<String> apiIds);
+
+    List<String> selectNameByIdIn(@Param("ids")List<String> ids);
+    String selectNameById(String id);
 }

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -51,6 +51,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         initPythonEnv();
 
         initOperate(apiAutomationService::checkApiScenarioUseUrl, "init.scenario.url");
+        initOperate(apiAutomationService::checkApiScenarioReferenceId, "init.scenario.referenceId");
         initOperate(issuesService::syncThirdPartyIssues, "init.issue");
         initOperate(issuesService::issuesCount, "init.issueCount");
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1040,7 +1040,9 @@ private void run(Map<APIScenarioReportResult, RunModeDataDTO> map, RunScenarioRe
                     public void run() {
                         List<String> reportIds = new LinkedList<>();
                         for (APIScenarioReportResult key : map.keySet()) {
-                            key.setExecuteType(ExecuteType.Marge.name());
+                            if (StringUtils.isNotEmpty(serialReportId)) {
+                                key.setExecuteType(ExecuteType.Marge.name());
+                            }
                             apiScenarioReportMapper.insert(key);
                             reportIds.add(key.getId());
                             try {

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -63,9 +63,8 @@ public List<TestPlanDTOWithMetric> listByProjectId(@PathVariable String projectI
     }
 
     @PostMapping("/list/all")
-    public List<TestPlan> listAll() {
-        String currentWorkspaceId = SessionUtils.getCurrentWorkspaceId();
-        return testPlanService.listTestAllPlan(currentWorkspaceId);
+    public List<TestPlan> listAll(@RequestBody QueryTestPlanRequest request) {
+        return testPlanService.listTestAllPlan(request);
     }
 
     @PostMapping("/list/all/relate")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -66,7 +66,7 @@ public ThreadGroup getThreadGroup() {
         threadGroup.setDuration(0);
         threadGroup.setProperty(ThreadGroup.ON_SAMPLE_ERROR, ThreadGroup.ON_SAMPLE_ERROR_CONTINUE);
         threadGroup.setScheduler(false);
-        if (onSampleError != null && !onSampleError) {
+        if (onSampleError != null && onSampleError) {   // onSampleError 为true 表示失败停止
             threadGroup.setProperty("ThreadGroup.on_sample_error", "stoptest");
         }
         threadGroup.setSamplerController(loopController);

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -158,7 +158,7 @@ public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         ApiRunConfigDTO api = new ApiRunConfigDTO();
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
-        api.setOnSampleError(true);
+        api.setOnSampleError(false);    // OnSampleError 为false表示失败不停止，若设置为true会导致bug #4809
         api.setReportType("iddReport");
         String apiRunConfig = JSONObject.toJSONString(api);
         return testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -116,6 +116,9 @@ public void update(ApiTestEnvironmentDTO apiTestEnvironment,List<MultipartFile>
     }
     private void checkEnvironmentExist(ApiTestEnvironmentWithBLOBs environment) {
         if (environment.getName() != null) {
+            if(StringUtils.isEmpty(environment.getProjectId())){
+                MSException.throwException(Translator.get("项目ID不能为空"));
+            }
             ApiTestEnvironmentExample example = new ApiTestEnvironmentExample();
             ApiTestEnvironmentExample.Criteria criteria = example.createCriteria();
             criteria.andNameEqualTo(environment.getName())

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/HarScenarioParser.java
Patch:
@@ -85,7 +85,6 @@ private void parseItem(List<HarEntry> items, MsScenario scenario, LinkedList<MsT
             if (request != null) {
                 results.add(request);
             }
-            request.setRequestResult(getRequestResult(request,item));
         }
         scenario.setHashTree(results);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -109,9 +109,6 @@ public class MsHTTPSamplerProxy extends MsTestElement {
     @JSONField(ordinal = 34)
     private List<KeyValue> arguments;
 
-    @JSONField(ordinal = 35)
-    private Object requestResult;
-
     @JSONField(ordinal = 36)
     private MsAuthManager authManager;
 

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -329,7 +329,7 @@ public List<ChartsData> getResponseCodeChartData(String id) {
     public void downloadJtlZip(String reportId, HttpServletResponse response) {
         LoadTestReportWithBLOBs report = getReport(reportId);
         if (StringUtils.isBlank(report.getFileId())) {
-            throw new RuntimeException(Translator.get("load_test_report_file_not_exist"));
+            MSException.throwException(Translator.get("load_test_report_file_not_exist"));
         }
         response.setHeader("Content-Disposition", "attachment;fileName=" + reportId + ".zip");
         try (SqlSession sqlSession = sqlSessionFactory.openSession()) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -72,6 +72,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             processor.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);
         }
         processor.setProperty("MS-ID", this.getId());
+        processor.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         processor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJDBCPostProcessor.java
Patch:
@@ -244,6 +244,7 @@ private JDBCPostProcessor jdbcPostProcessor(ParameterConfig config) {
         jdbcPostProcessor.setProperty(TestElement.TEST_CLASS, JDBCPostProcessor.class.getName());
         jdbcPostProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPostProcessor.setProperty("MS-ID", this.getId());
+        jdbcPostProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPostProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJDBCPreProcessor.java
Patch:
@@ -244,6 +244,7 @@ private JDBCPreProcessor jdbcPreProcessor(ParameterConfig config) {
         jdbcPreProcessor.setProperty(TestElement.TEST_CLASS, JDBCPreProcessor.class.getName());
         jdbcPreProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         jdbcPreProcessor.setProperty("MS-ID", this.getId());
+        jdbcPreProcessor.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         jdbcPreProcessor.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDebugSampler.java
Patch:
@@ -17,7 +17,7 @@
 
 @Data
 @EqualsAndHashCode(callSuper = true)
-@JSONType(typeName = "TCPSampler")
+@JSONType(typeName = "DebugSampler")
 public class MsDebugSampler extends MsTestElement {
     @JSONField(ordinal = 40)
     private String type = "DebugSampler";

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -141,6 +141,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -185,6 +185,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         sampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
         sampler.setProperty("MS-ID", this.getId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -240,6 +240,7 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         sampler.setProperty(TestElement.TEST_CLASS, JDBCSampler.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         sampler.setProperty("MS-ID", this.getId());
+        sampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         sampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -204,6 +204,7 @@ private TCPSampler tcpSampler(ParameterConfig config) {
             tcpSampler.setName(this.getName() + DelimiterConstants.SEPARATOR.toString() + name);
         }
         tcpSampler.setProperty("MS-ID", this.getId());
+        tcpSampler.setProperty("MS-RESOURCE-ID", this.getResourceId());
         List<String> id_names = new LinkedList<>();
         this.getScenarioSet(this, id_names);
         tcpSampler.setProperty("MS-SCENARIO", JSON.toJSONString(id_names));

File: backend/src/main/java/io/metersphere/api/jmeter/RequestResult.java
Patch:
@@ -10,6 +10,9 @@ public class RequestResult {
     // 请求ID
     private String id;
 
+    // 步骤请求唯一ID
+    private String resourceId;
+
     private String name;
 
     private String url;

File: backend/src/main/java/io/metersphere/api/service/MsResultService.java
Patch:
@@ -125,6 +125,7 @@ public String getJmeterLogger(String testId, boolean removed) {
     public RequestResult getRequestResult(SampleResult result) {
         RequestResult requestResult = new RequestResult();
         requestResult.setId(result.getSamplerId());
+        requestResult.setResourceId(result.getResourceId());
         requestResult.setName(result.getSampleLabel());
         requestResult.setUrl(result.getUrlAsString());
         requestResult.setMethod(getMethod(result));

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -339,7 +339,8 @@ public int deleteNode(List<String> nodeIds) {
         apiDefinitionExample.createCriteria().andModuleIdIn(nodeIds);
         apiDefinitionExample.setOperator(SessionUtils.getUserId());
         apiDefinitionExample.setOperationTime(System.currentTimeMillis());
-        extApiDefinitionMapper.removeToGcByExample(apiDefinitionExample);   //  删除模块，则模块下的接口放入回收站
+        apiDefinitionService.removeToGcByExample(apiDefinitionExample);
+//        extApiDefinitionMapper.removeToGcByExample(apiDefinitionExample);   //  删除模块，则模块下的接口放入回收站
 
         ApiModuleExample apiDefinitionNodeExample = new ApiModuleExample();
         apiDefinitionNodeExample.createCriteria().andIdIn(nodeIds);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -814,6 +814,7 @@ public List<String> reduction(ApiTestBatchRequest request) {
             cannotReductionApiCaseList.stream().map(ApiTestCaseDTO::getId).collect(Collectors.toList());
             List<String> deleteIds = ids.stream().filter(id -> !cannotReductionCaseId.contains(id)).collect(Collectors.toList());
             if(CollectionUtils.isNotEmpty(deleteIds)){
+                extApiTestCaseMapper.checkOriginalStatusByIds(deleteIds);
                 extApiTestCaseMapper.reduction(deleteIds);
             }
         }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -42,6 +42,7 @@ public interface ExtApiTestCaseMapper {
     int deleteToGc(ApiTestCaseRequest request);
 
     int reduction(@Param("ids") List<String> ids);
+    void checkOriginalStatusByIds(@Param("ids") List<String> ids);
 
     List<ApiTestCaseDTO> getCannotReductionApiCaseList(@Param("ids") List<String> ids);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -105,5 +105,5 @@ public interface ExtTestCaseMapper {
     int deleteToGc(@Param("request") TestCase testCase);
     int reduction(@Param("ids") List<String> ids);
 
-    void refreshOriginalStatusByIds(@Param("ids") List<String> ids);
+    void checkOriginalStatusByIds(@Param("ids") List<String> ids);
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1512,7 +1512,7 @@ public String getLogDetails(List<String> ids) {
     public void reduction(TestCaseBatchRequest request) {
         TestCaseExample example = this.getBatchExample(request);
         if(CollectionUtils.isNotEmpty(request.getIds())){
-            extTestCaseMapper.refreshOriginalStatusByIds(request.getIds());
+            extTestCaseMapper.checkOriginalStatusByIds(request.getIds());
             extTestCaseMapper.reduction(request.getIds());
         }
     }

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -27,11 +27,12 @@ public JavaMailSenderImpl getMailSender() {
         javaMailSender.setDefaultEncoding("UTF-8");
         javaMailSender.setProtocol("smtp");
         props.put("mail.smtp.auth", "true");
-
+        String smtpHost = "";
         for (SystemParameter p : paramList) {
             switch (p.getParamKey()) {
                 case "smtp.host":
                     javaMailSender.setHost(p.getParamValue());
+                    smtpHost = p.getParamValue();
                     break;
                 case "smtp.port":
                     javaMailSender.setPort(Integer.parseInt(p.getParamValue()));
@@ -52,6 +53,7 @@ public JavaMailSenderImpl getMailSender() {
                     String result = BooleanUtils.toString(BooleanUtils.toBoolean(p.getParamValue()), "true", "false");
                     props.put("mail.smtp.starttls.enable", result);
                     props.put("mail.smtp.starttls.required", result);
+                    props.put("mail.smtp.ssl.trust", smtpHost);
                     break;
              /*   case "smtp.anon":
                     boolean isAnon = BooleanUtils.toBoolean(p.getParamValue());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -101,6 +101,9 @@ public void saveApiResult(TestResult result, String type, String triggerMode) {
                         apiTestCaseWithBLOBs.setId(saveResult.getResourceId());
                         apiTestCaseWithBLOBs.setLastResultId(saveResult.getId());
 
+                        if (StringUtils.isNotEmpty(saveResult.getTriggerMode()) && saveResult.getTriggerMode().equals("CASE")) {
+                            saveResult.setTriggerMode(TriggerMode.MANUAL.name());
+                        }
                         apiTestCaseMapper.updateByPrimaryKeySelective(apiTestCaseWithBLOBs);
                         if (!saved) {
                             definitionExecResultMapper.insert(saveResult);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -19,4 +19,6 @@ public interface ExtProjectMapper {
     String getSystemIdByProjectId(String projectId);
 
     List<String> getProjectIds();
+
+    String getMaxSystemId();
 }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -93,13 +93,12 @@ public ApiTestCaseWithBLOBs getInfoJenkins(String id) {
 
     public List<ApiTestCaseResult> list(ApiTestCaseRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
-        if (request.getModuleIds() == null) {
+        if (request.getModuleIds() == null && request.getModuleId() != null) {
             List<String> moduleIds = new ArrayList<>();
             moduleIds.add(request.getModuleId());
             request.setModuleIds(moduleIds);
         }
         List<ApiTestCaseResult> returnList = extApiTestCaseMapper.list(request);
-
         for (ApiTestCaseResult res : returnList) {
             if (StringUtils.equalsIgnoreCase(res.getApiMethod(), "esb")) {
                 esbApiParamService.handleApiEsbParams(res);

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -54,7 +54,6 @@ public class ScheduleService {
 
     public void addSchedule(Schedule schedule) {
         schedule.setId(UUID.randomUUID().toString());
-        schedule.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
         schedule.setCreateTime(System.currentTimeMillis());
         schedule.setUpdateTime(System.currentTimeMillis());
         scheduleMapper.insert(schedule);
@@ -149,6 +148,8 @@ public Schedule buildApiTestSchedule(ScheduleRequest request) {
         schedule.setValue(request.getValue().trim());
         schedule.setKey(request.getResourceId());
         schedule.setUserId(SessionUtils.getUser().getId());
+        schedule.setProjectId(request.getProjectId());
+        schedule.setWorkspaceId(request.getWorkspaceId());
         return schedule;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -325,7 +325,7 @@ private ApiTestCase createTest(SaveApiTestCaseRequest request) {
         return test;
     }
 
-    private int getNextNum(String definitionId) {
+    public int getNextNum(String definitionId) {
         ApiTestCase apiTestCase = extApiTestCaseMapper.getNextNum(definitionId);
         if (apiTestCase == null) {
             int n = apiDefinitionMapper.selectByPrimaryKey(definitionId).getNum();

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -159,7 +159,6 @@ public List<DemandDTO> getDemandList(String projectId) {
             }
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
-            MSException.throwException("调用Jira查询需求失败");
         }
 
         return list;

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -292,7 +292,7 @@ public void deleteCaseReview(String reviewId) {
         // 发送通知
         try {
             List<String> userIds = new ArrayList<>();
-            userIds.add(SessionUtils.getUser().getId());
+            userIds.add(testCaseReview.getCreator());
             SaveTestCaseReviewRequest testCaseReviewRequest = new SaveTestCaseReviewRequest();
             BeanUtils.copyProperties(testCaseReviewRequest, testCaseReview);
             String context = getReviewContext(testCaseReviewRequest, NoticeConstants.Event.DELETE);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -207,6 +207,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, Pa
                     csvDataSet.setProperty("shareMode", shareMode);
                     csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
+                    csvDataSet.setProperty("quotedData", item.isQuotedData());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());
                     tree.add(csvDataSet);
                 });

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/ScenarioVariable.java
Patch:
@@ -27,6 +27,7 @@ public class ScenarioVariable {
      */
     private List<BodyFile> files;
     private String delimiter;
+    private boolean quotedData;
     private String encoding;
     /**
      * counter

File: backend/src/main/java/org/apache/jmeter/assertions/JSONPathAssertion.java
Patch:
@@ -172,7 +172,7 @@ private boolean isEquals(Object subj) {
                         refFlag = str.equals(getExpectedValue());
                         break;
                     case "NOT_EQUALS":
-                        refFlag = !str.contains(getExpectedValue());
+                        refFlag = !str.equals(getExpectedValue());
                         break;
                 }
                 return refFlag;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -256,7 +256,7 @@ public TestCaseWithBLOBs saveTestCase(@RequestBody TestCaseWithBLOBs testCaseWit
 
     @PostMapping("/minder/edit")
     @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ_EDIT)
-    @MsAuditLog(module = "track_test_case", type = OperLogConstants.BATCH_UPDATE, project = "#request.projectId", beforeEvent = "#msClass.getLogDetails(#request.ids)", content = "#msClass.getLogDetails(#request.ids)", msClass = TestCaseService.class)
+    @MsAuditLog(module = "track_test_case", type = OperLogConstants.BATCH_UPDATE, project = "#request.projectId", beforeEvent = "#msClass.getCaseLogDetails(#request)", content = "#msClass.getCaseLogDetails(#request)", msClass = TestCaseService.class)
     public void minderEdit(@RequestBody TestCaseMinderEditRequest request) {
         testCaseService.minderEdit(request);
     }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseDemandController.java
Patch:
@@ -14,10 +14,10 @@
 @RestController
 public class TestCaseDemandController {
     @Resource
-    private DemandService DemandService;
+    private DemandService demandService;
 
     @GetMapping("/list/{projectId}")
     public List<DemandDTO> getDemandList(@PathVariable String projectId) {
-        return DemandService.getDemandList(projectId);
+        return demandService.getDemandList(projectId);
     }
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -701,7 +701,7 @@ public void testCaseTemplateExport(String projectId,String importType,HttpServle
 
             List<List<String>> headList = testCaseExcelData.getHead(importFileNeedNum,customFields);
             EasyExcelExporter easyExcelExporter = new EasyExcelExporter(testCaseExcelData.getClass());
-            FunctionCaseTemplateWriteHandler handler = new FunctionCaseTemplateWriteHandler(importFileNeedNum);
+            FunctionCaseTemplateWriteHandler handler = new FunctionCaseTemplateWriteHandler(importFileNeedNum,headList);
             easyExcelExporter.exportByCustomWriteHandler(response,headList, generateExportDatas(importFileNeedNum),
                     Translator.get("test_case_import_template_name"), Translator.get("test_case_import_template_sheet"), handler);
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1004,6 +1004,9 @@ public String modeRun(RunScenarioRequest request) {
 
         if (request.getConfig() != null && StringUtils.equals(request.getConfig().getReportType(), RunModeConstants.SET_REPORT.toString()) && StringUtils.isNotEmpty(request.getConfig().getReportName())) {
             request.getConfig().setReportId(UUID.randomUUID().toString());
+            if (CollectionUtils.isNotEmpty(scenarioIds) && scenarioIds.size() > 100) {
+                scenarioIds = scenarioIds.subList(0, 100);
+            }
             APIScenarioReportResult report = createScenarioReport(request.getConfig().getReportId(), JSON.toJSONString(scenarioIds), scenarioNames.deleteCharAt(scenarioNames.toString().length() - 1).toString(), ReportTriggerMode.MANUAL.name(),
                     ExecuteType.Saved.name(), request.getProjectId(), request.getReportUserID(), request.getConfig());
             report.setName(request.getConfig().getReportName());

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -111,6 +111,7 @@ public void editTestCase(TestPlanTestCaseWithBLOBs testPlanTestCase) {
         }
         testPlanTestCase.setExecutor(SessionUtils.getUser().getId());
         testPlanTestCase.setUpdateTime(System.currentTimeMillis());
+        testPlanTestCase.setRemark(null);
         testPlanTestCaseMapper.updateByPrimaryKeySelective(testPlanTestCase);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseRequest.java
Patch:
@@ -22,6 +22,7 @@ public class ApiTestCaseRequest extends BaseQueryRequest {
     private String apiDefinitionId;
     private String status;
     private String protocol;
+    private String moduleId;
     private List<String> moduleIds;
     private List<OrderRequest> orders;
     private Map<String, List<String>> filters;

File: backend/src/main/java/io/metersphere/job/sechedule/IssuesJob.java
Patch:
@@ -24,7 +24,7 @@ public class IssuesJob {
     @Resource
     private TestPlanTestCaseService testPlanTestCaseService;
 
-    @QuartzScheduled(fixedDelay = 3600 * 1000)
+    //@QuartzScheduled(fixedDelay = 3600 * 1000)
 //    @Scheduled(fixedDelay = 120 * 1000)
     public void issuesCount() {
         LogUtil.info("测试计划-测试用例同步缺陷信息开始");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1078,7 +1078,7 @@ public String save(EditTestCaseRequest request, List<MultipartFile> files) {
             TestCaseTest test = new TestCaseTest();
             selecteds.forEach(id -> {
                 test.setTestType(id.get(0));
-                test.setTestId(id.get(1));
+                test.setTestId(id.get(id.size() - 1));
                 test.setTestCaseId(request.getId());
                 test.setCreateTime(System.currentTimeMillis());
                 test.setUpdateTime(System.currentTimeMillis());
@@ -1125,7 +1125,7 @@ public String edit(EditTestCaseRequest request, List<MultipartFile> files) {
             TestCaseTest test = new TestCaseTest();
             selecteds.forEach(id -> {
                 test.setTestType(id.get(0));
-                test.setTestId(id.get(1));
+                test.setTestId(id.get(id.size() - 1));
                 test.setCreateTime(System.currentTimeMillis());
                 test.setUpdateTime(System.currentTimeMillis());
                 test.setTestCaseId(request.getId());

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -286,6 +286,9 @@ private void splitCsvFile(Node item) {
         int resourceIndex = context.getResourceIndex();
         String filename = item.getTextContent();
         byte[] content = context.getTestResourceFiles().get(filename);
+        if (content == null) {
+            return;
+        }
         StringTokenizer tokenizer = new StringTokenizer(new String(content), "\n");
         if (!tokenizer.hasMoreTokens()) {
             return;

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -15,6 +15,7 @@ public class ApiScenarioDTO extends ApiScenarioWithBLOBs {
     private List<String> tagNames;
     private String deleteUser;
     private Long deleteTime;
+    private String principalName;
 
     /**
      * 场景跨项目ID

File: backend/src/main/java/io/metersphere/controller/GroupController.java
Patch:
@@ -82,7 +82,6 @@ public List<Map<String, Object>> getAllUserGroup(@PathVariable("userId") String
     }
 
     @PostMapping("/list")
-    @RequiresPermissions(PermissionConstants.SYSTEM_GROUP_READ)
     public List<Group> getGroupsByType(@RequestBody GroupRequest request) {
         return groupService.getGroupsByType(request);
     }

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -52,6 +52,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
 
         initOperate(apiAutomationService::checkApiScenarioUseUrl, "init.scenario.url");
         initOperate(issuesService::syncThirdPartyIssues, "init.issue");
+        initOperate(issuesService::issuesCount, "init.issueCount");
 
         try {
             Thread.sleep(1 * 60 * 1000);

File: backend/src/main/java/io/metersphere/track/service/TestCaseIssueService.java
Patch:
@@ -31,6 +31,7 @@ public class TestCaseIssueService {
     @Resource
     private IssuesMapper issuesMapper;
 
+
     public void delTestCaseIssues(String testCaseId) {
         TestCaseIssuesExample example = new TestCaseIssuesExample();
         example.createCriteria().andTestCaseIdEqualTo(testCaseId);

File: backend/src/main/java/io/metersphere/commons/json/JSONSchemaGenerator.java
Patch:
@@ -323,7 +323,7 @@ public static String getJson(String jsonSchema) {
                 JSONObject root = new JSONObject();
                 generator(jsonSchema, root);
                 // 格式化返回
-                Gson gson = new GsonBuilder().serializeNulls().setPrettyPrinting().create();
+                Gson gson = new GsonBuilder().serializeNulls().setPrettyPrinting().disableHtmlEscaping().create();
                 if (root.get("MS-OBJECT") != null) {
                     return gson.toJson(root.get("MS-OBJECT"));
                 }

File: backend/src/main/java/io/metersphere/job/sechedule/IssuesJob.java
Patch:
@@ -47,7 +47,7 @@ public void issuesCount() {
                 }
             });
         }
-        LogUtil.info("测试计划-测试用例同步缺陷信息开始");
+        LogUtil.info("测试计划-测试用例同步缺陷信息结束");
     }
 }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -741,7 +741,7 @@ private List<TestCaseExcelData> generateExportTemplate() {
             data.setPrerequisite(Translator.get("preconditions_optional"));
             data.setStepDesc("1. " + Translator.get("step_tip_separate") +
                     "\n2. " + Translator.get("step_tip_order") + "\n3. " + Translator.get("step_tip_optional"));
-            data.setStepResult("1. " + Translator.get("step_tip_order") + "\n2. " + Translator.get("result_tip_order") + "\n3. " + Translator.get("result_tip_optional"));
+            data.setStepResult("1. " + Translator.get("result_tip_separate") + "\n2. " + Translator.get("result_tip_order") + "\n3. " + Translator.get("result_tip_optional"));
             data.setMaintainer(user.getId());
             data.setRemark(Translator.get("remark_optional"));
             list.add(data);
@@ -840,8 +840,8 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
                     if (CollectionUtils.isNotEmpty(jsonArray)) {
                         for (int j = 0; j < jsonArray.size(); j++) {
                             int num = j + 1;
-                            step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\r\n");
-                            result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\r\n");
+                            step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\n");
+                            result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\n");
 
                         }
                     }

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -111,15 +111,15 @@ public Project addProject(Project project) {
         // 创建项目为当前用户添加用户组
         UserGroup userGroup = new UserGroup();
         userGroup.setId(UUID.randomUUID().toString());
-        userGroup.setUserId(project.getCreateUser());
+        userGroup.setUserId(SessionUtils.getUserId());
         userGroup.setCreateTime(System.currentTimeMillis());
         userGroup.setUpdateTime(System.currentTimeMillis());
         userGroup.setGroupId(UserGroupConstants.PROJECT_ADMIN);
         userGroup.setSourceId(project.getId());
         userGroupMapper.insert(userGroup);
 
         // 创建新项目检查当前用户 last_project_id
-        extUserMapper.updateLastProjectIdIfNull(project.getId(), project.getCreateUser());
+        extUserMapper.updateLastProjectIdIfNull(project.getId(), SessionUtils.getUserId());
 
         return project;
     }

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -51,7 +51,7 @@ public JiraAddIssueResponse addIssue(String body) {
 
     public void auth() {
         try {
-            restTemplate.exchange(getBaseUrl() + "/permissions", HttpMethod.GET, getAuthHttpEntity(), String.class);
+            restTemplate.exchange(getBaseUrl() + "/myself", HttpMethod.GET, getAuthHttpEntity(), String.class);
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
             MSException.throwException(e.getMessage());

File: backend/src/main/java/io/metersphere/dto/CustomFieldItemDTO.java
Patch:
@@ -7,5 +7,6 @@ public class CustomFieldItemDTO {
     private String id;
     private String name;
     private String value;
+    private String type;
     private String customData;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -330,7 +330,7 @@ private boolean isCustomNumExist(ApiScenarioWithBLOBs blobs) {
 
     private int getNextNum(String projectId) {
         ApiScenario apiScenario = extApiScenarioMapper.getNextNum(projectId);
-        if (apiScenario == null) {
+        if (apiScenario == null || apiScenario.getNum() == null) {
             return 100001;
         } else {
             return Optional.of(apiScenario.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -361,7 +361,7 @@ private ApiDefinitionWithBLOBs createTest(SaveApiDefinitionRequest request) {
 
     private int getNextNum(String projectId) {
         ApiDefinition apiDefinition = extApiDefinitionMapper.getNextNum(projectId);
-        if (apiDefinition == null) {
+        if (apiDefinition == null || apiDefinition.getNum() == null) {
             return 100001;
         } else {
             return Optional.of(apiDefinition.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -64,7 +64,7 @@ public class HistoricalDataUpgradeService {
 
     private int getNextNum(String projectId) {
         ApiScenario apiScenario = extApiScenarioMapper.getNextNum(projectId);
-        if (apiScenario == null) {
+        if (apiScenario == null || apiScenario.getNum() == null) {
             return 100001;
         } else {
             return Optional.of(apiScenario.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -589,7 +589,7 @@ public List<LoadTest> getLoadTestListByIds(List<String> ids) {
 
     private int getNextNum(String projectId) {
         LoadTest loadTest = extLoadTestMapper.getNextNum(projectId);
-        if (loadTest == null) {
+        if (loadTest == null || loadTest.getNum() == null) {
             return 100001;
         } else {
             return Optional.of(loadTest.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -984,7 +984,7 @@ public void checkIsRelateTest(String testId) {
      */
     private int getNextNum(String projectId) {
         TestCase testCase = extTestCaseMapper.getMaxNumByProjectId(projectId);
-        if (testCase == null) {
+        if (testCase == null || testCase.getNum() == null) {
             return 100001;
         } else {
             return Optional.ofNullable(testCase.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -61,6 +61,7 @@ private void addRequestExtractors(HashTree samplerHashTree, ParameterConfig conf
             shell.setName(StringUtils.isEmpty(this.getName()) ? "JSR223PostProcessor" : this.getName());
             shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
             shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
+            shell.setProperty("cacheKey", false);
             shell.setProperty("script", "io.metersphere.api.jmeter.JMeterVars.addVars(prev.hashCode(),vars," + "\"" + extract.toString() + "\"" + ");");
             samplerHashTree.add(shell);
         }

File: backend/src/main/java/io/metersphere/track/controller/IssuesController.java
Patch:
@@ -54,9 +54,9 @@ public List<IssuesDao> getIssues(@PathVariable String id) {
         return issuesService.getIssues(id);
     }
 
-    @GetMapping("/auth/{platform}")
-    public void testAuth(@PathVariable String platform) {
-        issuesService.testAuth(platform);
+    @GetMapping("/auth/{orgId}/{platform}")
+    public void testAuth(@PathVariable String orgId, @PathVariable String platform) {
+        issuesService.testAuth(orgId, platform);
     }
 
     @GetMapping("/close/{id}")

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -152,14 +152,15 @@ public Pager<List<Project>> getProjectByPlanId(@PathVariable int goPage, @PathVa
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testPlanProjectService.getProjectByPlanId(request));
     }
+
     @PostMapping("/testplan/jenkins")
-    public void  runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
+    public String runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         ApiRunConfigDTO api = new ApiRunConfigDTO();
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
         api.setOnSampleError(true);
         api.setReportType("iddReport");
         String apiRunConfig = JSONObject.toJSONString(api);
-        testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
+        return testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
     }
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1054,6 +1054,7 @@ public String save(EditTestCaseRequest request, List<MultipartFile> files) {
 
     public String edit(EditTestCaseRequest request, List<MultipartFile> files) {
         TestCaseWithBLOBs testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(request.getId());
+        request.setNum(testCaseWithBLOBs.getNum());
         if (testCaseWithBLOBs == null) {
             MSException.throwException(Translator.get("edit_load_test_not_found") + request.getId());
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -1000,7 +1000,7 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
         return returnId;
     }
 
-    public void run(String testPlanID, String projectID, String userId, String triggerMode, String apiRunConfig) {
+    public String run(String testPlanID, String projectID, String userId, String triggerMode, String apiRunConfig) {
         Map<String, String> planScenarioIdMap;
         Map<String, String> apiTestCaseIdMap;
         Map<String, String> performanceIdMap;
@@ -1160,6 +1160,7 @@ public void run(String testPlanID, String projectID, String userId, String trigg
             testPlanReport.setIsPerformanceExecuting(performaceIsExcuting);
             testPlanReportService.update(testPlanReport);
         }
+        return testPlanReport.getId();
     }
 
     public String getLogDetails(String id) {

File: backend/src/main/java/io/metersphere/track/service/utils/ParallelExecTask.java
Patch:
@@ -30,6 +30,7 @@ public T call() {
             TestPlanLoadCase testPlanLoadCase = new TestPlanLoadCase();
             testPlanLoadCase.setId(request.getTestPlanLoadId());
             testPlanLoadCase.setLoadReportId(reportId);
+            testPlanLoadCase.setStatus("run");
             testPlanLoadCaseMapper.updateByPrimaryKeySelective(testPlanLoadCase);
             return (T) reportId;
 

File: backend/src/main/java/io/metersphere/track/service/utils/SerialExecTask.java
Patch:
@@ -38,6 +38,7 @@ public T call() {
             TestPlanLoadCase testPlanLoadCase = new TestPlanLoadCase();
             testPlanLoadCase.setId(request.getTestPlanLoadId());
             testPlanLoadCase.setLoadReportId(reportId);
+            testPlanLoadCase.setStatus("run");
             testPlanLoadCaseMapper.updateByPrimaryKeySelective(testPlanLoadCase);
             LoadTestReportWithBLOBs report = null;
             // 轮询查看报告状态，最多200次，防止死循环

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -106,7 +106,9 @@ private LoopController initLoopController() {
         loopController.setProperty(TestElement.TEST_CLASS, LoopController.class.getName());
         loopController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("LoopControlPanel"));
         loopController.setLoops(countController.getLoops());
-        loopController.setContinueForever(false);
+        if (countController.getLoops() > 0) {
+            loopController.setContinueForever(true);
+        }
         return loopController;
     }
 

File: backend/src/main/java/io/metersphere/track/controller/TestPlanReportController.java
Patch:
@@ -71,7 +71,7 @@ public void apiExecuteFinish(@PathVariable String planId,@PathVariable String us
         String reportId = UUID.randomUUID().toString();
         TestPlanReportSaveRequest saveRequest = new TestPlanReportSaveRequest(reportId,planId,userId,ReportTriggerMode.API.name());
         TestPlanReport report = testPlanReportService.genTestPlanReport(saveRequest);
-        testPlanReportService.countReportByTestPlanReportId(report.getId(),null, ReportTriggerMode.API.name());
+        testPlanReportService.countReportByTestPlanReportId(report.getId(),null, ReportTriggerMode.API.name(),null);
     }
 
     @GetMapping("/saveTestPlanReport/{planId}/{triggerMode}")
@@ -80,7 +80,7 @@ public String saveTestPlanReport(@PathVariable String planId,@PathVariable Strin
         String reportId = UUID.randomUUID().toString();
         TestPlanReportSaveRequest saveRequest = new TestPlanReportSaveRequest(reportId,planId,userId,triggerMode);
         TestPlanReport report = testPlanReportService.genTestPlanReport(saveRequest);
-        testPlanReportService.countReportByTestPlanReportId(report.getId(),null, triggerMode);
+        testPlanReportService.countReportByTestPlanReportId(report.getId(),null, triggerMode,null);
         return "success";
     }
 }

File: backend/src/main/java/io/metersphere/track/dto/TestCaseReportAdvanceStatusResultDTO.java
Patch:
@@ -12,5 +12,6 @@ public class TestCaseReportAdvanceStatusResultDTO {
     private List<TestCaseReportStatusResultDTO> apiResult;
     private List<TestCaseReportStatusResultDTO> scenarioResult;
     private List<TestCaseReportStatusResultDTO> loadResult;
+    private List<String> executedScenarioIds;
 }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/RunDefinitionRequest.java
Patch:
@@ -17,6 +17,8 @@ public class RunDefinitionRequest {
 
     private String reportId;
 
+    private boolean saved;
+
     private String requestId;
 
     private String name;

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -339,7 +339,7 @@ private String addResult(BatchRunDefinitionRequest request, TestPlanApiCase key)
         if (caseWithBLOBs != null) {
             apiResult.setName(caseWithBLOBs.getName());
         }
-        apiResult.setTriggerMode(TriggerMode.MANUAL.name());
+        apiResult.setTriggerMode(TriggerMode.BATCH.name());
         apiResult.setActuator("LOCAL");
         if (request.getConfig() != null && StringUtils.isNotEmpty(request.getConfig().getResourcePoolId())) {
             apiResult.setActuator(request.getConfig().getResourcePoolId());
@@ -368,8 +368,8 @@ public String modeRun(BatchRunDefinitionRequest request) {
                 public void run() {
                     for (TestPlanApiCase key : planApiCases) {
                         try {
-                            RunModeDataDTO modeDataDTO = null;
-                            if (StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
+                            RunModeDataDTO modeDataDTO;
+                            if (request.getConfig()!= null && StringUtils.isNotBlank(request.getConfig().getResourcePoolId())) {
                                 modeDataDTO = new RunModeDataDTO(key.getId(), UUID.randomUUID().toString());
                             } else {
                                 // 生成报告和HashTree

File: backend/src/main/java/io/metersphere/job/sechedule/IssuesJob.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.job.sechedule;
 
+import com.alibaba.fastjson.JSON;
 import com.fit2cloud.quartz.anno.QuartzScheduled;
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
@@ -34,7 +35,7 @@ public void IssuesCount() {
                 try {
                     List<IssuesDao> issues = issuesService.getIssues(l.getCaseId());
                     int issuesCount = issues.size();
-                    testPlanTestCaseService.updateIssues(issuesCount, l.getPlanId(), l.getCaseId(), issues.toString());
+                    testPlanTestCaseService.updateIssues(issuesCount, l.getPlanId(), l.getCaseId(), JSON.toJSONString(issues));
                 } catch (Exception e) {
                     LogUtil.error("定时任务处理bug数量报错planId: " + l.getPlanId(), e);
                 }

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -52,7 +52,7 @@ public JiraConfig getConfig(String orgId) {
         String config = getPlatformConfig(IssuesManagePlatform.Jira.toString());
         if (StringUtils.isNotBlank(config)) {
             jiraConfig = JSONObject.parseObject(config, JiraConfig.class);
-            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(orgId, SessionUtils.getUserId());
+            UserDTO.PlatformInfo userPlatInfo = getUserPlatInfo(orgId, userId);
             if (userPlatInfo != null && StringUtils.isNotBlank(userPlatInfo.getJiraAccount())
                     && StringUtils.isNotBlank(userPlatInfo.getJiraPassword())) {
                 jiraConfig.setAccount(userPlatInfo.getJiraAccount());

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesRequest.java
Patch:
@@ -14,6 +14,7 @@ public class IssuesRequest extends BaseQueryRequest {
     private String projectId;
     private String testCaseId;
     private List<String> tapdUsers;
+    private String userId;
     /**
      * zentao bug 处理人
      */

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenrioExportJmx.java
Patch:
@@ -12,7 +12,6 @@ public class ApiScenrioExportJmx {
     private String name;
     private String jmx;
     private Integer version;
-    List<String> files;
 
     //性能测试引用场景时需要场景下的附件
     private List<FileMetadata> fileMetadataList;

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -124,7 +124,7 @@ private List<ApiScenarioWithBLOBs> paseObj(MsScenario msScenario, ApiTestImportR
             }
         }
         ApiScenarioModule module = ApiScenarioImportUtil.buildModule(selectModule, msScenario.getName(), this.projectId);
-        scenarioWithBLOBs.setName(msScenario.getName());
+        scenarioWithBLOBs.setName(request.getFileName());
         scenarioWithBLOBs.setProjectId(request.getProjectId());
         if (msScenario != null && CollectionUtils.isNotEmpty(msScenario.getHashTree())) {
             scenarioWithBLOBs.setStepTotal(msScenario.getHashTree().size());

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -280,6 +280,5 @@ public ApiScenrioExportResult export(@RequestBody ApiScenarioBatchRequest reques
     public List<ApiScenrioExportJmx> exportJmx(@RequestBody ApiScenarioBatchRequest request) {
         return apiAutomationService.exportJmx(request);
     }
-
 }
 

File: backend/src/main/java/io/metersphere/api/dto/JmxInfoDTO.java
Patch:
@@ -1,9 +1,10 @@
 package io.metersphere.api.dto;
 
-import lombok.AllArgsConstructor;
+import io.metersphere.base.domain.FileMetadata;
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
 import java.util.Map;
 
 /**
@@ -18,6 +19,7 @@ public class JmxInfoDTO {
     private String xml;
     private String id;
     private Map<String, String> attachFiles;
+    private List<FileMetadata> fileMetadataList;
 
     public JmxInfoDTO(String name,String xml,Map<String, String> attachFiles){
         this.name = name;

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -530,11 +530,13 @@ public JmxInfoDTO updateJmxString(String jmxString, String testNameParam, boolea
         //处理附件
         Map<String, String> attachmentFiles = new HashMap<>();
 
+        List<FileMetadata> fileMetadataList = new ArrayList<>();
         for (String filePath: attachmentFilePathList) {
             File file  = new File(filePath);
             if(file.exists() && file.isFile()){
                 try{
                     FileMetadata fileMetadata = fileService.saveFile(file,FileUtil.readAsByteArray(file));
+                    fileMetadataList.add(fileMetadata);
                     attachmentFiles.put(fileMetadata.getId(),fileMetadata.getName());
                 }catch (Exception e){
                     e.printStackTrace();
@@ -543,7 +545,7 @@ public JmxInfoDTO updateJmxString(String jmxString, String testNameParam, boolea
         }
 
         JmxInfoDTO returnDTO = new JmxInfoDTO("Demo.jmx",jmxString,attachmentFiles);
-
+        returnDTO.setFileMetadataList(fileMetadataList);
         return returnDTO;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1776,6 +1776,7 @@ public List<ApiScenrioExportJmx> exportJmx(ApiScenarioBatchRequest request) {
                         }
                     }
                     scenrioExportJmx.setVersion(item.getVersion());
+                    scenrioExportJmx.setFileMetadataList(dto.getFileMetadataList());
                     resList.add(scenrioExportJmx);
                 }
             }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -11,7 +11,6 @@
 import java.util.List;
 
 public interface ExtTestPlanTestCaseMapper {
-
     List<TestCaseReportStatusResultDTO> getReportMetric(@Param("planId") String planId);
 
     List<String> getExecutors(@Param("planId") String planId);
@@ -56,4 +55,6 @@ public interface ExtTestPlanTestCaseMapper {
     List<String> selectIds(@Param("request") TestPlanFuncCaseConditions conditions);
 
     List<String> selectIdsByQuery(@Param("request") BaseQueryRequest query);
+
+    void update(@Param("count") int count, @Param("id") String id, @Param("caseId") String caseId, @Param("issues") String issues);
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanCaseDTO.java
Patch:
@@ -22,6 +22,7 @@ public class TestPlanCaseDTO extends TestCaseWithBLOBs {
     private String projectName;
     private String actualResult;
     private String maintainerName;
+    private int issuesCount;
 
     private List<TestCaseTestDTO> list;
 }

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -181,8 +181,9 @@ public String getIssueTemplate(String projectId) {
     }
 
     public List<String> getPlatforms(Project project) {
-        SessionUser user = SessionUtils.getUser();
-        String orgId = user.getLastOrganizationId();
+        String workspaceId = project.getWorkspaceId();
+        Workspace workspace = workspaceMapper.selectByPrimaryKey(workspaceId);
+        String orgId = workspace.getOrganizationId();
         boolean tapd = isIntegratedPlatform(orgId, IssuesManagePlatform.Tapd.toString());
         boolean jira = isIntegratedPlatform(orgId, IssuesManagePlatform.Jira.toString());
         boolean zentao = isIntegratedPlatform(orgId, IssuesManagePlatform.Zentao.toString());

File: backend/src/main/java/io/metersphere/notice/sender/AbstractNoticeSender.java
Patch:
@@ -96,7 +96,7 @@ protected String getContent(String template, Map<String, Object> context) {
                 if (context.get(k) != null) {
                     template = RegExUtils.replaceAll(template, "\\$\\{" + k + "}", context.get(k).toString());
                 } else {
-                    template = RegExUtils.replaceAll(template, "\\$\\{" + k + "}", "未设置");
+                    template = RegExUtils.replaceAll(template, "\\$\\{" + k + "}", "");
                 }
             }
         }

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -33,7 +33,8 @@ private void updateLoadCaseStatus(LoadTestReport loadTestReport) {
     @Override
     public void execute(LoadTestReport loadTestReport) {
         if (StringUtils.equals(ReportTriggerMode.CASE.name(), loadTestReport.getTriggerMode())
-                || StringUtils.equals(ReportTriggerMode.TEST_PLAN_SCHEDULE.name(), loadTestReport.getTriggerMode())) {
+                || StringUtils.equals(ReportTriggerMode.TEST_PLAN_SCHEDULE.name(), loadTestReport.getTriggerMode())
+                || StringUtils.equals(ReportTriggerMode.TEST_PLAN_API.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),
                     PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
                 updateLoadCaseStatus(loadTestReport);

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -35,7 +35,7 @@ public class TestCaseExcelDataCn extends TestCaseExcelData {
     private String nodePath;
 
     @NotBlank(message = "{cannot_be_null}")
-    @ExcelProperty("维护人")
+    @ExcelProperty(value = "责任人")
     private String maintainer;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -84,7 +84,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             processor.setProperty("scriptLanguage", "nashorn");
         }
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("rhinoScript")) {
-            processor.setProperty("scriptLanguage", "javascript");
+            processor.setProperty("scriptLanguage", "rhino");
         }
         processor.setProperty("script", this.getScript());
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -71,7 +71,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             processor.setProperty("scriptLanguage", "nashorn");
         }
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("rhinoScript")) {
-            processor.setProperty("scriptLanguage", "javascript");
+            processor.setProperty("scriptLanguage", "rhino");
         }
         processor.setProperty("script", this.getScript());
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -81,7 +81,7 @@ public JSR223PreProcessor getJSR223PreProcessor() {
             processor.setProperty("scriptLanguage", "nashorn");
         }
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("rhinoScript")) {
-            processor.setProperty("scriptLanguage", "javascript");
+            processor.setProperty("scriptLanguage", "rhino");
         }
 
         processor.setProperty("script", this.getScript());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -62,7 +62,7 @@ public class MsScenario extends MsTestElement {
     private Map<String, String> environmentMap;
 
     @JSONField(ordinal = 24)
-    private boolean onSampleError;
+    private Boolean onSampleError;
 
     private static final String BODY_FILE_DIR = FileUtils.BODY_FILE_DIR;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -21,7 +21,7 @@
 public class MsThreadGroup extends MsTestElement {
     private String type = "ThreadGroup";
     private boolean enableCookieShare;
-    private boolean onSampleError;
+    private Boolean onSampleError;
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
@@ -66,7 +66,7 @@ public ThreadGroup getThreadGroup() {
         threadGroup.setDuration(0);
         threadGroup.setProperty(ThreadGroup.ON_SAMPLE_ERROR, ThreadGroup.ON_SAMPLE_ERROR_CONTINUE);
         threadGroup.setScheduler(false);
-        if (!onSampleError) {
+        if (onSampleError != null && !onSampleError) {
             threadGroup.setProperty("ThreadGroup.on_sample_error", "stoptest");
         }
         threadGroup.setSamplerController(loopController);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -33,7 +33,7 @@ public class ParameterConfig {
     /**
      * 是否停止继续
      */
-    private boolean onSampleError;
+    private Boolean onSampleError;
 
     /**
      * 是否是导入/导出操作
@@ -62,4 +62,4 @@ static public Arguments valueSupposeMock(Arguments arguments) {
         return arguments;
     }
 
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -969,7 +969,7 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             JSONObject element = JSON.parseObject(item.getScenarioDefinition());
             MsScenario scenario = JSONObject.parseObject(item.getScenarioDefinition(), MsScenario.class);
-            group.setOnSampleError(scenario.isOnSampleError());
+            group.setOnSampleError(scenario.getOnSampleError());
             // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
             if (element != null && StringUtils.isNotEmpty(element.getString("hashTree"))) {
                 LinkedList<MsTestElement> elements = mapper.readValue(element.getString("hashTree"),

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -298,7 +298,9 @@ private void checkScenarioNum(SaveApiScenarioRequest request) {
 
     private void checkCustomNumExist(SaveApiScenarioRequest request) {
         ApiScenarioExample example = new ApiScenarioExample();
-        example.createCriteria().andCustomNumEqualTo(request.getCustomNum())
+        example.createCriteria()
+                .andCustomNumEqualTo(request.getCustomNum())
+                .andProjectIdEqualTo(request.getProjectId())
                 .andIdNotEqualTo(request.getId());
         List<ApiScenario> list = apiScenarioMapper.selectByExample(example);
         if (CollectionUtils.isNotEmpty(list)) {

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -166,7 +166,7 @@ private String getResponseBodyType(Operation operation) {
 
     private void parsePathParameters(Parameter parameter, List<KeyValue> rests) {
         PathParameter pathParameter = (PathParameter) parameter;
-        rests.add(new KeyValue(pathParameter.getName(), "", getDefaultStringValue(parameter.getDescription())));
+        rests.add(new KeyValue(pathParameter.getName(), "", getDefaultStringValue(parameter.getDescription()), pathParameter.getRequired()));
     }
 
     private String getDefaultStringValue(String val) {

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -49,7 +49,5 @@ public class ApiScenario implements Serializable {
 
     private String createUser;
 
-    private Integer version;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -975,7 +975,7 @@ public void switchSchedule(Schedule request) {
     //删除
     public void deleteSchedule(ScheduleRequest request) {
         swaggerUrlProjectMapper.deleteByPrimaryKey(request.getId());
-        scheduleService.deleteByResourceId(request.getTaskId(), ScheduleGroup.SWAGGER_IMPORT.name());
+        scheduleService.deleteByResourceId(request.getId(), ScheduleGroup.SWAGGER_IMPORT.name());
     }
 
     //查询swaggerUrl详情

File: backend/src/main/java/io/metersphere/base/domain/TestCaseComment.java
Patch:
@@ -15,6 +15,8 @@ public class TestCaseComment implements Serializable {
 
     private Long updateTime;
 
+    private String status;
+
     private String description;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/commons/constants/TestCaseReviewStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum TestCaseReviewStatus {
-    Prepare, Underway, Completed
+    Prepare, Underway, Completed, Finished
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -55,12 +55,13 @@ public void saveComment(SaveCommentRequest request) {
         testCaseComment.setCreateTime(System.currentTimeMillis());
         testCaseComment.setUpdateTime(System.currentTimeMillis());
         testCaseComment.setDescription(request.getDescription());
+        testCaseComment.setStatus(request.getStatus());
         testCaseCommentMapper.insert(testCaseComment);
         TestCaseWithBLOBs testCaseWithBLOBs;
         testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(request.getCaseId());
 
         // 发送通知
-        User user = userMapper.selectByPrimaryKey(testCaseWithBLOBs.getMaintainer());
+        User user = userMapper.selectByPrimaryKey(testCaseComment.getAuthor());
         BaseSystemConfigDTO baseSystemConfigDTO = systemParameterService.getBaseInfo();
         List<String> userIds = new ArrayList<>();
         userIds.add(testCaseWithBLOBs.getMaintainer());//用例维护人

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -342,7 +342,7 @@ private String getTestPlanReportStatus(TestPlanReport testPlanReport, TestPlanRe
             if (testPlanReport.getIsApiCaseExecuting() || testPlanReport.getIsPerformanceExecuting() || testPlanReport.getIsScenarioExecuting()) {
                 status = TestPlanReportStatus.RUNNING.name();
             } else {
-                if (testPlanReportData == null) {
+                if (testPlanReportData != null) {
                     String failCaseString = testPlanReportData.getFailurTestCases();
                     status = TestPlanReportStatus.SUCCESS.name();
                     try {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -916,7 +916,7 @@ public String modeRun(RunScenarioRequest request) {
             APIScenarioReportResult report;
             Map<String, String> planEnvMap = new HashMap<>();
             //如果是测试计划页面触发的执行方式，生成报告时createScenarioReport第二个参数需要特殊处理
-            if (StringUtils.equalsAny(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {
+            if (StringUtils.equalsAny(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), ApiRunMode.JENKINS_SCENARIO_PLAN.name())) {
                 String testPlanScenarioId = item.getId();
                 if (request.getScenarioTestPlanIdMap() != null && request.getScenarioTestPlanIdMap().containsKey(item.getId())) {
                     testPlanScenarioId = request.getScenarioTestPlanIdMap().get(item.getId());
@@ -1091,7 +1091,7 @@ private HashTree generateHashTree(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
                 if (reportIds != null) {
                     //如果是测试计划页面触发的执行方式，生成报告时createScenarioReport第二个参数需要特殊处理
                     APIScenarioReportResult report = null;
-                    if (StringUtils.equalsAny(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {
+                    if (StringUtils.equalsAny(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), ApiRunMode.JENKINS_SCENARIO_PLAN.name())) {
                         String testPlanScenarioId = item.getId();
                         if (request.getScenarioTestPlanIdMap() != null && request.getScenarioTestPlanIdMap().containsKey(item.getId())) {
                             testPlanScenarioId = request.getScenarioTestPlanIdMap().get(item.getId());

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -66,7 +66,7 @@ public ApiScenarioReport complete(TestResult result, String runMode) {
         if (result != null) {
             if (StringUtils.equals(runMode, ApiRunMode.SCENARIO_PLAN.name())) {
                 return updatePlanCase(result, runMode);
-            } else if (StringUtils.equals(runMode, ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {
+            } else if (StringUtils.equalsAny(runMode, ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), ApiRunMode.JENKINS_SCENARIO_PLAN.name())) {
                 return updateSchedulePlanCase(result, runMode);
             } else {
                 updateScenarioStatus(result.getTestId());
@@ -319,7 +319,7 @@ public ApiScenarioReport updateSchedulePlanCase(TestResult result, String runMod
         // margeReport(result, scenarioIds, scenarioNames, runMode, projectId, userId, reportIds);
 
         TestPlanReportService testPlanReportService = CommonBeanFactory.getBean(TestPlanReportService.class);
-        testPlanReportService.updateReport(testPlanReportIdList, ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), ReportTriggerMode.SCHEDULE.name());
+        testPlanReportService.updateReport(testPlanReportIdList, runMode, lastReport.getTriggerMode());
 
         return lastReport;
     }

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG, DEFINITION, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS, SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO,SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST
+    RUN, DEBUG, DEFINITION, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS_SCENARIO_PLAN, JENKINS_PERFORMANCE_TEST, JENKINS,
+    SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST
 }

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -8,5 +8,6 @@ public enum ReportTriggerMode {
      * 性能测试用例执行触发报告
      */
     CASE,
-    TEST_PLAN_SCHEDULE
+    TEST_PLAN_SCHEDULE,
+    TEST_PLAN_API,
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -157,6 +157,8 @@ public void  runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         ApiRunConfigDTO api = new ApiRunConfigDTO();
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
+        api.setOnSampleError(true);
+        api.setReportType("iddReport");
         String apiRunConfig = JSONObject.toJSONString(api);
         testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
     }

File: backend/src/main/java/io/metersphere/track/dto/ApiRunConfigDTO.java
Patch:
@@ -6,7 +6,7 @@
 public class ApiRunConfigDTO {
     private String mode;
     private String reportType;
-    private String onSampleError;
+    private boolean onSampleError;
     private String runWithinResourcePool;
     private String resourcePoolId;
 }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -90,7 +90,7 @@ public Pager<List<ProjectDTO>> getProjectList(@PathVariable int goPage, @PathVar
         if (StringUtils.isBlank(request.getProjectId())) {
             List<String> sourceIds = SessionUtils.getUser().getUserGroups().stream().map(UserGroup::getSourceId).collect(Collectors.toList());
             request.setFilters(new HashMap<String, List<String>>() {{
-                put("project_id", sourceIds);
+                put("workspace_id", sourceIds);
             }});
         }
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -120,6 +120,9 @@ public List<ApiDefinitionResult> list(ApiDefinitionRequest request) {
     public List<ApiDefinitionResult> listBatch(ApiBatchRequest request) {
         ServiceUtils.getSelectAllIds(request, request.getCondition(),
                 (query) -> extApiDefinitionMapper.selectIds(query));
+        if(CollectionUtils.isEmpty(request.getIds())){
+            return new ArrayList<>();
+        }
         List<ApiDefinitionResult> resList = extApiDefinitionMapper.listByIds(request.getIds());
         calculateResult(resList, request.getProjectId());
         return resList;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -785,6 +785,7 @@ public HashTree generateHashTree(ApiScenarioWithBLOBs item, String reportId, Map
             group.setLabel(item.getName());
             group.setName(reportId);
             MsScenario scenario = JSONObject.parseObject(item.getScenarioDefinition(), MsScenario.class);
+            group.setOnSampleError(scenario.isOnSampleError());
             this.preduceMsScenario(scenario);
             if (planEnvMap.size() > 0) {
                 scenario.setEnvironmentMap(planEnvMap);
@@ -828,6 +829,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
                 group.setLabel(apiScenario.getName());
                 group.setName(apiScenario.getName());
                 group.setEnableCookieShare(scenario.isEnableCookieShare());
+                group.setOnSampleError(scenario.isOnSampleError());
                 group.setHashTree(new LinkedList<MsTestElement>() {{
                     this.add(scenario);
                 }});
@@ -1066,6 +1068,7 @@ private HashTree generateHashTree(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
                 mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
                 JSONObject element = JSON.parseObject(item.getScenarioDefinition());
                 MsScenario scenario = JSONObject.parseObject(item.getScenarioDefinition(), MsScenario.class);
+                group.setOnSampleError(scenario.isOnSampleError());
                 this.preduceMsScenario(scenario);
                 // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
                 if (element != null && StringUtils.isNotEmpty(element.getString("hashTree"))) {

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -658,7 +658,7 @@ public HashTree generateHashTree(RunCaseRequest request, ApiTestCaseWithBLOBs te
         MsThreadGroup group = new MsThreadGroup();
         group.setLabel(testCaseWithBLOBs.getName());
         group.setName(testCaseWithBLOBs.getId());
-
+        group.setOnSampleError(true);
         LinkedList<MsTestElement> hashTrees = new LinkedList<>();
         hashTrees.add(element);
         group.setHashTree(hashTrees);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -969,7 +969,7 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             JSONObject element = JSON.parseObject(item.getScenarioDefinition());
             MsScenario scenario = JSONObject.parseObject(item.getScenarioDefinition(), MsScenario.class);
-
+            group.setOnSampleError(scenario.isOnSampleError());
             // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
             if (element != null && StringUtils.isNotEmpty(element.getString("hashTree"))) {
                 LinkedList<MsTestElement> elements = mapper.readValue(element.getString("hashTree"),

File: backend/src/main/java/io/metersphere/track/issue/client/JiraAbstractClient.java
Patch:
@@ -44,7 +44,7 @@ public JiraAddIssueResponse addIssue(String body) {
     }
 
     public String getIssueCreateMetadata() {
-        ResponseEntity<String> response = restTemplate.exchange(getBaseUrl() + "/createmeta", HttpMethod.GET, getAuthHttpEntity(), String.class);
+        ResponseEntity<String> response = restTemplate.exchange(getBaseUrl() + "/issue/createmeta", HttpMethod.GET, getAuthHttpEntity(), String.class);
         return (String) getResultForObject(String.class, response);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -539,6 +539,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
             num.set(getNextNum(projectId) + testCases.size());
             testCases.forEach(testcase -> {
                 testcase.setId(UUID.randomUUID().toString());
+                testcase.setCreateUser(SessionUtils.getUserId());
                 testcase.setCreateTime(System.currentTimeMillis());
                 testcase.setUpdateTime(System.currentTimeMillis());
                 testcase.setNodeId(nodePathMap.get(testcase.getNodePath()));

File: backend/src/main/java/io/metersphere/xmind/XmindCaseParser.java
Patch:
@@ -84,7 +84,7 @@ public XmindCaseParser(TestCaseService testCaseService, String userId, String pr
         this.importType = importType;
     }
 
-    private static final String TC_REGEX = "(?:tc:|tc：)";
+    private static final String TC_REGEX = "(?:tc:|tc：|tc)";
     private static final String PC_REGEX = "(?:pc:|pc：)";
     private static final String RC_REGEX = "(?:rc:|rc：)";
     private static final String ID_REGEX = "(?:id:|id：)";

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -41,6 +41,8 @@ public class TestResult {
 
     private String console;
 
+    private String runningDebugSampler;
+
     private List<ScenarioResult> scenarios = new ArrayList<>();
 
     private Map<String, Boolean> margeScenariMap = new HashMap<>();

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -384,6 +384,9 @@ public void margeReport(String reportId, List<String> reportIds) {
                     testResult.setScenarioSuccess(testResult.getScenarioSuccess() + scenarioResult.getScenarioSuccess());
                     testResult.setScenarioError(testResult.getScenarioError() + scenarioResult.getScenarioError());
                     testResult.setConsole(scenarioResult.getConsole());
+                    testResult.setScenarioStepError(scenarioResult.getScenarioStepError()+testResult.getScenarioStepError());
+                    testResult.setScenarioStepSuccess(scenarioResult.getScenarioStepSuccess()+testResult.getScenarioStepSuccess());
+                    testResult.setScenarioStepTotal(scenarioResult.getScenarioStepTotal()+testResult.getScenarioStepTotal());
                 } catch (Exception e) {
                     LogUtil.error(e.getMessage());
                 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1079,7 +1079,7 @@ private HashTree generateHashTree(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
                     scenario.setVariables(variables);
                 }
                 group.setEnableCookieShare(scenario.isEnableCookieShare());
-                group.setOnSampleError(scenario.getOnSampleError());
+                group.setOnSampleError(scenario.isOnSampleError());
                 LinkedList<MsTestElement> scenarios = new LinkedList<>();
                 scenarios.add(scenario);
                 // 创建场景报告

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -62,7 +62,7 @@ public class MsScenario extends MsTestElement {
     private Map<String, String> environmentMap;
 
     @JSONField(ordinal = 24)
-    private Boolean onSampleError;
+    private boolean onSampleError;
 
     private static final String BODY_FILE_DIR = FileUtils.BODY_FILE_DIR;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -61,6 +61,9 @@ public class MsScenario extends MsTestElement {
     @JSONField(ordinal = 27)
     private Map<String, String> environmentMap;
 
+    @JSONField(ordinal = 24)
+    private Boolean onSampleError;
+
     private static final String BODY_FILE_DIR = FileUtils.BODY_FILE_DIR;
 
     public MsScenario() {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -66,7 +66,7 @@ public ThreadGroup getThreadGroup() {
         threadGroup.setDuration(0);
         threadGroup.setProperty(ThreadGroup.ON_SAMPLE_ERROR, ThreadGroup.ON_SAMPLE_ERROR_CONTINUE);
         threadGroup.setScheduler(false);
-        if (onSampleError) {
+        if (!onSampleError) {
             threadGroup.setProperty("ThreadGroup.on_sample_error", "stoptest");
         }
         threadGroup.setSamplerController(loopController);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1079,6 +1079,7 @@ private HashTree generateHashTree(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
                     scenario.setVariables(variables);
                 }
                 group.setEnableCookieShare(scenario.isEnableCookieShare());
+                group.setOnSampleError(scenario.getOnSampleError());
                 LinkedList<MsTestElement> scenarios = new LinkedList<>();
                 scenarios.add(scenario);
                 // 创建场景报告

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -736,7 +736,9 @@ private JSONObject buildContent(JSONObject respOrReq) {
                 } catch (Exception e1) {    //  若请求体 json 不合法，则忽略错误，原样字符串导出/导入
                     bodyInfo = new JSONObject();
                     ((JSONObject) bodyInfo).put("type", "string");
-                    ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
+                    if (body != null && body.get("raw") != null) {
+                        ((JSONObject) bodyInfo).put("example", body.get("raw").toString());
+                    }
                 }
             } else if(bodyType.equals("XML")) {
                 String xmlText = body.getString("raw");

File: backend/src/main/java/io/metersphere/service/CheckPermissionService.java
Patch:
@@ -39,7 +39,7 @@ public void checkProjectOwner(String projectId) {
         }
     }
 
-    private Set<String> getUserRelatedProjectIds() {
+    public Set<String> getUserRelatedProjectIds() {
         List<String> groupIds = Objects.requireNonNull(SessionUtils.getUser()).getGroups()
                 .stream()
                 .filter(g -> StringUtils.equals(g.getType(), UserGroupType.PROJECT))

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1649,7 +1649,7 @@ private void editScenario(ApiTestImportRequest request, ScenarioImport apiImport
                 item.setName(item.getName().substring(0, 255));
             }
             item.setNum(num++);
-            if (BooleanUtils.isTrue(project.getScenarioCustomNum())) {
+            if (BooleanUtils.isTrue(project.getScenarioCustomNum()) && StringUtils.isBlank(item.getCustomNum())) {
                 item.setCustomNum(String.valueOf(num));
             }
             importCreate(item, batchMapper, request);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.track.dto.TestCaseReportStatusResultDTO;
 import io.metersphere.track.dto.TestCaseTestDTO;
 import io.metersphere.track.dto.TestPlanCaseDTO;
@@ -53,4 +54,6 @@ public interface ExtTestPlanTestCaseMapper {
     List<TestCaseTestDTO> listTestCaseTest(@Param("caseId") String caseId);
 
     List<String> selectIds(@Param("request") TestPlanFuncCaseConditions conditions);
+
+    List<String> selectIdsByQuery(@Param("request") BaseQueryRequest query);
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -160,6 +160,6 @@ public void  runJenkins(@RequestBody TestplanRunRequest testplanRunRequest) {
         api.setMode(testplanRunRequest.getMode());
         api.setResourcePoolId(testplanRunRequest.getResourcePoolId());
         String apiRunConfig = JSONObject.toJSONString(api);
-        testPlanService.run(testplanRunRequest.getTestPlanID(), testplanRunRequest.getProjectID(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
+        testPlanService.run(testplanRunRequest.getTestPlanId(), testplanRunRequest.getProjectId(), testplanRunRequest.getUserId(), testplanRunRequest.getTriggerMode(), apiRunConfig);
     }
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -382,7 +382,7 @@ public void update(TestPlanReport report) {
                     testPlanMapper.updateByPrimaryKeySelective(testPlan);
                 }
 
-                if (StringUtils.equalsAny(report.getTriggerMode(), ReportTriggerMode.SCHEDULE.name())) {
+                if (StringUtils.equals(report.getTriggerMode(), ReportTriggerMode.API.name()) || StringUtils.equals(report.getTriggerMode(), ReportTriggerMode.SCHEDULE.name())) {
                     //发送通知
                     sendMessage(report);
                 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -99,4 +99,6 @@ public interface ExtTestCaseMapper {
     List<String> selectRelateIdsByQuery(@Param("request") BaseQueryRequest query);
 
     List<Map<String, Object>> moduleCountByCollection(@Param("request")QueryTestCaseRequest request);
+
+    List<TestCaseWithBLOBs> getCustomFieldsByIds(@Param("ids") List<String> ids);
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanCaseDTO.java
Patch:
@@ -21,6 +21,7 @@ public class TestPlanCaseDTO extends TestCaseWithBLOBs {
     private String model;
     private String projectName;
     private String actualResult;
+    private String maintainerName;
 
     private List<TestCaseTestDTO> list;
 }

File: backend/src/main/java/io/metersphere/track/request/testplancase/QueryTestPlanCaseRequest.java
Patch:
@@ -26,6 +26,8 @@ public class QueryTestPlanCaseRequest extends TestPlanTestCase {
 
     private String workspaceId;
 
+    private String projectId;
+
     private String name;
 
     private String status;

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -62,11 +62,12 @@ public List<TestPlanCaseDTO> list(QueryTestPlanCaseRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
         List<TestPlanCaseDTO> list = extTestPlanTestCaseMapper.list(request);
         QueryMemberRequest queryMemberRequest = new QueryMemberRequest();
-        queryMemberRequest.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
-        Map<String, String> userMap = userService.getMemberList(queryMemberRequest)
+        queryMemberRequest.setProjectId(request.getProjectId());
+        Map<String, String> userMap = userService.getProjectMemberList(queryMemberRequest)
                 .stream().collect(Collectors.toMap(User::getId, User::getName));
         list.forEach(item -> {
             item.setExecutorName(userMap.get(item.getExecutor()));
+            item.setMaintainerName(userMap.get(item.getMaintainer()));
         });
         return list;
     }

File: backend/src/main/java/io/metersphere/api/dto/document/ApiDocumentInfoDTO.java
Patch:
@@ -28,6 +28,7 @@ public class ApiDocumentInfoDTO {
 
     private String responseHead;
     private String responseBody;
+    private Object jsonSchemaResponseBody;
     private String responseBodyParamType;
     private String responseBodyFormData;
     private String responseBodyStrutureData;

File: backend/src/main/java/io/metersphere/api/dto/mockconfig/response/JsonSchemaReturnObj.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.mockconfig.response;
 
+import com.alibaba.fastjson.JSONObject;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -19,6 +20,8 @@ public class JsonSchemaReturnObj {
     private String title;
     private String type;
     private int maxLength = -1;
+    private JSONObject properties;
+    private JSONObject items;
 
     public String getMockValue() {
         if (mock == null) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtWorkspaceMapper.java
Patch:
@@ -9,8 +9,11 @@
 public interface ExtWorkspaceMapper {
 
     List<WorkspaceDTO> getWorkspaceWithOrg(@Param("request") WorkspaceRequest request);
+
     List<String> getWorkspaceIdsByOrgId(@Param("orgId") String orgId);
 
+    List<WorkspaceDTO> getWorkspaceIdsOrgId(@Param("orgId") String orgId);
+
     String getOrganizationIdById(String resourceID);
 
     List<WorkspaceDTO> findIdAndNameByOrganizationId(@Param("organizationId") String organizationId);

File: backend/src/main/java/io/metersphere/api/controller/ApiModuleController.java
Patch:
@@ -28,15 +28,15 @@ public class ApiModuleController {
 
     @GetMapping("/list/{projectId}/{protocol}")
     public List<ApiModuleDTO> getNodeByProjectId(@PathVariable String projectId, @PathVariable String protocol) {
-        checkPermissionService.checkProjectOwner(projectId);
+//        checkPermissionService.checkProjectOwner(projectId);
         String userId = SessionUtils.getUserId();
         ApiDefinitionDefaultApiTypeUtil.addUserSelectApiType(userId, protocol);
         return apiModuleService.getNodeTreeByProjectId(projectId, protocol);
     }
 
     @GetMapping("/getModuleByName/{projectId}/{protocol}")
     public ApiModule getModuleByName(@PathVariable String projectId, @PathVariable String protocol) {
-        checkPermissionService.checkProjectOwner(projectId);
+//        checkPermissionService.checkProjectOwner(projectId);
         return apiModuleService.getModuleByName(projectId, protocol);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiTestEnvironmentController.java
Patch:
@@ -35,7 +35,7 @@ public class ApiTestEnvironmentController {
 
     @GetMapping("/list/{projectId}")
     public List<ApiTestEnvironmentWithBLOBs> list(@PathVariable String projectId) {
-        checkPermissionService.checkProjectOwner(projectId);
+//        checkPermissionService.checkProjectOwner(projectId);
         return apiTestEnvironmentService.list(projectId);
     }
 

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceTestController.java
Patch:
@@ -130,7 +130,7 @@ public List<LoadTestExportJmx> exportJmx(@RequestBody List<String> fileIds) {
     public Pager<List<FileMetadata>> getProjectFiles(@PathVariable String projectId, @PathVariable String loadType,
                                                      @PathVariable int goPage, @PathVariable int pageSize,
                                                      @RequestBody QueryProjectFileRequest request) {
-        checkPermissionService.checkProjectOwner(projectId);
+//        checkPermissionService.checkProjectOwner(projectId);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, performanceTestService.getProjectFiles(projectId, loadType, request));
     }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -694,6 +694,7 @@ public List<ApiTestCase> selectEffectiveTestCaseByProjectId(String projectId) {
     public List<ApiTestCaseInfo> findApiTestCaseBLOBs(ApiTestCaseRequest request) {
         List<String> ids = request.getIds();
         if (request.isSelectAll()) {
+            request.setIds(null);
             ids = this.idSimple(request);
             ids.removeAll(request.getUnSelectIds());
             request.setIds(ids);

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -157,6 +157,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
         testResult.setTestId(testId);
         testResult.setTotal(queue.size());
         testResult.setSetReportId(this.setReportId);
+        testResult.setConsole(getConsole());
 
         // 一个脚本里可能包含多个场景(ThreadGroup)，所以要区分开，key: 场景Id
         final Map<String, ScenarioResult> scenarios = new LinkedHashMap<>();
@@ -475,8 +476,6 @@ private RequestResult getRequestResult(SampleResult result) {
                 responseResult.getAssertions().add(responseAssertionResult);
             }
         }
-        responseResult.setConsole(getConsole());
-
         return requestResult;
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -60,6 +60,7 @@ public void saveApiResult(TestResult result, String type) {
             result.getScenarios().forEach(scenarioResult -> {
                 if (scenarioResult != null && CollectionUtils.isNotEmpty(scenarioResult.getRequestResults())) {
                     scenarioResult.getRequestResults().forEach(item -> {
+                        item.getResponseResult().setConsole(result.getConsole());
                         ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
                         saveResult.setId(UUID.randomUUID().toString());
                         saveResult.setCreateTime(item.getStartTime());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -600,6 +600,7 @@ public void addResult(TestResult res) {
             if (result.getName().indexOf(DelimiterConstants.SEPARATOR.toString()) != -1) {
                 result.setName(result.getName().substring(0, result.getName().indexOf(DelimiterConstants.SEPARATOR.toString())));
             }
+            result.getResponseResult().setConsole(res.getConsole());
             cache.put(res.getTestId(), result);
         } else {
             MSException.throwException(Translator.get("test_not_found"));

File: backend/src/main/java/io/metersphere/api/dto/automation/ExecuteType.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.api.dto.automation;
 
 public enum ExecuteType {
-    Saved, Completed, Debug
+    Saved, Completed, Debug, Marge
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -990,7 +990,7 @@ private String generateHashTreeByScenarioList(MsTestPlan testPlan, Map<String, S
             APIScenarioReportResult report = apiAutomationService.createScenarioReport(group.getName(),
                     planScenarioID + ":" + request.getTestPlanReportId(),
                     item.getName(), request.getTriggerMode() == null ? ReportTriggerMode.MANUAL.name() : request.getTriggerMode(),
-                    request.getExecuteType(), item.getProjectId(), request.getReportUserID(), null);
+                    request.getExecuteType(), item.getProjectId(), request.getReportUserID());
             apiScenarioReportMapper.insert(report);
             group.setHashTree(scenarios);
             testPlan.getHashTree().add(group);

File: backend/src/main/java/io/metersphere/commons/constants/PermissionConstants.java
Patch:
@@ -140,6 +140,7 @@ public class PermissionConstants {
     public static final String PROJECT_API_DEFINITION_READ_CREATE_API = "PROJECT_API_DEFINITION:READ+CREATE_API";
     public static final String PROJECT_API_DEFINITION_READ_EDIT_API = "PROJECT_API_DEFINITION:READ+EDIT_API";
     public static final String PROJECT_API_DEFINITION_READ_DELETE_API = "PROJECT_API_DEFINITION:READ+DELETE_API";
+    public static final String PROJECT_API_DEFINITION_READ_COPY_API = "PROJECT_API_DEFINITION:READ+COPY_API";
     public static final String PROJECT_API_DEFINITION_READ_CREATE_CASE = "PROJECT_API_DEFINITION:READ+CREATE_CASE";
     public static final String PROJECT_API_DEFINITION_READ_EDIT_CASE = "PROJECT_API_DEFINITION:READ+EDIT_CASE";
     public static final String PROJECT_API_DEFINITION_READ_DELETE_CASE = "PROJECT_API_DEFINITION:READ+DELETE_CASE";

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -112,6 +112,8 @@ public void deleteReport(String reportId) {
             }
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
+            loadTest.setStatus(PerformanceTestStatus.Saved.name());
+            loadTestMapper.updateByPrimaryKeySelective(loadTest);
         }
 
         // delete load_test_report_result

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -16,7 +16,7 @@ public class NoticeController {
     private NoticeService noticeService;
 
     @PostMapping("save/message/task")
-    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
+    @MsAuditLog(module = "organization_message_settings", type = OperLogConstants.UPDATE, content = "#msClass.getLogDetails(#messageDetail.id)", msClass = NoticeService.class)
     public void saveMessage(@RequestBody MessageDetail messageDetail) {
         noticeService.saveMessageTask(messageDetail);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -14,7 +14,7 @@ public interface ExtProjectMapper {
 
     int removeIssuePlatform(@Param("platform") String platform, @Param("orgId") String orgId);
 
-    List<ProjectDTO> getSwitchProject(@Param("proRequest") ProjectRequest request);
+    List<ProjectDTO> getUserProject(@Param("proRequest") ProjectRequest request);
 
     String getSystemIdByProjectId(String projectId);
 

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -135,12 +135,12 @@ public List<ProjectDTO> getProjectList(ProjectRequest request) {
         return extProjectMapper.getProjectWithWorkspace(request);
     }
 
-    public List<ProjectDTO> getSwitchProject(ProjectRequest request) {
+    public List<ProjectDTO> getUserProject(ProjectRequest request) {
         if (StringUtils.isNotBlank(request.getName())) {
             request.setName(StringUtils.wrapIfMissing(request.getName(), "%"));
         }
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
-        return extProjectMapper.getSwitchProject(request);
+        return extProjectMapper.getUserProject(request);
     }
 
     public List<Project> getProjectByIds(List<String> ids) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -561,6 +561,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
             ApiTestEnvironmentWithBLOBs environment = environmentService.get(map.get(request.getProjectId()));
             if (environment != null) {
                 EnvironmentConfig env = JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class);
+                env.setApiEnvironmentid(environment.getId());
                 envConfig.put(request.getProjectId(), env);
                 config.setConfig(envConfig);
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/TestPlanApiCaseDTO.java
Patch:
@@ -10,4 +10,5 @@ public class TestPlanApiCaseDTO extends ApiTestCaseDTO {
     private String environmentId;
     private String caseId;
     private String execResult;
+    private String userId;
 }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -103,7 +103,6 @@ public List<ProjectDTO> getSwitchProject(@RequestBody ProjectRequest request) {
     @GetMapping("/delete/{projectId}")
     @MsAuditLog(module = "project_project_manager", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#projectId)", msClass = ProjectService.class)
     public void deleteProject(@PathVariable(value = "projectId") String projectId) {
-        checkPermissionService.checkProjectOwner(projectId);
         projectService.deleteProject(projectId);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenrioExportJmx.java
Patch:
@@ -3,11 +3,14 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class ApiScenrioExportJmx {
     private String name;
     private String jmx;
+    List<String> files;
 
     public ApiScenrioExportJmx(String name, String jmx) {
         this.name = name;

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -48,6 +48,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/document/**", "anon");
         filterChainDefinitionMap.put("/system/theme", "anon");
         filterChainDefinitionMap.put("/system/save/baseurl/**", "anon");
+        filterChainDefinitionMap.put("/system/timeout", "anon");
 
         filterChainDefinitionMap.put("/v1/catalog/**", "anon");
         filterChainDefinitionMap.put("/v1/agent/**", "anon");

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -413,8 +413,8 @@ public void updateUserRole(UserRequest user) {
 //        List<String> list = userRoles.stream().map(UserRole::getSourceId).collect(Collectors.toList());
         if (!CollectionUtils.isEmpty(list)) {
             if (list.contains(user.getLastWorkspaceId()) || list.contains(user.getLastOrganizationId())) {
-                user.setLastOrganizationId("");
-                user.setLastWorkspaceId("");
+                user.setLastOrganizationId(null);
+                user.setLastWorkspaceId(null);
                 userMapper.updateByPrimaryKeySelective(user);
             }
         }
@@ -859,7 +859,7 @@ private void autoSwitch(UserDTO user) {
             user.setLastWorkspaceId(wsId);
             user.setLastOrganizationId(orgId);
             updateUser(user);
-            SecurityUtils.getSubject().getSession().setAttribute(ATTR_USER, user);
+            SessionUtils.putUser(SessionUser.fromUser(user));
         }
 
     }

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.log.utils.ReflexObjectUtil;
 import io.metersphere.log.vo.DetailColumn;
 import io.metersphere.log.vo.OperatingLogDetails;
+import io.metersphere.log.vo.StatusReference;
 import io.metersphere.log.vo.system.SystemReference;
 import io.metersphere.notice.domain.MessageDetail;
 import org.apache.commons.collections.CollectionUtils;
@@ -224,7 +225,8 @@ public String getLogDetails(String id) {
         }
         if (task != null) {
             List<DetailColumn> columns = ReflexObjectUtil.getColumns(task, SystemReference.messageColumns);
-            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(task.getId()), null, task.getTaskType(), task.getUserId(), columns);
+            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(task.getId()), null,
+                    StatusReference.statusMap.containsKey(task.getTaskType()) ? StatusReference.statusMap.get(task.getTaskType()) : task.getTaskType(), task.getUserId(), columns);
             return JSON.toJSONString(details);
         }
         return null;

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -566,7 +566,9 @@ private String getReviewName(List<String> userIds) {
                     stringBuilder.append(userMap.get(id)).append("、");
                 }
             }
-            name = stringBuilder.substring(0, stringBuilder.length() - 1);
+            if (StringUtils.isNotBlank(stringBuilder)) {
+                name = stringBuilder.substring(0, stringBuilder.length() - 1);
+            }
         }
         return name;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -717,7 +717,9 @@ public String getProjectNameByPlanId(String testPlanId) {
             for (Project project : projects) {
                 stringBuilder.append(project.getName()).append("、");
             }
-            projectName = stringBuilder.substring(0, stringBuilder.length() - 1);
+            if (StringUtils.isNotBlank(stringBuilder)) {
+                projectName = stringBuilder.substring(0, stringBuilder.length() - 1);
+            }
         }
 
         return projectName;

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -24,7 +24,7 @@ public class SystemParameterController {
     private SystemParameterService SystemParameterService;
 
     @PostMapping("/edit/email")
-    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, title = "邮件设置")
+    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, title = "邮件设置",beforeEvent = "#msClass.getMailLogDetails()", content = "#msClass.getMailLogDetails()", msClass = SystemParameterService.class)
     public void editMail(@RequestBody List<SystemParameter> systemParameter) {
         SystemParameterService.editMail(systemParameter);
     }
@@ -60,7 +60,7 @@ public SystemHeader getHeader(@RequestBody SystemHeader systemHeader) {
     }
 
     @PostMapping("/save/base")
-    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, title = "基本配置")
+    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getBaseLogDetails()", content = "#msClass.getBaseLogDetails()", msClass = SystemParameterService.class)
     public void saveBaseInfo(@RequestBody List<SystemParameter> systemParameter) {
         SystemParameterService.saveBaseInfo(systemParameter);
     }

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -1171,7 +1171,7 @@ public String getLogDetails(List<String> ids, String id) {
 
             DetailColumn detailColumn = new DetailColumn();
             detailColumn.setId(UUID.randomUUID().toString());
-            detailColumn.setColumnTitle("成员：");
+            detailColumn.setColumnTitle("成员");
             detailColumn.setColumnName("roles");
             detailColumn.setOriginalValue(nameBuilder.toString());
             columns.add(detailColumn);

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -5,14 +5,12 @@
 import io.metersphere.base.domain.UserHeader;
 import io.metersphere.commons.constants.OperLogConstants;
 import io.metersphere.commons.constants.ParamConstants;
-import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.controller.request.HeaderRequest;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.ldap.domain.LdapInfo;
 import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.notice.domain.MailInfo;
 import io.metersphere.service.SystemParameterService;
-import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
@@ -68,7 +66,7 @@ public void saveBaseInfo(@RequestBody List<SystemParameter> systemParameter) {
     }
 
     @PostMapping("/save/ldap")
-    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, title = "LDAP设置")
+    @MsAuditLog(module = "system_parameter_setting", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails()", content = "#msClass.getLogDetails()", msClass = SystemParameterService.class)
     public void saveLdap(@RequestBody List<SystemParameter> systemParameter) {
         SystemParameterService.saveLdap(systemParameter);
     }

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -12,7 +12,7 @@ public class TestCaseReference {
         testCaseColumns.put("createUser", "创建人");
         testCaseColumns.put("nodePath", "用例模块");
         testCaseColumns.put("type", "用例类型");
-        testCaseColumns.put("principal", "责任人");
+        testCaseColumns.put("maintainer", "责任人");
         testCaseColumns.put("priority", "用例等级");
         testCaseColumns.put("method", "请求类型");
         testCaseColumns.put("prerequisite", "前置条件");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -114,7 +114,7 @@ public List<ApiDefinitionResult> list(ApiDefinitionRequest request) {
         List<ApiDefinitionResult> resList = extApiDefinitionMapper.list(request);
         calculateResult(resList, request.getProjectId());
         ApiDefinitionRequest finalRequest = request;
-        List<ApiDefinitionResult> resListFilters = new ArrayList<>();
+       /* List<ApiDefinitionResult> resListFilters = new ArrayList<>();
         if (finalRequest.getFilters().size() > 1) {
             if (null != finalRequest.getFilters().get("case_status")) {
                 resListFilters = resList.stream()
@@ -123,7 +123,7 @@ public List<ApiDefinitionResult> list(ApiDefinitionRequest request) {
                 return resListFilters;
             }
 
-        }
+        }*/
 
 
         return resList;

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -97,9 +97,9 @@ public List<ApiDefinitionResult> listBatch(@RequestBody ApiBatchRequest request)
     @PostMapping(value = "/create", consumes = {"multipart/form-data"})
     @RequiresPermissions(PermissionConstants.PROJECT_API_DEFINITION_READ_CREATE_API)
     @MsAuditLog(module = "api_definition", type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = ApiDefinitionService.class)
-    public void create(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
+    public ApiDefinitionWithBLOBs create(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
         checkPermissionService.checkProjectOwner(request.getProjectId());
-        apiDefinitionService.create(request, bodyFiles);
+        return apiDefinitionService.create(request, bodyFiles);
     }
 
     @PostMapping(value = "/update", consumes = {"multipart/form-data"})

File: backend/src/main/java/io/metersphere/excel/handler/FunctionCaseTemplateWriteHandler.java
Patch:
@@ -43,7 +43,7 @@ public void afterRowDispose(WriteSheetHolder writeSheetHolder, WriteTableHolder
                 // 在第一行 第1列创建一个批注
                 Comment comment1 = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, (short) 0, 0, (short) 3, 1));
                 // 输入批注信息
-                comment1.setString(new XSSFRichTextString(Translator.get("do_not_modify_header_order")));
+                comment1.setString(new XSSFRichTextString(Translator.get("do_not_modify_header_order")+"，"+Translator.get("id_required")));
 
                 // 在第一行 第3列创建一个批注
                 Comment comment2 = drawingPatriarch.createCellComment(new XSSFClientAnchor(0, 0, 0, 0, (short) 2, 0, (short) 3, 1));

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -160,7 +160,7 @@ public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String pro
         return testCaseService.testCaseImport(file, projectId, userId, importType,request);
     }
 
-    @PostMapping("/importIgnoreError/{projectId}/{userId}")
+    @PostMapping("/importIgnoreError/{projectId}/{userId}/{importType}")
     @MsAuditLog(module = "track_test_case", type = OperLogConstants.IMPORT, project = "#projectId")
     public ExcelResponse testCaseImportIgnoreError(MultipartFile file, @PathVariable String projectId, @PathVariable String userId, @PathVariable String importType, HttpServletRequest request) {
         checkPermissionService.checkProjectOwner(projectId);

File: backend/src/main/java/io/metersphere/api/parse/HarScenarioAbstractParser.java
Patch:
@@ -65,6 +65,8 @@ private void parseRequestBody(HarRequest requestBody, Body body) {
         HarPostData content = requestBody.postData;
         if (!StringUtils.equalsIgnoreCase("GET", requestBody.method) && requestBody.postData == null) {
             return;
+        }else if(requestBody.postData == null){
+            return;
         }
         String contentType = content.mimeType;
         if (StringUtils.isEmpty(contentType)) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -12,6 +12,9 @@
 
 public interface ExtApiScenarioMapper {
     List<ApiScenarioDTO> list(@Param("request") ApiScenarioRequest request);
+
+    int listModule(@Param("request") ApiScenarioRequest request);
+
     List<ApiScenarioDTO> listReview(@Param("request") ApiScenarioRequest request);
     List<ApiScenarioWithBLOBs> selectByTagId(@Param("id") String id);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -18,6 +18,8 @@ public interface ExtTestCaseMapper {
 
     List<TestCaseDTO> list(@Param("request") QueryTestCaseRequest request);
 
+    int moduleCount(@Param("request") QueryTestCaseRequest request);
+
     List<TestCaseDTO> listIds(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> listByMethod(@Param("request") QueryTestCaseRequest request);

File: backend/src/main/java/io/metersphere/log/vo/OperatingLogRequest.java
Patch:
@@ -27,4 +27,7 @@ public class OperatingLogRequest implements Serializable {
     private String operTitle;
 
     private List<Long> times;
+
+    private List<String> projectIds;
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -177,9 +177,6 @@ public UserDTO refreshSessionUser(@PathVariable String sign, @PathVariable Strin
 
     @GetMapping("/info/{userId}")
     public UserDTO getUserInfo(@PathVariable(value = "userId") String userId) {
-        if (!StringUtils.equals(userId, SessionUtils.getUserId())) {
-            MSException.throwException(Translator.get("not_authorized"));
-        }
         return userService.getUserInfo(userId);
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -18,6 +18,8 @@ public interface ExtTestCaseMapper {
 
     List<TestCaseDTO> list(@Param("request") QueryTestCaseRequest request);
 
+    List<TestCaseDTO> listIds(@Param("request") QueryTestCaseRequest request);
+
     List<TestCaseDTO> listByMethod(@Param("request") QueryTestCaseRequest request);
 
     List<TestCaseDTO> listByTestCaseIds(@Param("request") TestCaseBatchRequest request);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -1103,7 +1103,7 @@ public List<TestCaseDTO> listTestCaseIds(QueryTestCaseRequest request) {
         selectFields.add("id");
         selectFields.add("name");
         request.setSelectFields(selectFields);
-        return extTestCaseMapper.list(request);
+        return extTestCaseMapper.listIds(request);
     }
 
     public void minderEdit(TestCaseMinderEditRequest request) {

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -175,7 +175,7 @@ protected void insertIssuesWithoutContext(String id, IssuesUpdateRequest issuesR
 
     protected int getNextNum(String projectId) {
         Issues issue = extIssuesMapper.getNextNum(projectId);
-        if (issue == null) {
+        if (issue == null || issue.getNum() == null) {
             return 100001;
         } else {
             return Optional.of(issue.getNum() + 1).orElse(100001);

File: backend/src/main/java/io/metersphere/api/dto/automation/SchedulePlanScenarioExecuteRequest.java
Patch:
@@ -35,4 +35,6 @@ public class SchedulePlanScenarioExecuteRequest {
     private Map<String,Map<String,String>> testPlanScenarioIDMap;
 
     private String testPlanReportId;
+
+    private RunModeConfig config;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -626,7 +626,6 @@ public String run(ApiTestCaseWithBLOBs apiCaseBolbs, String id, String debugRepo
                 HashTree jmeterHashTree = this.generateHashTree(request, apiCaseBolbs);
                 // 调用执行方法
                 jMeterService.runDefinition(id, jmeterHashTree, debugReportId, runMode);
-
             } catch (Exception ex) {
                 LogUtil.error(ex.getMessage());
             }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -161,7 +161,6 @@ public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String pro
     }
 
     @PostMapping("/importIgnoreError/{projectId}/{userId}")
-    @RequiresPermissions(PermissionConstants.PROJECT_TRACK_CASE_READ_IMPORT)
     @MsAuditLog(module = "track_test_case", type = OperLogConstants.IMPORT, project = "#projectId")
     public ExcelResponse testCaseImportIgnoreError(MultipartFile file, @PathVariable String projectId, @PathVariable String userId, @PathVariable String importType, HttpServletRequest request) {
         checkPermissionService.checkProjectOwner(projectId);

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -157,6 +157,6 @@ public Pager<List<Project>> getProjectByPlanId(@PathVariable int goPage, @PathVa
     }
     @PostMapping("/testplan/jenkins")
     public void  runJenkins(@RequestBody TestplanRunRequest testplanRunRequest){
-        testPlanService.run(testplanRunRequest.getTestPlanID(),testplanRunRequest.getProjectID(),testplanRunRequest.getUserId(),testplanRunRequest.getTriggerMode());
+        testPlanService.run(testplanRunRequest.getTestPlanID(),testplanRunRequest.getProjectID(),testplanRunRequest.getUserId(),testplanRunRequest.getTriggerMode(),null);
     }
 }

File: backend/src/main/java/io/metersphere/controller/OrganizationController.java
Patch:
@@ -64,7 +64,7 @@ public List<Organization> getOrganizationListByUserId(@PathVariable String userI
     }
 
     @PostMapping("/member/update")
-    @MsAuditLog(module = "organization_member", type = OperLogConstants.UPDATE, content = "#msClass.getLogDetails(#memberDTO)", msClass = OrganizationService.class)
+    @MsAuditLog(module = "organization_member", type = OperLogConstants.UPDATE,beforeEvent = "#msClass.getLogDetails(#memberDTO)", content = "#msClass.getLogDetails(#memberDTO)", msClass = OrganizationService.class)
     public void updateOrgMember(@RequestBody OrganizationMemberDTO memberDTO) {
         organizationService.updateOrgMember(memberDTO);
     }

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -29,7 +29,7 @@ public class TestCaseReference {
         testCaseColumns.put("expectedResult", "预期结果");
         testCaseColumns.put("demandName", "关联需求");
         testCaseColumns.put("comment", "评论");
-        testCaseColumns.put("ms-dff-col", "tags");
+        testCaseColumns.put("ms-dff-col", "tags,steps");
 
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/track/TestPlanReference.java
Patch:
@@ -34,9 +34,9 @@ public class TestPlanReference {
         issuesColumns.put("platform","平台");
         issuesColumns.put("creator","创建人");
         issuesColumns.put("reporter","处理人");
-        issuesColumns.put("custom_fields","自定义字段");
+        issuesColumns.put("customFields","自定义字段");
         // 深度处理字段
-        issuesColumns.put("ms-dff-col", "custom_fields");
+        issuesColumns.put("ms-dff-col", "customFields");
 
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -4,7 +4,6 @@
 import io.metersphere.api.dto.scenario.request.BodyFile;
 import io.metersphere.commons.json.JSONSchemaGenerator;
 import io.metersphere.commons.utils.FileUtils;
-import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.commons.utils.ScriptEngineUtils;
 import lombok.Data;
 import org.apache.commons.collections4.CollectionUtils;
@@ -24,6 +23,7 @@ public class Body {
     private List<KeyValue> kvs;
     private List<KeyValue> binary;
     private Object jsonSchema;
+    private String tmpFilePath;
 
     public final static String KV = "KeyValue";
     public final static String FORM_DATA = "Form Data";
@@ -131,6 +131,8 @@ private void setFileArg(List<HTTPFileArg> list, List<BodyFile> files, KeyValue k
                 if (StringUtils.isNotBlank(file.getId())) {
                     // 旧数据
                     path = FileUtils.BODY_FILE_DIR + '/' + file.getId() + '_' + file.getName();
+                } else if (StringUtils.isNotBlank(this.tmpFilePath)) {
+                    path = FileUtils.BODY_FILE_DIR + '/' + this.tmpFilePath + '/' + file.getName();
                 } else {
                     path = FileUtils.BODY_FILE_DIR + '/' + requestId + '/' + file.getName();
                 }
@@ -167,5 +169,4 @@ public void initBinary() {
         this.binary = new ArrayList<>();
         this.binary.add(new KeyValue());
     }
-
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -327,7 +327,7 @@ public void deleteUpdateBodyFile(ApiScenarioWithBLOBs scenario) {
         ApiScenarioWithBLOBs oldScenario = apiScenarioMapper.selectByPrimaryKey(scenario.getId());
         Set<String> newRequestIds = getRequestIds(scenario.getScenarioDefinition());
         MsTestElement msTestElement = parseScenarioDefinition(oldScenario.getScenarioDefinition());
-        List<MsHTTPSamplerProxy> oldRequests = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msTestElement, null);
+        List<MsHTTPSamplerProxy> oldRequests = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msTestElement);
         oldRequests.forEach(item -> {
             if (item.isCustomizeReq() && !newRequestIds.contains(item.getId())) {
                 FileUtils.deleteBodyFiles(item.getId());
@@ -343,7 +343,7 @@ public MsScenario parseScenarioDefinition(String scenarioDefinition) {
 
     public Set<String> getRequestIds(String scenarioDefinition) {
         MsScenario msScenario = parseScenarioDefinition(scenarioDefinition);
-        List<MsHTTPSamplerProxy> httpSampleFromHashTree = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msScenario, null);
+        List<MsHTTPSamplerProxy> httpSampleFromHashTree = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msScenario);
         return httpSampleFromHashTree.stream()
                 .map(MsHTTPSamplerProxy::getId).collect(Collectors.toSet());
     }
@@ -442,7 +442,7 @@ public void deleteBodyFileByScenarioIds(List<String> ids) {
 
     public void deleteBodyFile(String scenarioDefinition) {
         MsTestElement msTestElement = parseScenarioDefinition(scenarioDefinition);
-        List<MsHTTPSamplerProxy> httpSampleFromHashTree = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msTestElement, null);
+        List<MsHTTPSamplerProxy> httpSampleFromHashTree = MsHTTPSamplerProxy.findHttpSampleFromHashTree(msTestElement);
         httpSampleFromHashTree.forEach((httpSamplerProxy) -> {
             if (httpSamplerProxy.isCustomizeReq()) {
                 FileUtils.deleteBodyFiles(httpSamplerProxy.getId());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -883,7 +883,6 @@ public String modeRun(RunScenarioRequest request) {
             request.setTriggerMode(ReportTriggerMode.MANUAL.name());
         }
         String reportId = request.getId();
-
         Map<APIScenarioReportResult, HashTree> map = new LinkedHashMap<>();
         List<String> scenarioIds = new ArrayList<>();
         StringBuilder scenarioNames = new StringBuilder();

File: backend/src/main/java/io/metersphere/api/service/task/ParallelScenarioExecTask.java
Patch:
@@ -3,7 +3,6 @@
  */
 package io.metersphere.api.service.task;
 
-import com.alibaba.fastjson.JSON;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
 import io.metersphere.api.jmeter.JMeterService;
 import io.metersphere.commons.exception.MSException;
@@ -28,7 +27,7 @@ public ParallelScenarioExecTask(JMeterService jMeterService, String id, HashTree
     @Override
     public T call() {
         try {
-            jMeterService.runSerial(JSON.toJSONString(id), hashTree, request.getReportId(), request.getRunMode(), request.getConfig());
+            jMeterService.runSerial(id, hashTree, request.getReportId(), request.getRunMode(), request.getConfig());
             return null;
         } catch (Exception ex) {
             LogUtil.error(ex.getMessage());

File: backend/src/main/java/io/metersphere/api/service/task/SerialScenarioExecTask.java
Patch:
@@ -3,7 +3,6 @@
  */
 package io.metersphere.api.service.task;
 
-import com.alibaba.fastjson.JSON;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
 import io.metersphere.api.jmeter.JMeterService;
 import io.metersphere.base.domain.ApiScenarioReport;
@@ -34,7 +33,7 @@ public SerialScenarioExecTask(JMeterService jMeterService, ApiScenarioReportMapp
     @Override
     public T call() {
         try {
-            jMeterService.runSerial(JSON.toJSONString(id), hashTree, request.getReportId(), request.getRunMode(), request.getConfig());
+            jMeterService.runSerial(id, hashTree, request.getReportId(), request.getRunMode(), request.getConfig());
             // 轮询查看报告状态，最多200次，防止死循环
             int index = 1;
             while (index < 200) {

File: backend/src/main/java/io/metersphere/commons/constants/OperLogConstants.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum OperLogConstants {
-    CREATE, DELETE, GC, RESTORE, DEBUG, UPDATE, BATCH_DEL, BATCH_UPDATE, BATCH_ADD, BATCH_RESTORE, BATCH_GC, IMPORT, EXPORT, ASSOCIATE_CASE, UN_ASSOCIATE_CASE, REVIEW, COPY, EXECUTE, SHARE, LOGIN, CREATE_PRE_TEST, OTHER
+    CREATE, DELETE, GC, RESTORE, DEBUG, UPDATE, BATCH_DEL, BATCH_UPDATE, BATCH_ADD, BATCH_RESTORE, BATCH_GC, IMPORT, EXPORT, ASSOCIATE_CASE, ASSOCIATE_ISSUE, UN_ASSOCIATE_CASE, REVIEW, COPY, EXECUTE, SHARE, LOGIN, CREATE_PRE_TEST, OTHER
 }

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -83,7 +83,7 @@ public void deleteUser(@PathVariable(value = "userId") String userId) {
     }
 
     @PostMapping("/special/update")
-    @MsAuditLog(module = "system_user", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#user.id)", content = "#msClass.getLogDetails(#user.id)", msClass = UserService.class)
+    @MsAuditLog(module = "system_user", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#user)", content = "#msClass.getLogDetails(#user)", msClass = UserService.class)
     public void updateUser(@RequestBody UserRequest user) {
         userService.updateUserRole(user);
     }
@@ -254,7 +254,7 @@ public void deleteProjectMember(@PathVariable String projectId, @PathVariable St
      * 添加组织成员
      */
     @PostMapping("/org/member/add")
-    @MsAuditLog(module = "organization_member", type = OperLogConstants.CREATE, title = "添加组织成员")
+    @MsAuditLog(module = "organization_member", type = OperLogConstants.CREATE, title = "'添加组织成员-'+#request.userIds")
     public void addOrganizationMember(@RequestBody AddOrgMemberRequest request) {
         organizationService.checkOrgOwner(request.getOrganizationId());
         userService.addOrganizationMember(request);
@@ -331,6 +331,7 @@ public void testCaseTemplateExport(HttpServletResponse response) {
     }
 
     @PostMapping("/import/{userId}")
+    @MsAuditLog(module = "system_user", type = OperLogConstants.IMPORT)
     public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String userId, HttpServletRequest request) {
         return userService.userImport(file, userId, request);
     }

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -27,6 +27,7 @@ public class TestCaseReference {
         testCaseColumns.put("status", "用例状态");
         testCaseColumns.put("stepDescription", "步骤描述");
         testCaseColumns.put("expectedResult", "预期结果");
+        testCaseColumns.put("demandName", "关联需求");
         testCaseColumns.put("comment", "评论");
         testCaseColumns.put("ms-dff-col", "tags");
 

File: backend/src/main/java/io/metersphere/track/controller/TestCaseIssuesController.java
Patch:
@@ -1,5 +1,7 @@
 package io.metersphere.track.controller;
 
+import io.metersphere.commons.constants.OperLogConstants;
+import io.metersphere.log.annotation.MsAuditLog;
 import io.metersphere.track.dto.TestCaseDTO;
 import io.metersphere.track.request.issues.IssuesRelevanceRequest;
 import io.metersphere.track.service.TestCaseIssueService;
@@ -24,6 +26,7 @@ public List<TestCaseDTO> list(@RequestBody IssuesRelevanceRequest request) {
     }
 
     @PostMapping("/relate")
+    @MsAuditLog(module = "track_test_case", type = OperLogConstants.ASSOCIATE_ISSUE, content = "#msClass.getLogDetails(#request)", msClass = TestCaseIssueService.class)
     public void relate(@RequestBody IssuesRelevanceRequest request) {
         testCaseIssueService.relate(request);
     }

File: backend/src/main/java/io/metersphere/log/vo/StatusReference.java
Patch:
@@ -45,6 +45,9 @@ public class StatusReference {
         statusMap.put("DELETE", "删除");
         statusMap.put("false", "否");
         statusMap.put("true", "是");
+        statusMap.put("functional", "功能用例");
+        statusMap.put("performance", "性能用例");
+        statusMap.put("api", "接口用例");
 
     }
 

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -17,6 +17,7 @@ public class TestCaseReference {
         testCaseColumns.put("method", "请求类型");
         testCaseColumns.put("prerequisite", "前置条件");
         testCaseColumns.put("remark", "备注");
+        testCaseColumns.put("customNum", "ID");
         testCaseColumns.put("steps", "用例步骤");
         testCaseColumns.put("other_test_name", "其他名称");
         testCaseColumns.put("review_status", "评审状态");

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -31,6 +31,7 @@
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
+import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.util.ArrayList;
 import java.util.List;

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -351,8 +351,8 @@ public void testCaseTemplateExport(HttpServletResponse response) {
 
     @PostMapping("/import/{userId}")
 
-    public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String userId) {
-        return userService.userImport(file, userId);
+    public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String userId, HttpServletRequest request) {
+        return userService.userImport(file, userId, request);
     }
 
     @PostMapping("/special/batchProcessUserInfo")

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -26,13 +26,11 @@
 import io.metersphere.service.UserService;
 import io.metersphere.service.WorkspaceService;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
-import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.util.ArrayList;
 import java.util.List;
@@ -54,7 +52,6 @@ public class UserController {
 
     @PostMapping("/special/add")
 
-    @MsAuditLog(module = "system_user", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#user.id)", msClass = UserService.class)
     @RequiresRoles(RoleConstants.ADMIN)
     @MsAuditLog(module = "system_user", type = OperLogConstants.CREATE, content = "#msClass.getLogDetails(#user)", msClass = UserService.class)
     public UserDTO insertUser(@RequestBody UserRequest user) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtGroupMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.base.domain.Group;
 import io.metersphere.controller.request.group.EditGroupRequest;
 import io.metersphere.dto.GroupDTO;
 import org.apache.ibatis.annotations.Param;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtUserGroupMapper.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.base.domain.Group;
-import io.metersphere.base.domain.Role;
 import io.metersphere.base.domain.User;
 import io.metersphere.controller.request.member.QueryMemberRequest;
 import io.metersphere.controller.request.organization.QueryOrgMemberRequest;

File: backend/src/main/java/io/metersphere/service/GroupService.java
Patch:
@@ -197,7 +197,7 @@ public List<Map<String, Object>> getAllUserGroup(String userId) {
         UserGroupExample userGroupExample = new UserGroupExample();
         userGroupExample.createCriteria().andUserIdEqualTo(userId);
         List<UserGroup> userGroups = userGroupMapper.selectByExample(userGroupExample);
-        List<String> groupsIds = userGroups.stream().map(UserGroup::getGroupId).collect(Collectors.toList());
+        List<String> groupsIds = userGroups.stream().map(UserGroup::getGroupId).distinct().collect(Collectors.toList());
         for (int i = 0; i < groupsIds.size(); i++) {
             String id = groupsIds.get(i);
             Group group = groupMapper.selectByPrimaryKey(id);

File: backend/src/main/java/io/metersphere/service/OrganizationService.java
Patch:
@@ -208,7 +208,7 @@ public String getLogDetails(String id) {
 
     public OrganizationResource listResource(String groupId, String type) {
         Group group = groupMapper.selectByPrimaryKey(groupId);
-        final String orgId = group.getScopeId();
+        String orgId = group.getScopeId();
         OrganizationResource resource = new OrganizationResource();
         if (!StringUtils.equals("global", orgId)) {
             Organization organization = organizationMapper.selectByPrimaryKey(orgId);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -830,7 +830,7 @@ private String generateJmx(ApiScenarioWithBLOBs apiScenario) {
     }
 
     private void checkEnv(RunScenarioRequest request, List<ApiScenarioWithBLOBs> apiScenarios) {
-        if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.SCENARIO.name())) {
+        if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equalsAny(request.getRunMode(), ApiRunMode.SCENARIO.name(), ApiRunMode.SCENARIO_PLAN.name())) {
             StringBuilder builder = new StringBuilder();
             for (ApiScenarioWithBLOBs apiScenarioWithBLOBs : apiScenarios) {
                 try {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1200,7 +1200,7 @@ public String run(RunScenarioRequest request) {
                 }
                 return this.modeRun(request);
             } else {
-                return this.excute(request);
+                return this.modeRun(request);
             }
         } else {
             return this.excute(request);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -36,6 +36,7 @@
 import io.metersphere.log.utils.ReflexObjectUtil;
 import io.metersphere.log.vo.DetailColumn;
 import io.metersphere.log.vo.OperatingLogDetails;
+import io.metersphere.log.vo.StatusReference;
 import io.metersphere.log.vo.api.DefinitionReference;
 import io.metersphere.service.FileService;
 import io.metersphere.service.ScheduleService;
@@ -1090,7 +1091,7 @@ public String getLogDetails(String id) {
         ApiDefinitionWithBLOBs bloBs = apiDefinitionMapper.selectByPrimaryKey(id);
         if (bloBs != null) {
             List<DetailColumn> columns = ReflexObjectUtil.getColumns(bloBs, DefinitionReference.definitionColumns);
-            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(id), bloBs.getProjectId(), bloBs.getCreateUser(), columns);
+            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(id), bloBs.getProjectId(), bloBs.getName(), bloBs.getCreateUser(), columns);
             return JSON.toJSONString(details);
         }
         return null;
@@ -1125,7 +1126,7 @@ public String getLogDetails(ApiBatchRequest request) {
                 } else if (StringUtils.isNotEmpty(request.getStatus())) {
                     columns.clear();
                     definitions.forEach(item -> {
-                        DetailColumn column = new DetailColumn(DefinitionReference.definitionColumns.get("status"), "status", item.getStatus(), null);
+                        DetailColumn column = new DetailColumn(DefinitionReference.definitionColumns.get("status"), "status", StatusReference.statusMap.get(item.getStatus()), null);
                         columns.add(column);
                     });
                 } else if (StringUtils.isNotEmpty(request.getUserId())) {

File: backend/src/main/java/io/metersphere/controller/OrganizationController.java
Patch:
@@ -72,7 +72,7 @@ public List<Organization> getOrganizationListByUserId(@PathVariable String userI
 
     @PostMapping("/member/update")
     @RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.ORG_ADMIN}, logical = Logical.OR)
-    @MsAuditLog(module = "organization_member", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#memberDTO.id)", content = "#msClass.getLogDetails(#memberDTO.id)", msClass = OrganizationService.class)
+    @MsAuditLog(module = "organization_member", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#memberDTO)", content = "#msClass.getLogDetails(#memberDTO)", msClass = OrganizationService.class)
     public void updateOrgMember(@RequestBody OrganizationMemberDTO memberDTO) {
         organizationService.updateOrgMember(memberDTO);
     }

File: backend/src/main/java/io/metersphere/controller/WorkspaceController.java
Patch:
@@ -70,7 +70,7 @@ public void updateWorkspaceByAdmin(@RequestBody Workspace workspace) {
 
     @GetMapping("special/delete/{workspaceId}")
     @RequiresRoles(RoleConstants.ADMIN)
-    @MsAuditLog(module = "system_workspace", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#workspaceId)",  msClass = WorkspaceService.class)
+    @MsAuditLog(module = "system_workspace", type = OperLogConstants.DELETE, beforeEvent = "#msClass.getLogDetails(#workspaceId)", msClass = WorkspaceService.class)
     public void deleteWorkspaceByAdmin(@PathVariable String workspaceId) {
         userService.refreshSessionUser("workspace", workspaceId);
         workspaceService.deleteWorkspace(workspaceId);
@@ -113,7 +113,7 @@ public List<Workspace> getWorkspaceListByOrgIdAndUserId() {
 
     @PostMapping("/member/update")
     @RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.ORG_ADMIN, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    @MsAuditLog(module = "workspace_member", type = OperLogConstants.UPDATE, title = "#memberDTO.name")
+    @MsAuditLog(module = "workspace_member", type = OperLogConstants.UPDATE, beforeEvent = "#msClass.getLogDetails(#memberDTO)", content = "#msClass.getLogDetails(#memberDTO)", msClass = WorkspaceService.class)
     public void updateOrgMember(@RequestBody WorkspaceMemberDTO memberDTO) {
         workspaceService.updateWorkspaceMember(memberDTO);
     }

File: backend/src/main/java/io/metersphere/log/vo/api/AutomationReference.java
Patch:
@@ -22,6 +22,6 @@ public class AutomationReference {
         automationColumns.put("scenarioDefinition", "场景步骤");
         automationColumns.put("description", "描述");
         // 需要深度对比的字段，可以支持多个req1,req2
-        automationColumns.put("ms-dff-col", "scenarioDefinition");
+        automationColumns.put("ms-dff-col", "scenarioDefinition,tags");
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/api/DefinitionReference.java
Patch:
@@ -23,7 +23,7 @@ public class DefinitionReference {
         definitionColumns.put("response", "返回参数");
         definitionColumns.put("description", "描述");
         // 需要深度对比的字段，可以支持多个req1,req2
-        definitionColumns.put("ms-dff-col", "request,response");
+        definitionColumns.put("ms-dff-col", "request,response,tags");
 
         // 用例列数据
         caseColumns.put("name", "用例名称");
@@ -34,7 +34,7 @@ public class DefinitionReference {
         caseColumns.put("description", "描述");
         caseColumns.put("request", "请求参数");
         // 深度对比字段
-        caseColumns.put("ms-dff-col", "request");
+        caseColumns.put("ms-dff-col", "request,tags");
 
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReference.java
Patch:
@@ -27,5 +27,7 @@ public class TestCaseReference {
         testCaseColumns.put("stepDescription", "步骤描述");
         testCaseColumns.put("expectedResult", "预期结果");
         testCaseColumns.put("comment", "评论");
+        testCaseColumns.put("ms-dff-col", "tags");
+
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/log/vo/track/TestCaseReviewReference.java
Patch:
@@ -14,7 +14,9 @@ public class TestCaseReviewReference {
         testCaseReviewColumns.put("createUser", "创建人");
         testCaseReviewColumns.put("status", "状态");
         testCaseReviewColumns.put("tags", "标签");
+        testCaseReviewColumns.put("endTime", "截止时间");
         testCaseReviewColumns.put("description", "描述");
+        testCaseReviewColumns.put("ms-dff-col", "tags");
 
         commentReviewColumns.put("author","评论人");
         commentReviewColumns.put("description","评论内容");

File: backend/src/main/java/io/metersphere/log/vo/track/TestPlanReference.java
Patch:
@@ -22,6 +22,7 @@ public class TestPlanReference {
         testPlanColumns.put("plannedStartTime", "计划开始时间");
         testPlanColumns.put("plannedEndTime", "计划结束时间");
         testPlanColumns.put("description", "描述");
+        testPlanColumns.put("ms-dff-col", "tags");
 
         reportColumns.put("name", "名称");
         reportColumns.put("startTime", "开始时间");

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -625,7 +625,7 @@ public Long getReportCountByTestId(String testId) {
     }
 
     public String getLogDetails(String id) {
-        LoadTest loadTest = loadTestMapper.selectByPrimaryKey(id);
+        LoadTestWithBLOBs loadTest = loadTestMapper.selectByPrimaryKey(id);
         if (loadTest != null) {
             List<DetailColumn> columns = ReflexObjectUtil.getColumns(loadTest, PerformanceReference.performanceColumns);
             OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(loadTest.getId()), loadTest.getProjectId(), loadTest.getName(), loadTest.getCreateUser(), columns);

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -292,13 +292,13 @@ public String getLogDetails(String id) {
         Project project = projectMapper.selectByPrimaryKey(id);
         if (project != null) {
             List<DetailColumn> columns = ReflexObjectUtil.getColumns(project, SystemReference.projectColumns);
-            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(project.getId()), null, project.getName(), project.getCreateUser(), columns);
+            OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(project.getId()), project.getId(), project.getName(), project.getCreateUser(), columns);
             return JSON.toJSONString(details);
         } else {
             FileMetadata fileMetadata = fileService.getFileMetadataById(id);
             if (fileMetadata != null) {
                 List<DetailColumn> columns = ReflexObjectUtil.getColumns(fileMetadata, SystemReference.projectColumns);
-                OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(fileMetadata.getId()), null, fileMetadata.getName(), null, columns);
+                OperatingLogDetails details = new OperatingLogDetails(JSON.toJSONString(fileMetadata.getId()), fileMetadata.getProjectId(), fileMetadata.getName(), null, columns);
                 return JSON.toJSONString(details);
             }
         }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -229,7 +229,7 @@ public ResponseEntity<byte[]> preview(@PathVariable String fileId) {
     }
 
     @PostMapping("/save")
-    @MsAuditLog(module = "track_test_case", type = OperLogConstants.CREATE, title = "#request.name", content = "#msClass.getLogDetails(#request.id)", msClass = TestCaseService.class)
+    @MsAuditLog(module = "track_test_case", type = OperLogConstants.CREATE, title = "#testCaseWithBLOBs.name", content = "#msClass.getLogDetails(#testCaseWithBLOBs.id)", msClass = TestCaseService.class)
     public TestCaseWithBLOBs saveTestCase(@RequestBody TestCaseWithBLOBs testCaseWithBLOBs) {
         testCaseWithBLOBs.setId(UUID.randomUUID().toString());
         return testCaseService.addTestCase(testCaseWithBLOBs);

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -18,8 +18,6 @@
 import io.metersphere.log.vo.api.ModuleReference;
 import io.metersphere.service.NodeTreeService;
 import io.metersphere.service.ProjectService;
-import io.metersphere.track.dto.TestCaseNodeDTO;
-import io.metersphere.track.request.testcase.QueryTestCaseRequest;
 import io.metersphere.track.service.TestPlanApiCaseService;
 import io.metersphere.track.service.TestPlanProjectService;
 import org.apache.commons.collections.CollectionUtils;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -21,8 +21,6 @@
 import io.metersphere.log.vo.api.ModuleReference;
 import io.metersphere.service.NodeTreeService;
 import io.metersphere.service.ProjectService;
-import io.metersphere.track.dto.TestCaseNodeDTO;
-import io.metersphere.track.request.testcase.QueryTestCaseRequest;
 import io.metersphere.track.service.TestPlanProjectService;
 import io.metersphere.track.service.TestPlanScenarioCaseService;
 import org.apache.commons.lang3.StringUtils;

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -30,7 +30,6 @@
 import org.apache.ibatis.session.ExecutorType;
 import org.apache.ibatis.session.SqlSession;
 import org.apache.ibatis.session.SqlSessionFactory;
-import org.apache.poi.ss.formula.functions.T;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -641,6 +641,9 @@ public TestCaseReportMetricDTO getMetric(String planId) {
     }
 
     public List<TestPlan> getTestPlanByIds(List<String> planIds) {
+        if (CollectionUtils.isEmpty(planIds)) {
+            return new ArrayList<>();
+        }
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andIdIn(planIds);
         return testPlanMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/api/parse/HarScenarioAbstractParser.java
Patch:
@@ -63,7 +63,7 @@ private void parseRequestBody(HarRequest requestBody, Body body) {
             return;
         }
         HarPostData content = requestBody.postData;
-        if (!StringUtils.equalsIgnoreCase("GET", requestBody.method) || requestBody.postData == null) {
+        if (!StringUtils.equalsIgnoreCase("GET", requestBody.method) && requestBody.postData == null) {
             return;
         }
         String contentType = content.mimeType;

File: backend/src/main/java/io/metersphere/performance/service/PerformanceReportService.java
Patch:
@@ -145,7 +145,8 @@ private String getContent(String id, ReportKeys reportKey) {
         example.createCriteria().andReportIdEqualTo(id).andReportKeyEqualTo(reportKey.name());
         List<LoadTestReportResult> loadTestReportResults = loadTestReportResultMapper.selectByExampleWithBLOBs(example);
         if (loadTestReportResults.size() == 0) {
-            MSException.throwException("get report result error.");
+            LogUtil.warn("get report result error");
+            return "";
         }
         return loadTestReportResults.get(0).getReportValue();
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -625,7 +625,6 @@ private List<TestCaseExcelData> generateExportTemplate() {
             data.setNodePath(path.toString());
             data.setPriority("P" + i % 4);
             String type = types.get(i % 3);
-            data.setType(type);
 //            if (StringUtils.equals(TestCaseConstants.Type.Functional.getValue(), type)) {
 //                data.setMethod(TestCaseConstants.Method.Manual.getValue());
 //            } else {
@@ -695,7 +694,6 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
             data.setName(t.getName());
             data.setNodePath(t.getNodePath());
             data.setPriority(t.getPriority());
-            data.setType(t.getType());
             data.setCustomNum(t.getCustomNum());
             if (StringUtils.isBlank(t.getStepModel())) {
                 data.setStepModel(TestCaseConstants.StepModel.STEP.name());

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.excel.domain;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
 import com.alibaba.excel.annotation.ExcelProperty;
 import com.alibaba.excel.annotation.write.style.ColumnWidth;
 import io.metersphere.excel.annotation.NotRequired;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtIssuesMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtIssuesMapper {
     List<IssuesDao> getIssuesByCaseId(@Param("request") IssuesRequest issuesRequest);
 
     List<IssuesDao> getIssuesByProjectId(@Param("request") IssuesRequest issuesRequest);
+
+    List<IssuesDao> getRelateIssues(@Param("request") IssuesRequest request);
 }

File: backend/src/main/java/io/metersphere/track/issue/domain/JiraField.java
Patch:
@@ -3,8 +3,6 @@
 import lombok.Getter;
 import lombok.Setter;
 
-import java.util.List;
-
 @Getter
 @Setter
 public class JiraField {

File: backend/src/main/java/io/metersphere/base/domain/CustomFieldTemplate.java
Patch:
@@ -21,7 +21,5 @@ public class CustomFieldTemplate implements Serializable {
 
     private String customData;
 
-    private Boolean isThirdPart;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/dto/CustomFieldDao.java
Patch:
@@ -12,6 +12,4 @@ public class CustomFieldDao extends CustomField {
     private String defaultValue;
 
     private String customData;
-
-    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldItemDTO.java
Patch:
@@ -8,5 +8,4 @@ public class CustomFieldItemDTO {
     private String name;
     private String value;
     private String customData;
-    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldTemplateDao.java
Patch:
@@ -16,6 +16,4 @@ public class CustomFieldTemplateDao extends CustomFieldTemplate {
     private String options;
 
     private Boolean system;
-
-    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/track/issue/JiraPlatform.java
Patch:
@@ -252,7 +252,7 @@ public void addIssue(IssuesUpdateRequest issuesRequest) {
 //                collect(Collectors.toMap(JiraField::getId, JiraField::isCustom));
 
         customFields.forEach(item -> {
-            if (StringUtils.isNotBlank(item.getCustomData()) && item.getIsThirdPart() != null && item.getIsThirdPart()) {
+            if (StringUtils.isNotBlank(item.getCustomData())) {
 //                if (isCustomMap.get(item.getCustomData())) {
 //                    fields.put(item.getCustomData(), item.getValue());
 //                } else {

File: backend/src/main/java/io/metersphere/track/issue/TapdPlatform.java
Patch:
@@ -177,7 +177,7 @@ public void addIssue(IssuesUpdateRequest issuesRequest) {
         paramMap.add("current_owner", usersStr);
 
         customFields.forEach(item -> {
-            if (StringUtils.isNotBlank(item.getCustomData()) && item.getIsThirdPart() != null && item.getIsThirdPart()) {
+            if (StringUtils.isNotBlank(item.getCustomData())) {
                 paramMap.add(item.getCustomData(), item.getValue());
             }
         });

File: backend/src/main/java/io/metersphere/base/domain/CustomFieldTemplate.java
Patch:
@@ -21,5 +21,7 @@ public class CustomFieldTemplate implements Serializable {
 
     private String customData;
 
+    private Boolean isThirdPart;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/dto/CustomFieldDao.java
Patch:
@@ -12,4 +12,6 @@ public class CustomFieldDao extends CustomField {
     private String defaultValue;
 
     private String customData;
+
+    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldItemDTO.java
Patch:
@@ -8,4 +8,5 @@ public class CustomFieldItemDTO {
     private String name;
     private String value;
     private String customData;
+    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/dto/CustomFieldTemplateDao.java
Patch:
@@ -16,4 +16,6 @@ public class CustomFieldTemplateDao extends CustomFieldTemplate {
     private String options;
 
     private Boolean system;
+
+    private Boolean isThirdPart;
 }

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -168,6 +168,7 @@ protected void insertIssuesWithoutContext(String id, IssuesUpdateRequest issuesR
         issues.setPlatform(issuesRequest.getPlatform());
         issues.setProjectId(issuesRequest.getProjectId());
         issues.setCustomFields(issuesRequest.getCustomFields());
+        issues.setCreator(issuesRequest.getCreator());
         issues.setCreateTime(System.currentTimeMillis());
         issues.setUpdateTime(System.currentTimeMillis());
         issuesMapper.insert(issues);

File: backend/src/main/java/io/metersphere/base/domain/ApiTestEnvironment.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiTestEnvironment implements Serializable {

File: backend/src/main/java/io/metersphere/base/domain/ApiTestEnvironmentWithBLOBs.java
Patch:
@@ -18,7 +18,5 @@ public class ApiTestEnvironmentWithBLOBs extends ApiTestEnvironment implements S
 
     private String hosts;
 
-    private String customData;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1261,6 +1261,7 @@ public String debugRun(RunDefinitionRequest request, List<MultipartFile> bodyFil
         HashTree hashTree = null;
         try {
             hashTree = request.getTestElement().generateHashTree(config);
+            LogUtil.info(request.getTestElement().getJmx(hashTree));
         } catch (Exception e) {
             MSException.throwException(e.getMessage());
         }

File: backend/src/main/java/io/metersphere/performance/controller/request/MetricQuery.java
Patch:
@@ -11,8 +11,8 @@ public static Map<String, String> getMetricQueryMap() {
             put("cpu", "100 - (avg by (instance) (irate(node_cpu_seconds_total{instance='%1$s', mode='idle'}[1m])) * 100)");
             put("disk", "100 - node_filesystem_free_bytes{instance='%1$s'} / node_filesystem_size_bytes{instance='%1$s'} * 100");
             put("memory", "(node_memory_MemTotal_bytes{instance='%1$s'} - node_memory_MemFree_bytes{instance='%1$s'}) / node_memory_MemTotal_bytes{instance='%1$s'} * 100");
-            put("netIn", "sum by (instance) (irate(node_network_receive_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024/1024)");
-            put("netOut", "sum by (instance) (irate(node_network_transmit_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024/1024)");
+            put("netIn", "sum by (instance) (irate(node_network_receive_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024)");
+            put("netOut", "sum by (instance) (irate(node_network_transmit_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024)");
         }};
 
     }

File: backend/src/main/java/io/metersphere/base/domain/LoadTestReport.java
Patch:
@@ -39,5 +39,7 @@ public class LoadTestReport implements Serializable {
 
     private Long testDuration;
 
+    private String testResourcePoolId;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/LoadTestReportWithBLOBs.java
Patch:
@@ -15,5 +15,7 @@ public class LoadTestReportWithBLOBs extends LoadTestReport implements Serializa
 
     private String jmxContent;
 
+    private String advancedConfiguration;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -354,8 +354,10 @@ private void startEngine(LoadTestWithBLOBs loadTest, Engine engine, String trigg
             loadTestMapper.updateByPrimaryKeySelective(loadTest);
             // 启动正常插入 report
             testReport.setLoadConfiguration(loadTest.getLoadConfiguration());
+            testReport.setAdvancedConfiguration(loadTest.getAdvancedConfiguration());
             testReport.setStatus(PerformanceTestStatus.Starting.name());
             testReport.setProjectId(loadTest.getProjectId());
+            testReport.setTestResourcePoolId(loadTest.getTestResourcePoolId());
             testReport.setTestName(loadTest.getName());
             loadTestReportMapper.insertSelective(testReport);
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -234,7 +234,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                         LogUtil.error(e.getMessage(), e);
                     }
                 } else {
-                    if (!isCustomizeReq()) {
+                    if (!isCustomizeReq() || isRefEnvironment) {
                         //1.9 增加对Mock环境的判断
                         if (this.isMockEnvironment()) {
                             url = httpConfig.getProtocol() + "://" + httpConfig.getSocket() + "/mock/" + this.getProjectId();

File: backend/src/main/java/io/metersphere/performance/controller/request/MetricQuery.java
Patch:
@@ -11,8 +11,8 @@ public static Map<String, String> getMetricQueryMap() {
             put("cpu", "100 - (avg by (instance) (irate(node_cpu_seconds_total{instance='%1$s', mode='idle'}[1m])) * 100)");
             put("disk", "100 - node_filesystem_free_bytes{instance='%1$s'} / node_filesystem_size_bytes{instance='%1$s'} * 100");
             put("memory", "(node_memory_MemTotal_bytes{instance='%1$s'} - node_memory_MemFree_bytes{instance='%1$s'}) / node_memory_MemTotal_bytes{instance='%1$s'} * 100");
-            put("netIn", "sum by (instance) (irate(node_network_receive_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/128)");
-            put("netOut", "sum by (instance) (irate(node_network_transmit_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/128)");
+            put("netIn", "sum by (instance) (irate(node_network_receive_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024/1024)");
+            put("netOut", "sum by (instance) (irate(node_network_transmit_bytes_total{instance='%1$s',device!~'bond.*?|lo'}[1m])/1024/1024)");
         }};
 
     }

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -29,10 +29,10 @@ public class JmeterFileService {
     @Resource
     private ExtLoadTestReportMapper extLoadTestReportMapper;
 
-    public byte[] downloadZip(String testId, String resourceId, double ratio, long startTime, String reportId, int resourceIndex) {
+    public byte[] downloadZip(String testId, double[] ratios, long startTime, String reportId, int resourceIndex) {
         try {
             LoadTestWithBLOBs loadTest = loadTestMapper.selectByPrimaryKey(testId);
-            EngineContext context = EngineFactory.createContext(loadTest, resourceId, ratio, startTime, reportId, resourceIndex);
+            EngineContext context = EngineFactory.createContext(loadTest, ratios, startTime, reportId, resourceIndex);
             return zipFilesToByteArray(context);
         } catch (MSException e) {
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/api/dto/scenario/HttpConfig.java
Patch:
@@ -22,6 +22,7 @@ public HttpConfig initHttpConfig(HttpConfigCondition configCondition) {
         HttpConfig config = new HttpConfig();
         config.isMock = this.isMock;
         BeanUtils.copyBean(config, configCondition);
+        config.setHeaders(configCondition.getHeaders());
         return config;
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -285,7 +285,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
             String executionEnvironment = apiScenario.getScenarioDefinition();
             JSONObject json = JSONObject.parseObject(executionEnvironment);
             String name = "";
-            if (json.getString("environmentMap").length() > 2) {
+            if (json != null && json.getString("environmentMap") != null && json.getString("environmentMap").length() > 2) {
                 JSONObject environment = JSONObject.parseObject(json.getString("environmentMap"));
                 String environmentId = environment.get(apiScenario.getProjectId()).toString();
                 name = apiAutomationService.get(environmentId).getName();

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1013,6 +1013,7 @@ private boolean checkScenarioEnv(ApiScenarioWithBLOBs apiScenarioWithBLOBs) {
                     isEnv = false;
                 } else {
                     Set<String> projectIds = apiScenarioEnv.getProjectIds();
+                    projectIds.remove(null);
                     if (CollectionUtils.isNotEmpty(envMap.keySet())) {
                         for (String id : projectIds) {
                             Project project = projectMapper.selectByPrimaryKey(id);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -306,7 +306,9 @@ private void parseKvBody(Schema schema, Body body, Object data, Map<String, Sche
                     kv.setType("file");
                 }
             }
-            body.getKvs().add(kv);
+            if (body != null) {
+                body.getKvs().add(kv);
+            }
         }
     }
 

File: backend/src/main/java/io/metersphere/controller/TestCaseTemplateController.java
Patch:
@@ -32,6 +32,7 @@ public void add(@RequestBody UpdateCaseFieldTemplateRequest request) {
     }
 
     @PostMapping("/list/{goPage}/{pageSize}")
+    @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
     public Pager<List<TestCaseTemplateWithBLOBs>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseQueryRequest request) {
         Page<List<TestCaseTemplateWithBLOBs>> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testCaseTemplateService.list(request));
@@ -48,11 +49,13 @@ public void update(@RequestBody UpdateCaseFieldTemplateRequest request) {
     }
 
     @GetMapping("/option/{workspaceId}")
+    @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
     public List<TestCaseTemplate> list(@PathVariable String workspaceId) {
         return testCaseTemplateService.getOption(workspaceId);
     }
 
     @GetMapping("/get/relate/{projectId}")
+    @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
     public TestCaseTemplateDao getTemplate(@PathVariable String projectId) {
         return testCaseTemplateService.getTemplate(projectId);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -77,7 +77,7 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
                 parseParameters(operation, request);
                 addBodyHeader(request);
                 if (StringUtils.isNotBlank(basePath)) {
-                    String pathStr = basePath + apiDefinition.getPath().replaceAll("//","/");
+                    String pathStr = (basePath + apiDefinition.getPath()).replaceAll("//","/");
                     apiDefinition.setPath(pathStr);
                     request.setPath(pathStr);
                 }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -31,7 +31,7 @@
 
 @RestController
 @RequestMapping(value = "/api/automation")
-@RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
+@RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
 public class ApiAutomationController {
 
     @Resource

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -156,7 +156,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (arguments != null) {
             tree.add(ParameterConfig.valueSupposeMock(arguments));
         }
-        this.addCsvDataSet(tree, variables,config);
+        this.addCsvDataSet(tree, variables, config, "shareMode.group");
         this.addCounter(tree, variables);
         this.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(this.headers)) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -188,7 +188,7 @@ protected Map<String, EnvironmentConfig> getEnvironmentConfig(String environment
         return null;
     }
 
-    protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, ParameterConfig config) {
+    protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, ParameterConfig config, String shareMode) {
         if (CollectionUtils.isNotEmpty(variables)) {
             List<ScenarioVariable> list = variables.stream().filter(ScenarioVariable::isCSVValid).collect(Collectors.toList());
             if (CollectionUtils.isNotEmpty(list)) {
@@ -206,8 +206,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, Pa
                         csvDataSet.setProperty("filename", BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName());
                     }
                     csvDataSet.setIgnoreFirstLine(false);
-                    // csvDataSet.setProperty("quotedData",true);
-                    csvDataSet.setProperty("shareMode", "shareMode.group");
+                    csvDataSet.setProperty("shareMode", shareMode);
                     csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -56,7 +56,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         final HashTree groupTree = controller(tree);
         if (CollectionUtils.isNotEmpty(config.getVariables())) {
-            this.addCsvDataSet(groupTree, config.getVariables(), config);
+            this.addCsvDataSet(groupTree, config.getVariables(), config, "shareMode.thread");
             this.addCounter(groupTree, config.getVariables());
             this.addRandom(groupTree, config.getVariables());
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -249,7 +249,7 @@ private void checkScenarioNum(SaveApiScenarioRequest request) {
             String projectId = request.getProjectId();
             Project project = projectMapper.selectByPrimaryKey(projectId);
             if (project != null) {
-                Boolean customNum = project.getCustomNum();
+                Boolean customNum = project.getScenarioCustomNum();
                 // 未开启自定义ID
                 if (!customNum) {
                     request.setCustomNum(null);

File: backend/src/main/java/io/metersphere/xmind/XmindCaseParser.java
Patch:
@@ -201,7 +201,7 @@ private void recursion(Attached parent, int level, List<Attached> attacheds) {
                 item.setParent(parent);
                 this.formatTestCase(item.getTitle(), parent.getPath(), item.getChildren() != null ? item.getChildren().getAttached() : null);
             } else {
-                String nodePath = parent.getPath() + "/" + item.getTitle();
+                String nodePath = parent.getPath().trim() + "/" + item.getTitle().trim();
                 item.setPath(nodePath);
                 item.setParent(parent);
                 if (item.getChildren() != null && CollectionUtils.isNotEmpty(item.getChildren().getAttached())) {
@@ -286,7 +286,7 @@ private void formatTestCase(String title, String nodePath, List<Attached> attach
         // 用例名称
         String name = title.replace(tcArrs[0] + "：", "").replace(tcArrs[0] + ":", "");
         testCase.setName(name);
-        testCase.setNodePath(nodePath);
+        testCase.setNodePath(nodePath.trim());
 
         // 用例等级和用例性质处理
         if (tcArrs[0].indexOf("-") != -1) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -66,6 +66,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         // 不打开执行成功后轮询功能，则成功后就停止循环
         if (StringUtils.equals(this.loopType, LoopConstants.LOOP_COUNT.name()) && this.countController != null && !countController.isProceed()) {
             ResultAction resultAction = new ResultAction();
+            resultAction.setProperty(TestElement.TEST_CLASS, ResultAction.class.getName());
+            resultAction.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ResultActionGui"));
             resultAction.setName("ResultAction");
             resultAction.setProperty("OnError.action", "1000");
             groupTree.add(resultAction);

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -258,6 +258,7 @@ private MsScenario createScenario(Scenario oldScenario, String projectId) {
                 if (StringUtils.isEmpty(preProcessor.getName())) {
                     preProcessor.setName("JSR223PreProcessor");
                 }
+                preProcessor.setScriptLanguage(request.getJsr223PreProcessor().getLanguage());
                 preProcessor.setType("JSR223PreProcessor");
                 preProcessor.setIndex(index + "");
                 preProcessor.setHashTree(new LinkedList<>());
@@ -271,6 +272,7 @@ private MsScenario createScenario(Scenario oldScenario, String projectId) {
                 if (StringUtils.isEmpty(preProcessor.getName())) {
                     preProcessor.setName("JSR223PostProcessor");
                 }
+                preProcessor.setScriptLanguage(request.getJsr223PostProcessor().getLanguage());
                 preProcessor.setType("JSR223PostProcessor");
                 preProcessor.setIndex(index + "");
                 preProcessor.setHashTree(new LinkedList<>());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -205,8 +205,8 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, Pa
                         csvDataSet.setProperty("filename", BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName());
                     }
                     csvDataSet.setIgnoreFirstLine(false);
-                    csvDataSet.setRecycle(true);
-                    //csvDataSet.setProperty("shareMode","shareMode.group");
+                    // csvDataSet.setProperty("quotedData",true);
+                    csvDataSet.setProperty("shareMode","shareMode.group");
                     csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -61,7 +61,6 @@
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.stream.Collectors;
-
 @Service
 @Transactional(rollbackFor = Exception.class)
 public class ApiAutomationService {
@@ -785,7 +784,7 @@ public String parallelRun(RunScenarioRequest request) {
             batchMapper.insert(report);
 
             // 调用执行方法
-            // jMeterService.runDefinition(report.getId(), hashTree, request.getReportId(), request.getRunMode());
+             //jMeterService.runDefinition(report.getId(), hashTree, request.getReportId(), request.getRunMode());
             map.put(report.getId(), hashTree);
             // 重置报告ID
             reportId = UUID.randomUUID().toString();
@@ -794,6 +793,7 @@ public String parallelRun(RunScenarioRequest request) {
         // 开始执行
         ExecutorService executorService = Executors.newFixedThreadPool(map.size());
         for (String key : map.keySet()) {
+            // jMeterService.runDefinition(key, map.get(key), request.getReportId(), request.getRunMode());
             executorService.submit(new ParallelExecTask(jMeterService, key, map.get(key), request));
         }
 
@@ -1079,7 +1079,6 @@ public String debugRun(RunDefinitionRequest request, List<MultipartFile> bodyFil
         } catch (Exception e) {
             MSException.throwException(e.getMessage());
         }
-        System.out.println(request.getTestElement().getJmx(hashTree));
 
         // 调用执行方法
         APIScenarioReportResult report = createScenarioReport(request.getId(), request.getScenarioId(), request.getScenarioName(), ReportTriggerMode.MANUAL.name(), request.getExecuteType(), request.getProjectId(),

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/swagger/SwaggerParams.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition.parse.swagger;
 
+import com.alibaba.fastjson.JSONObject;
 import lombok.*;
 
 @Getter
@@ -9,4 +10,5 @@ public class SwaggerParams {
     private String in;  //  参数类型，可选值为 path,header,query 等
     private String description;
     private boolean required;   //  是否是必填参数
+    private JSONObject schema;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -206,7 +206,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, Pa
                     }
                     csvDataSet.setIgnoreFirstLine(false);
                     csvDataSet.setRecycle(true);
-                    csvDataSet.setProperty("shareMode","shareMode.thread");
+                    //csvDataSet.setProperty("shareMode","shareMode.group");
                     csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -206,6 +206,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables, Pa
                     }
                     csvDataSet.setIgnoreFirstLine(false);
                     csvDataSet.setRecycle(true);
+                    csvDataSet.setProperty("shareMode","shareMode.thread");
                     csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -361,7 +361,6 @@ private void margeReport(TestResult result, StringBuilder scenarioIds, StringBui
             } else {
                 report.setUserId(SessionUtils.getUserId());
             }
-            report.setTriggerMode(runMode);
             report.setExecuteType(ExecuteType.Saved.name());
             report.setProjectId(projectId);
             report.setScenarioName(scenarioNames.toString().substring(0, scenarioNames.toString().length() - 1));

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -276,14 +276,14 @@ public void testCaseTemplateExport(HttpServletResponse response) {
         esbImportService.templateExport(response);
     }
 
-    @GetMapping("/getMockEnvironment/{projectId}")
-    public ApiTestEnvironmentWithBLOBs getMockEnvironment(@PathVariable String projectId, HttpServletRequest request) {
+    @GetMapping("/getMockEnvironment/{projectId}/{protocal}")
+    public ApiTestEnvironmentWithBLOBs getMockEnvironment(@PathVariable String projectId, @PathVariable String protocal, HttpServletRequest request) {
         String requestUrl = request.getRequestURL().toString();
         String baseUrl = "";
         if (requestUrl.contains("/api/definition")) {
             baseUrl = requestUrl.split("/api/definition")[0];
         }
-        return apiTestEnvironmentService.getMockEnvironmentByProjectId(projectId, baseUrl);
+        return apiTestEnvironmentService.getMockEnvironmentByProjectId(projectId, protocal, baseUrl);
     }
 
 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/HttpConfig.java
Patch:
@@ -20,6 +20,7 @@ public class HttpConfig {
 
     public HttpConfig initHttpConfig(HttpConfigCondition configCondition) {
         HttpConfig config = new HttpConfig();
+        config.isMock = this.isMock;
         BeanUtils.copyBean(config, configCondition);
         return config;
     }

File: backend/src/main/java/io/metersphere/base/domain/Project.java
Patch:
@@ -32,4 +32,6 @@ public class Project implements Serializable {
     private Boolean customNum;
 
     private static final long serialVersionUID = 1L;
+
+    private String protocal;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -75,7 +75,7 @@ public Project addProject(@RequestBody Project project, HttpServletRequest reque
         if (requestUrl.contains("/project/add")) {
             baseUrl = requestUrl.split("/project/add")[0];
         }
-        apiTestEnvironmentService.getMockEnvironmentByProjectId(returnModel.getId(), baseUrl);
+        apiTestEnvironmentService.getMockEnvironmentByProjectId(returnModel.getId(), project.getProtocal(), baseUrl);
 
         return returnModel;
     }

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ApiScenarioImportUtil.java
Patch:
@@ -51,6 +51,9 @@ public static ApiScenarioModule buildModule(ApiScenarioModule parentModule, Stri
 
     public static void createModule(ApiScenarioModule module) {
         ApiScenarioModuleService apiModuleService = CommonBeanFactory.getBean(ApiScenarioModuleService.class);
+        if (module.getName().length() > 64) {
+            module.setName(module.getName().substring(0, 64));
+        }
         List<ApiScenarioModule> apiModules = apiModuleService.selectSameModule(module);
         if (CollectionUtils.isEmpty(apiModules)) {
             apiModuleService.addNode(module);

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImportUtil.java
Patch:
@@ -60,6 +60,9 @@ public static ApiModule buildModule(ApiModule parentModule, String name, String
     public static void createModule(ApiModule module) {
         ApiModuleService apiModuleService = CommonBeanFactory.getBean(ApiModuleService.class);
         module.setProtocol(RequestType.HTTP);
+        if (module.getName().length() > 64) {
+            module.setName(module.getName().substring(0, 64));
+        }
         List<ApiModule> apiModules = apiModuleService.selectSameModule(module);
         if (CollectionUtils.isEmpty(apiModules)) {
             apiModuleService.addNode(module);

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -11,6 +11,8 @@ public class TestCaseExcelData {
     @ExcelIgnore
     private Integer num;
     @ExcelIgnore
+    private String customNum;
+    @ExcelIgnore
     private String name;
     @ExcelIgnore
     private String nodePath;

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -184,6 +184,7 @@ private TestCaseWithBLOBs convert2TestCase(TestCaseExcelData data) {
         testCase.setProjectId(this.projectId);
         testCase.setCreateTime(System.currentTimeMillis());
         testCase.setUpdateTime(System.currentTimeMillis());
+        testCase.setCustomNum(data.getCustomNum());
         String nodePath = data.getNodePath();
 
         if (!nodePath.startsWith("/")) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -483,7 +483,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
                 testcase.setSort(sort.getAndIncrement());
                 int number = num.decrementAndGet();
                 testcase.setNum(number);
-                if (project.getCustomNum()) {
+                if (project.getCustomNum() && StringUtils.isBlank(testcase.getCustomNum())) {
                     testcase.setCustomNum(String.valueOf(number));
                 }
                 testcase.setReviewStatus(TestCaseReviewStatus.Prepare.name());
@@ -667,6 +667,7 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
             data.setNodePath(t.getNodePath());
             data.setPriority(t.getPriority());
             data.setType(t.getType());
+            data.setCustomNum(t.getCustomNum());
             if (StringUtils.isBlank(t.getStepModel())) {
                 data.setStepModel(TestCaseConstants.StepModel.STEP.name());
             } else {

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -32,4 +32,6 @@ public class TestCaseExcelData {
     private String stepDesc;
     @ExcelIgnore
     private String stepResult;
-}
\ No newline at end of file
+    @ExcelIgnore
+    private String stepModel;
+}

File: backend/src/main/java/io/metersphere/base/domain/TestCase.java
Patch:
@@ -23,8 +23,6 @@ public class TestCase implements Serializable {
 
     private String method;
 
-    private String prerequisite;
-
     private Long createTime;
 
     private Long updateTime;
@@ -52,6 +50,6 @@ public class TestCase implements Serializable {
     private String customNum;
 
     private String stepModel;
-  
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestCaseWithBLOBs.java
Patch:
@@ -9,6 +9,8 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class TestCaseWithBLOBs extends TestCase implements Serializable {
+    private String prerequisite;
+
     private String remark;
 
     private String steps;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -1309,6 +1309,7 @@ private void _importCreate(List<ApiScenarioWithBLOBs> sameRequest, ApiScenarioMa
         } else {
             //如果存在则修改
             scenarioWithBLOBs.setId(sameRequest.get(0).getId());
+            scenarioWithBLOBs.setNum(sameRequest.get(0).getNum());
             batchMapper.updateByPrimaryKeyWithBLOBs(scenarioWithBLOBs);
         }
     }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -422,6 +422,7 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
                 String request = setImportHashTree(apiDefinition);
                 apiDefinition.setModuleId(sameRequest.get(0).getModuleId());
                 apiDefinition.setModulePath(sameRequest.get(0).getModulePath());
+                apiDefinition.setNum(sameRequest.get(0).getNum()); //id 不变
                 apiDefinitionMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
                 apiDefinition.setRequest(request);
                 importApiCase(apiDefinition, apiTestCaseMapper, apiTestImportRequest, false);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -99,7 +99,7 @@ public class ApiDefinitionService {
     @Resource
     ApiModuleMapper apiModuleMapper;
     @Resource
-    private SystemParameterService systemParameterService ;
+    private SystemParameterService systemParameterService;
 
     private static Cache cache = Cache.newHardMemoryCache(0, 3600 * 24);
 
@@ -116,7 +116,7 @@ public List<ApiDefinitionResult> listBatch(ApiBatchRequest request) {
         ServiceUtils.getSelectAllIds(request, request.getCondition(),
                 (query) -> extApiDefinitionMapper.selectIds(query));
         List<ApiDefinitionResult> resList = extApiDefinitionMapper.listByIds(request.getIds());
-        calculateResult(resList);
+        calculateResult(resList, request.getProjectId());
         return resList;
     }
 
@@ -366,7 +366,7 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
         BeanUtils.copyBean(saveReq, apiDefinition);
         apiDefinition.setCreateTime(System.currentTimeMillis());
         apiDefinition.setUpdateTime(System.currentTimeMillis());
-        if(StringUtils.isEmpty(apiDefinition.getStatus())) {
+        if (StringUtils.isEmpty(apiDefinition.getStatus())) {
             apiDefinition.setStatus(APITestStatus.Underway.name());
         }
         if (apiDefinition.getUserId() == null) {

File: backend/src/main/java/io/metersphere/api/dto/automation/EsbDataStruct.java
Patch:
@@ -134,7 +134,7 @@ public Element genXmlElementByChildren(Element document) {
                 element.addText(this.value);
             } else {
                 for (EsbDataStruct child : children) {
-                    child.genXmlElementByChildren(document);
+                    child.genXmlElementByChildren(element);
                 }
             }
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -770,7 +770,7 @@ public String parallelRun(RunScenarioRequest request) {
             try {
                 hashTree = generateHashTree(item, reportId, planEnvMap);
             } catch (Exception ex) {
-                MSException.throwException(ex.getMessage());
+                MSException.throwException("解析运行步骤失败！场景名称：" + item.getName());
             }
             //存储报告
             batchMapper.insert(report);

File: backend/src/main/java/io/metersphere/api/service/EsbApiParamService.java
Patch:
@@ -285,7 +285,7 @@ public SaveApiDefinitionRequest handleEsbRequest(SaveApiDefinitionRequest reques
 //    }
 
     //通过esb数据结构生成keyValue集合，以及发送参数
-    private List<KeyValue> genKeyValueListByDataStruct(MsTCPSampler tcpSampler, String esbDataStruct) {
+    public List<KeyValue> genKeyValueListByDataStruct(MsTCPSampler tcpSampler, String esbDataStruct) {
         List<KeyValue> keyValueList = new ArrayList<>();
         String sendRequest = tcpSampler.getRequest();
         String paramRegexStr = "\\$\\{([^}]*)\\}";

File: backend/src/main/java/io/metersphere/config/OpenApiConfig.java
Patch:
@@ -2,13 +2,15 @@
 
 import io.swagger.v3.oas.annotations.OpenAPIDefinition;
 import io.swagger.v3.oas.annotations.info.Info;
+import io.swagger.v3.oas.annotations.servers.Server;
 import org.springframework.context.annotation.Configuration;
 
 @OpenAPIDefinition(
         info = @Info(
                 title = "MeterSphere",
                 version = "1.0"
-        )
+        ),
+        servers = @Server(url = "/")
 )
 @Configuration
 public class OpenApiConfig {

File: backend/src/main/java/io/metersphere/base/domain/TestCase.java
Patch:
@@ -51,5 +51,7 @@ public class TestCase implements Serializable {
 
     private String customNum;
 
+    private String stepModel;
+  
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestCaseTemplate.java
Patch:
@@ -27,5 +27,7 @@ public class TestCaseTemplate implements Serializable {
 
     private Long updateTime;
 
+    private String stepModel;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestCaseTemplateWithBLOBs.java
Patch:
@@ -15,5 +15,7 @@ public class TestCaseTemplateWithBLOBs extends TestCaseTemplate implements Seria
 
     private String actualResult;
 
+    private String steps;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -14,6 +14,9 @@ public interface ExtTestPlanLoadCaseMapper {
     List<TestPlanLoadCaseDTO> selectByIdIn(@Param("request") LoadCaseRequest request);
 
     void updateCaseStatus(@Param("reportId") String reportId, @Param("status") String status);
+
+    void updateCaseStatusByApi(@Param("testPlanId") String testPlanId, @Param("loadCaseId") String loadCaseId, @Param("status") String status);
+
     List<String> getStatusByTestPlanId(@Param("planId") String planId);
 
     List<String> selectTestPlanLoadCaseId(@Param("request") LoadCaseRequest request);

File: backend/src/main/java/io/metersphere/track/issue/ZentaoPlatform.java
Patch:
@@ -223,8 +223,8 @@ public void addIssue(IssuesUpdateRequest issuesRequest) {
         } else {
             paramMap.add("openedBuild", "trunk");
         }
-        if (StringUtils.isNotBlank(issuesRequest.getZentaoUser())) {
-            paramMap.add("assignedTo", issuesRequest.getZentaoUser());
+        if (StringUtils.isNotBlank(issuesRequest.getZentaoAssigned())) {
+            paramMap.add("assignedTo", issuesRequest.getZentaoAssigned());
         }
 
         HttpEntity<MultiValueMap> requestEntity = new HttpEntity<>(paramMap, new HttpHeaders());

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesUpdateRequest.java
Patch:
@@ -16,6 +16,7 @@ public class IssuesUpdateRequest extends IssuesWithBLOBs {
      * zentao bug 处理人
      */
     private String zentaoUser;
+    private String zentaoAssigned;
     /**
      * zentao bug 影响版本
      */

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -10,6 +10,9 @@ public interface ExtTestPlanLoadCaseMapper {
 
     List<String> selectIdsNotInPlan(@Param("request") LoadCaseRequest request);
     List<TestPlanLoadCaseDTO> selectTestPlanLoadCaseList(@Param("request") LoadCaseRequest request);
+
+    List<TestPlanLoadCaseDTO> selectByIdIn(@Param("request") LoadCaseRequest request);
+
     void updateCaseStatus(@Param("reportId") String reportId, @Param("status") String status);
     List<String> getStatusByTestPlanId(@Param("planId") String planId);
 

File: backend/src/main/java/io/metersphere/track/request/testplan/LoadCaseRequest.java
Patch:
@@ -11,6 +11,7 @@
 @Getter
 @Setter
 public class LoadCaseRequest extends TestPlanLoadCase {
+    private List<String> ids;
     private String projectId;
     private List<String> caseIds;
     private String name;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -76,7 +76,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (config.getConfig() == null) {
             // 单独接口执行
             this.setProjectId(config.getProjectId());
-            config.setConfig(getEnvironmentConfig(useEnvironment));
+            config.setConfig(getEnvironmentConfig(StringUtils.isNotEmpty(useEnvironment) ? useEnvironment : environmentId));
         }
 
         // 数据兼容处理

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -878,7 +878,7 @@ private HashTree generateHashTree(List<ApiScenarioWithBLOBs> apiScenarios, RunSc
             }
             testPlan.toHashTree(jmeterHashTree, testPlan.getHashTree(), new ParameterConfig());
             // 生成集成报告
-            if (request.getConfig() != null && request.getConfig().getMode().equals("serial")) {
+            if (request.getConfig() != null && request.getConfig().getMode().equals("serial") && StringUtils.isNotEmpty(request.getConfig().getReportName())) {
                 request.getConfig().setReportId(UUID.randomUUID().toString());
                 APIScenarioReportResult report = createScenarioReport(request.getConfig().getReportId(), JSON.toJSONString(reportList), request.getConfig().getReportName(), request.getTriggerMode() == null ? ReportTriggerMode.MANUAL.name() : request.getTriggerMode(),
                         ExecuteType.Saved.name(), request.getProjectId(), request.getReportUserID(), request.getConfig());

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -117,6 +117,7 @@ public String run(RunTestPlanScenarioRequest testPlanScenarioRequest) {
         request.setId(testPlanScenarioRequest.getId());
         request.setExecuteType(ExecuteType.Saved.name());
         request.setTriggerMode(testPlanScenarioRequest.getTriggerMode());
+        request.setConfig(testPlanScenarioRequest.getConfig());
         return apiAutomationService.run(request);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -41,6 +41,7 @@ public class ApiDefinitionExecResultService {
     private ApiTestCaseMapper apiTestCaseMapper;
     @Resource
     private TestCaseReviewApiCaseService testCaseReviewApiCaseService;
+
     @Resource
     SqlSessionFactory sqlSessionFactory;
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -116,6 +116,7 @@ public String run(RunTestPlanScenarioRequest testPlanScenarioRequest) {
         request.setRunMode(ApiRunMode.SCENARIO_PLAN.name());
         request.setId(testPlanScenarioRequest.getId());
         request.setExecuteType(ExecuteType.Saved.name());
+        request.setTriggerMode(testPlanScenarioRequest.getTriggerMode());
         return apiAutomationService.run(request);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -182,7 +182,7 @@ public APIReportResult getReport(@PathVariable String testId, @PathVariable Stri
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
     public ApiDefinitionImport testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ApiTestImportRequest request) {
-        return apiDefinitionService.apiTestImport(file, request);//95821329-9eaa-4d2a-aa24-e6f912994716"
+        return apiDefinitionService.apiTestImport(file, request);
     }
 
     @PostMapping(value = "/export/{type}")

File: backend/src/main/java/io/metersphere/api/dto/automation/RunModeConfig.java
Patch:
@@ -7,5 +7,6 @@ public class RunModeConfig {
     private String mode;
     private String reportType;
     private String reportName;
+    private String reportId;
     private boolean onSampleError;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -129,7 +129,8 @@ private void addBackendListener(String testId, String debugReportId, String runM
         backendListener.setName(testId);
         Arguments arguments = new Arguments();
         if (config != null && config.getMode().equals("serial") && config.getReportType().equals("setReport")) {
-            arguments.addArgument(APIBackendListenerClient.TEST_REPORT_NAME, config.getReportName());
+            arguments.addArgument(APIBackendListenerClient.TEST_REPORT_ID, config.getReportId());
+
         }
         arguments.addArgument(APIBackendListenerClient.TEST_ID, testId);
         if (StringUtils.isNotBlank(runMode)) {

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -12,7 +12,7 @@ public class TestResult {
 
     private String testId;
 
-    private String reportName;
+    private String setReportId;
 
     private String userId;
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -366,7 +366,9 @@ private ApiDefinition importCreate(ApiDefinitionWithBLOBs apiDefinition, ApiDefi
         BeanUtils.copyBean(saveReq, apiDefinition);
         apiDefinition.setCreateTime(System.currentTimeMillis());
         apiDefinition.setUpdateTime(System.currentTimeMillis());
-        apiDefinition.setStatus(APITestStatus.Underway.name());
+        if(StringUtils.isEmpty(apiDefinition.getStatus())) {
+            apiDefinition.setStatus(APITestStatus.Underway.name());
+        }
         if (apiDefinition.getUserId() == null) {
             apiDefinition.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
         } else {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -935,6 +935,7 @@ public String runScenarioCase(SchedulePlanScenarioExecuteRequest request) {
                             planScenarioID + ":" + request.getTestPlanReportId(),
                             item.getName(), request.getTriggerMode() == null ? ReportTriggerMode.MANUAL.name() : request.getTriggerMode(),
                             request.getExecuteType(), item.getProjectId(), request.getReportUserID(),null);
+                    apiScenarioReportMapper.insert(report);
                     group.setHashTree(scenarios);
                     testPlan.getHashTree().add(group);
                     returnId = request.getId();
@@ -1056,7 +1057,6 @@ public void run(String testPlanID, String projectID, String userId, String trigg
 
         //执行场景执行任务
         if (!planScenarioIdMap.isEmpty()) {
-            LogUtil.info("-------------- testplan schedule ---------- api case over -----------------");
             SchedulePlanScenarioExecuteRequest scenarioRequest = new SchedulePlanScenarioExecuteRequest();
             String senarionReportID = UUID.randomUUID().toString();
             scenarioRequest.setId(senarionReportID);
@@ -1076,7 +1076,6 @@ public void run(String testPlanID, String projectID, String userId, String trigg
                 scenarioIsExcuting = true;
                 scenarioCaseIdArray= JSONArray.toJSONString(new ArrayList<>(planScenarioIdMap.keySet()));
             }
-            LogUtil.info("-------------- testplan schedule ---------- scenario case over -----------------");
         }
 
 

File: backend/src/main/java/io/metersphere/commons/constants/ParamConstants.java
Patch:
@@ -109,7 +109,8 @@ public String getValue() {
     }
 
     enum BASE implements ParamConstants {
-        URL("base.url");
+        URL("base.url"),
+        CONCURRENCY("base.concurrency");
 
         private String value;
 

File: backend/src/main/java/io/metersphere/dto/BaseSystemConfigDTO.java
Patch:
@@ -7,4 +7,5 @@
 @Setter
 public class BaseSystemConfigDTO {
     private String url;
+    private String concurrency;
 }

File: backend/src/main/java/io/metersphere/service/SystemParameterService.java
Patch:
@@ -227,6 +227,9 @@ public BaseSystemConfigDTO getBaseInfo() {
                 if (StringUtils.equals(param.getParamKey(), ParamConstants.BASE.URL.getValue())) {
                     baseSystemConfigDTO.setUrl(param.getParamValue());
                 }
+                if (StringUtils.equals(param.getParamKey(), ParamConstants.BASE.CONCURRENCY.getValue())) {
+                    baseSystemConfigDTO.setConcurrency(param.getParamValue());
+                }
             }
         }
         return baseSystemConfigDTO;

File: backend/src/main/java/io/metersphere/api/controller/APIScenarioReportController.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
+import io.metersphere.api.dto.APIReportBatchRequest;
 import io.metersphere.api.dto.DeleteAPIReportRequest;
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
@@ -51,7 +52,7 @@ public void delete(@RequestBody DeleteAPIReportRequest request) {
     }
 
     @PostMapping("/batch/delete")
-    public void deleteAPIReportBatch(@RequestBody DeleteAPIReportRequest reportRequest) {
+    public void deleteAPIReportBatch(@RequestBody APIReportBatchRequest reportRequest) {
         apiReportService.deleteAPIReportBatch(reportRequest);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -103,7 +103,9 @@ private ApiTestEnvironmentWithBLOBs checkMockEvnIsRightful(ApiTestEnvironmentWit
                     if (httpObj.containsKey("isMock") && httpObj.getBoolean("isMock")) {
                         if (httpObj.containsKey("conditions")) {
                             JSONArray conditions = httpObj.getJSONArray("conditions");
-                            needUpdate = false;
+                            if (conditions.isEmpty()) {
+                                needUpdate = true;
+                            }
                         }
                     }
                 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioReportMapper.java
Patch:
@@ -3,10 +3,8 @@
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
 import io.metersphere.api.dto.datacount.ApiDataCountResult;
-import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiScenarioReport;
 import org.apache.ibatis.annotations.Param;
-import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
 
@@ -27,4 +25,5 @@ public interface ExtApiScenarioReportMapper {
 
     ApiScenarioReport selectPreviousReportByScenarioId(@Param("scenarioId") String scenarioId, @Param("nowId") String nowId);
 
+    List<String> idList(@Param("request") QueryAPIReportRequest request);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanScenarioCaseService.java
Patch:
@@ -115,6 +115,7 @@ public String run(RunTestPlanScenarioRequest testPlanScenarioRequest) {
         request.setScenarioTestPlanIdMap(scenarioIdApiScarionMap);
         request.setRunMode(ApiRunMode.SCENARIO_PLAN.name());
         request.setId(testPlanScenarioRequest.getId());
+        request.setExecuteType(ExecuteType.Saved.name());
         return apiAutomationService.run(request);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -937,7 +937,6 @@ public String runScenarioCase(SchedulePlanScenarioExecuteRequest request) {
                             request.getExecuteType(), item.getProjectId(), request.getReportUserID(),null);
                     group.setHashTree(scenarios);
                     testPlan.getHashTree().add(group);
-                    apiScenarioReportMapper.insert(report);
                     returnId = request.getId();
                 }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -201,7 +201,7 @@ private Arguments arguments(ParameterConfig config) {
                 }
             });
         }
-        // HTTP放到请求中，按照域名匹配
+        // 环境通用变量
         if (config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables())) {
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestBatchRequest.java
Patch:
@@ -23,7 +23,7 @@ public class ApiTestBatchRequest extends ApiTestCaseWithBLOBs {
      * unSelectIds：是否在页面上有未勾选的数据，有的话他们的ID是哪些。
      * filters/name/moduleIds/unSeelctIds 只在isSelectAllDate为true时需要。为了让程序能明确批量的范围。
      */
-    private boolean isSelectAllDate;
+    private boolean isSelectAll;
 
     private Map<String, List<String>> filters;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseRequest.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition;
 
+import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.controller.request.OrderRequest;
 import lombok.Getter;
 import lombok.Setter;
@@ -9,7 +10,7 @@
 
 @Getter
 @Setter
-public class ApiTestCaseRequest {
+public class ApiTestCaseRequest extends BaseQueryRequest {
     private String id;
     private List<String> ids;
     private String planId;

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -137,6 +137,7 @@ private ApiTestEnvironmentWithBLOBs genHttpApiTestEnvironmentByUrl(String projec
 //            httpConfig.put("port", portStr);
 //        }
         httpConfig.put("socket", null);
+        httpConfig.put("isMock", true);
         httpConfig.put("domain", null);
         JSONArray httpVariablesArr = new JSONArray();
         Map<String, Object> httpMap = new HashMap<>();

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -70,10 +70,10 @@ public List<TestPlanDTOWithMetric> listRelateAll() {
         return testPlanService.listRelateAllPlan();
     }
 
-    @GetMapping("recent/{count}")
-    public List<TestPlan> recentTestPlans(@PathVariable int count) {
+    @GetMapping("recent/{count}/{id}")
+    public List<TestPlan> recentTestPlans(@PathVariable("count") int count, @PathVariable("id") String projectId) {
         PageHelper.startPage(1, count, true);
-        return testPlanService.recentTestPlans();
+        return testPlanService.recentTestPlans(projectId);
     }
 
     @PostMapping("/get/{testPlanId}")

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -562,8 +562,8 @@ public void testPlanRelevance(PlanCaseRelevanceRequest request) {
         }
     }
 
-    public List<TestPlan> recentTestPlans() {
-        return extTestPlanMapper.listRecent(SessionUtils.getUserId(), SessionUtils.getCurrentProjectId());
+    public List<TestPlan> recentTestPlans(String projectId) {
+        return extTestPlanMapper.listRecent(SessionUtils.getUserId(), projectId);
     }
 
     public List<TestPlan> listTestAllPlan(String currentWorkspaceId) {

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -173,11 +173,11 @@ public List<IssueTemplate> getOption(String workspaceId) {
 
     public IssueTemplateDao getTemplate(String projectId) {
         Project project = projectService.getProjectById(projectId);
-        String caseTemplateId = project.getCaseTemplateId();
+        String issueTemplateId = project.getIssueTemplateId();
         IssueTemplate issueTemplate = null;
         IssueTemplateDao issueTemplateDao = new IssueTemplateDao();
-        if (StringUtils.isNotBlank(caseTemplateId)) {
-            issueTemplate = issueTemplateMapper.selectByPrimaryKey(caseTemplateId);
+        if (StringUtils.isNotBlank(issueTemplateId)) {
+            issueTemplate = issueTemplateMapper.selectByPrimaryKey(issueTemplateId);
             if (issueTemplate == null) {
                 issueTemplate = getDefaultTemplate(project.getWorkspaceId());
             }

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -23,7 +23,7 @@
 
 @Service
 @Transactional(rollbackFor = Exception.class)
-public class IssueTemplateService {
+public class IssueTemplateService extends TemplateBaseService {
 
     @Resource
     ExtIssueTemplateMapper extIssueTemplateMapper;
@@ -62,6 +62,7 @@ public List<IssueTemplate> list(BaseQueryRequest request) {
     }
 
     public void delete(String id) {
+        checkTemplateUsed(id, projectService::getByIssueTemplateId);
         issueTemplateMapper.deleteByPrimaryKey(id);
         customFieldTemplateService.deleteByTemplateId(id);
     }

File: backend/src/main/java/io/metersphere/service/IssueTemplateService.java
Patch:
@@ -115,6 +115,7 @@ private void createTemplateWithUpdateField(String workspaceId, CustomField custo
         issueTemplate.setName("default");
         issueTemplate.setPlatform(TemplateConstants.IssueTemplatePlatform.metersphere.name());
         issueTemplate.setGlobal(false);
+        issueTemplate.setSystem(true);
         issueTemplate.setWorkspaceId(workspaceId);
         BeanUtils.copyBean(request, issueTemplate);
         List<CustomFieldTemplate> systemFieldCreateTemplate =

File: backend/src/main/java/io/metersphere/service/TestCaseTemplateService.java
Patch:
@@ -106,6 +106,7 @@ private void createTemplateWithUpdateField(String workspaceId, CustomField custo
         testCaseTemplate.setName("default");
         testCaseTemplate.setType(TemplateConstants.TestCaseTemplateScene.functional.name());
         testCaseTemplate.setGlobal(false);
+        testCaseTemplate.setSystem(true);
         testCaseTemplate.setWorkspaceId(workspaceId);
         BeanUtils.copyBean(request, testCaseTemplate);
         List<CustomFieldTemplate> systemFieldCreateTemplate =

File: backend/src/main/java/org/apache/jmeter/NewDriver.java
Patch:
@@ -127,7 +127,7 @@ public static void loaderClass(String name) {
         System.setProperty(JAVA_CLASS_PATH, initiaClasspath + classpath.toString());
         loader = AccessController.doPrivileged(
                 (PrivilegedAction<DynamicClassLoader>) () ->
-                        new DynamicClassLoader(jars.toArray(new URL[jars.size()]))
+                        new DynamicClassLoader(jars.toArray(new URL[jars.size()]), Thread.currentThread().getContextClassLoader())
         );
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -229,7 +229,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                     sampler.setDomain(httpConfig.getDomain());
                     //1.9 增加对Mock环境的判断
                     if (this.isMockEnvironment()) {
-                        url = url = httpConfig.getProtocol() + "://" + httpConfig.getSocket() + "/mock/" + this.getId();
+                        url = url = httpConfig.getProtocol() + "://" + httpConfig.getSocket() + "/mock/" + this.getProjectId();
                     } else {
                         url = httpConfig.getProtocol() + "://" + httpConfig.getSocket();
                     }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -144,6 +144,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
         testResult.setTestId(testId);
         testResult.setTotal(queue.size());
         testResult.setReportName(this.reportName);
+
         // 一个脚本里可能包含多个场景(ThreadGroup)，所以要区分开，key: 场景Id
         final Map<String, ScenarioResult> scenarios = new LinkedHashMap<>();
         queue.forEach(result -> {

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseDTO.java
Patch:
@@ -10,6 +10,7 @@ public class ApiTestCaseDTO extends ApiTestCase {
     private String moduleId;
     private String path;
     private String protocol;
+    private String casePath;
     private String updateUser;
     private String createUser;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -404,7 +404,7 @@ public ScenarioEnv getApiScenarioEnv(String definition) {
                                 env.setFullUrl(false);
                             }
                         }
-                    } else if (StringUtils.equals(tr.getType(), "TCPSampler")) {
+                    } else if (StringUtils.equals(tr.getType(), "JDBCSampler") || StringUtils.equals(tr.getType(), "TCPSampler")) {
                         if (StringUtils.equals(tr.getRefType(), "CASE")) {
                             ApiTestCaseWithBLOBs apiTestCaseWithBLOBs = apiTestCaseService.get(tr.getId());
                             env.getProjectIds().add(apiTestCaseWithBLOBs.getProjectId());

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -139,7 +139,7 @@ private ApiTestEnvironmentWithBLOBs genHttpApiTestEnvironmentByUrl(String projec
 
         JSONObject tcpConfigObj = new JSONObject();
         tcpConfigObj.put("classname", "TCPClientImpl");
-        tcpConfigObj.put("reUseConnection", true);
+        tcpConfigObj.put("reUseConnection", false);
         tcpConfigObj.put("nodelay", false);
         tcpConfigObj.put("closeConnection", false);
 

File: backend/src/main/java/io/metersphere/notice/util/LarkClient.java
Patch:
@@ -33,14 +33,14 @@ public static SendResult send(String webhook, String context) {
             httpPost.setEntity(entity);
             // 执行http请求
             response = httpClient.execute(httpPost);
-            if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
+           /* if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
                 String result = EntityUtils.toString(response.getEntity());
                 JSONObject obj = JSONObject.parseObject(result);
                 Integer errcode = obj.getInteger("errcode");
                 sendResult.setErrorCode(errcode);
                 sendResult.setErrorMsg(obj.getString("errmsg"));
                 sendResult.setIsSuccess(errcode.equals(0));
-            }
+            }*/
         } catch (Exception e) {
             e.printStackTrace();
         } finally {

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeEvent.java
Patch:
@@ -26,6 +26,7 @@ public class PerformanceNoticeEvent implements LoadTestFinishEvent {
     private NoticeSendService noticeSendService;
 
     public void sendNotice(LoadTestReport loadTestReport) {
+
         BaseSystemConfigDTO baseSystemConfigDTO = systemParameterService.getBaseInfo();
         String url = baseSystemConfigDTO.getUrl() + "/#/performance/report/view/" + loadTestReport.getId();
         String successContext = "";
@@ -71,7 +72,7 @@ public void sendNotice(LoadTestReport loadTestReport) {
 
     @Override
     public void execute(LoadTestReport loadTestReport) {
-        LogUtil.info("PerformanceNoticeEvent OVER:" + loadTestReport.getTriggerMode()+";"+loadTestReport.getStatus());
+        LogUtil.info("PerformanceNoticeEvent OVER:" + loadTestReport.getTriggerMode() + ";" + loadTestReport.getStatus() + ";" + loadTestReport.getName());
         if (StringUtils.equals(ReportTriggerMode.API.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),

File: backend/src/main/java/io/metersphere/notice/service/NoticeSendService.java
Patch:
@@ -50,11 +50,12 @@ private NoticeSender getNoticeSender(MessageDetail messageDetail) {
     }
 
     public void send(String taskType, NoticeModel noticeModel) {
+        String loadReportId = (String) noticeModel.getParamMap().get("id");
         try {
             List<MessageDetail> messageDetails;
             switch (taskType) {
                 case NoticeConstants.Mode.API:
-                    messageDetails = noticeService.searchMessageByType(NoticeConstants.TaskType.JENKINS_TASK);
+                    messageDetails = noticeService.searchMessageByTypeBySend(NoticeConstants.TaskType.JENKINS_TASK, loadReportId);
                     break;
                 case NoticeConstants.Mode.SCHEDULE:
                     messageDetails = noticeService.searchMessageByTestId(noticeModel.getTestId());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -17,7 +17,6 @@
 import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.FileUtils;
-import io.metersphere.commons.utils.SessionUtils;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -202,6 +201,7 @@ private Arguments arguments(ParameterConfig config) {
                 }
             });
         }
+        // HTTP放到请求中，按照域名匹配
         if (config.isEffective(this.getProjectId()) && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables())) {
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/scenario/HttpConfigCondition.java
Patch:
@@ -12,4 +12,5 @@ public class HttpConfigCondition {
     private String socket;
     private String domain;
     private int port;
+    private List<KeyValue> headers;
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanScenarioCaseController.java
Patch:
@@ -51,13 +51,13 @@ public void deleteApiCaseBath(@RequestBody TestPlanScenarioCaseBatchRequest requ
     }
 
     @PostMapping(value = "/run")
-    public String run(@RequestBody RunScenarioRequest request) {
+    public String run(@RequestBody RunTestPlanScenarioRequest request) {
         request.setExecuteType(ExecuteType.Completed.name());
         return testPlanScenarioCaseService.run(request);
     }
 
     @PostMapping(value = "/jenkins/run")
-    public String runByRun(@RequestBody RunScenarioRequest request) {
+    public String runByRun(@RequestBody RunTestPlanScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
         request.setTriggerMode(ApiRunMode.API.name());
         request.setRunMode(ApiRunMode.SCENARIO.name());

File: backend/src/main/java/io/metersphere/base/domain/TestCase.java
Patch:
@@ -9,8 +9,6 @@ public class TestCase implements Serializable {
 
     private String nodeId;
 
-    private String testId;
-
     private String nodePath;
 
     private String projectId;
@@ -31,6 +29,8 @@ public class TestCase implements Serializable {
 
     private Long updateTime;
 
+    private String testId;
+
     private Integer sort;
 
     private Integer num;

File: backend/src/main/java/io/metersphere/base/domain/TestCaseWithBLOBs.java
Patch:
@@ -17,5 +17,7 @@ public class TestCaseWithBLOBs extends TestCase implements Serializable {
 
     private String expectedResult;
 
+    private String customFields;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestPlanTestCaseWithBLOBs.java
Patch:
@@ -13,5 +13,7 @@ public class TestPlanTestCaseWithBLOBs extends TestPlanTestCase implements Seria
 
     private String issues;
 
+    private String actualResult;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseTemplateMapper.java
Patch:
@@ -1,12 +1,12 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.base.domain.TestCaseTemplate;
+import io.metersphere.base.domain.TestCaseTemplateWithBLOBs;
 import io.metersphere.controller.request.BaseQueryRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 
 public interface ExtTestCaseTemplateMapper {
-    List<TestCaseTemplate> list(@Param("request") BaseQueryRequest request);
+    List<TestCaseTemplateWithBLOBs> list(@Param("request") BaseQueryRequest request);
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanCaseDTO.java
Patch:
@@ -20,6 +20,7 @@ public class TestPlanCaseDTO extends TestCaseWithBLOBs {
     private String reportId;
     private String model;
     private String projectName;
+    private String actualResult;
 
     private List<TestCaseTestDTO> list;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/MsKafkaListener.java
Patch:
@@ -31,8 +31,9 @@
 @Service
 public class MsKafkaListener {
     public static final String TOPICS = "ms-api-exec-topic";
+    public static final String CONSUME_ID = "ms-api-exec-consume";
 
-    @KafkaListener(topics = TOPICS)
+    @KafkaListener(id = CONSUME_ID, topics = TOPICS, groupId = "${spring.kafka.consumer.group-id}")
     public void consume(ConsumerRecord<?, String> record) {
         LogUtil.info("接收到执行结果开始存储");
         this.save(record.value());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -55,7 +55,7 @@ public void saveApiResult(TestResult result, String type) {
                         ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
                         saveResult.setId(UUID.randomUUID().toString());
                         saveResult.setCreateTime(item.getStartTime());
-                        saveResult.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
+                        saveResult.setUserId(result.getUserId());
                         saveResult.setName(item.getName());
                         if (item.getName().indexOf("<->") != -1) {
                             saveResult.setName(item.getName().substring(0, item.getName().indexOf("<->")));

File: backend/src/main/java/io/metersphere/consul/CatalogApiController.java
Patch:
@@ -82,7 +82,7 @@ public ResponseEntity<JSONArray> health(@PathVariable String service) {
 
         int i = service.lastIndexOf("-");
         String address = service.substring(0, i);
-        String port = service.substring(i);
+        String port = service.substring(i + 1);
         String result = "[\n" +
                 "    {\n" +
                 "        \"Node\": {\n" +

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -17,10 +17,13 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenarioWithBLOBs> selectIds(@Param("ids") List<String> ids);
 
+    List<ApiScenarioWithBLOBs> selectByIds(@Param("ids") String ids,@Param("oderId") String oderId);
+
     List<ApiScenario> selectReference(@Param("request") ApiScenarioRequest request);
 
     int removeToGc(@Param("ids") List<String> ids);
 
+
     int removeToGcByExample(ApiScenarioExample example);
 
     int reduction(@Param("ids") List<String> ids);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -19,4 +19,7 @@ public interface ExtTestPlanScenarioCaseMapper {
     List<String> getNotRelevanceCaseIds(String planId, List<String> relevanceProjectIds);
 
     List<String> selectIds(@Param("request")TestPlanScenarioRequest request);
+
+    List<TestPlanApiScenario> selectByIds(@Param("ids")String ids ,@Param("oderId")String oderId );
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -122,11 +122,11 @@ public TestPlanApiCase getById(String id) {
         return testPlanApiCaseMapper.selectByPrimaryKey(id);
     }
 
-    public void setExecResult(String id, String status) {
+    public void setExecResult(String id, String status,Long time) {
         TestPlanApiCase apiCase = new TestPlanApiCase();
         apiCase.setId(id);
         apiCase.setStatus(status);
-        apiCase.setUpdateTime(System.currentTimeMillis());
+        apiCase.setUpdateTime(time);
         testPlanApiCaseMapper.updateByPrimaryKeySelective(apiCase);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -932,7 +932,7 @@ public String runScenarioCase(SchedulePlanScenarioExecuteRequest request) {
                     APIScenarioReportResult report =  apiAutomationService.createScenarioReport(group.getName(),
                             planScenarioID + ":" + request.getTestPlanReportId(),
                             item.getName(), request.getTriggerMode() == null ? ReportTriggerMode.MANUAL.name() : request.getTriggerMode(),
-                            request.getExecuteType(), item.getProjectId(), request.getReportUserID());
+                            request.getExecuteType(), item.getProjectId(), request.getReportUserID(),null);
                     group.setHashTree(scenarios);
                     testPlan.getHashTree().add(group);
                     apiScenarioReportMapper.insert(report);

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -66,6 +66,7 @@ public ApiScenario create(@RequestPart("request") SaveApiScenarioRequest request
     public void update(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
         apiAutomationService.update(request, bodyFiles);
     }
+
     @GetMapping("/delete/{id}")
     public void delete(@PathVariable String id) {
         apiAutomationService.delete(id);
@@ -139,7 +140,7 @@ public String runByJenkins(@RequestBody RunScenarioRequest request) {
     }
 
     @PostMapping(value = "/run/batch")
-    public String runBatcah(@RequestBody RunScenarioRequest request) {
+    public String runBatch(@RequestBody RunScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
         request.setTriggerMode(ApiRunMode.SCENARIO.name());
         request.setRunMode(ApiRunMode.SCENARIO.name());
@@ -174,7 +175,7 @@ public void testPlanRelevance(@RequestBody ApiCaseRelevanceRequest request) {
     }
 
     @PostMapping("/relevance/review")
-    public  void testCaseReviewRelevance(@RequestBody ApiCaseRelevanceRequest request){
+    public void testCaseReviewRelevance(@RequestBody ApiCaseRelevanceRequest request) {
         apiAutomationService.relevanceReview(request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -21,7 +21,7 @@ public class RunScenarioRequest extends ApiScenarioWithBLOBs {
 
     private String runMode;
 
-    //测试情景和测试计划的关联ID
+    /**测试情景和测试计划的关联ID*/
     private String planScenarioId;
 
     private List<String> planCaseIds;
@@ -30,8 +30,9 @@ public class RunScenarioRequest extends ApiScenarioWithBLOBs {
 
     private String reportUserID;
 
-    private Map<String,String> scenarioTestPlanIdMap;
+    private Map<String, String> scenarioTestPlanIdMap;
 
     private ApiScenarioRequest condition;
 
+    private RunModeConfig config;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestPlan.java
Patch:
@@ -18,6 +18,7 @@
 @JSONType(typeName = "TestPlan")
 public class MsTestPlan extends MsTestElement {
     private String type = "TestPlan";
+    private boolean serializeThreadgroups = false;
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
@@ -35,7 +36,7 @@ public TestPlan getPlan() {
         testPlan.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestPlanGui"));
         testPlan.setEnabled(true);
         testPlan.setFunctionalMode(false);
-        testPlan.setSerialized(true);
+        testPlan.setSerialized(serializeThreadgroups);
         testPlan.setTearDownOnShutdown(true);
         testPlan.setUserDefinedVariables(new Arguments());
         return testPlan;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -530,7 +530,6 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         }
 
         HashTree hashTree = request.getTestElement().generateHashTree(config);
-
         String runMode = ApiRunMode.DEFINITION.name();
         if (StringUtils.isNotBlank(request.getType()) && StringUtils.equals(request.getType(), ApiRunMode.API_PLAN.name())) {
             runMode = ApiRunMode.API_PLAN.name();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -369,8 +369,9 @@ public void setHeader(HashTree tree, List<KeyValue> headers) {
         headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "HeaderManager" : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
+        //  header 也支持 mock 参数
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
-                headerManager.add(new Header(keyValue.getName(), keyValue.getValue()))
+                headerManager.add(new Header(keyValue.getName(), ScriptEngineUtils.calculate(keyValue.getValue())))
         );
         if (headerManager.getHeaders().size() > 0) {
             tree.add(headerManager);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/unknown/MsJmeterElement.java
Patch:
@@ -66,6 +66,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                     }
                     if (CollectionUtils.isNotEmpty(hashTree)) {
                         for (MsTestElement el : hashTree) {
+                            // 给所有孩子加一个父亲标志
+                            el.setParent(this);
                             el.toHashTree(elementTree, el.getHashTree(), config);
                         }
                     }

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -275,6 +275,9 @@ private void batchUpdateApiDefinition(List<ApiDefinitionResult> apiModule) {
     @Override
     public ApiModuleDTO getNode(String id) {
         ApiModule module = apiModuleMapper.selectByPrimaryKey(id);
+        if (module == null) {
+            return null;
+        }
         ApiModuleDTO dto = JSON.parseObject(JSON.toJSONString(module), ApiModuleDTO.class);
         return dto;
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -12,8 +12,6 @@
 
 public interface ExtApiTestCaseMapper {
 
-    List<String> listPorjectAllCaseName(@Param("projectId") String projectId);
-
     List<ApiTestCaseResult> list(@Param("request") ApiTestCaseRequest request);
 
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);
@@ -33,4 +31,4 @@ public interface ExtApiTestCaseMapper {
     ApiTestCaseInfo selectApiCaseInfoByPrimaryKey(String id);
 
     List<ApiTestCase> selectEffectiveTestCaseByProjectId(String projectId);
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/performance/engine/EngineFactory.java
Patch:
@@ -79,7 +79,7 @@ public static Engine createEngine(LoadTestWithBLOBs loadTest) {
         }
         if (type == ResourcePoolTypeEnum.K8S) {
             try {
-                return ConstructorUtils.invokeConstructor(kubernetesTestEngineClass, loadTest);
+                return (Engine) ConstructorUtils.invokeConstructor(kubernetesTestEngineClass, loadTest);
             } catch (Exception e) {
                 LogUtil.error(e);
                 return null;

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -275,6 +275,9 @@ private void batchUpdateApiDefinition(List<ApiDefinitionResult> apiModule) {
     @Override
     public ApiModuleDTO getNode(String id) {
         ApiModule module = apiModuleMapper.selectByPrimaryKey(id);
+        if (module == null) {
+            return null;
+        }
         ApiModuleDTO dto = JSON.parseObject(JSON.toJSONString(module), ApiModuleDTO.class);
         return dto;
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -12,8 +12,6 @@
 
 public interface ExtApiTestCaseMapper {
 
-    List<String> listPorjectAllCaseName(@Param("projectId") String projectId);
-
     List<ApiTestCaseResult> list(@Param("request") ApiTestCaseRequest request);
 
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);
@@ -33,4 +31,4 @@ public interface ExtApiTestCaseMapper {
     ApiTestCaseInfo selectApiCaseInfoByPrimaryKey(String id);
 
     List<ApiTestCase> selectEffectiveTestCaseByProjectId(String projectId);
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -533,7 +533,7 @@ public List<ApiScenarioWithBLOBs> getApiScenarios(List<String> ids) {
     }
 
     public byte[] loadFileAsBytes(FileOperationRequest fileOperationRequest) {
-        File file = new File(FileUtils.BODY_FILE_DIR + fileOperationRequest.getId() + "_" + fileOperationRequest.getName());
+        File file = new File(FileUtils.BODY_FILE_DIR +"/"+ fileOperationRequest.getId() + "_" + fileOperationRequest.getName());
         try (FileInputStream fis = new FileInputStream(file);
              ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);) {
             byte[] b = new byte[1000];

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.api.jmeter;
 
-import com.alibaba.fastjson.JSON;
+
 import com.alibaba.fastjson.JSONObject;
 import io.metersphere.api.dto.automation.ApiTestReportVariable;
 import io.metersphere.api.dto.scenario.request.RequestType;

File: backend/src/main/java/io/metersphere/commons/utils/XMLUtils.java
Patch:
@@ -58,7 +58,7 @@ public static JSONObject XmlToJson(String xml) {
             result = (JSONObject) XmlTagToJsonObject(list);
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
-            MSException.throwException(Translator.get("illegal_xml_format"));
+//            MSException.throwException(Translator.get("illegal_xml_format"));
         }
         return result;
     }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -67,7 +67,7 @@ private void addPreScript(MsHTTPSamplerProxy request, List<PostmanEvent> event)
             if (StringUtils.isNotBlank(scriptStr)) {
                 MsJSR223PreProcessor jsr223PreProcessor = new MsJSR223PreProcessor();
                 jsr223PreProcessor.setName("JSR223PreProcessor");
-                jsr223PreProcessor.setScriptLanguage("javascript");
+                jsr223PreProcessor.setScriptLanguage("nashornScript");
                 jsr223PreProcessor.setScript(scriptStr.toString());
                 LinkedList<MsTestElement> hashTree = new LinkedList<>();
                 hashTree.add(jsr223PreProcessor);

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -134,7 +134,7 @@ public void startEnableSchedules() {
         Schedules.forEach(schedule -> {
             try {
                 if (schedule.getEnable()) {
-                    LogUtil.error("初始化任务：" + JSON.toJSONString(schedule));
+                    LogUtil.info("初始化任务：" + JSON.toJSONString(schedule));
                     scheduleManager.addOrUpdateCronJob(new JobKey(schedule.getKey(), schedule.getGroup()),
                             new TriggerKey(schedule.getKey(), schedule.getGroup()), Class.forName(schedule.getJob()), schedule.getValue(),
                             scheduleManager.getDefaultJobDataMap(schedule.getResourceId(), schedule.getValue(), schedule.getUserId()));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.base.domain.TestCase;
+import io.metersphere.base.domain.TestCaseWithBLOBs;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.track.dto.TestCaseDTO;
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
@@ -76,5 +77,5 @@ public interface ExtTestCaseMapper {
     int getTestPlanPassCase(@Param("planId") String planId);
 
 
-
+    List<TestCaseWithBLOBs> listForMinder(@Param("request") QueryTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -358,8 +358,9 @@ public void setHeader(HashTree tree, List<KeyValue> headers) {
         headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "HeaderManager" : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
+        //  header 也支持 mock 参数
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
-                headerManager.add(new Header(keyValue.getName(), keyValue.getValue()))
+                headerManager.add(new Header(keyValue.getName(), ScriptEngineUtils.calculate(keyValue.getValue())))
         );
         if (headerManager.getHeaders().size() > 0) {
             tree.add(headerManager);

File: backend/src/main/java/io/metersphere/api/service/ApiModuleService.java
Patch:
@@ -275,6 +275,9 @@ private void batchUpdateApiDefinition(List<ApiDefinitionResult> apiModule) {
     @Override
     public ApiModuleDTO getNode(String id) {
         ApiModule module = apiModuleMapper.selectByPrimaryKey(id);
+        if (module == null) {
+            return null;
+        }
         ApiModuleDTO dto = JSON.parseObject(JSON.toJSONString(module), ApiModuleDTO.class);
         return dto;
     }

File: backend/src/main/java/io/metersphere/performance/engine/EngineFactory.java
Patch:
@@ -79,7 +79,7 @@ public static Engine createEngine(LoadTestWithBLOBs loadTest) {
         }
         if (type == ResourcePoolTypeEnum.K8S) {
             try {
-                return ConstructorUtils.invokeConstructor(kubernetesTestEngineClass, loadTest);
+                return (Engine) ConstructorUtils.invokeConstructor(kubernetesTestEngineClass, loadTest);
             } catch (Exception e) {
                 LogUtil.error(e);
                 return null;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -373,6 +373,8 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
                 //如果存在则修改
                 apiDefinition.setId(sameRequest.get(0).getId());
                 String request = setImportHashTree(apiDefinition);
+                apiDefinition.setModuleId(sameRequest.get(0).getModuleId());
+                apiDefinition.setModulePath(sameRequest.get(0).getModulePath());
                 apiDefinitionMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
                 apiDefinition.setRequest(request);
                 importApiCase(apiDefinition, apiTestCaseMapper, apiTestImportRequest, false);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -12,8 +12,6 @@
 
 public interface ExtApiTestCaseMapper {
 
-    List<String> listPorjectAllCaseName(@Param("projectId") String projectId);
-
     List<ApiTestCaseResult> list(@Param("request") ApiTestCaseRequest request);
 
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);
@@ -33,4 +31,4 @@ public interface ExtApiTestCaseMapper {
     ApiTestCaseInfo selectApiCaseInfoByPrimaryKey(String id);
 
     List<ApiTestCase> selectEffectiveTestCaseByProjectId(String projectId);
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -100,6 +100,7 @@ private void parseHashTree(Element hashTree) {
                         processCheckoutBackendListener(ele);
                         processCheckoutAutoStopListener(ele);
                     } else if (nodeNameEquals(ele, CONCURRENCY_THREAD_GROUP)) {
+                        processThreadGroup(ele);
                         processThreadGroupName(ele);
                         processCheckoutTimer(ele);
                     } else if (nodeNameEquals(ele, VARIABLE_THROUGHPUT_TIMER)) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -100,6 +100,7 @@ private void parseHashTree(Element hashTree) {
                         processCheckoutBackendListener(ele);
                         processCheckoutAutoStopListener(ele);
                     } else if (nodeNameEquals(ele, CONCURRENCY_THREAD_GROUP)) {
+                        processThreadGroup(ele);
                         processThreadGroupName(ele);
                         processCheckoutTimer(ele);
                     } else if (nodeNameEquals(ele, VARIABLE_THROUGHPUT_TIMER)) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -100,6 +100,7 @@ private void parseHashTree(Element hashTree) {
                         processCheckoutBackendListener(ele);
                         processCheckoutAutoStopListener(ele);
                     } else if (nodeNameEquals(ele, CONCURRENCY_THREAD_GROUP)) {
+                        processThreadGroup(ele);
                         processThreadGroupName(ele);
                         processCheckoutTimer(ele);
                     } else if (nodeNameEquals(ele, VARIABLE_THROUGHPUT_TIMER)) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -870,7 +870,7 @@ private void processConcurrencyThreadGroup(Element threadGroup) {
 
     private void processExpectedDuration(String duration) {
         Long d = Long.parseLong(duration);
-        Object serialize = context.getProperty("TestPlan.serialize_threadgroups");
+        Object serialize = context.getProperty("serialize_threadgroups");
         String expectedDuration = (String) context.getProperty("expectedDuration");
         if (StringUtils.isBlank(expectedDuration)) {
             expectedDuration = "0";

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -870,7 +870,7 @@ private void processConcurrencyThreadGroup(Element threadGroup) {
 
     private void processExpectedDuration(String duration) {
         Long d = Long.parseLong(duration);
-        Object serialize = context.getProperty("TestPlan.serialize_threadgroups");
+        Object serialize = context.getProperty("serialize_threadgroups");
         String expectedDuration = (String) context.getProperty("expectedDuration");
         if (StringUtils.isBlank(expectedDuration)) {
             expectedDuration = "0";

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -870,7 +870,7 @@ private void processConcurrencyThreadGroup(Element threadGroup) {
 
     private void processExpectedDuration(String duration) {
         Long d = Long.parseLong(duration);
-        Object serialize = context.getProperty("TestPlan.serialize_threadgroups");
+        Object serialize = context.getProperty("serialize_threadgroups");
         String expectedDuration = (String) context.getProperty("expectedDuration");
         if (StringUtils.isBlank(expectedDuration)) {
             expectedDuration = "0";

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -269,12 +269,12 @@ public String getSteps(TestCaseExcelData data) {
         String[] stepRes = new String[1];
 
         if (data.getStepDesc() != null) {
-            stepDesc = data.getStepDesc().split("\r\n");
+            stepDesc = data.getStepDesc().split("\r\n|\n");
         } else {
             stepDesc[0] = "";
         }
         if (data.getStepResult() != null) {
-            stepRes = data.getStepResult().split("\r\n");
+            stepRes = data.getStepResult().split("\r\n|\n");
         } else {
             stepRes[0] = "";
         }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -67,7 +67,7 @@ private void addPreScript(MsHTTPSamplerProxy request, List<PostmanEvent> event)
             if (StringUtils.isNotBlank(scriptStr)) {
                 MsJSR223PreProcessor jsr223PreProcessor = new MsJSR223PreProcessor();
                 jsr223PreProcessor.setName("JSR223PreProcessor");
-                jsr223PreProcessor.setScriptLanguage("javascript");
+                jsr223PreProcessor.setScriptLanguage("nashornScript");
                 jsr223PreProcessor.setScript(scriptStr.toString());
                 LinkedList<MsTestElement> hashTree = new LinkedList<>();
                 hashTree.add(jsr223PreProcessor);

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -134,7 +134,7 @@ public void startEnableSchedules() {
         Schedules.forEach(schedule -> {
             try {
                 if (schedule.getEnable()) {
-                    LogUtil.error("初始化任务：" + JSON.toJSONString(schedule));
+                    LogUtil.info("初始化任务：" + JSON.toJSONString(schedule));
                     scheduleManager.addOrUpdateCronJob(new JobKey(schedule.getKey(), schedule.getGroup()),
                             new TriggerKey(schedule.getKey(), schedule.getGroup()), Class.forName(schedule.getJob()), schedule.getValue(),
                             scheduleManager.getDefaultJobDataMap(schedule.getResourceId(), schedule.getValue(), schedule.getUserId()));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.base.domain.TestCase;
+import io.metersphere.base.domain.TestCaseWithBLOBs;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.track.dto.TestCaseDTO;
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
@@ -76,5 +77,5 @@ public interface ExtTestCaseMapper {
     int getTestPlanPassCase(@Param("planId") String planId);
 
 
-
+    List<TestCaseWithBLOBs> listForMinder(@Param("request") QueryTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/ScenarioVariable.java
Patch:
@@ -52,7 +52,7 @@ public ScenarioVariable(String key, String value, String description, String typ
     }
 
     public boolean isConstantValid() {
-        if (StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name()) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
+        if ((StringUtils.isEmpty(this.type) || StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name())) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
             return true;
         }
         return false;

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -247,7 +247,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
 
             }
         }
-        if (StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
+        if (report != null && StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
             sendTask(report, reportUrl, testResult);
         }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -88,6 +88,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ApiScenarioWithBLOBs scenario = apiAutomationService.getApiScenario(this.getId());
                 if (scenario != null && StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
                     JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
+                    this.setName(scenario.getName());
                     hashTree = mapper.readValue(element.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                     });
                     // 场景变量

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -269,12 +269,12 @@ public String getSteps(TestCaseExcelData data) {
         String[] stepRes = new String[1];
 
         if (data.getStepDesc() != null) {
-            stepDesc = data.getStepDesc().split("\r\n");
+            stepDesc = data.getStepDesc().split("\r\n|\n");
         } else {
             stepDesc[0] = "";
         }
         if (data.getStepResult() != null) {
-            stepRes = data.getStepResult().split("\r\n");
+            stepRes = data.getStepResult().split("\r\n|\n");
         } else {
             stepRes[0] = "";
         }

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -67,7 +67,7 @@ private void addPreScript(MsHTTPSamplerProxy request, List<PostmanEvent> event)
             if (StringUtils.isNotBlank(scriptStr)) {
                 MsJSR223PreProcessor jsr223PreProcessor = new MsJSR223PreProcessor();
                 jsr223PreProcessor.setName("JSR223PreProcessor");
-                jsr223PreProcessor.setScriptLanguage("javascript");
+                jsr223PreProcessor.setScriptLanguage("nashornScript");
                 jsr223PreProcessor.setScript(scriptStr.toString());
                 LinkedList<MsTestElement> hashTree = new LinkedList<>();
                 hashTree.add(jsr223PreProcessor);

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -269,12 +269,12 @@ public String getSteps(TestCaseExcelData data) {
         String[] stepRes = new String[1];
 
         if (data.getStepDesc() != null) {
-            stepDesc = data.getStepDesc().split("\r\n");
+            stepDesc = data.getStepDesc().split("\r\n|\n");
         } else {
             stepDesc[0] = "";
         }
         if (data.getStepResult() != null) {
-            stepRes = data.getStepResult().split("\r\n");
+            stepRes = data.getStepResult().split("\r\n|\n");
         } else {
             stepRes[0] = "";
         }

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -134,7 +134,7 @@ public void startEnableSchedules() {
         Schedules.forEach(schedule -> {
             try {
                 if (schedule.getEnable()) {
-                    LogUtil.error("初始化任务：" + JSON.toJSONString(schedule));
+                    LogUtil.info("初始化任务：" + JSON.toJSONString(schedule));
                     scheduleManager.addOrUpdateCronJob(new JobKey(schedule.getKey(), schedule.getGroup()),
                             new TriggerKey(schedule.getKey(), schedule.getGroup()), Class.forName(schedule.getJob()), schedule.getValue(),
                             scheduleManager.getDefaultJobDataMap(schedule.getResourceId(), schedule.getValue(), schedule.getUserId()));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.base.mapper.ext;
 
 import io.metersphere.base.domain.TestCase;
+import io.metersphere.base.domain.TestCaseWithBLOBs;
 import io.metersphere.controller.request.BaseQueryRequest;
 import io.metersphere.track.dto.TestCaseDTO;
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
@@ -76,5 +77,5 @@ public interface ExtTestCaseMapper {
     int getTestPlanPassCase(@Param("planId") String planId);
 
 
-
+    List<TestCaseWithBLOBs> listForMinder(@Param("request") QueryTestCaseRequest request);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/ScenarioVariable.java
Patch:
@@ -52,7 +52,7 @@ public ScenarioVariable(String key, String value, String description, String typ
     }
 
     public boolean isConstantValid() {
-        if (StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name()) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
+        if ((StringUtils.isEmpty(this.type) || StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name())) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
             return true;
         }
         return false;

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -247,7 +247,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
 
             }
         }
-        if (StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
+        if (report != null && StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
             sendTask(report, reportUrl, testResult);
         }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -88,6 +88,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ApiScenarioWithBLOBs scenario = apiAutomationService.getApiScenario(this.getId());
                 if (scenario != null && StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
                     JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
+                    this.setName(scenario.getName());
                     hashTree = mapper.readValue(element.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                     });
                     // 场景变量

File: backend/src/main/java/io/metersphere/api/dto/definition/request/variable/ScenarioVariable.java
Patch:
@@ -52,7 +52,7 @@ public ScenarioVariable(String key, String value, String description, String typ
     }
 
     public boolean isConstantValid() {
-        if (StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name()) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
+        if ((StringUtils.isEmpty(this.type) || StringUtils.equals(this.type, VariableTypeConstants.CONSTANT.name())) && StringUtils.isNotEmpty(name) && StringUtils.isNotEmpty(value)) {
             return true;
         }
         return false;

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -247,7 +247,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
 
             }
         }
-        if (StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
+        if (report != null && StringUtils.equals(ReportTriggerMode.API.name(), report.getTriggerMode())||StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), report.getTriggerMode())) {
             sendTask(report, reportUrl, testResult);
         }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -88,6 +88,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ApiScenarioWithBLOBs scenario = apiAutomationService.getApiScenario(this.getId());
                 if (scenario != null && StringUtils.isNotEmpty(scenario.getScenarioDefinition())) {
                     JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
+                    this.setName(scenario.getName());
                     hashTree = mapper.readValue(element.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                     });
                     // 场景变量

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -91,9 +91,9 @@ public List<FileMetadata> uploadFiles(@PathVariable String projectId, @RequestPa
         return projectService.uploadFiles(projectId, files);
     }
 
-    @PostMapping(value = "/update/file/{projectId}/{fileId}", consumes = {"multipart/form-data"})
-    public FileMetadata updateFile(@PathVariable String projectId, @PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
-        return projectService.updateFile(projectId, fileId, file);
+    @PostMapping(value = "/update/file/{fileId}", consumes = {"multipart/form-data"})
+    public FileMetadata updateFile(@PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
+        return projectService.updateFile(fileId, file);
     }
 
     @GetMapping(value = "delete/file/{fileId}")

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -91,9 +91,9 @@ public List<FileMetadata> uploadFiles(@PathVariable String projectId, @RequestPa
         return projectService.uploadFiles(projectId, files);
     }
 
-    @PostMapping(value = "/update/file/{projectId}/{fileId}", consumes = {"multipart/form-data"})
-    public FileMetadata updateFile(@PathVariable String projectId, @PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
-        return projectService.updateFile(projectId, fileId, file);
+    @PostMapping(value = "/update/file/{fileId}", consumes = {"multipart/form-data"})
+    public FileMetadata updateFile(@PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
+        return projectService.updateFile(fileId, file);
     }
 
     @GetMapping(value = "delete/file/{fileId}")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.api.service.ApiTestEnvironmentService;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
+import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.commons.utils.SessionUtils;
@@ -77,9 +78,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        if (this.getReferenced() != null && this.getReferenced().equals("Deleted")) {
+        if (this.getReferenced() != null && this.getReferenced().equals(MsTestElementConstants.Deleted.name())) {
             return;
-        } else if (this.getReferenced() != null && this.getReferenced().equals("REF")) {
+        } else if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             try {
                 ApiAutomationService apiAutomationService = CommonBeanFactory.getBean(ApiAutomationService.class);
                 ObjectMapper mapper = new ObjectMapper();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -160,6 +160,7 @@ public void getRefElement(MsTestElement element) {
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             ApiDefinitionWithBLOBs apiDefinition = apiDefinitionService.getBLOBs(element.getId());
             if (apiDefinition != null) {
+                element.setProjectId(apiDefinition.getProjectId());
                 element = mapper.readValue(apiDefinition.getRequest(), new TypeReference<MsTestElement>() {
                 });
                 hashTree.add(element);

File: backend/src/main/java/io/metersphere/commons/constants/MsTestElementConstants.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum MsTestElementConstants {
-    LoopController,SCENARIO,REF
+    LoopController,SCENARIO,REF,Deleted
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.api.service.ApiTestEnvironmentService;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
+import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.commons.utils.SessionUtils;
@@ -77,9 +78,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        if (this.getReferenced() != null && this.getReferenced().equals("Deleted")) {
+        if (this.getReferenced() != null && this.getReferenced().equals(MsTestElementConstants.Deleted.name())) {
             return;
-        } else if (this.getReferenced() != null && this.getReferenced().equals("REF")) {
+        } else if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             try {
                 ApiAutomationService apiAutomationService = CommonBeanFactory.getBean(ApiAutomationService.class);
                 ObjectMapper mapper = new ObjectMapper();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -160,6 +160,7 @@ public void getRefElement(MsTestElement element) {
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             ApiDefinitionWithBLOBs apiDefinition = apiDefinitionService.getBLOBs(element.getId());
             if (apiDefinition != null) {
+                element.setProjectId(apiDefinition.getProjectId());
                 element = mapper.readValue(apiDefinition.getRequest(), new TypeReference<MsTestElement>() {
                 });
                 hashTree.add(element);

File: backend/src/main/java/io/metersphere/commons/constants/MsTestElementConstants.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum MsTestElementConstants {
-    LoopController,SCENARIO,REF
+    LoopController,SCENARIO,REF,Deleted
 }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -91,9 +91,9 @@ public List<FileMetadata> uploadFiles(@PathVariable String projectId, @RequestPa
         return projectService.uploadFiles(projectId, files);
     }
 
-    @PostMapping(value = "/update/file/{projectId}/{fileId}", consumes = {"multipart/form-data"})
-    public FileMetadata updateFile(@PathVariable String projectId, @PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
-        return projectService.updateFile(projectId, fileId, file);
+    @PostMapping(value = "/update/file/{fileId}", consumes = {"multipart/form-data"})
+    public FileMetadata updateFile(@PathVariable String fileId, @RequestPart(value = "file") MultipartFile file) {
+        return projectService.updateFile(fileId, file);
     }
 
     @GetMapping(value = "delete/file/{fileId}")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.api.service.ApiTestEnvironmentService;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
+import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.FileUtils;
 import io.metersphere.commons.utils.SessionUtils;
@@ -77,9 +78,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        if (this.getReferenced() != null && this.getReferenced().equals("Deleted")) {
+        if (this.getReferenced() != null && this.getReferenced().equals(MsTestElementConstants.Deleted.name())) {
             return;
-        } else if (this.getReferenced() != null && this.getReferenced().equals("REF")) {
+        } else if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {
             try {
                 ApiAutomationService apiAutomationService = CommonBeanFactory.getBean(ApiAutomationService.class);
                 ObjectMapper mapper = new ObjectMapper();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -160,6 +160,7 @@ public void getRefElement(MsTestElement element) {
             mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
             ApiDefinitionWithBLOBs apiDefinition = apiDefinitionService.getBLOBs(element.getId());
             if (apiDefinition != null) {
+                element.setProjectId(apiDefinition.getProjectId());
                 element = mapper.readValue(apiDefinition.getRequest(), new TypeReference<MsTestElement>() {
                 });
                 hashTree.add(element);

File: backend/src/main/java/io/metersphere/commons/constants/MsTestElementConstants.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum MsTestElementConstants {
-    LoopController,SCENARIO,REF
+    LoopController,SCENARIO,REF,Deleted
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger3Parser.java
Patch:
@@ -320,6 +320,9 @@ private Schema getModelByRef(String ref) {
     }
 
     private Object parseSchema(Schema schema, Set<String> refSet, Map<String, Schema> infoMap) {
+        if (schema == null) {
+            return new JSONObject();
+        }
         infoMap.put(schema.getName(), schema);
         if (StringUtils.isNotBlank(schema.get$ref())) {
             if (refSet.contains(schema.get$ref())) {

File: backend/src/main/java/io/metersphere/commons/utils/XMLUtils.java
Patch:
@@ -51,6 +51,8 @@ public static String jsonToXmlStr(JSONObject jObj) {
     //  传入完整的 xml 文本，转换成 json 对象
     public static JSONObject XmlToJson(String xml) {
         JSONObject result = new JSONObject();
+        if(xml == null)
+            return null;
         List<String> list = preProcessXml(xml);
         try {
             result = (JSONObject) XmlTagToJsonObject(list);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -232,6 +232,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         scenario.setPrincipal(request.getPrincipal());
         scenario.setStepTotal(request.getStepTotal());
         scenario.setUpdateTime(System.currentTimeMillis());
+        scenario.setDescription(request.getDescription());
         scenario.setScenarioDefinition(JSON.toJSONString(request.getScenarioDefinition()));
         if (StringUtils.isNotEmpty(request.getStatus())) {
             scenario.setStatus(request.getStatus());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -187,7 +187,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 }
             } else {
                 String url = this.getUrl();
-                if (!url.startsWith("http://") && !url.startsWith("https://")) {
+                if (StringUtils.isNotEmpty(url) && !url.startsWith("http://") && !url.startsWith("https://")) {
                     url = "http://" + url;
                 }
                 if (StringUtils.isNotEmpty(this.getPort()) && this.getPort().startsWith("${")) {

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -91,8 +91,8 @@ public String addTestPlan(@RequestBody AddTestPlanRequest testPlan) {
 
     @PostMapping("/edit")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public void editTestPlan(@RequestBody TestPlanDTO testPlanDTO) {
-        testPlanService.editTestPlan(testPlanDTO, true);
+    public String editTestPlan(@RequestBody TestPlanDTO testPlanDTO) {
+        return testPlanService.editTestPlan(testPlanDTO, true);
     }
 
     @PostMapping("/edit/status/{planId}")

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -176,7 +176,7 @@ public TestPlan getTestPlan(String testPlanId) {
         return Optional.ofNullable(testPlanMapper.selectByPrimaryKey(testPlanId)).orElse(new TestPlan());
     }
 
-    public int editTestPlan(TestPlanDTO testPlan, Boolean isSendMessage) {
+    public String editTestPlan(TestPlanDTO testPlan, Boolean isSendMessage) {
         checkTestPlanExist(testPlan);
         TestPlan res = testPlanMapper.selectByPrimaryKey(testPlan.getId()); //  先查一次库
         testPlan.setUpdateTime(System.currentTimeMillis());
@@ -230,7 +230,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
                     .build();
             noticeSendService.send(NoticeConstants.TaskType.TEST_PLAN_TASK, noticeModel);
         }
-        return i;
+        return testPlan.getId();
     }
 
     //计划内容

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -38,4 +38,6 @@ public interface ExtApiDefinitionMapper {
     List<ApiDefinitionResult> listRelevance(@Param("request")ApiDefinitionRequest request);
     List<ApiDefinitionResult>  listRelevanceReview(@Param("request")ApiDefinitionRequest request);
     List<String> selectIds(@Param("request") BaseQueryRequest query);
+
+    List<ApiDefinition> selectEffectiveIdByProjectId(String projectId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -6,7 +6,6 @@
 import io.metersphere.base.domain.ApiScenario;
 import io.metersphere.base.domain.ApiScenarioExample;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
-import io.metersphere.controller.request.BaseQueryRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -28,6 +27,8 @@ public interface ExtApiScenarioMapper {
 
     long countByProjectID(String projectId);
 
+    List<ApiScenarioWithBLOBs> selectIdAndScenarioByProjectId(String projectId);
+
     long countByProjectIDAndCreatInThisWeek(@Param("projectId") String projectId, @Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
     List<ApiDataCountResult> countRunResultByProjectID(String projectId);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -31,4 +31,6 @@ public interface ExtApiTestCaseMapper {
     ApiTestCase getNextNum(@Param("definitionId") String definitionId);
 
     ApiTestCaseInfo selectApiCaseInfoByPrimaryKey(String id);
+
+    List<ApiTestCase> selectEffectiveTestCaseByProjectId(String projectId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -214,6 +214,8 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
                 samplerProxy.getBody().setKvs(keyValues);
             }
             samplerProxy.setProtocol(RequestType.HTTP);
+            samplerProxy.setConnectTimeout(source.getConnectTimeout()+"");
+            samplerProxy.setResponseTimeout(source.getResponseTimeout()+"");
             samplerProxy.setPort(source.getPropertyAsString("HTTPSampler.port"));
             samplerProxy.setDomain(source.getDomain());
             if (source.getArguments() != null) {
@@ -239,6 +241,7 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
             samplerProxy.setMethod(source.getMethod());
             if (this.getUrl(source) != null) {
                 samplerProxy.setUrl(this.getUrl(source));
+                samplerProxy.setPath(null);
             }
             samplerProxy.setId(UUID.randomUUID().toString());
             samplerProxy.setType("HTTPSamplerProxy");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -423,7 +423,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
                 testcase.setSort(sort.getAndIncrement());
                 testcase.setNum(num.decrementAndGet());
                 testcase.setReviewStatus(TestCaseReviewStatus.Prepare.name());
-                mapper.insert(testcase);
+                    mapper.insert(testcase);
             });
         }
         sqlSession.flushStatements();
@@ -451,7 +451,7 @@ public void updateImportData(List<TestCaseWithBLOBs> testCases, String projectId
 
     /**
      * 把Excel中带ID的数据更新到数据库
-     *
+     * feat(测试跟踪):通过Excel导入导出时有ID字段，可通过Excel导入来更新用例。 (#1727)
      * @param testCases
      * @param projectId
      */

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -214,6 +214,8 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
                 samplerProxy.getBody().setKvs(keyValues);
             }
             samplerProxy.setProtocol(RequestType.HTTP);
+            samplerProxy.setConnectTimeout(source.getConnectTimeout()+"");
+            samplerProxy.setResponseTimeout(source.getResponseTimeout()+"");
             samplerProxy.setPort(source.getPropertyAsString("HTTPSampler.port"));
             samplerProxy.setDomain(source.getDomain());
             if (source.getArguments() != null) {
@@ -239,6 +241,7 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
             samplerProxy.setMethod(source.getMethod());
             if (this.getUrl(source) != null) {
                 samplerProxy.setUrl(this.getUrl(source));
+                samplerProxy.setPath(null);
             }
             samplerProxy.setId(UUID.randomUUID().toString());
             samplerProxy.setType("HTTPSamplerProxy");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -559,9 +559,10 @@ private List<TestCaseExcelData> generateExportTemplate() {
 
         list.add(new TestCaseExcelData());
         TestCaseExcelData explain = new TestCaseExcelData();
-        explain.setName(Translator.get("do_not_modify_header_order"));
+        explain.setName(Translator.get("do_not_modify_header_order") + "," + Translator.get("num_needed_modify_testcase") + "," + Translator.get("num_needless_create_testcase"));
         explain.setNodePath(Translator.get("module_created_automatically"));
         explain.setType(Translator.get("options") + "（functional、performance、api）");
+        explain.setTags(Translator.get("tag_tip_pattern"));
 //        explain.setMethod(Translator.get("options") + "（manual、auto）");
         explain.setPriority(Translator.get("options") + "（P0、P1、P2、P3）");
         explain.setMaintainer(Translator.get("please_input_workspace_member"));

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -241,7 +241,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         } else {
             scenario.setUserId(request.getUserId());
         }
-        if (StringUtils.isEmpty(request.getApiScenarioModuleId()) || StringUtils.isEmpty(request.getModulePath()) || "default-module".equals(request.getApiScenarioModuleId())) {
+        if (StringUtils.isEmpty(request.getApiScenarioModuleId()) || "default-module".equals(request.getApiScenarioModuleId())) {
             ApiScenarioModuleExample example = new ApiScenarioModuleExample();
             example.createCriteria().andProjectIdEqualTo(request.getProjectId()).andNameEqualTo("默认模块");
             List<ApiScenarioModule> modules = apiScenarioModuleMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -264,7 +264,7 @@ private ApiDefinition updateTest(SaveApiDefinitionRequest request) {
         test.setEnvironmentId(request.getEnvironmentId());
         test.setUserId(request.getUserId());
         test.setTags(request.getTags());
-        if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId()) || "default-module".equals(request.getModuleId())) {
+        if (StringUtils.isEmpty(request.getModuleId()) || "default-module".equals(request.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
             example.createCriteria().andProjectIdEqualTo(test.getProjectId()).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("默认模块");
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
@@ -297,7 +297,7 @@ private ApiDefinition createTest(SaveApiDefinitionRequest request) {
         test.setStatus(APITestStatus.Underway.name());
         test.setModulePath(request.getModulePath());
         test.setModuleId(request.getModuleId());
-        if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId()) || "default-module".equals(request.getModuleId())) {
+        if (StringUtils.isEmpty(request.getModuleId()) || "default-module".equals(request.getModuleId())) {
             ApiModuleExample example = new ApiModuleExample();
             example.createCriteria().andProjectIdEqualTo(test.getProjectId()).andProtocolEqualTo(test.getProtocol()).andNameEqualTo("默认模块");
             List<ApiModule> modules = apiModuleMapper.selectByExample(example);
@@ -616,7 +616,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
         }
         for (int i = 0; i < data.size(); i++) {
             ApiDefinitionWithBLOBs item = data.get(i);
-            if (StringUtils.isEmpty(item.getModuleId()) || StringUtils.isEmpty(item.getModulePath()) || "default-module".equals(item.getModuleId())) {
+            if (StringUtils.isEmpty(item.getModuleId()) || "default-module".equals(item.getModuleId())) {
                 ApiModuleExample example = new ApiModuleExample();
                 example.createCriteria().andProjectIdEqualTo(item.getProjectId()).andProtocolEqualTo(item.getProtocol()).andNameEqualTo("默认模块");
                 List<ApiModule> modules = apiModuleMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -93,7 +93,7 @@ public class TestCaseService {
     TestCaseTestMapper testCaseTestMapper;
 
     private void setNode(TestCaseWithBLOBs testCase){
-        if (StringUtils.isEmpty(testCase.getNodeId()) || StringUtils.isEmpty(testCase.getNodePath()) || "default-module".equals(testCase.getNodeId())) {
+        if (StringUtils.isEmpty(testCase.getNodeId()) || "default-module".equals(testCase.getNodeId())) {
             TestCaseNodeExample example = new TestCaseNodeExample();
             example.createCriteria().andProjectIdEqualTo(testCase.getProjectId()).andNameEqualTo("默认模块");
             List<TestCaseNode> nodes = testCaseNodeMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -171,7 +171,7 @@ public APIReportResult getReport(@PathVariable String testId, @PathVariable Stri
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
     public ApiDefinitionImport testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ApiTestImportRequest request) {
-        return apiDefinitionService.apiTestImport(file, request);
+        return apiDefinitionService.apiTestImport(file, request);//95821329-9eaa-4d2a-aa24-e6f912994716"
     }
 
     @PostMapping(value = "/export/{type}")

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -243,7 +243,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
             scenario.setUserId(request.getUserId());
         }
         if (StringUtils.isEmpty(request.getApiScenarioModuleId()) || StringUtils.isEmpty(request.getModulePath())) {
-            scenario.setApiScenarioModuleId("root");
+            scenario.setApiScenarioModuleId("default-module");
             scenario.setModulePath("/默认模块");
         }
         return scenario;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -264,7 +264,7 @@ private ApiDefinition updateTest(SaveApiDefinitionRequest request) {
         test.setTags(request.getTags());
         if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId())) {
             test.setModulePath("/默认模块");
-            test.setModuleId("root");
+            test.setModuleId("default-module");
         }
         apiDefinitionMapper.updateByPrimaryKeySelective(test);
         return test;
@@ -292,7 +292,7 @@ private ApiDefinition createTest(SaveApiDefinitionRequest request) {
         test.setModuleId(request.getModuleId());
         if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId())) {
             test.setModulePath("/默认模块");
-            test.setModuleId("root");
+            test.setModuleId("default-module");
         }
         test.setResponse(JSONObject.toJSONString(request.getResponse()));
         test.setEnvironmentId(request.getEnvironmentId());
@@ -605,7 +605,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
         for (int i = 0; i < data.size(); i++) {
             ApiDefinitionWithBLOBs item = data.get(i);
             if (StringUtils.isEmpty(item.getModuleId()) || StringUtils.isEmpty(item.getModulePath())) {
-                item.setModuleId("root");
+                item.setModuleId("default-module");
                 item.setModulePath("/默认模块");
             }
             if (item.getName().length() > 255) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -242,7 +242,7 @@ public ApiScenarioWithBLOBs buildSaveScenario(SaveApiScenarioRequest request) {
         } else {
             scenario.setUserId(request.getUserId());
         }
-        if (StringUtils.isEmpty(request.getApiScenarioModuleId()) || StringUtils.isEmpty(request.getModulePath())) {
+        if (StringUtils.isEmpty(request.getApiScenarioModuleId())) {
             scenario.setApiScenarioModuleId("root");
             scenario.setModulePath("/默认模块");
         }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -262,7 +262,7 @@ private ApiDefinition updateTest(SaveApiDefinitionRequest request) {
         test.setEnvironmentId(request.getEnvironmentId());
         test.setUserId(request.getUserId());
         test.setTags(request.getTags());
-        if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId())) {
+        if (StringUtils.isEmpty(request.getModuleId())) {
             test.setModulePath("/默认模块");
             test.setModuleId("root");
         }
@@ -290,7 +290,7 @@ private ApiDefinition createTest(SaveApiDefinitionRequest request) {
         test.setStatus(APITestStatus.Underway.name());
         test.setModulePath(request.getModulePath());
         test.setModuleId(request.getModuleId());
-        if (StringUtils.isEmpty(request.getModulePath()) || StringUtils.isEmpty(request.getModuleId())) {
+        if (StringUtils.isEmpty(request.getModuleId())) {
             test.setModulePath("/默认模块");
             test.setModuleId("root");
         }
@@ -604,7 +604,7 @@ private void importApi(ApiTestImportRequest request, ApiDefinitionImport apiImpo
         }
         for (int i = 0; i < data.size(); i++) {
             ApiDefinitionWithBLOBs item = data.get(i);
-            if (StringUtils.isEmpty(item.getModuleId()) || StringUtils.isEmpty(item.getModulePath())) {
+            if (StringUtils.isEmpty(item.getModuleId())) {
                 item.setModuleId("root");
                 item.setModulePath("/默认模块");
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -89,7 +89,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                     JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
                     hashTree = mapper.readValue(element.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                     });
-                    OldVersionUtil.transferHashTree(hashTree);
                     // 场景变量
                     if (StringUtils.isNotEmpty(element.getString("variables"))) {
                         LinkedList<ScenarioVariable> variables = mapper.readValue(element.getString("variables"),

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -163,7 +163,6 @@ public void getRefElement(MsTestElement element) {
                 element = mapper.readValue(apiDefinition.getRequest(), new TypeReference<MsTestElement>() {
                 });
                 hashTree.add(element);
-                OldVersionUtil.transferHashTree(hashTree);
             }
         } catch (Exception ex) {
             ex.printStackTrace();

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -547,9 +547,10 @@ private List<TestCaseExcelData> generateExportTemplate() {
 
         list.add(new TestCaseExcelData());
         TestCaseExcelData explain = new TestCaseExcelData();
-        explain.setName(Translator.get("do_not_modify_header_order"));
+        explain.setName(Translator.get("do_not_modify_header_order") + "," + Translator.get("num_needed_modify_testcase") + "," + Translator.get("num_needless_create_testcase"));
         explain.setNodePath(Translator.get("module_created_automatically"));
         explain.setType(Translator.get("options") + "（functional、performance、api）");
+        explain.setTags(Translator.get("tag_tip_pattern"));
 //        explain.setMethod(Translator.get("options") + "（manual、auto）");
         explain.setPriority(Translator.get("options") + "（P0、P1、P2、P3）");
         explain.setMaintainer(Translator.get("please_input_workspace_member"));

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -358,7 +358,8 @@ private RequestResult getRequestResult(SampleResult result) {
                 requestResult.addPassAssertions();
             }
             //xpath 提取错误会添加断言错误
-            if (StringUtils.isBlank(responseAssertionResult.getMessage()) || !responseAssertionResult.getName().endsWith("XPath2Extractor")) {
+            if (StringUtils.isBlank(responseAssertionResult.getMessage()) ||
+                    (StringUtils.isNotBlank(responseAssertionResult.getName()) && !responseAssertionResult.getName().endsWith("XPath2Extractor"))) {
                 responseResult.getAssertions().add(responseAssertionResult);
             }
         }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -409,7 +409,7 @@ public void checkStatus(String testPlanId) { //  检查执行结果，自动更
                     || StringUtils.equals(res, "success")
                     || StringUtils.equals(res, ScenarioStatus.Success.name())) {
                 passNum++;
-            } else if (res == null) {
+            } else if (res == null || StringUtils.equals(TestPlanStatus.Prepare.name(), res)) {
                 prepareNum++;
             } else {
                 failNum++;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -517,7 +517,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
     }
 
     public void addResult(TestResult res) {
-        if (!res.getScenarios().isEmpty() && !res.getScenarios().get(0).getRequestResults().isEmpty()) {
+        if (res != null && CollectionUtils.isNotEmpty(res.getScenarios()) && res.getScenarios().get(0) != null && CollectionUtils.isNotEmpty(res.getScenarios().get(0).getRequestResults())) {
             RequestResult result = res.getScenarios().get(0).getRequestResults().get(0);
             if (result.getName().indexOf("<->") != -1) {
                 result.setName(result.getName().substring(0, result.getName().indexOf("<->")));

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -70,8 +70,9 @@ private List<ApiDefinitionWithBLOBs> parseRequests(Swagger swagger, ApiTestImpor
                 parseParameters(operation, request);
                 addBodyHeader(request);
                 if (StringUtils.isNotBlank(basePath)) {
-                    apiDefinition.setPath(basePath + apiDefinition.getPath());
-                    request.setPath(basePath + request.getPath());
+                    String pathStr = basePath + apiDefinition.getPath().replaceAll("//","/");
+                    apiDefinition.setPath(pathStr);
+                    request.setPath(pathStr);
                 }
                 apiDefinition.setRequest(JSON.toJSONString(request));
                 apiDefinition.setResponse(JSON.toJSONString(parseResponse(operation, operation.getResponses())));

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -198,11 +198,11 @@ public void teardownTest(BackendListenerContext context) throws Exception {
             apiDefinitionService.addResult(testResult);
 
             //测试计划定时任务-接口执行逻辑的话，需要同步测试计划的报告数据
-            if (StringUtils.equals(this.runMode, ApiRunMode.SCHEDULE_API_PLAN.name())) {
+            if (StringUtils.equalsAny(this.runMode, ApiRunMode.SCHEDULE_API_PLAN.name(), ApiRunMode.JENKINS_API_PLAN.name())) {
                 apiDefinitionExecResultService.saveApiResultByScheduleTask(testResult, ApiRunMode.SCHEDULE_API_PLAN.name());
                 List<String> testPlanReportIdList = new ArrayList<>();
                 testPlanReportIdList.add(debugReportId);
-                for(String testPlanReportId : testPlanReportIdList) {   //  更新每个测试计划的状态
+                for (String testPlanReportId : testPlanReportIdList) {   //  更新每个测试计划的状态
                     testPlanReportService.checkTestPlanStatus(testPlanReportId);
                 }
                 testPlanReportService.updateReport(testPlanReportIdList, ApiRunMode.SCHEDULE_API_PLAN.name(), ReportTriggerMode.SCHEDULE.name());

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -165,7 +165,7 @@ public TestCaseWithBLOBs checkTestCaseExist(TestCaseWithBLOBs testCase) {
                     String steps = tc.getSteps();
                     String remark = tc.getRemark();
                     if (StringUtils.equals(steps, testCase.getSteps()) && StringUtils.equals(remark, caseRemark)) {
-                         MSException.throwException(Translator.get("test_case_already_exists"));
+                         //MSException.throwException(Translator.get("test_case_already_exists"));
                         isExt = true;
                     }
                 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -213,7 +213,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables,Par
                     csvDataSet.setName(StringUtils.isEmpty(item.getName()) ? "CSVDataSet" : item.getName());
                     csvDataSet.setProperty("fileEncoding", StringUtils.isEmpty(item.getEncoding()) ? "UTF-8" : item.getEncoding());
                     if (CollectionUtils.isNotEmpty(item.getFiles())) {
-                        if (!config.isOperating() && new File(BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName()).exists()) {
+                        if (!config.isOperating() && !new File(BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName()).exists()) {
                             MSException.throwException(StringUtils.isEmpty(item.getName()) ? "CSVDataSet" : item.getName() + "：[ CSV文件不存在 ]");
                         }
                         csvDataSet.setProperty("filename", BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName());

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -74,6 +74,7 @@ public List<KeyValue> getBodyParams(HTTPSamplerProxy sampler, String requestId)
                 }
             }
             KeyValue keyValue = new KeyValue("", "JSON-SCHEMA", this.getRaw(), true, true);
+            sampler.setPostBodyRaw(true);
             keyValue.setEnable(true);
             keyValue.setEncode(false);
             body.add(keyValue);

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -92,7 +92,7 @@ public String addTestPlan(@RequestBody AddTestPlanRequest testPlan) {
     @PostMapping("/edit")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
     public void editTestPlan(@RequestBody TestPlanDTO testPlanDTO) {
-        testPlanService.editTestPlan(testPlanDTO);
+        testPlanService.editTestPlan(testPlanDTO, true);
     }
 
     @PostMapping("/edit/status/{planId}")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -49,7 +49,7 @@ private IfController ifController() {
         ifController.setName(this.getName());
         ifController.setProperty(TestElement.TEST_CLASS, IfController.class.getName());
         ifController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("IfControllerPanel"));
-        ifController.setCondition("true");
+        ifController.setCondition(this.getCondition());
         ifController.setEvaluateAll(false);
         ifController.setUseExpression(true);
         return ifController;

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -254,6 +254,9 @@ public void teardownTest(BackendListenerContext context) throws Exception {
     }
 
     private static void sendTask(ApiTestReport report, String reportUrl, TestResult testResult) {
+        if (report == null) {
+            return;
+        }
         SystemParameterService systemParameterService = CommonBeanFactory.getBean(SystemParameterService.class);
         NoticeSendService noticeSendService = CommonBeanFactory.getBean(NoticeSendService.class);
         assert systemParameterService != null;

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -73,7 +73,7 @@ public String validate(TestCaseExcelData data, String errMsg) {
 
             if (dbExist) {
                 // db exist
-                stringBuilder.append(Translator.get("test_case_already_exists_excel") + "：" + data.getName() + "; ");
+                stringBuilder.append(Translator.get("test_case_already_exists") + "：" + data.getName() + "; ");
             } else {
                 // @Data 重写了 equals 和 hashCode 方法
                 excelExist = excelDataList.contains(data);

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -111,7 +111,7 @@ public String run(@RequestBody RunScenarioRequest request) {
     @PostMapping(value = "/run/jenkins")
     public String runByJenkins(@RequestBody RunScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
-        request.setTriggerMode(ApiRunMode.SCENARIO.name());
+        request.setTriggerMode(ApiRunMode.API.name());
         request.setRunMode(ApiRunMode.SCENARIO.name());
         return apiAutomationService.run(request);
     }

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.service.ApiTestCaseService;
 import io.metersphere.base.domain.ApiTestCase;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
+import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;

File: backend/src/main/java/io/metersphere/track/controller/TestPlanScenarioCaseController.java
Patch:
@@ -59,7 +59,7 @@ public String run(@RequestBody RunScenarioRequest request) {
     @PostMapping(value = "/jenkins/run")
     public String runByRun(@RequestBody RunScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
-        request.setTriggerMode(ApiRunMode.SCENARIO.name());
+        request.setTriggerMode(ApiRunMode.API.name());
         request.setRunMode(ApiRunMode.SCENARIO.name());
         return testPlanScenarioCaseService.run(request);
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -165,7 +165,7 @@ public TestCaseWithBLOBs checkTestCaseExist(TestCaseWithBLOBs testCase) {
                     String steps = tc.getSteps();
                     String remark = tc.getRemark();
                     if (StringUtils.equals(steps, testCase.getSteps()) && StringUtils.equals(remark, caseRemark)) {
-                        // MSException.throwException(Translator.get("test_case_already_exists"));
+                         MSException.throwException(Translator.get("test_case_already_exists"));
                         isExt = true;
                     }
                 }

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
+import io.metersphere.base.domain.FileMetadata;
 import io.metersphere.base.domain.Project;
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
@@ -86,8 +87,8 @@ public void updateProject(@RequestBody Project Project) {
     }
 
     @PostMapping(value = "upload/files/{projectId}", consumes = {"multipart/form-data"})
-    public void uploadFiles(@PathVariable String projectId, @RequestPart(value = "file") List<MultipartFile> files) {
-        projectService.uploadFiles(projectId, files);
+    public List<FileMetadata> uploadFiles(@PathVariable String projectId, @RequestPart(value = "file") List<MultipartFile> files) {
+      return  projectService.uploadFiles(projectId, files);
     }
 
     @GetMapping(value = "delete/file/{fileId}")

File: backend/src/main/java/io/metersphere/api/service/ApiDocumentService.java
Patch:
@@ -87,7 +87,7 @@ public ApiDocumentInfoDTO conversionModelToDTO(ApiDefinitionWithBLOBs apiModel)
 
             if (apiModel.getRequest() != null) {
                 JSONObject requestJsonObj = JSONObject.parseObject(apiModel.getRequest());
-                //head赋值
+                //head赋值conversionModelToDTO
                 if (requestJsonObj.containsKey("headers")) {
                     JSONArray requestHeadDataArr = new JSONArray();
                     //head赋值
@@ -300,6 +300,7 @@ public ApiDocumentInfoDTO conversionModelToDTO(ApiDefinitionWithBLOBs apiModel)
             }
         }
         apiInfoDTO.setRequestPreviewData(previewJsonArray);
+        apiInfoDTO.setSelectedFlag(true);
         return apiInfoDTO;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -201,7 +201,7 @@ private HashTree controller(HashTree tree) {
             jsr223PreProcessor.setName("循环超时处理");
             jsr223PreProcessor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
             jsr223PreProcessor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
-            jsr223PreProcessor.setProperty("cacheKey", "true");
+            /*jsr223PreProcessor.setProperty("cacheKey", "true");*/
             jsr223PreProcessor.setProperty("scriptLanguage", "beanshell");
             jsr223PreProcessor.setProperty("script", script());
             hashTree.add(jsr223PreProcessor);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -48,7 +48,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
 
         processor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
-        processor.setProperty("cacheKey", "true");
+        /*processor.setProperty("cacheKey", "true");*/
         processor.setProperty("scriptLanguage", this.getScriptLanguage());
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("nashornScript")) {
             processor.setProperty("scriptLanguage", "nashorn");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -42,7 +42,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         processor.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
-        processor.setProperty("cacheKey", "true");
+        /*processor.setProperty("cacheKey", "true");*/
         processor.setProperty("scriptLanguage", this.getScriptLanguage());
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("nashornScript")) {
             processor.setProperty("scriptLanguage", "nashorn");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -54,7 +54,7 @@ public JSR223PreProcessor getJSR223PreProcessor() {
         }
         processor.setProperty(TestElement.TEST_CLASS, JSR223PreProcessor.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
-        processor.setProperty("cacheKey", "true");
+        /*processor.setProperty("cacheKey", "true");*/
         processor.setProperty("scriptLanguage", this.getScriptLanguage());
         if (StringUtils.isNotEmpty(this.getScriptLanguage()) && this.getScriptLanguage().equals("nashornScript")) {
             processor.setProperty("scriptLanguage", "nashorn");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -12,6 +12,8 @@
 
 public interface ExtApiTestCaseMapper {
 
+    List<String> listPorjectAllCaseName(@Param("projectId") String projectId);
+
     List<ApiTestCaseResult> list(@Param("request") ApiTestCaseRequest request);
 
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiScenarioReport;
 import io.metersphere.base.domain.ApiTestReport;
+import io.metersphere.base.domain.TestPlanReport;
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
@@ -14,6 +15,7 @@
 import io.metersphere.notice.service.NoticeSendService;
 import io.metersphere.service.SystemParameterService;
 import io.metersphere.track.service.TestPlanReportService;
+import io.metersphere.track.service.TestPlanService;
 import io.metersphere.track.service.TestPlanTestCaseService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -120,8 +120,8 @@ public Project getProjectByTestCaseId(@PathVariable String testCaseId) {
 
     @PostMapping(value = "/add", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public void addTestCase(@RequestPart("request") EditTestCaseRequest request, @RequestPart(value = "file") List<MultipartFile> files) {
-        testCaseService.save(request, files);
+    public String addTestCase(@RequestPart("request") EditTestCaseRequest request, @RequestPart(value = "file") List<MultipartFile> files) {
+        return testCaseService.save(request, files);
     }
 
     @PostMapping(value = "/edit", consumes = {"multipart/form-data"})

File: backend/src/main/java/io/metersphere/api/dto/definition/SwaggerApiExportResult.java
Patch:
@@ -14,9 +14,9 @@
 public class SwaggerApiExportResult extends ApiExportResult{
     private String openapi;
     private SwaggerInfo info;
-    private String externalDocs;
+    private JSONObject externalDocs;
     private List<String> servers;
     private List<SwaggerTag> tags;
     private JSONObject paths;   //  Map<String, Object>, Object 里放 Operation 对象
-    private List<String> components;
+    private JSONObject components;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/swagger/SwaggerApiInfo.java
Patch:
@@ -14,4 +14,5 @@ public class SwaggerApiInfo {
     private String summary; //  对应 API 的名字
     private List<JSONObject> parameters; //  对应 API 的请求参数
     private JSONObject requestBody;
+    private JSONObject responses;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -140,7 +140,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (arguments != null) {
             tree.add(config.valueSupposeMock(arguments));
         }
-        this.addCsvDataSet(tree, variables);
+        this.addCsvDataSet(tree, variables,config);
         this.addCounter(tree, variables);
         this.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(this.headers)) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -201,7 +201,7 @@ protected Map<String, EnvironmentConfig> getEnvironmentConfig(String environment
         return null;
     }
 
-    protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables) {
+    protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables,ParameterConfig config) {
         if (CollectionUtils.isNotEmpty(variables)) {
             List<ScenarioVariable> list = variables.stream().filter(ScenarioVariable::isCSVValid).collect(Collectors.toList());
             if (CollectionUtils.isNotEmpty(list)) {
@@ -213,7 +213,7 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables) {
                     csvDataSet.setName(StringUtils.isEmpty(item.getName()) ? "CSVDataSet" : item.getName());
                     csvDataSet.setProperty("fileEncoding", StringUtils.isEmpty(item.getEncoding()) ? "UTF-8" : item.getEncoding());
                     if (CollectionUtils.isNotEmpty(item.getFiles())) {
-                        if (new File(BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName()).exists()) {
+                        if (!config.isOperating() && new File(BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName()).exists()) {
                             MSException.throwException(StringUtils.isEmpty(item.getName()) ? "CSVDataSet" : item.getName() + "：[ CSV文件不存在 ]");
                         }
                         csvDataSet.setProperty("filename", BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -56,7 +56,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         final HashTree groupTree = controller(tree);
         if (CollectionUtils.isNotEmpty(config.getVariables())) {
-            this.addCsvDataSet(groupTree, config.getVariables());
+            this.addCsvDataSet(groupTree, config.getVariables(),config);
             this.addCounter(groupTree, config.getVariables());
             this.addRandom(groupTree, config.getVariables());
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/unknown/MsJmeterElement.java
Patch:
@@ -58,7 +58,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                     LogUtil.info(((ThreadGroup) scriptWrapper).getName() + "是被禁用线程组不加入执行");
                 } else {
                     // CSV数据检查文件路径是否还存在
-                    if (scriptWrapper instanceof CSVDataSet) {
+                    if (!config.isOperating() && scriptWrapper instanceof CSVDataSet) {
                         String path = ((CSVDataSet) scriptWrapper).getPropertyAsString("filename");
                         if (!new File(path).exists()) {
                             MSException.throwException(StringUtils.isEmpty(((CSVDataSet) scriptWrapper).getName()) ? "CSVDataSet" : ((CSVDataSet) scriptWrapper).getName() + "：[ CSV文件不存在 ]");

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiScenarioReport;
 import io.metersphere.base.domain.ApiTestReport;
-import io.metersphere.base.domain.TestPlanReport;
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
@@ -15,7 +14,6 @@
 import io.metersphere.notice.service.NoticeSendService;
 import io.metersphere.service.SystemParameterService;
 import io.metersphere.track.service.TestPlanReportService;
-import io.metersphere.track.service.TestPlanService;
 import io.metersphere.track.service.TestPlanTestCaseService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -206,7 +204,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
             } else {
                 apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.API_PLAN.name());
             }
-        } else if (StringUtils.equalsAny(this.runMode, ApiRunMode.SCENARIO.name(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {
+        } else if (StringUtils.equalsAny(this.runMode, ApiRunMode.SCENARIO.name(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(),ApiRunMode.SCHEDULE_SCENARIO.name())) {
             // 执行报告不需要存储，由用户确认后在存储
             testResult.setTestId(testId);
             ApiScenarioReport scenarioReport = apiScenarioReportService.complete(testResult, this.runMode);

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG, DEFINITION, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS, SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST
+    RUN, DEBUG, DEFINITION, SCENARIO, API_PLAN, JENKINS_API_PLAN, JENKINS, SCENARIO_PLAN, API, SCHEDULE_API_PLAN, SCHEDULE_SCENARIO,SCHEDULE_SCENARIO_PLAN, SCHEDULE_PERFORMANCE_TEST
 }

File: backend/src/main/java/io/metersphere/job/sechedule/ApiScenarioTestJob.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.api.dto.automation.ExecuteType;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
 import io.metersphere.api.service.ApiAutomationService;
+import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.constants.ScheduleGroup;
 import io.metersphere.commons.utils.CommonBeanFactory;
@@ -58,6 +59,7 @@ void businessExecute(JobExecutionContext context) {
         request.setExecuteType(ExecuteType.Saved.name());
         request.setIds(this.scenarioIds);
         request.setReportUserID(this.userId);
+        request.setRunMode(ApiRunMode.SCHEDULE_SCENARIO.name());
 
         apiAutomationService.run(request);
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -611,6 +611,9 @@ public TestCaseReportMetricDTO getMetric(String planId) {
 
         List<ReportComponent> components = ReportComponentFactory.createComponents(componentIds.toJavaList(String.class), testPlan);
         List<Issues> issues = buildFunctionalCaseReport(planId, components);
+        buildApiCaseReport(planId, components);
+        buildScenarioCaseReport(planId, components);
+        buildLoadCaseReport(planId, components);
 
         TestCaseReportMetricDTO testCaseReportMetricDTO = new TestCaseReportMetricDTO();
         components.forEach(component -> {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -269,6 +269,9 @@ public void preDelete(String scenarioId) {
     }
 
     private void deleteApiScenarioReport(List<String> scenarioIds) {
+        if(scenarioIds == null || scenarioIds.isEmpty()){
+            return;
+        }
         ApiScenarioReportExample scenarioReportExample = new ApiScenarioReportExample();
         scenarioReportExample.createCriteria().andScenarioIdIn(scenarioIds);
         List<ApiScenarioReport> list = apiScenarioReportMapper.selectByExample(scenarioReportExample);

File: backend/src/main/java/io/metersphere/api/dto/document/ApiDocumentRequest.java
Patch:
@@ -20,4 +20,5 @@ public class ApiDocumentRequest {
     private String type;
     private String orderCondition;
     private List<String> apiIdList;
+    private boolean trashEnable;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -84,7 +84,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             this.setProjectId(config.getProjectId());
             config.setConfig(getEnvironmentConfig(useEnvironment));
         }
-        parseEnvironment(config.getConfig().get(this.projectId));
+        if(config.getConfig()!=null){
+            parseEnvironment(config.getConfig().get(this.projectId));
+        }
 
         // 添加环境中的公共变量
         Arguments arguments = this.addArguments(config);

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -13,6 +13,7 @@ public class ShiroUtils {
     public static void loadBaseFilterChain(Map<String, String> filterChainDefinitionMap){
 
         filterChainDefinitionMap.put("/resource/**", "anon");
+        filterChainDefinitionMap.put("/*.worker.js", "anon");
         filterChainDefinitionMap.put("/login", "anon");
         filterChainDefinitionMap.put("/signin", "anon");
         filterChainDefinitionMap.put("/ldap/signin", "anon");

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/HarScenarioParser.java
Patch:
@@ -46,8 +46,6 @@ public ScenarioImport parse(InputStream source, ApiTestImportRequest request) {
         String harName = request.getFileName();
         // 场景步骤
         LinkedList<MsTestElement> apiScenarioWithBLOBs = new LinkedList<>();
-//        ApiScenarioWithBLOBs scenario = new ApiScenarioWithBLOBs();
-//        scenario.setName(harName);
 
         MsScenario msScenario = new MsScenario();
         msScenario.setName(harName);

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseResult.java
Patch:
@@ -11,6 +11,7 @@ public class ApiTestCaseResult extends ApiTestCaseWithBLOBs {
     private String createUser;
     private String updateUser;
     private String execResult;
+    private String apiMethod;
     private Long execTime;
     private boolean active = false;
     private boolean responseActive = false;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -792,7 +792,7 @@ public void calculateResult(List<ApiDefinitionResult> resList) {
                     res.setCaseStatus("-");
                 }
 
-                if (StringUtils.equals("ESB", res.getMethod())) {
+                if (StringUtils.equalsIgnoreCase("esb", res.getMethod())) {
                     esbApiParamService.handleApiEsbParams(res);
                 }
             }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/HarParser.java
Patch:
@@ -173,7 +173,7 @@ private void parseRequestBody(HarRequest requestBody, Body body) {
             return;
         }
         HarPostData content = requestBody.postData;
-        if (!StringUtils.equalsIgnoreCase("GET", requestBody.method) || requestBody.postData == null) {
+        if (StringUtils.equalsIgnoreCase("GET", requestBody.method) || requestBody.postData == null) {
             return;
         }
         String contentType = content.mimeType;

File: backend/src/main/java/io/metersphere/commons/utils/ScriptEngineUtils.java
Patch:
@@ -22,7 +22,8 @@ public class ScriptEngineUtils {
         }
     }
 
-    public static String calculate(String input) {
+    // graal.js 禁止多线程同时访问，加上 synchronized
+    public synchronized static String calculate(String input) {
         try {
             return engine.eval("calculate('" + input + "')").toString();
         } catch (ScriptException e) {

File: backend/src/main/java/io/metersphere/commons/constants/TestPlanStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum TestPlanStatus {
-    Prepare, Underway, Completed
+    Prepare, Underway, Completed, Finished
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDocumentService.java
Patch:
@@ -372,7 +372,7 @@ public ApiDocumentShareDTO conversionApiDocumentShareToDTO(ApiDocumentShare apiS
         ApiDocumentShareDTO returnDTO = new ApiDocumentShareDTO();
         if (!StringUtils.isEmpty(apiShare.getShareApiId())) {
             BaseSystemConfigDTO baseSystemConfigDTO = systemParameterService.getBaseInfo();
-            String url = "/#/apiDocumentInfo?documentId=" + apiShare.getId();
+            String url = "?" + apiShare.getId();
             returnDTO.setId(apiShare.getId());
             returnDTO.setShareUrl(url);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImportParserFactory.java
Patch:
@@ -14,6 +14,8 @@ public static ApiImportParser getApiImportParser(String platform) {
             return new Swagger2Parser();
         }else if (StringUtils.equals(ApiImportPlatform.Har.name(), platform)) {
             return new HarParser();
+        }else if (StringUtils.equals(ApiImportPlatform.ESB.name(), platform)) {
+            return new ESBParser();
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/parse/ApiImportParser.java
Patch:
@@ -1,9 +1,11 @@
 package io.metersphere.api.parse;
 
 import io.metersphere.api.dto.ApiTestImportRequest;
+import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
 
+import java.io.IOException;
 import java.io.InputStream;
 
 public interface ApiImportParser<T> {
-    T parse(InputStream source, ApiTestImportRequest request);
+    T parse(InputStream source, ApiTestImportRequest request) throws IOException, InvalidFormatException, Exception;
 }

File: backend/src/main/java/io/metersphere/api/service/EsbApiParamService.java
Patch:
@@ -75,7 +75,7 @@ public List<KeyValue> genKeyValueByEsbDataStruct(List<EsbDataStruct> dataStructR
             kv.setType(request.getType());
             kv.setDescription(request.getDescription());
             kv.setContentType(request.getContentType());
-            kv.setRequired(Boolean.parseBoolean(request.getRequired()));
+            kv.setRequired(request.isRequired());
             returnList.add(kv);
             if (request.getChildren() != null) {
                 List<KeyValue> childValueList = this.genKeyValueByEsbDataStruct(request.getChildren(), itemName);
@@ -351,4 +351,5 @@ public void deleteByResourceIdIn(List<String> apiIds) {
         example.createCriteria().andResourceIdIn(apiIds);
         esbApiParamsMapper.deleteByExample(example);
     }
+
 }

File: backend/src/main/java/io/metersphere/commons/constants/ApiImportPlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiImportPlatform {
-    Metersphere, Postman, Swagger2, Plugin, Jmeter, Har
+    Metersphere, Postman, Swagger2, Plugin, Jmeter, Har,ESB
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -206,7 +206,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
         }
         else {  //  有修改字段的调用，为保证将某些时间置null的情况，使用updateByPrimaryKey
             extScheduleMapper.updateNameByResourceID(testPlan.getId(), testPlan.getName());//   同步更新该测试的定时任务的name
-            i = testPlanMapper.updateByPrimaryKey(testPlan); //  更新
+            i = testPlanMapper.updateByPrimaryKeyWithBLOBs(testPlan); //  更新
         }
         if (!StringUtils.isBlank(testPlan.getStatus())) {
             BeanUtils.copyBean(testPlans, getTestPlan(testPlan.getId()));

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestBatchRequest.java
Patch:
@@ -40,4 +40,7 @@ public class ApiTestBatchRequest extends ApiTestCaseWithBLOBs {
     private String protocol;
 
     private String status;
+
+    private String envId;
+
 }

File: backend/src/main/java/io/metersphere/track/domain/ReportFailureAdvanceResultComponent.java
Patch:
@@ -23,7 +23,8 @@ public ReportFailureAdvanceResultComponent(TestPlanDTO testPlan) {
 
     @Override
     public void readRecord(TestPlanCaseDTO testCase) {
-        if (StringUtils.equals(testCase.getStatus(), TestPlanTestCaseStatus.Failure.name())) {
+        if (StringUtils.equals(testCase.getStatus(), TestPlanTestCaseStatus.Failure.name()) ||
+            StringUtils.equals(testCase.getStatus(), TestPlanTestCaseStatus.Blocking.name())) {
             this.functionalTestCases.add(testCase);
         }
     }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -80,8 +80,8 @@ public void removeToGc(@RequestBody List<String> ids) {
     }
 
     @PostMapping("/reduction")
-    public void reduction(@RequestBody List<SaveApiScenarioRequest> requests) {
-        apiAutomationService.reduction(requests);
+    public void reduction(@RequestBody List<String> ids) {
+        apiAutomationService.reduction(ids);
     }
 
     @GetMapping("/getApiScenario/{id}")

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -128,8 +128,8 @@ public void removeToGcByParams(@RequestBody ApiBatchRequest request) {
     }
 
     @PostMapping("/reduction")
-    public void reduction(@RequestBody List<SaveApiDefinitionRequest> requests) {
-        apiDefinitionService.reduction(requests);
+    public void reduction(@RequestBody ApiBatchRequest request) {
+        apiDefinitionService.reduction(request);
     }
 
     @GetMapping("/get/{id}")

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestCaseRequest.java
Patch:
@@ -24,8 +24,10 @@ public class QueryTestCaseRequest extends BaseQueryRequest {
     private String reviewId;
 
     private boolean isSelectThisWeedData = false;
+    private boolean isSelectThisWeedRelevanceData = false;
 
     private String caseCoverage;
 
     private long createTime = 0;
+    private long relevanceCreateTime = 0;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -34,10 +34,10 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!config.isOperating() && !this.isEnable()) {
             return;
         }
-        addRequestExtractors(tree);
+        addRequestExtractors(tree, config);
     }
 
-    private void addRequestExtractors(HashTree samplerHashTree) {
+    private void addRequestExtractors(HashTree samplerHashTree, ParameterConfig config) {
         StringJoiner extract = new StringJoiner(";");
 
         if (CollectionUtils.isNotEmpty(this.getRegex())) {
@@ -55,7 +55,7 @@ private void addRequestExtractors(HashTree samplerHashTree) {
                     samplerHashTree.add(jsonPostProcessor(extractJSONPath, extract))
             );
         }
-        if (Optional.ofNullable(extract).orElse(extract).length() > 0) {
+        if (Optional.ofNullable(extract).orElse(extract).length() > 0 && !config.isOperating()) {
             JSR223PostProcessor shell = new JSR223PostProcessor();
             shell.setEnabled(true);
             shell.setName(StringUtils.isEmpty(this.getName()) ? "JSR223PostProcessor" : this.getName());

File: backend/src/main/java/io/metersphere/track/request/testcase/TrackCount.java
Patch:
@@ -6,7 +6,7 @@ public class TrackCount {
     public static final String P2 = "P2";
     public static final String P3 = "P3";
 
-    public static final String API = "api";
+    public static final String TESTCASE = "testcase";
     public static final String PERFORMANCE = "performance";
     public static final String AUTOMATION = "automation";
 }

File: backend/src/main/java/io/metersphere/track/response/TrackStatisticsDTO.java
Patch:
@@ -145,7 +145,7 @@ public void countStatus(List<TrackCountResult> statusResults) {
     public void countRelevance(List<TrackCountResult> relevanceResults) {
         for (TrackCountResult countResult : relevanceResults) {
             switch (countResult.getGroupField()){
-                case TrackCount.API:
+                case TrackCount.TESTCASE:
                     this.apiCaseCount += countResult.getCountNumber();
                     this.allRelevanceCaseCount += countResult.getCountNumber();
                     break;

File: backend/src/main/java/io/metersphere/track/dto/TestReviewCaseDTO.java
Patch:
@@ -4,6 +4,8 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class TestReviewCaseDTO extends TestCaseWithBLOBs {
@@ -16,4 +18,5 @@ public class TestReviewCaseDTO extends TestCaseWithBLOBs {
     private String issues;
     private String model;
     private String projectName;
+    private List<TestCaseTestDTO> list;
 }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -52,6 +52,7 @@ public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap
         filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
         filterChainDefinitionMap.put("/language", "apikey, authc");// 跳转到 /language 不用校验 csrf
         filterChainDefinitionMap.put("/document", "apikey, authc"); // 跳转到 /document 不用校验 csrf
+        filterChainDefinitionMap.put("/test/case/file/preview/**", "apikey, authc"); // 预览测试用例附件 不用校验 csrf
     }
 
     public static Cookie getSessionIdCookie(){

File: backend/src/main/java/io/metersphere/track/request/testcase/TestCaseMinderEditRequest.java
Patch:
@@ -10,5 +10,6 @@
 @Setter
 public class TestCaseMinderEditRequest {
     private String projectId;
+    private List<String> ids;
     List<TestCaseWithBLOBs> data;
 }

File: backend/src/main/java/io/metersphere/service/TestResourcePoolService.java
Patch:
@@ -74,6 +74,7 @@ public void checkTestResourcePool(TestResourcePoolDTO testResourcePoolDTO) {
         if (StringUtils.isNotBlank(testResourcePoolDTO.getId())) {
             criteria.andIdNotEqualTo(testResourcePoolDTO.getId());
         }
+        criteria.andStatusNotEqualTo(DELETE.name());
 
         if (testResourcePoolMapper.countByExample(example) > 0) {
             MSException.throwException(Translator.get("test_resource_pool_name_already_exists"));

File: backend/src/main/java/io/metersphere/controller/IndexController.java
Patch:
@@ -25,6 +25,6 @@ public String login() {
 
     @GetMapping(value = "/document")
     public String document() {
-        return "document:/";
+        return "document.html";
     }
 }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -236,7 +236,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                     testPlanTestCaseService.updateTestCaseStates(ids, TestPlanTestCaseStatus.Failure.name());
                 }
             } catch (Exception e) {
-                LogUtil.error(e.getMessage(), e);
+
             }
         }
         sendTask(report, reportUrl, testResult);

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -64,7 +64,6 @@ public ApiScenario create(@RequestPart("request") SaveApiScenarioRequest request
     public void update(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
         apiAutomationService.update(request, bodyFiles);
     }
-
     @GetMapping("/delete/{id}")
     public void delete(@PathVariable String id) {
         apiAutomationService.delete(id);

File: backend/src/main/java/io/metersphere/security/CsrfFilter.java
Patch:
@@ -7,6 +7,7 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.SecurityUtils;
+import org.apache.shiro.authc.ExpiredCredentialsException;
 import org.apache.shiro.web.filter.authc.AnonymousFilter;
 import org.apache.shiro.web.util.WebUtils;
 import org.springframework.core.env.Environment;
@@ -84,7 +85,7 @@ private void validateToken(String csrfToken) {
         Environment env = CommonBeanFactory.getBean(Environment.class);
         long timeout = env.getProperty("session.timeout", Long.class, 43200L);
         if (Math.abs(System.currentTimeMillis() - signatureTime) > timeout * 1000) {
-            throw new RuntimeException("expired token");
+            throw new ExpiredCredentialsException("expired token");
         }
         if (!StringUtils.equals(SessionUtils.getUserId(), signatureArray[0])) {
             throw new RuntimeException("Please check csrf token.");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -65,7 +65,7 @@ public interface ExtTestCaseMapper {
 
     long countRelevanceCreatedThisWeek(@Param("projectId") String projectId,@Param("firstDayTimestamp") long firstDayTimestamp, @Param("lastDayTimestamp") long lastDayTimestamp);
 
-    List<TrackCountResult> countCoverage(@Param("projectId") String projectId);
+    int countCoverage(@Param("projectId") String projectId);
 
     List<TrackCountResult> countFuncMaintainer(@Param("projectId") String projectId);
 

File: backend/src/main/java/io/metersphere/track/service/TrackService.java
Patch:
@@ -80,7 +80,7 @@ public long countRelevanceCreatedThisWeek(String projectId) {
         }
     }
 
-    public List<TrackCountResult> countCoverage(String projectId) {
+    public int countCoverage(String projectId) {
         return extTestCaseMapper.countCoverage(projectId);
     }
 

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -91,7 +91,7 @@ private MsScenario createScenario(Scenario oldScenario) {
         for (Request request : oldScenario.getRequests()) {
             // 条件控制器
             MsIfController ifController = null;
-            if (request.getController() != null && StringUtils.isNotEmpty(request.getController().getValue())
+            if (request.getController() != null && StringUtils.isNotEmpty(request.getController().getOperator())
                     && StringUtils.isNotEmpty(request.getController().getVariable())) {
                 ifController = new MsIfController();
                 BeanUtils.copyBean(ifController, request.getController());

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataCn.java
Patch:
@@ -59,7 +59,7 @@ public class UserExcelDataCn extends UserExcelData {
 
     @Length(max = 100)
     @ColumnWidth(30)
-    @ExcelProperty("组织成员工作空间")
+    @ExcelProperty("组织成员组织名称")
     private String orgMemberOrganization;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataTw.java
Patch:
@@ -59,7 +59,7 @@ public class UserExcelDataTw extends TestCaseExcelData {
 
     @Length(max = 100)
     @ColumnWidth(30)
-    @ExcelProperty("組織成員工作空間")
+    @ExcelProperty("組織成員組織名稱")
     private String orgMemberOrganization;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataCn.java
Patch:
@@ -50,7 +50,7 @@ public class UserExcelDataCn extends UserExcelData {
 
     @Length(max = 100)
     @ColumnWidth(30)
-    @ExcelProperty("组织管理员工作空间")
+    @ExcelProperty("组织管理员组织名称")
     private String orgAdminOrganization;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/excel/domain/UserExcelDataTw.java
Patch:
@@ -50,7 +50,7 @@ public class UserExcelDataTw extends TestCaseExcelData {
 
     @Length(max = 100)
     @ColumnWidth(30)
-    @ExcelProperty("組織管理員工作空間")
+    @ExcelProperty("組織管理員組織名稱")
     private String orgAdminOrganization;
 
     @NotBlank(message = "{cannot_be_null}")

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -193,6 +193,8 @@ public List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndLimitNumber
                         planRequest.setScenarioId(item.getTestCaseID());
                     } else if ("apiCase".equals(item.getCaseType())) {
                         planRequest.setApiId(item.getTestCaseID());
+                    } else if ("load".equals(item.getCaseType())) {
+                        planRequest.setLoadId(item.getTestCaseID());
                     }
                     List<TestPlanDTO> dtoList = testPlanService.selectTestPlanByRelevancy(planRequest);
                     item.setTestPlanDTOList(dtoList);

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestPlanRequest.java
Patch:
@@ -20,6 +20,8 @@ public class QueryTestPlanRequest extends TestPlan {
 
     private String apiId;
 
+    private String loadId;
+
     private List<OrderRequest> orders;
 
     private Map<String, List<String>> filters;

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -51,7 +51,6 @@ public MailInfo mailInfo() {
     }
 
     @GetMapping("/base/info")
-    @RequiresRoles(value = {RoleConstants.ADMIN})
     public BaseSystemConfigDTO getBaseInfo () {
         return SystemParameterService.getBaseInfo();
     }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanApiCaseController.java
Patch:
@@ -33,9 +33,7 @@ public Pager<List<TestPlanApiCaseDTO>> list(@PathVariable int goPage, @PathVaria
 
     @PostMapping("/relevance/list/{goPage}/{pageSize}")
     public Pager<List<ApiTestCaseDTO>> relevanceList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiTestCaseRequest request) {
-        Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        request.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
-        return PageUtils.setPageInfo(page, testPlanApiCaseService.relevanceList(request));
+        return testPlanApiCaseService.relevanceList(goPage, pageSize, request);
     }
 
     @GetMapping("/delete/{id}")

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -20,8 +20,8 @@ public class TestCaseExcelData {
     private String priority;
     @ExcelIgnore
     private String tags;
-    @ExcelIgnore
-    private String method;
+//    @ExcelIgnore
+//    private String method;
     @ExcelIgnore
     private String prerequisite;
     @ExcelIgnore

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -53,9 +53,9 @@ public String validate(TestCaseExcelData data, String errMsg) {
             }
         }
 
-        if (StringUtils.equals(data.getType(), TestCaseConstants.Type.Functional.getValue()) && StringUtils.equals(data.getMethod(), TestCaseConstants.Method.Auto.getValue())) {
-            stringBuilder.append(Translator.get("functional_method_tip") + "; ");
-        }
+//        if (StringUtils.equals(data.getType(), TestCaseConstants.Type.Functional.getValue()) && StringUtils.equals(data.getMethod(), TestCaseConstants.Method.Auto.getValue())) {
+//            stringBuilder.append(Translator.get("functional_method_tip") + "; ");
+//        }
 
         if (!userIds.contains(data.getMaintainer())) {
             stringBuilder.append(Translator.get("user_not_exists") + "：" + data.getMaintainer() + "; ");

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -603,7 +603,6 @@ public String debugRun(RunDefinitionRequest request, List<MultipartFile> bodyFil
         ParameterConfig config = new ParameterConfig();
         config.setConfig(envConfig);
         HashTree hashTree = request.getTestElement().generateHashTree(config);
-        System.out.println(request.getTestElement().getJmx(hashTree));
         // 调用执行方法
         APIScenarioReportResult reportResult = createScenarioReport(request.getId(), request.getScenarioId(), request.getScenarioName(), ReportTriggerMode.MANUAL.name(), request.getExecuteType(), request.getProjectId(),
                 SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -447,6 +447,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         }
 
         HashTree hashTree = request.getTestElement().generateHashTree(config);
+
         String runMode = ApiRunMode.DEFINITION.name();
         if (StringUtils.isNotBlank(request.getType()) && StringUtils.equals(request.getType(), ApiRunMode.API_PLAN.name())) {
             runMode = ApiRunMode.API_PLAN.name();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -26,7 +26,8 @@ public class MsDNSCacheManager extends MsTestElement {
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
-        if (!this.isEnable()) {
+        // 非导出操作，且不是启用状态则跳过执行
+        if (!config.isOperating() && !this.isEnable()) {
             return;
         }
         for (MsTestElement el : hashTree) {

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -144,12 +144,12 @@ public String getSteps(TestCaseExcelData data) {
         String[] stepRes = new String[1];
 
         if (data.getStepDesc() != null) {
-            stepDesc = data.getStepDesc().split("\n");
+            stepDesc = data.getStepDesc().split("\r\n");
         } else {
             stepDesc[0] = "";
         }
         if (data.getStepResult() != null) {
-            stepRes = data.getStepResult().split("\n");
+            stepRes = data.getStepResult().split("\r\n");
         } else {
             stepRes[0] = "";
         }

File: backend/src/main/java/io/metersphere/ldap/controller/LdapController.java
Patch:
@@ -68,7 +68,7 @@ public ResultHolder login(@RequestBody LoginRequest request) {
             userService.addLdapUser(user);
         }
 
-        // 执行 ShiroDBRealm 中 LDAP 登录逻辑
+        // 执行 LocalRealm 中 LDAP 登录逻辑
         LoginRequest loginRequest = new LoginRequest();
         loginRequest.setUsername(userId);
         return userService.login(loginRequest);

File: backend/src/main/java/io/metersphere/security/realm/LocalRealm.java
Patch:
@@ -34,9 +34,9 @@
  * set realm
  * </p>
  */
-public class ShiroDBRealm extends AuthorizingRealm {
+public class LocalRealm extends AuthorizingRealm {
 
-    private Logger logger = LoggerFactory.getLogger(ShiroDBRealm.class);
+    private Logger logger = LoggerFactory.getLogger(LocalRealm.class);
     @Resource
     private UserService userService;
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -520,8 +520,8 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
 
                 for (int j = 0; j < jsonArray.size(); j++) {
                     int num = j + 1;
-                    step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\n");
-                    result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\n");
+                    step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\r\n");
+                    result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\r\n");
 
                 }
                 data.setStepDesc(step.toString());

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.excel.annotation.ExcelProperty;
 import com.alibaba.excel.annotation.write.style.ColumnWidth;
+import io.metersphere.excel.annotation.NotRequired;
 import lombok.Data;
 import org.hibernate.validator.constraints.Length;
 
@@ -40,6 +41,7 @@ public class TestCaseExcelDataCn extends TestCaseExcelData {
 
     @ColumnWidth(50)
     @ExcelProperty("标签")
+    @NotRequired
     @Length(min = 0, max = 1000)
     private String tags;
 

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -144,12 +144,12 @@ public String getSteps(TestCaseExcelData data) {
         String[] stepRes = new String[1];
 
         if (data.getStepDesc() != null) {
-            stepDesc = data.getStepDesc().split("\n");
+            stepDesc = data.getStepDesc().split("\r\n");
         } else {
             stepDesc[0] = "";
         }
         if (data.getStepResult() != null) {
-            stepRes = data.getStepResult().split("\n");
+            stepRes = data.getStepResult().split("\r\n");
         } else {
             stepRes[0] = "";
         }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -520,8 +520,8 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
 
                 for (int j = 0; j < jsonArray.size(); j++) {
                     int num = j + 1;
-                    step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\n");
-                    result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\n");
+                    step.append(num + "." + jsonArray.getJSONObject(j).getString("desc") + "\r\n");
+                    result.append(num + "." + jsonArray.getJSONObject(j).getString("result") + "\r\n");
 
                 }
                 data.setStepDesc(step.toString());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -26,7 +26,8 @@ public class MsDNSCacheManager extends MsTestElement {
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
-        if (!this.isEnable()) {
+        // 非导出操作，且不是启用状态则跳过执行
+        if (!config.isOperating() && !this.isEnable()) {
             return;
         }
         for (MsTestElement el : hashTree) {

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -601,6 +601,7 @@ public String debugRun(RunDefinitionRequest request, List<MultipartFile> bodyFil
         ParameterConfig config = new ParameterConfig();
         config.setConfig(envConfig);
         HashTree hashTree = request.getTestElement().generateHashTree(config);
+        System.out.println(request.getTestElement().getJmx(hashTree));
         // 调用执行方法
         APIScenarioReportResult reportResult = createScenarioReport(request.getId(), request.getScenarioId(), request.getScenarioName(), ReportTriggerMode.MANUAL.name(), request.getExecuteType(), request.getProjectId(),
                 SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -115,7 +115,9 @@ private void setApiScenarioProjectIds(ApiScenarioDTO data) {
                 if (map != null) {
                     if (map.isEmpty()) {
                         List<String> ids = (List<String>) JSONPath.read(definition, "$..projectId");
-                        idList.addAll(new HashSet<>(ids));
+                        if (CollectionUtils.isNotEmpty(ids)) {
+                            idList.addAll(new HashSet<>(ids));
+                        }
                     } else {
                         Set<String> set = d.getEnvironmentMap().keySet();
                         idList = new ArrayList<>(set);

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -174,7 +174,7 @@ private void convertHttpSampler(MsHTTPSamplerProxy samplerProxy, Object key) {
                     }
                 }
             }
-            samplerProxy.setPath(source.getPath());
+            samplerProxy.setPath("");
             samplerProxy.setMethod(source.getMethod());
             if (source.getUrl() != null) {
                 samplerProxy.setUrl(source.getUrl().toString());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -137,7 +137,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 URL urlObject = new URL(url);
                 if (isUrl) {
                     sampler.setDomain(URLDecoder.decode(urlObject.getHost(), "UTF-8"));
-                    sampler.setPort(urlObject.getPort());
+                    if (urlObject.getPort() > 0) {
+                        sampler.setPort(urlObject.getPort());
+                    }
                     sampler.setProtocol(urlObject.getProtocol());
                 } else {
                     sampler.setDomain(config.getConfig().get(this.getProjectId()).getHttpConfig().getDomain());

File: backend/src/main/java/io/metersphere/controller/request/LoginRequest.java
Patch:
@@ -20,7 +20,7 @@ public String getUsername() {
         try {
             RsaKey rsaKey = CommonBeanFactory.getBean(RsaKey.class);
             return RsaUtil.privateDecrypt(username, rsaKey.getPrivateKey());
-        } catch (NoSuchAlgorithmException e) {
+        } catch (Exception e) {
             return username;
         }
     }
@@ -29,7 +29,7 @@ public String getPassword() {
         try {
             RsaKey rsaKey = CommonBeanFactory.getBean(RsaKey.class);
             return RsaUtil.privateDecrypt(password, rsaKey.getPrivateKey());
-        } catch (NoSuchAlgorithmException e) {
+        } catch (Exception e) {
             return password;
         }
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -377,7 +377,7 @@ public void testReviewRelevance(ReviewRelevanceRequest request) {
 
         sqlSession.flushStatements();
         //同步添加关联的接口和测试用例
-        if(request.getChecked()){
+     /*   if(request.getChecked()){
             if (!testCaseIds.isEmpty()) {
                 testCaseIds.forEach(caseId -> {
                     TestCaseWithBLOBs testDtail=testCaseMapper.selectByPrimaryKey(caseId);
@@ -434,7 +434,7 @@ public void testReviewRelevance(ReviewRelevanceRequest request) {
 
                 });
             }
-        }
+        }*/
         TestCaseReview testCaseReview = testCaseReviewMapper.selectByPrimaryKey(request.getReviewId());
         if (StringUtils.equals(testCaseReview.getStatus(), TestCaseReviewStatus.Prepare.name())
                 || StringUtils.equals(testCaseReview.getStatus(), TestCaseReviewStatus.Completed.name())) {

File: backend/src/main/java/io/metersphere/controller/handler/RestControllerExceptionHandler.java
Patch:
@@ -35,7 +35,7 @@ public ResultHolder unauthorizedExceptionHandler(HttpServletRequest request, Htt
     @ExceptionHandler(SQLException.class)
     public ResultHolder sqlExceptionHandler(HttpServletRequest request, HttpServletResponse response, SQLException e) {
         response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
-        LogUtil.error(e);
+        LogUtil.error(e.getMessage(), e);
         return ResultHolder.error("SQL error happened, please check logs.");
     }
 

File: backend/src/main/java/io/metersphere/controller/handler/RestControllerExceptionHandler.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import io.metersphere.commons.exception.MSException;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.controller.ResultHolder;
 import org.apache.shiro.ShiroException;
 import org.apache.shiro.authz.UnauthorizedException;
@@ -34,6 +35,7 @@ public ResultHolder unauthorizedExceptionHandler(HttpServletRequest request, Htt
     @ExceptionHandler(SQLException.class)
     public ResultHolder sqlExceptionHandler(HttpServletRequest request, HttpServletResponse response, SQLException e) {
         response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
+        LogUtil.error(e);
         return ResultHolder.error("SQL error happened, please check logs.");
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -194,7 +194,6 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
                 testPlan.setActualEndTime(System.currentTimeMillis());
             }
         }
-        extScheduleMapper.updateNameByResourceID(testPlan.getId(), testPlan.getName());//   同步更新该测试的定时任务的name
 
         List<String> userIds = new ArrayList<>();
         userIds.add(testPlan.getPrincipal());
@@ -204,6 +203,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
             i = testPlanMapper.updateByPrimaryKeySelective(testPlan);
         }
         else {  //  有修改字段的调用，为保证将某些时间置null的情况，使用updateByPrimaryKey
+            extScheduleMapper.updateNameByResourceID(testPlan.getId(), testPlan.getName());//   同步更新该测试的定时任务的name
             i = testPlanMapper.updateByPrimaryKey(testPlan); //  更新
         }
         if (!StringUtils.isBlank(testPlan.getStatus())) {

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/MsDefinitionParser.java
Patch:
@@ -22,9 +22,9 @@ public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest reques
         String testStr = getApiTestStr(source);
         JSONObject testObject = JSONObject.parseObject(testStr, Feature.OrderedField);
         this.projectId = request.getProjectId();
-        if (testObject.get("projectName") != null || testObject.get("projectId") != null ) {
+        if (testObject.get("projectName") != null || testObject.get("projectId") != null ) {//  metersphere 格式导入
             return parseMsFormat(testStr, request);
-        } else {
+        } else {    //  chrome 插件录制格式导入
             request.setPlatform(ApiImportPlatform.Plugin.name());
             ApiDefinitionImport apiImport = new ApiDefinitionImport();
             apiImport.setProtocol(RequestType.HTTP);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -216,6 +216,7 @@ private List<ApiDefinition> getSameRequest(SaveApiDefinitionRequest request) {
         ApiDefinitionExample example = new ApiDefinitionExample();
         if (request.getProtocol().equals(RequestType.HTTP)) {
             example.createCriteria().andMethodEqualTo(request.getMethod()).andStatusNotEqualTo("Trash")
+                    .andPathEqualTo(request.getPath())
                     .andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(request.getId());
             return apiDefinitionMapper.selectByExample(example);
         } else {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -8,7 +8,7 @@
 
 public interface ExtTestPlanLoadCaseMapper {
 
-    List<String> selectIdsNotInPlan(@Param("projectId") String projectId, @Param("planId") String planId);
+    List<String> selectIdsNotInPlan(@Param("request") LoadCaseRequest request);
     List<TestPlanLoadCaseDTO> selectTestPlanLoadCaseList(@Param("request") LoadCaseRequest request);
     void updateCaseStatus(@Param("reportId") String reportId, @Param("status") String status);
     List<String> getStatusByTestPlanId(@Param("planId") String planId);

File: backend/src/main/java/io/metersphere/track/service/TestPlanLoadCaseService.java
Patch:
@@ -46,7 +46,7 @@ public class TestPlanLoadCaseService {
     private LoadTestMapper loadTestMapper;
 
     public List<LoadTest> relevanceList(LoadCaseRequest request) {
-        List<String> ids = extTestPlanLoadCaseMapper.selectIdsNotInPlan(request.getProjectId(), request.getTestPlanId());
+        List<String> ids = extTestPlanLoadCaseMapper.selectIdsNotInPlan(request);
         if (CollectionUtils.isEmpty(ids)) {
             return new ArrayList<>();
         }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -16,6 +16,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/signin", "anon");
         filterChainDefinitionMap.put("/ldap/signin", "anon");
         filterChainDefinitionMap.put("/ldap/open", "anon");
+        filterChainDefinitionMap.put("/signout", "anon");
         filterChainDefinitionMap.put("/isLogin", "anon");
         filterChainDefinitionMap.put("/css/**", "anon");
         filterChainDefinitionMap.put("/js/**", "anon");

File: backend/src/main/java/io/metersphere/service/SystemParameterService.java
Patch:
@@ -209,7 +209,7 @@ public LdapInfo getLdapInfo(String type) {
     public String getValue(String key) {
         SystemParameter param = systemParameterMapper.selectByPrimaryKey(key);
         if (param == null || StringUtils.isBlank(param.getParamValue())) {
-            return "#783887";
+            return "";
         }
         return param.getParamValue();
     }

File: backend/src/main/java/io/metersphere/track/dto/DemandDTO.java
Patch:
@@ -8,4 +8,5 @@
 public class DemandDTO {
     private String id;
     private String name;
+    private String platform;
 }

File: backend/src/main/java/io/metersphere/track/issue/AbstractIssuePlatform.java
Patch:
@@ -102,7 +102,7 @@ protected HttpHeaders auth(String apiUser, String password) {
      *
      * @return 其他平台和本地项目绑定的属性值
      */
-    abstract String getProjectId();
+    abstract String getProjectId(String projectId);
 
     protected boolean isIntegratedPlatform(String orgId, String platform) {
         IntegrationRequest request = new IntegrationRequest();

File: backend/src/main/java/io/metersphere/track/issue/LocalPlatform.java
Patch:
@@ -66,7 +66,7 @@ public List<PlatformUser> getPlatformUser() {
     }
 
     @Override
-    String getProjectId() {
+    String getProjectId(String projectId) {
         return null;
     }
 

File: backend/src/main/java/io/metersphere/controller/handler/RestControllerExceptionHandler.java
Patch:
@@ -32,7 +32,7 @@ public ResultHolder unauthorizedExceptionHandler(HttpServletRequest request, Htt
 
 
     @ExceptionHandler(SQLException.class)
-    public ResultHolder sqlExceptionHandler(HttpServletRequest request, HttpServletResponse response, MSException e) {
+    public ResultHolder sqlExceptionHandler(HttpServletRequest request, HttpServletResponse response, SQLException e) {
         response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
         return ResultHolder.error("SQL error happened, please check logs.");
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -731,6 +731,9 @@ public List<TestCaseWithBLOBs> listTestCaseDetail(String projectId) {
     public void minderEdit(TestCaseMinderEditRequest request) {
         List<TestCaseWithBLOBs> data = request.getData();
         data.forEach(item -> {
+            if (StringUtils.isBlank(item.getNodeId()) || item.getNodeId().equals("root")) {
+                item.setNodeId("");
+            }
             item.setProjectId(request.getProjectId());
             if (StringUtils.isBlank(item.getId()) || item.getId().length() < 20) {
                 item.setId(UUID.randomUUID().toString());

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -86,7 +86,7 @@ public void reduction(@RequestBody List<SaveApiScenarioRequest> requests) {
     }
 
     @GetMapping("/getApiScenario/{id}")
-    public ApiScenario getScenarioDefinition(@PathVariable String id) {
+    public ApiScenarioDTO getScenarioDefinition(@PathVariable String id) {
         return apiAutomationService.getApiScenario(id);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -18,4 +18,6 @@ public class ApiScenarioDTO extends ApiScenarioWithBLOBs {
      * 场景跨项目ID
      */
     private List<String> projectIds;
+
+    private String caseId;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioRequest.java
Patch:
@@ -22,4 +22,5 @@ public class ApiScenarioRequest extends BaseQueryRequest {
     private long createTime = 0;
     private String executeStatus;
     private boolean notInTestPlan;
+    private String reviewId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -13,7 +13,7 @@
 
 public interface ExtApiScenarioMapper {
     List<ApiScenarioDTO> list(@Param("request") ApiScenarioRequest request);
-
+    List<ApiScenarioDTO> listReview(@Param("request") ApiScenarioRequest request);
     List<ApiScenarioWithBLOBs> selectByTagId(@Param("id") String id);
 
     List<ApiScenarioWithBLOBs> selectIds(@Param("ids") List<String> ids);

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanScenarioRequest.java
Patch:
@@ -25,4 +25,5 @@ public class TestPlanScenarioRequest {
     private Map<String, List<String>> filters;
     private Map<String, Object> combine;
     private List<String> ids;
+    private String reviewId;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRequest.java
Patch:
@@ -20,4 +20,5 @@ public class ApiDefinitionRequest extends BaseQueryRequest {
     private long createTime = 0;
     private String status;
     private String apiCaseCoverage;
+    private String reviewId;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseRequest.java
Patch:
@@ -27,4 +27,5 @@ public class ApiTestCaseRequest {
     private Map<String, Object> combine;
     private boolean isSelectThisWeedData;
     private long createTime = 0;
+    private String reviewId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -36,6 +36,6 @@ public interface ExtApiDefinitionMapper {
     ApiDefinition getNextNum(@Param("projectId") String projectId);
 
     List<ApiDefinitionResult> listRelevance(@Param("request")ApiDefinitionRequest request);
-
+    List<ApiDefinitionResult>  listRelevanceReview(@Param("request")ApiDefinitionRequest request);
     List<String> selectIds(@Param("request") BaseQueryRequest query);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -20,6 +20,8 @@ public interface ExtApiTestCaseMapper {
     List<ApiTestCaseDTO> listSimple(@Param("request") ApiTestCaseRequest request);
 
     List<String> selectIdsNotExistsInPlan(@Param("projectId") String projectId, @Param("planId") String planId);
+    List<String> selectIdsNotExistsInReview(@Param("projectId") String projectId, @Param("reviewId") String reviewId);
+
 
     List<ApiDataCountResult> countProtocolByProjectID(String projectId);
 

File: backend/src/main/java/io/metersphere/track/request/testplan/LoadCaseRequest.java
Patch:
@@ -17,4 +17,5 @@ public class LoadCaseRequest extends TestPlanLoadCase {
     private String status;
     private Map<String, List<String>> filters;
     private List<OrderRequest> orders;
+
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseIssuesController.java
Patch:
@@ -37,9 +37,9 @@ public void closeLocalIssue(@PathVariable String id) {
         issuesService.closeLocalIssue(id);
     }
 
-    @GetMapping("/delete/{id}")
-    public void deleteIssue(@PathVariable String id) {
-        issuesService.deleteIssue(id);
+    @PostMapping("/delete")
+    public void deleteIssue(@RequestBody IssuesRequest request) {
+        issuesService.deleteIssue(request);
     }
 
     @GetMapping("/tapd/user/{caseId}")

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -30,6 +30,7 @@
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
+import java.net.MalformedURLException;
 import java.util.Date;
 import java.util.List;
 
@@ -157,7 +158,7 @@ public ApiExportResult export(@RequestBody ApiBatchRequest request, @PathVariabl
 
     //定时任务创建
     @PostMapping(value = "/schedule/create")
-    public void createSchedule(@RequestBody ScheduleRequest request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) throws MalformedURLException {
         apiDefinitionService.createSchedule(request);
     }
     @PostMapping(value = "/schedule/update")

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/TaskInfoResult.java
Patch:
@@ -29,5 +29,7 @@ public class TaskInfoResult {
     private Long updateTime;
     //定时任务类型  情景定时任务/范围计划任务
     private String taskType;
+    //定时任务组别  swagger/scenario/testPlan 等
+    private String taskGroup;
 
 }

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -339,6 +339,8 @@ private Schedule buildApiTestSchedule(ScheduleRequest request) {
         schedule.setJob(ApiTestJob.class.getName());
         schedule.setGroup(ScheduleGroup.API_TEST.name());
         schedule.setType(ScheduleType.CRON.name());
+        schedule.setProjectId(request.getProjectId());
+        schedule.setName(request.getName());
         return schedule;
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtScheduleMapper.java
Patch:
@@ -15,10 +15,12 @@ public interface ExtScheduleMapper {
 
     long countTaskByProjectIdAndCreateTimeRange(@Param("projectId")String projectId, @Param("startTime") long startTime, @Param("endTime") long endTime);
 
-    List<TaskInfoResult> findRunningTaskInfoByProjectID(String workspaceID);
+    List<TaskInfoResult> findRunningTaskInfoByProjectID(@Param("projectId") String workspaceID, @Param("types") List<String> typeFilter);
 
     void insert(@Param("apiSwaggerUrlDTO") ApiSwaggerUrlDTO apiSwaggerUrlDTO);
 
     ApiSwaggerUrlDTO  select(String id);
 
+    int updateNameByResourceID(@Param("resourceId") String resourceId, @Param("name") String name);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -57,6 +57,8 @@
 @Service
 @Transactional(rollbackFor = Exception.class)
 public class TestPlanService {
+    @Resource
+    ExtScheduleMapper extScheduleMapper;
     @Resource
     TestPlanMapper testPlanMapper;
     @Resource
@@ -179,6 +181,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
                 testPlan.setActualEndTime(System.currentTimeMillis());
             }
         }
+        extScheduleMapper.updateNameByResourceID(testPlan.getId(), testPlan.getName());//   同步更新该测试的定时任务的name
 
         List<String> userIds = new ArrayList<>();
         userIds.add(testPlan.getPrincipal());

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -48,6 +48,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {
         filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
+        filterChainDefinitionMap.put("/language", "apikey, authc");// 跳转到 /language 不用校验 csrf
         filterChainDefinitionMap.put("/document", "apikey, authc"); // 跳转到 /document 不用校验 csrf
     }
 

File: backend/src/main/java/io/metersphere/track/controller/TrackController.java
Patch:
@@ -87,7 +87,7 @@ public List<ChartsData> getCaseMaintenanceBar(@PathVariable String projectId) {
     }
 
     @GetMapping("/bug/count/{projectId}")
-    public BugStatustics getBugStatustics(@PathVariable String projectId) {
-        return trackService.getBugStatustics(projectId);
+    public BugStatustics getBugStatistics(@PathVariable String projectId) {
+        return trackService.getBugStatistics(projectId);
     }
 }

File: backend/src/main/java/io/metersphere/track/response/TestPlanBugCount.java
Patch:
@@ -8,7 +8,7 @@
 public class TestPlanBugCount {
     private int index;
     private String planName;
-    private long creatTime;
+    private long createTime;
     private String status;
     private int caseSize;
     private int bugSize;

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -48,6 +48,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {
         filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
+        filterChainDefinitionMap.put("/language", "apikey, authc");// 跳转到 /language 不用校验 csrf
         filterChainDefinitionMap.put("/document", "apikey, authc"); // 跳转到 /document 不用校验 csrf
     }
 

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -42,6 +42,8 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         //api-对外文档页面提供的查询接口
         filterChainDefinitionMap.put("/api/document/**", "anon");
 //        filterChainDefinitionMap.put("/document/**", "anon");
+        filterChainDefinitionMap.put("/system/theme", "anon");
+
     }
 
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -198,7 +198,7 @@ private void checkNameExist(SaveApiDefinitionRequest request) {
                     .andProtocolEqualTo(request.getProtocol()).andPathEqualTo(request.getPath())
                     .andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(request.getId());
             Project project = projectMapper.selectByPrimaryKey(request.getProjectId());
-            if (apiDefinitionMapper.countByExample(example) > 0 && (project.getRepeatable() == null || !project.getRepeatable())) {
+            if (apiDefinitionMapper.countByExample(example) > 0 && (project == null || project.getRepeatable() == null || !project.getRepeatable())) {
                 MSException.throwException(Translator.get("api_definition_url_not_repeating"));
             }
         } else {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -66,7 +66,7 @@ private RegexExtractor regexExtractor(MsExtractRegex extractRegex, StringJoiner
 
         RegexExtractor extractor = new RegexExtractor();
         extractor.setEnabled(this.isEnable());
-        extractor.setName(extractRegex.getVariable() + " RegexExtractor");
+        extractor.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : " RegexExtractor");
         extractor.setProperty(TestElement.TEST_CLASS, RegexExtractor.class.getName());
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("RegexExtractorGui"));
         extractor.setRefName(extractRegex.getVariable());
@@ -84,7 +84,7 @@ private RegexExtractor regexExtractor(MsExtractRegex extractRegex, StringJoiner
     private XPath2Extractor xPath2Extractor(MsExtractXPath extractXPath, StringJoiner extract) {
         XPath2Extractor extractor = new XPath2Extractor();
         extractor.setEnabled(this.isEnable());
-        extractor.setName(extractXPath.getVariable() + " XPath2Extractor");
+        extractor.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : " XPath2Extractor");
         extractor.setProperty(TestElement.TEST_CLASS, XPath2Extractor.class.getName());
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("XPath2ExtractorGui"));
         extractor.setRefName(extractXPath.getVariable());
@@ -99,7 +99,7 @@ private XPath2Extractor xPath2Extractor(MsExtractXPath extractXPath, StringJoine
     private JSONPostProcessor jsonPostProcessor(MsExtractJSONPath extractJSONPath, StringJoiner extract) {
         JSONPostProcessor extractor = new JSONPostProcessor();
         extractor.setEnabled(this.isEnable());
-        extractor.setName(extractJSONPath.getVariable() + " JSONExtractor");
+        extractor.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : " JSONExtractor");
         extractor.setProperty(TestElement.TEST_CLASS, JSONPostProcessor.class.getName());
         extractor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("JSONPostProcessorGui"));
         extractor.setRefNames(extractJSONPath.getVariable());

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.performance.service.PerformanceTestService;
 import io.metersphere.service.CheckPermissionService;
@@ -104,7 +105,7 @@ public void updateSchedule(@RequestBody Schedule request) {
     }
 
     @PostMapping(value = "/schedule/create")
-    public void createSchedule(@RequestBody Schedule request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) {
         apiTestService.createSchedule(request);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -16,6 +16,7 @@
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.track.request.testcase.ApiCaseRelevanceRequest;
 import io.metersphere.track.request.testplan.FileOperationRequest;
 import org.apache.shiro.authz.annotation.Logical;
@@ -149,7 +150,7 @@ public void updateSchedule(@RequestBody Schedule request) {
     }
 
     @PostMapping(value = "/schedule/create")
-    public void createSchedule(@RequestBody Schedule request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) {
         apiAutomationService.createSchedule(request);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.service.CheckPermissionService;
 import io.metersphere.service.ScheduleService;
 import io.metersphere.track.request.testcase.ApiCaseRelevanceRequest;
@@ -156,7 +157,7 @@ public ApiExportResult export(@RequestBody ApiBatchRequest request, @PathVariabl
 
     //定时任务创建
     @PostMapping(value = "/schedule/create")
-    public void createSchedule(@RequestBody Schedule request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) {
         apiDefinitionService.createSchedule(request);
     }
     @PostMapping(value = "/schedule/update")

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -21,6 +21,7 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.ApiTestJob;
@@ -328,12 +329,12 @@ public void updateSchedule(Schedule request) {
         addOrUpdateApiTestCronJob(request);
     }
 
-    public void createSchedule(Schedule request) {
+    public void createSchedule(ScheduleRequest request) {
         scheduleService.addSchedule(buildApiTestSchedule(request));
         addOrUpdateApiTestCronJob(request);
     }
 
-    private Schedule buildApiTestSchedule(Schedule request) {
+    private Schedule buildApiTestSchedule(ScheduleRequest request) {
         Schedule schedule = scheduleService.buildApiTestSchedule(request);
         schedule.setJob(ApiTestJob.class.getName());
         schedule.setGroup(ScheduleGroup.API_TEST.name());

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -31,6 +31,7 @@
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.ApiScenarioTestJob;
 import io.metersphere.job.sechedule.TestPlanTestJob;
@@ -717,7 +718,7 @@ public List<ApiScenarioWithBLOBs> selectByIdsWithBLOBs(List<String> ids) {
         return apiScenarioMapper.selectByExampleWithBLOBs(example);
     }
 
-    public void createSchedule(Schedule request) {
+    public void createSchedule(ScheduleRequest request) {
         Schedule schedule = scheduleService.buildApiTestSchedule(request);
         schedule.setJob(ApiScenarioTestJob.class.getName());
         schedule.setGroup(ScheduleGroup.API_SCENARIO_TEST.name());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -28,6 +28,7 @@
 import io.metersphere.commons.constants.*;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.SwaggerUrlImportJob;
 import io.metersphere.service.FileService;
@@ -702,7 +703,7 @@ public void calculateResult(List<ApiDefinitionResult> resList) {
     }
 
     /*swagger定时导入*/
-    public void createSchedule(Schedule request) {
+    public void createSchedule(ScheduleRequest request) {
         /*保存swaggerUrl*/
         SwaggerUrlProject swaggerUrlProject = new SwaggerUrlProject();
         swaggerUrlProject.setId(UUID.randomUUID().toString());

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceTestController.java
Patch:
@@ -10,6 +10,7 @@
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.dto.LoadTestDTO;
 import io.metersphere.dto.ScheduleDao;
@@ -175,7 +176,7 @@ public void copy(@RequestBody SaveTestPlanRequest request) {
     }
 
     @PostMapping(value = "/schedule/create")
-    public void createSchedule(@RequestBody Schedule request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) {
         performanceTestService.createSchedule(request);
     }
 

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -14,6 +14,7 @@
 import io.metersphere.config.KafkaProperties;
 import io.metersphere.controller.request.OrderRequest;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.dto.LoadTestDTO;
 import io.metersphere.dto.ScheduleDao;
@@ -465,12 +466,12 @@ public void updateSchedule(Schedule request) {
         addOrUpdatePerformanceTestCronJob(request);
     }
 
-    public void createSchedule(Schedule request) {
+    public void createSchedule(ScheduleRequest request) {
         scheduleService.addSchedule(buildPerformanceTestSchedule(request));
         addOrUpdatePerformanceTestCronJob(request);
     }
 
-    private Schedule buildPerformanceTestSchedule(Schedule request) {
+    private Schedule buildPerformanceTestSchedule(ScheduleRequest request) {
         Schedule schedule = scheduleService.buildApiTestSchedule(request);
         schedule.setJob(PerformanceTestJob.class.getName());
         schedule.setGroup(ScheduleGroup.PERFORMANCE_TEST.name());

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -46,6 +46,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
     public static void ignoreCsrfFilter(Map<String, String> filterChainDefinitionMap) {
         filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
+        filterChainDefinitionMap.put("/document", "apikey, authc"); // 跳转到 /document 不用校验 csrf
     }
 
     public static Cookie getSessionIdCookie(){

File: backend/src/main/java/io/metersphere/controller/ScheduleController.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.api.service.ApiAutomationService;
 import io.metersphere.base.domain.Schedule;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.service.ScheduleService;
 import org.springframework.web.bind.annotation.*;
@@ -38,7 +39,7 @@ public void updateSchedule(@RequestBody Schedule request) {
     }
 
     @PostMapping(value = "/create")
-    public void createSchedule(@RequestBody Schedule request) {
+    public void createSchedule(@RequestBody ScheduleRequest request) {
         scheduleService.createSchedule(request);
     }
 

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -17,6 +17,7 @@
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.OrderRequest;
 import io.metersphere.controller.request.QueryScheduleRequest;
+import io.metersphere.controller.request.ScheduleRequest;
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.job.sechedule.*;
 import org.apache.commons.lang3.StringUtils;
@@ -143,7 +144,7 @@ public void startEnableSchedules() {
         });
     }
 
-    public Schedule buildApiTestSchedule(Schedule request) {
+    public Schedule buildApiTestSchedule(ScheduleRequest request) {
         Schedule schedule = new Schedule();
         schedule.setResourceId(request.getResourceId());
         schedule.setEnable(true);
@@ -218,7 +219,7 @@ public List<TaskInfoResult> findRunningTaskInfoByProjectID(String projectID) {
         return  runningTaskInfoList;
     }
 
-    public void createSchedule(Schedule request) {
+    public void createSchedule(ScheduleRequest request) {
         Schedule schedule = this.buildApiTestSchedule(request);
         schedule.setJob(ApiScenarioTestJob.class.getName());
 

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -148,10 +148,10 @@ public ApiDefinitionImport testCaseImport(@RequestPart(value = "file", required
         return apiDefinitionService.apiTestImport(file, request);
     }
 
-    @PostMapping(value = "/export")
+    @PostMapping(value = "/export/{type}")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public ApiExportResult export(@RequestBody ApiBatchRequest request) {
-        return apiDefinitionService.export(request);
+    public ApiExportResult export(@RequestBody ApiBatchRequest request, @PathVariable String type) {
+        return apiDefinitionService.export(request, type);
     }
 
     //定时任务创建

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/Swagger2Parser.java
Patch:
@@ -30,14 +30,14 @@ public class Swagger2Parser extends SwaggerAbstractParser {
     public ApiDefinitionImport parse(InputStream source, ApiTestImportRequest request) {
         Swagger swagger;
         String sourceStr = "";
-        if (StringUtils.isNotBlank(request.getSwaggerUrl())) {
+        if (StringUtils.isNotBlank(request.getSwaggerUrl())) {  //  使用 url 导入 swagger
             swagger = new SwaggerParser().read(request.getSwaggerUrl());
         } else {
-            sourceStr = getApiTestStr(source);
+            sourceStr = getApiTestStr(source);  //  导入的二进制文件转换为 String
             swagger = new SwaggerParser().readWithInfo(sourceStr).getSwagger();
         }
 
-        if (swagger == null || swagger.getSwagger() == null) {
+        if (swagger == null || swagger.getSwagger() == null) {  //  不是 2.0 版本，则尝试转换 3.0
             Swagger3Parser swagger3Parser = new Swagger3Parser();
             return swagger3Parser.parse(sourceStr, request);
         }

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -50,7 +50,7 @@ public class TestCaseExcelDataCn extends TestCaseExcelData {
 
     @ColumnWidth(50)
     @ExcelProperty("前置条件")
-    @Length(min = 0, max = 1000)
+    @Length(min = 0, max = 500)
     private String prerequisite;
 
     @ColumnWidth(50)

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -489,6 +489,7 @@ private void convertMsAssertions(MsAssertions assertions, Object key) {
             assertionJsonPath.setDescription(jsonPathAssertion.getName());
             assertionJsonPath.setExpression(jsonPathAssertion.getJsonPath());
             assertionJsonPath.setExpect(jsonPathAssertion.getExpectedValue());
+            assertionJsonPath.setOption(jsonPathAssertion.getPropertyAsString("ASS_OPTION"));
             assertions.setName(jsonPathAssertion.getName());
             assertions.getJsonPath().add(assertionJsonPath);
         } else if (key instanceof XPath2Assertion) {

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ScenarioImportParserFactory.java
Patch:
@@ -12,6 +12,8 @@ public static ApiImportParser getImportParser(String platform) {
             return new PostmanScenarioParser();
         } else if (StringUtils.equals(ApiImportPlatform.Jmeter.name(), platform)) {
             return new MsJmeterParser();
+        } else if (StringUtils.equals(ApiImportPlatform.Har.name(), platform)) {
+            return new HarScenarioParser();
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/parse/ApiDefinitionImportParserFactory.java
Patch:
@@ -12,6 +12,8 @@ public static ApiImportParser getApiImportParser(String platform) {
             return new PostmanDefinitionParser();
         } else if (StringUtils.equals(ApiImportPlatform.Swagger2.name(), platform)) {
             return new Swagger2Parser();
+        }else if (StringUtils.equals(ApiImportPlatform.Har.name(), platform)) {
+            return new HarParser();
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionJsonPath.java
Patch:
@@ -10,6 +10,7 @@ public class MsAssertionJsonPath extends MsAssertionType {
     private String expect;
     private String expression;
     private String description;
+    private String option = "REGEX";
 
     public MsAssertionJsonPath() {
         setType(MsAssertionType.JSON_PATH);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -40,6 +40,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             processor.setName(this.getName() + "<->" + name);
         }
+        processor.setProperty("MS-ID", this.getId());
+
         processor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         processor.setProperty("cacheKey", "true");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -82,6 +82,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         }
         sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
+        sampler.setProperty("MS-ID", this.getId());
 
         sampler.addTestElement(configCenter(this.getConfigCenter()));
         sampler.addTestElement(registryCenter(this.getRegistryCenter()));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -85,8 +85,8 @@ public class MsHTTPSamplerProxy extends MsTestElement {
     @JSONField(ordinal = 34)
     private List<KeyValue> arguments;
 
-//    @JSONField(ordinal = 35)
-//    private Object requestResult;
+    @JSONField(ordinal = 35)
+    private Object requestResult;
 
     @JSONField(ordinal = 36)
     private MsAuthManager authManager;
@@ -106,6 +106,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         sampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
+        sampler.setProperty("MS-ID", this.getId());
         sampler.setMethod(this.getMethod());
         sampler.setContentEncoding("UTF-8");
         sampler.setConnectTimeout(this.getConnectTimeout() == null ? "6000" : this.getConnectTimeout());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -119,6 +119,8 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         }
         sampler.setProperty(TestElement.TEST_CLASS, JDBCSampler.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
+        sampler.setProperty("MS-ID", this.getId());
+
         // request.getDataSource() 是ID，需要转换为Name
         sampler.setProperty("dataSource", this.dataSource.getName());
         sampler.setProperty("query", this.getQuery());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -117,6 +117,7 @@ private TCPSampler tcpSampler(ParameterConfig config) {
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             tcpSampler.setName(this.getName() + "<->" + name);
         }
+        tcpSampler.setProperty("MS-ID", this.getId());
 
         tcpSampler.setProperty(TestElement.TEST_CLASS, TCPSampler.class.getName());
         tcpSampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TCPSamplerGui"));

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -239,7 +239,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                 LogUtil.error(e.getMessage(), e);
             }
         }
-            sendTask(report, reportUrl, testResult);
+        sendTask(report, reportUrl, testResult);
     }
 
     private static void sendTask(ApiTestReport report, String reportUrl, TestResult testResult) {
@@ -303,6 +303,7 @@ private static void sendTask(ApiTestReport report, String reportUrl, TestResult
 
     private RequestResult getRequestResult(SampleResult result) {
         RequestResult requestResult = new RequestResult();
+        requestResult.setId(result.getSamplerId());
         requestResult.setName(result.getSampleLabel());
         requestResult.setUrl(result.getUrlAsString());
         requestResult.setMethod(getMethod(result));

File: backend/src/main/java/io/metersphere/api/jmeter/RequestResult.java
Patch:
@@ -7,6 +7,8 @@
 
 @Data
 public class RequestResult {
+    // 请求ID
+    private String id;
 
     private String name;
 

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinition.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiDefinition implements Serializable {
@@ -38,5 +37,7 @@ public class ApiDefinition implements Serializable {
 
     private String tags;
 
+    private String originalState;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -43,5 +43,7 @@ public class ApiScenario implements Serializable {
 
     private Integer num;
 
+    private String originalState;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/commons/constants/ApiImportPlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiImportPlatform {
-    Metersphere, Postman, Swagger2, Plugin, Jmeter
+    Metersphere, Postman, Swagger2, Plugin, Jmeter, Har
 }

File: backend/src/main/java/io/metersphere/commons/utils/SessionUtils.java
Patch:
@@ -62,14 +62,14 @@ public static void putUser(SessionUser sessionUser) {
     }
 
     public static String getCurrentWorkspaceId() {
-        return Optional.ofNullable(getUser()).orElse(new SessionUser()).getLastWorkspaceId();
+        return getUser().getLastWorkspaceId();
     }
 
     public static String getCurrentOrganizationId() {
-        return Optional.ofNullable(getUser()).orElse(new SessionUser()).getLastOrganizationId();
+        return getUser().getLastOrganizationId();
     }
 
     public static String getCurrentProjectId() {
-        return Optional.ofNullable(getUser()).orElse(new SessionUser()).getLastProjectId();
+        return getUser().getLastProjectId();
     }
 }

File: backend/src/main/java/io/metersphere/xmind/XmindCaseParser.java
Patch:
@@ -136,8 +136,8 @@ private boolean validate(TestCaseWithBLOBs data) {
         data.setNodePath(nodePath);
 
 
-        if (data.getName().length() > 50) {
-            process.add(Translator.get("test_case") + Translator.get("test_track.length_less_than") + "50", nodePath + data.getName());
+        if (data.getName().length() > 200) {
+            process.add(Translator.get("test_case") + Translator.get("test_track.length_less_than") + "200", nodePath + data.getName());
         }
 
         if (!StringUtils.isEmpty(nodePath)) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -52,6 +52,9 @@ public class MsDubboSampler extends MsTestElement {
     @JSONField(ordinal = 59)
     private List<KeyValue> attachmentArgs;
 
+    @JSONField(ordinal = 60)
+    private String useEnvironment;
+
 //    @JSONField(ordinal = 60)
 //    private Object requestResult;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -53,6 +53,9 @@ public class MsJDBCSampler extends MsTestElement {
     @JSONField(ordinal = 29)
     private String protocol = "SQL";
 
+    @JSONField(ordinal = 30)
+    private String useEnvironment;
+
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         if (this.getReferenced() != null && MsTestElementConstants.REF.name().equals(this.getReferenced())) {

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -253,7 +253,7 @@ private static void sendTask(ApiTestReport report, String reportUrl, TestResult
         String url2 = reportUrl;
         if (StringUtils.isEmpty(url)) {
             url = baseSystemConfigDTO.getUrl() + "/#/api/report/view/" + report.getId();
-            url2 = baseSystemConfigDTO.getUrl() + "/#/api/automation/report";
+            url2 = baseSystemConfigDTO.getUrl() + "/#/api/automation/report/view/" + report.getId();
         }
         String successContext = "";
         String failedContext = "";

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinition.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiDefinition implements Serializable {
@@ -38,5 +37,7 @@ public class ApiDefinition implements Serializable {
 
     private String tags;
 
+    private String originalState;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -43,5 +43,7 @@ public class ApiScenario implements Serializable {
 
     private Integer num;
 
+    private String originalState;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -92,7 +92,7 @@ public class TestCaseService {
     @Resource
     TestCaseFileMapper testCaseFileMapper;
 
-    private TestCaseWithBLOBs addTestCase(TestCaseWithBLOBs testCase) {
+    public TestCaseWithBLOBs addTestCase(TestCaseWithBLOBs testCase) {
         testCase.setName(testCase.getName());
         checkTestCaseExist(testCase);
         testCase.setId(UUID.randomUUID().toString());
@@ -102,6 +102,7 @@ private TestCaseWithBLOBs addTestCase(TestCaseWithBLOBs testCase) {
         testCase.setReviewStatus(TestCaseReviewStatus.Prepare.name());
         testCase.setDemandId(testCase.getDemandId());
         testCase.setDemandName(testCase.getDemandName());
+
         testCaseMapper.insert(testCase);
         return testCase;
     }
@@ -703,4 +704,5 @@ public List<TestCaseDTO> listTestCaseIds(QueryTestCaseRequest request) {
         request.setSelectFields(selectFields);
         return extTestCaseMapper.list(request);
     }
+
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -40,6 +40,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             processor.setName(this.getName() + "<->" + name);
         }
+        processor.setProperty("MS-ID", this.getId());
+
         processor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         processor.setProperty("cacheKey", "true");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -82,6 +82,7 @@ private DubboSample dubboSample(ParameterConfig config) {
         }
         sampler.setProperty(TestElement.TEST_CLASS, DubboSample.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("DubboSampleGui"));
+        sampler.setProperty("MS-ID", this.getId());
 
         sampler.addTestElement(configCenter(this.getConfigCenter()));
         sampler.addTestElement(registryCenter(this.getRegistryCenter()));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -106,6 +106,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         sampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HttpTestSampleGui"));
+        sampler.setProperty("MS-ID", this.getId());
         sampler.setMethod(this.getMethod());
         sampler.setContentEncoding("UTF-8");
         sampler.setConnectTimeout(this.getConnectTimeout() == null ? "6000" : this.getConnectTimeout());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -119,6 +119,8 @@ private JDBCSampler jdbcSampler(ParameterConfig config) {
         }
         sampler.setProperty(TestElement.TEST_CLASS, JDBCSampler.class.getName());
         sampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
+        sampler.setProperty("MS-ID", this.getId());
+
         // request.getDataSource() 是ID，需要转换为Name
         sampler.setProperty("dataSource", this.dataSource.getName());
         sampler.setProperty("query", this.getQuery());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -117,6 +117,7 @@ private TCPSampler tcpSampler(ParameterConfig config) {
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             tcpSampler.setName(this.getName() + "<->" + name);
         }
+        tcpSampler.setProperty("MS-ID", this.getId());
 
         tcpSampler.setProperty(TestElement.TEST_CLASS, TCPSampler.class.getName());
         tcpSampler.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TCPSamplerGui"));

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -239,7 +239,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                 LogUtil.error(e.getMessage(), e);
             }
         }
-            sendTask(report, reportUrl, testResult);
+        sendTask(report, reportUrl, testResult);
     }
 
     private static void sendTask(ApiTestReport report, String reportUrl, TestResult testResult) {
@@ -303,6 +303,7 @@ private static void sendTask(ApiTestReport report, String reportUrl, TestResult
 
     private RequestResult getRequestResult(SampleResult result) {
         RequestResult requestResult = new RequestResult();
+        requestResult.setId(result.getSamplerId());
         requestResult.setName(result.getSampleLabel());
         requestResult.setUrl(result.getUrlAsString());
         requestResult.setMethod(getMethod(result));

File: backend/src/main/java/io/metersphere/api/jmeter/RequestResult.java
Patch:
@@ -7,6 +7,8 @@
 
 @Data
 public class RequestResult {
+    // 请求ID
+    private String id;
 
     private String name;
 

File: backend/src/main/java/io/metersphere/security/CsrfFilter.java
Patch:
@@ -59,6 +59,9 @@ private void validateReferer(HttpServletRequest request) {
     }
 
     private void validateToken(String csrfToken) {
+        if (StringUtils.isBlank(csrfToken)) {
+            throw new RuntimeException("csrf token is empty");
+        }
         csrfToken = CodingUtil.aesDecrypt(csrfToken, SessionUser.secret, SessionUser.iv);
 
         String[] signatureArray = StringUtils.split(StringUtils.trimToNull(csrfToken), "|");

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -49,6 +49,7 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage
         Map<String, String> filterChainDefinitionMap = shiroFilterFactoryBean.getFilterChainDefinitionMap();
         ShiroUtils.loadBaseFilterChain(filterChainDefinitionMap);
 
+        filterChainDefinitionMap.put("/", "apikey, authc"); // 跳转到 / 不用校验 csrf
         filterChainDefinitionMap.put("/**", "apikey, csrf, authc");
         return shiroFilterFactoryBean;
     }

File: backend/src/main/java/io/metersphere/security/CsrfFilter.java
Patch:
@@ -26,6 +26,7 @@ protected boolean onPreHandle(ServletRequest request, ServletResponse response,
 
         if (!SecurityUtils.getSubject().isAuthenticated()) {
             ((HttpServletResponse) response).setHeader("Authentication-Status", "invalid");
+            return true;
         }
         // api 过来的请求
         if (ApiKeyHandler.isApiKeyCall(WebUtils.toHttp(request))) {

File: backend/src/main/java/io/metersphere/performance/request/SaveTestPlanRequest.java
Patch:
@@ -12,4 +12,5 @@
 public class SaveTestPlanRequest extends TestPlanRequest {
     private List<FileMetadata> updatedFileList;
     private Map<String, Integer> fileSorts;
+    private List<String> conversionFileIdList;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -85,6 +85,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                     JSONObject element = JSON.parseObject(scenario.getScenarioDefinition());
                     hashTree = mapper.readValue(element.getString("hashTree"), new TypeReference<LinkedList<MsTestElement>>() {
                     });
+                    OldVersionUtil.transferHashTree(hashTree);
                     // 场景变量
                     if (StringUtils.isNotEmpty(element.getString("variables"))) {
                         LinkedList<ScenarioVariable> variables = mapper.readValue(element.getString("variables"),

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -161,6 +161,7 @@ public void getRefElement(MsTestElement element) {
                 element = mapper.readValue(apiDefinition.getRequest(), new TypeReference<MsTestElement>() {
                 });
                 hashTree.add(element);
+                OldVersionUtil.transferHashTree(hashTree);
             }
         } catch (Exception ex) {
             ex.printStackTrace();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -96,7 +96,7 @@ private JSONPathAssertion jsonPathAssertion(MsAssertionJsonPath assertionJsonPat
         assertion.setJsonValidationBool(true);
         assertion.setExpectNull(false);
         assertion.setInvert(false);
-        assertion.setIsRegex(false);
+        assertion.setIsRegex(true);
         return assertion;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -178,7 +178,9 @@ public Arguments addArguments(ParameterConfig config) {
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
                     arguments.addArgument(keyValue.getName(), keyValue.getValue(), "=")
             );
-            return arguments;
+            if (arguments.getArguments().size() > 0) {
+                return arguments;
+            }
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -96,7 +96,7 @@ private JSONPathAssertion jsonPathAssertion(MsAssertionJsonPath assertionJsonPat
         assertion.setJsonValidationBool(true);
         assertion.setExpectNull(false);
         assertion.setInvert(false);
-        assertion.setIsRegex(true);
+        assertion.setIsRegex(false);
         return assertion;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/configurations/MsHeaderManager.java
Patch:
@@ -30,7 +30,7 @@ public class MsHeaderManager extends MsTestElement {
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         HeaderManager headerManager = new HeaderManager();
         headerManager.setEnabled(this.isEnable());
-        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "HeaderManager");
+        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "HeaderManager" : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -306,7 +306,7 @@ private Arguments httpArguments(List<KeyValue> list) {
     public void setHeader(HashTree tree, List<KeyValue> headers) {
         HeaderManager headerManager = new HeaderManager();
         headerManager.setEnabled(true);
-        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "HeaderManager");
+        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() + "HeaderManager" : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -41,7 +41,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
         //api-对外文档页面提供的查询接口
         filterChainDefinitionMap.put("/api/document/**", "anon");
-        filterChainDefinitionMap.put("/document/**", "anon");
+//        filterChainDefinitionMap.put("/document/**", "anon");
     }
 
     public static Cookie getSessionIdCookie(){

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -41,6 +41,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
 
         //api-对外文档页面提供的查询接口
         filterChainDefinitionMap.put("/api/document/**", "anon");
+        filterChainDefinitionMap.put("/document/**", "anon");
     }
 
     public static Cookie getSessionIdCookie(){

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -15,6 +15,7 @@
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
 import io.metersphere.commons.utils.CommonBeanFactory;
+import io.metersphere.commons.utils.ScriptEngineUtils;
 import io.metersphere.commons.utils.SessionUtils;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -132,7 +133,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         // 场景变量和环境变量
         Arguments arguments = arguments(config);
         if (arguments != null) {
-            tree.add(arguments);
+            tree.add(config.valueSupposeMock(arguments));
         }
         this.addCsvDataSet(tree, variables);
         this.addCounter(tree, variables);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -122,7 +122,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         // 添加环境中的公共变量
         Arguments arguments = this.addArguments(config);
         if (arguments != null) {
-            tree.add(arguments);
+            tree.add(config.valueSupposeMock(arguments));
         }
         try {
             if (config.isEffective(this.getProjectId())) {

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -19,6 +19,8 @@ public class TestCaseExcelData {
     @ExcelIgnore
     private String priority;
     @ExcelIgnore
+    private String tags;
+    @ExcelIgnore
     private String method;
     @ExcelIgnore
     private String prerequisite;

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -483,6 +483,7 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
             data.setType(t.getType());
             data.setMethod(t.getMethod());
             data.setPrerequisite(t.getPrerequisite());
+            data.setTags(t.getTags());
             if (t.getMethod().equals("manual")) {
                 String steps = t.getSteps();
                 String setp = "";

File: backend/src/main/java/io/metersphere/api/dto/definition/request/auth/MsAuthManager.java
Patch:
@@ -84,8 +84,7 @@ public void setAuth(HashTree tree, MsAuthManager msAuthManager, HTTPSamplerProxy
             authManager.setProperty(TestElement.TEST_CLASS, AuthManager.class.getName());
             authManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("AuthPanel"));
             Authorization auth = new Authorization();
-            auth.setURL(samplerProxy.getUrl().toString());
-            auth.setDomain(samplerProxy.getDomain());
+            auth.setURL(samplerProxy.getProtocol() + "://" + samplerProxy.getDomain());
             auth.setUser(msAuthManager.getUsername());
             auth.setPass(msAuthManager.getPassword());
             auth.setMechanism(AuthManager.Mechanism.DIGEST);

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -472,13 +472,13 @@ private void convertMsAssertions(MsAssertions assertions, Object key) {
             if (assertion.getTestStrings() != null && !assertion.getTestStrings().isEmpty()) {
                 assertionRegex.setExpression(assertion.getTestStrings().get(0).getStringValue());
             }
-            if (assertion.isTestFieldRequestData()) {
+            if (assertion.isTestFieldResponseData()) {
                 assertionRegex.setSubject("Response Data");
             }
             if (assertion.isTestFieldResponseCode()) {
                 assertionRegex.setSubject("Response Code");
             }
-            if (assertion.isTestFieldRequestHeaders()) {
+            if (assertion.isTestFieldResponseHeaders()) {
                 assertionRegex.setSubject("Response Headers");
             }
             assertions.setName(assertion.getName());

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -280,7 +280,9 @@ private void preInitPool(String projectId, HashTree hashTree) {
         preCreate(hashTree);
         // 更新数据源
         ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);
-        dataPools.getEnvConfig().setDatabaseConfigs(new ArrayList<>(dataPools.getDataSources().values()));
+        if (dataPools.getDataSources() != null) {
+            dataPools.getEnvConfig().setDatabaseConfigs(new ArrayList<>(dataPools.getDataSources().values()));
+        }
         if (dataPools.getIsCreate()) {
             dataPools.getTestEnvironmentWithBLOBs().setConfig(JSON.toJSONString(dataPools.getEnvConfig()));
             String id = environmentService.add(dataPools.getTestEnvironmentWithBLOBs());

File: backend/src/main/java/io/metersphere/base/domain/TestCaseReview.java
Patch:
@@ -21,6 +21,8 @@ public class TestCaseReview implements Serializable {
 
     private String projectId;
 
+    private String tags;
+
     private String description;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -8,7 +8,6 @@
 import io.metersphere.api.dto.definition.request.dns.MsDNSCacheManager;
 import io.metersphere.api.dto.scenario.Body;
 import io.metersphere.api.dto.scenario.KeyValue;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import io.metersphere.commons.constants.MsTestElementConstants;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.commons.utils.ScriptEngineUtils;
@@ -232,7 +231,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             }
         }
         if (this.authManager != null) {
-            this.authManager.toHashTree(tree, hashTree, config);
+            this.authManager.setAuth(tree, this.authManager, sampler);
         }
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -101,7 +101,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         HTTPSamplerProxy sampler = new HTTPSamplerProxy();
         sampler.setEnabled(this.isEnable());
         sampler.setName(this.getName());
-        String name = this.getParentName(this.getParent(), config);
+        String name = this.getParentName(this.getParent());
         if (StringUtils.isNotEmpty(name) && !config.isOperating()) {
             sampler.setName(this.getName() + "<->" + name);
         }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -436,7 +436,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
 
         Map<String, EnvironmentConfig> envConfig = new HashMap<>();
         Map<String, String> map = request.getEnvironmentMap();
-        if (map != null) {
+        if (map != null && map.size() > 0) {
             map.keySet().forEach(id -> {
                 ApiTestEnvironmentWithBLOBs environment = environmentService.get(map.get(id));
                 EnvironmentConfig env = JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -189,7 +189,7 @@ private Arguments arguments(ParameterConfig config) {
                 }
             });
         }
-        if (config != null && config.getConfig() != null && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
+        if (config != null && config.getConfig() != null && config.getConfig().get(this.getProjectId()) != null && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables())) {
             config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->
                     arguments.addArgument(keyValue.getName(), keyValue.getValue(), "=")

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -114,7 +114,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         sampler.setFollowRedirects(this.isFollowRedirects());
         sampler.setUseKeepAlive(true);
         sampler.setDoMultipart(this.isDoMultipartPost());
-        if (config != null && config.getConfig() != null) {
+        if (config != null && config.getConfig() != null && !config.getConfig().isEmpty()) {
             config.setConfig(config.getConfig());
         } else {
             // 单独接口执行

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -49,7 +49,6 @@
 import java.io.ByteArrayOutputStream;
 import java.util.LinkedList;
 import java.util.List;
-import java.util.Map;
 import java.util.stream.Collectors;
 
 @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "type")
@@ -167,7 +166,7 @@ public void getRefElement(MsTestElement element) {
     }
 
     public Arguments addArguments(ParameterConfig config) {
-        if (config != null && config.getConfig() != null && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
+        if (config != null && config.getConfig() != null && config.getConfig().get(this.getProjectId()) != null && config.getConfig().get(this.getProjectId()).getCommonConfig() != null
                 && CollectionUtils.isNotEmpty(config.getConfig().get(this.getProjectId()).getCommonConfig().getVariables())) {
             Arguments arguments = new Arguments();
             arguments.setEnabled(true);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -457,6 +457,8 @@ public void testCaseExport(HttpServletResponse response, TestCaseBatchRequest re
     }
 
     private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest request) {
+        ServiceUtils.getSelectAllIds(request, request.getCondition(),
+                (query) -> extTestCaseMapper.selectIds(query));
         List<OrderRequest> orderList = ServiceUtils.getDefaultOrder(request.getOrders());
         OrderRequest order = new OrderRequest();
         order.setName("sort");

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -169,7 +169,7 @@ else if (res.getStatus().equals(TestPlanStatus.Completed.name())) {
                     testPlan.setActualEndTime(null);
                 }   //  已完成->进行中，结束时间置空
             } else if (!res.getStatus().equals(TestPlanStatus.Prepare.name()) &&
-                    testPlan.getStatus().equals(TestPlanStatus.Prepare.name())) {
+                    TestPlanStatus.Prepare.name().equals(testPlan.getStatus())) {
                 testPlan.setActualStartTime(null);
                 testPlan.setActualEndTime(null);
             }   //  非未开始->未开始，时间都置空
@@ -183,7 +183,7 @@ else if (TestPlanStatus.Completed.name().equals(testPlan.getStatus()) &&
         List<String> userIds = new ArrayList<>();
         userIds.add(testPlan.getPrincipal());
         AddTestPlanRequest testPlans = new AddTestPlanRequest();
-        int i = testPlanMapper.updateByPrimaryKey(testPlan); //  更新
+        int i = testPlanMapper.updateByPrimaryKeySelective(testPlan); //  更新
         if (!StringUtils.isBlank(testPlan.getStatus())) {
             BeanUtils.copyBean(testPlans, getTestPlan(testPlan.getId()));
             String context = getTestPlanContext(testPlans, NoticeConstants.Event.UPDATE);

File: backend/src/main/java/io/metersphere/commons/utils/ServiceUtils.java
Patch:
@@ -32,7 +32,7 @@ public static List<OrderRequest> getDefaultOrder(List<OrderRequest> orders) {
      * @return
      */
     public static<T> void getSelectAllIds( T batchRequest, BaseQueryRequest queryRequest, Function<BaseQueryRequest, List<String>> func) {
-        if (queryRequest.isSelectAll()) {
+        if (queryRequest != null && queryRequest.isSelectAll()) {
             List<String> ids = func.apply(queryRequest);
             if (!ids.isEmpty()) {
                 ids = ids.stream()

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -41,7 +41,6 @@
 import org.apache.jmeter.config.CSVDataSet;
 import org.apache.jmeter.config.RandomVariableConfig;
 import org.apache.jmeter.modifiers.CounterConfig;
-import org.apache.jmeter.protocol.http.control.AuthManager;
 import org.apache.jmeter.save.SaveService;
 import org.apache.jmeter.testelement.TestElement;
 import org.apache.jorphan.collections.HashTree;
@@ -75,7 +74,7 @@
 
 })
 @JSONType(seeAlso = {MsHTTPSamplerProxy.class, MsHeaderManager.class, MsJSR223Processor.class, MsJSR223PostProcessor.class,
-        MsJSR223PreProcessor.class, MsTestPlan.class, MsThreadGroup.class, AuthManager.class, MsAssertions.class,
+        MsJSR223PreProcessor.class, MsTestPlan.class, MsThreadGroup.class, MsAuthManager.class, MsAssertions.class,
         MsExtract.class, MsTCPSampler.class, MsDubboSampler.class, MsJDBCSampler.class, MsConstantTimer.class, MsIfController.class, MsScenario.class, MsLoopController.class, MsJmeterElement.class}, typeKey = "type")
 @Data
 public abstract class MsTestElement {

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -25,6 +25,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/favicon.ico", "anon");
         filterChainDefinitionMap.put("/display/file/**", "anon");
         filterChainDefinitionMap.put("/jmeter/download/**", "anon");
+        filterChainDefinitionMap.put("/jmeter/ping", "anon");
         filterChainDefinitionMap.put("/authsource/list/allenable", "anon");
         filterChainDefinitionMap.put("/sso/signin", "anon");
         filterChainDefinitionMap.put("/sso/callback", "anon");

File: backend/src/main/java/io/metersphere/performance/engine/docker/DockerTestEngine.java
Patch:
@@ -74,14 +74,14 @@ private void runTest(TestResource resource, double ratio, int resourceIndex) {
         BaseSystemConfigDTO baseInfo = CommonBeanFactory.getBean(SystemParameterService.class).getBaseInfo();
         KafkaProperties kafkaProperties = CommonBeanFactory.getBean(KafkaProperties.class);
         JmeterProperties jmeterProperties = CommonBeanFactory.getBean(JmeterProperties.class);
-        String metersphereUrl = "http://localhost:8081";
+        String metersphereUrl = "http://localhost:8081"; // 占位符
         if (baseInfo != null) {
             metersphereUrl = baseInfo.getUrl();
         }
-
+        String jmeterPingUrl = metersphereUrl + "/jmeter/ping"; // 检查下载地址是否正确
         // docker 不能从 localhost 中下载文件
         if (StringUtils.contains(metersphereUrl, "http://localhost")
-                || !UrlTestUtils.testUrlWithTimeOut(metersphereUrl, 1000)) {
+                || !UrlTestUtils.testUrlWithTimeOut(jmeterPingUrl, 1000)) {
             MSException.throwException(Translator.get("run_load_test_file_init_error"));
         }
 

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -497,6 +497,7 @@ private void jmterHashTree(HashTree tree, MsTestElement scenario) {
                 elementNode = new MsJmeterElement();
                 elementNode.setName(((TestPlan) key).getName());
                 ((MsJmeterElement) elementNode).setJmeterElement(objToXml(key));
+                ((MsJmeterElement) elementNode).setElementType(key.getClass().getSimpleName());
             }
             // 线程组
             else if (key instanceof ThreadGroup) {
@@ -614,6 +615,7 @@ else if (key instanceof ForeachController) {
                 TestElement testElement = (TestElement) key;
                 elementNode.setName(testElement.getName());
                 ((MsJmeterElement) elementNode).setJmeterElement(objToXml(key));
+                ((MsJmeterElement) elementNode).setElementType(key.getClass().getSimpleName());
             }
             elementNode.setEnable(((TestElement) key).isEnabled());
             elementNode.setResourceId(UUID.randomUUID().toString());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -135,7 +135,7 @@ public void setHeader(HashTree tree, List<KeyValue> headers) {
     private Arguments arguments(ParameterConfig config) {
         Arguments arguments = new Arguments();
         arguments.setEnabled(true);
-        arguments.setName(this.getName() + "Variables");
+        arguments.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "Arguments");
         arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());
         arguments.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ArgumentsPanel"));
         if (CollectionUtils.isNotEmpty(this.getVariables())) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -168,7 +168,7 @@ public Arguments addArguments(ParameterConfig config) {
                 && CollectionUtils.isNotEmpty(config.getConfig().getCommonConfig().getVariables())) {
             Arguments arguments = new Arguments();
             arguments.setEnabled(true);
-            arguments.setName(name + "Variables");
+            arguments.setName(StringUtils.isNoneBlank(this.getName()) ? this.getName() : "Arguments");
             arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());
             arguments.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("ArgumentsPanel"));
             config.getConfig().getCommonConfig().getVariables().stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestPlan.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.definition.request;
 
+import com.alibaba.excel.util.StringUtils;
 import com.alibaba.fastjson.annotation.JSONType;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -29,7 +30,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
     }
 
     public TestPlan getPlan() {
-        TestPlan testPlan = new TestPlan(this.getName() + "TestPlan");
+        TestPlan testPlan = new TestPlan(StringUtils.isEmpty(this.getName()) ? "TestPlan" : this.getName());
         testPlan.setProperty(TestElement.TEST_CLASS, TestPlan.class.getName());
         testPlan.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestPlanGui"));
         testPlan.setEnabled(true);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/auth/MsAuthManager.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.commons.utils.CommonBeanFactory;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.protocol.http.control.AuthManager;
 import org.apache.jmeter.protocol.http.control.Authorization;
 import org.apache.jmeter.save.SaveService;
@@ -58,7 +59,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         AuthManager authManager = new AuthManager();
         authManager.setEnabled(true);
-        authManager.setName(this.getUsername() + "AuthManager");
+        authManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "AuthManager");
         authManager.setProperty(TestElement.TEST_CLASS, AuthManager.class.getName());
         authManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("AuthPanel"));
         Authorization auth = new Authorization();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/configurations/MsHeaderManager.java
Patch:
@@ -8,6 +8,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.protocol.http.control.Header;
 import org.apache.jmeter.protocol.http.control.HeaderManager;
 import org.apache.jmeter.save.SaveService;
@@ -29,7 +30,7 @@ public class MsHeaderManager extends MsTestElement {
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         HeaderManager headerManager = new HeaderManager();
         headerManager.setEnabled(this.isEnable());
-        headerManager.setName(this.getName() + "Headers");
+        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -78,7 +78,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
     private CounterConfig addCounterConfig() {
         CounterConfig counterConfig = new CounterConfig();
         counterConfig.setVarName("LoopCounterConfigXXX");
-        counterConfig.setName("LoopCounterConfigXXX");
+        counterConfig.setName("数循结果统计计数器");
         counterConfig.setEnabled(true);
         counterConfig.setProperty(TestElement.TEST_CLASS, CounterConfig.class.getName());
         counterConfig.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("CounterConfigGui"));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -305,7 +305,7 @@ private Arguments httpArguments(List<KeyValue> list) {
     public void setHeader(HashTree tree, List<KeyValue> headers) {
         HeaderManager headerManager = new HeaderManager();
         headerManager.setEnabled(true);
-        headerManager.setName(this.getName() + "Headers");
+        headerManager.setName(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "HeaderManager");
         headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         headerManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("HeaderPanel"));
         headers.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue ->

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -46,7 +46,7 @@ public class MsJDBCSampler extends MsTestElement {
     private List<KeyValue> variables;
     @JSONField(ordinal = 26)
     private String environmentId;
-//    @JSONField(ordinal = 27)
+    //    @JSONField(ordinal = 27)
 //    private Object requestResult;
     @JSONField(ordinal = 28)
     private String dataSourceId;
@@ -67,7 +67,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         final HashTree samplerHashTree = tree.add(jdbcSampler(config));
         tree.add(jdbcDataSource());
-        Arguments arguments = arguments(this.getName() + " Variables", this.getVariables());
+        Arguments arguments = arguments(StringUtils.isNotEmpty(this.getName()) ? this.getName() : "Arguments", this.getVariables());
         if (arguments != null) {
             tree.add(arguments);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/unknown/MsJmeterElement.java
Patch:
@@ -24,7 +24,7 @@
 @JSONType(typeName = "JmeterElement")
 public class MsJmeterElement extends MsTestElement {
     private String type = "JmeterElement";
-
+    private String elementType;
     private String jmeterElement;
 
     @Override
@@ -34,6 +34,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             if (inputSource != null) {
                 Object scriptWrapper = SaveService.loadElement(inputSource);
                 HashTree elementTree = tree;
+                this.setElementType(scriptWrapper.getClass().getName());
                 if (config.isOperating()) {
                     elementTree = tree.add(scriptWrapper);
                 } else if (!(scriptWrapper instanceof TestPlan) && !(scriptWrapper instanceof ThreadGroup)) {

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/MsJmeterParser.java
Patch:
@@ -198,7 +198,6 @@ private void convertTCPSampler(MsTCPSampler msTCPSampler, TCPSampler tcpSampler)
     private void convertDubboSample(MsDubboSampler elementNode, DubboSample sampler) {
         elementNode.setName(sampler.getName());
         elementNode.setType("DubboSampler");
-        elementNode.setProtocol("dubbo://");
         elementNode.set_interface(sampler.getPropertyAsString("FIELD_DUBBO_INTERFACE"));
         elementNode.setMethod(sampler.getPropertyAsString("FIELD_DUBBO_METHOD"));
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsDubboSampler.java
Patch:
@@ -33,7 +33,7 @@ public class MsDubboSampler extends MsTestElement {
     private String type = "DubboSampler";
 
     @JSONField(ordinal = 52)
-    private String protocol = "DUBBO";
+    private final String protocol = "dubbo://";
     @JsonProperty(value = "interface")
     @JSONField(ordinal = 53, name = "interface")
     private String _interface;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -81,9 +81,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ex.printStackTrace();
             }
         }
-
-        config.setStep(this.getName());
-        config.setStepType("SCENARIO");
         config.setEnableCookieShare(enableCookieShare);
         if (StringUtils.isNotEmpty(environmentId)) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);

File: backend/src/main/java/io/metersphere/api/parse/PostmanAbstractParserParser.java
Patch:
@@ -53,12 +53,12 @@ private void addPreScript(MsHTTPSamplerProxy request, List<PostmanEvent> event)
                     .collect(Collectors.toList());
             event.forEach(item -> {
                 PostmanScript script = item.getScript();
-                if (script != null) {
+                if (script != null && item.getListen().contains("prerequest")) {
                     List<String> exec = script.getExec();
                     if (CollectionUtils.isNotEmpty(exec)) {
                         exec.forEach(col -> {
                             if (StringUtils.isNotEmpty(col)) {
-                                scriptStr.append(col + "/n");
+                                scriptStr.append(col + "\n");
                             }
                         });
                     }

File: backend/src/main/java/io/metersphere/api/dto/ApiDocumentInfoDTO.java
Patch:
@@ -22,6 +22,8 @@ public class ApiDocumentInfoDTO {
     private String requestBodyParamType;
     private String requestBodyFormData;
     private String requestBodyStrutureData;
+    private Object requestPreviewData;
+    private Object jsonSchemaBody;
 
     private String responseHead;
     private String responseBody;

File: backend/src/main/java/io/metersphere/api/dto/ApiDocumentRequest.java
Patch:
@@ -16,4 +16,7 @@ public class ApiDocumentRequest {
     private String projectId;
     private List<String> moduleIds;
     private String shareId;
+    private String name;
+    private String type;
+    private String orderCondition;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -148,6 +148,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 String envPath = StringUtils.equals(urlObject.getPath(), "/") ? "" : urlObject.getPath();
                 if (StringUtils.isNotBlank(this.getPath()) && !isUrl) {
                     envPath += this.getPath();
+                    sampler.setPath(envPath);
                 }
                 if (CollectionUtils.isNotEmpty(this.getRest()) && this.isRest()) {
                     envPath = getRestParameters(URLDecoder.decode(envPath, "UTF-8"));

File: backend/src/main/java/io/metersphere/commons/constants/ApiImportPlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiImportPlatform {
-    Metersphere, Postman, Swagger2, Plugin
+    Metersphere, Postman, Swagger2, Plugin, Jmeter
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -44,7 +44,7 @@
 import sun.security.util.Cache;
 
 import javax.annotation.Resource;
-import java.io.*;
+import java.io.File;
 import java.util.*;
 import java.util.function.Function;
 import java.util.stream.Collectors;

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -29,6 +29,7 @@
 import io.metersphere.service.QuotaService;
 import io.metersphere.service.UserService;
 import io.metersphere.track.request.testcase.ApiCaseRelevanceRequest;
+import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.ibatis.session.ExecutorType;
 import org.apache.ibatis.session.SqlSession;
@@ -38,11 +39,10 @@
 import org.aspectj.util.FileUtil;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
-import org.apache.commons.collections.CollectionUtils;
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
-import java.io.*;
+import java.io.File;
 import java.util.*;
 import java.util.stream.Collectors;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -79,13 +79,13 @@ public String getCondition() {
         }
 
         if (StringUtils.equals(operator, "is empty")) {
-            variable = "!empty(" + variable + ")";
+            variable = variable + "==" + "\"\\" + this.variable + "\"" + "|| empty(" + variable + ")";
             operator = "";
             value = "";
         }
 
         if (StringUtils.equals(operator, "is not empty")) {
-            variable = "empty(" + variable + ")";
+            variable = variable + "!=" + "\"\\" + this.variable + "\"" + "&& !empty(" + variable + ")";
             operator = "";
             value = "";
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -123,13 +123,13 @@ public String getCondition() {
         }
 
         if (StringUtils.equals(operator, "is empty")) {
-            variable = "!empty(" + variable + ")";
+            variable = variable + "==" + "\"\\" + this.whileController.getVariable() + "\"" + "|| empty(" + variable + ")";
             operator = "";
             value = "";
         }
 
         if (StringUtils.equals(operator, "is not empty")) {
-            variable = "empty(" + variable + ")";
+            variable = variable + "!=" + "\"\\" + this.whileController.getVariable() + "\"" + "&& !empty(" + variable + ")";
             operator = "";
             value = "";
         }

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -178,7 +178,9 @@ private MsScenario createScenario(Scenario oldScenario) {
                     ((MsJDBCSampler) element).setDataSourceId(dto.getDatabaseConfig().getId());
                     ((MsJDBCSampler) element).setDataSource(dto.getDatabaseConfig());
                 }
-                ((MsJDBCSampler) element).setVariables(new ArrayList<>());
+                if (CollectionUtils.isEmpty(request1.getVariables())) {
+                    ((MsJDBCSampler) element).setVariables(new ArrayList<>());
+                }
                 element.setType("JDBCSampler");
             }
             if (request instanceof TCPRequest) {

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -171,12 +171,14 @@ private MsScenario createScenario(Scenario oldScenario) {
                 element = new MsJDBCSampler();
                 SqlRequest request1 = (SqlRequest) request;
                 BeanUtils.copyBean(element, request1);
+
                 EnvironmentDTO dto = environmentDTOMap.get(request1.getDataSource());
                 if (dto != null) {
                     ((MsJDBCSampler) element).setEnvironmentId(dto.getEnvironmentId());
                     ((MsJDBCSampler) element).setDataSourceId(dto.getDatabaseConfig().getId());
                     ((MsJDBCSampler) element).setDataSource(dto.getDatabaseConfig());
                 }
+                ((MsJDBCSampler) element).setVariables(new ArrayList<>());
                 element.setType("JDBCSampler");
             }
             if (request instanceof TCPRequest) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -196,6 +196,8 @@ protected void addCsvDataSet(HashTree tree, List<ScenarioVariable> variables) {
                         csvDataSet.setProperty("filename", BODY_FILE_DIR + "/" + item.getFiles().get(0).getId() + "_" + item.getFiles().get(0).getName());
                     }
                     csvDataSet.setIgnoreFirstLine(false);
+                    csvDataSet.setRecycle(true);
+                    csvDataSet.setProperty("recycle", true);
                     csvDataSet.setProperty("delimiter", item.getDelimiter());
                     csvDataSet.setComment(StringUtils.isEmpty(item.getDescription()) ? "" : item.getDescription());
                     tree.add(csvDataSet);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -87,7 +87,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         // 场景变量和环境变量
         tree.add(arguments(config));
-        this.addCsvDataSet(tree, variables);
+        //this.addCsvDataSet(tree, variables);
         this.addCounter(tree, variables);
         this.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(hashTree)) {

File: backend/src/main/java/io/metersphere/api/dto/automation/parse/ScenarioImportParserFactory.java
Patch:
@@ -9,10 +9,9 @@ public static ScenarioImportParser getImportParser(String platform) {
             return new MsScenarioParser();
         } else if (StringUtils.equals(ApiImportPlatform.Postman.name(), platform)) {
             return new MsPostmanParser();
+        } else if (StringUtils.equals(ApiImportPlatform.Jmeter.name(), platform)) {
+            return new MsJmeterParser();
         }
-//        else if (StringUtils.equals(ApiImportPlatform.Swagger2.name(), platform)) {
-//            return new Swagger2Parser();
-//        }
         return null;
     }
 }

File: backend/src/main/java/io/metersphere/commons/constants/ApiImportPlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiImportPlatform {
-    Metersphere, Postman, Swagger2, Plugin
+    Metersphere, Postman, Swagger2, Plugin, Jmeter
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertionJSR223.java
Patch:
@@ -13,13 +13,13 @@ public class MsAssertionJSR223 extends MsAssertionType {
     private String desc;
     private String name;
     private String script;
-    private String language;
+    private String scriptLanguage;
 
     public MsAssertionJSR223() {
         setType(MsAssertionType.JSR223);
     }
 
     public boolean isValid() {
-        return StringUtils.isNotBlank(script) && StringUtils.isNotBlank(language);
+        return StringUtils.isNotBlank(script) && StringUtils.isNotBlank(scriptLanguage);
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -130,7 +130,7 @@ private JSR223Assertion jsr223Assertion(MsAssertionJSR223 assertionJSR223) {
         assertion.setProperty(TestElement.TEST_CLASS, JSR223Assertion.class.getName());
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         assertion.setProperty("cacheKey", "true");
-        assertion.setProperty("scriptLanguage", assertionJSR223.getLanguage());
+        assertion.setProperty("scriptLanguage", assertionJSR223.getScriptLanguage());
         assertion.setProperty("script", assertionJSR223.getScript());
         return assertion;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -290,6 +290,9 @@ private Arguments httpArguments(List<KeyValue> list) {
         Arguments arguments = new Arguments();
         list.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue -> {
                     HTTPArgument httpArgument = new HTTPArgument(keyValue.getName(), StringUtils.isNotEmpty(keyValue.getValue()) && keyValue.getValue().startsWith("@") ? ScriptEngineUtils.calculate(keyValue.getValue()) : keyValue.getValue());
+                    if (keyValue.getValue() == null) {
+                        httpArgument.setValue("");
+                    }
                     httpArgument.setAlwaysEncoded(keyValue.isEncode());
                     if (StringUtils.isNotBlank(keyValue.getContentType())) {
                         httpArgument.setContentType(keyValue.getContentType());

File: backend/src/main/java/io/metersphere/job/sechedule/TestPlanTestJob.java
Patch:
@@ -29,7 +29,7 @@ public class TestPlanTestJob extends MsScheduleJob {
     private String projectID;
 
 
-//    private PerformanceTestService performanceTestService;
+    //    private PerformanceTestService performanceTestService;
 //    private TestPlanScenarioCaseService testPlanScenarioCaseService;
 //    private TestPlanApiCaseService testPlanApiCaseService;
 //    private ApiTestCaseService apiTestCaseService;
@@ -66,13 +66,12 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.projectID = jobDataMap.getString("projectId");
 
 
-
         businessExecute(context);
     }
 
     @Override
     void businessExecute(JobExecutionContext context) {
-        testPlanService.run(this.resourceId,this.projectID,this.userId,ReportTriggerMode.SCHEDULE.name());
+        testPlanService.run(this.resourceId, this.projectID, this.userId, ReportTriggerMode.SCHEDULE.name());
     }
 
     public static JobKey getJobKey(String testId) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -96,7 +96,7 @@ private void initDataSource() {
 
     private Arguments arguments(String name, List<KeyValue> variables) {
         Arguments arguments = new Arguments();
-        if (!variables.isEmpty()) {
+        if (CollectionUtils.isNotEmpty(variables)) {
             arguments.setEnabled(true);
             arguments.setName(name);
             arguments.setProperty(TestElement.TEST_CLASS, Arguments.class.getName());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -350,7 +350,8 @@ private void _importCreate(List<ApiDefinition> sameRequest, ApiDefinitionMapper
     private String setImportHashTree(ApiDefinitionWithBLOBs apiDefinition) {
         String request = apiDefinition.getRequest();
         MsHTTPSamplerProxy msHTTPSamplerProxy = JSONObject.parseObject(request, MsHTTPSamplerProxy.class);
-        msHTTPSamplerProxy.setHashTree(null);
+        msHTTPSamplerProxy.setId(apiDefinition.getId());
+        msHTTPSamplerProxy.setHashTree(new LinkedList<>());
         apiDefinition.setRequest(JSONObject.toJSONString(msHTTPSamplerProxy));
         return request;
     }

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -216,4 +216,6 @@ public void testPlanRelevance(@RequestBody ApiCaseRelevanceRequest request) {
     public String preview(@RequestBody String jsonSchema) {
         return JSONSchemaGenerator.getJson(jsonSchema);
     }
+
+
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -707,7 +707,9 @@ public void bathEditEnv(SaveApiScenarioRequest request) {
             apiScenarios.forEach(item -> {
                 JSONObject object = JSONObject.parseObject(item.getScenarioDefinition());
                 object.put("environmentId", request.getEnvironmentId());
-                item.setScenarioDefinition(JSONObject.toJSONString(object));
+                if (object != null) {
+                    item.setScenarioDefinition(JSONObject.toJSONString(object));
+                }
                 apiScenarioMapper.updateByPrimaryKeySelective(item);
             });
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -98,6 +98,8 @@ public abstract class MsTestElement {
     private String refType;
     @JSONField(ordinal = 10)
     private LinkedList<MsTestElement> hashTree;
+    @JSONField(ordinal = 11)
+    private boolean customizeReq;
 
     private MsTestElement parent;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -79,13 +79,13 @@ public String getCondition() {
         }
 
         if (StringUtils.equals(operator, "is empty")) {
-            variable = "empty(" + variable + ")";
+            variable = "!empty(" + variable + ")";
             operator = "";
             value = "";
         }
 
         if (StringUtils.equals(operator, "is not empty")) {
-            variable = "!empty(" + variable + ")";
+            variable = "empty(" + variable + ")";
             operator = "";
             value = "";
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -123,13 +123,13 @@ public String getCondition() {
         }
 
         if (StringUtils.equals(operator, "is empty")) {
-            variable = "empty(" + variable + ")";
+            variable = "!empty(" + variable + ")";
             operator = "";
             value = "";
         }
 
         if (StringUtils.equals(operator, "is not empty")) {
-            variable = "!empty(" + variable + ")";
+            variable = "empty(" + variable + ")";
             operator = "";
             value = "";
         }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -507,7 +507,6 @@ public String debugRun(RunDefinitionRequest request, List<MultipartFile> bodyFil
         ParameterConfig config = new ParameterConfig();
         config.setConfig(envConfig);
         HashTree hashTree = request.getTestElement().generateHashTree(config);
-
         // 调用执行方法
         createScenarioReport(request.getId(), request.getScenarioId(), request.getScenarioName(), ReportTriggerMode.MANUAL.name(), request.getExecuteType(), request.getProjectId(),
                 SessionUtils.getUserId());

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -42,10 +42,10 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
     private IfController ifController() {
         IfController ifController = new IfController();
         ifController.setEnabled(true);
-        ifController.setName(this.getLabelName());
-        ifController.setCondition(this.getCondition());
+        ifController.setName(StringUtils.isEmpty(this.getName()) ? "IfController" : this.getName());
         ifController.setProperty(TestElement.TEST_CLASS, IfController.class.getName());
         ifController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("IfControllerPanel"));
+        ifController.setCondition(this.getCondition());
         ifController.setEvaluateAll(false);
         ifController.setUseExpression(true);
         return ifController;

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -57,7 +57,7 @@ public KeyValue(String name, String value, String description, boolean required)
     }
 
     public boolean isValid() {
-        return ((StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value)) || "JSON-SCHEMA".equals(type)) && !StringUtils.equalsIgnoreCase(type, "file");
+        return (StringUtils.isNotBlank(name) || "JSON-SCHEMA".equals(type)) && !StringUtils.equalsIgnoreCase(type, "file");
     }
 
     public boolean isFile() {

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -57,7 +57,7 @@ public KeyValue(String name, String value, String description, boolean required)
     }
 
     public boolean isValid() {
-        return ((StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value)) || "JSON-SCHEMA".equals(type)) && !StringUtils.equalsIgnoreCase(type, "file");
+        return (StringUtils.isNotBlank(name) || "JSON-SCHEMA".equals(type)) && !StringUtils.equalsIgnoreCase(type, "file");
     }
 
     public boolean isFile() {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -57,7 +57,7 @@ private void addRequestExtractors(HashTree samplerHashTree) {
         if (Optional.ofNullable(extract).orElse(extract).length() > 0) {
             JSR223PostProcessor shell = new JSR223PostProcessor();
             shell.setEnabled(true);
-            shell.setName(this.getName());
+            shell.setName(StringUtils.isEmpty(this.getName()) ? "JSR223PostProcessor" : this.getName());
             shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
             shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
             shell.setProperty("script", "io.metersphere.api.jmeter.JMeterVars.addVars(prev.hashCode(),vars," + "\"" + extract.toString() + "\"" + ");");

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -377,6 +377,8 @@ public String upgrade(SaveHistoricalDataUpgrade saveHistoricalDataUpgrade) {
             if (CollectionUtils.isNotEmpty(scenarios)) {
                 // 批量处理
                 for (Scenario scenario : scenarios) {
+                    scenario.setId(test.getId() + "=" + scenario.getId());
+                    scenario.setName(test.getName() + "_" + scenario.getName());
                     MsScenario scenario1 = createScenario(scenario);
                     String scenarioDefinition = JSON.toJSONString(scenario1);
                     num++;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -71,6 +71,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ex.printStackTrace();
             }
         }
+
         config.setStep(this.name);
         config.setStepType("SCENARIO");
         config.setEnableCookieShare(enableCookieShare);
@@ -91,6 +92,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         this.addRandom(tree, variables);
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {
+                // 给所有孩子加一个父亲标志
+                el.setParent(this);
                 el.toHashTree(tree, el.getHashTree(), config);
             }
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -32,6 +32,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         final HashTree groupTree = tree.add(ifController());
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {
+                // 给所有孩子加一个父亲标志
+                el.setParent(this);
                 el.toHashTree(groupTree, el.getHashTree(), config);
             });
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -83,6 +83,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
 
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {
+                // 给所有孩子加一个父亲标志
+                el.setParent(this);
                 el.toHashTree(groupTree, el.getHashTree(), config);
             });
         }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -28,6 +28,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/authsource/list/allenable", "anon");
         filterChainDefinitionMap.put("/sso/signin", "anon");
         filterChainDefinitionMap.put("/sso/callback", "anon");
+        filterChainDefinitionMap.put("/license/valid", "anon");
 
         // for swagger
         filterChainDefinitionMap.put("/swagger-ui.html", "anon");

File: backend/src/main/java/io/metersphere/base/mapper/ScheduleMapper.java
Patch:
@@ -33,5 +33,4 @@ public interface ScheduleMapper {
     int updateByPrimaryKeyWithBLOBs(Schedule record);
 
     int updateByPrimaryKey(Schedule record);
-
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -337,7 +337,7 @@ private RequestResult getRequestResult(SampleResult result) {
                 requestResult.addPassAssertions();
             }
             //xpath 提取错误会添加断言错误
-            if (StringUtils.isBlank(responseAssertionResult.getMessage()) || !responseAssertionResult.getMessage().contains("The required item type of the first operand of")) {
+            if (StringUtils.isBlank(responseAssertionResult.getMessage()) || !responseAssertionResult.getName().endsWith("XPath2Extractor")) {
                 responseResult.getAssertions().add(responseAssertionResult);
             }
         }

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -134,7 +134,9 @@ private MsScenario createScenario(Scenario oldScenario) {
                         request1.getBody().setType(Body.FORM_DATA);
                     }
                     if ("json".equals(request1.getBody().getFormat())) {
-                        request1.getBody().setType(Body.JSON);
+                        if ("Raw".equals(request1.getBody().getType())) {
+                            request1.getBody().setType(Body.JSON);
+                        }
                         if (CollectionUtils.isEmpty(request1.getHeaders())) {
                             List<KeyValue> headers = new LinkedList<>();
                             headers.add(new KeyValue("Content-Type", "application/json"));

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -158,7 +158,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                         if (!path.startsWith("/")) {
                             path = "/" + path;
                         }
-                        path = sampler.getProtocol() + "://" + sampler.getDomain() + ":" + sampler.getPort() + path;
+                        String port = sampler.getPort() != 80 ? ":" + sampler.getPort() : "";
+                        path = sampler.getProtocol() + "://" + sampler.getDomain() + port + path;
                     }
                     sampler.setPath(path);
                 }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -297,6 +297,7 @@ private RequestResult getRequestResult(SampleResult result) {
         requestResult.setHeaders(result.getRequestHeaders());
         requestResult.setRequestSize(result.getSentBytes());
         requestResult.setStartTime(result.getStartTime());
+        requestResult.setEndTime(result.getEndTime());
         requestResult.setTotalAssertions(result.getAssertionResults().length);
         requestResult.setSuccess(result.isSuccessful());
         requestResult.setError(result.getErrorCount());

File: backend/src/main/java/io/metersphere/api/jmeter/RequestResult.java
Patch:
@@ -18,6 +18,8 @@ public class RequestResult {
 
     private long startTime;
 
+    private long endTime;
+
     private int error;
 
     private boolean success;

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -163,6 +163,7 @@ public ApiScenarioReport updatePlanCase(TestResult result) {
                 String passRate = new DecimalFormat("0%").format((float) scenarioResult.getSuccess() / (scenarioResult.getSuccess() + scenarioResult.getError()));
                 testPlanApiScenario.setPassRate(passRate);
                 testPlanApiScenario.setReportId(report.getId());
+                testPlanApiScenario.setUpdateTime(System.currentTimeMillis());
                 testPlanApiScenarioMapper.updateByPrimaryKeySelective(testPlanApiScenario);
             }
             returnReport = report;
@@ -220,6 +221,7 @@ public ApiScenarioReport updateSchedulePlanCase(TestResult result) {
             apiScenarioReportDetailMapper.insert(detail);
 
             testPlanApiScenario.setReportId(report.getId());
+            testPlanApiScenario.setUpdateTime(System.currentTimeMillis());
             testPlanApiScenarioMapper.updateByPrimaryKeySelective(testPlanApiScenario);
 
             lastReport = report;

File: backend/src/main/java/io/metersphere/track/service/TestPlanApiCaseService.java
Patch:
@@ -115,6 +115,7 @@ public void setExecResult(String id, String status) {
         TestPlanApiCase apiCase = new TestPlanApiCase();
         apiCase.setId(id);
         apiCase.setStatus(status);
+        apiCase.setUpdateTime(System.currentTimeMillis());
         testPlanApiCaseMapper.updateByPrimaryKeySelective(apiCase);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -449,7 +449,7 @@ public void updatePerformanceInfo(TestPlanReport testPlanReport, List<String> pe
                     if(loadTestReportFromDatabase == null){
                         //检查错误数据
                         if(errorDataCheckMap.containsKey(loadTestReportId)){
-                            if(errorDataCheckMap.get(loadTestReportId)>20){
+                            if(errorDataCheckMap.get(loadTestReportId)>10){
                                 performaneReportIDList.remove(loadTestReportId);
                             }else {
                                 errorDataCheckMap.put(loadTestReportId,errorDataCheckMap.get(loadTestReportId)+1);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -150,6 +150,7 @@ public synchronized void addTestPlan(AddTestPlanRequest testPlan) {
     public List<TestPlan> getTestPlanByName(String name) {
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andWorkspaceIdEqualTo(SessionUtils.getCurrentWorkspaceId())
+                .andProjectIdEqualTo(SessionUtils.getCurrentProjectId())
                 .andNameEqualTo(name);
         return testPlanMapper.selectByExample(example);
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionBatchProcessingRequest.java
Patch:
@@ -37,4 +37,6 @@ public class ApiDefinitionBatchProcessingRequest {
 
     private List<String> dataIds;
 
+    private String protocol;
+
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanReportService.java
Patch:
@@ -196,6 +196,9 @@ public TestPlanReportDTO getMetric(String reportId) {
             }
         }
         returnDTO.setId(report.getId());
+        returnDTO.setName(report.getName());
+        returnDTO.setStartTime(report.getStartTime());
+        returnDTO.setEndTime(report.getEndTime());
         returnDTO.setTestPlanId(report.getTestPlanId());
         returnDTO.setReportComponents(report.getComponents());
         return returnDTO;

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -82,7 +82,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         samplerHashTree.add(tcpConfig());
         tree.set(tcpSampler(config), samplerHashTree);
         setUserParameters(samplerHashTree);
-        if (tcpPreProcessor != null) {
+        if (tcpPreProcessor != null && StringUtils.isNotBlank(tcpPreProcessor.getScript())) {
             samplerHashTree.add(tcpPreProcessor.getJSR223PreProcessor());
         }
         if (CollectionUtils.isNotEmpty(hashTree)) {

File: backend/src/main/java/io/metersphere/api/dto/automation/TestPlanScenarioRequest.java
Patch:
@@ -16,6 +16,7 @@ public class TestPlanScenarioRequest {
     private String moduleId;
     private List<String> moduleIds;
     private String name;
+    private String status;
     private String workspaceId;
     private String userId;
     private String planId;

File: backend/src/main/java/io/metersphere/track/dto/TestPlanReportDTO.java
Patch:
@@ -15,12 +15,14 @@
 @Setter
 public class TestPlanReportDTO {
     private String id;
+    private String testPlanId;
     private String name;
     private String testPlanName;
     private String creator;
     private long createTime;
     private String triggerMode;
     private String status;
+    private String reportComponents;
 
     private TestCaseReportAdvanceStatusResultDTO executeResult;
     private List<TestCaseReportModuleResultDTO> moduleExecuteResult;

File: backend/src/main/java/io/metersphere/track/request/testplan/LoadCaseRequest.java
Patch:
@@ -14,6 +14,7 @@ public class LoadCaseRequest extends TestPlanLoadCase {
     private String projectId;
     private List<String> caseIds;
     private String name;
+    private String status;
     private Map<String, List<String>> filters;
     private List<OrderRequest> orders;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -356,6 +356,8 @@ private String getMethod(SampleResult result) {
                 return protocol.toUpperCase();
             }
             return RequestType.DUBBO;
+        } else if (StringUtils.contains(result.getResponseHeaders(), "url:jdbc")) {
+            return "SQL";
         } else {
             // Http Method
             String method = StringUtils.substringBefore(body, " ");

File: backend/src/main/java/io/metersphere/performance/engine/docker/DockerTestEngine.java
Patch:
@@ -95,7 +95,7 @@ private void runTest(TestResource resource, double ratio, int resourceIndex) {
         env.put("BOOTSTRAP_SERVERS", kafkaProperties.getBootstrapServers());
         env.put("LOG_TOPIC", kafkaProperties.getLog().getTopic());
         env.put("RESOURCE_ID", resource.getId());
-        env.put("THREAD_NUM", "" + threadNum);
+        env.put("THREAD_NUM", "0");// 传入0表示不用修改线程数
         env.put("HEAP", jmeterProperties.getHeap());
 
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsTCPSampler.java
Patch:
@@ -82,7 +82,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         samplerHashTree.add(tcpConfig());
         tree.set(tcpSampler(config), samplerHashTree);
         setUserParameters(samplerHashTree);
-        samplerHashTree.add(tcpPreProcessor.getJSR223PreProcessor());
+        if (tcpPreProcessor != null) {
+            samplerHashTree.add(tcpPreProcessor.getJSR223PreProcessor());
+        }
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {
                 el.toHashTree(samplerHashTree, el.getHashTree(), config);

File: backend/src/main/java/io/metersphere/service/NodeResourcePoolService.java
Patch:
@@ -10,9 +10,9 @@
 import io.metersphere.dto.NodeDTO;
 import io.metersphere.dto.TestResourcePoolDTO;
 import io.metersphere.i18n.Translator;
-import javafx.util.Pair;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.lang3.tuple.ImmutablePair;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
@@ -40,10 +40,10 @@ public boolean validate(TestResourcePoolDTO testResourcePool) {
         }
 
         deleteTestResource(testResourcePool.getId());
-        List Ip_Port = testResourcePool.getResources().stream()
+        List<ImmutablePair> Ip_Port = testResourcePool.getResources().stream()
                 .map(resource -> {
                     NodeDTO nodeDTO = JSON.parseObject(resource.getConfiguration(), NodeDTO.class);
-                    return new Pair(nodeDTO.getIp(), nodeDTO.getPort());
+                    return new ImmutablePair(nodeDTO.getIp(), nodeDTO.getPort());
                 })
                 .distinct()
                 .collect(Collectors.toList());

File: backend/src/main/java/io/metersphere/service/NodeResourcePoolService.java
Patch:
@@ -50,9 +50,6 @@ public boolean validate(TestResourcePoolDTO testResourcePool) {
         if (Ip_Port.size() < testResourcePool.getResources().size()) {
             MSException.throwException(Translator.get("duplicate_node_ip_port"));
         }
-        else if (nodePorts.size() < testResourcePool.getResources().size()) {
-            MSException.throwException(Translator.get("duplicate_node_port"));
-        }
         testResourcePool.setStatus(VALID.name());
         boolean isValid = true;
         for (TestResource resource : testResourcePool.getResources()) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -389,8 +389,6 @@ private void processCheckoutConfigTestElement(Element ele) {
         element.appendChild(createStringProp(document, "HTTPSampler.concurrentPool", "6"));
         element.appendChild(createStringProp(document, "HTTPSampler.connect_timeout", ""));
         element.appendChild(createStringProp(document, "HTTPSampler.response_timeout", ""));
-        element.appendChild(createBoolProp(document, "HTTPSampler.image_parser", true));
-        element.appendChild(createBoolProp(document, "HTTPSampler.concurrentDwn", true));
         hashTree.appendChild(element);
         // 空的 hashTree
         hashTree.appendChild(document.createElement(HASH_TREE_ELEMENT));

File: backend/src/main/java/io/metersphere/commons/constants/UserSource.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum UserSource {
-    LOCAL, LDAP
+    LOCAL, LDAP, CAS, OIDC
 }

File: backend/src/main/java/io/metersphere/commons/utils/ShiroUtils.java
Patch:
@@ -28,6 +28,7 @@ public static void loadBaseFilterChain(Map<String, String> filterChainDefinition
         filterChainDefinitionMap.put("/authsource/list/allenable", "anon");
         filterChainDefinitionMap.put("/sso/signin", "anon");
         filterChainDefinitionMap.put("/sso/callback", "anon");
+
         // for swagger
         filterChainDefinitionMap.put("/swagger-ui.html", "anon");
         filterChainDefinitionMap.put("/swagger-ui/**", "anon");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -55,6 +55,9 @@ public void saveApiResult(TestResult result, String type) {
                 saveResult.setCreateTime(System.currentTimeMillis());
                 saveResult.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
                 saveResult.setName(item.getName());
+                if (item.getName().indexOf("<->") != -1) {
+                    saveResult.setName(item.getName().substring(0, item.getName().indexOf("<->")));
+                }
                 saveResult.setResourceId(item.getName());
                 saveResult.setContent(JSON.toJSONString(item));
                 saveResult.setStartTime(item.getStartTime());

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -412,6 +412,7 @@ public String upgrade(SaveHistoricalDataUpgrade saveHistoricalDataUpgrade) {
                     MsScenario step = new MsScenario();
                     step.setId(scenario1.getId());
                     step.setName(scenario1.getName());
+                    step.setEnable(scenario.isEnable());
                     step.setType("scenario");
                     step.setResourceId(UUID.randomUUID().toString());
                     step.setReferenced("REF");

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -55,6 +55,9 @@ public void saveApiResult(TestResult result, String type) {
                 saveResult.setCreateTime(System.currentTimeMillis());
                 saveResult.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
                 saveResult.setName(item.getName());
+                if (item.getName().indexOf("<->") != -1) {
+                    saveResult.setName(item.getName().substring(0, item.getName().indexOf("<->")));
+                }
                 saveResult.setResourceId(item.getName());
                 saveResult.setContent(JSON.toJSONString(item));
                 saveResult.setStartTime(item.getStartTime());

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -412,6 +412,7 @@ public String upgrade(SaveHistoricalDataUpgrade saveHistoricalDataUpgrade) {
                     MsScenario step = new MsScenario();
                     step.setId(scenario1.getId());
                     step.setName(scenario1.getName());
+                    step.setEnable(scenario.isEnable());
                     step.setType("scenario");
                     step.setResourceId(UUID.randomUUID().toString());
                     step.setReferenced("REF");

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -145,7 +145,7 @@ private MsScenario createScenario(Scenario oldScenario) {
                                 }
                             }
                             if (!isJsonType) {
-                                request1.getHeaders().add(new KeyValue("Content-Type", "application/json"));
+                                request1.getHeaders().set(request1.getHeaders().size() - 1, new KeyValue("Content-Type", "application/json"));
                             }
                         }
                     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsJDBCSampler.java
Patch:
@@ -50,6 +50,8 @@ public class MsJDBCSampler extends MsTestElement {
     private Object requestResult;
     @JSONField(ordinal = 28)
     private String dataSourceId;
+    @JSONField(ordinal = 29)
+    private String protocol="SQL";
 
     @Override
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.TestPlan;
 import io.metersphere.track.dto.TestPlanDTO;
 import io.metersphere.track.dto.TestPlanDTOWithMetric;
 import io.metersphere.track.request.testcase.QueryTestPlanRequest;
@@ -32,4 +33,6 @@ public interface ExtTestPlanMapper {
     String findScheduleCreateUserById(String testPlanId);
 
     List<String> findIdByPerformanceReportId(String reportId);
+
+    List<TestPlan> listRecent(@Param("userId") String userId, @Param("projectId") String currentProjectId);
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -66,9 +66,8 @@ public List<TestPlanDTOWithMetric> listRelateAll() {
 
     @GetMapping("recent/{count}")
     public List<TestPlan> recentTestPlans(@PathVariable int count) {
-        String currentWorkspaceId = SessionUtils.getCurrentWorkspaceId();
         PageHelper.startPage(1, count, true);
-        return testPlanService.recentTestPlans(currentWorkspaceId);
+        return testPlanService.recentTestPlans();
     }
 
     @PostMapping("/get/{testPlanId}")

File: backend/src/main/java/io/metersphere/track/service/LoadReportStatusEvent.java
Patch:
@@ -32,7 +32,8 @@ private void updateLoadCaseStatus(LoadTestReport loadTestReport) {
 
     @Override
     public void execute(LoadTestReport loadTestReport) {
-        if (StringUtils.equals(ReportTriggerMode.CASE.name(), loadTestReport.getTriggerMode())) {
+        if (StringUtils.equals(ReportTriggerMode.CASE.name(), loadTestReport.getTriggerMode())
+                || StringUtils.equals(ReportTriggerMode.TEST_PLAN_SCHEDULE.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),
                     PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
                 updateLoadCaseStatus(loadTestReport);

File: backend/src/main/java/io/metersphere/api/parse/PostmanParser.java
Patch:
@@ -74,6 +74,7 @@ private ApiDefinitionResult parsePostman(PostmanItem requestItem) {
         parseBody(request.getBody(), requestDesc);
         request.setArguments(parseKeyValue(url.getQuery()));
         request.setHeaders(parseKeyValue(requestDesc.getHeader()));
+        addBodyHeader(request);
         apiDefinition.setRequest(JSON.toJSONString(request));
         return apiDefinition;
     }

File: backend/src/main/java/io/metersphere/api/parse/Swagger2Parser.java
Patch:
@@ -68,6 +68,7 @@ private List<ApiDefinitionResult> parseRequests(Swagger swagger, ApiTestImportRe
                 MsHTTPSamplerProxy request = buildRequest(operation, pathName, method.name());
                 ApiDefinitionResult apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method.name());
                 parseParameters(operation, request);
+                addBodyHeader(request);
                 apiDefinition.setRequest(JSON.toJSONString(request));
                 apiDefinition.setResponse(JSON.toJSONString(parseResponse(operation, operation.getResponses())));
                 buildModule(parentNode, apiDefinition, operation.getTags(), importRequest.isSaved());

File: backend/src/main/java/io/metersphere/api/parse/Swagger3Parser.java
Patch:
@@ -100,6 +100,7 @@ private List<ApiDefinitionResult> parseRequests(OpenAPI openAPI, ApiTestImportRe
                     ApiDefinitionResult apiDefinition = buildApiDefinition(request.getId(), operation, pathName, method);
                     parseParameters(operation, request);
                     parseRequestBody(operation.getRequestBody(), request.getBody());
+                    addBodyHeader(request);
                     apiDefinition.setRequest(JSON.toJSONString(request));
                     apiDefinition.setResponse(JSON.toJSONString(parseResponse(operation.getResponses())));
                     buildModule(parentNode, apiDefinition, operation.getTags(), importRequest.isSaved());

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -11,4 +11,5 @@ public interface ExtTestPlanLoadCaseMapper {
     List<String> selectIdsNotInPlan(@Param("projectId") String projectId, @Param("planId") String planId);
     List<TestPlanLoadCaseDTO> selectTestPlanLoadCaseList(@Param("request") LoadCaseRequest request);
     void updateCaseStatus(@Param("reportId") String reportId, @Param("status") String status);
+    List<String> getStatusByTestPlanId(@Param("planId") String planId);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -60,7 +60,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
             return;
         }
         config.setStep(this.name);
-
+        config.setStepType("");
         config.setEnableCookieShare(enableCookieShare);
         if (StringUtils.isNotEmpty(environmentId)) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -17,6 +17,6 @@ public class ParameterConfig {
     // 步骤
     private String step;
 
-    private final String stepType = "STEP_GROUP";
+    private String stepType;
 
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -314,7 +314,7 @@ private ApiDefinition importCreate(ApiDefinitionResult request, ApiDefinitionMap
         } else {
             //如果存在则修改
             apiDefinition.setId(sameRequest.get(0).getId());
-            apiDefinitionMapper.updateByPrimaryKey(apiDefinition);
+            apiDefinitionMapper.updateByPrimaryKeyWithBLOBs(apiDefinition);
         }
         return apiDefinition;
     }

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -1,14 +1,14 @@
 package io.metersphere.api.dto.automation;
 
-import io.metersphere.base.domain.ApiScenario;
+import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 
 import java.util.List;
 
 @Getter
 @Setter
-public class ApiScenarioDTO extends ApiScenario {
+public class ApiScenarioDTO extends ApiScenarioWithBLOBs {
 
     private String projectName;
     private String userName;

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioRequest.java
Patch:
@@ -27,4 +27,5 @@ public class ApiScenarioRequest {
     private boolean isSelectThisWeedData;
     private long createTime = 0;
     private String executeStatus;
+    private boolean notInTestPlan;
 }

File: backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -4,6 +4,7 @@
 import lombok.Setter;
 
 import java.util.List;
+import java.util.Map;
 
 @Setter
 @Getter
@@ -32,6 +33,8 @@ public class RunScenarioRequest {
 
     private List<String> scenarioIds;
 
+    private Map<String,String> scenarioTestPlanIdMap;
+
     /**
      * isSelectAllDate：选择的数据是否是全部数据（全部数据是不受分页影响的数据）
      * filters: 数据状态

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -751,7 +751,7 @@ public String findScheduleCreateUserById(String testPlanId) {
      * @param request
      * @return
      */
-    public String runApiCase(SchedulePlanScenarioExecuteRequest request) {
+    public String runScenarioCase(SchedulePlanScenarioExecuteRequest request) {
         MsTestPlan testPlan = new MsTestPlan();
         testPlan.setHashTree(new LinkedList<>());
         HashTree jmeterHashTree = new ListedHashTree();

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -114,6 +114,7 @@ private MsScenario createScenario(Scenario oldScenario) {
                 }
                 if (request1.getBody() != null && request1.getBody().isOldKV()) {
                     request1.getBody().setType(Body.FORM_DATA);
+                    request1.getBody().setBinary(new ArrayList<>());
                 }
                 BeanUtils.copyBean(element, request1);
                 ((MsHTTPSamplerProxy) element).setProtocol(RequestType.HTTP);

File: backend/src/main/java/io/metersphere/security/realm/ShiroDBRealm.java
Patch:
@@ -105,7 +105,7 @@ private UserDTO getUserWithOutAuthenticate(String userId) {
             if (user == null) {
                 msg = "The user does not exist: " + userId;
                 logger.warn(msg);
-                throw new UnknownAccountException(Translator.get("user_not_exist") + userId);
+                throw new UnknownAccountException(Translator.get("password_is_incorrect") + userId);
             }
         }
         return user;
@@ -119,7 +119,7 @@ private AuthenticationInfo loginLocalMode(String userId, String password) {
             if (user == null) {
                 msg = "The user does not exist: " + userId;
                 logger.warn(msg);
-                throw new UnknownAccountException(Translator.get("user_not_exist") + userId);
+                throw new UnknownAccountException(Translator.get("password_is_incorrect") + userId);
             }
             userId = user.getId();
         }

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -7,5 +7,6 @@ public enum ReportTriggerMode {
     /**
      * 性能测试用例执行触发报告
      */
-    CASE
+    CASE,
+    TEST_PLAN_SCHEDULE
 }

File: backend/src/main/java/io/metersphere/job/sechedule/TestPlanTestJob.java
Patch:
@@ -141,7 +141,7 @@ void businessExecute(JobExecutionContext context) {
             RunTestPlanRequest performanceRequest = new RunTestPlanRequest();
             performanceRequest.setId(caseID);
             performanceRequest.setTestPlanLoadId(caseID);
-            performanceRequest.setTriggerMode(ReportTriggerMode.SCHEDULE.name());
+            performanceRequest.setTriggerMode(ReportTriggerMode.TEST_PLAN_SCHEDULE.name());
 
             String reportId = null;
             try {

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiComputeResult.java
Patch:
@@ -7,7 +7,9 @@
 @Setter
 public class ApiComputeResult {
     private String apiDefinitionId;
-    private String caseTotal;
+    private int caseTotal;
     private String status;
     private String passRate;
+    private int success;
+    private int error;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.extractor.JSR223PostProcessor;
 import org.apache.jmeter.extractor.RegexExtractor;
 import org.apache.jmeter.extractor.XPath2Extractor;
@@ -57,6 +58,8 @@ private void addRequestExtractors(HashTree samplerHashTree) {
             JSR223PostProcessor shell = new JSR223PostProcessor();
             shell.setEnabled(true);
             shell.setName(this.getName());
+            shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
+            shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
             shell.setProperty("script", "io.metersphere.api.jmeter.JMeterVars.addVars(prev.hashCode(),vars," + "\"" + extract.toString() + "\"" + ");");
             samplerHashTree.add(shell);
         }

File: backend/src/main/java/io/metersphere/base/domain/ApiTestCase.java
Patch:
@@ -28,5 +28,7 @@ public class ApiTestCase implements Serializable {
 
     private String tags;
 
+    private String lastResultId;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/ApiTestCaseWithBLOBs.java
Patch:
@@ -13,7 +13,5 @@ public class ApiTestCaseWithBLOBs extends ApiTestCase implements Serializable {
 
     private String request;
 
-    private String response;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.extractor.JSR223PostProcessor;
 import org.apache.jmeter.extractor.RegexExtractor;
 import org.apache.jmeter.extractor.XPath2Extractor;
@@ -57,6 +58,8 @@ private void addRequestExtractors(HashTree samplerHashTree) {
             JSR223PostProcessor shell = new JSR223PostProcessor();
             shell.setEnabled(true);
             shell.setName(this.getName());
+            shell.setProperty(TestElement.TEST_CLASS, JSR223PostProcessor.class.getName());
+            shell.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
             shell.setProperty("script", "io.metersphere.api.jmeter.JMeterVars.addVars(prev.hashCode(),vars," + "\"" + extract.toString() + "\"" + ");");
             samplerHashTree.add(shell);
         }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -98,7 +98,6 @@ public String run(@RequestBody RunScenarioRequest request) {
     @PostMapping(value = "/run/batch")
     public String runBatch(@RequestBody RunScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
-        request.setRunMode(ApiRunMode.SCENARIO_BATCH.name());
         return apiAutomationService.run(request);
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -182,8 +182,8 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                 apiDefinitionExecResultService.saveApiResultByScheduleTask(testResult, ApiRunMode.SCHEDULE_API_PLAN.name());
                 List<String> testPlanReportIdList = new ArrayList<>();
                 testPlanReportIdList.add(debugReportId);
-                testPlanReportService.updateReport(testPlanReportIdList,ApiRunMode.SCHEDULE_API_PLAN.name(),ReportTriggerMode.SCHEDULE.name());
-            }else {
+                testPlanReportService.updateReport(testPlanReportIdList, ApiRunMode.SCHEDULE_API_PLAN.name(), ReportTriggerMode.SCHEDULE.name());
+            } else {
                 apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.API_PLAN.name());
             }
         } else if (StringUtils.equalsAny(this.runMode, ApiRunMode.SCENARIO.name(), ApiRunMode.SCENARIO_PLAN.name(), ApiRunMode.SCHEDULE_SCENARIO_PLAN.name())) {

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG, DEFINITION,SCENARIO, API_PLAN, SCENARIO_PLAN,SCENARIO_BATCH,API,SCHEDULE_API_PLAN,SCHEDULE_SCENARIO_PLAN,SCHEDULE_PERFORMANCE_TEST
+    RUN, DEBUG, DEFINITION,SCENARIO, API_PLAN, SCENARIO_PLAN,API,SCHEDULE_API_PLAN,SCHEDULE_SCENARIO_PLAN,SCHEDULE_PERFORMANCE_TEST
 }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -9,6 +9,7 @@
 import io.metersphere.base.domain.ApiScenario;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import io.metersphere.base.domain.Schedule;
+import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
@@ -97,10 +98,10 @@ public String run(@RequestBody RunScenarioRequest request) {
     @PostMapping(value = "/run/batch")
     public String runBatch(@RequestBody RunScenarioRequest request) {
         request.setExecuteType(ExecuteType.Saved.name());
+        request.setRunMode(ApiRunMode.SCENARIO_BATCH.name());
         return apiAutomationService.run(request);
     }
 
-
     @PostMapping("/getReference")
     public ReferenceDTO getReference(@RequestBody ApiScenarioRequest request) {
         return apiAutomationService.getReference(request);

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -164,15 +164,15 @@ public void teardownTest(BackendListenerContext context) throws Exception {
         testResult.getScenarios().sort(Comparator.comparing(ScenarioResult::getId));
         ApiTestReport report = null;
         String reportUrl = null;
-        // 这部分后续优化只留 DELIMIT 和 SCENARIO 两部分
+        // 这部分后续优化只留 DEFINITION 和 SCENARIO 两部分
         if (StringUtils.equals(this.runMode, ApiRunMode.DEBUG.name())) {
             report = apiReportService.get(debugReportId);
             apiReportService.complete(testResult, report);
-        } else if (StringUtils.equals(this.runMode, ApiRunMode.DELIMIT.name())) {
+        } else if (StringUtils.equals(this.runMode, ApiRunMode.DEFINITION.name())) {
             // 调试操作，不需要存储结果
             apiDefinitionService.addResult(testResult);
             if (StringUtils.isBlank(debugReportId)) {
-                apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.DELIMIT.name());
+                apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.DEFINITION.name());
             }
         } else if (StringUtils.equalsAny(this.runMode, ApiRunMode.API_PLAN.name(), ApiRunMode.SCHEDULE_API_PLAN.name())) {
             apiDefinitionService.addResult(testResult);

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -218,13 +218,13 @@ public ApiScenarioReport updateSchedulePlanCase(TestResult result) {
     }
 
     public ApiScenarioReport updateScenario(TestResult result) {
-        ApiScenarioReport lastReport = null;
         if (CollectionUtils.isEmpty(result.getScenarios())) {
             ScenarioResult test = new ScenarioResult();
             test.setName(result.getTestId());
             ApiScenarioReport report = editReport(test);
             return report;
         }
+        ApiScenarioReport lastReport = null;
         for (ScenarioResult item : result.getScenarios()) {
             // 更新报告状态
             ApiScenarioReport report = editReport(item);

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -439,7 +439,7 @@ public String run(RunCaseRequest request) {
         if (testCaseWithBLOBs != null && StringUtils.isNotEmpty(testCaseWithBLOBs.getRequest())) {
             try {
                 HashTree jmeterHashTree = this.generateHashTree(request,testCaseWithBLOBs);
-                String runMode = ApiRunMode.DELIMIT.name();
+                String runMode = ApiRunMode.DEFINITION.name();
                 // 调用执行方法
                 jMeterService.runDefinition(request.getReportId(), jmeterHashTree, request.getReportId(), runMode);
 

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG,DELIMIT,SCENARIO, API_PLAN, SCENARIO_PLAN,API,SCHEDULE_API_PLAN,SCHEDULE_SCENARIO_PLAN,SCHEDULE_PERFORMANCE_TEST
+    RUN, DEBUG, DEFINITION,SCENARIO, API_PLAN, SCENARIO_PLAN,SCENARIO_BATCH,API,SCHEDULE_API_PLAN,SCHEDULE_SCENARIO_PLAN,SCHEDULE_PERFORMANCE_TEST
 }

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -127,7 +127,7 @@ public void createSchedule(@RequestBody Schedule request) {
     }
 
     @PostMapping(value = "/genPerformanceTestJmx")
-    public JmxInfoDTO genPerformanceTestJmx(@RequestBody RunScenarioRequest runRequest) {
+    public JmxInfoDTO genPerformanceTestJmx(@RequestBody RunScenarioRequest runRequest) throws Exception {
         runRequest.setExecuteType(ExecuteType.Completed.name());
         return apiAutomationService.genPerformanceTestJmx(runRequest);
     }

File: backend/src/main/java/io/metersphere/job/sechedule/ApiScenarioTestJob.java
Patch:
@@ -30,13 +30,13 @@ public ApiScenarioTestJob() {
 
     @Override
     public void execute(JobExecutionContext context) throws JobExecutionException {
+
         JobKey jobKey = context.getTrigger().getJobKey();
         JobDataMap jobDataMap = context.getJobDetail().getJobDataMap();
         String resourceId = jobDataMap.getString("resourceId");
         this.userId = jobDataMap.getString("userId");
         this.expression = jobDataMap.getString("expression");
         this.projectID = jobDataMap.getString("projectId");
-
         if(resourceId!=null){
             scenarioIds = new ArrayList<>();
             scenarioIds.add(resourceId);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -39,6 +39,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         } else {
             processor.setName("JSR223Processor");
         }
+        if (config != null && StringUtils.isNotEmpty(config.getStep())) {
+            processor.setName(this.getName() + "<->" + config.getStep());
+        }
         processor.setProperty(TestElement.TEST_CLASS, JSR223Sampler.class.getName());
         processor.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("TestBeanGUI"));
         processor.setProperty("cacheKey", "true");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsLoopController.java
Patch:
@@ -61,7 +61,7 @@ private LoopController loopController() {
         loopController.setName(this.getLabel());
         loopController.setProperty(TestElement.TEST_CLASS, LoopController.class.getName());
         loopController.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("LoopControlPanel"));
-        loopController.setContinueForever(countController.isProceed());
+        // loopController.setContinueForever(countController.isProceed());
         loopController.setLoops(countController.getLoops());
         return loopController;
     }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -182,7 +182,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                 apiDefinitionExecResultService.saveApiResultByScheduleTask(testResult, ApiRunMode.SCHEDULE_API_PLAN.name());
                 List<String> testPlanReportIdList = new ArrayList<>();
                 testPlanReportIdList.add(debugReportId);
-                testPlanReportService.updateReport(testPlanReportIdList,ApiRunMode.SCHEDULE_API_PLAN.name());
+                testPlanReportService.updateReport(testPlanReportIdList,ApiRunMode.SCHEDULE_API_PLAN.name(),ReportTriggerMode.SCHEDULE.name());
             }else {
                 apiDefinitionExecResultService.saveApiResult(testResult, ApiRunMode.API_PLAN.name());
             }

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -16,6 +16,7 @@
 import io.metersphere.base.mapper.TestPlanApiScenarioMapper;
 import io.metersphere.base.mapper.ext.ExtApiScenarioReportMapper;
 import io.metersphere.commons.constants.ApiRunMode;
+import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.DateUtils;
@@ -215,7 +216,7 @@ public ApiScenarioReport updateSchedulePlanCase(TestResult result) {
         }
 
         TestPlanReportService testPlanReportService = CommonBeanFactory.getBean(TestPlanReportService.class);
-        testPlanReportService.updateReport(testPlanReportIdList,ApiRunMode.SCHEDULE_SCENARIO_PLAN.name());
+        testPlanReportService.updateReport(testPlanReportIdList,ApiRunMode.SCHEDULE_SCENARIO_PLAN.name(), ReportTriggerMode.SCHEDULE.name());
 
         return lastReport;
     }

File: backend/src/main/java/io/metersphere/commons/consumer/LoadTestConsumer.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.domain.LoadTestReport;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.config.KafkaProperties;
 import org.apache.kafka.clients.consumer.ConsumerRecord;
 import org.reflections8.Reflections;
 import org.springframework.kafka.annotation.KafkaListener;
@@ -21,6 +22,8 @@ public void consume(ConsumerRecord<?, String> record) {
         LoadTestReport loadTestReport = JSON.parseObject(record.value(), LoadTestReport.class);
         Reflections reflections = new Reflections(Application.class);
         Set<Class<? extends LoadTestFinishEvent>> subTypes = reflections.getSubTypesOf(LoadTestFinishEvent.class);
+        LogUtil.info("Execute Over: LoadTestConsumer");
+        System.out.println("Execute Over: LoadTestConsumer");
         subTypes.forEach(s -> {
             try {
                 CommonBeanFactory.getBean(s).execute(loadTestReport);

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeEvent.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.commons.constants.PerformanceTestStatus;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.consumer.LoadTestFinishEvent;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.i18n.Translator;
 import io.metersphere.notice.sender.NoticeModel;
@@ -70,6 +71,7 @@ public void sendNotice(LoadTestReport loadTestReport) {
 
     @Override
     public void execute(LoadTestReport loadTestReport) {
+        LogUtil.info("PerformanceNoticeEvent OVER:" + loadTestReport.getTriggerMode()+";"+loadTestReport.getStatus());
         if (StringUtils.equals(ReportTriggerMode.API.name(), loadTestReport.getTriggerMode())
                 || StringUtils.equals(ReportTriggerMode.SCHEDULE.name(), loadTestReport.getTriggerMode())) {
             if (StringUtils.equalsAny(loadTestReport.getStatus(),

File: backend/src/main/java/io/metersphere/track/dto/TestPlanDTO.java
Patch:
@@ -12,4 +12,5 @@ public class TestPlanDTO extends TestPlan {
     private String projectName;
     private String userName;
     private List<String> projectIds;
+    private String scheduleId;
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanReportDTO.java
Patch:
@@ -18,7 +18,7 @@ public class TestPlanReportDTO {
     private String name;
     private String testPlanName;
     private String creator;
-    private String createTime;
+    private long createTime;
     private String triggerMode;
 
     private TestCaseReportAdvanceStatusResultDTO executeResult;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -190,7 +190,7 @@ private void checkNameExist(SaveApiDefinitionRequest request) {
                     .andProtocolEqualTo(request.getProtocol()).andPathEqualTo(request.getPath())
                     .andProjectIdEqualTo(request.getProjectId()).andIdNotEqualTo(request.getId());
             Project project = projectMapper.selectByPrimaryKey(request.getProjectId());
-            if (apiDefinitionMapper.countByExample(example) > 0 && !project.getRepeatable()) {
+            if (apiDefinitionMapper.countByExample(example) > 0 && (project.getRepeatable() == null || !project.getRepeatable())) {
                 MSException.throwException(Translator.get("api_definition_url_not_repeating"));
             }
         } else {

File: backend/src/main/java/io/metersphere/base/domain/LoadTestWithBLOBs.java
Patch:
@@ -1,10 +1,11 @@
 package io.metersphere.base.domain;
 
-import java.io.Serializable;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
+import java.io.Serializable;
+
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
@@ -13,7 +14,5 @@ public class LoadTestWithBLOBs extends LoadTest implements Serializable {
 
     private String advancedConfiguration;
 
-    private String schedule;
-
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -114,6 +114,7 @@ public String runDebug(@RequestPart("request") RunDefinitionRequest request, @Re
 
     @PostMapping(value = "/run", consumes = {"multipart/form-data"})
     public String run(@RequestPart("request") RunDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
+        request.setReportId(null);
         return apiDefinitionService.run(request, bodyFiles);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -337,9 +337,6 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         if (StringUtils.isNotBlank(request.getType()) && StringUtils.equals(request.getType(), ApiRunMode.API_PLAN.name())) {
             runMode = ApiRunMode.API_PLAN.name();
         }
-
-        MsTestPlan testPlan = new MsTestPlan();
-        System.out.println(testPlan.getJmx(hashTree));
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), runMode);
         return request.getId();

File: backend/src/main/java/io/metersphere/job/sechedule/TestPlanTestJob.java
Patch:
@@ -46,7 +46,6 @@ public class TestPlanTestJob extends MsScheduleJob {
     private ApiTestCaseService apiTestCaseService;
     private TestPlanReportService testPlanReportService;
     private TestPlanLoadCaseService testPlanLoadCaseService;
-    private LoadReportStatusTask loadReportStatusTask;
 
     public TestPlanTestJob() {
         this.apiAutomationService = CommonBeanFactory.getBean(ApiAutomationService.class);
@@ -56,7 +55,6 @@ public TestPlanTestJob() {
         this.apiTestCaseService = CommonBeanFactory.getBean(ApiTestCaseService.class);
         this.testPlanReportService = CommonBeanFactory.getBean(TestPlanReportService.class);
         this.testPlanLoadCaseService = CommonBeanFactory.getBean(TestPlanLoadCaseService.class);
-        this.loadReportStatusTask = CommonBeanFactory.getBean(LoadReportStatusTask.class);
     }
 
     /**

File: backend/src/main/java/io/metersphere/security/ApiKeyFilter.java
Patch:
@@ -22,12 +22,12 @@ protected boolean onPreHandle(ServletRequest request, ServletResponse response,
                     if (LogUtil.getLogger().isDebugEnabled()) {
                         LogUtil.getLogger().debug("user auth: " + userId);
                     }
-                    SecurityUtils.getSubject().login(new MsUserToken(userId, ApiKeySessionHandler.random, "APIKEY"));
+                    SecurityUtils.getSubject().login(new MsUserToken(userId, ApiKeySessionHandler.random, "LOCAL"));
                 }
             } else {
                 if (ApiKeyHandler.isApiKeyCall(WebUtils.toHttp(request))) {
                     String userId = ApiKeyHandler.getUser(WebUtils.toHttp(request));
-                    SecurityUtils.getSubject().login(new MsUserToken(userId, ApiKeySessionHandler.random, "APIKEY"));
+                    SecurityUtils.getSubject().login(new MsUserToken(userId, ApiKeySessionHandler.random, "LOCAL"));
                 }
             }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -165,7 +165,7 @@ public void teardownTest(BackendListenerContext context) throws Exception {
             apiReportService.complete(testResult, report);
         } else if (StringUtils.equals(this.runMode, ApiRunMode.DELIMIT.name())) {
             // 调试操作，不需要存储结果
-            if (StringUtils.isBlank(debugReportId)) {
+            if (!StringUtils.isBlank(debugReportId)) {
                 apiDefinitionService.addResult(testResult);
             } else {
                 apiDefinitionService.addResult(testResult);

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -395,6 +395,9 @@ public String run(RunScenarioRequest request) {
         if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.SCENARIO_PLAN.name())) {
             runMode = ApiRunMode.SCENARIO_PLAN.name();
         }
+        if (StringUtils.isNotBlank(request.getRunMode()) && StringUtils.equals(request.getRunMode(), ApiRunMode.DELIMIT.name())) {
+            runMode = ApiRunMode.DELIMIT.name();
+        }
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), jmeterHashTree, request.getReportId(), runMode);
         return request.getId();

File: backend/src/main/java/io/metersphere/controller/RoleController.java
Patch:
@@ -1,7 +1,9 @@
 package io.metersphere.controller;
 
 import io.metersphere.base.domain.Role;
+import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.service.RoleService;
+import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -23,6 +25,7 @@ public List<Role> getRoleList(@PathVariable String sign) {
     }
 
     @GetMapping("/all")
+    @RequiresRoles(RoleConstants.ADMIN)
     public List<Role> getAllRole() {
         return roleService.getAllRole();
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -58,6 +58,8 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!this.isEnable()) {
             return;
         }
+        config.setStep(this.name);
+
         config.setEnableCookieShare(enableCookieShare);
         if (StringUtils.isNotEmpty(environmentId)) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);

File: backend/src/main/java/io/metersphere/api/jmeter/ScenarioResult.java
Patch:
@@ -22,7 +22,7 @@ public class ScenarioResult {
 
     private int passAssertions = 0;
 
-    private final List<RequestResult> requestResults = new ArrayList<>();
+    private List<RequestResult> requestResults = new ArrayList<>();
 
     public void addResponseTime(long time) {
         this.responseTime += time;

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -42,11 +42,13 @@ public boolean isKV() {
             return true;
         } else return false;
     }
+
     public boolean isOldKV() {
         if (StringUtils.equals(type, KV)) {
             return true;
         } else return false;
     }
+
     public List<KeyValue> getBodyParams(HTTPSamplerProxy sampler, String requestId) {
         List<KeyValue> body = new ArrayList<>();
         if (this.isKV() || this.isBinary()) {
@@ -65,7 +67,7 @@ public List<KeyValue> getBodyParams(HTTPSamplerProxy sampler, String requestId)
                     this.raw = JSONSchemaGenerator.getJson(com.alibaba.fastjson.JSON.toJSONString(this.getJsonSchema()));
                 }
             }
-            KeyValue keyValue = new KeyValue("", this.getRaw());
+            KeyValue keyValue = new KeyValue("", "JSON-SCHEMA", this.getRaw(), true, true);
             keyValue.setEnable(true);
             keyValue.setEncode(false);
             body.add(keyValue);

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -168,6 +168,9 @@ public UserDTO refreshSessionUser(@PathVariable String sign, @PathVariable Strin
 
     @GetMapping("/info/{userId}")
     public UserDTO getUserInfo(@PathVariable(value = "userId") String userId) {
+        if (!StringUtils.equals(userId, SessionUtils.getUserId())) {
+            MSException.throwException(Translator.get("not_authorized"));
+        }
         return userService.getUserInfo(userId);
     }
 

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeTask.java
Patch:
@@ -47,7 +47,7 @@ public void registerNoticeTask(LoadTestReportWithBLOBs loadTestReport) {
                 if (StringUtils.equalsAny(loadTestReportFromDatabase.getStatus(),
                         PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
                     sendNotice(loadTestReportFromDatabase);
-                    isRunning = false;
+                    return;
                 }
                 try {
                     //查询定时任务是否关闭

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -332,7 +332,7 @@ public void updateUser(User user) {
                 MSException.throwException(Translator.get("user_email_already_exists"));
             }
         }
-
+        user.setPassword(null);
         user.setUpdateTime(System.currentTimeMillis());
         userMapper.updateByPrimaryKeySelective(user);
         // 禁用用户之后，剔除在线用户

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -380,8 +380,9 @@ public List<TestPlanDTOWithMetric> listTestPlan(QueryTestPlanRequest request) {
         return testPlans;
     }
 
-    public List<TestPlanDTO> listTestPlanByProject(QueryTestPlanRequest request) {
-        return extTestPlanMapper.planList(request);
+    public List<TestPlanDTOWithMetric> listTestPlanByProject(QueryTestPlanRequest request) {
+        List<TestPlanDTOWithMetric> testPlans=extTestPlanMapper.list(request);
+        return testPlans;
     }
 
     public void testPlanRelevance(PlanCaseRelevanceRequest request) {

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiBatchRequest.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.Setter;
 
 import java.util.List;
+import java.util.Map;
 
 @Getter
 @Setter
@@ -24,7 +25,7 @@ public class ApiBatchRequest extends ApiDefinitionWithBLOBs {
      */
     private boolean isSelectAllDate;
 
-    private List<String> filters;
+    private Map<String, List<String>> filters;
 
     private String name;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionBatchProcessingRequest.java
Patch:
@@ -4,6 +4,7 @@
 import lombok.Setter;
 
 import java.util.List;
+import java.util.Map;
 
 /**
  * 接口定义模块-批量处理请求类
@@ -24,7 +25,7 @@ public class ApiDefinitionBatchProcessingRequest {
      */
     private boolean isSelectAllDate;
 
-    private List<String> filters;
+    private Map<String, List<String>> filters;
 
     private String name;
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiDefinitionRequest.java
Patch:
@@ -23,7 +23,7 @@ public class ApiDefinitionRequest {
     private String planId;
     private boolean recent = false;
     private List<OrderRequest> orders;
-    private List<String> filters;
+    private Map<String, List<String>> filters;
     private Map<String, Object> combine;
     private List<String> ids;
     private boolean isSelectThisWeedData = false;

File: backend/src/main/java/io/metersphere/api/dto/definition/SaveApiDefinitionRequest.java
Patch:
@@ -6,7 +6,6 @@
 import lombok.Getter;
 import lombok.Setter;
 
-import java.util.ArrayList;
 import java.util.List;
 
 @Setter
@@ -49,5 +48,5 @@ public class SaveApiDefinitionRequest {
 
     private List<String> bodyUploadIds;
 
-    private List<String> tags = new ArrayList<>();
+    private String tags;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/SaveApiTestCaseRequest.java
Patch:
@@ -4,7 +4,6 @@
 import lombok.Getter;
 import lombok.Setter;
 
-import java.util.ArrayList;
 import java.util.List;
 
 @Setter
@@ -37,5 +36,5 @@ public class SaveApiTestCaseRequest {
 
     private List<String> bodyUploadIds;
 
-    private List<String> tags = new ArrayList<>();
+    private String tags;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -365,8 +365,8 @@ public String run(RunDefinitionRequest request,ApiTestCaseWithBLOBs item) {
                 scenario.setHashTree(elements);
             }
             if (StringUtils.isNotEmpty(element.getString("variables"))) {
-                LinkedList<ScenarioVariable> variables = mapper.readValue(element.getString("variables"),
-                        new TypeReference<LinkedList<ScenarioVariable>>() {});
+                LinkedList<KeyValue> variables = mapper.readValue(element.getString("variables"),
+                        new TypeReference<LinkedList<KeyValue>>() {});
                 scenario.setVariables(variables);
             }
             group.setEnableCookieShare(scenario.isEnableCookieShare());

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -222,7 +222,7 @@ private ApiTestCase updateTest(SaveApiTestCaseRequest request) {
         test.setPriority(request.getPriority());
         test.setUpdateTime(System.currentTimeMillis());
         test.setDescription(request.getDescription());
-        test.setTags(JSON.toJSONString(new HashSet<>(request.getTags())));
+        test.setTags(request.getTags());
         apiTestCaseMapper.updateByPrimaryKeySelective(test);
         return test;
     }
@@ -244,7 +244,7 @@ private ApiTestCase createTest(SaveApiTestCaseRequest request) {
         test.setUpdateTime(System.currentTimeMillis());
         test.setDescription(request.getDescription());
         test.setNum(getNextNum(request.getApiDefinitionId()));
-        test.setTags(JSON.toJSONString(new HashSet<>(request.getTags())));
+        test.setTags(request.getTags());
         apiTestCaseMapper.insert(test);
         return test;
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanLoadCaseMapper.java
Patch:
@@ -8,5 +8,5 @@
 public interface ExtTestPlanLoadCaseMapper {
 
     List<String> selectIdsNotInPlan(@Param("projectId") String projectId, @Param("planId") String planId);
-    List<TestPlanLoadCaseDTO> selectTestPlanLoadCaseList(@Param("planId") String planId);
+    List<TestPlanLoadCaseDTO> selectTestPlanLoadCaseList(@Param("planId") String planId, @Param("projectId") String projectId);
 }

File: backend/src/main/java/io/metersphere/track/dto/TestPlanLoadCaseDTO.java
Patch:
@@ -9,4 +9,5 @@
 public class TestPlanLoadCaseDTO extends TestPlanLoadCase {
     private String userName;
     private String caseName;
+    private String projectName;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/EditTestCaseRequest.java
Patch:
@@ -16,5 +16,4 @@ public class EditTestCaseRequest extends TestCaseWithBLOBs {
      * 复制测试用例后，要进行复制的文件Id list
      */
     private List<String> fileIds = new ArrayList<>();
-    private List<String> caseTags = new ArrayList<>();
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -585,7 +585,6 @@ public String save(EditTestCaseRequest request, List<MultipartFile> files) {
             throw new IllegalArgumentException(Translator.get("file_cannot_be_null"));
         }
 
-        request.setTags(JSON.toJSONString(new HashSet<>(request.getCaseTags())));
         final TestCaseWithBLOBs testCaseWithBLOBs = addTestCase(request);
 
         // 复制用例时传入文件ID进行复制
@@ -642,7 +641,6 @@ public String edit(EditTestCaseRequest request, List<MultipartFile> files) {
             });
         }
 
-        request.setTags(JSON.toJSONString(new HashSet<>(request.getCaseTags())));
         editTestCase(request);
         return request.getId();
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -87,6 +87,8 @@ public class TestPlanService {
     private TestPlanApiCaseService testPlanApiCaseService;
     @Resource
     private TestPlanScenarioCaseService testPlanScenarioCaseService;
+    @Resource
+    private TestPlanLoadCaseService testPlanLoadCaseService;
 
     public synchronized void addTestPlan(AddTestPlanRequest testPlan) {
         if (getTestPlanByName(testPlan.getName()).size() > 0) {
@@ -234,6 +236,7 @@ private void editTestPlanProject(TestPlanDTO testPlan) {
             }
             testPlanApiCaseService.deleteByRelevanceProjectIds(testPlan.getId(), relevanceProjectIds);
             testPlanScenarioCaseService.deleteByRelevanceProjectIds(testPlan.getId(), relevanceProjectIds);
+            testPlanLoadCaseService.deleteByRelevanceProjectIds(testPlan.getId(), relevanceProjectIds);
         }
     }
 

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -46,7 +46,7 @@ public Pager<List<TestPlanDTOWithMetric>> list(@PathVariable int goPage, @PathVa
 
     /*jenkins测试计划*/
     @GetMapping("/list/all/{projectId}/{workspaceId}")
-    public List<TestPlanDTO> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
+    public List<TestPlanDTOWithMetric> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
         QueryTestPlanRequest request = new QueryTestPlanRequest();
         request.setWorkspaceId(workspaceId);
         request.setProjectId(projectId);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -379,8 +379,9 @@ public List<TestPlanDTOWithMetric> listTestPlan(QueryTestPlanRequest request) {
         return testPlans;
     }
 
-    public List<TestPlanDTO> listTestPlanByProject(QueryTestPlanRequest request) {
-        return extTestPlanMapper.planList(request);
+    public List<TestPlanDTOWithMetric> listTestPlanByProject(QueryTestPlanRequest request) {
+        List<TestPlanDTOWithMetric> testPlans=extTestPlanMapper.list(request);
+        return testPlans;
     }
 
     public void testPlanRelevance(PlanCaseRelevanceRequest request) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -265,7 +265,7 @@ private String getPostQueryParameters(String path) {
     private Arguments httpArguments(List<KeyValue> list) {
         Arguments arguments = new Arguments();
         list.stream().filter(KeyValue::isValid).filter(KeyValue::isEnable).forEach(keyValue -> {
-                    HTTPArgument httpArgument = new HTTPArgument(keyValue.getName(), keyValue.getValue() != null && keyValue.getValue().startsWith("@") ? ScriptEngineUtils.calculate(keyValue.getValue()) : keyValue.getValue());
+                    HTTPArgument httpArgument = new HTTPArgument(keyValue.getName(), StringUtils.isNotEmpty(keyValue.getValue()) && keyValue.getValue().startsWith("@") ? ScriptEngineUtils.calculate(keyValue.getValue()) : keyValue.getValue());
                     httpArgument.setAlwaysEncoded(keyValue.isEncode());
                     if (StringUtils.isNotBlank(keyValue.getContentType())) {
                         httpArgument.setContentType(keyValue.getContentType());

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -49,7 +49,7 @@ public KeyValue(String name, String value, String description, boolean required)
     }
 
     public boolean isValid() {
-        return (StringUtils.isNotBlank(name) || StringUtils.isNotBlank(value)) && !StringUtils.equalsIgnoreCase(type, "file");
+        return (StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value)) && !StringUtils.equalsIgnoreCase(type, "file");
     }
 
     public boolean isFile() {

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -134,6 +134,7 @@ private MsScenario createScenario(Scenario oldScenario) {
                 EnvironmentDTO dto = environmentDTOMap.get(request1.getDataSource());
                 if (dto != null) {
                     ((MsJDBCSampler) element).setEnvironmentId(dto.getEnvironmentId());
+                    ((MsJDBCSampler) element).setDataSourceId(dto.getDatabaseConfig().getId());
                     ((MsJDBCSampler) element).setDataSource(dto.getDatabaseConfig());
                 }
                 element.setType("JDBCSampler");

File: backend/src/main/java/io/metersphere/api/service/HistoricalDataUpgradeService.java
Patch:
@@ -122,9 +122,8 @@ private MsScenario createScenario(Scenario oldScenario) {
                 element.setType("DubboSampler");
             }
             if (request instanceof SqlRequest) {
-                element = new MsJDBCSampler();
-                SqlRequest request1 = (SqlRequest) request;
-                BeanUtils.copyBean(element, request1);
+                String requestJson = JSON.toJSONString(request);
+                element = JSON.parseObject(requestJson, MsJDBCSampler.class);
                 element.setType("JDBCSampler");
             }
             if (request instanceof TCPRequest) {

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -325,7 +325,7 @@ private RequestResult getRequestResult(SampleResult result) {
                 requestResult.addPassAssertions();
             }
             //xpath 提取错误会添加断言错误
-            if (StringUtils.isNotBlank(responseAssertionResult.getMessage()) && !responseAssertionResult.getMessage().contains("The required item type of the first operand of")) {
+            if (StringUtils.isBlank(responseAssertionResult.getMessage()) || !responseAssertionResult.getMessage().contains("The required item type of the first operand of")) {
                 responseResult.getAssertions().add(responseAssertionResult);
             }
         }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -325,7 +325,7 @@ private RequestResult getRequestResult(SampleResult result) {
                 requestResult.addPassAssertions();
             }
             //xpath 提取错误会添加断言错误
-            if (!responseAssertionResult.getMessage().contains("The required item type of the first operand of")) {
+            if (StringUtils.isNotBlank(responseAssertionResult.getMessage()) && !responseAssertionResult.getMessage().contains("The required item type of the first operand of")) {
                 responseResult.getAssertions().add(responseAssertionResult);
             }
         }

File: backend/src/main/java/io/metersphere/api/parse/Swagger3Parser.java
Patch:
@@ -333,6 +333,9 @@ private Object parseSchema(Schema schema, Set<String> refSet, Map<String, Schema
     }
 
     private Object parseSchemaProperties(Schema schema, Set<String> refSet, Map<String, Schema> infoMap) {
+        if (schema == null) {
+            return null;
+        }
         Map<String, Schema> properties = schema.getProperties();
         if (MapUtils.isEmpty(properties)) {
             return null;

File: backend/src/main/java/io/metersphere/dto/ProjectDTO.java
Patch:
@@ -17,4 +17,6 @@ public class ProjectDTO {
     private String tapdId;
     private String jiraKey;
     private String zentaoId;
+    private boolean repeatable;
+
 }

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataCn.java
Patch:
@@ -13,7 +13,7 @@
 public class TestCaseExcelDataCn extends TestCaseExcelData {
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 255)
     @ExcelProperty("用例名称")
     private String name;
 

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataTw.java
Patch:
@@ -13,7 +13,7 @@
 public class TestCaseExcelDataTw extends TestCaseExcelData {
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 255)
     @ExcelProperty("用例名稱")
     private String name;
 

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataUs.java
Patch:
@@ -14,7 +14,7 @@
 public class TestCaseExcelDataUs extends TestCaseExcelData {
 
     @NotBlank(message = "{cannot_be_null}")
-    @Length(max = 50)
+    @Length(max = 255)
     @ExcelProperty("Name")
     private String name;
 

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -88,7 +88,7 @@ private byte[] zipFilesToByteArray(EngineContext context) throws IOException {
         if (!CollectionUtils.isEmpty(testData)) {
             for (String k : testData.keySet()) {
                 String v = testData.get(k);
-                files.put("k", v.getBytes(StandardCharsets.UTF_8));
+                files.put(k, v.getBytes(StandardCharsets.UTF_8));
             }
         }
 
@@ -97,7 +97,7 @@ private byte[] zipFilesToByteArray(EngineContext context) throws IOException {
         if (!CollectionUtils.isEmpty(jarFiles)) {
             for (String k : jarFiles.keySet()) {
                 byte[] v = jarFiles.get(k);
-                files.put("k", v);
+                files.put(k, v);
             }
         }
 

File: backend/src/main/java/io/metersphere/performance/service/JmeterFileService.java
Patch:
@@ -88,7 +88,7 @@ private byte[] zipFilesToByteArray(EngineContext context) throws IOException {
         if (!CollectionUtils.isEmpty(testData)) {
             for (String k : testData.keySet()) {
                 String v = testData.get(k);
-                files.put("k", v.getBytes(StandardCharsets.UTF_8));
+                files.put(k, v.getBytes(StandardCharsets.UTF_8));
             }
         }
 
@@ -97,7 +97,7 @@ private byte[] zipFilesToByteArray(EngineContext context) throws IOException {
         if (!CollectionUtils.isEmpty(jarFiles)) {
             for (String k : jarFiles.keySet()) {
                 byte[] v = jarFiles.get(k);
-                files.put("k", v);
+                files.put(k, v);
             }
         }
 

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -341,8 +341,10 @@ public List<ExecutedCaseInfoDTO> faliureCaseAboutTestPlan(@PathVariable String p
     public List<TaskInfoResult> runningTask(@PathVariable String projectID) {
 
         List<TaskInfoResult> resultList = scheduleService.findRunningTaskInfoByProjectID(projectID);
+        int dataIndex = 1;
         for (TaskInfoResult taskInfo :
                 resultList) {
+            taskInfo.setIndex(dataIndex++);
             Date nextExecutionTime = CronUtils.getNextTriggerTime(taskInfo.getRule());
             if(nextExecutionTime!=null){
                 taskInfo.setNextExecutionTime(nextExecutionTime.getTime());

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -46,11 +46,11 @@ public Pager<List<TestPlanDTOWithMetric>> list(@PathVariable int goPage, @PathVa
 
     /*jenkins测试计划*/
     @GetMapping("/list/all/{projectId}/{workspaceId}")
-    public List<TestPlanDTO> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
+    public List<TestPlanDTOWithMetric> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
         QueryTestPlanRequest request = new QueryTestPlanRequest();
         request.setWorkspaceId(workspaceId);
         request.setProjectId(projectId);
-        return testPlanService.listTestPlanByProject(request);
+        return testPlanService.listTestPlan(request);
     }
 
     @PostMapping("/list/all")

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -57,7 +57,6 @@ public List<TestPlanCaseDTO> list(QueryTestPlanCaseRequest request) {
     }
     public List<TestPlanCaseDTO> listByPlanId(QueryTestPlanCaseRequest request) {
         List<TestPlanCaseDTO> list = extTestPlanTestCaseMapper.listByPlanId(request);
-
         return list;
     }
 

File: backend/src/main/java/io/metersphere/api/parse/Swagger2Parser.java
Patch:
@@ -97,8 +97,10 @@ private ApiDefinitionResult buildApiDefinition(String id, Operation operation, S
         String name = "";
         if (StringUtils.isNotBlank(operation.getSummary())) {
             name = operation.getSummary();
-        } else {
+        } else  if (StringUtils.isNotBlank(operation.getOperationId())) {
             name = operation.getOperationId();
+        } else {
+            name = path;
         }
         return buildApiDefinition(id, name, path, method);
     }

File: backend/src/main/java/io/metersphere/api/parse/Swagger3Parser.java
Patch:
@@ -129,8 +129,10 @@ private ApiDefinitionResult buildApiDefinition(String id, Operation operation, S
         String name = "";
         if (StringUtils.isNotBlank(operation.getSummary())) {
             name = operation.getSummary();
-        } else {
+        } else if (StringUtils.isNotBlank(operation.getOperationId())) {
             name = operation.getOperationId();
+        } else {
+            name = path;
         }
         return buildApiDefinition(id, name, path, method);
     }

File: backend/src/main/java/io/metersphere/api/parse/Swagger2Parser.java
Patch:
@@ -97,8 +97,10 @@ private ApiDefinitionResult buildApiDefinition(String id, Operation operation, S
         String name = "";
         if (StringUtils.isNotBlank(operation.getSummary())) {
             name = operation.getSummary();
-        } else {
+        } else  if (StringUtils.isNotBlank(operation.getOperationId())) {
             name = operation.getOperationId();
+        } else {
+            name = path;
         }
         return buildApiDefinition(id, name, path, method);
     }

File: backend/src/main/java/io/metersphere/api/parse/Swagger3Parser.java
Patch:
@@ -129,8 +129,10 @@ private ApiDefinitionResult buildApiDefinition(String id, Operation operation, S
         String name = "";
         if (StringUtils.isNotBlank(operation.getSummary())) {
             name = operation.getSummary();
-        } else {
+        } else if (StringUtils.isNotBlank(operation.getOperationId())) {
             name = operation.getOperationId();
+        } else {
+            name = path;
         }
         return buildApiDefinition(id, name, path, method);
     }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -15,4 +15,6 @@ public interface ExtTestPlanApiCaseMapper {
     List<String> getExecResultByPlanId(String planId);
 
     List<String> getIdsByPlanId(String planId);
+
+    List<String> getNotRelevanceCaseIds(@Param("planId")String planId, @Param("relevanceProjectIds")List<String> relevanceProjectIds);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -21,4 +21,6 @@ public interface ExtTestPlanScenarioCaseMapper {
     List<String> getExecResultByPlanId(String planId);
 
     List<String> getIdsByPlanId(String planId);
+
+    List<String> getNotRelevanceCaseIds(String planId, List<String> relevanceProjectIds);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/controller/ApiTestCaseController.java
Patch:
@@ -100,7 +100,7 @@ public void testPlanRelevance(@RequestBody ApiCaseRelevanceRequest request) {
     }
 
     @PostMapping(value = "/jenkins/run")
-    public String jenkinsRun(@RequestPart("request") RunCaseRequest request) {
+    public String jenkinsRun(@RequestBody RunCaseRequest request) {
         return apiTestCaseService.run(request);
     }
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -13,4 +13,6 @@ public interface ExtTestPlanApiCaseMapper {
     List<TestPlanApiCaseDTO> list(@Param("request") ApiTestCaseRequest request);
 
     List<String> getExecResultByPlanId(String planId);
+
+    List<String> getIdsByPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -19,4 +19,6 @@ public interface ExtTestPlanScenarioCaseMapper {
     List<ApiScenarioDTO> list(@Param("request") TestPlanScenarioRequest request);
 
     List<String> getExecResultByPlanId(String planId);
+
+    List<String> getIdsByPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/controller/TestPlanApiCaseController.java
Patch:
@@ -38,10 +38,10 @@ public Pager<List<ApiTestCaseDTO>> relevanceList(@PathVariable int goPage, @Path
         return PageUtils.setPageInfo(page, testPlanApiCaseService.relevanceList(request));
     }
 
-    @GetMapping("/delete/{planId}/{id}")
+    @GetMapping("/delete/{id}")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public int deleteTestCase(@PathVariable String planId, @PathVariable String id) {
-        return testPlanApiCaseService.delete(planId, id);
+    public int deleteTestCase(@PathVariable String id) {
+        return testPlanApiCaseService.delete(id);
     }
 
     @PostMapping("/batch/delete")

File: backend/src/main/java/io/metersphere/track/controller/TestPlanScenarioCaseController.java
Patch:
@@ -36,10 +36,10 @@ public Pager<List<ApiScenarioDTO>> relevanceList(@PathVariable int goPage, @Path
         return PageUtils.setPageInfo(page, testPlanScenarioCaseService.relevanceList(request));
     }
 
-    @GetMapping("/delete/{planId}/{id}")
+    @GetMapping("/delete/{id}")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public int deleteTestCase(@PathVariable String planId, @PathVariable String id) {
-        return testPlanScenarioCaseService.delete(planId, id);
+    public int deleteTestCase(@PathVariable String id) {
+        return testPlanScenarioCaseService.delete(id);
     }
 
     @PostMapping("/batch/delete")

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -287,6 +287,8 @@ public int deleteTestPlan(String planId) {
         TestPlan testPlan = getTestPlan(planId);
         deleteTestCaseByPlanId(planId);
         testPlanProjectService.deleteTestPlanProjectByPlanId(planId);
+        testPlanApiCaseService.deleteByPlanId(planId);
+        testPlanScenarioCaseService.deleteByPlanId(planId);
         int num = testPlanMapper.deleteByPrimaryKey(planId);
         List<String> relatedUsers = new ArrayList<>();
         AddTestPlanRequest testPlans = new AddTestPlanRequest();

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -15,6 +15,8 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<TestPlanCaseDTO> list(@Param("request") QueryTestPlanCaseRequest request);
 
+    List<TestPlanCaseDTO> listByPlanId(@Param("request") QueryTestPlanCaseRequest request);
+
     List<TestPlanCaseDTO> listByNode(@Param("request") QueryTestPlanCaseRequest request);
 
     List<TestPlanCaseDTO> listByNodes(@Param("request") QueryTestPlanCaseRequest request);

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG,DELIMIT,SCENARIO, API_PLAN, SCENARIO_PLAN
+    RUN, DEBUG,DELIMIT,SCENARIO, API_PLAN, SCENARIO_PLAN,API
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -57,7 +57,7 @@ public List<TestCaseDTO> list(@PathVariable String projectId) {
         return testCaseService.listTestCase(request);
     }
 
-
+   /*jenkins项目下所有接口和性能测试用例*/
     @GetMapping("/list/method/{projectId}")
     public List<TestCaseDTO> listByMethod(@PathVariable String projectId) {
         QueryTestCaseRequest request = new QueryTestCaseRequest();

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -30,13 +30,13 @@ public Pager<List<TestPlanCaseDTO>> getTestPlanCases(@PathVariable int goPage, @
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testPlanTestCaseService.list(request));
     }
-
+   /*jenkins测试计划下全部用例*/
     @GetMapping("/list/{planId}")
     public List<TestPlanCaseDTO> getTestPlanCaseByPlanId(@PathVariable String planId) {
         QueryTestPlanCaseRequest request = new QueryTestPlanCaseRequest();
         request.setPlanId(planId);
         request.setMethod("auto");
-        return testPlanTestCaseService.list(request);
+        return testPlanTestCaseService.listByPlanId(request);
     }
 
     @GetMapping("/list/node/{planId}/{nodePaths}")

File: backend/src/main/java/io/metersphere/api/dto/scenario/Body.java
Patch:
@@ -17,6 +17,7 @@ public class Body {
     private String format;
     private List<KeyValue> kvs;
     private List<KeyValue> binary;
+    private Object jsonSchema;
 
     public final static String KV = "KeyValue";
     public final static String FORM_DATA = "Form Data";

File: backend/src/main/java/io/metersphere/api/parse/MsParser.java
Patch:
@@ -41,7 +41,9 @@ private ApiDefinitionImport parseMsFormat(String testStr, ApiTestImportRequest i
         List<ApiDefinitionResult> data = apiDefinitionImport.getData();
         data.forEach(apiDefinition -> {
             String id = UUID.randomUUID().toString();
-//            apiDefinition.setModuleId(null);
+            if (StringUtils.isBlank(apiDefinition.getModulePath())) {
+                apiDefinition.setModuleId(null);
+            }
             parseModule(apiDefinition, importRequest.isSaved());
             apiDefinition.setId(id);
             apiDefinition.setProjectId(this.projectId);

File: backend/src/main/java/io/metersphere/api/parse/Swagger3Parser.java
Patch:
@@ -179,12 +179,12 @@ private String getDefaultStringValue(String val) {
 
     private void parseCookieParameters(Parameter parameter, List<KeyValue> headers) {
         CookieParameter cookieParameter = (CookieParameter) parameter;
-        addCookie(headers, cookieParameter.getName(), "", getDefaultStringValue(cookieParameter.getDescription()));
+        addCookie(headers, cookieParameter.getName(), "", getDefaultStringValue(cookieParameter.getDescription()), "", true);
     }
 
     private void parseHeaderParameters(Parameter parameter, List<KeyValue> headers) {
         HeaderParameter headerParameter = (HeaderParameter) parameter;
-        addHeader(headers, headerParameter.getName(), "", getDefaultStringValue(headerParameter.getDescription()));
+        addHeader(headers, headerParameter.getName(), "", getDefaultStringValue(headerParameter.getDescription()), "", true);
     }
 
     private HttpResponse parseResponse(ApiResponses responses) {

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -213,14 +213,16 @@ private void editTestPlanProject(TestPlanDTO testPlan) {
 
             // 关联的项目下的用例idList
             List<String> caseIds = null;
+            // 测试计划所属项目下的用例不解除关联
+            projectIds.add(testPlan.getProjectId());
             if (!CollectionUtils.isEmpty(projectIds)) {
                 TestCaseExample example = new TestCaseExample();
                 example.createCriteria().andProjectIdIn(projectIds);
                 List<TestCase> caseList = testCaseMapper.selectByExample(example);
                 caseIds = caseList.stream().map(TestCase::getId).collect(Collectors.toList());
             }
 
-            // 取消关联所属项目下的用例和计划的关系
+            // 取消关联项目下的用例和计划的关系
             TestPlanTestCaseExample testPlanTestCaseExample = new TestPlanTestCaseExample();
             TestPlanTestCaseExample.Criteria criteria = testPlanTestCaseExample.createCriteria().andPlanIdEqualTo(testPlan.getId());
             if (!CollectionUtils.isEmpty(caseIds)) {

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -134,4 +134,5 @@ public void editApiBath(@RequestBody ApiBatchRequest request) {
     public void testPlanRelevance(@RequestBody ApiCaseRelevanceRequest request) {
         apiDefinitionService.testPlanRelevance(request);
     }
+
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -101,7 +101,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
     public String getJmx(HashTree hashTree) {
         try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {
             SaveService.saveTree(hashTree, baos);
-            System.out.print(baos.toString());
             return baos.toString();
         } catch (Exception e) {
             e.printStackTrace();

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -66,7 +66,7 @@ public String getJmeterHome() {
         }
     }
 
-    private HashTree getHashTree(Object scriptWrapper) throws Exception {
+    public static HashTree getHashTree(Object scriptWrapper) throws Exception {
         Field field = scriptWrapper.getClass().getDeclaredField("testPlan");
         field.setAccessible(true);
         return (HashTree) field.get(scriptWrapper);

File: backend/src/main/java/io/metersphere/api/parse/old/JmeterDocumentParser.java
Patch:
@@ -28,7 +28,7 @@ public class JmeterDocumentParser {
     private final static String STRING_PROP = "stringProp";
     private final static String ARGUMENTS = "Arguments";
     private final static String COLLECTION_PROP = "collectionProp";
-    private final static String HTTP_SAMPLER_PROXY = "MsHTTPSamplerProxy";
+    private final static String HTTP_SAMPLER_PROXY = "HTTPSamplerProxy";
     private final static String ELEMENT_PROP = "elementProp";
 
     public static byte[] parse(byte[] source) {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.api.dto.automation.APIScenarioReportResult;
 import io.metersphere.api.dto.automation.ExecuteType;
+import io.metersphere.api.dto.automation.ScenarioStatus;
 import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.jmeter.ScenarioResult;
 import io.metersphere.api.jmeter.TestResult;
@@ -124,9 +125,9 @@ public ApiScenarioReport updatePlanCase(TestResult result) {
         TestPlanApiScenario testPlanApiScenario = testPlanApiScenarioMapper.selectByPrimaryKey(result.getTestId());
         ScenarioResult scenarioResult = result.getScenarios().get(0);
         if (scenarioResult.getError() > 0) {
-            testPlanApiScenario.setLastResult("Fail");
+            testPlanApiScenario.setLastResult(ScenarioStatus.Fail.name());
         } else {
-            testPlanApiScenario.setLastResult("Success");
+            testPlanApiScenario.setLastResult(ScenarioStatus.Success.name());
         }
         String passRate = new DecimalFormat("0%").format((float) scenarioResult.getSuccess() / (scenarioResult.getSuccess() + scenarioResult.getError()));
         testPlanApiScenario.setPassRate(passRate);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanApiCaseMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtTestPlanApiCaseMapper {
     void insertIfNotExists(@Param("request") TestPlanApiCase request);
 
     List<TestPlanApiCaseDTO> list(@Param("request") ApiTestCaseRequest request);
+
+    List<String> getExecResultByPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -18,4 +18,5 @@ public interface ExtTestPlanScenarioCaseMapper {
 
     List<ApiScenarioDTO> list(@Param("request") TestPlanScenarioRequest request);
 
+    List<String> getExecResultByPlanId(String planId);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -41,4 +41,6 @@ public interface ExtTestPlanTestCaseMapper {
     TestPlanCaseDTO get(String testPlanTestCaseId);
 
     void deleteByTestCaseID(String id);
+
+    List<String> getExecResultByPlanId(String planId);
 }

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -44,6 +44,7 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage
         Map<String, String> filterChainDefinitionMap = shiroFilterFactoryBean.getFilterChainDefinitionMap();
         ShiroUtils.loadBaseFilterChain(filterChainDefinitionMap);
         filterChainDefinitionMap.put("/display/info", "anon");
+        filterChainDefinitionMap.put("/favicon.ico", "anon");
         filterChainDefinitionMap.put("/display/file/**", "anon");
         filterChainDefinitionMap.put("/jmeter/download/**", "anon");
         filterChainDefinitionMap.put("/**", "apikey, authc");

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiModuleMapper.java
Patch:
@@ -8,5 +8,8 @@
 
 public interface ExtApiModuleMapper {
     int insertBatch(@Param("records") List<ApiModule> records);
+
     List<ApiModuleDTO> getNodeTreeByProjectId(@Param("projectId") String projectId, @Param("protocol") String protocol);
+
+    void updatePos(String id, Double pos);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioModuleMapper.java
Patch:
@@ -7,4 +7,6 @@
 
 public interface ExtApiScenarioModuleMapper {
     List<ApiScenarioModuleDTO> getNodeTreeByProjectId(@Param("projectId") String projectId);
+
+    void updatePos(String id, Double pos);
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -377,7 +377,6 @@ private void importApiTest(ApiTestImportRequest request, ApiDefinitionImport api
             if (item.getName().length() > 255) {
                 item.setName(item.getName().substring(0, 255));
             }
-            item.setModuleId(request.getModuleId());
             createTest(item, batchMapper);
             if (i % 300 == 0) {
                 sqlSession.flushStatements();

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -296,7 +296,6 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         if (StringUtils.isNotBlank(request.getType()) && StringUtils.equals(request.getType(), ApiRunMode.API_PLAN.name())) {
             runMode = ApiRunMode.API_PLAN.name();
         }
-        request.getTestElement().getJmx(hashTree);
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), runMode);
         return request.getId();

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -82,14 +82,14 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
                 ex.printStackTrace();
             }
         }
-        // 场景变量
+        // 场景变量和环境变量
         tree.add(arguments(config));
+
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {
                 el.toHashTree(tree, el.getHashTree(), config);
             }
         }
-
     }
 
     private Arguments arguments(ParameterConfig config) {

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioReportService.java
Patch:
@@ -96,14 +96,16 @@ public ApiScenarioReport updateReport(APIScenarioReportResult test) {
         report.setId(test.getId());
         report.setProjectId(test.getProjectId());
         report.setName(test.getName());
+        report.setScenarioName(test.getScenarioName());
+        report.setScenarioId(test.getScenarioId());
         report.setTriggerMode(test.getTriggerMode());
         report.setDescription(test.getDescription());
         report.setCreateTime(System.currentTimeMillis());
         report.setUpdateTime(System.currentTimeMillis());
         report.setStatus(test.getStatus());
         report.setUserId(test.getUserId());
         report.setExecuteType(test.getExecuteType());
-        apiScenarioReportMapper.updateByPrimaryKey(report);
+        apiScenarioReportMapper.updateByPrimaryKeySelective(report);
         return report;
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -38,4 +38,5 @@ public void addPassAssertions(int count) {
         this.passAssertions += count;
     }
 
+
 }

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -298,13 +298,15 @@ public String run(RunScenarioRequest request) {
         testPlan.setHashTree(new LinkedList<>());
         HashTree jmeterHashTree = new ListedHashTree();
         try {
+            boolean isFirst = true;
             for (ApiScenarioWithBLOBs item : apiScenarios) {
                 MsThreadGroup group = new MsThreadGroup();
                 group.setLabel(item.getName());
                 group.setName(UUID.randomUUID().toString());
                 // 批量执行的结果直接存储为报告
-                if (apiScenarios.size() == 1) {
+                if (isFirst) {
                     group.setName(request.getId());
+                    isFirst = false;
                 }
                 ObjectMapper mapper = new ObjectMapper();
                 mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -84,7 +84,6 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         }
         // 场景变量
         tree.add(arguments(config));
-
         if (CollectionUtils.isNotEmpty(hashTree)) {
             for (MsTestElement el : hashTree) {
                 el.toHashTree(tree, el.getHashTree(), config);

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -81,7 +81,7 @@ public List<ApiScenarioWithBLOBs> getApiScenarios(@RequestBody List<String> ids)
     @PostMapping(value = "/run/debug")
     public void runDebug(@RequestPart("request") RunDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
         request.setExecuteType(ExecuteType.Debug.name());
-        apiAutomationService.run(request, bodyFiles);
+        apiAutomationService.debugRun(request, bodyFiles);
     }
 
     @PostMapping(value = "/run")

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -273,7 +273,7 @@ private static void sendTask(ApiTestReport report, String reportUrl, TestResult
         Map<String, Object> paramMap = new HashMap<>();
         paramMap.put("testName", report.getName());
         paramMap.put("id", report.getId());
-        paramMap.put("type", "performance");
+        paramMap.put("type", "api");
         paramMap.put("url", baseSystemConfigDTO.getUrl());
         paramMap.put("status", report.getStatus());
         NoticeModel noticeModel = NoticeModel.builder()

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -19,6 +19,6 @@ public interface ExtApiDefinitionExecResultMapper {
 
     long countByTestCaseIDInProject(String projectId);
 
-    List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
+    List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("startTimestamp") long startTimestamp);
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -21,7 +21,6 @@
 import org.apache.jmeter.samplers.SampleResult;
 import org.apache.jmeter.visualizers.backend.AbstractBackendListenerClient;
 import org.apache.jmeter.visualizers.backend.BackendListenerContext;
-import org.python.antlr.ast.Str;
 import org.springframework.http.HttpMethod;
 
 import java.io.ByteArrayOutputStream;
@@ -270,6 +269,7 @@ private static void sendTask(ApiTestReport report, String reportUrl, TestResult
         paramMap.put("id", report.getId());
         paramMap.put("type", "performance");
         paramMap.put("url", baseSystemConfigDTO.getUrl());
+        paramMap.put("status", report.getStatus());
         NoticeModel noticeModel = NoticeModel.builder()
                 .successContext(successContext)
                 .successMailTemplate("ApiSuccessfulNotification")

File: backend/src/main/java/io/metersphere/notice/sender/NoticeModel.java
Patch:
@@ -16,7 +16,6 @@ public class NoticeModel {
     /**
      * 保存状态
      */
-    private String state;
     private String status;
     /**
      * Event

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeTask.java
Patch:
@@ -87,7 +87,7 @@ public void sendNotice(LoadTestReportWithBLOBs loadTestReport) {
         paramMap.put("testName", loadTestReport.getName());
         paramMap.put("id", loadTestReport.getId());
         paramMap.put("type", "performance");
-        paramMap.put("state", loadTestReport.getStatus());
+        paramMap.put("status", loadTestReport.getStatus());
         paramMap.put("url", baseSystemConfigDTO.getUrl());
         NoticeModel noticeModel = NoticeModel.builder()
                 .successContext(successContext)

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ApiDataCountDTO.java
Patch:
@@ -188,11 +188,11 @@ public void countScheduleExecute(List<ApiDataCountResult> allExecuteResult) {
         for (ApiDataCountResult countResult : allExecuteResult) {
             if("Success".equals(countResult.getGroupField())){
                 this.successCount+= countResult.getCountNumber();
-            }else if("Error".equals(countResult.getGroupField())){
+                this.executedCount+= countResult.getCountNumber();
+            }else if("Error".equals(countResult.getGroupField())||"Fail".equals(countResult.getGroupField())){
                 this.failedCount+= countResult.getCountNumber();
+                this.executedCount+= countResult.getCountNumber();
             }
-
-            this.executedCount+= countResult.getCountNumber();
         }
     }
 }

File: backend/src/main/java/io/metersphere/notice/sender/NoticeModel.java
Patch:
@@ -16,6 +16,7 @@ public class NoticeModel {
     /**
      * 保存状态
      */
+    private String state;
     private String status;
     /**
      * Event

File: backend/src/main/java/io/metersphere/performance/notice/PerformanceNoticeTask.java
Patch:
@@ -87,6 +87,7 @@ public void sendNotice(LoadTestReportWithBLOBs loadTestReport) {
         paramMap.put("testName", loadTestReport.getName());
         paramMap.put("id", loadTestReport.getId());
         paramMap.put("type", "performance");
+        paramMap.put("state", loadTestReport.getStatus());
         paramMap.put("url", baseSystemConfigDTO.getUrl());
         NoticeModel noticeModel = NoticeModel.builder()
                 .successContext(successContext)

File: backend/src/main/java/io/metersphere/service/SystemParameterService.java
Patch:
@@ -212,6 +212,8 @@ public BaseSystemConfigDTO getBaseInfo() {
     public void saveBaseInfo(List<SystemParameter> parameters) {
         SystemParameterExample example = new SystemParameterExample();
         parameters.forEach(param -> {
+            // 去掉路径最后的 /
+            param.setParamValue(StringUtils.removeEnd(param.getParamValue(), "/"));
             example.createCriteria().andParamKeyEqualTo(param.getParamKey());
             if (systemParameterMapper.countByExample(example) > 0) {
                 systemParameterMapper.updateByPrimaryKey(param);

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -268,7 +268,7 @@ public ApiDataCountDTO testSceneInfoCount(@PathVariable String projectId) {
         if(allCount!=0){
             float coverageRageNumber =(float)apiCountResult.getExecutionPassCount()*100/allCount;
             DecimalFormat df = new DecimalFormat("0.0");
-            apiCountResult.setCoverageRage(df.format(coverageRageNumber)+"%");
+            apiCountResult.setPassRage(df.format(coverageRageNumber)+"%");
         }
 
         return  apiCountResult;

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -44,21 +44,20 @@ public Pager<List<ApiDefinitionResult>> list(@PathVariable int goPage, @PathVari
     @PostMapping(value = "/create", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void create(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
-        checkPermissionService.checkReadOnlyUser();
+        checkPermissionService.checkProjectOwner(request.getProjectId());
         apiDefinitionService.create(request, bodyFiles);
     }
 
     @PostMapping(value = "/update", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void update(@RequestPart("request") SaveApiDefinitionRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
-        checkPermissionService.checkReadOnlyUser();
+        checkPermissionService.checkProjectOwner(request.getProjectId());
         apiDefinitionService.update(request, bodyFiles);
     }
 
     @GetMapping("/delete/{id}")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void delete(@PathVariable String id) {
-        checkPermissionService.checkReadOnlyUser();
         apiDefinitionService.delete(id);
     }
 

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceTestController.java
Patch:
@@ -75,7 +75,7 @@ public String save(
             @RequestPart("request") SaveTestPlanRequest request,
             @RequestPart(value = "file") List<MultipartFile> files
     ) {
-        checkPermissionService.checkReadOnlyUser();
+        checkPermissionService.checkProjectOwner(request.getProjectId());
         return performanceTestService.save(request, files);
     }
 
@@ -84,7 +84,6 @@ public String edit(
             @RequestPart("request") EditTestPlanRequest request,
             @RequestPart(value = "file", required = false) List<MultipartFile> files
     ) {
-        checkPermissionService.checkReadOnlyUser();
         checkPermissionService.checkPerformanceTestOwner(request.getId());
         return performanceTestService.edit(request, files);
     }
@@ -115,7 +114,6 @@ public String getJmxContent(@PathVariable String testId) {
 
     @PostMapping("/delete")
     public void delete(@RequestBody DeleteTestPlanRequest request) {
-        checkPermissionService.checkReadOnlyUser();
         checkPermissionService.checkPerformanceTestOwner(request.getId());
         performanceTestService.delete(request);
     }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -302,7 +302,7 @@ public ApiDataCountDTO scheduleTaskInfoCount(@PathVariable String projectId) {
         if(allCount!=0){
             float coverageRageNumber =(float)apiCountResult.getSuccessCount()*100/allCount;
             DecimalFormat df = new DecimalFormat("0.0");
-            apiCountResult.setCoverageRage(df.format(coverageRageNumber)+"%");
+            apiCountResult.setSuccessRage(df.format(coverageRageNumber)+"%");
         }
 
         return  apiCountResult;
@@ -354,6 +354,6 @@ public List<TaskInfoResult> runningTask(@PathVariable String projectID) {
     public void updateScheduleEnableByPrimyKey(@RequestBody ScheduleInfoRequest request) {
         Schedule schedule = scheduleService.getSchedule(request.getTaskID());
         schedule.setEnable(request.isEnable());
-        apiTestService.updateSchedule(schedule);
+        apiAutomationService.updateSchedule(schedule);
     }
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -55,7 +55,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (StringUtils.isNotEmpty(environmentId)) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);
             ApiTestEnvironmentWithBLOBs environment = environmentService.get(environmentId);
-            config.setConfig(JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class));
+            if (environment != null && environment.getConfig() != null) {
+                config.setConfig(JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class));
+            }
         }
         if (CollectionUtils.isNotEmpty(this.getVariables())) {
             config.setVariables(this.variables);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestReportMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ExtApiTestReportMapper {
 
     List<DashboardTestDTO> selectDashboardTests(@Param("workspaceId") String workspaceId, @Param("startTimestamp") long startTimestamp);
 
-    List<ApiDataCountResult> countByWorkspaceIdAndGroupGroupByExecuteResult(@Param("workspaceID") String workspaceID, @Param("group")String group);
+    List<ApiDataCountResult> countByProjectIdGroupByExecuteResult(String projectId);
 
-    long countByProjectIDAndCreateInThisWeek(@Param("workspaceID") String workspaceID, @Param("group")String group, @Param("startTime") long startTime, @Param("endTime")long endTime);
+    long countByProjectIDAndCreateInThisWeek(@Param("projectId") String projectId, @Param("startTime") long startTime, @Param("endTime")long endTime);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtScheduleMapper.java
Patch:
@@ -10,9 +10,9 @@
 public interface ExtScheduleMapper {
     List<ScheduleDao> list(@Param("request") QueryScheduleRequest request);
 
-    long countTaskByWorkspaceIdAndGroup(@Param("workspaceId") String workspaceId,@Param("group") String group);
+    long countTaskByProjectId(String workspaceId);
 
-    long countTaskByWorkspaceIdAndGroupAndCreateTimeRange(@Param("workspaceId")String workspaceId,@Param("group") String group, @Param("startTime") long startTime, @Param("endTime") long endTime);
+    long countTaskByProjectIdAndCreateTimeRange(@Param("projectId")String projectId, @Param("startTime") long startTime, @Param("endTime") long endTime);
 
-    List<TaskInfoResult> findRunningTaskInfoByWorkspaceID(String workspaceID);
+    List<TaskInfoResult> findRunningTaskInfoByProjectID(String workspaceID);
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -110,7 +110,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (useEnvironment != null) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);
             ApiTestEnvironmentWithBLOBs environment = environmentService.get(useEnvironment);
-            config.setConfig(JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class));
+            if (environment != null && environment.getConfig() != null) {
+                config.setConfig(JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class));
+            }
         }
         try {
             if (config != null && config.getConfig() != null) {

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -31,6 +31,7 @@ public class ApiAutomationController {
 
 
     @PostMapping("/list/{goPage}/{pageSize}")
+    @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
     public Pager<List<ApiScenarioDTO>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody ApiScenarioRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -29,8 +29,6 @@ public class ApiDefinitionExecResultService {
 
     public void saveApiResult(TestResult result, String type) {
         result.getScenarios().get(0).getRequestResults().forEach(item -> {
-            // 清理原始资源，每个执行 保留一条结果
-            extApiDefinitionExecResultMapper.deleteByResourceId(item.getName());
             ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
             saveResult.setId(UUID.randomUUID().toString());
             saveResult.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/api/dto/definition/RunDefinitionRequest.java
Patch:
@@ -15,6 +15,8 @@ public class RunDefinitionRequest {
 
     private String reportId;
 
+    private String name;
+
     private String type;
 
     private String projectId;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -246,6 +246,7 @@ public String run(RunScenarioRequest request) {
                             });
                     scenario.setVariables(variables);
                 }
+                group.setEnableCookieShare(scenario.isEnableCookieShare());
                 LinkedList<MsTestElement> scenarios = new LinkedList<>();
                 scenarios.add(scenario);
                 group.setHashTree(scenarios);

File: backend/src/main/java/io/metersphere/job/sechedule/ApiScenarioTestJob.java
Patch:
@@ -1,9 +1,7 @@
 package io.metersphere.job.sechedule;
 
-import io.metersphere.api.dto.SaveAPITestRequest;
 import io.metersphere.api.dto.automation.ExecuteType;
 import io.metersphere.api.dto.automation.RunScenarioRequest;
-import io.metersphere.api.service.APITestService;
 import io.metersphere.api.service.ApiAutomationService;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.constants.ScheduleGroup;
@@ -56,7 +54,7 @@ void businessExecute(JobExecutionContext context) {
         request.setId(id);
         request.setReportId(id);
         request.setProjectId(projectID);
-        request.setTriggerMode(ReportTriggerMode.MANUAL.name());
+        request.setTriggerMode(ReportTriggerMode.SCHEDULE.name());
         request.setExecuteType(ExecuteType.Completed.name());
         request.setScenarioIds(this.scenarioIds);
         request.setReportUserID(this.userId);

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -392,7 +392,7 @@ public ReferenceDTO getReference(ApiScenarioRequest request) {
         QueryTestPlanRequest planRequest = new QueryTestPlanRequest();
         planRequest.setApiId(request.getId());
         planRequest.setProjectId(request.getProjectId());
-        dto.setTestPlanList(extTestPlanMapper.selectReference(planRequest));
+        dto.setTestPlanList(extTestPlanMapper.selectTestPlanByRelevancy(planRequest));
         return dto;
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanScenarioCaseMapper.java
Patch:
@@ -7,6 +7,8 @@
 import io.metersphere.api.dto.definition.TestPlanApiCaseDTO;
 import io.metersphere.base.domain.TestPlanApiCase;
 import io.metersphere.base.domain.TestPlanApiScenario;
+import io.metersphere.track.dto.TestPlanDTO;
+import io.metersphere.track.request.testcase.QueryTestPlanRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -15,4 +17,5 @@ public interface ExtTestPlanScenarioCaseMapper {
     void insertIfNotExists(@Param("request") TestPlanApiScenario request);
 
     List<ApiScenarioDTO> list(@Param("request") TestPlanScenarioRequest request);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -40,4 +40,5 @@ public interface ExtTestPlanTestCaseMapper {
 
     TestPlanCaseDTO get(String testPlanTestCaseId);
 
+    void deleteByTestCaseID(String id);
 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -15,7 +15,7 @@ public class KeyValue {
     private List<BodyFile> files;
     private String description;
     private String contentType;
-    private boolean enable;
+    private boolean enable = true;
     private boolean encode = true;
     private boolean required;
 

File: backend/src/main/java/io/metersphere/api/controller/APIReportController.java
Patch:
@@ -11,7 +11,7 @@
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
-import io.metersphere.service.CheckOwnerService;
+import io.metersphere.service.CheckPermissionService;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
@@ -27,7 +27,7 @@ public class APIReportController {
     @Resource
     private APIReportService apiReportService;
     @Resource
-    private CheckOwnerService checkOwnerService;
+    private CheckPermissionService checkPermissionService;
 
     @GetMapping("recent/{count}")
     public List<APIReportResult> recentTest(@PathVariable int count) {
@@ -41,7 +41,7 @@ public List<APIReportResult> recentTest(@PathVariable int count) {
 
     @GetMapping("/list/{testId}/{goPage}/{pageSize}")
     public Pager<List<APIReportResult>> listByTestId(@PathVariable String testId, @PathVariable int goPage, @PathVariable int pageSize) {
-        checkOwnerService.checkApiTestOwner(testId);
+        checkPermissionService.checkApiTestOwner(testId);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, apiReportService.listByTestId(testId));
 

File: backend/src/main/java/io/metersphere/api/controller/ApiTestEnvironmentController.java
Patch:
@@ -3,7 +3,7 @@
 import io.metersphere.api.service.ApiTestEnvironmentService;
 import io.metersphere.base.domain.ApiTestEnvironmentWithBLOBs;
 import io.metersphere.commons.constants.RoleConstants;
-import io.metersphere.service.CheckOwnerService;
+import io.metersphere.service.CheckPermissionService;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
@@ -19,11 +19,11 @@ public class ApiTestEnvironmentController {
     @Resource
     ApiTestEnvironmentService apiTestEnvironmentService;
     @Resource
-    private CheckOwnerService checkOwnerService;
+    private CheckPermissionService checkPermissionService;
 
     @GetMapping("/list/{projectId}")
     public List<ApiTestEnvironmentWithBLOBs> list(@PathVariable String projectId) {
-        checkOwnerService.checkProjectOwner(projectId);
+        checkPermissionService.checkProjectOwner(projectId);
         return apiTestEnvironmentService.list(projectId);
     }
 

File: backend/src/main/java/io/metersphere/controller/ProjectController.java
Patch:
@@ -9,7 +9,7 @@
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.ProjectRequest;
 import io.metersphere.dto.ProjectDTO;
-import io.metersphere.service.CheckOwnerService;
+import io.metersphere.service.CheckPermissionService;
 import io.metersphere.service.ProjectService;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
@@ -24,7 +24,7 @@ public class ProjectController {
     @Resource
     private ProjectService projectService;
     @Resource
-    private CheckOwnerService checkOwnerService;
+    private CheckPermissionService checkPermissionService;
 
     @GetMapping("/listAll")
     public List<ProjectDTO> listAll() {
@@ -74,7 +74,7 @@ public Pager<List<ProjectDTO>> getProjectList(@PathVariable int goPage, @PathVar
     @GetMapping("/delete/{projectId}")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER,}, logical = Logical.OR)
     public void deleteProject(@PathVariable(value = "projectId") String projectId) {
-        checkOwnerService.checkProjectOwner(projectId);
+        checkPermissionService.checkProjectOwner(projectId);
         projectService.deleteProject(projectId);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/APIReportController.java
Patch:
@@ -60,6 +60,7 @@ public APIReportResult get(@PathVariable String reportId) {
     }
 
     @PostMapping("/delete")
+    @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void delete(@RequestBody DeleteAPIReportRequest request) {
         apiReportService.delete(request);
     }
@@ -70,6 +71,7 @@ public List<DashboardTestDTO> dashboardTests() {
     }
 
     @PostMapping("/batch/delete")
+    @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void deleteAPIReportBatch(@RequestBody DeleteAPIReportRequest reportRequest) {
         apiReportService.deleteAPIReportBatch(reportRequest);
     }

File: backend/src/main/java/io/metersphere/performance/controller/PerformanceReportController.java
Patch:
@@ -53,6 +53,7 @@ public Pager<List<ReportDTO>> getReportList(@PathVariable int goPage, @PathVaria
     }
 
     @PostMapping("/delete/{reportId}")
+    @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void deleteReport(@PathVariable String reportId) {
         reportService.deleteReport(reportId);
     }
@@ -130,6 +131,7 @@ public void downloadLog(@PathVariable String reportId, @PathVariable String reso
     }
 
     @PostMapping("/batch/delete")
+    @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER}, logical = Logical.OR)
     public void deleteReportBatch(@RequestBody DeleteReportRequest reportRequest) {
         reportService.deleteReportBatch(reportRequest);
     }

File: backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -25,5 +25,7 @@ public class RunScenarioRequest {
 
     private List<String> planCaseIds;
 
+    private String reportUserID;
+
     private List<String> scenarioIds;
 }

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ApiDataCountDTO.java
Patch:
@@ -149,9 +149,10 @@ public void countStatus(List<ApiDataCountResult> countResultList){
         for (ApiDataCountResult countResult :
                 countResultList) {
             if("Underway".equals(countResult.getGroupField())){
-                //未开始
+                //运行中
                 this.runningCount+= countResult.getCountNumber();
             }else if("Completed".equals(countResult.getGroupField())){
+                //已完成
                 this.finishedCount+= countResult.getCountNumber();
             }else if("Prepare".equals(countResult.getGroupField())){
                 this.notStartedCount+= countResult.getCountNumber();

File: backend/src/main/java/io/metersphere/commons/constants/ScheduleGroup.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ScheduleGroup {
-    API_TEST, PERFORMANCE_TEST
+    API_TEST, PERFORMANCE_TEST, API_SCENARIO_TEST
 }

File: backend/src/main/java/io/metersphere/job/sechedule/ApiTestJob.java
Patch:
@@ -9,7 +9,6 @@
 import org.quartz.JobKey;
 import org.quartz.TriggerKey;
 
-
 public class ApiTestJob extends MsScheduleJob {
 
     private APITestService apiTestService;
@@ -34,3 +33,4 @@ public static TriggerKey getTriggerKey(String testId) {
         return new TriggerKey(testId, ScheduleGroup.API_TEST.name());
     }
 }
+

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -20,6 +20,7 @@
 import io.metersphere.job.sechedule.ApiTestJob;
 import io.metersphere.job.sechedule.ScheduleManager;
 import org.apache.commons.lang3.StringUtils;
+import org.quartz.JobDetail;
 import org.quartz.JobKey;
 import org.quartz.SchedulerException;
 import org.quartz.TriggerKey;
@@ -64,6 +65,7 @@ public int editSchedule(Schedule schedule) {
     }
 
     public Schedule getScheduleByResource(String resourceId, String group) {
+
         ScheduleExample example = new ScheduleExample();
         example.createCriteria().andResourceIdEqualTo(resourceId).andGroupEqualTo(group);
         List<Schedule> schedules = scheduleMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ApiDataCountDTO.java
Patch:
@@ -149,9 +149,10 @@ public void countStatus(List<ApiDataCountResult> countResultList){
         for (ApiDataCountResult countResult :
                 countResultList) {
             if("Underway".equals(countResult.getGroupField())){
-                //未开始
+                //运行中
                 this.runningCount+= countResult.getCountNumber();
             }else if("Completed".equals(countResult.getGroupField())){
+                //已完成
                 this.finishedCount+= countResult.getCountNumber();
             }else if("Prepare".equals(countResult.getGroupField())){
                 this.notStartedCount+= countResult.getCountNumber();

File: backend/src/main/java/io/metersphere/api/dto/automation/SaveApiScenarioRequest.java
Patch:
@@ -13,7 +13,7 @@ public class SaveApiScenarioRequest {
 
     private String projectId;
 
-    private String tagId;
+    private String tags;
 
     private String userId;
 

File: backend/src/main/java/io/metersphere/api/dto/datacount/ApiDataCountResult.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.dataCount;
+package io.metersphere.api.dto.datacount;
 
 import lombok.Getter;
 import lombok.Setter;

File: backend/src/main/java/io/metersphere/api/dto/datacount/ExecutedCaseInfoResult.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.dataCount;
+package io.metersphere.api.dto.datacount;
 
 import lombok.Getter;
 import lombok.Setter;

File: backend/src/main/java/io/metersphere/api/dto/datacount/request/ScheduleInfoRequest.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.dataCount.request;
+package io.metersphere.api.dto.datacount.request;
 
 import lombok.Getter;
 import lombok.Setter;

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/ExecutedCaseInfoDTO.java
Patch:
@@ -1,4 +1,4 @@
-package io.metersphere.api.dto.dataCount.response;
+package io.metersphere.api.dto.datacount.response;
 
 import lombok.Getter;
 import lombok.Setter;

File: backend/src/main/java/io/metersphere/api/dto/datacount/response/TaskInfoResult.java
Patch:
@@ -1,8 +1,7 @@
-package io.metersphere.api.dto.dataCount.response;
+package io.metersphere.api.dto.datacount.response;
 
 import lombok.Getter;
 import lombok.Setter;
-import org.python.antlr.ast.Str;
 
 /**
  * 任务信息 返回DTO

File: backend/src/main/java/io/metersphere/api/service/APIReportService.java
Patch:
@@ -6,7 +6,7 @@
 import io.metersphere.api.dto.APIReportResult;
 import io.metersphere.api.dto.DeleteAPIReportRequest;
 import io.metersphere.api.dto.QueryAPIReportRequest;
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.jmeter.TestResult;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.ApiDataViewMapper;

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -4,7 +4,6 @@
 import com.alibaba.nacos.client.utils.StringUtils;
 import io.github.ningyu.jmeter.plugin.dubbo.sample.ProviderService;
 import io.metersphere.api.dto.*;
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
 import io.metersphere.api.dto.parse.ApiImport;
 import io.metersphere.api.dto.scenario.request.dubbo.RegistryCenter;
 import io.metersphere.api.jmeter.JMeterService;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.api.service;
 
 import com.alibaba.fastjson.JSON;
-import io.metersphere.api.dto.dataCount.ExecutedCaseInfoResult;
+import io.metersphere.api.dto.datacount.ExecutedCaseInfoResult;
 import io.metersphere.api.jmeter.TestResult;
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiDefinitionExecResultExample;

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -6,7 +6,7 @@
 import io.metersphere.api.dto.ApiTestImportRequest;
 import io.metersphere.api.dto.automation.ApiScenarioRequest;
 import io.metersphere.api.dto.automation.ReferenceDTO;
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.dto.definition.*;
 import io.metersphere.api.dto.definition.parse.ApiDefinitionImport;
 import io.metersphere.api.dto.scenario.request.RequestType;

File: backend/src/main/java/io/metersphere/base/domain/ApiScenario.java
Patch:
@@ -9,7 +9,7 @@ public class ApiScenario implements Serializable {
 
     private String projectId;
 
-    private String tagId;
+    private String tags;
 
     private String userId;
 

File: backend/src/main/java/io/metersphere/base/domain/TestResourcePool.java
Patch:
@@ -20,5 +20,7 @@ public class TestResourcePool implements Serializable {
 
     private Long updateTime;
 
+    private String image;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -1,9 +1,8 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.api.dto.dataCount.ExecutedCaseInfoResult;
+import io.metersphere.api.dto.datacount.ExecutedCaseInfoResult;
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import org.apache.ibatis.annotations.Param;
-import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -1,11 +1,10 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.dto.definition.ApiComputeResult;
 import io.metersphere.api.dto.definition.ApiDefinitionRequest;
 import io.metersphere.api.dto.definition.ApiDefinitionResult;
 import org.apache.ibatis.annotations.Param;
-import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -2,7 +2,7 @@
 
 import io.metersphere.api.dto.automation.ApiScenarioDTO;
 import io.metersphere.api.dto.automation.ApiScenarioRequest;
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.base.domain.ApiScenario;
 import io.metersphere.base.domain.ApiScenarioWithBLOBs;
 import org.apache.ibatis.annotations.Param;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestCaseMapper.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.api.dto.definition.ApiTestCaseDTO;
 import io.metersphere.api.dto.definition.ApiTestCaseRequest;
 import io.metersphere.api.dto.definition.ApiTestCaseResult;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestReportMapper.java
Patch:
@@ -2,11 +2,9 @@
 
 import io.metersphere.api.dto.APIReportResult;
 import io.metersphere.api.dto.QueryAPIReportRequest;
-import io.metersphere.api.dto.dataCount.ApiDataCountResult;
-import io.metersphere.dto.ApiReportDTO;
+import io.metersphere.api.dto.datacount.ApiDataCountResult;
 import io.metersphere.dto.DashboardTestDTO;
 import org.apache.ibatis.annotations.Param;
-import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtScheduleMapper.java
Patch:
@@ -1,10 +1,9 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.api.dto.dataCount.response.TaskInfoResult;
+import io.metersphere.api.dto.datacount.response.TaskInfoResult;
 import io.metersphere.controller.request.QueryScheduleRequest;
 import io.metersphere.dto.ScheduleDao;
 import org.apache.ibatis.annotations.Param;
-import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/performance/base/TestOverview.java
Patch:
@@ -11,5 +11,5 @@ public class TestOverview {
     private String avgResponseTime;
     private String responseTime90;
     private String avgBandwidth;
-
+    private String avgTransactions;
 }

File: backend/src/main/java/io/metersphere/service/ScheduleService.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.service;
 
 import com.alibaba.fastjson.JSON;
-import io.metersphere.api.dto.dataCount.response.TaskInfoResult;
+import io.metersphere.api.dto.datacount.response.TaskInfoResult;
 import io.metersphere.base.domain.Schedule;
 import io.metersphere.base.domain.ScheduleExample;
 import io.metersphere.base.domain.User;

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -304,6 +304,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         ParameterConfig config = new ParameterConfig();
         config.setConfig(envConfig);
         HashTree hashTree = request.getTestElement().generateHashTree(config);
+        request.getTestElement().getJmx(hashTree);
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), ApiRunMode.SCENARIO.name());
         createAPIScenarioReportResult(request.getId(), ReportTriggerMode.MANUAL.name(), request.getExecuteType(), request.getProjectId());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -290,7 +290,6 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         createBodyFiles(bodyUploadIds, bodyFiles);
 
         HashTree hashTree = request.getTestElement().generateHashTree();
-        request.getTestElement().getJmx(hashTree);
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), ApiRunMode.DELIMIT.name());
         return request.getId();

File: backend/src/main/java/io/metersphere/api/dto/dataCount/ExecutedCaseInfoResult.java
Patch:
@@ -15,4 +15,6 @@ public class ExecutedCaseInfoResult {
     private String testPlan;
     //失败次数
     private Long failureTimes;
+    //案例类型
+    private String caseType;
 }

File: backend/src/main/java/io/metersphere/api/dto/dataCount/response/ExecutedCaseInfoDTO.java
Patch:
@@ -17,4 +17,6 @@ public class ExecutedCaseInfoDTO {
     private String testPlan;
     //失败次数
     private Long failureTimes;
+    //案例类型
+    private String caseType;
 }

File: backend/src/main/java/io/metersphere/api/service/APIReportService.java
Patch:
@@ -6,6 +6,7 @@
 import io.metersphere.api.dto.APIReportResult;
 import io.metersphere.api.dto.DeleteAPIReportRequest;
 import io.metersphere.api.dto.QueryAPIReportRequest;
+import io.metersphere.api.dto.dataCount.ApiDataCountResult;
 import io.metersphere.api.jmeter.TestResult;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.ApiDataViewMapper;
@@ -224,7 +225,7 @@ public long countByWorkspaceIdAndGroupAndCreateInThisWeek(String workspaceID, St
         }
     }
 
-    public long countByWorkspaceIdAndGroup(String workspaceID, String group) {
-        return extApiTestReportMapper.countByWorkspaceIdAndGroup(workspaceID,group);
+    public List<ApiDataCountResult> countByWorkspaceIdAndGroupGroupByExecuteResult(String workspaceID, String group) {
+        return extApiTestReportMapper.countByWorkspaceIdAndGroupGroupByExecuteResult(workspaceID,group);
     }
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -15,6 +15,7 @@ public interface ExtApiDefinitionExecResultMapper {
 
     ApiDefinitionExecResult selectMaxResultByResourceIdAndType(String resourceId, String type);
 
+
     @Select({
             "SELECT count(id) AS countNumber FROM api_definition_exec_result ",
             "WHERE resource_id IN ( ",
@@ -50,4 +51,5 @@ public interface ExtApiDefinitionExecResultMapper {
             "limit #{limitNumber} "
     })
     List<ExecutedCaseInfoResult> findFaliureCaseInfoByProjectIDAndExecuteTimeAndLimitNumber(@Param("projectId") String projectId, @Param("startTimestamp") long startTimestamp, @Param("limitNumber") int limitNumber);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -64,8 +64,8 @@ public void removeToGc(@RequestBody List<String> ids) {
     }
 
     @PostMapping("/reduction")
-    public void reduction(@RequestBody List<String> ids) {
-        apiDefinitionService.reduction(ids);
+    public void reduction(@RequestBody List<SaveApiDefinitionRequest> requests) {
+        apiDefinitionService.reduction(requests);
     }
 
     @GetMapping("/get/{id}")

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseResult.java
Patch:
@@ -11,5 +11,6 @@ public class ApiTestCaseResult extends ApiTestCaseWithBLOBs {
     private String createUser;
     private String updateUser;
     private String execResult;
+    private Long execTime;
     private boolean active = false;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -101,7 +101,7 @@ public String getJmx(HashTree hashTree) {
             return baos.toString();
         } catch (Exception e) {
             e.printStackTrace();
-            LogUtil.warn("HashTree error, can't log jmx content");
+            LogUtil.warn("HashTree error, can't log jmx scenarioDefinition");
         }
         return null;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/ParameterConfig.java
Patch:
@@ -12,4 +12,7 @@ public class ParameterConfig {
     private EnvironmentConfig config;
     // 公共场景参数
     private List<KeyValue> variables;
+    // 公共Cookie
+    private boolean enableCookieShare;
+
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -162,6 +162,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         // 请求体
         if (!StringUtils.equals(this.getMethod(), "GET")) {
             List<KeyValue> bodyParams = this.body.getBodyParams(sampler, this.getId());
+            if (this.body.getType().equals("Form Data")) {
+                sampler.setDoMultipart(true);
+            }
             sampler.setArguments(httpArguments(bodyParams));
         }
 

File: backend/src/main/java/io/metersphere/api/parse/ApiImportAbstractParser.java
Patch:
@@ -141,7 +141,7 @@ protected void addHeader(List<KeyValue> headers, String key, String value, Strin
 //            }
 //        }
 //        if (!hasContentType) {
-//            headers.add(new KeyValue(key, value));
+//            headers.save(new KeyValue(key, value));
 //        }
 //        request.setHeaders(headers);
 //    }

File: backend/src/main/java/io/metersphere/api/parse/old/Swagger2Parser.java
Patch:
@@ -26,7 +26,6 @@
 import io.swagger.models.properties.RefProperty;
 import io.swagger.parser.SwaggerParser;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.jorphan.collections.HashTree;
 
 import java.io.InputStream;
 import java.util.*;
@@ -80,7 +79,7 @@ private List<ApiDefinitionResult> parseSwagger(ApiImport apiImport) {
                     headerManager.setName(res.getName() + "Postman MsHeaderManager");
                     headerManager.setHeaders(res.getHeaders());
 //                    HashTree tree = new HashTree();
-//                    tree.add(headerManager);
+//                    tree.save(headerManager);
                     LinkedList<MsTestElement> list = new LinkedList<>();
                     list.add(headerManager);
                     requestElement.setHashTree(list);

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -4,6 +4,7 @@
 import com.alibaba.nacos.client.utils.StringUtils;
 import io.github.ningyu.jmeter.plugin.dubbo.sample.ProviderService;
 import io.metersphere.api.dto.*;
+import io.metersphere.api.dto.dataCount.ApiDataCountResult;
 import io.metersphere.api.dto.parse.ApiImport;
 import io.metersphere.api.dto.scenario.request.dubbo.RegistryCenter;
 import io.metersphere.api.jmeter.JMeterService;

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinitionWithBLOBs.java
Patch:
@@ -9,6 +9,8 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class ApiDefinitionWithBLOBs extends ApiDefinition implements Serializable {
+    private String description;
+
     private String request;
 
     private String response;

File: backend/src/main/java/io/metersphere/base/domain/ApiTestCaseWithBLOBs.java
Patch:
@@ -9,6 +9,8 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class ApiTestCaseWithBLOBs extends ApiTestCase implements Serializable {
+    private String description;
+
     private String request;
 
     private String response;

File: backend/src/main/java/io/metersphere/base/mapper/ApiDefinitionMapper.java
Patch:
@@ -3,9 +3,8 @@
 import io.metersphere.base.domain.ApiDefinition;
 import io.metersphere.base.domain.ApiDefinitionExample;
 import io.metersphere.base.domain.ApiDefinitionWithBLOBs;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface ApiDefinitionMapper {
     long countByExample(ApiDefinitionExample example);

File: backend/src/main/java/io/metersphere/base/mapper/ApiTestCaseMapper.java
Patch:
@@ -3,9 +3,8 @@
 import io.metersphere.base.domain.ApiTestCase;
 import io.metersphere.base.domain.ApiTestCaseExample;
 import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface ApiTestCaseMapper {
     long countByExample(ApiTestCaseExample example);

File: backend/src/main/java/io/metersphere/base/mapper/ApiTestReportMapper.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.base.domain.ApiTestReportExample;
 import java.util.List;
 import org.apache.ibatis.annotations.Param;
+import org.apache.ibatis.annotations.Select;
 
 public interface ApiTestReportMapper {
     long countByExample(ApiTestReportExample example);
@@ -27,4 +28,5 @@ public interface ApiTestReportMapper {
     int updateByPrimaryKeySelective(ApiTestReport record);
 
     int updateByPrimaryKey(ApiTestReport record);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/config/JmeterProperties.java
Patch:
@@ -16,4 +16,5 @@ public class JmeterProperties {
 
     private String home;
 
+    private String heap = "-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m";
 }

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -45,6 +45,7 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage
         ShiroUtils.loadBaseFilterChain(filterChainDefinitionMap);
         filterChainDefinitionMap.put("/display/info", "anon");
         filterChainDefinitionMap.put("/display/file/**", "anon");
+        filterChainDefinitionMap.put("/jmeter/download/**", "anon");
         filterChainDefinitionMap.put("/**", "apikey, authc");
         return shiroFilterFactoryBean;
     }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -24,6 +24,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         final HashTree groupTree = tree.add(getThreadGroup());
         if ((config != null && config.isEnableCookieShare()) || enableCookieShare) {
             CookieManager cookieManager = new CookieManager();
+            cookieManager.setProperty(TestElement.TEST_CLASS, CookieManager.class.getName());
+            cookieManager.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("CookiePanel"));
+            cookieManager.setEnabled(true);
             cookieManager.setName("CookieManager");
             cookieManager.setClearEachIteration(false);
             cookieManager.setControlledByThread(false);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/sampler/MsHTTPSamplerProxy.java
Patch:
@@ -162,6 +162,9 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         // 请求体
         if (!StringUtils.equals(this.getMethod(), "GET")) {
             List<KeyValue> bodyParams = this.body.getBodyParams(sampler, this.getId());
+            if (this.body.getType().equals("Form Data")) {
+                sampler.setDoMultipart(true);
+            }
             sampler.setArguments(httpArguments(bodyParams));
         }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -280,7 +280,7 @@ public String run(RunScenarioRequest request) {
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), jmeterTestPlanHashTree, request.getReportId(), ApiRunMode.SCENARIO.name());
 
-        createAPIReportResult(request.getId(), request.getTriggerMode() == null ? ReportTriggerMode.API.name() : request.getTriggerMode());
+        createAPIReportResult(request.getId(), request.getTriggerMode() == null ? ReportTriggerMode.MANUAL.name() : request.getTriggerMode());
         return request.getId();
     }
 
@@ -303,6 +303,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         ParameterConfig config = new ParameterConfig();
         config.setConfig(envConfig);
         HashTree hashTree = request.getTestElement().generateHashTree(config);
+        request.getTestElement().getJmx(hashTree);
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), ApiRunMode.SCENARIO.name());
         createAPIReportResult(request.getId(), ReportTriggerMode.MANUAL.name());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -201,6 +201,7 @@ private ApiDefinition updateTest(SaveApiDefinitionRequest request) {
         test.setName(request.getName());
         test.setPath(request.getPath());
         test.setProjectId(request.getProjectId());
+        request.getRequest().setId(request.getId());
         test.setRequest(JSONObject.toJSONString(request.getRequest()));
         test.setUpdateTime(System.currentTimeMillis());
         test.setStatus(request.getStatus());
@@ -227,6 +228,7 @@ private ApiDefinition createTest(SaveApiDefinitionRequest request) {
         test.setPath(request.getPath());
         test.setModuleId(request.getModuleId());
         test.setProjectId(request.getProjectId());
+        request.getRequest().setId(request.getId());
         test.setRequest(JSONObject.toJSONString(request.getRequest()));
         test.setCreateTime(System.currentTimeMillis());
         test.setUpdateTime(System.currentTimeMillis());

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -59,8 +59,8 @@ public void removeToGc(@RequestBody List<String> ids) {
     }
 
     @PostMapping("/reduction")
-    public void reduction(@RequestBody List<String> ids) {
-        apiAutomationService.reduction(ids);
+    public void reduction(@RequestBody List<SaveApiScenarioRequest> requests) {
+        apiAutomationService.reduction(requests);
     }
 
     @GetMapping("/getApiScenario/{id}")

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -63,8 +63,8 @@ public void removeToGc(@RequestBody List<String> ids) {
     }
 
     @PostMapping("/reduction")
-    public void reduction(@RequestBody List<String> ids) {
-        apiDefinitionService.reduction(ids);
+    public void reduction(@RequestBody List<SaveApiDefinitionRequest> requests) {
+        apiDefinitionService.reduction(requests);
     }
 
     @GetMapping("/get/{id}")

File: backend/src/main/java/io/metersphere/base/mapper/ApiDefinitionExecResultMapper.java
Patch:
@@ -7,7 +7,6 @@
 import org.apache.ibatis.annotations.Select;
 
 import java.util.List;
-import org.apache.ibatis.annotations.Param;
 
 public interface ApiDefinitionExecResultMapper {
     long countByExample(ApiDefinitionExecResultExample example);

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseResult.java
Patch:
@@ -11,5 +11,6 @@ public class ApiTestCaseResult extends ApiTestCaseWithBLOBs {
     private String createUser;
     private String updateUser;
     private String execResult;
+    private Long execTime;
     private boolean active = false;
 }

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionExecResultService.java
Patch:
@@ -22,6 +22,7 @@ public void saveApiResult(TestResult result) {
         result.getScenarios().get(0).getRequestResults().forEach(item -> {
             ApiDefinitionExecResult saveResult = new ApiDefinitionExecResult();
             saveResult.setId(UUID.randomUUID().toString());
+            saveResult.setCreateTime(System.currentTimeMillis());
             saveResult.setUserId(Objects.requireNonNull(SessionUtils.getUser()).getId());
             saveResult.setName(item.getName());
             saveResult.setResourceId(item.getName());

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -288,6 +288,7 @@ public String run(RunDefinitionRequest request, List<MultipartFile> bodyFiles) {
         createBodyFiles(bodyUploadIds, bodyFiles);
 
         HashTree hashTree = request.getTestElement().generateHashTree();
+        request.getTestElement().getJmx(hashTree);
         // 调用执行方法
         jMeterService.runDefinition(request.getId(), hashTree, request.getReportId(), ApiRunMode.DELIMIT.name());
         return request.getId();

File: backend/src/main/java/io/metersphere/base/domain/ApiDefinitionExecResult.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiDefinitionExecResult implements Serializable {
@@ -20,6 +19,8 @@ public class ApiDefinitionExecResult implements Serializable {
 
     private Long endTime;
 
+    private Long createTime;
+
     private String content;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/base/mapper/ApiDefinitionExecResultMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.ApiDefinitionExecResult;
 import io.metersphere.base.domain.ApiDefinitionExecResultExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface ApiDefinitionExecResultMapper {
     long countByExample(ApiDefinitionExecResultExample example);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -67,6 +67,7 @@ private ResponseAssertion responseAssertion(MsAssertionRegex assertionRegex) {
         assertion.setProperty(TestElement.TEST_CLASS, ResponseAssertion.class.getName());
         assertion.setProperty(TestElement.GUI_CLASS, SaveService.aliasToClass("AssertionGui"));
         assertion.setAssumeSuccess(assertionRegex.isAssumeSuccess());
+        assertion.addTestString(assertionRegex.getExpression());
         assertion.setToContainsType();
         switch (assertionRegex.getSubject()) {
             case "Response Code":

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -51,6 +51,7 @@ public List<APITestResult> recentTest(@PathVariable int count) {
     public Pager<List<APITestResult>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryAPITestRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         request.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
+        request.setProjectId(SessionUtils.getCurrentProjectId());
         return PageUtils.setPageInfo(page, apiTestService.list(request));
     }
 

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -68,7 +68,6 @@ public class APITestService {
 
     public List<APITestResult> list(QueryAPITestRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
-        request.setProjectId(SessionUtils.getCurrentProjectId());
         return extApiTestMapper.list(request);
     }
 

File: backend/src/main/java/io/metersphere/api/controller/ApiAutomationController.java
Patch:
@@ -34,8 +34,8 @@ public Pager<List<ApiScenarioDTO>> list(@PathVariable int goPage, @PathVariable
     }
 
     @PostMapping(value = "/create")
-    public void create(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
-        apiAutomationService.create(request, bodyFiles);
+    public ApiScenario create(@RequestPart("request") SaveApiScenarioRequest request, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
+        return apiAutomationService.create(request, bodyFiles);
     }
 
     @PostMapping(value = "/update")

File: backend/src/main/java/io/metersphere/api/controller/ApiDefinitionController.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.api.dto.automation.ApiScenarioRequest;
 import io.metersphere.api.dto.automation.ReferenceDTO;
 import io.metersphere.api.dto.definition.*;
+import io.metersphere.api.dto.definition.parse.ApiDefinitionImport;
 import io.metersphere.api.service.ApiDefinitionService;
 import io.metersphere.base.domain.ApiDefinition;
 import io.metersphere.commons.constants.RoleConstants;
@@ -93,7 +94,7 @@ public APIReportResult getReport(@PathVariable String testId) {
 
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public String testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ApiTestImportRequest request) {
+    public ApiDefinitionImport testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ApiTestImportRequest request) {
         return apiDefinitionService.apiTestImport(file, request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/ApiTestImportRequest.java
Patch:
@@ -13,5 +13,7 @@ public class ApiTestImportRequest {
     private String projectId;
     private String platform;
     private Boolean useEnvironment;
+    // 来自场景的导入不需要存储
+    private boolean saved = true;
     private String swaggerUrl;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionExecResultMapper.java
Patch:
@@ -6,7 +6,6 @@ public interface ExtApiDefinitionExecResultMapper {
 
     void deleteByResourceId(String id);
 
-    ApiDefinitionExecResult selectByResourceId(String resourceId);
-
+    ApiDefinitionExecResult selectMaxResultByResourceId(String resourceId);
 
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -76,8 +76,9 @@ public abstract class MsTestElement {
     private String index;
     @JSONField(ordinal = 8)
     private boolean enable = true;
-
     @JSONField(ordinal = 9)
+    private String refType ;
+    @JSONField(ordinal = 10)
     private LinkedList<MsTestElement> hashTree;
 
     // 公共环境逐层传递，如果自身有环境 以自身引用环境为准否则以公共环境作为请求环境

File: backend/src/main/java/io/metersphere/api/dto/definition/request/configurations/MsHeaderManager.java
Patch:
@@ -22,7 +22,7 @@
 public class MsHeaderManager extends MsTestElement {
 
     private String type = "HeaderManager";
-    @JSONField(ordinal = 10)
+    @JSONField(ordinal = 20)
     private List<KeyValue> headers;
 
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -20,10 +20,10 @@
 public class MsJSR223Processor extends MsTestElement {
     private String type = "JSR223Processor";
 
-    @JSONField(ordinal = 10)
+    @JSONField(ordinal = 20)
     private String script;
 
-    @JSONField(ordinal = 11)
+    @JSONField(ordinal = 21)
     private String scriptLanguage;
 
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -20,10 +20,10 @@
 public class MsJSR223PostProcessor extends MsTestElement {
     private String type = "JSR223PostProcessor";
 
-    @JSONField(ordinal = 10)
+    @JSONField(ordinal = 20)
     private String script;
 
-    @JSONField(ordinal = 11)
+    @JSONField(ordinal = 21)
     private String scriptLanguage;
 
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -20,10 +20,10 @@
 public class MsJSR223PreProcessor extends MsTestElement {
     private String type = "JSR223PreProcessor";
 
-    @JSONField(ordinal = 10)
+    @JSONField(ordinal = 20)
     private String script;
 
-    @JSONField(ordinal = 11)
+    @JSONField(ordinal = 21)
     private String scriptLanguage;
 
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/timer/MsConstantTimer.java
Patch:
@@ -19,9 +19,9 @@
 @JSONType(typeName = "ConstantTimer")
 public class MsConstantTimer extends MsTestElement {
     private String type = "ConstantTimer";
-    @JSONField(ordinal = 10)
+    @JSONField(ordinal = 20)
     private String id;
-    @JSONField(ordinal = 11)
+    @JSONField(ordinal = 21)
     private String delay;
 
     public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {

File: backend/src/main/java/io/metersphere/api/service/ApiTestCaseService.java
Patch:
@@ -52,7 +52,7 @@ public List<ApiTestCaseResult> list(ApiTestCaseRequest request) {
         return extApiTestCaseMapper.list(request);
     }
 
-    public ApiTestCase get(String id) {
+    public ApiTestCaseWithBLOBs get(String id) {
         return apiTestCaseMapper.selectByPrimaryKey(id);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -248,7 +248,7 @@ public String run(RunScenarioRequest request) {
                 JSONObject element = JSON.parseObject(item.getScenarioDefinition());
                 MsScenario scenario = JSONObject.parseObject(item.getScenarioDefinition(), MsScenario.class);
                 // 多态JSON普通转换会丢失内容，需要通过 ObjectMapper 获取
-                if (StringUtils.isNotEmpty(element.getString("hashTree"))) {
+                if (element!= null && StringUtils.isNotEmpty(element.getString("hashTree"))) {
                     LinkedList<MsTestElement> elements = mapper.readValue(element.getString("hashTree"),
                             new TypeReference<LinkedList<MsTestElement>>() {
                             });

File: backend/src/main/java/io/metersphere/service/NodeResourcePoolService.java
Patch:
@@ -28,7 +28,7 @@
 public class NodeResourcePoolService {
     private final static String nodeControllerUrl = "http://%s:%s/status";
 
-    @Resource
+    @Resource(name = "restTemplateWithTimeOut")
     private RestTemplate restTemplateWithTimeOut;
     @Resource
     private TestResourceMapper testResourceMapper;

File: backend/src/main/java/io/metersphere/api/dto/automation/ApiScenarioDTO.java
Patch:
@@ -4,11 +4,13 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class ApiScenarioDTO extends ApiScenario {
 
     private String projectName;
     private String userName;
-    private String tagName;
+    private List<String> tagNames;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiDefinitionMapper.java
Patch:
@@ -15,4 +15,6 @@ public interface ExtApiDefinitionMapper {
 
     int removeToGc(@Param("ids") List<String> ids);
 
+    int reduction(@Param("ids") List<String> ids);
+
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiScenarioMapper.java
Patch:
@@ -16,4 +16,7 @@ public interface ExtApiScenarioMapper {
 
     List<ApiScenario> selectReference(@Param("request") ApiScenarioRequest request);
 
+    int removeToGc(@Param("ids") List<String> ids);
+
+    int reduction(@Param("ids") List<String> ids);
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsScenario.java
Patch:
@@ -17,6 +17,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.jmeter.save.SaveService;
 import org.apache.jmeter.testelement.TestElement;
 import org.apache.jorphan.collections.HashTree;
@@ -47,7 +48,7 @@ public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterCon
         if (!this.isEnable()) {
             return;
         }
-        if (environmentId != null) {
+        if (StringUtils.isNotEmpty(environmentId)) {
             ApiTestEnvironmentService environmentService = CommonBeanFactory.getBean(ApiTestEnvironmentService.class);
             ApiTestEnvironmentWithBLOBs environment = environmentService.get(environmentId);
             config.setConfig(JSONObject.parseObject(environment.getConfig(), EnvironmentConfig.class));

File: backend/src/main/java/io/metersphere/api/service/ApiAutomationService.java
Patch:
@@ -124,7 +124,7 @@ public void create(SaveApiScenarioRequest request, List<MultipartFile> bodyFiles
         scenario.setDescription(request.getDescription());
         apiScenarioMapper.insert(scenario);
 
-        List<String> bodyUploadIds = new ArrayList<>(request.getBodyUploadIds());
+        List<String> bodyUploadIds = request.getBodyUploadIds();
         apiDefinitionService.createBodyFiles(bodyUploadIds, bodyFiles);
     }
 

File: backend/src/main/java/io/metersphere/api/service/ApiScenarioModuleService.java
Patch:
@@ -21,11 +21,10 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
+import javax.annotation.Resource;
 import java.util.*;
 import java.util.stream.Collectors;
 
-import javax.annotation.Resource;
-
 @Service
 @Transactional(rollbackFor = Exception.class)
 public class ApiScenarioModuleService {

File: backend/src/main/java/io/metersphere/api/service/APIReportService.java
Patch:
@@ -17,6 +17,7 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.commons.utils.ServiceUtils;
+import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.i18n.Translator;
 import org.apache.commons.lang3.StringUtils;
@@ -48,11 +49,13 @@ public class APIReportService {
 
     public List<APIReportResult> list(QueryAPIReportRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
+        request.setProjectId(SessionUtils.getCurrentProjectId());
         return extApiTestReportMapper.list(request);
     }
 
     public List<APIReportResult> recentTest(QueryAPIReportRequest request) {
         request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
+        request.setProjectId(SessionUtils.getCurrentProjectId());
         return extApiTestReportMapper.list(request);
     }
 

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -43,8 +43,8 @@ public JavaMailSenderImpl getMailSender() {
                     javaMailSender.setPassword(EncryptUtils.aesDecrypt(p.getParamValue()).toString());
                     break;
                 case "smtp.ssl":
-                    javaMailSender.setProtocol("smtps");
                     if (BooleanUtils.toBoolean(p.getParamValue())) {
+                        javaMailSender.setProtocol("smtps");
                         props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                     }
                     break;

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -43,8 +43,8 @@ public JavaMailSenderImpl getMailSender() {
                     javaMailSender.setPassword(EncryptUtils.aesDecrypt(p.getParamValue()).toString());
                     break;
                 case "smtp.ssl":
-                    javaMailSender.setProtocol("smtps");
                     if (BooleanUtils.toBoolean(p.getParamValue())) {
+                        javaMailSender.setProtocol("smtps");
                         props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                     }
                     break;

File: backend/src/main/java/io/metersphere/api/dto/automation/RunScenarioRequest.java
Patch:
@@ -15,5 +15,7 @@ public class RunScenarioRequest {
 
     private String environmentId;
 
+    private String triggerMode;
+
     private List<String> scenarioIds;
 }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestPlan.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.dto.definition.request;
 
 import com.alibaba.fastjson.annotation.JSONType;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -19,7 +18,7 @@
 public class MsTestPlan extends MsTestElement {
     private String type = "TestPlan";
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         final HashTree testPlanTree = tree.add(getPlan());
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsThreadGroup.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.api.dto.definition.request;
 
 import com.alibaba.fastjson.annotation.JSONType;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -19,7 +18,7 @@
 public class MsThreadGroup extends MsTestElement {
     private String type = "ThreadGroup";
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         final HashTree groupTree = tree.add(getThreadGroup());
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/assertions/MsAssertions.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -24,7 +24,7 @@ public class MsAssertions extends MsTestElement {
     private MsAssertionDuration duration;
     private String type = "Assertions";
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         addAssertions(tree);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/configurations/MsHeaderManager.java
Patch:
@@ -3,8 +3,8 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import io.metersphere.api.dto.scenario.KeyValue;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -25,7 +25,7 @@ public class MsHeaderManager extends MsTestElement {
     @JSONField(ordinal = 10)
     private List<KeyValue> headers;
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         HeaderManager headerManager = new HeaderManager();
         headerManager.setEnabled(true);
         headerManager.setName(this.getName() + "Headers");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/controller/MsIfController.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -25,7 +25,7 @@ public class MsIfController extends MsTestElement {
     private String operator;
     private String value;
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         final HashTree groupTree = tree.add(ifController());
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {

File: backend/src/main/java/io/metersphere/api/dto/definition/request/dns/MsDNSCacheManager.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import io.metersphere.api.dto.scenario.KeyValue;
 import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
 import io.metersphere.api.dto.scenario.environment.Host;
@@ -23,7 +24,7 @@
 @JSONType(typeName = "DNSCacheManager")
 public class MsDNSCacheManager extends MsTestElement {
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         for (MsTestElement el : hashTree) {
             el.toHashTree(tree, el.getHashTree(), config);
         }

File: backend/src/main/java/io/metersphere/api/dto/definition/request/extract/MsExtract.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -24,7 +24,7 @@ public class MsExtract extends MsTestElement {
     private List<MsExtractXPath> xpath;
     private String type = "Extract";
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         addRequestExtractors(tree);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/MsJSR223Processor.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -26,7 +26,7 @@ public class MsJSR223Processor extends MsTestElement {
     @JSONField(ordinal = 11)
     private String scriptLanguage;
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         JSR223Sampler processor = new JSR223Sampler();
         processor.setEnabled(true);
         processor.setName(this.getName() + "JSR223Processor");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/post/MsJSR223PostProcessor.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -27,7 +27,7 @@ public class MsJSR223PostProcessor extends MsTestElement {
     private String scriptLanguage;
 
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         JSR223PostProcessor processor = new JSR223PostProcessor();
         processor.setEnabled(true);
         processor.setName(this.getName() + "JSR223PostProcessor");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/processors/pre/MsJSR223PreProcessor.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -26,7 +26,7 @@ public class MsJSR223PreProcessor extends MsTestElement {
     @JSONField(ordinal = 11)
     private String scriptLanguage;
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         JSR223PreProcessor processor = new JSR223PreProcessor();
         processor.setEnabled(true);
         processor.setName(this.getName() + "JSR223PreProcessor");

File: backend/src/main/java/io/metersphere/api/dto/definition/request/timer/MsConstantTimer.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.fastjson.annotation.JSONType;
 import io.metersphere.api.dto.definition.request.MsTestElement;
-import io.metersphere.api.dto.scenario.environment.EnvironmentConfig;
+import io.metersphere.api.dto.definition.request.ParameterConfig;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import org.apache.commons.collections.CollectionUtils;
@@ -26,7 +26,7 @@ public class MsConstantTimer extends MsTestElement {
     @JSONField(ordinal = 12)
     private String delay;
 
-    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, EnvironmentConfig config) {
+    public void toHashTree(HashTree tree, List<MsTestElement> hashTree, ParameterConfig config) {
         final HashTree groupTree = tree.add(constantTimer());
         if (CollectionUtils.isNotEmpty(hashTree)) {
             hashTree.forEach(el -> {

File: backend/src/main/java/io/metersphere/base/domain/ApiScenarioReport.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class ApiScenarioReport implements Serializable {

File: backend/src/main/java/io/metersphere/base/domain/User.java
Patch:
@@ -29,5 +29,7 @@ public class User implements Serializable {
 
     private String source;
 
+    private String lastProjectId;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseReviewMapper.java
Patch:
@@ -12,7 +12,7 @@ public interface ExtTestCaseReviewMapper {
 
     List<TestCaseReviewDTO> list(@Param("request") QueryCaseReviewRequest params);
 
-    List<TestCaseReviewDTO> listByWorkspaceId(@Param("workspaceId") String workspaceId, @Param("userId") String userId);
+    List<TestCaseReviewDTO> listByWorkspaceId(@Param("workspaceId") String workspaceId, @Param("userId") String userId, @Param("projectId") String projectId);
 
     List<TestReviewDTOWithMetric> listRelate(@Param("request") QueryTestReviewRequest request);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -19,7 +19,7 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<TestPlanCaseDTO> listByNodes(@Param("request") QueryTestPlanCaseRequest request);
 
-    List<String> findRelateTestPlanId(@Param("userId") String userId, @Param("workspaceId") String workspaceId);
+    List<String> findRelateTestPlanId(@Param("userId") String userId, @Param("workspaceId") String workspaceId, @Param("projectId") String projectId);
 
     List<TestPlanCaseDTO> getRecentTestedTestCase(@Param("request") QueryTestPlanCaseRequest request);
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestReviewCaseMapper.java
Patch:
@@ -11,7 +11,7 @@ public interface ExtTestReviewCaseMapper {
 
     List<TestReviewCaseDTO> list(@Param("request") QueryCaseReviewRequest request);
     List<String> getStatusByReviewId(String reviewId);
-    List<String> findRelateTestReviewId(@Param("userId") String userId, @Param("workspaceId") String workspaceId);
+    List<String> findRelateTestReviewId(@Param("userId") String userId, @Param("workspaceId") String workspaceId, @Param("projectId") String projectId);
 
     /**
      * 根据项目 ids 查询 TestReviewCaseDTO 列表

File: backend/src/main/java/io/metersphere/track/controller/TestCaseReviewController.java
Patch:
@@ -81,8 +81,7 @@ public void deleteCaseReview(@PathVariable String reviewId) {
 
     @PostMapping("/list/all")
     public List<TestCaseReview> listAll() {
-        String currentWorkspaceId = SessionUtils.getCurrentWorkspaceId();
-        return testCaseReviewService.listCaseReviewAll(currentWorkspaceId);
+        return testCaseReviewService.listCaseReviewAll();
     }
 
     @PostMapping("/relevance")

File: backend/src/main/java/io/metersphere/track/request/testreview/QueryCaseReviewRequest.java
Patch:
@@ -35,4 +35,6 @@ public class QueryCaseReviewRequest extends TestCaseReviewTestCase {
     private String method;
 
     private Map<String, Object> combine;
+
+    private String projectId;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -123,7 +123,7 @@ public List<TestPlanCaseDTO> getPendingTestCases(QueryTestPlanCaseRequest reques
 
     public void buildQueryRequest(QueryTestPlanCaseRequest request, int count) {
         SessionUser user = SessionUtils.getUser();
-        List<String> relateTestPlanIds = extTestPlanTestCaseMapper.findRelateTestPlanId(user.getId(), SessionUtils.getCurrentWorkspaceId());
+        List<String> relateTestPlanIds = extTestPlanTestCaseMapper.findRelateTestPlanId(user.getId(), SessionUtils.getCurrentWorkspaceId(), SessionUtils.getCurrentProjectId());
         PageHelper.startPage(1, count, true);
         request.setPlanIds(relateTestPlanIds);
         request.setExecutor(user.getId());

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -60,7 +60,6 @@ public List<TestCaseDTO> list(@PathVariable String projectId) {
 
     @GetMapping("/list/method/{projectId}")
     public List<TestCaseDTO> listByMethod(@PathVariable String projectId) {
-        checkOwnerService.checkProjectOwner(projectId);
         QueryTestCaseRequest request = new QueryTestCaseRequest();
         request.setProjectId(projectId);
         return testCaseService.listTestCaseMthod(request);

File: backend/src/main/java/io/metersphere/api/dto/definition/request/MsTestElement.java
Patch:
@@ -102,7 +102,7 @@ public HashTree generateHashTree(ParameterConfig config) {
 
     public HashTree generateHashTree() {
         HashTree jmeterTestPlanHashTree = new ListedHashTree();
-        this.toHashTree(jmeterTestPlanHashTree, this.hashTree, null);
+        this.toHashTree(jmeterTestPlanHashTree, this.hashTree, new ParameterConfig());
         return jmeterTestPlanHashTree;
     }
 

File: backend/src/main/java/io/metersphere/api/dto/scenario/request/Request.java
Patch:
@@ -22,7 +22,6 @@
 @JSONType(seeAlso = {HttpRequest.class, DubboRequest.class, SqlRequest.class, TCPRequest.class}, typeKey = "type")
 @Data
 public abstract class Request {
-    private String type;
     @JSONField(ordinal = 1)
     private String id;
     @JSONField(ordinal = 2)

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -337,7 +337,9 @@ private void importApiTest(ApiTestImportRequest importRequest, ApiDefinitionImpo
         List<ApiDefinitionResult> data = apiImport.getData();
         HashMap<String, List<ApiDefinitionResult>> resultMap = apiImport.getResultMap();
         resultMap.forEach((module, apiDefinition) -> {
+//            apiModuleService
 //            apiModuleService.addNode();
+
         });
         for (int i = 0; i < data.size(); i++) {
             ApiDefinitionResult item = data.get(i);

File: backend/src/main/java/io/metersphere/api/parse/Swagger2Parser.java
Patch:
@@ -11,7 +11,6 @@
 import io.metersphere.api.dto.scenario.Body;
 import io.metersphere.api.dto.scenario.KeyValue;
 import io.metersphere.api.dto.scenario.request.RequestType;
-import io.metersphere.commons.constants.MsRequestBodyType;
 import io.metersphere.commons.constants.SwaggerParameterType;
 import io.swagger.models.*;
 import io.swagger.models.parameters.*;
@@ -64,6 +63,7 @@ private List<ApiDefinitionResult> parseRequests(Swagger swagger) {
                 MsHTTPSamplerProxy request = buildRequest(operation, pathName, method.name());
                 parseParameters(operation, request);
                 apiDefinition.setRequest(JSON.toJSONString(request));
+                apiDefinition.setId(request.getId());
                 results.add(apiDefinition);
 
 

File: backend/src/main/java/io/metersphere/api/service/ApiDefinitionService.java
Patch:
@@ -227,7 +227,6 @@ private ApiDefinition createTest(SaveApiDefinitionRequest request) {
     private ApiDefinition createTest(ApiDefinitionResult request, ApiDefinitionMapper batchMapper) {
         SaveApiDefinitionRequest saveReq = new SaveApiDefinitionRequest();
         BeanUtils.copyBean(saveReq, request);
-        saveReq.setId(UUID.randomUUID().toString());
         checkNameExist(saveReq);
         final ApiDefinitionWithBLOBs test = new ApiDefinitionWithBLOBs();
         BeanUtils.copyBean(test, request);
@@ -340,7 +339,6 @@ private void importApiTest(ApiTestImportRequest importRequest, ApiDefinitionImpo
             item.setModuleId(importRequest.getModuleId());
             item.setModulePath(importRequest.getModulePath());
             item.setEnvironmentId(importRequest.getEnvironmentId());
-            item.setId(UUID.randomUUID().toString());
             item.setUserId(null);
             createTest(item, batchMapper);
             if (i % 300 == 0) {

File: backend/src/main/java/io/metersphere/config/AsyncConfig.java
Patch:
@@ -6,7 +6,7 @@
 import org.springframework.scheduling.annotation.EnableAsync;
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 
-@EnableAsync
+@EnableAsync(proxyTargetClass = true)
 @Configuration
 public class AsyncConfig {
 

File: backend/src/main/java/io/metersphere/api/dto/definition/ApiTestCaseResult.java
Patch:
@@ -1,12 +1,12 @@
 package io.metersphere.api.dto.definition;
 
-import io.metersphere.base.domain.ApiTestCase;
+import io.metersphere.base.domain.ApiTestCaseWithBLOBs;
 import lombok.Getter;
 import lombok.Setter;
 
 @Setter
 @Getter
-public class ApiTestCaseResult extends ApiTestCase {
+public class ApiTestCaseResult extends ApiTestCaseWithBLOBs {
     private String projectName;
     private String createUser;
     private String updateUser;

File: backend/src/main/java/io/metersphere/base/domain/MessageTask.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class MessageTask implements Serializable {

File: backend/src/main/java/io/metersphere/base/mapper/ApiModuleMapper.java
Patch:
@@ -7,7 +7,6 @@
 import java.util.List;
 
 public interface ApiModuleMapper {
-
     long countByExample(ApiModuleExample example);
 
     int deleteByExample(ApiModuleExample example);
@@ -16,8 +15,6 @@ public interface ApiModuleMapper {
 
     int insert(ApiModule record);
 
-    int insertBatch(@Param("records") List<ApiModule> records);
-
     int insertSelective(ApiModule record);
 
     List<ApiModule> selectByExample(ApiModuleExample example);

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -42,7 +42,8 @@ public void run(String testId, String debugReportId, InputStream is) {
             Object scriptWrapper = SaveService.loadElement(is);
             HashTree testPlan = getHashTree(scriptWrapper);
             JMeterVars.addJSR223PostProcessor(testPlan);
-            addBackendListener(testId, debugReportId, ApiRunMode.DEBUG.name(), testPlan);
+            String runMode = StringUtils.isBlank(debugReportId) ? ApiRunMode.RUN.name() : ApiRunMode.DEBUG.name();
+            addBackendListener(testId, debugReportId, runMode, testPlan);
             LocalRunner runner = new LocalRunner(testPlan);
             runner.run();
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/api/dto/scenario/Scenario.java
Patch:
@@ -20,8 +20,6 @@ public class Scenario {
     private DubboConfig dubboConfig;
     private TCPConfig tcpConfig;
     private List<DatabaseConfig> databaseConfigs;
-    private Boolean enable;
-    private Boolean referenceEnable;
     private boolean enable = true;
     private Boolean referenceEnable;
 }

File: backend/src/main/java/io/metersphere/api/dto/ApiTestImportRequest.java
Patch:
@@ -7,6 +7,8 @@
 @Getter
 public class ApiTestImportRequest {
     private String name;
+    private String moduleId;
+    private String modulePath;
     private String environmentId;
     private String projectId;
     private String platform;

File: backend/src/main/java/io/metersphere/api/dto/scenario/Scenario.java
Patch:
@@ -12,7 +12,7 @@ public class Scenario {
     private String name;
     private String url;
     private String environmentId;
-    private Boolean enableCookieShare;
+    private boolean enableCookieShare;
     private List<KeyValue> variables;
     private List<KeyValue> headers;
     private List<Request> requests;
@@ -22,4 +22,6 @@ public class Scenario {
     private List<DatabaseConfig> databaseConfigs;
     private Boolean enable;
     private Boolean referenceEnable;
+    private boolean enable = true;
+    private Boolean referenceEnable;
 }

File: backend/src/main/java/io/metersphere/api/dto/scenario/timer/ConstantTimer.java
Patch:
@@ -6,6 +6,6 @@
 public class ConstantTimer {
     private String type;
     private String id;
-    private Boolean enable;
+    private boolean enable = true;
     private String delay;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/ResponseResult.java
Patch:
@@ -25,6 +25,8 @@ public class ResponseResult {
 
     private String vars;
 
+    private String console;
+
     private final List<ResponseAssertionResult> assertions = new ArrayList<>();
 
 }

File: backend/src/main/java/io/metersphere/api/parse/ApiImportParser.java
Patch:
@@ -1,10 +1,13 @@
 package io.metersphere.api.parse;
 
 import io.metersphere.api.dto.ApiTestImportRequest;
+import io.metersphere.api.dto.definition.parse.ApiDefinitionImport;
 import io.metersphere.api.dto.parse.ApiImport;
 
 import java.io.InputStream;
 
 public interface ApiImportParser {
     ApiImport parse(InputStream source, ApiTestImportRequest request);
+    ApiDefinitionImport parseApi(InputStream source, ApiTestImportRequest request);
+
 }

File: backend/src/main/java/io/metersphere/api/parse/JmeterDocumentParser.java
Patch:
@@ -26,7 +26,7 @@ public class JmeterDocumentParser {
     private final static String STRING_PROP = "stringProp";
     private final static String ARGUMENTS = "Arguments";
     private final static String COLLECTION_PROP = "collectionProp";
-    private final static String HTTP_SAMPLER_PROXY = "HTTPSamplerProxy";
+    private final static String HTTP_SAMPLER_PROXY = "MsHTTPSamplerProxy";
     private final static String ELEMENT_PROP = "elementProp";
 
     public static byte[] parse(byte[] source) {

File: backend/src/main/java/io/metersphere/commons/constants/APITestStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum APITestStatus {
-    Saved, Starting, Running, Reporting, Completed, Debug, Error, Success
+    Saved, Starting, Running, Reporting, Completed, Debug, Error, Success,Underway
 }

File: backend/src/main/java/io/metersphere/commons/constants/ApiRunMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum ApiRunMode {
-    RUN, DEBUG
+    RUN, DEBUG,DELIMIT
 }

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelDataUs.java
Patch:
@@ -8,6 +8,7 @@
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Pattern;
 
+
 @Data
 @ColumnWidth(15)
 public class TestCaseExcelDataUs extends TestCaseExcelData {

File: backend/src/main/java/io/metersphere/job/sechedule/ApiTestJob.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.metersphere.api.dto.SaveAPITestRequest;
 import io.metersphere.api.service.APITestService;
-import io.metersphere.notice.service.MailService;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.constants.ScheduleGroup;
 import io.metersphere.commons.utils.CommonBeanFactory;

File: backend/src/main/java/io/metersphere/api/dto/scenario/Scenario.java
Patch:
@@ -21,4 +21,5 @@ public class Scenario {
     private TCPConfig tcpConfig;
     private List<DatabaseConfig> databaseConfigs;
     private Boolean enable;
+    private Boolean referenceEnable;
 }

File: backend/src/main/java/io/metersphere/performance/service/ReportService.java
Patch:
@@ -105,6 +105,9 @@ public void deleteReport(String reportId) {
         example.createCriteria().andReportIdEqualTo(reportId);
         loadTestReportDetailMapper.deleteByExample(example);
 
+        // delete jtl file
+        fileService.deleteFileById(loadTestReport.getFileId());
+
         loadTestReportMapper.deleteByPrimaryKey(reportId);
     }
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -38,4 +38,5 @@ public interface ExtTestPlanTestCaseMapper {
      */
     List<TestPlanCaseDTO> listTestCaseByProjectIds(@Param("ids") List<String> ids);
 
+    TestPlanCaseDTO get(String testPlanTestCaseId);
 }

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -51,7 +51,7 @@ public void getSaveMessageTask(MessageDetail list) {
         long time = System.currentTimeMillis();
         String identification = UUID.randomUUID().toString();
         list.getUserIds().forEach(m -> {
-            checkUserIdExist(m, list);
+            checkUserIdExist(m, list,orgId);
             MessageTask message = new MessageTask();
             message.setId(UUID.randomUUID().toString());
             message.setEvent(list.getEvent());
@@ -68,9 +68,9 @@ public void getSaveMessageTask(MessageDetail list) {
         });
     }
 
-    private void checkUserIdExist(String userId, MessageDetail list) {
+    private void checkUserIdExist(String userId, MessageDetail list,String orgId) {
         MessageTaskExample example = new MessageTaskExample();
-        example.createCriteria().andUserIdEqualTo(userId).andEventEqualTo(list.getEvent()).andTypeEqualTo(list.getType()).andTaskTypeEqualTo(list.getTaskType()).andWebhookEqualTo(list.getWebhook()).andTestIdEqualTo(list.getTestId()).andOrganizationIdEqualTo(list.getOrganizationId());
+        example.createCriteria().andUserIdEqualTo(userId).andEventEqualTo(list.getEvent()).andTypeEqualTo(list.getType()).andTaskTypeEqualTo(list.getTaskType()).andWebhookEqualTo(list.getWebhook()).andTestIdEqualTo(list.getTestId()).andOrganizationIdEqualTo(orgId);
         if (messageTaskMapper.countByExample(example) > 0) {
             MSException.throwException(Translator.get("message_task_already_exists"));
         }

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -70,7 +70,7 @@ public void getSaveMessageTask(MessageDetail list) {
 
     private void checkUserIdExist(String userId, MessageDetail list) {
         MessageTaskExample example = new MessageTaskExample();
-        example.createCriteria().andUserIdEqualTo(userId).andEventEqualTo(list.getEvent()).andTypeEqualTo(list.getType()).andTaskTypeEqualTo(list.getTaskType()).andWebhookEqualTo(list.getWebhook());
+        example.createCriteria().andUserIdEqualTo(userId).andEventEqualTo(list.getEvent()).andTypeEqualTo(list.getType()).andTaskTypeEqualTo(list.getTaskType()).andWebhookEqualTo(list.getWebhook()).andTestIdEqualTo(list.getTestId()).andOrganizationIdEqualTo(list.getOrganizationId());
         if (messageTaskMapper.countByExample(example) > 0) {
             MSException.throwException(Translator.get("message_task_already_exists"));
         }
@@ -151,4 +151,4 @@ public int delMessage(String identification) {
         example.createCriteria().andIdentificationEqualTo(identification);
         return messageTaskMapper.deleteByExample(example);
     }
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/api/parse/JmeterDocumentParser.java
Patch:
@@ -161,7 +161,9 @@ private static void processStringProp(Element ele) {
                 break;
             case "Argument.value":
                 String textContent = ele.getTextContent();
-                ele.setTextContent(ScriptEngineUtils.calculate(textContent));
+                if (StringUtils.startsWith(textContent, "@")) {
+                    ele.setTextContent(ScriptEngineUtils.calculate(textContent));
+                }
                 break;
             default:
                 break;

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -44,7 +44,7 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage
         Map<String, String> filterChainDefinitionMap = shiroFilterFactoryBean.getFilterChainDefinitionMap();
         ShiroUtils.loadBaseFilterChain(filterChainDefinitionMap);
         filterChainDefinitionMap.put("/display/info", "anon");
-        filterChainDefinitionMap.put("/display/file/*", "anon");
+        filterChainDefinitionMap.put("/display/file/**", "anon");
         filterChainDefinitionMap.put("/**", "apikey, authc");
         return shiroFilterFactoryBean;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -96,7 +96,7 @@ public class TestPlanService {
     @Resource
     UserMapper userMapper;
 
-    public void addTestPlan(AddTestPlanRequest testPlan) {
+    public synchronized void addTestPlan(AddTestPlanRequest testPlan) {
         if (getTestPlanByName(testPlan.getName()).size() > 0) {
             MSException.throwException(Translator.get("plan_name_already_exists"));
         }
@@ -141,7 +141,7 @@ public void addTestPlan(AddTestPlanRequest testPlan) {
         }
     }
 
-    public synchronized List<TestPlan> getTestPlanByName(String name) {
+    public List<TestPlan> getTestPlanByName(String name) {
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andWorkspaceIdEqualTo(SessionUtils.getCurrentWorkspaceId())
                 .andNameEqualTo(name);

File: backend/src/main/java/io/metersphere/api/jmeter/ScenarioResult.java
Patch:
@@ -8,7 +8,7 @@
 @Data
 public class ScenarioResult {
 
-    private String id;
+    private Integer id;
 
     private String name;
 

File: backend/src/main/java/io/metersphere/controller/TestResourcePoolController.java
Patch:
@@ -53,13 +53,13 @@ public Pager<List<TestResourcePoolDTO>> listResourcePools(@PathVariable int goPa
 
     @GetMapping("list/all/valid")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
-    public List<TestResourcePool> listValidResourcePools() {
+    public List<TestResourcePoolDTO> listValidResourcePools() {
         return testResourcePoolService.listValidResourcePools();
     }
 
     @GetMapping("list/quota/valid")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
-    public List<TestResourcePool> listValidQuotaResourcePools() {
+    public List<TestResourcePoolDTO> listValidQuotaResourcePools() {
         return testResourcePoolService.listValidQuotaResourcePools();
     }
 

File: backend/src/main/java/io/metersphere/controller/request/resourcepool/QueryResourcePoolRequest.java
Patch:
@@ -7,4 +7,5 @@
 @Setter
 public class QueryResourcePoolRequest {
     private String name;
+    private String status;
 }

File: backend/src/main/java/io/metersphere/controller/TestResourcePoolController.java
Patch:
@@ -53,13 +53,13 @@ public Pager<List<TestResourcePoolDTO>> listResourcePools(@PathVariable int goPa
 
     @GetMapping("list/all/valid")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
-    public List<TestResourcePool> listValidResourcePools() {
+    public List<TestResourcePoolDTO> listValidResourcePools() {
         return testResourcePoolService.listValidResourcePools();
     }
 
     @GetMapping("list/quota/valid")
     @RequiresRoles(value = {RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER}, logical = Logical.OR)
-    public List<TestResourcePool> listValidQuotaResourcePools() {
+    public List<TestResourcePoolDTO> listValidQuotaResourcePools() {
         return testResourcePoolService.listValidQuotaResourcePools();
     }
 

File: backend/src/main/java/io/metersphere/controller/request/resourcepool/QueryResourcePoolRequest.java
Patch:
@@ -7,4 +7,5 @@
 @Setter
 public class QueryResourcePoolRequest {
     private String name;
+    private String status;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -547,13 +547,13 @@ private String getTestPlanContext(AddTestPlanRequest testPlan, String type) {
         if (!sTime.equals("null")) {
             start = sdf.format(new Date(Long.parseLong(sTime)));
         } else {
-            start = "";
+            start = "未设置";
         }
         String end = null;
         if (!eTime.equals("null")) {
             end = sdf.format(new Date(Long.parseLong(eTime)));
         } else {
-            end = "";
+            end = "未设置";
         }
         String context = "";
         if (StringUtils.equals(NoticeConstants.CREATE, type)) {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtWorkspaceMapper.java
Patch:
@@ -9,4 +9,5 @@
 public interface ExtWorkspaceMapper {
 
     List<WorkspaceDTO> getWorkspaceWithOrg(@Param("request") WorkspaceRequest request);
+    List<String> getWorkspaceIdsByOrgId(@Param("orgId") String orgId);
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -141,7 +141,7 @@ public void addTestPlan(AddTestPlanRequest testPlan) {
         }
     }
 
-    public List<TestPlan> getTestPlanByName(String name) {
+    public synchronized List<TestPlan> getTestPlanByName(String name) {
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andWorkspaceIdEqualTo(SessionUtils.getCurrentWorkspaceId())
                 .andNameEqualTo(name);

File: backend/src/main/java/io/metersphere/service/SystemParameterService.java
Patch:
@@ -7,6 +7,7 @@
 import io.metersphere.commons.constants.ParamConstants;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.EncryptUtils;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.i18n.Translator;
 import io.metersphere.ldap.domain.LdapInfo;
@@ -99,6 +100,7 @@ public void testConnection(HashMap<String, String> hashMap) {
         try {
             javaMailSender.testConnection();
         } catch (MessagingException e) {
+            LogUtil.error(e);
             MSException.throwException(Translator.get("connection_failed"));
         }
     }

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -341,7 +341,7 @@ private JavaMailSenderImpl getMailSender() {
         JavaMailSenderImpl javaMailSender = new JavaMailSenderImpl();
         List<SystemParameter> paramList = systemParameterService.getParamList(ParamConstants.Classify.MAIL.getValue());
         javaMailSender.setDefaultEncoding("UTF-8");
-        javaMailSender.setProtocol("smtps");
+        javaMailSender.setProtocol("smtp");
         for (SystemParameter p : paramList) {
             switch (p.getParamKey()) {
                 case "smtp.host":
@@ -362,8 +362,8 @@ private JavaMailSenderImpl getMailSender() {
         }
         Properties props = new Properties();
         props.put("mail.smtp.auth", "true");
-        props.put("mail.smtp.starttls.enable", "true");
-        props.put("mail.smtp.starttls.required", "true");
+        props.put("mail.smtp.starttls.enable", "false");
+        props.put("mail.smtp.starttls.required", "false");
         props.put("mail.smtp.timeout", "30000");
         props.put("mail.smtp.connectiontimeout", "5000");
         javaMailSender.setJavaMailProperties(props);

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -207,6 +207,7 @@ public String edit(EditTestPlanRequest request, List<MultipartFile> files) {
 
     @Transactional(noRollbackFor = MSException.class)//  保存失败的信息
     public String run(RunTestPlanRequest request) {
+        LogUtil.info("性能测试run测试");
         final LoadTestWithBLOBs loadTest = loadTestMapper.selectByPrimaryKey(request.getId());
         if (request.getUserId() != null) {
             loadTest.setUserId(request.getUserId());

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -46,6 +46,7 @@ public HashTree getHashTree(String testId, String testName, List<Scenario> scena
 
     public void run(String testId, String testName, List<Scenario> scenarios, String debugReportId) {
         try {
+            init();
             HashTree testPlan = getHashTree(testId, testName, scenarios);
             JMeterVars.addJSR223PostProcessor(testPlan);
             addBackendListener(testId, debugReportId, testPlan);

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -104,9 +104,8 @@ public APITestResult get(@PathVariable String testId) {
 
     @PostMapping("/delete")
     public void delete(@RequestBody DeleteAPITestRequest request) {
-        String testId = request.getId();
-        checkownerService.checkApiTestOwner(testId);
-        apiTestService.delete(testId);
+        checkownerService.checkApiTestOwner(request.getId());
+        apiTestService.delete(request);
     }
 
     @PostMapping(value = "/run")

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -85,7 +85,9 @@ public List<LoadTestDTO> list(QueryTestPlanRequest request) {
     public void delete(DeleteTestPlanRequest request) {
         String testId = request.getId();
 
-        testCaseService.checkIsRelateTest(testId);
+        if (!request.isForceDelete()) {
+            testCaseService.checkIsRelateTest(testId);
+        }
 
         LoadTestReportExample loadTestReportExample = new LoadTestReportExample();
         loadTestReportExample.createCriteria().andTestIdEqualTo(testId);

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -144,7 +144,7 @@ public void sendCommentNotice(MessageDetail messageDetail, List<String> userIds,
         context.put("testCaseName", testCaseWithBLOBs.getName());
         context.put("description", request.getDescription());
         context.put("url", baseSystemConfigDTO.getUrl());
-        context.put("id", testCaseWithBLOBs.getId());
+        context.put("id", request.getReviewId());
         try {
             String commentTemplate = IOUtils.toString(this.getClass().getResource("/mail/ReviewComments.html"), StandardCharsets.UTF_8);
             sendReviewNotice(addresseeIdList(messageDetail, userIds, eventType), context, commentTemplate);

File: backend/src/main/java/io/metersphere/track/request/testreview/SaveCommentRequest.java
Patch:
@@ -7,5 +7,6 @@
 @Getter
 @Setter
 public class SaveCommentRequest extends TestCaseComment {
+     private String reviewId;
 
 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -457,7 +457,7 @@ private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest reque
             if (t.getMethod().equals("manual")) {
                 String steps = t.getSteps();
                 String setp = "";
-                if (steps.contains("null")) {
+                if (steps.contains("null") && !steps.contains("\"null\"")) {
                     setp = steps.replace("null", "\"\"");
                 } else {
                     setp = steps;

File: backend/src/main/java/io/metersphere/api/dto/scenario/assertions/Assertions.java
Patch:
@@ -9,6 +9,6 @@ public class Assertions {
     private List<AssertionRegex> regex;
     private List<AssertionJsonPath> jsonPath;
     private List<AssertionJSR223> jsr223;
-    private List<AssertionXPath2> xPath2;
+    private List<AssertionXPath2> xpath2;
     private AssertionDuration duration;
 }

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -229,7 +229,6 @@ public String run(RunTestPlanRequest request) {
         startEngine(loadTest, engine, request.getTriggerMode());
 
         LoadTestReportWithBLOBs loadTestReport = loadTestReportMapper.selectByPrimaryKey(engine.getReportId());
-        loadTestReport.setTriggerMode("API");
         if (StringUtils.equals(NoticeConstants.API, loadTestReport.getTriggerMode()) || StringUtils.equals(NoticeConstants.SCHEDULE, loadTestReport.getTriggerMode())) {
             performanceNoticeTask.registerNoticeTask(loadTestReport);
         }

File: backend/src/main/java/io/metersphere/notice/service/DingTaskService.java
Patch:
@@ -6,6 +6,7 @@
 import com.dingtalk.api.response.OapiRobotSendResponse;
 import com.taobao.api.ApiException;
 import io.metersphere.commons.constants.NoticeConstants;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.notice.domain.MessageDetail;
 import io.metersphere.notice.domain.UserDetail;
 import io.metersphere.service.UserService;
@@ -62,7 +63,7 @@ public void sendDingTask(String context, List<String> userIds, String Webhook) {
         try {
             response = client.execute(request);
         } catch (ApiException e) {
-            e.printStackTrace();
+            LogUtil.error(e);
         }
         System.out.println(response.getErrcode());
     }

File: backend/src/main/java/io/metersphere/notice/service/WxChatTaskService.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.notice.service;
 
 import io.metersphere.commons.constants.NoticeConstants;
+import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.notice.domain.MessageDetail;
 import io.metersphere.notice.domain.UserDetail;
 import io.metersphere.notice.message.TextMessage;
@@ -55,7 +56,7 @@ public void enterpriseWechatTask(String context, List<String> userIds, String We
             SendResult result = WxChatbotClient.send(Webhook, message);
             System.out.println(result);
         } catch (IOException e) {
-            e.printStackTrace();
+            LogUtil.error(e);
         }
     }
 

File: backend/src/main/java/io/metersphere/api/parse/MsParser.java
Patch:
@@ -61,7 +61,7 @@ private void parseBody(JSONObject requestObject) {
             Object body = requestObject.get("body");
             if (body instanceof JSONArray) {
                 JSONArray bodies = requestObject.getJSONArray("body");
-                if (StringUtils.equalsIgnoreCase(requestObject.getString("method"), "POST") && bodies != null) {
+                if (bodies != null) {
                     StringBuilder bodyStr = new StringBuilder();
                     for (int i = 0; i < bodies.size(); i++) {
                         String tmp = bodies.getString(i);
@@ -74,7 +74,7 @@ private void parseBody(JSONObject requestObject) {
                 }
             } else if (body instanceof JSONObject) {
                 JSONObject bodyObj = requestObject.getJSONObject("body");
-                if (StringUtils.equalsIgnoreCase(requestObject.getString("method"), "POST") && bodyObj != null) {
+                if (bodyObj != null) {
                     JSONArray kvs = new JSONArray();
                     bodyObj.keySet().forEach(key -> {
                         JSONObject kv = new JSONObject();

File: backend/src/main/java/io/metersphere/track/dto/TestCaseReviewDTO.java
Patch:
@@ -10,4 +10,5 @@ public class TestCaseReviewDTO extends TestCaseReview {
 
     private String projectName;
     private String reviewerName;
+    private String creatorName;
 }

File: backend/src/main/java/io/metersphere/commons/constants/ReportKeys.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.commons.constants;
 
 public enum ReportKeys {
-    LoadChart, ResponseTimeChart, Errors, ErrorsTop5, RequestStatistics, Overview, TimeInfo, ResultStatus
+    LoadChart, ResponseTimeChart, ResponseCodeChart, Errors, ErrorsTop5, RequestStatistics, Overview, TimeInfo, ResultStatus, ErrorsChart
 
 }

File: backend/src/main/java/io/metersphere/service/TestResourcePoolService.java
Patch:
@@ -210,7 +210,6 @@ private boolean validateNode(NodeDTO node) {
     private void updateTestResource(TestResource testResource) {
         testResource.setUpdateTime(System.currentTimeMillis());
         testResource.setCreateTime(System.currentTimeMillis());
-        testResource.setId(UUID.randomUUID().toString());
         testResourceMapper.insertSelective(testResource);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/scenario/request/Request.java
Patch:
@@ -19,7 +19,7 @@
         @JsonSubTypes.Type(value = SqlRequest.class, name = RequestType.SQL),
         @JsonSubTypes.Type(value = TCPRequest.class, name = RequestType.TCP)
 })
-@JSONType(seeAlso = {HttpRequest.class, DubboRequest.class, SqlRequest.class}, typeKey = "type")
+@JSONType(seeAlso = {HttpRequest.class, DubboRequest.class, SqlRequest.class, TCPRequest.class}, typeKey = "type")
 @Data
 public abstract class Request {
     @JSONField(ordinal = 1)

File: backend/src/main/java/io/metersphere/track/service/TestCaseReviewService.java
Patch:
@@ -459,7 +459,7 @@ public void editTestReviewStatus(String reviewId) {
                             wxChatTaskService.sendWechatRobot(r, userIds, context, NoticeConstants.UPDATE);
                             break;
                         case NoticeConstants.EMAIL:
-                            mailService.sendReviewerNotice(r, userIds, testCaseReviewRequest, NoticeConstants.UPDATE);
+                            mailService.sendEndNotice(r, userIds, testCaseReviewRequest, NoticeConstants.UPDATE);
                             break;
                     }
                 });

File: backend/src/main/java/io/metersphere/base/domain/MessageTask.java
Patch:
@@ -21,5 +21,7 @@ public class MessageTask implements Serializable {
 
     private Boolean isSet;
 
+    private String organizationId;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/TestPlan.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class TestPlan implements Serializable {

File: backend/src/main/java/io/metersphere/notice/domain/MessageDetail.java
Patch:
@@ -9,10 +9,11 @@
 @Data
 public class MessageDetail {
     private List<String> userIds = new ArrayList<>();
-    private List<String> events = new ArrayList<>();
+    private String event;
     private String taskType;
     private String webhook;
     private String type;
     private String identification;
+    private String organizationId;
     private Boolean isSet;
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -115,7 +115,6 @@ public TestCaseReportMetricDTO getMetric(@PathVariable String planId) {
 
     @GetMapping("/project/name/{planId}")
     public String getProjectNameByPlanId(@PathVariable String planId) {
-        checkOwnerService.checkTestPlanOwner(planId);
         return testPlanService.getProjectNameByPlanId(planId);
     }
 

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -33,6 +33,8 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
 
         System.out.println("================= 应用启动 =================");
 
+        System.setProperty("jmeter.home", jmeterHome);
+
         loadJars();
 
         initPythonEnv();

File: backend/src/main/java/org/apache/jmeter/NewDriver.java
Patch:
@@ -92,7 +92,6 @@ public static void setContextClassLoader() {
             if (tmpDir.length() == 0) {
                 File userDir = new File(System.getProperty("user.dir"));// $NON-NLS-1$
                 tmpDir = userDir.getAbsoluteFile().getParent();
-                System.out.println(tmpDir + "333");
             }
 //        }
         JMETER_INSTALLATION_DIRECTORY=tmpDir;

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -107,8 +107,8 @@ public Project getProjectByTestCaseId(@PathVariable String testCaseId) {
 
     @PostMapping(value = "/add", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public void addTestCase(@RequestPart("request") TestCaseWithBLOBs testCase, @RequestPart(value = "file") List<MultipartFile> files) {
-        testCaseService.save(testCase, files);
+    public void addTestCase(@RequestPart("request") EditTestCaseRequest request, @RequestPart(value = "file") List<MultipartFile> files) {
+        testCaseService.save(request, files);
     }
 
     @PostMapping(value = "/edit", consumes = {"multipart/form-data"})

File: backend/src/main/java/io/metersphere/xmind/XmindCaseParser.java
Patch:
@@ -231,7 +231,7 @@ private String getSteps(List<Attached> attacheds) {
                 JSONObject step = new JSONObject(true);
                 step.put("num", i + 1);
                 step.put("desc", attacheds.get(i).getTitle());
-                if (attacheds.get(i).getChildren() != null && !attacheds.get(i).getChildren().getAttached().isEmpty()) {
+                if (attacheds.get(i) != null && attacheds.get(i).getChildren() != null &&  attacheds.get(i).getChildren().getAttached()!=null) {
                     step.put("result", attacheds.get(i).getChildren().getAttached().get(0).getTitle());
                 }
                 jsonArray.add(step);

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -30,7 +30,9 @@ public class JMeterService {
     public void run(String testId, String debugReportId, InputStream is) {
         String JMETER_HOME = getJmeterHome();
 
-//        NewDriver.setContextClassLoader();
+        // 将当前类加载器设置为 loader ，解决由系统类加载器加载的 JMeter 无法动态加载 jar 包问题
+        // 同时隔离在 beanshell 中访问由系统类加载器加载的其他类
+        NewDriver.setContextClassLoader();
 
         String JMETER_PROPERTIES = JMETER_HOME + "/bin/jmeter.properties";
         JMeterUtils.loadJMeterProperties(JMETER_PROPERTIES);

File: backend/src/main/java/io/metersphere/api/dto/scenario/assertions/AssertionRegex.java
Patch:
@@ -9,6 +9,7 @@ public class AssertionRegex extends AssertionType {
     private String subject;
     private String expression;
     private String description;
+    private Boolean assumeSuccess;
 
     public AssertionRegex() {
         setType(AssertionType.REGEX);

File: backend/src/main/java/io/metersphere/base/domain/Notice.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class Notice implements Serializable {

File: backend/src/main/java/io/metersphere/base/mapper/NoticeMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.Notice;
 import io.metersphere.base.domain.NoticeExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface NoticeMapper {
     long countByExample(NoticeExample example);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseReviewMapper.java
Patch:
@@ -12,12 +12,13 @@ public interface ExtTestCaseReviewMapper {
 
     List<TestCaseReviewDTO> list(@Param("request") QueryCaseReviewRequest params);
 
-    List<TestCaseReviewDTO> listByWorkspaceId(@Param("workspaceId") String workspaceId);
+    List<TestCaseReviewDTO> listByWorkspaceId(@Param("workspaceId") String workspaceId, @Param("userId") String userId);
 
     List<TestReviewDTOWithMetric> listRelate(@Param("request") QueryTestReviewRequest request);
 
     /**
      * 检查某工作空间下是否有某测试评审
+     *
      * @param reviewId
      * @param workspaceId
      * @return Review ID

File: backend/src/main/java/io/metersphere/commons/constants/FileType.java
Patch:
@@ -1,7 +1,9 @@
 package io.metersphere.commons.constants;
 
 public enum FileType {
-    JMX(".jmx"), CSV(".csv"), JSON(".json");
+    JMX(".jmx"), CSV(".csv"), JSON(".json"), PDF(".pdf"),
+    JPG(".jpg"), PNG(".png"), JPEG(".jpeg"), DOC(".doc"),
+    XLSX(".xlsx"), DOCX(".docx");
 
     // 保存后缀
     private String suffix;

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -95,6 +95,7 @@ private void sendHtmlTimeTasks(List<NoticeDetail> noticeList, String status, Map
         try {
             javaMailSender.send(mimeMessage);
         } catch (MailException e) {
+            LogUtil.error(e);
             LogUtil.error("Failed to send mail");
         }
     }
@@ -249,5 +250,6 @@ private String[] getRecipientEmail(List<NoticeDetail> noticeList, String status)
         return recipientEmails;
     }
 
+
 }
 

File: backend/src/main/java/io/metersphere/track/request/testcase/PlanCaseRelevanceRequest.java
Patch:
@@ -10,5 +10,6 @@
 @Setter
 public class PlanCaseRelevanceRequest {
     private String planId;
+    private String projectId;
     private List<String> testCaseIds = new ArrayList<>();
 }

File: backend/src/main/java/io/metersphere/track/request/testreview/ReviewRelevanceRequest.java
Patch:
@@ -10,5 +10,6 @@
 @Setter
 public class ReviewRelevanceRequest {
     private String reviewId;
+    private String projectId;
     private List<String> testCaseIds = new ArrayList<>();
 }

File: backend/src/main/java/io/metersphere/base/domain/MessageTask.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class MessageTask implements Serializable {
@@ -18,5 +17,7 @@ public class MessageTask implements Serializable {
 
     private String webhook;
 
+    private String identification;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/base/domain/Notice.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.base.domain;
 
-import lombok.Data;
-
 import java.io.Serializable;
+import lombok.Data;
 
 @Data
 public class Notice implements Serializable {

File: backend/src/main/java/io/metersphere/base/mapper/MessageTaskMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.MessageTask;
 import io.metersphere.base.domain.MessageTaskExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface MessageTaskMapper {
     long countByExample(MessageTaskExample example);

File: backend/src/main/java/io/metersphere/base/mapper/NoticeMapper.java
Patch:
@@ -2,9 +2,8 @@
 
 import io.metersphere.base.domain.Notice;
 import io.metersphere.base.domain.NoticeExample;
-import org.apache.ibatis.annotations.Param;
-
 import java.util.List;
+import org.apache.ibatis.annotations.Param;
 
 public interface NoticeMapper {
     long countByExample(NoticeExample example);

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -86,6 +86,7 @@ public List<NoticeDetail> queryNotice(String id) {
     }
 
     public void saveMessageTask(MessageRequest messageRequest) {
+        String identification=UUID.randomUUID().toString();
         messageRequest.getMessageDetail().forEach(list -> {
             list.getEvents().forEach(n -> {
                 list.getUserIds().forEach(m -> {
@@ -96,6 +97,7 @@ public void saveMessageTask(MessageRequest messageRequest) {
                     message.setUserId(m);
                     message.setType(list.getType());
                     message.setWebhook(list.getWebhook());
+                    message.setIdentification(identification);
                     messageTaskMapper.insert(message);
                 });
             });

File: backend/src/main/java/io/metersphere/commons/constants/FileType.java
Patch:
@@ -1,7 +1,9 @@
 package io.metersphere.commons.constants;
 
 public enum FileType {
-    JMX(".jmx"), CSV(".csv"), JSON(".json"), PDF(".pdf"), JPG(".jpg"), PNG(".png");
+    JMX(".jmx"), CSV(".csv"), JSON(".json"), PDF(".pdf"),
+    JPG(".jpg"), PNG(".png"), JPEG(".jpeg"), DOC(".doc"),
+    XLSX(".xlsx"), DOCX(".docx");
 
     // 保存后缀
     private String suffix;

File: backend/src/main/java/io/metersphere/service/FileService.java
Patch:
@@ -13,6 +13,7 @@
 
 import javax.annotation.Resource;
 import java.io.IOException;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.UUID;
 import java.util.stream.Collectors;
@@ -132,7 +133,7 @@ public List<FileMetadata> getFileMetadataByCaseId(String caseId) {
         final List<TestCaseFile> testCaseFiles = testCaseFileMapper.selectByExample(testCaseFileExample);
 
         if (CollectionUtils.isEmpty(testCaseFiles)) {
-            return null;
+            return new ArrayList<>();
         }
 
         List<String> fileIds = testCaseFiles.stream().map(TestCaseFile::getFileId).collect(Collectors.toList());

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -204,7 +204,7 @@ private ResponseAssertionResult getResponseAssertionResult(AssertionResult asser
         ResponseAssertionResult responseAssertionResult = new ResponseAssertionResult();
         responseAssertionResult.setMessage(assertionResult.getFailureMessage());
         responseAssertionResult.setName(assertionResult.getName());
-        responseAssertionResult.setPass(!assertionResult.isFailure());
+        responseAssertionResult.setPass(!assertionResult.isFailure() && !assertionResult.isError());
         return responseAssertionResult;
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -317,8 +317,9 @@ public ExcelResponse testCaseImport(MultipartFile multipartFile, String projectI
             Set<String> userIds = userRoleMapper.selectByExample(userRoleExample).stream().map(UserRole::getUserId).collect(Collectors.toSet());
 
             try {
-                EasyExcelListener easyExcelListener = new TestCaseDataListener(this, projectId, testCaseNames, userIds);
-                EasyExcelFactory.read(multipartFile.getInputStream(), new TestCaseExcelDataFactory().getExcelDataByLocal(), easyExcelListener).sheet().doRead();
+                Class clazz = new TestCaseExcelDataFactory().getExcelDataByLocal();
+                EasyExcelListener easyExcelListener = new TestCaseDataListener(clazz, projectId, testCaseNames, userIds);
+                EasyExcelFactory.read(multipartFile.getInputStream(), clazz, easyExcelListener).sheet().doRead();
                 errList = easyExcelListener.getErrList();
             } catch (Exception e) {
                 LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -83,11 +83,13 @@ public List<TestCase> getReviewCase(@RequestBody QueryTestCaseRequest request) {
 
     @GetMapping("/get/{testCaseId}")
     public TestCaseWithBLOBs getTestCase(@PathVariable String testCaseId) {
+        checkOwnerService.checkTestCaseOwner(testCaseId);
         return testCaseService.getTestCase(testCaseId);
     }
 
     @GetMapping("/project/{testCaseId}")
     public Project getProjectByTestCaseId(@PathVariable String testCaseId) {
+        checkOwnerService.checkTestCaseOwner(testCaseId);
         return testCaseService.getProjectByTestCaseId(testCaseId);
     }
 
@@ -106,6 +108,7 @@ public void editTestCase(@RequestBody TestCaseWithBLOBs testCase) {
     @PostMapping("/delete/{testCaseId}")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
     public int deleteTestCase(@PathVariable String testCaseId) {
+        checkOwnerService.checkTestCaseOwner(testCaseId);
         return testCaseService.deleteTestCase(testCaseId);
     }
 

File: backend/src/main/java/io/metersphere/track/controller/TestCaseNodeController.java
Patch:
@@ -43,11 +43,13 @@ public List<TestCaseNodeDTO> getAllNodeByReviewId(@RequestBody QueryNodeRequest
 
     @GetMapping("/list/plan/{planId}")
     public List<TestCaseNodeDTO> getNodeByPlanId(@PathVariable String planId) {
+        checkOwnerService.checkTestPlanOwner(planId);
         return testCaseNodeService.getNodeByPlanId(planId);
     }
 
     @GetMapping("/list/review/{reviewId}")
     public List<TestCaseNodeDTO> getNodeByReviewId(@PathVariable String reviewId) {
+        checkOwnerService.checkTestReviewOwner(reviewId);
         return testCaseNodeService.getNodeByReviewId(reviewId);
     }
 

File: backend/src/main/java/io/metersphere/track/dto/TestPlanDTO.java
Patch:
@@ -10,5 +10,6 @@
 @Setter
 public class TestPlanDTO extends TestPlan {
     private String projectName;
+    private String userName;
     private List<String> projectIds;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterVars.java
Patch:
@@ -13,7 +13,8 @@
 
 public class JMeterVars {
 
-    private JMeterVars() { }
+    private JMeterVars() {
+    }
 
     // 数据和线程变量保持一致
     private static Map<Integer, JMeterVariables> variables = new HashMap<>();
@@ -24,7 +25,7 @@ public static void addVars(Integer testId, JMeterVariables vars, String extract)
         if (!StringUtils.isEmpty(extract) && vars != null) {
             List<String> extracts = Arrays.asList(extract.split(";"));
             Optional.ofNullable(extracts).orElse(new ArrayList<>()).forEach(item -> {
-                vs.put(item, vars.get(item));
+                vs.put(item, vars.get(item) == null ? "" : vars.get(item));
             });
             vs.remove("TESTSTART.MS"); // 标示变量移除
         }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -273,6 +273,8 @@ public ExcelResponse testCaseImport(MultipartFile multipartFile, String projectI
                 .map(TestCase::getName)
                 .collect(Collectors.toSet());
         List<ExcelErrData<TestCaseExcelData>> errList = null;
+        if(multipartFile == null )
+            MSException.throwException(Translator.get("upload_fail"));
 
         if (multipartFile.getOriginalFilename().endsWith(".xmind")) {
             try {

File: backend/src/main/java/io/metersphere/xmind/XmindCaseParser.java
Patch:
@@ -288,7 +288,7 @@ public String parse(MultipartFile multipartFile) {
         } catch (Exception ex) {
             processBuffer.append(Translator.get("incorrect_format"));
             LogUtil.error(ex.getMessage());
-            return ex.getMessage();
+            return "xmind "+Translator.get("incorrect_format");
         }
         return process.toString();
     }

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -42,12 +42,12 @@ public class MailService {
     @Resource
     private SystemParameterService systemParameterService;
 
-    public void sendPerformanceNotification(List<NoticeDetail> noticeList, String status, LoadTestWithBLOBs loadTest) {
+    public void sendPerformanceNotification(List<NoticeDetail> noticeList, String status, LoadTestWithBLOBs loadTest, String id) {
         BaseSystemConfigDTO baseSystemConfigDTO = systemParameterService.getBaseInfo();
         Map<String, String> context = new HashMap<>();
         context.put("title", "Performance" + Translator.get("timing_task_result_notification"));
         context.put("testName", loadTest.getName());
-        context.put("id", loadTest.getId());
+        context.put("id", id);
         context.put("type", "performance");
         context.put("url", baseSystemConfigDTO.getUrl());
         String performanceTemplate = "";

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -242,7 +242,7 @@ public String run(RunTestPlanRequest request) {
         if (request.getTriggerMode().equals("SCHEDULE")) {
             try {
                 noticeList = noticeService.queryNotice(loadTest.getId());
-                mailService.sendPerformanceNotification(noticeList, PerformanceTestStatus.Completed.name(), loadTest);
+                mailService.sendPerformanceNotification(noticeList, PerformanceTestStatus.Completed.name(), loadTest, engine.getReportId());
             } catch (Exception e) {
                 LogUtil.error(e.getMessage(), e);
             }
@@ -321,7 +321,7 @@ private void startEngine(LoadTestWithBLOBs loadTest, Engine engine, String trigg
             loadTestMapper.updateByPrimaryKeySelective(loadTest);
             if (triggerMode.equals("SCHEDULE")) {
                 noticeList = noticeService.queryNotice(loadTest.getId());
-                mailService.sendPerformanceNotification(noticeList, loadTest.getStatus(), loadTest);
+                mailService.sendPerformanceNotification(noticeList, loadTest.getStatus(), loadTest, loadTest.getId());
             }
             throw e;
         }
@@ -449,7 +449,7 @@ public void stopTest(String reportId, boolean forceStop) {
             if (loadTestReport.getTriggerMode().equals("SCHEDULE")) {
                 try {
                     noticeList = noticeService.queryNotice(loadTest.getId());
-                    mailService.sendPerformanceNotification(noticeList, loadTestReport.getStatus(), loadTest);
+                    mailService.sendPerformanceNotification(noticeList, loadTestReport.getStatus(), loadTest, loadTestReport.getId());
                 } catch (Exception e) {
                     LogUtil.error(e.getMessage(), e);
                 }

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -63,6 +63,8 @@ public UserRoleDTO getUserRole(@PathVariable("userId") String userId) {
     @RequiresRoles(RoleConstants.ADMIN)
     public void deleteUser(@PathVariable(value = "userId") String userId) {
         userService.deleteUser(userId);
+        // 踢掉在线用户
+        SessionUtils.kickOutUser(userId);
     }
 
     @PostMapping("/special/update")

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -2,7 +2,6 @@
 
 import io.metersphere.commons.utils.ShiroUtils;
 import io.metersphere.security.ApiKeyFilter;
-import io.metersphere.security.LoginFilter;
 import io.metersphere.security.ShiroDBRealm;
 import org.apache.shiro.cache.MemoryConstrainedCacheManager;
 import org.apache.shiro.session.mgt.SessionManager;
@@ -36,7 +35,7 @@ public class ShiroConfig implements EnvironmentAware {
     @Bean
     public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManager sessionManager) {
         ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();
-        shiroFilterFactoryBean.getFilters().put("authc", new LoginFilter());
+//        shiroFilterFactoryBean.getFilters().put("authc", new LoginFilter());
         shiroFilterFactoryBean.setLoginUrl("/login");
         shiroFilterFactoryBean.setSecurityManager(sessionManager);
         shiroFilterFactoryBean.setUnauthorizedUrl("/403");
@@ -45,7 +44,8 @@ public ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManage
         shiroFilterFactoryBean.getFilters().put("apikey", new ApiKeyFilter());
         Map<String, String> filterChainDefinitionMap = shiroFilterFactoryBean.getFilterChainDefinitionMap();
         ShiroUtils.loadBaseFilterChain(filterChainDefinitionMap);
-        filterChainDefinitionMap.put("/**", "apikey, authc");
+//        filterChainDefinitionMap.put("/**", "apikey, authc");
+        filterChainDefinitionMap.put("/**", "apikey");
         return shiroFilterFactoryBean;
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -154,10 +154,10 @@ private RequestResult getRequestResult(SampleResult result) {
         responseResult.setResponseTime(result.getTime());
         responseResult.setResponseMessage(result.getResponseMessage());
 
-        if (JMeterVars.variables != null && JMeterVars.variables.get(result.getThreadName()) != null) {
-            JMeterVars.variables.get(result.getThreadName()).remove("TESTSTART.MS"); //去除系统变量
+        if (JMeterVars.variables != null && JMeterVars.variables.get(result.hashCode()) != null) {
+            JMeterVars.variables.get(result.hashCode()).remove("TESTSTART.MS"); //去除系统变量
             List<String> vars = new LinkedList<>();
-            JMeterVars.variables.get(result.getThreadName()).entrySet().parallelStream().reduce(vars, (first, second) -> {
+            JMeterVars.variables.get(result.hashCode()).entrySet().parallelStream().reduce(vars, (first, second) -> {
                 first.add(second.getKey() + "：" + second.getValue());
                 return first;
             }, (first, second) -> {

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterVars.java
Patch:
@@ -10,9 +10,9 @@
 import java.util.Map;
 
 public class JMeterVars {
-    public static Map<String, JMeterVariables> variables = new HashMap<>();
+    public static Map<Integer, JMeterVariables> variables = new HashMap<>();
 
-    public static void addVars(String testId, JMeterVariables vars, String extract) {
+    public static void addVars(Integer testId, JMeterVariables vars, String extract) {
         JMeterVariables vs = new JMeterVariables();
         if (!StringUtils.isEmpty(extract) && vars != null) {
             List<String> extracts = Arrays.asList(extract.split(";"));

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -42,7 +42,6 @@ public void run(String testId, String debugReportId, InputStream is) {
             Object scriptWrapper = SaveService.loadElement(is);
             HashTree testPlan = getHashTree(scriptWrapper);
             addBackendListener(testId, debugReportId, testPlan);
-
             LocalRunner runner = new LocalRunner(testPlan);
             runner.run();
         } catch (Exception e) {

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -284,6 +284,9 @@ public ExcelResponse testCaseImport(MultipartFile multipartFile, String projectI
                     errList.add(excelErrData);
                     excelResponse.setErrList(errList);
                 } else {
+                    if (!xmindParser.getNodePaths().isEmpty()) {
+                        testCaseNodeService.createNodes(xmindParser.getNodePaths(), projectId);
+                    }
                     if (!xmindParser.getTestCase().isEmpty()) {
                         this.saveImportData(xmindParser.getTestCase(), projectId);
                         xmindParser.clear();

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -46,6 +46,7 @@ public void sendPerformanceNotification(List<NoticeDetail> noticeList, String st
         context.put("title", "Performance" + Translator.get("timing_task_result_notification"));
         context.put("testName", loadTest.getName());
         context.put("id", loadTest.getId());
+        context.put("type", "performance");
         context.put("url", baseSystemConfigDTO.getUrl());
         String performanceTemplate = "";
         try {
@@ -65,7 +66,7 @@ public void sendApiNotification(ApiTestReport apiTestReport, List<NoticeDetail>
         Map<String, String> context = new HashMap<>();
         context.put("title", "api" + Translator.get("timing_task_result_notification"));
         context.put("testName", apiTestReport.getName());
-        context.put("type", "Api");
+        context.put("type", "api");
         context.put("url", baseSystemConfigDTO.getUrl());
         context.put("id", apiTestReport.getId());
         String apiTemplate = "";

File: backend/src/main/java/io/metersphere/base/domain/Notice.java
Patch:
@@ -6,14 +6,14 @@
 
 @Data
 public class Notice implements Serializable {
+    private String id;
+
     private String event;
 
     private String testId;
 
     private String name;
 
-    private String email;
-
     private String enable;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -49,7 +49,7 @@ public void saveComment(SaveCommentRequest request) {
         SaveTestCaseReviewRequest caseReviewRequest = new SaveTestCaseReviewRequest();
         List<String> userIds = new ArrayList<>();
         userIds.add(testCaseWithBLOBs.getMaintainer());
-        mailService.sendHtml(userIds, "comment", caseReviewRequest, request, testCaseWithBLOBs);
+        mailService.sendCommentNotice(userIds, request, testCaseWithBLOBs);
 
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -49,7 +49,7 @@ public void saveComment(SaveCommentRequest request) {
         SaveTestCaseReviewRequest caseReviewRequest = new SaveTestCaseReviewRequest();
         List<String> userIds = new ArrayList<>();
         userIds.add(testCaseWithBLOBs.getMaintainer());
-        mailService.sendHtml(userIds, "comment", caseReviewRequest, request, testCaseWithBLOBs);
+        mailService.sendCommentNotice(userIds, request, testCaseWithBLOBs);
 
     }
 

File: backend/src/main/java/io/metersphere/job/sechedule/ApiTestJob.java
Patch:
@@ -14,7 +14,6 @@
 public class ApiTestJob extends MsScheduleJob {
 
     private APITestService apiTestService;
-    private MailService mailService;
     public ApiTestJob() {
         apiTestService = (APITestService) CommonBeanFactory.getBean(APITestService.class);
     }

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -19,6 +19,7 @@
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.PerformanceTestJob;
+import io.metersphere.notice.domain.NoticeDetail;
 import io.metersphere.notice.service.MailService;
 import io.metersphere.notice.service.NoticeService;
 import io.metersphere.performance.engine.Engine;

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -61,7 +61,8 @@ public List<TestCaseComment> getComments(String caseId) {
         testCaseComments.forEach(testCaseComment -> {
             String authorId = testCaseComment.getAuthor();
             User user = userMapper.selectByPrimaryKey(authorId);
-            testCaseComment.setAuthor(user.getName());
+            String author = user == null ? authorId : user.getName();
+            testCaseComment.setAuthor(author);
         });
         return testCaseComments;
     }

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -115,7 +115,8 @@ public TestPlan getTestPlan(String testPlanId) {
         return Optional.ofNullable(testPlanMapper.selectByPrimaryKey(testPlanId)).orElse(new TestPlan());
     }
 
-    public int editTestPlan(TestPlan testPlan) {
+    public int editTestPlan(TestPlanDTO testPlan) {
+        editTestPlanProject(testPlan);
         testPlan.setUpdateTime(System.currentTimeMillis());
         checkTestPlanExist(testPlan);
         //进行中状态，写入实际开始时间

File: backend/src/main/java/io/metersphere/api/dto/scenario/KeyValue.java
Patch:
@@ -12,6 +12,7 @@ public class KeyValue {
     private String type;
     private List<BodyFile> files;
     private String description;
+    private String contentType;
     private boolean enable;
 
     public KeyValue() {

File: backend/src/main/java/io/metersphere/controller/TestController.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.controller;
 
 import com.alibaba.fastjson.JSONObject;
+import io.metersphere.base.domain.User;
 import io.metersphere.commons.utils.SessionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.bind.annotation.*;
@@ -15,7 +16,8 @@ public class TestController {
 
 
     @PostMapping(value = "/upload", consumes = {"multipart/form-data"})
-    public Object testUpload(@RequestPart(value = "id") String id, @RequestPart(value = "file") MultipartFile file, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
+    public Object testUpload(@RequestPart(value = "id") String id, @RequestPart(value = "file") MultipartFile file, @RequestPart(value = "files") List<MultipartFile> bodyFiles
+                             , @RequestPart(value = "user") User user, @RequestParam(value = "name") String name) {
         JSONObject jsonObject = new JSONObject();
         jsonObject.put("id", id);
         jsonObject.put("file", file.getOriginalFilename());

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -3,11 +3,11 @@
 import io.metersphere.api.service.APIReportService;
 import io.metersphere.api.service.APITestService;
 import io.metersphere.base.domain.ApiTestReport;
-import io.metersphere.base.domain.NoticeDetail;
 import io.metersphere.commons.constants.APITestStatus;
 import io.metersphere.commons.constants.ApiRunMode;
 import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.notice.domain.NoticeDetail;
 import io.metersphere.notice.service.MailService;
 import io.metersphere.notice.service.NoticeService;
 import org.apache.commons.lang3.StringUtils;

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.notice.controller;
 
-import io.metersphere.base.domain.NoticeDetail;
 import io.metersphere.notice.controller.request.NoticeRequest;
+import io.metersphere.notice.domain.NoticeDetail;
 import io.metersphere.notice.service.NoticeService;
 import org.springframework.web.bind.annotation.*;
 

File: backend/src/main/java/io/metersphere/notice/controller/request/NoticeRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.metersphere.notice.controller.request;
 
-import io.metersphere.base.domain.NoticeDetail;
+import io.metersphere.notice.domain.NoticeDetail;
 import lombok.Data;
 
 import java.util.List;

File: backend/src/main/java/io/metersphere/notice/domain/NoticeDetail.java
Patch:
@@ -1,5 +1,6 @@
-package io.metersphere.base.domain;
+package io.metersphere.notice.domain;
 
+import io.metersphere.base.domain.Notice;
 import lombok.Data;
 
 @Data

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.notice.service;
 
 import io.metersphere.api.dto.APIReportResult;
-import io.metersphere.base.domain.NoticeDetail;
 import io.metersphere.base.domain.SystemParameter;
 import io.metersphere.base.domain.TestCaseWithBLOBs;
 import io.metersphere.commons.constants.ParamConstants;
@@ -10,6 +9,7 @@
 import io.metersphere.dto.BaseSystemConfigDTO;
 import io.metersphere.dto.LoadTestDTO;
 import io.metersphere.i18n.Translator;
+import io.metersphere.notice.domain.NoticeDetail;
 import io.metersphere.service.SystemParameterService;
 import io.metersphere.service.UserService;
 import io.metersphere.track.request.testreview.SaveCommentRequest;

File: backend/src/main/java/io/metersphere/notice/service/NoticeService.java
Patch:
@@ -1,10 +1,10 @@
 package io.metersphere.notice.service;
 
 import io.metersphere.base.domain.Notice;
-import io.metersphere.base.domain.NoticeDetail;
 import io.metersphere.base.domain.NoticeExample;
 import io.metersphere.base.mapper.NoticeMapper;
 import io.metersphere.notice.controller.request.NoticeRequest;
+import io.metersphere.notice.domain.NoticeDetail;
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;

File: backend/src/main/java/io/metersphere/track/service/TestCaseCommentService.java
Patch:
@@ -11,6 +11,7 @@
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.notice.service.MailService;
 import io.metersphere.track.request.testreview.SaveCommentRequest;
+import io.metersphere.track.request.testreview.SaveTestCaseReviewRequest;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
@@ -45,9 +46,10 @@ public void saveComment(SaveCommentRequest request) {
         testCaseCommentMapper.insert(testCaseComment);
         TestCaseWithBLOBs testCaseWithBLOBs;
         testCaseWithBLOBs = testCaseMapper.selectByPrimaryKey(request.getCaseId());
+        SaveTestCaseReviewRequest caseReviewRequest = new SaveTestCaseReviewRequest();
         List<String> userIds = new ArrayList<>();
         userIds.add(testCaseWithBLOBs.getMaintainer());
-        mailService.sendCommentNotice(userIds, request, testCaseWithBLOBs);
+        mailService.sendHtml(userIds, "comment", caseReviewRequest, request, testCaseWithBLOBs);
 
     }
 

File: backend/src/main/java/io/metersphere/notice/controller/NoticeController.java
Patch:
@@ -1,8 +1,7 @@
 package io.metersphere.notice.controller;
 
-import io.metersphere.base.domain.Notice;
+import io.metersphere.base.domain.NoticeDetail;
 import io.metersphere.notice.controller.request.NoticeRequest;
-import io.metersphere.notice.service.MailService;
 import io.metersphere.notice.service.NoticeService;
 import org.springframework.web.bind.annotation.*;
 
@@ -21,7 +20,7 @@ public void saveNotice(@RequestBody NoticeRequest noticeRequest) {
     }
 
     @GetMapping("/query/{testId}")
-    public List<Notice> queryNotice(@PathVariable String testId) {
+    public List<NoticeDetail> queryNotice(@PathVariable String testId) {
         return noticeService.queryNotice(testId);
     }
 

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -98,8 +98,9 @@ public void sendHtml(String id, List<Notice> notice, String status, String type)
     private String getContent(String template, Map<String, String> context) {
         if (MapUtils.isNotEmpty(context)) {
             for (String k : context.keySet()) {
-                if (StringUtils.isNotBlank(context.get(k)))
+                if (StringUtils.isNotBlank(context.get(k))) {
                     template = RegExUtils.replaceAll(template, "\\$\\{" + k + "}", context.get(k));
+                }
             }
         }
         return template;

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -115,7 +115,8 @@ public TestPlan getTestPlan(String testPlanId) {
         return Optional.ofNullable(testPlanMapper.selectByPrimaryKey(testPlanId)).orElse(new TestPlan());
     }
 
-    public int editTestPlan(TestPlan testPlan) {
+    public int editTestPlan(TestPlanDTO testPlan) {
+        editTestPlanProject(testPlan);
         testPlan.setUpdateTime(System.currentTimeMillis());
         checkTestPlanExist(testPlan);
         //进行中状态，写入实际开始时间

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -12,7 +12,6 @@
 import io.metersphere.commons.utils.Pager;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.QueryScheduleRequest;
-import io.metersphere.dto.LicenseDTO;
 import io.metersphere.dto.ScheduleDao;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -20,7 +20,6 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.*;
 import io.metersphere.controller.request.QueryScheduleRequest;
-import io.metersphere.dto.LicenseDTO;
 import io.metersphere.dto.ScheduleDao;
 import io.metersphere.i18n.Translator;
 import io.metersphere.job.sechedule.ApiTestJob;

File: backend/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.commons.user.SessionUser;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.request.LoginRequest;
-import io.metersphere.dto.LicenseDTO;
 import io.metersphere.service.UserService;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.SecurityUtils;

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -10,7 +10,6 @@
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.user.SessionUser;
 import io.metersphere.commons.utils.CodingUtil;
-import io.metersphere.commons.utils.CommonBeanFactory;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.controller.ResultHolder;
 import io.metersphere.controller.request.LoginRequest;
@@ -20,7 +19,6 @@
 import io.metersphere.controller.request.member.UserRequest;
 import io.metersphere.controller.request.organization.AddOrgMemberRequest;
 import io.metersphere.controller.request.organization.QueryOrgMemberRequest;
-import io.metersphere.dto.LicenseDTO;
 import io.metersphere.dto.UserDTO;
 import io.metersphere.dto.UserRoleDTO;
 import io.metersphere.i18n.Translator;

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -77,6 +77,8 @@ public class TestCaseService {
     TestCaseIssueService testCaseIssueService;
     @Resource
     TestCaseReviewTestCaseMapper testCaseReviewTestCaseMapper;
+    @Resource
+    TestCaseCommentService testCaseCommentService;
 
     public void addTestCase(TestCaseWithBLOBs testCase) {
         testCase.setName(testCase.getName());
@@ -155,6 +157,7 @@ public int deleteTestCase(String testCaseId) {
         example.createCriteria().andCaseIdEqualTo(testCaseId);
         testPlanTestCaseMapper.deleteByExample(example);
         testCaseIssueService.delTestCaseIssues(testCaseId);
+        testCaseCommentService.deleteComment(testCaseId);
         return testCaseMapper.deleteByPrimaryKey(testCaseId);
     }
 

File: backend/src/main/java/io/metersphere/dto/LicenseDTO.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.dto;
 
-import io.metersphere.xpack.license.dto.LicenseInfoDTO;
 import lombok.Data;
 
 import java.io.Serializable;

File: backend/src/main/java/io/metersphere/base/domain/Issues.java
Patch:
@@ -28,5 +28,7 @@ public class Issues implements Serializable {
 
     private String projectName;
 
+    private String currentOwner;
+
     private static final long serialVersionUID = 1L;
-}
\ No newline at end of file
+}

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -76,7 +76,7 @@ public void sendHtml(String id, List<Notice> notice, String status, String type)
                 "<body style=\"text-align: left\">\n" +
                 "    <div>\n" +
                 "      <h3>" + type + "定时任务结果通知</h3>\n" +
-                "      <p>   尊敬的用户：您好，您所执行的" + testName + "运行失败，请点击报告链接查看</p>\n" +
+                "      <p>   尊敬的用户：您好，您所执行的" + testName + "运行失败</p>\n" +
                 "    </div>\n" +
                 "</body>\n" +
                 "</html>";
@@ -89,7 +89,7 @@ public void sendHtml(String id, List<Notice> notice, String status, String type)
                 "<body style=\"text-align: left\">\n" +
                 "    <div>\n" +
                 "      <h3>" + type + "定时任务结果通知</h3>\n" +
-                "      <p>    尊敬的用户：您好，" + testName + "运行成功，请点击报告链接查看</p>\n" +
+                "      <p>    尊敬的用户：您好，" + testName + "运行成功</p>\n" +
                 "    </div>\n" +
                 "</body>\n" +
                 "</html>";

File: backend/src/main/java/io/metersphere/api/parse/MsParser.java
Patch:
@@ -3,6 +3,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.fastjson.parser.Feature;
 import io.metersphere.api.dto.ApiTestImportRequest;
 import io.metersphere.api.dto.parse.ApiImport;
 import io.metersphere.api.dto.scenario.request.RequestType;
@@ -23,7 +24,7 @@ public ApiImport parse(InputStream source, ApiTestImportRequest request) {
     }
 
     private String parsePluginFormat(String testStr) {
-        JSONObject testObject = JSONObject.parseObject(testStr);
+        JSONObject testObject = JSONObject.parseObject(testStr, Feature.OrderedField);
         if (testObject.get("scenarios") != null) {
             return testStr;
         } else {

File: backend/src/main/java/io/metersphere/excel/listener/EasyExcelListener.java
Patch:
@@ -17,7 +17,7 @@
 import java.lang.reflect.Type;
 import java.util.*;
 
-public abstract class EasyExcelListener<T> extends AnalysisEventListener<T> {
+public abstract class EasyExcelListener<T> extends AnalysisEventListener<T> implements AutoCloseable {
 
     protected List<ExcelErrData<T>> errList = new ArrayList<>();
 
@@ -153,6 +153,8 @@ public List<ExcelErrData<T>> getErrList() {
         return errList;
     }
 
+
+    @Override
     public void close() {
         this.easyExcelI18nTranslator.resetExcelProperty();
     }

File: backend/src/main/java/io/metersphere/excel/utils/EasyExcelExporter.java
Patch:
@@ -5,15 +5,14 @@
 import com.alibaba.excel.write.style.HorizontalCellStyleStrategy;
 import io.metersphere.commons.utils.LogUtil;
 import io.metersphere.exception.ExcelException;
-import org.apache.poi.ss.usermodel.IndexedColors;
 
 import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
 import java.util.List;
 
-public class EasyExcelExporter {
+public class EasyExcelExporter implements AutoCloseable {
 
     EasyExcelI18nTranslator easyExcelI18nTranslator;
 
@@ -47,6 +46,7 @@ public void export(HttpServletResponse response, List data, String fileName, Str
         }
     }
 
+    @Override
     public void close() {
         easyExcelI18nTranslator.resetExcelProperty();
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -331,9 +331,8 @@ public void testCaseTemplateExport(HttpServletResponse response) {
     public void download(HttpServletResponse res) throws IOException {
         // 发送给客户端的数据
         byte[] buff = new byte[1024];
-        InputStream	is = TestCaseService.class.getResourceAsStream("/io/metersphere/xmind/template/testcase.xml");
         try (OutputStream outputStream = res.getOutputStream();
-             BufferedInputStream bis = new BufferedInputStream(is);) {
+             BufferedInputStream bis = new BufferedInputStream(TestCaseService.class.getResourceAsStream("/io/metersphere/xmind/template/testcase.xml"));) {
             int i = bis.read(buff);
             while (i != -1) {
                 outputStream.write(buff, 0, buff.length);

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -331,8 +331,9 @@ public void testCaseTemplateExport(HttpServletResponse response) {
     public void download(HttpServletResponse res) throws IOException {
         // 发送给客户端的数据
         byte[] buff = new byte[1024];
+        InputStream	is = TestCaseService.class.getResourceAsStream("/io/metersphere/xmind/template/testcase.xml");
         try (OutputStream outputStream = res.getOutputStream();
-             BufferedInputStream bis = new BufferedInputStream(this.getClass().getResourceAsStream("/template/testcase.xmind"));) {
+             BufferedInputStream bis = new BufferedInputStream(is);) {
             int i = bis.read(buff);
             while (i != -1) {
                 outputStream.write(buff, 0, buff.length);

File: backend/src/main/java/io/metersphere/notice/service/MailService.java
Patch:
@@ -65,6 +65,7 @@ public void sendHtml(String id, List<Notice> notice, String status, String type)
         } else if (type.equals("performance")) {
             LoadTestDTO performanceResult = apiAndPerformanceHelper.getPerformance(id);
             testName = performanceResult.getName();
+            status = performanceResult.getStatus();
         }
         String html1 = "<!DOCTYPE html>\n" +
                 "<html lang=\"en\">\n" +

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -239,7 +239,7 @@ public String run(RunTestPlanRequest request) {
         startEngine(loadTest, engine, request.getTriggerMode());
         if (request.getTriggerMode().equals("SCHEDULE")) {
             List<Notice> notice = noticeService.queryNotice(request.getId());
-            mailService.sendHtml(engine.getReportId(), notice, "success", "performance");
+            mailService.sendHtml(engine.getReportId(), notice, "status", "performance");
         }
         return engine.getReportId();
     }

File: backend/src/main/java/io/metersphere/commons/constants/TestCaseConstants.java
Patch:
@@ -6,7 +6,7 @@
 
 public class TestCaseConstants {
 
-    public static final int MAX_NODE_DEPTH = 5;
+    public static final int MAX_NODE_DEPTH = 8;
 
     public enum Type {
         Functional("functional"), Performance("performance"), Aapi("api");

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -334,6 +334,7 @@ public static void download(HttpServletResponse res) throws IOException {
         byte[] buff = new byte[1024];
         // 读取filename
         String filePath = ClassLoader.getSystemResource("template/testcase.xmind").getPath();
+        LogUtil.info("模版文件路径："+filePath);
         try (BufferedInputStream bis = new BufferedInputStream(new FileInputStream(new File(filePath)));) {
             int i = bis.read(buff);
             while (i != -1) {
@@ -348,7 +349,7 @@ public static void download(HttpServletResponse res) throws IOException {
 
     public void testCaseXmindTemplateExport(HttpServletResponse response) {
         try {
-            response.setContentType("application/vnd.ms-excel");
+            response.setContentType("application/octet-stream");
             response.setCharacterEncoding("utf-8");
             response.setHeader("Content-disposition", "attachment;filename=" + URLEncoder.encode("思维导图用例模版", "UTF-8") + ".xmind");
             download(response);

File: backend/src/main/java/io/metersphere/xmind/parser/domain/Attached.java
Patch:
@@ -12,6 +12,7 @@ public class Attached {
 	private String title;
 	private Notes notes;
 	private String path;
+	private Attached parent;
 	private List<Comments> comments;
 	private Children children;
 

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -223,10 +223,10 @@ public String run(SaveAPITestRequest request) {
             apiTest.setUserId(request.getUserId());
         }
         String reportId = apiReportService.create(apiTest, request.getTriggerMode());
-        if (request.getTriggerMode().equals("SCHEDULE")) {
+        /*if (request.getTriggerMode().equals("SCHEDULE")) {
             List<Notice> notice = noticeService.queryNotice(request.getId());
             mailService.sendHtml(reportId,notice,"api");
-        }
+        }*/
         changeStatus(request.getId(), APITestStatus.Running);
         jMeterService.run(request.getId(), null, is);
         return reportId;

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -239,7 +239,7 @@ public String run(RunTestPlanRequest request) {
         startEngine(loadTest, engine, request.getTriggerMode());
         if (request.getTriggerMode().equals("SCHEDULE")) {
             List<Notice> notice = noticeService.queryNotice(request.getId());
-            mailService.sendHtml(engine.getReportId(),notice,"performance");
+            mailService.sendHtml(engine.getReportId(), notice, "success", "performance");
         }
         return engine.getReportId();
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -255,7 +255,7 @@ public ExcelResponse testCaseImport(MultipartFile multipartFile, String projectI
                 String processLog = new XmindToTestCaseParser(this, userId, projectId, testCaseNames).importXmind(multipartFile);
                 if (!StringUtils.isEmpty(processLog)) {
                     excelResponse.setSuccess(false);
-                    ExcelErrData excelErrData = new ExcelErrData(null, 1, processLog);
+                    ExcelErrData excelErrData = new ExcelErrData(null, 1, Translator.get("upload_fail")+"："+ processLog);
                     errList.add(excelErrData);
                     excelResponse.setErrList(errList);
                 } else {

File: backend/src/main/java/io/metersphere/xmind/XmindToTestCaseParser.java
Patch:
@@ -222,7 +222,10 @@ public String importXmind(MultipartFile multipartFile) {
         StringBuffer processBuffer = new StringBuffer();
         try {
             File file = multipartFileToFile(multipartFile);
+            if (file == null || !file.exists())
+                return Translator.get("incorrect_format");
             JsonRootBean root = XmindParser.parseObject(file);
+            file.delete();
             if (root != null && root.getRootTopic() != null && root.getRootTopic().getChildren() != null) {
                 // 判断是模块还是用例
                 root.getRootTopic().getChildren().getAttached().forEach(item -> {

File: backend/src/main/java/io/metersphere/xmind/XmindToTestCaseParser.java
Patch:
@@ -76,6 +76,7 @@ public String getSteps(List<Attached> attacheds) {
         return jsonArray.toJSONString();
     }
 
+    // 初始化一个用例
     private void newTestCase(String title, String nodePath, List<Attached> attacheds) {
         TestCaseWithBLOBs testCase = new TestCaseWithBLOBs();
         testCase.setProjectId(projectId);
@@ -88,6 +89,7 @@ private void newTestCase(String title, String nodePath, List<Attached> attacheds
         String tcArr[] = tc.split(":");
         if (tcArr.length != 2) {
             process.append(Translator.get("test_case_name") + "【 " + title + " 】" + Translator.get("incorrect_format"));
+            return;
         }
         // 用例名称
         testCase.setName(tcArr[1].replace("tc:|tc：", ""));

File: backend/src/main/java/io/metersphere/track/request/testcase/TestCaseBatchRequest.java
Patch:
@@ -12,4 +12,5 @@
 public class TestCaseBatchRequest extends TestCaseWithBLOBs {
     private List<String> ids;
     private List<OrderRequest> orders;
+    private String projectId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtTestPlanMapper {
     List<TestPlanDTO> list(@Param("request") QueryTestPlanRequest params);
 
     List<TestPlanDTOWithMetric> listRelate(@Param("request") QueryTestPlanRequest params);
+
+    List<TestPlanDTO> planList(@Param("request") QueryTestPlanRequest params);
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtUserMapper.java
Patch:
@@ -16,4 +16,6 @@ public interface ExtUserMapper {
 
     List<User> searchUser(String condition);
 
+    List<String>  queryEmails(String[] names);
+
 }

File: backend/src/main/java/io/metersphere/job/sechedule/ApiTestJob.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.metersphere.api.dto.SaveAPITestRequest;
 import io.metersphere.api.service.APITestService;
+import io.metersphere.notice.service.MailService;
 import io.metersphere.commons.constants.ReportTriggerMode;
 import io.metersphere.commons.constants.ScheduleGroup;
 import io.metersphere.commons.utils.CommonBeanFactory;
@@ -13,7 +14,7 @@
 public class ApiTestJob extends MsScheduleJob {
 
     private APITestService apiTestService;
-
+    private MailService mailService;
     public ApiTestJob() {
         apiTestService = (APITestService) CommonBeanFactory.getBean(APITestService.class);
     }

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -61,6 +61,9 @@ public class UserService {
     @Resource
     private WorkspaceService workspaceService;
 
+    public List<String> queryEmail(String[] names){
+     return extUserMapper.queryEmails(names);
+    }
     public UserDTO insert(UserRequest user) {
         checkUserParam(user);
         //

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -46,8 +46,8 @@ public Pager<List<TestPlanDTO>> list(@PathVariable int goPage, @PathVariable int
     public List<TestPlanDTO> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
         QueryTestPlanRequest request = new QueryTestPlanRequest();
         request.setWorkspaceId(workspaceId);
-//        request.setProjectId(projectId);
-        return testPlanService.listTestPlan(request);
+        request.setProjectId(projectId);
+        return testPlanService.listTestPlanByProject(request);
     }
 
     @PostMapping("/list/all")

File: backend/src/main/java/io/metersphere/track/request/testcase/IssuesRequest.java
Patch:
@@ -3,11 +3,14 @@
 import lombok.Getter;
 import lombok.Setter;
 
+import java.util.List;
+
 @Getter
 @Setter
 public class IssuesRequest {
     private String title;
     private String content;
     private String projectId;
     private String testCaseId;
+    private List<String> tapdUsers;
 }

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestPlanRequest.java
Patch:
@@ -21,4 +21,6 @@ public class QueryTestPlanRequest extends TestPlan {
     private Map<String, List<String>> filters;
 
     private Map<String, Object> combine;
+
+    private String projectId;
 }

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtTestPlanMapper {
     List<TestPlanDTO> list(@Param("request") QueryTestPlanRequest params);
 
     List<TestPlanDTOWithMetric> listRelate(@Param("request") QueryTestPlanRequest params);
+
+    List<TestPlanDTO> planList(@Param("request") QueryTestPlanRequest params);
 }

File: backend/src/main/java/io/metersphere/track/controller/TestPlanController.java
Patch:
@@ -46,8 +46,8 @@ public Pager<List<TestPlanDTO>> list(@PathVariable int goPage, @PathVariable int
     public List<TestPlanDTO> listByProjectId(@PathVariable String projectId, @PathVariable String workspaceId) {
         QueryTestPlanRequest request = new QueryTestPlanRequest();
         request.setWorkspaceId(workspaceId);
-//        request.setProjectId(projectId);
-        return testPlanService.listTestPlan(request);
+        request.setProjectId(projectId);
+        return testPlanService.listTestPlanByProject(request);
     }
 
     @PostMapping("/list/all")

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestPlanRequest.java
Patch:
@@ -21,4 +21,6 @@ public class QueryTestPlanRequest extends TestPlan {
     private Map<String, List<String>> filters;
 
     private Map<String, Object> combine;
+
+    private String projectId;
 }

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -19,7 +19,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         System.out.println("================= 应用启动 =================");
 
         try {
-            Thread.sleep(5 * 60 * 1000);
+            Thread.sleep(3 * 60 * 1000);
         } catch (InterruptedException e) {
             e.printStackTrace();
         }

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -19,7 +19,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         System.out.println("================= 应用启动 =================");
 
         try {
-            Thread.sleep(5 * 60 * 1000);
+            Thread.sleep(3 * 60 * 1000);
         } catch (InterruptedException e) {
             e.printStackTrace();
         }

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -66,7 +66,7 @@ public void create(@RequestPart("request") SaveAPITestRequest request, @RequestP
 
     @PostMapping(value = "/update", consumes = {"multipart/form-data"})
     public void update(@RequestPart("request") SaveAPITestRequest request, @RequestPart(value = "file") MultipartFile file, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
-            apiTestService.update(request, file, bodyFiles);
+        apiTestService.update(request, file, bodyFiles);
     }
 
     @PostMapping(value = "/copy")

File: backend/src/main/java/io/metersphere/api/parse/JmeterDocumentParser.java
Patch:
@@ -157,7 +157,7 @@ private static void processStringProp(Element ele) {
                     u += k + "=" + ScriptEngineUtils.calculate(v);
                     return u;
                 });
-                ele.setTextContent(url + params);
+                ele.setTextContent(url + ((params != null && !params.equals("?")) ? params : ""));
                 break;
             case "Argument.value":
                 String textContent = ele.getTextContent();

File: backend/src/main/java/io/metersphere/api/dto/scenario/request/HttpRequest.java
Patch:
@@ -44,7 +44,7 @@ public class HttpRequest implements Request {
     @JSONField(ordinal = 13)
     private Boolean enable;
     @JSONField(ordinal = 14)
-    private Integer connectTimeout;
+    private Long connectTimeout;
     @JSONField(ordinal = 15)
-    private Integer responseTimeout;
+    private Long responseTimeout;
 }

File: backend/src/main/java/io/metersphere/track/service/TestPlanTestCaseService.java
Patch:
@@ -85,6 +85,7 @@ public void editTestCaseBath(TestPlanCaseBatchRequest request) {
 
         TestPlanTestCaseWithBLOBs testPlanTestCase = new TestPlanTestCaseWithBLOBs();
         BeanUtils.copyBean(testPlanTestCase, request);
+        testPlanTestCase.setUpdateTime(System.currentTimeMillis());
         testPlanTestCaseMapper.updateByExampleSelective(
                 testPlanTestCase,
                 testPlanTestCaseExample);

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -91,8 +91,8 @@ public String run(@RequestBody SaveAPITestRequest request) {
     }
 
     @PostMapping(value = "/run/debug", consumes = {"multipart/form-data"})
-    public String runDebug(@RequestPart("request")  SaveAPITestRequest request,  @RequestPart(value = "file") MultipartFile file) {
-        return apiTestService.runDebug(request, file);
+    public String runDebug(@RequestPart("request")  SaveAPITestRequest request,  @RequestPart(value = "file") MultipartFile file, @RequestPart(value = "files") List<MultipartFile> bodyFiles) {
+        return apiTestService.runDebug(request, file, bodyFiles);
     }
 
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})

File: backend/src/main/java/io/metersphere/base/domain/Issues.java
Patch:
@@ -26,5 +26,7 @@ public class Issues implements Serializable {
 
     private String model;
 
+    private String created;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -269,7 +269,7 @@ public TestCaseReportMetricDTO getMetric(String planId) {
             List<Issues> issue = issuesService.getIssues(testCase.getCaseId());
             if (issue.size() > 0) {
                 for (Issues i : issue) {
-                    i.setModel(testCase.getModel());
+                    i.setModel(testCase.getNodePath());
                     String des = i.getDescription().replaceAll("<p>", "").replaceAll("</p>", "");
                     i.setDescription(des);
                 }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -430,6 +430,7 @@ public void editTestCaseBath(TestCaseBatchRequest request) {
 
         TestCaseWithBLOBs testCase = new TestCaseWithBLOBs();
         BeanUtils.copyBean(testCase, request);
+        testCase.setUpdateTime(System.currentTimeMillis());
         testCaseMapper.updateByExampleSelective(
                 testCase,
                 testCaseExample);

File: backend/src/main/java/io/metersphere/track/service/IssuesService.java
Patch:
@@ -235,7 +235,7 @@ public void addJiraIssues(IssuesRequest issuesRequest) {
                 "            \"key\":\"" + jiraKey + "\"\n" +
                 "        },\n" +
                 "        \"summary\":\"" + issuesRequest.getTitle() + "\",\n" +
-                "        \"description\":\"" + issuesRequest.getContent() + "\",\n" +
+                "        \"description\": " + JSON.toJSONString(issuesRequest.getContent()) + ",\n" +
                 "        \"issuetype\":{\n" +
                 "            \"id\":\"10009\",\n" +
                 "            \"name\":\"Defect\"\n" +

File: backend/src/main/java/io/metersphere/api/parse/JmeterDocumentParser.java
Patch:
@@ -151,9 +151,7 @@ private static void processStringProp(Element ele) {
                 String url = parser.get("URL");
                 String params = parser.keySet().stream().filter(k -> !"URL".equals(k)).reduce("?", (u, k) -> {
                     String v = parser.get(k);
-                    if ("?".equals(u)) {
-                        u += "";
-                    } else {
+                    if (!StringUtils.equals("?", u)) {
                         u += "&";
                     }
                     u += k + "=" + ScriptEngineUtils.calculate(v);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtProjectMapper.java
Patch:
@@ -11,4 +11,6 @@ public interface ExtProjectMapper {
     List<ProjectDTO> getProjectWithWorkspace(@Param("proRequest") ProjectRequest request);
 
     List<String> getProjectIdByWorkspaceId(String workspaceId);
+
+    int removeIssuePlatform(@Param("platform") String platform, @Param("orgId") String orgId);
 }

File: backend/src/main/java/io/metersphere/track/controller/TestCaseIssuesController.java
Patch:
@@ -1,7 +1,7 @@
 package io.metersphere.track.controller;
 
 import io.metersphere.base.domain.Issues;
-import io.metersphere.service.IssuesService;
+import io.metersphere.track.service.IssuesService;
 import io.metersphere.track.request.testcase.IssuesRequest;
 import org.springframework.web.bind.annotation.*;
 

File: backend/src/main/java/io/metersphere/commons/constants/SsoMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
-public enum OssMode {
+public enum SsoMode {
     CAS,LOCAL
 }

File: backend/src/main/java/io/metersphere/config/ShiroConfig.java
Patch:
@@ -29,7 +29,7 @@
 import java.util.Objects;
 
 @Configuration
-@ConditionalOnProperty(prefix="oss",name = "mode", havingValue = "local", matchIfMissing = true)
+@ConditionalOnProperty(prefix="sso",name = "mode", havingValue = "local", matchIfMissing = true)
 public class ShiroConfig implements EnvironmentAware {
     private Environment env;
 

File: backend/src/main/java/io/metersphere/controller/IndexController.java
Patch:
@@ -24,12 +24,12 @@ public String login() {
         }
     }
 
-    @GetMapping(value = "/oss/login")
+    @GetMapping(value = "/sso/login")
     public String ossLogin() {
         return "redirect:/";
     }
 
-    @GetMapping(value = "/oss/logout")
+    @GetMapping(value = "/sso/logout")
     public void ossLogout() {
         SecurityUtils.getSubject().logout();
     }

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -297,8 +297,8 @@ public List<DubboProvider> getProviders(RegistryCenter registry) {
             if (info.length > 1) {
                 provider.setVersion(info[1]);
             }
-            provider.setService(info[0]);
-            provider.setServiceInterface(p);
+            provider.setService(p);
+            provider.setServiceInterface(info[0]);
             Map<String, URL> services = providerService.findByService(p);
             if (services != null && !services.isEmpty()) {
                 String[] methods = services.values().stream().findFirst().get().getParameter(CommonConstants.METHODS_KEY).split(",");

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -415,7 +415,7 @@ public void dragNode(DragNodeRequest request) {
 
         List<TestCaseNode> updateNodes = new ArrayList<>();
 
-        buildUpdateTestCase(nodeTree, testCases, updateNodes, "/", null, 1);
+        buildUpdateTestCase(nodeTree, testCases, updateNodes, "/", "0", 1);
 
         updateNodes = updateNodes.stream()
                 .filter(item -> nodeIds.contains(item.getId()))

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -415,7 +415,7 @@ public void dragNode(DragNodeRequest request) {
 
         List<TestCaseNode> updateNodes = new ArrayList<>();
 
-        buildUpdateTestCase(nodeTree, testCases, updateNodes, "/", null, 1);
+        buildUpdateTestCase(nodeTree, testCases, updateNodes, "/", "0", 1);
 
         updateNodes = updateNodes.stream()
                 .filter(item -> nodeIds.contains(item.getId()))

File: backend/src/main/java/io/metersphere/track/request/testcase/TestCaseBatchRequest.java
Patch:
@@ -1,6 +1,7 @@
 package io.metersphere.track.request.testcase;
 
 import io.metersphere.base.domain.TestCaseWithBLOBs;
+import io.metersphere.controller.request.OrderRequest;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -10,4 +11,5 @@
 @Setter
 public class TestCaseBatchRequest extends TestCaseWithBLOBs {
     private List<String> ids;
+    private List<OrderRequest> orders;
 }

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -128,7 +128,6 @@ public List<User> getOrgMemberListByAdmin(@RequestBody QueryOrgMemberRequest req
     }
 
     @GetMapping("/list")
-    @RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.ORG_ADMIN, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
     public List<User> getUserList() {
         return userService.getUserList();
     }

File: backend/src/main/java/io/metersphere/api/parse/Swagger2Parser.java
Patch:
@@ -146,8 +146,7 @@ private void parseBodyParameters(Parameter parameter, HttpRequest request, Map<S
             }
         }
         request.setBody(body);
-        addContentType(request, "application/json");
-
+        body.setFormat("json");
     }
 
     private JSONObject getBodyJSONObjectParameters(Map<String, Property> properties, Map<String, Model> definitions) {

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanCollection.java
Patch:
@@ -8,6 +8,6 @@
 public class PostmanCollection {
 
     private PostmanCollectionInfo info;
-
     private List<PostmanItem> item;
+    private List<PostmanKeyValue> variable;
 }

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanItem.java
Patch:
@@ -2,9 +2,11 @@
 
 import lombok.Data;
 
+import java.util.List;
+
 @Data
 public class PostmanItem {
-
     private String name;
     private PostmanRequest request;
+    private List<PostmanItem> item;
 }

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -751,7 +751,8 @@ private void processThreadGroup(Element threadGroup) {
         threadGroup.appendChild(createStringProp(document, "Steps", "2"));
         threadGroup.appendChild(createStringProp(document, "Hold", String.valueOf(realHold)));
         threadGroup.appendChild(createStringProp(document, "LogFilename", ""));
-        threadGroup.appendChild(createStringProp(document, "Iterations", "1"));
+        // bzm - Concurrency Thread Group "Thread Iterations Limit:" 设置为空
+//        threadGroup.appendChild(createStringProp(document, "Iterations", "1"));
         threadGroup.appendChild(createStringProp(document, "Unit", "M"));
     }
 

File: backend/src/main/java/io/metersphere/commons/constants/APITestStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
 public enum APITestStatus {
-    Saved, Starting, Running, Reporting, Completed, Error
+    Saved, Starting, Running, Reporting, Completed, Error, Success
 }

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -264,7 +264,7 @@ public ApiTest apiTestImport(MultipartFile file, ApiTestImportRequest request) {
         ApiImportParser apiImportParser = ApiImportParserFactory.getApiImportParser(request.getPlatform());
         ApiImport apiImport = null;
         try {
-            apiImport = Objects.requireNonNull(apiImportParser).parse(file.getInputStream(), request);
+            apiImport = Objects.requireNonNull(apiImportParser).parse(file == null ? null : file.getInputStream(), request);
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e);
             MSException.throwException(Translator.get("parse_data_error"));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -1,9 +1,8 @@
 package io.metersphere.base.mapper.ext;
 
-import io.metersphere.base.domain.Workspace;
-import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
 import io.metersphere.track.dto.TestCaseReportStatusResultDTO;
 import io.metersphere.track.dto.TestPlanCaseDTO;
+import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;

File: backend/src/main/java/io/metersphere/api/controller/APIReportController.java
Patch:
@@ -16,7 +16,6 @@
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
-
 import java.util.List;
 
 @RestController

File: backend/src/main/java/io/metersphere/api/controller/APITestController.java
Patch:
@@ -16,9 +16,8 @@
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 
-import java.util.List;
-
 import javax.annotation.Resource;
+import java.util.List;
 
 @RestController
 @RequestMapping(value = "/api")
@@ -95,7 +94,7 @@ public String run(@RequestBody SaveAPITestRequest request) {
 
     @PostMapping(value = "/import", consumes = {"multipart/form-data"})
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public ApiTest testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request")  ApiTestImportRequest request) {
+    public ApiTest testCaseImport(@RequestPart(value = "file", required = false) MultipartFile file, @RequestPart("request") ApiTestImportRequest request) {
         return apiTestService.apiTestImport(file, request);
     }
 

File: backend/src/main/java/io/metersphere/api/dto/parse/postman/PostmanItem.java
Patch:
@@ -1,10 +1,7 @@
 package io.metersphere.api.dto.parse.postman;
 
-import com.alibaba.fastjson.annotation.JSONField;
 import lombok.Data;
 
-import java.util.List;
-
 @Data
 public class PostmanItem {
 

File: backend/src/main/java/io/metersphere/api/dto/scenario/extract/ExtractRegex.java
Patch:
@@ -7,6 +7,7 @@
 @Data
 public class ExtractRegex extends ExtractCommon {
     private String useHeaders;
+
     public ExtractRegex() {
         setType(ExtractType.REGEX);
     }

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.api.jmeter;
 
-import io.github.ningyu.jmeter.plugin.dubbo.sample.ProviderService;
 import io.metersphere.api.service.APIReportService;
 import io.metersphere.api.service.APITestService;
 import io.metersphere.commons.constants.APITestStatus;

File: backend/src/main/java/io/metersphere/api/jmeter/JMeterService.java
Patch:
@@ -10,11 +10,10 @@
 import org.apache.jorphan.collections.HashTree;
 import org.springframework.stereotype.Service;
 
+import javax.annotation.Resource;
 import java.io.InputStream;
 import java.lang.reflect.Field;
 
-import javax.annotation.Resource;
-
 @Service
 public class JMeterService {
 

File: backend/src/main/java/io/metersphere/api/parse/ApiImportParserFactory.java
Patch:
@@ -1,9 +1,6 @@
 package io.metersphere.api.parse;
 
 import io.metersphere.commons.constants.ApiImportPlatform;
-import io.metersphere.commons.constants.FileType;
-import io.metersphere.performance.parse.EngineSourceParser;
-import io.metersphere.performance.parse.xml.XmlEngineSourceParse;
 import org.apache.commons.lang3.StringUtils;
 
 public class ApiImportParserFactory {

File: backend/src/main/java/io/metersphere/api/parse/PostmanParser.java
Patch:
@@ -7,8 +7,8 @@
 import io.metersphere.api.dto.parse.postman.*;
 import io.metersphere.api.dto.scenario.Body;
 import io.metersphere.api.dto.scenario.KeyValue;
-import io.metersphere.api.dto.scenario.request.HttpRequest;
 import io.metersphere.api.dto.scenario.Scenario;
+import io.metersphere.api.dto.scenario.request.HttpRequest;
 import io.metersphere.api.dto.scenario.request.Request;
 import io.metersphere.commons.constants.MsRequestBodyType;
 import io.metersphere.commons.constants.PostmanRequestBodyMode;

File: backend/src/main/java/io/metersphere/api/service/APIReportService.java
Patch:
@@ -12,19 +12,16 @@
 import io.metersphere.commons.constants.APITestStatus;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.ServiceUtils;
-import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.i18n.Translator;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
-
 import java.nio.charset.StandardCharsets;
 import java.time.Instant;
 import java.time.temporal.ChronoUnit;
 import java.util.List;
-import java.util.Objects;
 import java.util.UUID;
 
 @Service

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -34,9 +34,7 @@
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
-
 import java.io.ByteArrayInputStream;
-import java.io.File;
 import java.io.InputStream;
 import java.util.*;
 import java.util.stream.Collectors;

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -21,7 +21,7 @@ public class ApiTestEnvironmentService {
     private ApiTestEnvironmentMapper apiTestEnvironmentMapper;
 
     public List<ApiTestEnvironmentWithBLOBs> list(String projectId) {
-        ApiTestEnvironmentExample example =new ApiTestEnvironmentExample();
+        ApiTestEnvironmentExample example = new ApiTestEnvironmentExample();
         example.createCriteria().andProjectIdEqualTo(projectId);
         return apiTestEnvironmentMapper.selectByExampleWithBLOBs(example);
     }
@@ -46,7 +46,7 @@ public String add(ApiTestEnvironmentWithBLOBs apiTestEnvironmentWithBLOBs) {
         return apiTestEnvironmentWithBLOBs.getId();
     }
 
-    private void checkEnvironmentExist (ApiTestEnvironmentWithBLOBs environment) {
+    private void checkEnvironmentExist(ApiTestEnvironmentWithBLOBs environment) {
         if (environment.getName() != null) {
             ApiTestEnvironmentExample example = new ApiTestEnvironmentExample();
             ApiTestEnvironmentExample.Criteria criteria = example.createCriteria();

File: backend/src/main/java/io/metersphere/commons/constants/ApiImportPlatform.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
-public enum  ApiImportPlatform {
+public enum ApiImportPlatform {
     Metersphere, Postman, Swagger2
 }

File: backend/src/main/java/io/metersphere/commons/constants/ReportTriggerMode.java
Patch:
@@ -1,5 +1,5 @@
 package io.metersphere.commons.constants;
 
-public enum  ReportTriggerMode {
-    MANUAL,SCHEDULE,API
+public enum ReportTriggerMode {
+    MANUAL, SCHEDULE, API
 }

File: backend/src/main/java/io/metersphere/commons/utils/MathUtils.java
Patch:
@@ -7,6 +7,7 @@ public class MathUtils {
     /**
      * 获取百分比
      * 保留一位小数
+     *
      * @param value
      * @return
      */

File: backend/src/main/java/io/metersphere/config/I18nConfig.java
Patch:
@@ -7,9 +7,7 @@
 import org.springframework.context.MessageSource;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
-import org.springframework.context.annotation.Primary;
 import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;
-import org.springframework.validation.beanvalidation.MethodValidationPostProcessor;
 
 import javax.validation.Validator;
 
@@ -31,6 +29,7 @@ public CommonBeanFactory commonBeanFactory() {
 
     /**
      * JSR-303校验国际化
+     *
      * @param messageSource
      * @return
      */
@@ -43,7 +42,7 @@ public LocalValidatorFactoryBean localValidatorFactoryBean(MessageSource message
     }
 
     @Bean
-    public Validator validator(LocalValidatorFactoryBean localValidatorFactoryBean){
+    public Validator validator(LocalValidatorFactoryBean localValidatorFactoryBean) {
         return localValidatorFactoryBean.getValidator();
     }
 

File: backend/src/main/java/io/metersphere/config/QuartzAutoConfiguration.java
Patch:
@@ -7,7 +7,6 @@
 import com.fit2cloud.quartz.util.QuartzBeanFactory;
 import org.springframework.beans.factory.ObjectProvider;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;

File: backend/src/main/java/io/metersphere/controller/ScheduleController.java
Patch:
@@ -1,7 +1,8 @@
 package io.metersphere.controller;
 
 import io.metersphere.service.ScheduleService;
-import org.springframework.web.bind.annotation.*;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
 
 import javax.annotation.Resource;
 

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -5,7 +5,6 @@
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.ldap.domain.LdapInfo;
 import io.metersphere.service.SystemParameterService;
-import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 

File: backend/src/main/java/io/metersphere/controller/UserRoleController.java
Patch:
@@ -9,6 +9,7 @@
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
+
 import javax.annotation.Resource;
 import java.util.List;
 import java.util.Map;
@@ -34,7 +35,7 @@ public List<Role> getWorkspaceMemberRoles(@PathVariable String workspaceId, @Pat
 
     @GetMapping("/all/{userId}")
     @RequiresRoles(RoleConstants.ADMIN)
-    public List<Map<String,Object>> getUserRole(@PathVariable("userId") String userId) {
+    public List<Map<String, Object>> getUserRole(@PathVariable("userId") String userId) {
         return userRoleService.getUserRole(userId);
     }
 }

File: backend/src/main/java/io/metersphere/controller/request/member/UserRequest.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.User;
 import lombok.Getter;
 import lombok.Setter;
+
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -11,6 +12,6 @@
 @Setter
 public class UserRequest extends User {
 
-    private List<Map<String,Object>> roles = new ArrayList<>();
+    private List<Map<String, Object>> roles = new ArrayList<>();
 
 }

File: backend/src/main/java/io/metersphere/dto/UserRoleDTO.java
Patch:
@@ -4,6 +4,7 @@
 import io.metersphere.base.domain.UserRole;
 import lombok.Getter;
 import lombok.Setter;
+
 import java.util.List;
 
 @Getter

File: backend/src/main/java/io/metersphere/excel/domain/ExcelErrData.java
Patch:
@@ -11,9 +11,10 @@ public class ExcelErrData<T> {
 
     private String errMsg;
 
-    public ExcelErrData(){}
+    public ExcelErrData() {
+    }
 
-    public ExcelErrData(T t, Integer rowNum,String errMsg){
+    public ExcelErrData(T t, Integer rowNum, String errMsg) {
         this.t = t;
         this.rowNum = rowNum;
         this.errMsg = errMsg;

File: backend/src/main/java/io/metersphere/excel/domain/ExcelResponse.java
Patch:
@@ -3,6 +3,7 @@
 import lombok.Data;
 
 import java.util.List;
+
 @Data
 public class ExcelResponse<T> {
 

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -42,7 +42,7 @@ public String validate(TestCaseExcelData data, String errMsg) {
 
         if (nodePath != null) {
             String[] nodes = nodePath.split("/");
-            if ( nodes.length > TestCaseConstants.MAX_NODE_DEPTH + 1) {
+            if (nodes.length > TestCaseConstants.MAX_NODE_DEPTH + 1) {
                 stringBuilder.append(Translator.get("test_case_node_level_tip") +
                         TestCaseConstants.MAX_NODE_DEPTH + Translator.get("test_case_node_level"));
             }
@@ -122,7 +122,7 @@ private TestCaseWithBLOBs convert2TestCase(TestCaseExcelData data) {
         String pattern = "(^\\d+)(\\.)?";
         int index = stepDesc.length > stepRes.length ? stepDesc.length : stepRes.length;
 
-        for (int i = 0; i < index; i++){
+        for (int i = 0; i < index; i++) {
 
             JSONObject step = new JSONObject();
             step.put("num", i + 1);

File: backend/src/main/java/io/metersphere/excel/utils/ExcelValidateHelper.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.alibaba.excel.annotation.ExcelProperty;
 import org.springframework.stereotype.Component;
-import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;
 
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
@@ -20,15 +19,15 @@ public class ExcelValidateHelper {
     @Resource
     Validator validator;
 
-    public static  <T> String validateEntity(T obj) throws NoSuchFieldException {
+    public static <T> String validateEntity(T obj) throws NoSuchFieldException {
         StringBuilder result = new StringBuilder();
         Set<ConstraintViolation<T>> set = excelValidateHelper.validator.validate(obj, Default.class);
         if (set != null && !set.isEmpty()) {
             for (ConstraintViolation<T> cv : set) {
                 Field declaredField = obj.getClass().getDeclaredField(cv.getPropertyPath().toString());
                 ExcelProperty annotation = declaredField.getAnnotation(ExcelProperty.class);
                 //拼接错误信息，包含当前出错数据的标题名字+错误信息
-                result.append(annotation.value()[0]+cv.getMessage()).append("; ");
+                result.append(annotation.value()[0] + cv.getMessage()).append("; ");
             }
         }
         return result.toString();

File: backend/src/main/java/io/metersphere/exception/ExcelException.java
Patch:
@@ -7,11 +7,11 @@ public class ExcelException extends RuntimeException {
 
     private static final long serialVersionUID = 1L;
 
-    public ExcelException(String message, Exception e){
+    public ExcelException(String message, Exception e) {
         super(message, e);
     }
 
-    public ExcelException(String message){
+    public ExcelException(String message) {
         super(message);
     }
 

File: backend/src/main/java/io/metersphere/job/sechedule/MsScheduleJob.java
Patch:
@@ -20,7 +20,7 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.userId = jobDataMap.getString("userId");
         this.expression = jobDataMap.getString("expression");
 
-        LogUtil.info(jobKey.getGroup()+ " Running: " + resourceId);
+        LogUtil.info(jobKey.getGroup() + " Running: " + resourceId);
         LogUtil.info("CronExpression: " + expression);
         businessExecute(context);
     }

File: backend/src/main/java/io/metersphere/ldap/domain/Person.java
Patch:
@@ -14,7 +14,7 @@ public class Person {
 
     @Id
     private Name id;
-    @DnAttribute(value="uid",index = 0)
+    @DnAttribute(value = "uid", index = 0)
     private String uid;
     @Attribute(name = "cn")
     private String commonName;

File: backend/src/main/java/io/metersphere/ldap/service/LdapService.java
Patch:
@@ -55,7 +55,6 @@ public DirContextOperations authenticate(LoginRequest request) {
         getMappingAttr("email", dirContextOperations);
 
 
-
         return dirContextOperations;
     }
 

File: backend/src/main/java/io/metersphere/listener/AppStartListener.java
Patch:
@@ -19,7 +19,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         System.out.println("================= 应用启动 =================");
 
         try {
-            Thread.sleep(5*60*1000);
+            Thread.sleep(5 * 60 * 1000);
         } catch (InterruptedException e) {
             e.printStackTrace();
         }

File: backend/src/main/java/io/metersphere/service/FileService.java
Patch:
@@ -10,13 +10,12 @@
 import org.springframework.util.CollectionUtils;
 import org.springframework.web.multipart.MultipartFile;
 
+import javax.annotation.Resource;
 import java.io.IOException;
 import java.util.List;
 import java.util.UUID;
 import java.util.stream.Collectors;
 
-import javax.annotation.Resource;
-
 @Service
 public class FileService {
     @Resource

File: backend/src/main/java/io/metersphere/service/ProjectService.java
Patch:
@@ -129,7 +129,7 @@ public void updateProject(Project project) {
         projectMapper.updateByPrimaryKeySelective(project);
     }
 
-    private void checkProjectExist (Project project) {
+    private void checkProjectExist(Project project) {
         if (project.getName() != null) {
             ProjectExample example = new ProjectExample();
             example.createCriteria()

File: backend/src/main/java/io/metersphere/service/RoleService.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.base.mapper.ext.ExtRoleMapper;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
+
 import javax.annotation.Resource;
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/service/SystemParameterService.java
Patch:
@@ -13,6 +13,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.mail.javamail.JavaMailSenderImpl;
 import org.springframework.stereotype.Service;
+
 import javax.annotation.Resource;
 import javax.mail.MessagingException;
 import java.util.*;

File: backend/src/main/java/io/metersphere/service/TestResourcePoolService.java
Patch:
@@ -18,7 +18,6 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.client.RestTemplate;

File: backend/src/main/java/io/metersphere/service/UserRoleService.java
Patch:
@@ -33,8 +33,8 @@ public List<Role> getWorkspaceMemberRoles(String workspaceId, String userId) {
         return extUserRoleMapper.getWorkspaceMemberRoles(workspaceId, userId);
     }
 
-    public List<Map<String,Object>> getUserRole(String userId) {
-        List<Map<String,Object>> list = new ArrayList<>();
+    public List<Map<String, Object>> getUserRole(String userId) {
+        List<Map<String, Object>> list = new ArrayList<>();
         UserRoleExample userRoleExample = new UserRoleExample();
         userRoleExample.createCriteria().andUserIdEqualTo(userId);
         List<UserRole> userRoles = userRoleMapper.selectByExample(userRoleExample);

File: backend/src/main/java/io/metersphere/service/WorkspaceService.java
Patch:
@@ -26,7 +26,6 @@
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Optional;
 import java.util.UUID;
 import java.util.stream.Collectors;
 

File: backend/src/main/java/io/metersphere/track/controller/TestPlanTestCaseController.java
Patch:
@@ -2,22 +2,20 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
-import io.metersphere.base.domain.TestPlanTestCase;
 import io.metersphere.base.domain.TestPlanTestCaseWithBLOBs;
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.commons.utils.PageUtils;
 import io.metersphere.commons.utils.Pager;
+import io.metersphere.track.dto.TestPlanCaseDTO;
 import io.metersphere.track.request.testcase.TestPlanCaseBatchRequest;
 import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
-import io.metersphere.track.dto.TestPlanCaseDTO;
 import io.metersphere.track.service.TestPlanTestCaseService;
 import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.List;
 
 @RequestMapping("/test/plan/case")

File: backend/src/main/java/io/metersphere/track/domain/ReportComponent.java
Patch:
@@ -7,9 +7,12 @@
 public abstract class ReportComponent {
     protected String componentId;
     protected TestPlanDTO testPlan;
+
     public ReportComponent(TestPlanDTO testPlan) {
         this.testPlan = testPlan;
     }
+
     public abstract void readRecord(TestPlanCaseDTO testCase);
+
     public abstract void afterBuild(TestCaseReportMetricDTO testCaseReportMetric);
 }

File: backend/src/main/java/io/metersphere/track/domain/ReportFailureResultComponent.java
Patch:
@@ -11,6 +11,7 @@
 
 public class ReportFailureResultComponent extends ReportComponent {
     private List<TestPlanCaseDTO> failureTestCases = new ArrayList<>();
+
     public ReportFailureResultComponent(TestPlanDTO testPlan) {
         super(testPlan);
         componentId = "4";

File: backend/src/main/java/io/metersphere/track/dto/TestPlanDTOWithMetric.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.track.dto;
 
-import io.metersphere.base.domain.TestPlan;
 import lombok.Getter;
 import lombok.Setter;
 

File: backend/src/main/java/io/metersphere/track/request/testcase/QueryTestCaseRequest.java
Patch:
@@ -12,7 +12,7 @@
 @Setter
 public class QueryTestCaseRequest extends TestCase {
 
-    private  String name;
+    private String name;
 
     private List<String> nodeIds;
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseReportTemplateService.java
Patch:
@@ -26,11 +26,11 @@ public List<TestCaseReportTemplate> listTestCaseReportTemplate(QueryTemplateRequ
         TestCaseReportTemplateExample example = new TestCaseReportTemplateExample();
         TestCaseReportTemplateExample.Criteria criteria1 = example.createCriteria();
         TestCaseReportTemplateExample.Criteria criteria2 = example.createCriteria();
-        if ( StringUtils.isNotBlank(request.getName()) ) {
+        if (StringUtils.isNotBlank(request.getName())) {
             criteria1.andNameLike("%" + request.getName() + "%");
             criteria2.andNameLike("%" + request.getName() + "%");
         }
-        if ( StringUtils.isNotBlank(request.getWorkspaceId()) ) {
+        if (StringUtils.isNotBlank(request.getWorkspaceId())) {
             criteria1.andWorkspaceIdEqualTo(request.getWorkspaceId());
         }
         if (request.getQueryDefault() != null) {
@@ -55,7 +55,7 @@ public void editTestCaseReportTemplate(TestCaseReportTemplate testCaseReportTemp
         testCaseReportTemplateMapper.updateByPrimaryKeyWithBLOBs(testCaseReportTemplate);
     }
 
-    private void checkCaseReportTemplateExist (TestCaseReportTemplate testCaseReportTemplate) {
+    private void checkCaseReportTemplateExist(TestCaseReportTemplate testCaseReportTemplate) {
         TestCaseReportTemplateExample example = new TestCaseReportTemplateExample();
         example.createCriteria()
                 .andNameEqualTo(testCaseReportTemplate.getName())

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -250,7 +250,7 @@ public void saveImportData(List<TestCaseWithBLOBs> testCases, String projectId)
         if (!testCases.isEmpty()) {
             AtomicInteger sort = new AtomicInteger();
             AtomicInteger num = new AtomicInteger();
-            num.set(getNextNum(projectId)+testCases.size());
+            num.set(getNextNum(projectId) + testCases.size());
             testCases.forEach(testcase -> {
                 testcase.setNodeId(nodePathMap.get(testcase.getNodePath()));
                 testcase.setSort(sort.getAndIncrement());
@@ -431,14 +431,15 @@ public void checkIsRelateTest(String testId) {
 
     /**
      * 获取项目下一个num (页面展示的ID)
+     *
      * @return
      */
     private int getNextNum(String projectId) {
         TestCase testCase = extTestCaseMapper.getMaxNumByProjectId(projectId);
         if (testCase == null) {
             return 100001;
         } else {
-            return Optional.ofNullable(testCase.getNum()+1).orElse(100001);
+            return Optional.ofNullable(testCase.getNum() + 1).orElse(100001);
         }
     }
 }

File: backend/src/main/java/io/metersphere/performance/service/ReportService.java
Patch:
@@ -207,14 +207,14 @@ public List<LogDetailDTO> getReportLogResource(String reportId) {
     public List<LoadTestReportLog> getReportLogs(String reportId, String resourceId) {
         LoadTestReportLogExample example = new LoadTestReportLogExample();
         example.createCriteria().andReportIdEqualTo(reportId).andResourceIdEqualTo(resourceId);
-        example.setOrderByClause("part desc");
+        example.setOrderByClause("part");
         return loadTestReportLogMapper.selectByExampleWithBLOBs(example);
     }
 
     public List<String> downloadLog(String reportId, String resourceId) {
         LoadTestReportLogExample example = new LoadTestReportLogExample();
         example.createCriteria().andReportIdEqualTo(reportId).andResourceIdEqualTo(resourceId);
-        example.setOrderByClause("part desc");
+        example.setOrderByClause("part");
         List<LoadTestReportLog> loadTestReportLogs = loadTestReportLogMapper.selectByExampleWithBLOBs(example);
 
         return loadTestReportLogs.stream().map(LoadTestReportLog::getContent).collect(Collectors.toList());

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -140,6 +140,7 @@ public void delete(String testId) {
         testCaseService.checkIsRelateTest(testId);
         deleteFileByTestId(testId);
         apiReportService.deleteByTestId(testId);
+        scheduleService.deleteByResourceId(testId);
         apiTestMapper.deleteByPrimaryKey(testId);
     }
 

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -100,6 +100,9 @@ public void delete(DeleteTestPlanRequest request) {
             });
         }
 
+        //delete schedule
+        scheduleService.deleteByResourceId(testId);
+
         // delete load_test
         loadTestMapper.deleteByPrimaryKey(request.getId());
 

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -140,6 +140,7 @@ public void delete(String testId) {
         testCaseService.checkIsRelateTest(testId);
         deleteFileByTestId(testId);
         apiReportService.deleteByTestId(testId);
+        scheduleService.deleteByResourceId(testId);
         apiTestMapper.deleteByPrimaryKey(testId);
     }
 

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -100,6 +100,9 @@ public void delete(DeleteTestPlanRequest request) {
             });
         }
 
+        //delete schedule
+        scheduleService.deleteByResourceId(testId);
+
         // delete load_test
         loadTestMapper.deleteByPrimaryKey(request.getId());
 

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestCaseMapper.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.base.domain.TestCase;
 import io.metersphere.track.request.testcase.QueryTestCaseRequest;
 import io.metersphere.track.dto.TestCaseDTO;
+import io.metersphere.track.request.testcase.TestCaseBatchRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -15,7 +16,7 @@ public interface ExtTestCaseMapper {
 
     List<TestCaseDTO> listByMethod(@Param("request") QueryTestCaseRequest request);
 
-    List<TestCaseDTO> listBytestCaseIds(@Param("request")  QueryTestCaseRequest request);
+    List<TestCaseDTO> listBytestCaseIds(@Param("request") TestCaseBatchRequest request);
 
     TestCase getMaxNumByProjectId(@Param("projectId") String projectId);
 

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -110,9 +110,9 @@ public ExcelResponse testCaseImport(MultipartFile file, @PathVariable String pro
     public void testCaseTemplateExport(HttpServletResponse response){
         testCaseService.testCaseTemplateExport(response);
     }
-    @GetMapping("/export/testCase/{testCaseIds}")
+    @PostMapping("/export/testcase")
     @RequiresRoles(value = {RoleConstants.TEST_USER, RoleConstants.TEST_MANAGER}, logical = Logical.OR)
-    public void testCaseExport(HttpServletResponse response,QueryTestCaseRequest request){
+    public void testCaseExport( HttpServletResponse response,@RequestBody TestCaseBatchRequest request){
         testCaseService.testCaseExport(response,request);
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -310,7 +310,7 @@ private List<TestCaseExcelData> generateExportTemplate() {
         return list;
     }
 
-    public void testCaseExport(HttpServletResponse response, QueryTestCaseRequest request) {
+    public void testCaseExport(HttpServletResponse response, TestCaseBatchRequest request) {
         EasyExcelExporter easyExcelExporter = null;
         try {
             easyExcelExporter = new EasyExcelExporter(TestCaseExcelData.class);
@@ -323,7 +323,7 @@ public void testCaseExport(HttpServletResponse response, QueryTestCaseRequest re
         }
     }
 
-    private List<TestCaseExcelData> generateTestCaseExcel(QueryTestCaseRequest request) {
+    private List<TestCaseExcelData> generateTestCaseExcel(TestCaseBatchRequest request) {
         List<TestCaseDTO> TestCaseList = extTestCaseMapper.listBytestCaseIds(request);
         List<TestCaseExcelData> list = new ArrayList<>();
         SessionUser user = SessionUtils.getUser();

File: backend/src/main/java/io/metersphere/performance/service/ReportService.java
Patch:
@@ -25,6 +25,7 @@
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.stream.Collectors;
 
 @Service
 @Transactional(rollbackFor = Exception.class)
@@ -210,14 +211,13 @@ public List<LoadTestReportLog> getReportLogs(String reportId, String resourceId)
         return loadTestReportLogMapper.selectByExampleWithBLOBs(example);
     }
 
-    public byte[] downloadLog(String reportId, String resourceId) {
+    public List<String> downloadLog(String reportId, String resourceId) {
         LoadTestReportLogExample example = new LoadTestReportLogExample();
         example.createCriteria().andReportIdEqualTo(reportId).andResourceIdEqualTo(resourceId);
         example.setOrderByClause("part desc");
         List<LoadTestReportLog> loadTestReportLogs = loadTestReportLogMapper.selectByExampleWithBLOBs(example);
 
-        String content = loadTestReportLogs.stream().map(LoadTestReportLog::getContent).reduce("", (a, b) -> a + b);
-        return content.getBytes();
+        return loadTestReportLogs.stream().map(LoadTestReportLog::getContent).collect(Collectors.toList());
     }
 
     public LoadTestReport getReport(String reportId) {

File: backend/src/main/java/io/metersphere/api/parse/MsParser.java
Patch:
@@ -5,6 +5,7 @@
 import com.alibaba.fastjson.JSONObject;
 import io.metersphere.api.dto.ApiTestImportRequest;
 import io.metersphere.api.dto.parse.ApiImport;
+import io.metersphere.api.dto.scenario.request.RequestType;
 import io.metersphere.commons.constants.MsRequestBodyType;
 import org.apache.commons.lang3.StringUtils;
 import org.eclipse.jetty.http.HttpMethod;
@@ -38,6 +39,7 @@ private String parsePluginFormat(String testStr) {
                 requestsObject.keySet().forEach(requestName -> {
                     JSONObject requestObject = requestsObject.getJSONObject(requestName);
                     requestObject.put("name", requestName);
+                    requestObject.put("type", RequestType.HTTP);
                     JSONArray bodies = requestObject.getJSONArray("body");
                     if (StringUtils.equalsIgnoreCase(requestObject.getString("method"), HttpMethod.POST.name()) && bodies != null) {
                         StringBuilder bodyStr = new StringBuilder();

File: backend/src/main/java/io/metersphere/performance/service/ReportService.java
Patch:
@@ -213,6 +213,7 @@ public List<LoadTestReportLog> getReportLogs(String reportId, String resourceId)
     public byte[] downloadLog(String reportId, String resourceId) {
         LoadTestReportLogExample example = new LoadTestReportLogExample();
         example.createCriteria().andReportIdEqualTo(reportId).andResourceIdEqualTo(resourceId);
+        example.setOrderByClause("part desc");
         List<LoadTestReportLog> loadTestReportLogs = loadTestReportLogMapper.selectByExampleWithBLOBs(example);
 
         String content = loadTestReportLogs.stream().map(LoadTestReportLog::getContent).reduce("", (a, b) -> a + b);

File: backend/src/main/java/io/metersphere/api/dto/scenario/Scenario.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.api.dto.scenario;
 
+import io.metersphere.api.dto.scenario.request.Request;
 import lombok.Data;
 
 import java.util.List;
@@ -12,4 +13,5 @@ public class Scenario {
     private List<KeyValue> variables;
     private List<KeyValue> headers;
     private List<Request> requests;
+    private DubboConfig dubboConfig;
 }

File: backend/src/main/java/io/metersphere/track/request/testplancase/QueryTestPlanCaseRequest.java
Patch:
@@ -33,4 +33,6 @@ public class QueryTestPlanCaseRequest extends TestPlanTestCase {
     private String node;
 
     private String method;
+
+    private Map<String, Object> combine;
 }

File: backend/src/main/java/io/metersphere/api/service/APITestService.java
Patch:
@@ -27,6 +27,7 @@
 import io.metersphere.service.ScheduleService;
 import io.metersphere.track.service.TestCaseService;
 import org.apache.dubbo.common.URL;
+import org.apache.dubbo.common.constants.CommonConstants;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;
@@ -303,7 +304,7 @@ public List<DubboProvider> getProviders(RegistryCenter registry) {
             provider.setServiceInterface(p);
             Map<String, URL> services = providerService.findByService(p);
             if (services != null && !services.isEmpty()) {
-                String[] methods = services.values().stream().findFirst().get().getParameter("methods").split(",");
+                String[] methods = services.values().stream().findFirst().get().getParameter(CommonConstants.METHODS_KEY).split(",");
                 provider.setMethods(Arrays.asList(methods));
             } else {
                 provider.setMethods(new ArrayList<>());

File: backend/src/main/java/io/metersphere/api/parse/PostmanParser.java
Patch:
@@ -80,6 +80,9 @@ private List<Request> parseRequests(PostmanCollection postmanCollection) {
     private Body parseBody(PostmanRequest requestDesc, Request request) {
         Body body = new Body();
         JSONObject postmanBody = requestDesc.getBody();
+        if (postmanBody == null) {
+            return null;
+        }
         String bodyMode = postmanBody.getString("mode");
         if (StringUtils.equals(bodyMode, PostmanRequestBodyMode.RAW.value())) {
             body.setRaw(postmanBody.getString(bodyMode));

File: backend/src/main/java/io/metersphere/track/controller/TestCaseController.java
Patch:
@@ -25,6 +25,7 @@
 
 @RequestMapping("/test/case")
 @RestController
+@RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER, RoleConstants.ORG_ADMIN}, logical = Logical.OR)
 public class TestCaseController {
 
     @Resource

File: backend/src/main/java/io/metersphere/track/controller/TestCaseNodeController.java
Patch:
@@ -10,10 +10,11 @@
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
-import java.util.*;
+import java.util.List;
 
 @RequestMapping("/case/node")
 @RestController
+@RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER, RoleConstants.ORG_ADMIN}, logical = Logical.OR)
 public class TestCaseNodeController {
 
     @Resource

File: backend/src/main/java/io/metersphere/controller/SystemParameterController.java
Patch:
@@ -5,6 +5,7 @@
 import io.metersphere.commons.constants.RoleConstants;
 import io.metersphere.ldap.domain.LdapInfo;
 import io.metersphere.service.SystemParameterService;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
 
@@ -30,6 +31,7 @@ public void testConnection(@RequestBody HashMap<String, String> hashMap) {
     }
 
     @GetMapping("/version")
+    @RequiresRoles(value = {RoleConstants.ADMIN, RoleConstants.TEST_MANAGER, RoleConstants.TEST_USER, RoleConstants.TEST_VIEWER, RoleConstants.ORG_ADMIN}, logical = Logical.OR)
     public String getVersion() {
         return SystemParameterService.getVersion();
     }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -366,7 +366,7 @@ private List<TestCaseExcelData> generateTestCaseExcel(QueryTestCaseRequest reque
                 data.setStepResult("");
                 data.setRemark(t.getPerformName());
             }
-            data.setMaintainer(user.getId());
+            data.setMaintainer(t.getMaintainer());
             list.add(data);
 
         });

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -34,7 +34,7 @@ public void delete(String id) {
     }
 
     public void update(ApiTestEnvironmentWithBLOBs apiTestEnvironment) {
-        apiTestEnvironmentMapper.updateByPrimaryKey(apiTestEnvironment);
+        apiTestEnvironmentMapper.updateByPrimaryKeyWithBLOBs(apiTestEnvironment);
     }
 
     public String add(ApiTestEnvironmentWithBLOBs apiTestEnvironmentWithBLOBs) {

File: backend/src/main/java/io/metersphere/websocket/ReportWebSocket.java
Patch:
@@ -79,7 +79,7 @@ public void run() {
             while (stopMe) {
                 try {
                     LoadTestReport report = reportService.getReport(reportId);
-                    if (StringUtils.equalsAny(report.getStatus(), PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
+                    if (report == null || StringUtils.equalsAny(report.getStatus(), PerformanceTestStatus.Completed.name(), PerformanceTestStatus.Error.name())) {
                         this.stopMe();
                         session.close();
                         break;

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -18,6 +18,8 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<TestPlanCaseDTO> listByNode(@Param("request") QueryTestPlanCaseRequest request);
 
+    List<TestPlanCaseDTO> listByNodes(@Param("request") QueryTestPlanCaseRequest request);
+
     List<String> findRelateTestPlanId(@Param("userId") String userId, @Param("workspaceId") String workspaceId);
 
     List<TestPlanCaseDTO> getRecentTestedTestCase(@Param("request") QueryTestPlanCaseRequest request);

File: backend/src/main/java/io/metersphere/api/service/ApiTestEnvironmentService.java
Patch:
@@ -34,7 +34,7 @@ public void delete(String id) {
     }
 
     public void update(ApiTestEnvironmentWithBLOBs apiTestEnvironment) {
-        apiTestEnvironmentMapper.updateByPrimaryKeySelective(apiTestEnvironment);
+        apiTestEnvironmentMapper.updateByPrimaryKey(apiTestEnvironment);
     }
 
     public String add(ApiTestEnvironmentWithBLOBs apiTestEnvironmentWithBLOBs) {

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -532,6 +532,7 @@ public ResultHolder login(LoginRequest request) {
         } catch (UnauthorizedException e) {
             msg = Translator.get("not_authorized") + e.getMessage();
         }
-        return ResultHolder.error(msg);
+        MSException.throwException(msg);
+        return null;
     }
 }

File: backend/src/main/java/io/metersphere/performance/engine/EngineFactory.java
Patch:
@@ -110,6 +110,8 @@ public static EngineContext createContext(LoadTestWithBLOBs loadTest, String res
         try (ByteArrayInputStream source = new ByteArrayInputStream(fileContent.getFile())) {
             String content = engineSourceParser.parse(engineContext, source);
             engineContext.setContent(content);
+        } catch (MSException e) {
+            throw e;
         } catch (Exception e) {
             MSException.throwException(e);
         }

File: backend/src/main/java/io/metersphere/performance/engine/docker/DockerTestEngine.java
Patch:
@@ -66,6 +66,8 @@ private void runTest(TestResource resource, long realThreadNum, int resourceInde
         EngineContext context = null;
         try {
             context = EngineFactory.createContext(loadTest, resource.getId(), realThreadNum, this.getStartTime(), this.getReportId(), resourceIndex);
+        } catch (MSException e) {
+            throw e;
         } catch (Exception e) {
             MSException.throwException(e);
         }

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -353,11 +353,11 @@ private List<TestCaseExcelData> generateTestCaseExcel(QueryTestCaseRequest reque
                 result.setLength(0);
                 data.setRemark(TestCaseList.get(i).getRemark());
 
-            } else if(TestCaseList.get(i).getMethod().equals("auto")&&TestCaseList.get(i).getType().equals("api")){
+            } else if (TestCaseList.get(i).getMethod().equals("auto") && TestCaseList.get(i).getType().equals("api")) {
                 data.setStepDesc("");
                 data.setStepResult("");
                 data.setRemark(TestCaseList.get(i).getApiName());
-            }else if(TestCaseList.get(i).getMethod().equals("auto")&&TestCaseList.get(i).getType().equals("performance")){
+            } else if (TestCaseList.get(i).getMethod().equals("auto") && TestCaseList.get(i).getType().equals("performance")) {
                 data.setStepDesc("");
                 data.setStepResult("");
                 data.setRemark(TestCaseList.get(i).getPerformName());

File: backend/src/main/java/io/metersphere/track/service/TestCaseNodeService.java
Patch:
@@ -229,6 +229,9 @@ public boolean pruningTree(TestCaseNodeDTO rootNode, List<String> nodeIds) {
 
     public List<TestCaseNodeDTO> getAllNodeByPlanId(String planId) {
         TestPlan testPlan = testPlanMapper.selectByPrimaryKey(planId);
+        if (testPlan == null) {
+            return Collections.emptyList();
+        }
         return getNodeTreeByProjectId(testPlan.getProjectId());
     }
 

File: backend/src/main/java/io/metersphere/track/service/TestCaseService.java
Patch:
@@ -134,7 +134,9 @@ public List<TestCaseDTO> listTestCase(QueryTestCaseRequest request) {
     public List<TestCase> getTestCaseNames(QueryTestCaseRequest request) {
         if ( StringUtils.isNotBlank(request.getPlanId()) ) {
             TestPlan testPlan = testPlanMapper.selectByPrimaryKey(request.getPlanId());
-            request.setProjectId(testPlan.getProjectId());
+            if (testPlan != null) {
+                request.setProjectId(testPlan.getProjectId());
+            }
         }
 
         List<TestCase> testCaseNames = extTestCaseMapper.getTestCaseNames(request);

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -91,7 +91,7 @@ public List<TestPlan> getTestPlanByName(String name) {
     }
 
     public TestPlan getTestPlan(String testPlanId) {
-        return testPlanMapper.selectByPrimaryKey(testPlanId);
+        return Optional.ofNullable(testPlanMapper.selectByPrimaryKey(testPlanId)).orElse(new TestPlan());
     }
 
     public int editTestPlan(TestPlan testPlan) {

File: backend/src/main/java/io/metersphere/performance/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -463,7 +463,7 @@ private void processSetupTestPlan(Element ele) {
             elementProp.setAttribute("testname", "Loop Controller");
             elementProp.setAttribute("enabled", "true");
             elementProp.appendChild(createBoolProp(document, "LoopController.continue_forever", false));
-            elementProp.appendChild(createIntProp(document, "LoopController.loops", -1));
+            elementProp.appendChild(createIntProp(document, "LoopController.loops", 1));
             setupElement.appendChild(elementProp);
             setupElement.appendChild(createStringProp(document, "ThreadGroup.num_threads", "1"));
             setupElement.appendChild(createStringProp(document, "ThreadGroup.ramp_time", "1"));

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtUserRoleMapper.java
Patch:
@@ -27,4 +27,5 @@ public interface ExtUserRoleMapper {
     List<User> getBesideOrgMemberList(@Param("orgId") String orgId);
 
 
+    List<User> getTestManagerAndTestUserList(@Param("request") QueryMemberRequest request);
 }

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -457,4 +457,7 @@ public String getDefaultLanguage() {
         return extUserMapper.getDefaultLanguage(key);
     }
 
+    public List<User> getTestManagerAndTestUserList(QueryMemberRequest request) {
+        return extUserRoleMapper.getTestManagerAndTestUserList(request);
+    }
 }

File: backend/src/main/java/io/metersphere/controller/UserController.java
Patch:
@@ -155,7 +155,6 @@ public UserDTO switchWorkspace(@PathVariable(value = "sourceId") String sourceId
     }
 
     @PostMapping("/refresh/{sign}/{sourceId}")
-    @RequiresRoles(RoleConstants.ADMIN)
     public UserDTO refreshSessionUser(@PathVariable String sign, @PathVariable String sourceId) {
         userService.refreshSessionUser(sign, sourceId);
         return SessionUtils.getUser();

File: backend/src/main/java/io/metersphere/service/UserService.java
Patch:
@@ -141,8 +141,8 @@ public UserDTO getUserDTO(String userId) {
         UserDTO userDTO = new UserDTO();
         BeanUtils.copyProperties(user, userDTO);
         UserRoleDTO userRole = getUserRole(userId);
-        userDTO.setUserRoles(userRole.getUserRoles());
-        userDTO.setRoles(userRole.getRoles());
+        userDTO.setUserRoles(Optional.ofNullable(userRole.getUserRoles()).orElse(new ArrayList<>()));
+        userDTO.setRoles(Optional.ofNullable(userRole.getRoles()).orElse(new ArrayList<>()));
         return userDTO;
     }
 

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -126,7 +126,7 @@ private RequestResult getRequestResult(SampleResult result) {
         }
 
         ResponseResult responseResult = requestResult.getResponseResult();
-        responseResult.setBody(new String(result.getResponseData(), StandardCharsets.UTF_8));
+        responseResult.setBody(result.getResponseDataAsString());
         responseResult.setHeaders(result.getResponseHeaders());
         responseResult.setLatency(result.getLatency());
         responseResult.setResponseCode(result.getResponseCode());

File: backend/src/main/java/io/metersphere/performance/service/PerformanceTestService.java
Patch:
@@ -1,6 +1,5 @@
 package io.metersphere.performance.service;
 
-import io.metersphere.api.dto.SaveAPITestRequest;
 import io.metersphere.base.domain.*;
 import io.metersphere.base.mapper.*;
 import io.metersphere.base.mapper.ext.ExtLoadTestMapper;
@@ -10,6 +9,7 @@
 import io.metersphere.commons.constants.PerformanceTestStatus;
 import io.metersphere.commons.exception.MSException;
 import io.metersphere.commons.utils.LogUtil;
+import io.metersphere.commons.utils.ServiceUtils;
 import io.metersphere.commons.utils.SessionUtils;
 import io.metersphere.dto.DashboardTestDTO;
 import io.metersphere.dto.LoadTestDTO;
@@ -66,6 +66,7 @@ public class PerformanceTestService {
     private ReportService reportService;
 
     public List<LoadTestDTO> list(QueryTestPlanRequest request) {
+        request.setOrders(ServiceUtils.getDefaultOrder(request.getOrders()));
         return extLoadTestMapper.list(request);
     }
 

File: backend/src/main/java/io/metersphere/track/request/testplan/QueryTestPlanRequest.java
Patch:
@@ -5,10 +5,12 @@
 import lombok.Setter;
 
 import java.util.List;
+import java.util.Map;
 
 @Getter
 @Setter
 public class QueryTestPlanRequest extends TestPlanRequest {
     private String workspaceId;
     private List<OrderRequest> orders;
+    private Map<String, List<String>> filters;
 }

File: backend/src/main/java/io/metersphere/api/jmeter/ScenarioResult.java
Patch:
@@ -12,6 +12,8 @@ public class ScenarioResult {
 
     private String name;
 
+    private String order;
+
     private long responseTime;
 
     private int error = 0;

File: backend/src/main/java/io/metersphere/api/jmeter/APIBackendListenerClient.java
Patch:
@@ -88,8 +88,8 @@ public void teardownTest(BackendListenerContext context) throws Exception {
                     scenarioResult.addSuccess();
                     testResult.addSuccess();
                 } else {
-                    scenarioResult.addError();
-                    testResult.addError();
+                    scenarioResult.addError(result.getErrorCount());
+                    testResult.addError(result.getErrorCount());
                 }
 
                 RequestResult requestResult = getRequestResult(result);
@@ -123,6 +123,7 @@ private RequestResult getRequestResult(SampleResult result) {
         requestResult.setRequestSize(result.getSentBytes());
         requestResult.setTotalAssertions(result.getAssertionResults().length);
         requestResult.setSuccess(result.isSuccessful());
+        requestResult.setError(result.getErrorCount());
 
         ResponseResult responseResult = requestResult.getResponseResult();
         responseResult.setBody(result.getResponseDataAsString());

File: backend/src/main/java/io/metersphere/api/jmeter/RequestResult.java
Patch:
@@ -13,6 +13,8 @@ public class RequestResult {
 
     private long requestSize;
 
+    private int error;
+
     private boolean success;
 
     private String headers;

File: backend/src/main/java/io/metersphere/api/jmeter/ScenarioResult.java
Patch:
@@ -28,8 +28,8 @@ public void addResponseTime(long time) {
         this.responseTime += time;
     }
 
-    public void addError() {
-        this.error++;
+    public void addError(int count) {
+        this.error += count;
     }
 
     public void addSuccess() {

File: backend/src/main/java/io/metersphere/api/jmeter/TestResult.java
Patch:
@@ -22,8 +22,8 @@ public class TestResult {
 
     private final List<ScenarioResult> scenarios = new ArrayList<>();
 
-    public void addError() {
-        this.error++;
+    public void addError(int count) {
+        this.error += count;
     }
 
     public void addSuccess() {

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtTestPlanTestCaseMapper.java
Patch:
@@ -1,5 +1,6 @@
 package io.metersphere.base.mapper.ext;
 
+import io.metersphere.base.domain.Workspace;
 import io.metersphere.track.request.testplancase.QueryTestPlanCaseRequest;
 import io.metersphere.track.dto.TestCaseReportStatusResultDTO;
 import io.metersphere.track.dto.TestPlanCaseDTO;
@@ -15,7 +16,7 @@ public interface ExtTestPlanTestCaseMapper {
 
     List<TestPlanCaseDTO> list(@Param("request") QueryTestPlanCaseRequest request);
 
-    List<String> findRelateTestPlanId(String userId);
+    List<String> findRelateTestPlanId(@Param("userId") String userId, @Param("workspaceId") String workspaceId);
 
     List<TestPlanCaseDTO> getRecentTestedTestCase(@Param("request") QueryTestPlanCaseRequest request);
 

File: backend/src/main/java/io/metersphere/track/service/TestPlanService.java
Patch:
@@ -162,7 +162,7 @@ public List<TestPlanDTOWithMetric> listRelateAllPlan() {
         QueryTestPlanRequest request =  new QueryTestPlanRequest();
         request.setPrincipal(user.getId());
         request.setWorkspaceId(SessionUtils.getCurrentWorkspaceId());
-        request.setPlanIds(extTestPlanTestCaseMapper.findRelateTestPlanId(user.getId()));
+        request.setPlanIds(extTestPlanTestCaseMapper.findRelateTestPlanId(user.getId(), SessionUtils.getCurrentWorkspaceId()));
 
         List<String> projectIds = extProjectMapper.getProjectIdByWorkspaceId(SessionUtils.getCurrentOrganizationId());
 
@@ -329,7 +329,7 @@ private void getChildIds(TestCaseNodeDTO rootNode, Set<String> childIds) {
         }
     }
 
-    public List<TestPlan> getTestPlanByTestIds(List<String> planIds) {
+    public List<TestPlan> getTestPlanByIds(List<String> planIds) {
         TestPlanExample example = new TestPlanExample();
         example.createCriteria().andIdIn(planIds);
         return testPlanMapper.selectByExample(example);

File: backend/src/main/java/io/metersphere/base/mapper/ext/ExtApiTestReportMapper.java
Patch:
@@ -3,6 +3,7 @@
 import io.metersphere.api.dto.APIReportResult;
 import io.metersphere.api.dto.QueryAPIReportRequest;
 import io.metersphere.dto.ApiReportDTO;
+import io.metersphere.dto.DashboardTestDTO;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -15,4 +16,6 @@ public interface ExtApiTestReportMapper {
 
     APIReportResult get(@Param("id") String id);
 
+    List<DashboardTestDTO> selectDashboardTests(@Param("workspaceId") String workspaceId, @Param("startTimestamp") long startTimestamp);
+
 }

File: backend/src/main/java/io/metersphere/service/TestCaseNodeService.java
Patch:
@@ -311,6 +311,7 @@ private void createNodeByPath(Iterator<String> pathIterator, String nodeName,
         } else {
             pid = insertTestCaseNode(nodeName, pNode == null ? null : pNode.getId(), projectId, level);
             pathMap.put(path.toString(), pid);
+            level++;
         }
 
         while (pathIterator.hasNext()) {
@@ -322,6 +323,7 @@ private void createNodeByPath(Iterator<String> pathIterator, String nodeName,
             } else {
                 pid = insertTestCaseNode(nextNodeName, pid, projectId, level);
                 pathMap.put(path.toString(), pid);
+                level++;
             }
         }
     }

File: backend/src/main/java/io/metersphere/controller/request/testcase/QueryTestCaseRequest.java
Patch:
@@ -1,7 +1,6 @@
 package io.metersphere.controller.request.testcase;
 
 import io.metersphere.base.domain.TestCase;
-import io.metersphere.controller.request.FilterRequest;
 import io.metersphere.controller.request.OrderRequest;
 import lombok.Data;
 

File: backend/src/main/java/io/metersphere/controller/LoginController.java
Patch:
@@ -54,10 +54,10 @@ public ResultHolder login(@RequestBody LoginRequest request) {
                     List<UserRole> org = userRoles.stream().filter(ur -> ur.getRoleId().startsWith("org")).collect(Collectors.toList());
                     if (test.size() > 0) {
                         String wsId = test.get(0).getSourceId();
-                        userService.switchUserRole(user, "workspace", wsId);
+                        userService.switchUserRole("workspace", wsId);
                     } else if (org.size() > 0) {
                         String orgId = org.get(0).getSourceId();
-                        userService.switchUserRole(user, "organization", orgId);
+                        userService.switchUserRole("organization", orgId);
                     }
                 }
                 // 返回 userDTO

File: backend/src/main/java/io/metersphere/controller/WorkspaceController.java
Patch:
@@ -27,6 +27,7 @@ public class WorkspaceController {
     @PostMapping("add")
     @RequiresRoles(RoleConstants.ORG_ADMIN)
     public Workspace addWorkspace(@RequestBody Workspace workspace) {
+        workspaceService.checkWorkspaceOwnerByOrgAdmin(workspace.getId());
         return workspaceService.saveWorkspace(workspace);
     }
 

File: backend/src/main/java/io/metersphere/service/ReportService.java
Patch:
@@ -84,7 +84,7 @@ private String getContent(String id, ReportKeys reportKey) {
         LoadTestReportResultExample example = new LoadTestReportResultExample();
         example.createCriteria().andReportIdEqualTo(id).andReportKeyEqualTo(reportKey.name());
         List<LoadTestReportResult> loadTestReportResults = loadTestReportResultMapper.selectByExampleWithBLOBs(example);
-        if (loadTestReportResults.size() != 1) {
+        if (loadTestReportResults.size() == 0) {
             MSException.throwException("get report result error.");
         }
         return loadTestReportResults.get(0).getReportValue();

File: backend/src/main/java/io/metersphere/excel/domain/TestCaseExcelData.java
Patch:
@@ -23,7 +23,6 @@ public class TestCaseExcelData {
     @Pattern(regexp = "^(?!.*//).*$", message = "格式不正确")
     private String nodePath;
 
-
     @NotBlank
     @ExcelProperty("用例类型")
     @Pattern(regexp = "(^functional$)|(^performance$)|(^api$)", message = "必须为functional、performance、api")

File: backend/src/main/java/io/metersphere/excel/listener/TestCaseDataListener.java
Patch:
@@ -41,6 +41,9 @@ public String validate(TestCaseExcelData data, String errMsg) {
         if ( nodePath.split("/").length > TestCaseConstants.MAX_NODE_DEPTH + 1) {
             stringBuilder.append("节点最多为" + TestCaseConstants.MAX_NODE_DEPTH + "层;");
         }
+        if ( nodePath.trim().contains(" ")) {
+            stringBuilder.append("所属模块不能包含空格");
+        }
         if (!userNames.contains(data.getMaintainer())) {
             stringBuilder.append("该工作空间下无该用户：" + data.getMaintainer() + ";");
         }

File: backend/src/main/java/io/metersphere/engine/docker/DockerTestEngine.java
Patch:
@@ -12,6 +12,7 @@
 import io.metersphere.engine.EngineFactory;
 import io.metersphere.engine.docker.request.BaseRequest;
 import io.metersphere.engine.docker.request.TestRequest;
+import io.metersphere.i18n.Translator;
 import org.springframework.web.client.RestTemplate;
 
 import java.util.List;
@@ -41,7 +42,7 @@ public void start() {
                 .reduce(Integer::sum)
                 .orElse(0);
         if (threadNum > totalThreadNum - runningSumThreadNum) {
-            MSException.throwException("Insufficient resources");
+            MSException.throwException(Translator.get("max_thread_insufficient"));
         }
         List<Integer> resourceRatio = resourceList.stream()
                 .filter(r -> ResourceStatusEnum.VALID.name().equals(r.getStatus()))

File: backend/src/main/java/io/metersphere/engine/kubernetes/KubernetesTestEngine.java
Patch:
@@ -15,6 +15,7 @@
 import io.metersphere.engine.kubernetes.crds.jmeter.JmeterSpec;
 import io.metersphere.engine.kubernetes.provider.ClientCredential;
 import io.metersphere.engine.kubernetes.provider.KubernetesProvider;
+import io.metersphere.i18n.Translator;
 import org.apache.commons.collections.MapUtils;
 
 import java.util.HashMap;
@@ -43,7 +44,7 @@ public void start() {
             Integer maxConcurrency = clientCredential.getMaxConcurrency();
             // 当前测试需要的并发数大于剩余的并发数报错
             if (threadNum > maxConcurrency - sumThreadNum) {
-                MSException.throwException("Insufficient resources");
+                MSException.throwException(Translator.get("max_thread_insufficient"));
             }
             try {
                 EngineContext context = EngineFactory.createContext(loadTest, threadNum, this.getStartTime(), this.getReportId());

File: backend/src/main/java/io/metersphere/controller/TestPlanController.java
Patch:
@@ -28,6 +28,8 @@ public class TestPlanController {
 
     @PostMapping("/list/{goPage}/{pageSize}")
     public Pager<List<TestPlanDTO>> list(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody QueryTestPlanRequest request) {
+        String currentWorkspaceId = SessionUtils.getCurrentWorkspaceId();
+        request.setWorkspaceId(currentWorkspaceId);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, testPlanService.listTestPlan(request));
     }

File: backend/src/main/java/io/metersphere/service/TestCaseService.java
Patch:
@@ -110,4 +110,7 @@ public List<TestCase> getTestCaseNames(QueryTestCaseRequest request) {
     }
 
 
+    public List<TestCase> recentTestPlans(QueryTestCaseRequest request) {
+        return null;
+    }
 }

File: backend/src/main/java/io/metersphere/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -129,7 +129,7 @@ private void processResponseAssertion(Element element) {
                 if (params instanceof List) {
                     HashSet set = new HashSet((List) params);
                     for (Object p : set) {
-                        element.appendChild(createStringProp(document, p.toString(), p.toString()));
+                        item.appendChild(createStringProp(document, p.toString(), p.toString()));
                     }
                 }
             }
@@ -179,7 +179,7 @@ private void processCheckoutResponseAssertion(Element element) {
         //
         responseAssertion.appendChild(collectionProp);
         responseAssertion.appendChild(createStringProp(document, "Assertion.custom_message", ""));
-        responseAssertion.appendChild(createStringProp(document, "Assertion.test_field", ""));
+        responseAssertion.appendChild(createStringProp(document, "Assertion.test_field", "Assertion.response_code"));
         responseAssertion.appendChild(createBoolProp(document, "Assertion.assume_success", false));
         responseAssertion.appendChild(createIntProp(document, "Assertion.test_type", 33));
         hashTree.appendChild(responseAssertion);

File: backend/src/main/java/io/metersphere/parse/xml/reader/jmx/JmeterDocumentParser.java
Patch:
@@ -137,7 +137,7 @@ private void processResponseAssertion(Element element) {
     }
 
     private void processCheckoutResponseAssertion(Element element) {
-        if (context.getProperty("statusCode") == null || JSON.parseArray("statusCode").size() == 0) {
+        if (context.getProperty("statusCode") == null || JSON.parseArray(context.getProperty("statusCode").toString()).size() == 0) {
             return;
         }
         Document document = element.getOwnerDocument();
@@ -187,7 +187,7 @@ private void processCheckoutResponseAssertion(Element element) {
     }
 
     private void processCheckoutArguments(Element ele) {
-        if (context.getProperty("params") == null || JSON.parseArray("params").size() == 0) {
+        if (context.getProperty("params") == null || JSON.parseArray(context.getProperty("params").toString()).size() == 0) {
             return;
         }
         Node hashTree = ele.getNextSibling();
@@ -230,7 +230,7 @@ private void processCheckoutArguments(Element ele) {
     }
 
     private void processCheckoutDnsCacheManager(Element ele) {
-        if (context.getProperty("domains") == null || JSON.parseArray("domains").size() == 0) {
+        if (context.getProperty("domains") == null || JSON.parseArray(context.getProperty("domains").toString()).size() == 0) {
             return;
         }
         Node hashTree = ele.getNextSibling();

File: backend/src/main/java/io/metersphere/report/dto/RequestStatisticsDTO.java
Patch:
@@ -1,4 +1,6 @@
-package io.metersphere.report.base;
+package io.metersphere.report.dto;
+
+import io.metersphere.report.base.RequestStatistics;
 
 import java.util.List;
 

File: backend/src/main/java/io/metersphere/parse/EngineSourceParser.java
Patch:
@@ -5,5 +5,5 @@
 import java.io.InputStream;
 
 public interface EngineSourceParser {
-    InputStream parse(EngineContext context, InputStream source) throws Exception;
+    String parse(EngineContext context, InputStream source) throws Exception;
 }

File: backend/src/main/java/io/metersphere/parse/EngineSourceParserFactory.java
Patch:
@@ -1,13 +1,13 @@
 package io.metersphere.parse;
 
-import io.metersphere.commons.constants.EngineType;
+import io.metersphere.commons.constants.FileType;
 import io.metersphere.parse.xml.XmlEngineSourceParse;
 
 public class EngineSourceParserFactory {
     public static EngineSourceParser createEngineSourceParser(String type) {
-        final EngineType engineType = EngineType.valueOf(type);
+        final FileType engineType = FileType.valueOf(type);
 
-        if (EngineType.JMX.equals(engineType)) {
+        if (FileType.JMX.equals(engineType)) {
             return new XmlEngineSourceParse();
         }
 

File: backend/src/main/java/io/metersphere/parse/xml/XmlEngineSourceParse.java
Patch:
@@ -13,15 +13,15 @@
 
 public class XmlEngineSourceParse implements EngineSourceParser {
     @Override
-    public InputStream parse(EngineContext context, InputStream source) throws Exception {
+    public String parse(EngineContext context, InputStream source) throws Exception {
         final InputSource inputSource = new InputSource(source);
 
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
 
         DocumentBuilder docBuilder = factory.newDocumentBuilder();
         final Document document = docBuilder.parse(inputSource);
 
-        final DocumentParser documentParser = createDocumentParser(context.getEngineType());
+        final DocumentParser documentParser = createDocumentParser(context.getFileType());
 
         return documentParser.parse(context, document);
     }

File: backend/src/main/java/io/metersphere/parse/xml/reader/DocumentParser.java
Patch:
@@ -6,5 +6,5 @@
 import java.io.InputStream;
 
 public interface DocumentParser {
-    InputStream parse(EngineContext context, Document document) throws Exception;
+    String parse(EngineContext context, Document document) throws Exception;
 }

File: backend/src/main/java/io/metersphere/service/LoadTestService.java
Patch:
@@ -78,6 +78,7 @@ private LoadTestWithBLOBs saveLoadTest(SaveTestPlanRequest request) {
         loadTest.setScenarioDefinition("todo");
         loadTest.setDescription("todo");
         loadTest.setLoadConfiguration(request.getLoadConfiguration());
+        loadTest.setAdvancedConfiguration(request.getAdvancedConfiguration());
         loadTestMapper.insert(loadTest);
         return loadTest;
     }

File: backend/src/main/java/io/metersphere/controller/LoadTestController.java
Patch:
@@ -41,11 +41,11 @@ public String save(
     }
 
     @PostMapping(value = "/edit", consumes = {"multipart/form-data"})
-    public void edit(
+    public String edit(
             @RequestPart("request") EditTestPlanRequest request,
             @RequestPart(value = "file", required = false) MultipartFile file
     ) {
-        loadTestService.edit(request, file);
+        return loadTestService.edit(request, file);
     }
 
     @PostMapping("/delete")

File: backend/src/main/java/io/metersphere/service/LoadTestService.java
Patch:
@@ -124,7 +124,7 @@ private FileMetadata saveFile(MultipartFile file) {
         return fileMetadata;
     }
 
-    public void edit(EditTestPlanRequest request, MultipartFile file) {
+    public String edit(EditTestPlanRequest request, MultipartFile file) {
         // 新选择了一个文件，删除原来的文件
         if (file != null) {
             fileService.deleteFileByTestId(request.getId());
@@ -147,6 +147,8 @@ public void edit(EditTestPlanRequest request, MultipartFile file) {
             loadTest.setLoadConfiguration(request.getLoadConfiguration());
             loadTestMapper.updateByPrimaryKeySelective(loadTest);
         }
+
+        return request.getId();
     }
 
     public void run(RunTestPlanRequest request) {

File: backend/src/main/java/io/metersphere/controller/LoadTestController.java
Patch:
@@ -33,11 +33,11 @@ public Pager<List<LoadTestDTO>> list(@PathVariable int goPage, @PathVariable int
     }
 
     @PostMapping(value = "/save", consumes = {"multipart/form-data"})
-    public void save(
+    public String save(
             @RequestPart("request") SaveTestPlanRequest request,
             @RequestPart(value = "file") MultipartFile file
     ) {
-        loadTestService.save(request, file);
+        return loadTestService.save(request, file);
     }
 
     @PostMapping(value = "/edit", consumes = {"multipart/form-data"})

File: backend/src/main/java/io/metersphere/service/LoadTestService.java
Patch:
@@ -73,7 +73,7 @@ public void delete(DeleteTestPlanRequest request) {
         fileService.deleteFileByTestId(request.getId());
     }
 
-    public void save(SaveTestPlanRequest request, MultipartFile file) {
+    public String save(SaveTestPlanRequest request, MultipartFile file) {
         if (file == null) {
             throw new IllegalArgumentException("文件不能为空！");
         }
@@ -86,6 +86,8 @@ public void save(SaveTestPlanRequest request, MultipartFile file) {
         loadTestFile.setTestId(loadTest.getId());
         loadTestFile.setFileId(fileMetadata.getId());
         loadTestFileMapper.insert(loadTestFile);
+
+        return loadTest.getId();
     }
 
     private LoadTestWithBLOBs saveLoadTest(SaveTestPlanRequest request) {

