File: server/src/main/java/cn/keking/utils/RarUtils.java
Patch:
@@ -77,7 +77,7 @@ public static boolean judge(char c){
     }
     public static String specialSymbols(String str) {
         //去除压缩包文件字符串中特殊符号
-        Pattern p = Pattern.compile("\\s|\t|\r|\n|\\+|#|&|=|\\p{P}");
+        Pattern p = Pattern.compile("\\s|\t|\r|\n|\\+|#|&|=|�|\\p{P}");
   //    Pattern p = Pattern.compile("\\s|\\+|#|&|=|\\p{P}");
         Matcher m = p.matcher(str);
         return m.replaceAll("");

File: server/src/main/java/cn/keking/web/controller/FileController.java
Patch:
@@ -213,6 +213,7 @@ public Object directory(String urls) {
             String errorMsg = String.format(BASE64_DECODE_ERROR_MSG, "url");
             return ReturnResponse.failure(errorMsg);
         }
+        fileUrl = fileUrl.replaceAll("http://", "");
         if (KkFileUtils.isIllegalFileName(fileUrl)) {
             return ReturnResponse.failure("不允许访问的路径:");
         }

File: server/src/main/java/cn/keking/utils/RarUtils.java
Patch:
@@ -77,7 +77,7 @@ public static boolean judge(char c){
     }
     public static String specialSymbols(String str) {
         //去除压缩包文件字符串中特殊符号
-        Pattern p = Pattern.compile("\\s|\t|\r|\n|\\+|#|&|=|\\p{P}");
+        Pattern p = Pattern.compile("\\s|\t|\r|\n|\\+|#|&|=|�|\\p{P}");
   //    Pattern p = Pattern.compile("\\s|\\+|#|&|=|\\p{P}");
         Matcher m = p.matcher(str);
         return m.replaceAll("");

File: server/src/main/java/cn/keking/web/controller/FileController.java
Patch:
@@ -213,6 +213,7 @@ public Object directory(String urls) {
             String errorMsg = String.format(BASE64_DECODE_ERROR_MSG, "url");
             return ReturnResponse.failure(errorMsg);
         }
+        fileUrl = fileUrl.replaceAll("http://", "");
         if (KkFileUtils.isIllegalFileName(fileUrl)) {
             return ReturnResponse.failure("不允许访问的路径:");
         }

File: server/src/main/java/cn/keking/utils/WebUtils.java
Patch:
@@ -79,7 +79,9 @@ public static String  urlEncoderencode(String urlStr) {
             urlStr = clearFullfilenameParam(urlStr);
         } else {
             fullFileName = getFileNameFromURL(urlStr); //获取文件名
-
+        }
+        if (KkFileUtils.isIllegalFileName(fullFileName)) { //判断文件名是否带有穿越漏洞
+            return null;
         }
         if (!UrlEncoderUtils.hasUrlEncoded(fullFileName)) {  //判断文件名是否转义
             try {

File: server/src/main/java/cn/keking/utils/WebUtils.java
Patch:
@@ -79,7 +79,9 @@ public static String  urlEncoderencode(String urlStr) {
             urlStr = clearFullfilenameParam(urlStr);
         } else {
             fullFileName = getFileNameFromURL(urlStr); //获取文件名
-
+        }
+        if (KkFileUtils.isIllegalFileName(fullFileName)) { //判断文件名是否带有穿越漏洞
+            return null;
         }
         if (!UrlEncoderUtils.hasUrlEncoded(fullFileName)) {  //判断文件名是否转义
             try {

File: server/src/main/java/cn/keking/service/cache/impl/CacheServiceJDKImpl.java
Patch:
@@ -101,6 +101,7 @@ public void cleanCache() {
         initPDFCachePool(CacheService.DEFAULT_PDF_CAPACITY);
         initIMGCachePool(CacheService.DEFAULT_IMG_CAPACITY);
         initPdfImagesCachePool(CacheService.DEFAULT_PDFIMG_CAPACITY);
+        initMediaConvertCachePool(CacheService.DEFAULT_MEDIACONVERT_CAPACITY);
     }
 
     @Override

File: server/src/test/java/cn/keking/EncodingTests.java
Patch:
@@ -17,7 +17,7 @@
 public class EncodingTests {
     @Test
     void testCharDet() throws URISyntaxException {
-        for (int i = 0; i < 28; i++) {
+        for (int i = 0; i < 29; i++) {
             File dir = new File(getClass().getClassLoader().getResource("testData\\" + i).toURI());
             String dirPath = dir.getPath();
             String textFileName = dir.list()[0];

File: server/src/test/java/cn/keking/EncodingTests.java
Patch:
@@ -17,7 +17,7 @@
 public class EncodingTests {
     @Test
     void testCharDet() throws URISyntaxException {
-        for (int i = 0; i < 28; i++) {
+        for (int i = 0; i < 29; i++) {
             File dir = new File(getClass().getClassLoader().getResource("testData\\" + i).toURI());
             String dirPath = dir.getPath();
             String textFileName = dir.list()[0];

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -469,6 +469,9 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {
             if (StringUtils.hasText(userToken)) {
                 attribute.setUserToken(userToken);
             }
+            String kkProxyAuthorization = req.getHeader( "kk-proxy-authorization");
+            attribute.setKkProxyAuthorization(kkProxyAuthorization);
+
         }
 
         return attribute;

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -469,6 +469,9 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {
             if (StringUtils.hasText(userToken)) {
                 attribute.setUserToken(userToken);
             }
+            String kkProxyAuthorization = req.getParameter( "kk-proxy-authorization");
+            attribute.setKkProxyAuthorization(kkProxyAuthorization);
+
         }
 
         return attribute;

File: server/src/main/java/cn/keking/utils/DownloadUtils.java
Patch:
@@ -49,7 +49,7 @@ public static ReturnResponse<String> downLoad(FileAttribute fileAttribute, Strin
         }
         ReturnResponse<String> response = new ReturnResponse<>(0, "下载成功!!!", "");
         String realPath = getRelFilePath(fileName, fileAttribute);
-        if (!KkFileUtils.isAllowedUpload(realPath)) {
+        if (null == realPath || !KkFileUtils.isAllowedUpload(realPath)) {
             response.setCode(1);
             response.setContent(null);
             response.setMsg("下载失败:不支持的类型!" + urlStr);

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -13,9 +13,9 @@
  * @author: chenjh
  * @since: 2019/4/10 17:22
  */
-@Component
+@Component(value = ConfigConstants.BEAN_NAME)
 public class ConfigConstants {
-
+    public static final String BEAN_NAME = "configConstants";
     static {
         //pdfbox兼容低版本jdk
         System.setProperty("sun.java2d.cmm", "sun.java2d.cmm.kcms.KcmsServiceProvider");

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -27,6 +27,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.InitializingBean;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 import org.springframework.util.CollectionUtils;
 import org.springframework.util.ObjectUtils;
@@ -49,6 +50,7 @@
  * @date 2017/11/13
  */
 @Component
+@DependsOn(ConfigConstants.BEAN_NAME)
 public class FileHandlerService implements InitializingBean {
 
     private static final String PDF2JPG_IMAGE_FORMAT = ".jpg";

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -13,9 +13,9 @@
  * @author: chenjh
  * @since: 2019/4/10 17:22
  */
-@Component
+@Component(value = ConfigConstants.BEAN_NAME)
 public class ConfigConstants {
-
+    public static final String BEAN_NAME = "configConstants";
     static {
         //pdfbox兼容低版本jdk
         System.setProperty("sun.java2d.cmm", "sun.java2d.cmm.kcms.KcmsServiceProvider");

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -27,6 +27,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.InitializingBean;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 import org.springframework.util.CollectionUtils;
 import org.springframework.util.ObjectUtils;
@@ -49,6 +50,7 @@
  * @date 2017/11/13
  */
 @Component
+@DependsOn(ConfigConstants.BEAN_NAME)
 public class FileHandlerService implements InitializingBean {
 
     private static final String PDF2JPG_IMAGE_FORMAT = ".jpg";

File: server/src/main/java/cn/keking/utils/WebUtils.java
Patch:
@@ -157,6 +157,9 @@ public static String encodeUrlFileName(String url) {
         String noQueryUrl = url.substring(0, url.contains("?") ? url.indexOf("?") : url.length());
         int fileNameStartIndex = noQueryUrl.lastIndexOf('/') + 1;
         int fileNameEndIndex = noQueryUrl.lastIndexOf('.');
+        if (fileNameEndIndex < fileNameStartIndex) {
+            return url;
+        }
         try {
             encodedFileName = URLEncoder.encode(noQueryUrl.substring(fileNameStartIndex, fileNameEndIndex), "UTF-8");
         } catch (UnsupportedEncodingException e) {

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -357,9 +357,9 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {
             suffix = KkFileUtils.suffixFromFileName(fullFileName);
             // 移除fullfilename参数
             if (url.indexOf("fullfilename=" + fullFileName + "&") > 0) {
-                url.replace("fullfilename=" + fullFileName + "&", "");
+                url = url.replace("fullfilename=" + fullFileName + "&", "");
             } else {
-                url.replace("fullfilename=" + fullFileName, "");
+                url = url.replace("fullfilename=" + fullFileName, "");
             }
         } else {
             fileName = WebUtils.getFileNameFromURL(url);

File: server/src/main/java/cn/keking/model/FileType.java
Patch:
@@ -34,7 +34,7 @@ public enum FileType {
     DCM("dcmFilePreviewImpl"),
     DRAWUI("drawioFilePreviewImpl");
 
-    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd","dotm","ett","xlt","xltm","wpt","dot","xlam","dotx","xla","pages"};
+    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd","dotm","ett","xlt","xltm","wpt","dot","xlam","dotx","xla","pages", "eps"};
     private static final String[] PICTURE_TYPES = {"jpg", "jpeg", "png", "gif", "bmp", "ico", "jfif", "webp"};
     private static final String[] ARCHIVE_TYPES = {"rar", "zip", "jar", "7-zip", "tar", "gzip", "7z"};
     private static final String[] Online3D_TYPES = {"obj", "3ds", "stl", "ply", "off", "3dm", "fbx", "dae", "wrl", "3mf", "ifc","glb","o3dv","gltf","stp","bim","fcstd","step","iges","brep"};
@@ -46,7 +46,7 @@ public enum FileType {
     private static final String[] TIFF_TYPES = {"tif", "tiff"};
     private static final String[] OFD_TYPES = {"ofd"};
     private static final String[] SVG_TYPES = {"svg"};
-    private static final String[] CAD_TYPES = {"dwg", "dxf", "dwf"};
+    private static final String[] CAD_TYPES = {"dwg", "dxf", "dwf", "iges", "igs", "dwt", "dng", "ifc", "dwfx", "stl", "cf2", "plt"};
     private static final String[] SSIM_TEXT_TYPES = ConfigConstants.getSimText();
     private static final String[] CODES = {"java", "c", "php", "go", "python", "py", "js", "html", "ftl", "css", "lua", "sh", "rb", "yaml", "yml", "json", "h", "cpp", "cs", "aspx", "jsp", "sql"};
     private static final String[] MEDIA_TYPES = ConfigConstants.getMedia();

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -404,7 +404,7 @@ public static void setSizeValue(String size) {
     public static String getPassword() {
         return password;
     }
-    @Value("${sc.password:123456}")
+    @Value("${delete.password:123456}")
     public void setPassword(String password) {
         setPasswordValue(password);
     }

File: server/src/main/java/cn/keking/config/ConfigRefreshComponent.java
Patch:
@@ -88,7 +88,7 @@ public void run() {
                     size = properties.getProperty("spring.servlet.multipart.max-file-size", ConfigConstants.DEFAULT_SIZE);
                     beiAn = properties.getProperty("beiAn", ConfigConstants.DEFAULT_BEIAN);
                     prohibit = properties.getProperty("prohibit", ConfigConstants.DEFAULT_PROHIBIT);
-                    password = properties.getProperty("sc.password", ConfigConstants.DEFAULT_PASSWORD);
+                    password = properties.getProperty("delete.password", ConfigConstants.DEFAULT_PASSWORD);
                     pdf2JpgDpi = Integer.parseInt(properties.getProperty("pdf2jpg.dpi", ConfigConstants.DEFAULT_PDF2_JPG_DPI));
                     officeTypeWeb = properties.getProperty("office.type.web", ConfigConstants.DEFAULT_OFFICE_TyPEWEB_DISABLE);
                     deleteSourceFile =  Boolean.parseBoolean(properties.getProperty("delete.source.file", ConfigConstants.DEFAULT_DELETE_SOURCE_FILE));

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -276,7 +276,7 @@ public List<String> pdf2jpg(String pdfFilePath, String pdfName, FileAttribute fi
                 }
             }
             //判断是否加密文件 加密文件不缓存
-            if (PDF_PASSWORD_MSG.equals(pdfPassword)) {
+            if (!PDF_PASSWORD_MSG.equals(pdfPassword)) {
                 this.addPdf2jpgCache(pdfFilePath, pageCount);
             }
         } catch (IOException e) {

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -72,7 +72,7 @@ public class ConfigConstants {
     public static final String DEFAULT_SIZE = "500MB";
     public static final String DEFAULT_PROHIBIT = "exe,dll";
     public static final String DEFAULT_PASSWORD = "123456";
-    public static final String DEFAULT_PDF2_JPG_DPI_DISABLE = "105";
+    public static final String DEFAULT_PDF2_JPG_DPI = "105";
     public static final String DEFAULT_DELETE_SOURCE_FILE = "true";
 
     public static Boolean isCacheEnabled() {

File: server/src/main/java/cn/keking/config/ConfigRefreshComponent.java
Patch:
@@ -88,7 +88,7 @@ public void run() {
                     beiAn = properties.getProperty("beiAn", ConfigConstants.DEFAULT_BEIAN);
                     prohibit = properties.getProperty("prohibit", ConfigConstants.DEFAULT_PROHIBIT);
                     password = properties.getProperty("sc.password", ConfigConstants.DEFAULT_PASSWORD);
-                    pdf2JpgDpi = Integer.parseInt(properties.getProperty("pdf2jpg.dpi", ConfigConstants.DEFAULT_PDF2_JPG_DPI_DISABLE));
+                    pdf2JpgDpi = Integer.parseInt(properties.getProperty("pdf2jpg.dpi", ConfigConstants.DEFAULT_PDF2_JPG_DPI));
                     deleteSourceFile =  Boolean.parseBoolean(properties.getProperty("delete.source.file", ConfigConstants.DEFAULT_DELETE_SOURCE_FILE));
                     prohibitArray = prohibit.split(",");
 

File: server/src/main/java/cn/keking/model/FileAttribute.java
Patch:
@@ -120,7 +120,7 @@ public void setTifPreviewType(String previewType) {
     public Boolean forceUpdatedCache() {
         return forceUpdatedCache;
     }
-    public  void setforceUpdatedCache(Boolean forceUpdatedCache) {
+    public void setForceUpdatedCache(Boolean forceUpdatedCache) {
         this.forceUpdatedCache = forceUpdatedCache;
     }
 

File: server/src/main/java/cn/keking/service/CompressFileReader.java
Patch:
@@ -1,6 +1,5 @@
 package cn.keking.service;
 
-import cn.keking.config.ConfigConstants;
 import cn.keking.model.FileType;
 import cn.keking.utils.RarUtils;
 import cn.keking.web.filter.BaseUrlFilter;
@@ -68,7 +67,6 @@ public String unRar(String paths, String passWord, String fileName) throws Excep
                     if (result == ExtractOperationResult.OK) {
                         FileType type = FileType.typeFromUrl(str[0]);
                         if (type.equals(FileType.PICTURE)) {
-                          //  System.out.println( baseUrl +folderName + "_" + str[0]);
                             imgUrls.add(baseUrl +folderName + "_/" + str[0].replace("\\", "/"));
                         }
                         fileHandlerService.putImgCache(fileName, imgUrls);

File: server/src/main/java/cn/keking/service/impl/CadFilePreviewImpl.java
Patch:
@@ -56,7 +56,8 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
                 if (!convertResult) {
                     return otherFilePreview.notSupportedFile(model, fileAttribute, "cad文件转换异常，请联系管理员");
                 }
-                if( ConfigConstants.getdeletesourcefile()){  //是否保留CAD源文件
+                //是否保留CAD源文件
+                if( ConfigConstants.getDeleteSourceFile()) {
                     KkFileUtils.deleteFileByPath(filePath);
                 }
                 if (ConfigConstants.isCacheEnabled()) {

File: server/src/main/java/cn/keking/service/impl/CompressFilePreviewImpl.java
Patch:
@@ -61,7 +61,8 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
                 }
             }
             if (!ObjectUtils.isEmpty(fileTree)) {
-                if( ConfigConstants.getdeletesourcefile()){  //是否保留压缩包源文件
+                //是否保留压缩包源文件
+                if (ConfigConstants.getDeleteSourceFile()) {
                     KkFileUtils.deleteFileByPath(filePath);
                 }
                 if (ConfigConstants.isCacheEnabled()) {

File: server/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java
Patch:
@@ -114,7 +114,8 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
                         // 对转换后的文件进行操作(改变编码方式)
                         fileHandlerService.doActionConvertedFile(outFilePath);
                     }
-                    if(ConfigConstants.getdeletesourcefile()){  //是否保留OFFICE源文件
+                    //是否保留OFFICE源文件
+                    if (ConfigConstants.getDeleteSourceFile()) {
                         KkFileUtils.deleteFileByPath(filePath);
                     }
                     if (isUseCached) {

File: server/src/main/java/cn/keking/utils/DownloadUtils.java
Patch:
@@ -13,7 +13,6 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.net.URL;
-import java.net.URLDecoder;
 import java.util.UUID;
 
 import static cn.keking.utils.KkFileUtils.isFtpUrl;

File: server/src/main/java/cn/keking/utils/EncodingDetects.java
Patch:
@@ -43,7 +43,6 @@ public static String getJavaEncode(String filePath){
     }
 
     public static void readFile(String file, String code) {
-
         BufferedReader fr;
         try {
             String myCode = code!=null&&!"".equals(code) ? code : "UTF8";

File: server/src/main/java/cn/keking/utils/KkFileUtils.java
Patch:
@@ -186,7 +186,7 @@ public static boolean deleteDirectory(String dir) {
      */
     public static boolean isAllowedUpload(String file) {
         String fileType = suffixFromFileName(file);
-            for (String type : ConfigConstants.getprohibit()) {
+            for (String type : ConfigConstants.getProhibit()) {
             if (type.equals(fileType))
                 return false;
         }

File: server/src/main/java/cn/keking/web/controller/FileController.java
Patch:
@@ -65,7 +65,7 @@ public ReturnResponse<Object> deleteFile(String fileName,String password) {
             return checkResult;
         }
          fileName = checkResult.getContent().toString();
-        if(!ConfigConstants.getpassword().equalsIgnoreCase(password)){
+        if(!ConfigConstants.getPassword().equalsIgnoreCase(password)) {
             logger.error("删除文件【{}】失败，密码错误！",fileName);
             return ReturnResponse.failure("删除文件失败，密码错误！");
         }

File: server/src/main/java/cn/keking/web/filter/AttributeSetFilter.java
Patch:
@@ -40,8 +40,8 @@ private void setFileAttribute(ServletRequest request){
         request.setAttribute("fileKey", httpRequest.getParameter("fileKey"));
         request.setAttribute("switchDisabled", ConfigConstants.getOfficePreviewSwitchDisabled());
         request.setAttribute("fileUploadDisable", ConfigConstants.getFileUploadDisable());
-        request.setAttribute("BeiAn", ConfigConstants.getBeiAn());
-        request.setAttribute("size", ConfigConstants.maxsize());
+        request.setAttribute("beiAn", ConfigConstants.getBeiAn());
+        request.setAttribute("size", ConfigConstants.maxSize());
     }
 
     /**

File: server/src/main/java/cn/keking/web/filter/TrustDirFilter.java
Patch:
@@ -56,7 +56,8 @@ public void destroy() {
     }
 
     private boolean allowPreview(String urlPath) {
-        if(!StringUtils.hasText(urlPath) || !WebUtils.hefaurl(urlPath)){   //判断URL是否合法
+        //判断URL是否合法
+        if(!StringUtils.hasText(urlPath) || !WebUtils.isValidUrl(urlPath)) {
             return false ;
         }
         try {

File: server/src/main/java/cn/keking/model/FileType.java
Patch:
@@ -32,7 +32,7 @@ public enum FileType {
     Epub("epubFilePreviewImpl"),
     BPMN("bpmnFilePreviewImpl");
 
-    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd","dotm","ett","xlt","xltm","wpt","dot","xlam","xla"};
+    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd","dotm","ett","xlt","xltm","wpt","dot","xlam","dotx","xla"};
     private static final String[] PICTURE_TYPES = {"jpg", "jpeg", "png", "gif", "bmp", "ico", "jfif", "webp"};
     private static final String[] ARCHIVE_TYPES = {"rar", "zip", "jar", "7-zip", "tar", "gzip", "7z"};
     private static final String[] Online3D_TYPES = {"obj", "3ds", "stl", "ply", "off", "3dm", "fbx", "dae", "wrl", "3mf", "ifc","glb","o3dv","gltf","stp","bim","fcstd","step","iges","brep"};

File: server/src/main/java/cn/keking/model/FileType.java
Patch:
@@ -31,7 +31,7 @@ public enum FileType {
     SVG("svgFilePreviewImpl"),
     Epub("epubFilePreviewImpl");
 
-    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd"};
+    private static final String[] OFFICE_TYPES = {"docx", "wps", "doc", "docm", "xls", "xlsx", "csv" ,"xlsm", "ppt", "pptx", "vsd", "rtf", "odt", "wmf", "emf", "dps", "et", "ods", "ots", "tsv", "odp", "otp", "sxi", "ott", "vsdx", "fodt", "fods", "xltx","tga","psd","dotm","ett","xlt","xltm","wpt","dot","xlam","xla"};
     private static final String[] PICTURE_TYPES = {"jpg", "jpeg", "png", "gif", "bmp", "ico", "jfif", "webp"};
     private static final String[] ARCHIVE_TYPES = {"rar", "zip", "jar", "7-zip", "tar", "gzip", "7z"};
     private static final String[] Online3D_TYPES = {"obj", "3ds", "stl", "ply", "off", "3dm", "fbx", "dae", "wrl", "3mf", "ifc","glb","o3dv","gltf","stp","bim","fcstd","step","iges","brep"};

File: server/src/main/java/cn/keking/service/impl/PdfFilePreviewImpl.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.ui.Model;
 
+import java.net.URLEncoder;
 import java.util.List;
 
 /**
@@ -73,6 +74,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
                         fileHandlerService.addConvertedFile(pdfName, fileHandlerService.getRelativePath(outFilePath));
                     }
                 } else {
+                    pdfName =   URLEncoder.encode(pdfName).replaceAll("\\+", "%20");
                     model.addAttribute("pdfUrl", pdfName);
                 }
             } else {

File: server/src/main/java/cn/keking/utils/KkFileUtils.java
Patch:
@@ -102,7 +102,7 @@ public static boolean deleteFileByName(String fileName) {
     public static String htmlEscape(String input) {
         if(StringUtils.hasText(input)){
             //input = input.replaceAll("\\{", "%7B").replaceAll("}", "%7D").replaceAll("\\\\", "%5C");
-            return HtmlUtils.htmlEscape(input);
+            return HtmlUtils.htmlEscape(input, "UTF-8");
         }
         return input;
     }

File: server/src/main/java/cn/keking/web/filter/SecurityFilterProxy.java
Patch:
@@ -19,7 +19,7 @@ public class SecurityFilterProxy extends OncePerRequestFilter {
     @Override
     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,
                                     FilterChain filterChain) throws ServletException, IOException {
-        if((","+NOT_ALLOW_METHODS+",").indexOf(","+request.getMethod().toLowerCase()+",") > -1) {
+        if((","+NOT_ALLOW_METHODS+",").indexOf(","+request.getMethod().toUpperCase()+",") > -1) {
             response.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
             response.setHeader("Content-Type", "text/html; charset=iso-8859-1");
             response.getWriter().println("Method Not Allowed");

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -6,8 +6,8 @@
 
 import java.io.File;
 import java.util.Arrays;
-import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArraySet;
 
 /**
  * @author: chenjh

File: server/src/main/java/cn/keking/config/ConfigConstants.java
Patch:
@@ -53,7 +53,7 @@ public class ConfigConstants {
     public static final String DEFAULT_TRUST_HOST = "default";
     public static final String DEFAULT_PDF_DOWNLOAD_DISABLE = "true";
     public static final String DEFAULT_FILE_UPLOAD_DISABLE = "false";
-    public static final String DEFAULT_TIF_PREVIEW_TYPE = "jpg";
+    public static final String DEFAULT_TIF_PREVIEW_TYPE = "tif";
 
     public static Boolean isCacheEnabled() {
         return cacheEnabled;

File: server/src/main/java/cn/keking/utils/ConvertPicUtil.java
Patch:
@@ -8,13 +8,11 @@
 import com.sun.media.jai.codec.ImageCodec;
 import com.sun.media.jai.codec.ImageEncoder;
 import com.sun.media.jai.codec.JPEGEncodeParam;
-import org.springframework.stereotype.Component;
 
 import javax.media.jai.JAI;
 import javax.media.jai.RenderedOp;
 import java.io.*;
 
-@Component
 public class ConvertPicUtil {
 
     /**

File: server/src/main/java/cn/keking/service/FilePreview.java
Patch:
@@ -15,6 +15,7 @@ public interface FilePreview {
     String COMPRESS_FILE_PREVIEW_PAGE = "compress";
     String MEDIA_FILE_PREVIEW_PAGE = "media";
     String PICTURE_FILE_PREVIEW_PAGE = "picture";
+    String TIFF_FILE_PREVIEW_PAGE = "tiff";
     String OFD_FILE_PREVIEW_PAGE = "ofd";
     String OFFICE_PICTURE_FILE_PREVIEW_PAGE = "officePicture";
     String TXT_FILE_PREVIEW_PAGE = "txt";

File: server/src/main/java/cn/keking/web/filter/TrustHostFilter.java
Patch:
@@ -34,6 +34,9 @@ public void init(FilterConfig filterConfig) {
     @Override
     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
         String url = getSourceUrl(request);
+        if(url != null){
+            url = new String(Base64Utils.decodeFromString(url), StandardCharsets.UTF_8);
+        }
         String host = getHost(url);
         if (host != null &&!ConfigConstants.getTrustHostSet().isEmpty() && !ConfigConstants.getTrustHostSet().contains(host)) {
             String html = this.notTrustHost.replace("${current_host}", host);

File: server/src/main/java/cn/keking/service/FileHandlerService.java
Patch:
@@ -275,7 +275,7 @@ public FileAttribute getFileAttribute(String url, HttpServletRequest req) {
         attribute.setUrl(url);
         if (req != null) {
             String officePreviewType = req.getParameter("officePreviewType");
-            String fileKey = req.getParameter("fileKey");
+            String fileKey = WebUtils.getUrlParameterReg(url,"fileKey");
             if (StringUtils.hasText(officePreviewType)) {
                 attribute.setOfficePreviewType(officePreviewType);
             }

File: server/src/main/java/cn/keking/service/impl/MarkdownFilePreviewImpl.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.ui.Model;
 
-import static com.sun.glass.ui.Clipboard.TEXT_TYPE;
+import static cn.keking.service.impl.SimTextFilePreviewImpl.TEXT_TYPE;
 
 /**
  * @author kl (http://kailing.pub)

File: server/src/main/java/cn/keking/service/impl/PictureFilePreviewImpl.java
Patch:
@@ -44,11 +44,11 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
                 String file = fileHandlerService.getRelativePath(response.getContent());
                 imgUrls.clear();
                 imgUrls.add(file);
-                model.addAttribute("imgurls", imgUrls);
+                model.addAttribute("imgUrls", imgUrls);
                 model.addAttribute("currentUrl", file);
             }
         } else {
-            model.addAttribute("imgurls", imgUrls);
+            model.addAttribute("imgUrls", imgUrls);
             model.addAttribute("currentUrl", url);
         }
         return PICTURE_FILE_PREVIEW_PAGE;

File: server/src/main/java/cn/keking/service/impl/SimTextFilePreviewImpl.java
Patch:
@@ -39,7 +39,7 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
         try {
             File originFile = new File(response.getContent());
             String xmlString = FileUtils.readFileToString(originFile, StandardCharsets.UTF_8);
-            model.addAttribute("textData", Base64Utils.encodeToString(xmlString.getBytes()));
+            model.addAttribute("textData", Base64Utils.encodeToString(xmlString.getBytes(StandardCharsets.UTF_8)));
         } catch (IOException e) {
             return otherFilePreview.notSupportedFile(model, fileAttribute, e.getLocalizedMessage());
         }

File: server/src/main/java/cn/keking/service/impl/XmlFilePreviewImpl.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.ui.Model;
 
-import static com.sun.glass.ui.Clipboard.TEXT_TYPE;
+import static cn.keking.service.impl.SimTextFilePreviewImpl.TEXT_TYPE;
 
 /**
  * @author kl (http://kailing.pub)

File: server/src/main/java/cn/keking/web/controller/OnlinePreviewController.java
Patch:
@@ -65,6 +65,8 @@ public String picturesPreview(String urls, Model model, HttpServletRequest req)
         if(StringUtils.hasText(currentUrl)){
             String decodedCurrentUrl = new String(Base64Utils.decodeFromString(currentUrl));
             model.addAttribute("currentUrl", decodedCurrentUrl);
+        }else {
+            model.addAttribute("currentUrl", imgUrls.get(0));
         }
         return PICTURE_FILE_PREVIEW_PAGE;
     }

File: jodconverter-web/src/main/java/cn/keking/model/FileType.java
Patch:
@@ -5,7 +5,7 @@
  * Content :文件类型，文本，office，压缩包等等
  */
 public enum FileType {
-    picture("picturefilepreviewimpl"),
+    picture("pictureFilePreviewImpl"),
     compress("compressFilePreviewImpl"),
     office("officeFilePreviewImpl"),
     simText("simTextFilePreviewImpl"),

File: jodconverter-web/src/main/java/cn/keking/service/impl/OfficeFilePreviewImpl.java
Patch:
@@ -48,7 +48,6 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
         boolean isHtml = suffix.equalsIgnoreCase("xls") || suffix.equalsIgnoreCase("xlsx");
         String pdfName = fileName.substring(0, fileName.lastIndexOf(".") + 1) + (isHtml ? "html" : "pdf");
         String outFilePath = FILE_DIR + pdfName;
-        model.addAttribute("switchDisabled", ConfigConstants.getOfficePreviewSwitchDisabled());
         // 判断之前是否已转换过，如果转换过，直接返回，否则执行转换
         if (!fileUtils.listConvertedFiles().containsKey(pdfName) || !ConfigConstants.isCacheEnabled()) {
             String filePath;

File: jodconverter-web/src/main/java/cn/keking/service/impl/PdfFilePreviewImpl.java
Patch:
@@ -44,7 +44,6 @@ public String filePreviewHandle(String url, Model model, FileAttribute fileAttri
         String baseUrl = BaseUrlFilter.getBaseUrl();
         String pdfName = fileName.substring(0, fileName.lastIndexOf(".") + 1) + "pdf";
         String outFilePath = FILE_DIR + pdfName;
-        model.addAttribute("switchDisabled", ConfigConstants.getOfficePreviewSwitchDisabled());
         if (OfficeFilePreviewImpl.OFFICE_PREVIEW_TYPE_IMAGE.equals(officePreviewType) || OfficeFilePreviewImpl.OFFICE_PREVIEW_TYPE_ALL_IMAGES.equals(officePreviewType)) {
             //当文件不存在时，就去下载
             if (!fileUtils.listConvertedFiles().containsKey(pdfName) || !ConfigConstants.isCacheEnabled()) {

File: jodconverter-web/src/main/java/cn/keking/web/filter/AttributeSetFilter.java
Patch:
@@ -33,6 +33,8 @@ private void setFileAttribute(ServletRequest request){
         HttpServletRequest httpRequest = (HttpServletRequest)request;
         request.setAttribute("pdfDownloadDisable", ConfigConstants.getPdfDownloadDisable());
         request.setAttribute("fileKey", httpRequest.getParameter("fileKey"));
+        request.setAttribute("switchDisabled", ConfigConstants.getOfficePreviewSwitchDisabled());
+
     }
 
     /**

