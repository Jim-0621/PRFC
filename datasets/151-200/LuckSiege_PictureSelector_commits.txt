File: selector/src/main/java/com/luck/picture/lib/utils/DoubleUtils.java
Patch:
@@ -1,5 +1,7 @@
 package com.luck.picture.lib.utils;
 
+import android.os.SystemClock;
+
 /**
  * @author：luck
  * @date：2021/12/10 10:07 上午
@@ -11,7 +13,7 @@ public class DoubleUtils {
     private static long lastClickTime;
 
     public static boolean isFastDoubleClick() {
-        long time = System.currentTimeMillis();
+        long time = SystemClock.elapsedRealtime();
         if (time - lastClickTime < TIME) {
             return true;
         }

File: app/src/main/java/com/luck/pictureselector/MainActivity.java
Patch:
@@ -814,6 +814,9 @@ public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                 chooseMode = PictureMimeType.ofAudio();
                 cb_preview_audio.setVisibility(View.VISIBLE);
                 break;
+            case R.id.rb_system:
+                language = -1;
+                break;
             case R.id.rb_jpan:
                 language = LanguageConfig.JAPAN;
                 break;

File: app/src/main/java/com/luck/pictureselector/PhotoFragment.java
Patch:
@@ -684,6 +684,9 @@ public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                 chooseMode = PictureMimeType.ofAudio();
                 cb_preview_audio.setVisibility(View.VISIBLE);
                 break;
+            case R.id.rb_system:
+                language = -1;
+                break;
             case R.id.rb_jpan:
                 language = LanguageConfig.JAPAN;
                 break;

File: app/src/main/java/com/luck/pictureselector/MainActivity.java
Patch:
@@ -814,6 +814,9 @@ public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                 chooseMode = PictureMimeType.ofAudio();
                 cb_preview_audio.setVisibility(View.VISIBLE);
                 break;
+            case R.id.rb_system:
+                language = -1;
+                break;
             case R.id.rb_jpan:
                 language = LanguageConfig.JAPAN;
                 break;

File: app/src/main/java/com/luck/pictureselector/PhotoFragment.java
Patch:
@@ -684,6 +684,9 @@ public void onCheckedChanged(RadioGroup group, @IdRes int checkedId) {
                 chooseMode = PictureMimeType.ofAudio();
                 cb_preview_audio.setVisibility(View.VISIBLE);
                 break;
+            case R.id.rb_system:
+                language = -1;
+                break;
             case R.id.rb_jpan:
                 language = LanguageConfig.JAPAN;
                 break;

File: picture_library/src/main/java/com/luck/picture/lib/PictureSelectionModel.java
Patch:
@@ -428,7 +428,7 @@ public PictureSelectionModel selectionMedia(List<LocalMedia> selectionMedia) {
     }
 
     /**
-     * 是否开启白色状态栏
+     * 是否改变状态栏字段颜色(黑白字体转换)
      * #适合所有style使用
      *
      * @param isChangeStatusBarFontColor

File: picture_library/src/main/java/com/luck/picture/lib/PictureSelectorActivity.java
Patch:
@@ -234,7 +234,7 @@ private void initView(Bundle savedInstanceState) {
                 getString(R.string.picture_all_audio)
                 : getString(R.string.picture_camera_roll);
         mTvPictureTitle.setText(title);
-        folderWindow = new FolderPopWindow(this, config.chooseMode);
+        folderWindow = new FolderPopWindow(this, config.chooseMode,config);
         folderWindow.setPictureTitleView(mTvPictureTitle);
         folderWindow.setOnItemClickListener(this);
         mPictureRecycler.setHasFixedSize(true);

File: picture_library/src/main/java/com/luck/picture/lib/tools/ToastUtils.java
Patch:
@@ -12,7 +12,7 @@
 public final class ToastUtils {
 
     public static void s(Context mContext, String s) {
-        Toast.makeText(mContext.getApplicationContext(), s, Toast.LENGTH_LONG)
+        Toast.makeText(mContext.getApplicationContext(), s, Toast.LENGTH_SHORT)
                 .show();
     }
 }

File: ucrop/src/main/java/com/yalantis/ucrop/PictureMultiCuttingActivity.java
Patch:
@@ -324,6 +324,8 @@ private void processOptions(@NonNull Intent intent) {
     private void setupViews(@NonNull Intent intent) {
         scaleEnabled = intent.getBooleanExtra(UCropMulti.Options.EXTRA_SCALE, false);
         rotateEnabled = intent.getBooleanExtra(UCropMulti.Options.EXTRA_ROTATE, false);
+        // 是否可拖动裁剪框
+        isDragFrame = intent.getBooleanExtra(UCrop.Options.EXTRA_DRAG_CROP_FRAME, true);
 
         mStatusBarColor = intent.getIntExtra(UCropMulti.Options.EXTRA_STATUS_BAR_COLOR, ContextCompat.getColor(this, R.color.ucrop_color_statusbar));
         mToolbarColor = intent.getIntExtra(UCropMulti.Options.EXTRA_TOOL_BAR_COLOR, ContextCompat.getColor(this, R.color.ucrop_color_toolbar));

File: picture_library/src/main/java/com/luck/picture/lib/PictureSelectorActivity.java
Patch:
@@ -971,7 +971,7 @@ private void requestCamera(Intent data) {
         final File file = new File(cameraPath);
         sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(file)));
         String toType;
-        long size = 0;
+        long size;
         boolean isAndroidQ = SdkVersionUtils.checkedAndroid_Q();
         if (isAndroidQ) {
             String path = PictureFileUtils.getPath(getApplicationContext(), Uri.parse(cameraPath));

File: picture_library/src/main/java/com/luck/picture/lib/PictureExternalPreviewActivity.java
Patch:
@@ -66,6 +66,7 @@ public class PictureExternalPreviewActivity extends PictureBaseActivity implemen
     private PreviewViewPager viewPager;
     private List<LocalMedia> images = new ArrayList<>();
     private int position = 0;
+    @Deprecated
     private String directory_path;
     private SimpleFragmentAdapter adapter;
     private LayoutInflater inflater;
@@ -298,7 +299,7 @@ private void showDownLoadDialog(final String path) {
                 // 有可能本地图片
                 try {
                     String dirPath = PictureFileUtils.createDir(PictureExternalPreviewActivity.this,
-                            System.currentTimeMillis() + ".png", directory_path);
+                            System.currentTimeMillis() + ".png");
                     PictureFileUtils.copyFile(path, dirPath);
                     ToastUtils.s(mContext, getString(R.string.picture_save_success) + "\n" + dirPath);
                     dismissDialog();
@@ -338,7 +339,7 @@ public void showLoadingImage(String urlPath) {
         try {
             URL u = new URL(urlPath);
             String path = PictureFileUtils.createDir(PictureExternalPreviewActivity.this,
-                    System.currentTimeMillis() + ".png", directory_path);
+                    System.currentTimeMillis() + ".png");
             byte[] buffer = new byte[1024 * 8];
             int read;
             int ava = 0;

File: picture_library/src/main/java/com/luck/picture/lib/dialog/PictureSpinView.java
Patch:
@@ -41,7 +41,7 @@ public PictureSpinView(Context context, AttributeSet attrs) {
     }
 
     private void init() {
-        setImageResource(R.drawable.kprogresshud_spinner);
+        setImageResource(R.drawable.ic_picture_progress_);
         mFrameTime = 1000 / 12;
         mUpdateViewRunnable = new Runnable() {
             @Override

File: app/src/main/java/com/luck/pictureselector/PhotoFragment.java
Patch:
@@ -107,8 +107,8 @@ private void init() {
         recyclerView.setAdapter(adapter);
         adapter.setOnItemClickListener((position, v) -> {
             LocalMedia media = selectList.get(position);
-            String pictureType = media.getPictureType();
-            int mediaType = PictureMimeType.pictureToVideo(pictureType);
+            String mimeType = media.getMimeType();
+            int mediaType = PictureMimeType.pictureToVideo(mimeType);
             switch (mediaType) {
                 case 1:
                     // 预览图片

File: picture_library/src/main/java/com/luck/picture/lib/PictureExternalPreviewActivity.java
Patch:
@@ -142,7 +142,7 @@ public Object instantiateItem(ViewGroup container, int position) {
 
             LocalMedia media = images.get(position);
             if (media != null) {
-                final String pictureType = media.getPictureType();
+                final String mimeType = media.getMimeType();
                 final String path;
                 if (media.isCut() && !media.isCompressed()) {
                     // 裁剪过
@@ -158,7 +158,7 @@ public Object instantiateItem(ViewGroup container, int position) {
                 if (isHttp) {
                     showPleaseDialog();
                 }
-                boolean isGif = PictureMimeType.isGif(pictureType);
+                boolean isGif = PictureMimeType.isGif(mimeType);
                 final boolean eqLongImg = MediaUtils.isLongImg(media);
                 imageView.setVisibility(eqLongImg && !isGif ? View.GONE : View.VISIBLE);
                 longImg.setVisibility(eqLongImg && !isGif ? View.VISIBLE : View.GONE);

File: picture_library/src/main/java/com/luck/picture/lib/model/LocalMediaLoader.java
Patch:
@@ -5,6 +5,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.provider.MediaStore;
+import android.util.Log;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
@@ -165,6 +166,8 @@ public List<LocalMediaFolder> doSth(Object... objects) {
                                 long duration = data.getLong
                                         (data.getColumnIndexOrThrow(PROJECTION[5]));
 
+                                Log.i("Mike", "doSth: "+pictureType);
+
                                 if (type == PictureConfig.TYPE_VIDEO) {
                                     if (duration == 0) {
                                         duration = MediaUtils.extractVideoDuration(mContext, isAndroidQ, path);

File: picture_library/src/main/java/com/luck/picture/lib/entity/LocalMedia.java
Patch:
@@ -1,5 +1,7 @@
 package com.luck.picture.lib.entity;
 
+import android.text.TextUtils;
+
 import java.io.Serializable;
 
 /**
@@ -57,7 +59,7 @@ public LocalMedia(String path, long duration,
     }
 
     public String getPictureType() {
-        if (pictureType.equals("") || pictureType == null) {
+        if (TextUtils.isEmpty(pictureType)) {
             pictureType = "image/jpeg";
         }
         return pictureType;

File: picture_library/src/main/java/com/luck/picture/lib/model/LocalMediaLoader.java
Patch:
@@ -15,7 +15,6 @@
 import com.luck.picture.lib.entity.LocalMedia;
 import com.luck.picture.lib.entity.LocalMediaFolder;
 import com.luck.picture.lib.tools.DebugUtil;
-import com.luck.picture.lib.tools.StringUtils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -204,7 +203,7 @@ public void onLoadFinished(Loader<Cursor> loader, Cursor data) {
                                                 (data.getColumnIndexOrThrow(IMAGE_PROJECTION[1]));
                                         // 如原图路径不存在或者路径存在但文件不存在,就结束当前循环
                                         if (TextUtils.isEmpty(path) || !new File(path).exists()
-                                                || StringUtils.isFolderDCIM(path)) {
+                                                ) {
                                             continue;
                                         }
                                         String pictureType = data.getString

File: picture_library/src/main/java/com/luck/picture/lib/config/PictureConfig.java
Patch:
@@ -12,6 +12,7 @@
 public final class PictureConfig {
     public final static String FC_TAG = "picture";
     public final static String EXTRA_RESULT_SELECTION = "extra_result_media";
+    public final static String EXTRA_LOCAL_MEDIAS = "localMedias";
     public final static String EXTRA_PREVIEW_SELECT_LIST = "previewSelectList";
     public final static String EXTRA_SELECT_LIST = "selectList";
     public final static String EXTRA_POSITION = "position";

File: picture_library/src/main/java/com/luck/picture/lib/ui/PictureImagePreviewFragment.java
Patch:
@@ -78,7 +78,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         final String path = getArguments().getString(PATH);
         isSave = getArguments().getBoolean("isSave");
         directory_path = getArguments().getString(FunctionConfig.DIRECTORY_PATH);
-        if (!isSave) {
+        if (!isSave && path.startsWith("http")) {
             showPleaseDialog("请稍候...");
         }
         Glide.with(container.getContext())

File: ucrop/src/main/java/com/yalantis/ucrop/ui/PictureMultiCuttingActivity.java
Patch:
@@ -156,6 +156,7 @@ protected void startMultiCopy(String path) {
         options.withMaxResultSize(maxSizeX, maxSizeY);
         options.background_color(backgroundColor);
         options.copyMode(copyMode);
+        options.setIsCompress(isCompress);
         uCrop.withOptions(options);
         uCrop.start(PictureMultiCuttingActivity.this);
         overridePendingTransition(R.anim.fade, R.anim.hold);

File: picture_library/src/main/java/com/luck/picture/lib/ui/PictureAlbumDirectoryActivity.java
Patch:
@@ -241,8 +241,8 @@ protected void onDestroy() {
 
     protected void clearData() {
         // 释放静态变量
-        PictureConfig.getPictureConfig().resultCallback = null;
-        PictureConfig.pictureConfig = null;
+        PictureConfig.getInstance().resultCallback = null;
+        PictureConfig.sInstance = null;
         ImagesObservable.getInstance().remove(this);
         ImagesObservable.getInstance().clearLocalFolders();
         ImagesObservable.getInstance().clearLocalMedia();

File: picture_library/src/main/java/com/luck/picture/lib/ui/PictureExternalPreviewActivity.java
Patch:
@@ -107,7 +107,7 @@ public int getCount() {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        PictureConfig.getPictureConfig().resultCallback = null;
-        PictureConfig.pictureConfig = null;
+        PictureConfig.getInstance().resultCallback = null;
+        PictureConfig.sInstance = null;
     }
 }

File: picture_library/src/main/java/com/luck/picture/lib/ui/PictureVideoPlayActivity.java
Patch:
@@ -64,8 +64,8 @@ public void onPause() {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        mVideoView.stopPlayback();
         mMediaController = null;
+        mVideoView = null;
     }
 
     public void onResume() {

File: picture_library/src/main/java/com/luck/picture/lib/ui/PicturePreviewActivity.java
Patch:
@@ -20,7 +20,6 @@
 
 import com.luck.picture.lib.R;
 import com.luck.picture.lib.model.FunctionConfig;
-import com.luck.picture.lib.model.LocalMediaLoader;
 import com.luck.picture.lib.observable.ImagesObservable;
 import com.luck.picture.lib.widget.Constant;
 import com.luck.picture.lib.widget.PreviewViewPager;
@@ -306,7 +305,7 @@ public void onClick(View view) {
         if (id == R.id.left_back) {
             finish();
         } else if (id == R.id.tv_ok) {
-            if (selectMode == FunctionConfig.MODE_MULTIPLE && enableCrop && type == LocalMediaLoader.TYPE_IMAGE) {
+            if (selectMode == FunctionConfig.MODE_MULTIPLE && enableCrop && type == FunctionConfig.TYPE_IMAGE) {
                 // 是图片和选择压缩并且是多张，调用批量压缩
                 startMultiCopy(selectImages);
             } else {

File: ucrop/src/main/java/com/yalantis/ucrop/ui/PictureMultiCuttingActivity.java
Patch:
@@ -13,7 +13,6 @@
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.View;
 import android.view.animation.AccelerateInterpolator;
 import android.widget.ImageButton;
@@ -311,7 +310,6 @@ protected void setResultUri(Uri uri, float resultAspectRatio, int imageWidth, in
             images.get(cutIndex).setCut(true);
             cutIndex++;
             if (cutIndex >= images.size()) {
-                Log.i(TAG, "裁剪比例" + copyMode);
                 // 裁剪完成，看是否压缩
                 for (LocalMedia media : images) {
                     media.setCut(true);
@@ -321,7 +319,6 @@ protected void setResultUri(Uri uri, float resultAspectRatio, int imageWidth, in
                 finish();
                 overridePendingTransition(0, R.anim.hold);
             } else {
-                Log.i(TAG, "裁剪比例" + copyMode);
                 finish();
                 startMultiCopy(images.get(cutIndex).getPath());
             }

File: picture_library/src/main/java/com/luck/picture/lib/ui/PictureImageGridActivity.java
Patch:
@@ -467,6 +467,7 @@ protected void startMultiCopy(List<LocalMedia> medias) {
             options.withMaxResultSize(cropW, cropH);
             options.background_color(backgroundColor);
             options.setIsCompress(isCompress);
+            options.copyMode(copyMode);
             uCrop.withOptions(options);
             uCrop.start(PictureImageGridActivity.this);
         }

File: ucrop/src/main/java/com/yalantis/ucrop/ui/PictureMultiCuttingActivity.java
Patch:
@@ -136,6 +136,7 @@ protected void startMultiCopy(String path) {
         options.setCompressionQuality(mCompressQuality);
         options.withMaxResultSize(maxSizeX, maxSizeY);
         options.background_color(backgroundColor);
+        options.copyMode(copyMode);
         uCrop.withOptions(options);
         uCrop.start(PictureMultiCuttingActivity.this);
         overridePendingTransition(R.anim.fade, R.anim.hold);
@@ -310,6 +311,7 @@ protected void setResultUri(Uri uri, float resultAspectRatio, int imageWidth, in
             images.get(cutIndex).setCut(true);
             cutIndex++;
             if (cutIndex >= images.size()) {
+                Log.i(TAG, "裁剪比例" + copyMode);
                 // 裁剪完成，看是否压缩
                 for (LocalMedia media : images) {
                     media.setCut(true);
@@ -319,6 +321,7 @@ protected void setResultUri(Uri uri, float resultAspectRatio, int imageWidth, in
                 finish();
                 overridePendingTransition(0, R.anim.hold);
             } else {
+                Log.i(TAG, "裁剪比例" + copyMode);
                 finish();
                 startMultiCopy(images.get(cutIndex).getPath());
             }

File: picture_library/src/main/java/com/yalantis/ucrop/adapter/PictureAlbumDirectoryAdapter.java
Patch:
@@ -71,8 +71,9 @@ public void onBindViewHolder(ViewHolder holder, int position) {
                     .error(R.drawable.ic_placeholder)
                     .centerCrop()
                     .crossFade()
-                    .diskCacheStrategy(DiskCacheStrategy.ALL)
+                    .diskCacheStrategy(DiskCacheStrategy.RESULT)
                     .into(holder.first_image);
+
         }
         holder.image_num.setText("(" + imageNum + ")");
         holder.tv_folder_name.setText(name);

File: picture_library/src/main/java/com/yalantis/ucrop/ui/PictureAlbumDirectoryActivity.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.View;
 import android.widget.TextView;
 
+import com.bumptech.glide.Glide;
 import com.yalantis.ucrop.R;
 import com.yalantis.ucrop.adapter.PictureAlbumDirectoryAdapter;
 import com.yalantis.ucrop.decoration.RecycleViewDivider;

File: picture_library/src/main/java/com/yalantis/ucrop/ui/PictureImagePreviewFragment.java
Patch:
@@ -55,7 +55,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         Glide.with(container.getContext())
                 .load(path)
                 .asBitmap()
-                .diskCacheStrategy(DiskCacheStrategy.ALL    )
+                .diskCacheStrategy(DiskCacheStrategy.RESULT)
                 .into(new SimpleTarget<Bitmap>(480, 800) {
                     @Override
                     public void onResourceReady(Bitmap resource, GlideAnimation<? super Bitmap> glideAnimation) {

File: picture_library/src/main/java/com/yalantis/ucrop/UCrop.java
Patch:
@@ -19,8 +19,6 @@
 
 import com.yalantis.ucrop.model.AspectRatio;
 import com.yalantis.ucrop.util.FunctionConfig;
-import com.yalantis.ucrop.util.PictureConfig;
-
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Locale;
@@ -534,7 +532,7 @@ public void useSourceImageAspectRatio() {
          * @param width  max cropped image width
          * @param height max cropped image height
          */
-        public void withMaxResultSize(@IntRange(from = 100) int width, @IntRange(from = 100) int height) {
+        public void withMaxResultSize(@IntRange(from = 0) int width, @IntRange(from = 0) int height) {
             mOptionBundle.putInt(EXTRA_MAX_SIZE_X, width);
             mOptionBundle.putInt(EXTRA_MAX_SIZE_Y, height);
         }

File: picture_library/src/main/java/com/yalantis/ucrop/adapter/PictureAlbumDirectoryAdapter.java
Patch:
@@ -25,11 +25,11 @@
  * email：893855882@qq.com
  * data：16/12/31
  */
-public class AlbumDirectoryAdapter extends RecyclerView.Adapter<AlbumDirectoryAdapter.ViewHolder> {
+public class PictureAlbumDirectoryAdapter extends RecyclerView.Adapter<PictureAlbumDirectoryAdapter.ViewHolder> {
     private Context mContext;
     private List<LocalMediaFolder> folders = new ArrayList<>();
 
-    public AlbumDirectoryAdapter(Context mContext) {
+    public PictureAlbumDirectoryAdapter(Context mContext) {
         super();
         this.mContext = mContext;
     }
@@ -45,7 +45,7 @@ public List<LocalMediaFolder> getFolderData() {
 
     @Override
     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View itemView = LayoutInflater.from(mContext).inflate(R.layout.album_folder_item, parent, false);
+        View itemView = LayoutInflater.from(mContext).inflate(R.layout.picture_album_folder_item, parent, false);
         return new ViewHolder(itemView);
     }
 

File: picture_library/src/main/java/com/yalantis/ucrop/compress/CompressImageUtil.java
Patch:
@@ -15,7 +15,7 @@
 
 /**
  * 压缩照片
- * <p/>
+ * <p>
  * Date: 2017/01/05
  * GitHub:https://github.com/LuckSiege
  * email:893855882@qq.com
@@ -32,6 +32,7 @@ public CompressImageUtil(Context context, CompressConfig config) {
     }
 
     public void compress(String imagePath, CompressListener listener) {
+        // 启用像素压缩
         if (config.isEnablePixelCompress()) {
             try {
                 compressImageByPixel(imagePath, listener);
@@ -40,6 +41,7 @@ public void compress(String imagePath, CompressListener listener) {
                 e.printStackTrace();
             }
         } else {
+            // 启用质量压缩
             compressImageByQuality(BitmapFactory.decodeFile(imagePath), imagePath, listener);
         }
     }

File: picture_library/src/main/java/com/yalantis/ucrop/dialog/SweetAlertDialog.java
Patch:
@@ -71,7 +71,7 @@ protected void applyTransformation(float interpolatedTime, Transformation t) {
 
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.alert_dialog);
+        setContentView(R.layout.picture_alert_dialog);
 
         mDialogView = getWindow().getDecorView().findViewById(android.R.id.content);
         mTitleTextView = (TextView) findViewById(R.id.title_text);

File: picture_library/src/main/java/com/yalantis/ucrop/ui/PictureExternalPreviewActivity.java
Patch:
@@ -25,7 +25,7 @@
  * email：邮箱->893855882@qq.com
  * data：17/01/18
  */
-public class ExternalPreviewActivity extends FragmentActivity {
+public class PictureExternalPreviewActivity extends FragmentActivity {
     private ImageButton left_back;
     private TextView tv_title;
     private PreviewViewPager viewPager;
@@ -36,7 +36,7 @@ public class ExternalPreviewActivity extends FragmentActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_external_preview);
+        setContentView(R.layout.picture_activity_external_preview);
         tv_title = (TextView) findViewById(R.id.tv_title);
         left_back = (ImageButton) findViewById(R.id.left_back);
         viewPager = (PreviewViewPager) findViewById(R.id.preview_pager);
@@ -81,7 +81,7 @@ public SimpleFragmentAdapter(FragmentManager fm) {
 
         @Override
         public Fragment getItem(int position) {
-            ImagePreviewFragment fragment = ImagePreviewFragment.getInstance(images.get(position).getPath(), images);
+            PictureImagePreviewFragment fragment = PictureImagePreviewFragment.getInstance(images.get(position).getPath(), images);
             return fragment;
         }
 

File: picture_library/src/main/java/com/yalantis/ucrop/ui/PictureVideoPlayActivity.java
Patch:
@@ -10,7 +10,7 @@
 
 import com.yalantis.ucrop.R;
 
-public class VideoPlayActivity extends BaseActivity implements MediaPlayer.OnErrorListener, MediaPlayer.OnCompletionListener {
+public class PictureVideoPlayActivity extends PictureBaseActivity implements MediaPlayer.OnErrorListener, MediaPlayer.OnCompletionListener {
     private String video_path = "";
     private ImageView left_back;
     private MediaController mMediaController;
@@ -22,7 +22,7 @@ public class VideoPlayActivity extends BaseActivity implements MediaPlayer.OnErr
     protected void onCreate(Bundle savedInstanceState) {
         getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_video_play);
+        setContentView(R.layout.picture_activity_video_play);
         video_path = getIntent().getStringExtra("video_path");
         left_back = (ImageView) findViewById(R.id.left_back);
         mVideoView = (VideoView) findViewById(R.id.video_view);

File: picture_library/src/main/java/com/yalantis/ucrop/view/UCropView.java
Patch:
@@ -24,7 +24,7 @@ public UCropView(Context context, AttributeSet attrs) {
     public UCropView(Context context, AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
 
-        LayoutInflater.from(context).inflate(R.layout.ucrop_view, this, true);
+        LayoutInflater.from(context).inflate(R.layout.picture_ucrop_view, this, true);
         mGestureCropImageView = (GestureCropImageView) findViewById(R.id.image_view_crop);
         mViewOverlay = (OverlayView) findViewById(R.id.view_overlay);
 

