File: app/src/main/java/com/lgvalle/material_animations/MainActivity.java
Patch:
@@ -43,7 +43,7 @@ private void setupSamples() {
         );
     }
 
-    protected void setupToolbar() {
+    private void setupToolbar() {
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);

File: app/src/main/java/com/lgvalle/material_animations/Sample.java
Patch:
@@ -12,8 +12,8 @@
  */
 public class Sample implements Serializable {
 
-    int color;
-    String name;
+    final int color;
+    private final String name;
 
     public Sample(@ColorRes int color, String name) {
         this.color = color;

File: app/src/main/java/com/lgvalle/material_animations/TransitionHelper.java
Patch:
@@ -29,7 +29,7 @@
 /**
  * Helper class for creating content transitions used with {@link android.app.ActivityOptions}.
  */
-public class TransitionHelper {
+class TransitionHelper {
 
     /**
      * Create the transition participants required during a activity transition while

File: app/src/main/java/com/lgvalle/material_animations/AnimationsActivity1.java
Patch:
@@ -87,7 +87,7 @@ private void changePosition() {
         if (positionChanged) {
             lp.gravity = Gravity.CENTER;
         } else {
-            lp.gravity = Gravity.START;
+            lp.gravity = Gravity.LEFT;
         }
         positionChanged = !positionChanged;
         square.setLayoutParams(lp);

File: app/src/main/java/com/lgvalle/material_animations/MainActivity.java
Patch:
@@ -28,7 +28,7 @@ protected void onCreate(Bundle savedInstanceState) {
     private void setupWindowAnimations() {
         // Re-enter transition is executed when returning to this activity
         Slide slideTransition = new Slide();
-        slideTransition.setSlideEdge(Gravity.START);
+        slideTransition.setSlideEdge(Gravity.LEFT);
         slideTransition.setDuration(getResources().getInteger(R.integer.anim_duration_long));
         getWindow().setReenterTransition(slideTransition);
         getWindow().setExitTransition(slideTransition);

File: app/src/main/java/com/lgvalle/material_animations/SharedElementActivity.java
Patch:
@@ -33,7 +33,7 @@ private void setupWindowAnimations() {
 
     private void setupLayout(Sample sample) {
         // Transition for fragment1
-        Slide slideTransition = new Slide(Gravity.START);
+        Slide slideTransition = new Slide(Gravity.LEFT);
         slideTransition.setDuration(getResources().getInteger(R.integer.anim_duration_long));
         // Create fragment and define some of it transitions
         SharedElementFragment1 sharedElementFragment1 = SharedElementFragment1.newInstance(sample);

File: app/src/main/java/com/lgvalle/material_animations/SharedElementFragment1.java
Patch:
@@ -56,7 +56,7 @@ public void onClick(View v) {
     private void addNextFragment(Sample sample, ImageView squareBlue, boolean overlap) {
         SharedElementFragment2 sharedElementFragment2 = SharedElementFragment2.newInstance(sample);
 
-        Slide slideTransition = new Slide(Gravity.END);
+        Slide slideTransition = new Slide(Gravity.RIGHT);
         slideTransition.setDuration(getResources().getInteger(R.integer.anim_duration_medium));
 
         ChangeBounds changeBoundsTransition = new ChangeBounds();

