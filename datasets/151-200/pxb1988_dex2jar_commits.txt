File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/ev/EncodedValue.java
Patch:
@@ -415,7 +415,7 @@ public int compareTo(EncodedValue o) {
             case VALUE_METHOD_HANDLE:
             case VALUE_METHOD_TYPE:
                 if (value instanceof Comparable) {
-                    return ((Comparable) value).compareTo(value);
+                    return ((Comparable) value).compareTo(o.value);
                 } else {
                     throw new RuntimeException();
                 }

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jar2JasminCmd.java
Patch:
@@ -22,7 +22,6 @@
 import org.objectweb.asm.tree.ClassNode;
 
 import java.io.*;
-import java.net.URISyntaxException;
 import java.nio.charset.Charset;
 import java.nio.file.FileSystem;
 import java.nio.file.*;
@@ -78,7 +77,7 @@ protected void doCommandLine() throws Exception {
         }
     }
 
-    private void disassemble0(Path in, final Path output) throws IOException, URISyntaxException {
+    private void disassemble0(Path in, final Path output) throws IOException {
         if (Files.isDirectory(in)) { // a dir
             travelFileTree(in, output);
         } else if (in.toString().endsWith(".class")) {

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jasmins.java
Patch:
@@ -46,6 +46,6 @@ public static ClassNode parse(String fileName, Reader bufferedReader) throws IOE
     }
 
     public static ClassNode parse(String fileName, InputStream is) throws IOException, RecognitionException {
-        return parse(fileName, new InputStreamReader(is, "UTF-8"));
+        return parse(fileName, new InputStreamReader(is, StandardCharsets.UTF_8));
     }
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Transformer.java
Patch:
@@ -25,5 +25,5 @@
  */
 public interface Transformer {
 
-    public void transform(IrMethod method);
+    void transform(IrMethod method);
 }

File: dex-reader-api/src/main/java/com/googlecode/d2j/DexConstants.java
Patch:
@@ -21,7 +21,7 @@
  * @author <a href="mailto:pxb1988@gmail.com">Panxiaobo</a>
  * @version $Rev$
  */
-public abstract interface DexConstants {
+public interface DexConstants {
 
     int ACC_PUBLIC = 0x0001; // class, field, method
     int ACC_PRIVATE = 0x0002; // class, field, method

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarCmd.java
Patch:
@@ -117,7 +117,7 @@ protected void doCommandLine() throws Exception {
                             : exceptionFile;
                     System.err.println("Detail Error Information in File " + errorFile);
                     System.err.println(BaksmaliBaseDexExceptionHandler.REPORT_MESSAGE);
-                    handler.dump(errorFile, orginalArgs);
+                    handler.dump(errorFile, originalArgs);
                 }
             }
             // long endTS = System.currentTimeMillis();

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarMultiThreadCmd.java
Patch:
@@ -52,8 +52,7 @@ public static void main(String... args) {
 
     @Override
     protected void doCommandLine() throws Exception {
-        List<String> f = new ArrayList<>();
-        f.addAll(Arrays.asList(remainingArgs));
+        List<String> f = new ArrayList<>(Arrays.asList(remainingArgs));
         if (fileList != null) {
             f.addAll(Files.readAllLines(fileList, StandardCharsets.UTF_8));
         }
@@ -117,7 +116,7 @@ public void visitEnd() {
                             // FIXME handle 'java.lang.RuntimeException: Method code too large!'
                             data = cw.toByteArray();
                         } catch (Exception ex) {
-                            System.err.println(String.format("ASM fail to generate .class file: %s", className));
+                            System.err.printf("ASM fail to generate .class file: %s%n", className);
                             exceptionHandler.handleFileException(ex);
                             return;
                         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Jar2Dex.java
Patch:
@@ -92,11 +92,11 @@ public void visitFile(Path file, String relative) throws IOException {
             Class<?> c = Class.forName("com.android.dx.command.Main");
             Method m = c.getMethod("main", String[].class);
 
-            List<String> ps = new ArrayList<String>();
-            ps.addAll(Arrays.asList("--dex", "--no-strict", "--output=" + output.toAbsolutePath().toString(), realJar
+            List<String> ps = new ArrayList<>(Arrays.asList("--dex", "--no-strict",
+                    "--output=" + output.toAbsolutePath(), realJar
                     .toAbsolutePath().toString()));
             System.out.println("call com.android.dx.command.Main.main" + ps);
-            m.invoke(null, new Object[] { ps.toArray(new String[ps.size()]) });
+            m.invoke(null, new Object[] { ps.toArray(new String[0]) });
         } finally {
             if (tmp != null) {
                 Files.deleteIfExists(tmp);

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2jar.java
Patch:
@@ -79,7 +79,7 @@ private Dex2jar(BaseDexFileReader reader) {
         readerConfig |= DexFileReader.SKIP_DEBUG;
     }
 
-    private void doTranslate(final Path dist) throws IOException {
+    private void doTranslate(final Path dist) {
 
         DexFileNode fileNode = new DexFileNode();
         try {
@@ -102,7 +102,7 @@ public void visitEnd() {
                             // FIXME handle 'java.lang.RuntimeException: Method code too large!'
                             data = cw.toByteArray();
                         } catch (Exception ex) {
-                            System.err.println(String.format("ASM fail to generate .class file: %s", className));
+                            System.err.printf("ASM fail to generate .class file: %s%n", className);
                             exceptionHandler.handleFileException(ex);
                             return;
                         }

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jar2JasminCmd.java
Patch:
@@ -22,7 +22,6 @@
 import org.objectweb.asm.tree.ClassNode;
 
 import java.io.*;
-import java.net.URISyntaxException;
 import java.nio.charset.Charset;
 import java.nio.file.FileSystem;
 import java.nio.file.*;
@@ -78,7 +77,7 @@ protected void doCommandLine() throws Exception {
         }
     }
 
-    private void disassemble0(Path in, final Path output) throws IOException, URISyntaxException {
+    private void disassemble0(Path in, final Path output) throws IOException {
         if (Files.isDirectory(in)) { // a dir
             travelFileTree(in, output);
         } else if (in.toString().endsWith(".class")) {

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jasmins.java
Patch:
@@ -46,6 +46,6 @@ public static ClassNode parse(String fileName, Reader bufferedReader) throws IOE
     }
 
     public static ClassNode parse(String fileName, InputStream is) throws IOException, RecognitionException {
-        return parse(fileName, new InputStreamReader(is, "UTF-8"));
+        return parse(fileName, new InputStreamReader(is, StandardCharsets.UTF_8));
     }
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Transformer.java
Patch:
@@ -25,5 +25,5 @@
  */
 public interface Transformer {
 
-    public void transform(IrMethod method);
+    void transform(IrMethod method);
 }

File: dex-reader-api/src/main/java/com/googlecode/d2j/DexConstants.java
Patch:
@@ -21,7 +21,7 @@
  * @author <a href="mailto:pxb1988@gmail.com">Panxiaobo</a>
  * @version $Rev$
  */
-public abstract interface DexConstants {
+public interface DexConstants {
 
     int ACC_PUBLIC = 0x0001; // class, field, method
     int ACC_PRIVATE = 0x0002; // class, field, method

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarCmd.java
Patch:
@@ -117,7 +117,7 @@ protected void doCommandLine() throws Exception {
                             : exceptionFile;
                     System.err.println("Detail Error Information in File " + errorFile);
                     System.err.println(BaksmaliBaseDexExceptionHandler.REPORT_MESSAGE);
-                    handler.dump(errorFile, orginalArgs);
+                    handler.dump(errorFile, originalArgs);
                 }
             }
             // long endTS = System.currentTimeMillis();

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarMultiThreadCmd.java
Patch:
@@ -52,8 +52,7 @@ public static void main(String... args) {
 
     @Override
     protected void doCommandLine() throws Exception {
-        List<String> f = new ArrayList<>();
-        f.addAll(Arrays.asList(remainingArgs));
+        List<String> f = new ArrayList<>(Arrays.asList(remainingArgs));
         if (fileList != null) {
             f.addAll(Files.readAllLines(fileList, StandardCharsets.UTF_8));
         }
@@ -117,7 +116,7 @@ public void visitEnd() {
                             // FIXME handle 'java.lang.RuntimeException: Method code too large!'
                             data = cw.toByteArray();
                         } catch (Exception ex) {
-                            System.err.println(String.format("ASM fail to generate .class file: %s", className));
+                            System.err.printf("ASM fail to generate .class file: %s%n", className);
                             exceptionHandler.handleFileException(ex);
                             return;
                         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Jar2Dex.java
Patch:
@@ -92,11 +92,11 @@ public void visitFile(Path file, String relative) throws IOException {
             Class<?> c = Class.forName("com.android.dx.command.Main");
             Method m = c.getMethod("main", String[].class);
 
-            List<String> ps = new ArrayList<String>();
-            ps.addAll(Arrays.asList("--dex", "--no-strict", "--output=" + output.toAbsolutePath().toString(), realJar
+            List<String> ps = new ArrayList<>(Arrays.asList("--dex", "--no-strict",
+                    "--output=" + output.toAbsolutePath(), realJar
                     .toAbsolutePath().toString()));
             System.out.println("call com.android.dx.command.Main.main" + ps);
-            m.invoke(null, new Object[] { ps.toArray(new String[ps.size()]) });
+            m.invoke(null, new Object[] { ps.toArray(new String[0]) });
         } finally {
             if (tmp != null) {
                 Files.deleteIfExists(tmp);

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2jar.java
Patch:
@@ -79,7 +79,7 @@ private Dex2jar(BaseDexFileReader reader) {
         readerConfig |= DexFileReader.SKIP_DEBUG;
     }
 
-    private void doTranslate(final Path dist) throws IOException {
+    private void doTranslate(final Path dist) {
 
         DexFileNode fileNode = new DexFileNode();
         try {
@@ -102,7 +102,7 @@ public void visitEnd() {
                             // FIXME handle 'java.lang.RuntimeException: Method code too large!'
                             data = cw.toByteArray();
                         } catch (Exception ex) {
-                            System.err.println(String.format("ASM fail to generate .class file: %s", className));
+                            System.err.printf("ASM fail to generate .class file: %s%n", className);
                             exceptionHandler.handleFileException(ex);
                             return;
                         }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/Exprs.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.googlecode.dex2jar.ir.expr;
 
+import com.googlecode.d2j.CallSite;
 import com.googlecode.d2j.DexType;
 import com.googlecode.d2j.Method;
 import com.googlecode.d2j.MethodHandle;
@@ -200,8 +201,8 @@ public static InvokeExpr nInvokeVirtual(Value[] regs, String owner, String name,
         return new InvokeExpr(VT.INVOKE_VIRTUAL, regs, owner, name, argmentTypes, returnType);
     }
 
-    public static InvokeCustomExpr nInvokeCustom(Value[] regs, String name, Proto proto, MethodHandle handle, Object[] bsmArgs) {
-        return new InvokeCustomExpr(VT.INVOKE_CUSTOM, regs , name, proto, handle,  bsmArgs);
+    public static InvokeCustomExpr nInvokeCustom(Value[] regs, CallSite callSite) {
+        return new InvokeCustomExpr(VT.INVOKE_CUSTOM, regs , callSite);
     }
 
     public static InvokePolymorphicExpr nInvokePolymorphic(Value[] regs, Proto proto, Method method) {

File: dex-reader-api/src/main/java/com/googlecode/d2j/DexConstants.java
Patch:
@@ -56,4 +56,6 @@ public abstract interface DexConstants {
     int DEX_036 = 0x00303336;
     int DEX_037 = 0x00303337;
     int DEX_038 = 0x00303338;
+    int DEX_039 = 0x00303339;
+    int DEX_040 = 0x00303340;
 }

File: dex-reader-api/src/main/java/com/googlecode/d2j/node/analysis/DvmFrame.java
Patch:
@@ -46,6 +46,8 @@ public void execute(DexStmtNode insn, DvmInterpreter<V> interpreter) {
             case CONST_STRING:
             case CONST_STRING_JUMBO:
             case CONST_CLASS:
+            case CONST_METHOD_HANDLE:
+            case CONST_METHOD_TYPE:
                 setReg(((ConstStmtNode) insn).a, interpreter.newOperation(insn));
                 setTmp(null);
                 break;
@@ -378,7 +380,7 @@ public void execute(DexStmtNode insn, DvmInterpreter<V> interpreter) {
                 setTmp(null);
                 break;
             default:
-                throw new RuntimeException();
+                throw new RuntimeException("not support " + insn.op);
         }
     }
 

File: dex-reader-api/src/main/java/com/googlecode/d2j/reader/InstructionIndexType.java
Patch:
@@ -13,4 +13,6 @@
     kIndexFieldOffset, // field offset (for static linked fields)
     kIndexMethodAndProtoRef, // 038,
     kIndexCallSiteRef, // 038,
+    kIndexMethodHandleRef,    // 039, constant method handle reference index
+    kIndexProtoRef,           // 039, prototype reference index
 };
\ No newline at end of file

File: dex-translator/src/main/java/com/googlecode/d2j/converter/IR2JConverter.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.googlecode.d2j.DexType;
 import com.googlecode.d2j.Method;
+import com.googlecode.d2j.MethodHandle;
 import com.googlecode.d2j.Proto;
 import com.googlecode.d2j.asm.LdcOptimizeAdapter;
 import com.googlecode.d2j.dex.Dex2Asm;
@@ -679,8 +680,8 @@ private void accept(Value value, MethodVisitor asm) {
                 Constant cst = (Constant) value;
                 if (cst.value.equals(Constant.Null)) {
                     asm.visitInsn(ACONST_NULL);
-                } else if (cst.value instanceof DexType) {
-                    asm.visitLdcInsn(Type.getType(((DexType) cst.value).desc));
+                } else if (cst.value instanceof DexType || cst.value instanceof MethodHandle || cst.value instanceof Proto) {
+                    asm.visitLdcInsn(Dex2Asm.convertConstantValue(cst.value));
                 } else {
                     asm.visitLdcInsn(cst.value);
                 }

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/CodeWriter.java
Patch:
@@ -391,7 +391,7 @@ public void visitFillArrayDataStmt(Op op, int ra, Object value) {
     @Override
     public void visitConstStmt(Op op, int ra, Object value) {
         switch (op.format) {
-        case kFmt21c:// value is field,type,string
+        case kFmt21c:// value is field,type,string,method_handle,proto
         case kFmt31c:// value is string,
             value = cp.wrapEncodedItem(value);
             ops.add(new CodeWriter.IndexedInsn(op, ra, 0, (BaseItem) value));

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/DexFileWriter.java
Patch:
@@ -138,6 +138,8 @@ void buildMapListItem() {
                 SectionType.TYPE_FIELD_ID_ITEM, cp.fields.values());
         SectionItem<MethodIdItem> methodIdSection = new SectionItem<>(
                 SectionType.TYPE_METHOD_ID_ITEM, cp.methods.values());
+        SectionItem<MethodHandleItem> methodHandlerSection = new SectionItem<>(
+                SectionType.TYPE_METHOD_HANDLE_ITEM, cp.methodHandlers.values());
         SectionItem<ClassDefItem> classDefSection = new SectionItem<>(
                 SectionType.TYPE_CLASS_DEF_ITEM, cp.buildSortedClassDefItems());
         SectionItem<TypeListItem> typeListSection = new SectionItem<>(
@@ -200,6 +202,7 @@ void buildMapListItem() {
             items.add(protoIdSection);
             items.add(fieldIdSection);
             items.add(methodIdSection);
+            items.add(methodHandlerSection);
             items.add(classDefSection);
 
             items.addAll(dataSectionItems);

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/item/FieldIdItem.java
Patch:
@@ -85,6 +85,9 @@ public int place(int offset) {
 
     @Override
     public int compareTo(FieldIdItem o) {
+        if (o == null) {
+            return 1;
+        }
         int x = clazz.compareTo(o.clazz);
         if (x != 0) {
             return x;

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/item/MethodIdItem.java
Patch:
@@ -81,6 +81,9 @@ public int place(int offset) {
 
     @Override
     public int compareTo(MethodIdItem o) {
+        if (o == null) {
+            return 1;
+        }
         int x = clazz.compareTo(o.clazz);
         if (x != 0) {
             return x;

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/item/SectionItem.java
Patch:
@@ -110,6 +110,8 @@ public enum SectionType {
         TYPE_FIELD_ID_ITEM(0x0004, 4, 0), //
         TYPE_METHOD_ID_ITEM(0x0005, 1, 0), //
         TYPE_CLASS_DEF_ITEM(0x0006, 4, 0), //
+        TYPE_CALL_SITE_ID_ITEM(0x0007, 4, 0), //
+        TYPE_METHOD_HANDLE_ITEM(0x0008, 4, 0), //
         TYPE_MAP_LIST(0x1000, 4, 0), //
         TYPE_TYPE_LIST(0x1001, 4, 0), //
         TYPE_ANNOTATION_SET_REF_LIST(0x1002, 4, 0), //

File: dex-reader-api/src/main/java/com/googlecode/d2j/Field.java
Patch:
@@ -69,6 +69,6 @@ public String getType() {
      */
     @Override
     public String toString() {
-        return this.getOwner() + "." + this.getName() + " " + this.getType();
+        return this.getOwner() + "->" + this.getName() + ":" + this.getType();
     }
 }

File: dex-reader-api/src/main/java/com/googlecode/d2j/Method.java
Patch:
@@ -107,6 +107,6 @@ public int hashCode() {
          */
     @Override
     public String toString() {
-        return this.getOwner() + "." + this.getName() + this.getDesc();
+        return this.getOwner() + "->" + this.getName() + this.getDesc();
     }
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/VoidInvokeStmt.java
Patch:
@@ -21,7 +21,8 @@
 import com.googlecode.dex2jar.ir.stmt.Stmt.E1Stmt;
 
 /**
- * Represent a void-return Invoke
+ * Represent a void-expr: the expr result is ignored.
+ * possible op type: AbstractInvokeExpr, FieldExpr, or others
  * 
  * @see ST#VOID_INVOKE
  * 

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jar2JasminCmd.java
Patch:
@@ -52,7 +52,7 @@ protected void doCommandLine() throws Exception {
 
         Path jar = new File(remainingArgs[0]).toPath().toAbsolutePath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             usage();
             return;
         }

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jasmin2JarCmd.java
Patch:
@@ -71,7 +71,7 @@ protected void doCommandLine() throws Exception {
 
         Path jar = new File(remainingArgs[0]).toPath().toAbsolutePath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             usage();
             return;
         }

File: d2j-smali/src/main/java/com/googlecode/d2j/smali/BaksmaliCmd.java
Patch:
@@ -36,7 +36,7 @@ protected void doCommandLine() throws Exception {
 
         File dex = new File(remainingArgs[0]);
         if (!dex.exists()) {
-            System.err.println("ERROR: " + dex + " is not exists");
+            System.err.println("ERROR: " + dex + " doesn't exist");
             return;
         }
         if (output == null) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/TypeClass.java
Patch:
@@ -101,7 +101,7 @@ public static TypeClass merge(TypeClass thizCls, TypeClass clz) {
                     if ((thizCls == INT && clz == BOOLEAN) || (thizCls == BOOLEAN || clz == INT)) {
                         return INT;
                     }
-                    throw new RuntimeException("can not merge " + thizCls + " and " + clz);
+                    throw new RuntimeException("Can't merge " + thizCls + " and " + clz);
                 } else {
                     return thizCls;
                 }
@@ -123,7 +123,7 @@ public static TypeClass merge(TypeClass thizCls, TypeClass clz) {
      */
     private static TypeClass merge0(TypeClass a, TypeClass b) {
         if (a == JD || b == JD) {
-            throw new RuntimeException("can not merge " + a + " and " + b);
+            throw new RuntimeException("Can't merge " + a + " and " + b);
         }
         switch (a) {
             case ZIL:

File: dex-reader/src/main/java/com/googlecode/d2j/reader/DexFileReader.java
Patch:
@@ -281,7 +281,7 @@ public DexFileReader(InputStream is) throws IOException {
     }
 
     /**
-     * Reads a string index. String indicies are offset by 1, and a 0 value in the stream (-1 as returned by this
+     * Reads a string index. String indices are offset by 1, and a 0 value in the stream (-1 as returned by this
      * method) means "null"
      * 
      * @return index into file's string ids table, -1 means null
@@ -1095,7 +1095,7 @@ private void read_annotation_set_ref_list(int parameter_annotation_offset, DexMe
                     read_annotation_set_item(param_annotation_offset, dpav);
                 }
             } catch (Exception e) {
-                throw new DexException(e, "while accept parameter annotation in parameter:[%d]", j);
+                throw new DexException(e, "While accepting parameter annotation in parameter: [%d]", j);
             }
         }
     }

File: dex-reader/src/main/java/com/googlecode/d2j/reader/MultiDexFileReader.java
Patch:
@@ -55,7 +55,7 @@ public static BaseDexFileReader open(byte[] data) throws IOException {
                 return new MultiDexFileReader(dexFileReaders.values());
             }
         }
-        throw new IOException("the src file not a .dex or zip file");
+        throw new IOException("The source file is not a .dex or .zip file");
     }
 
     void init() {

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/ApkSign.java
Patch:
@@ -54,7 +54,7 @@ protected void doCommandLine() throws Exception {
 
         Path apkIn = new File(remainingArgs[0]).toPath();
         if (!Files.exists(apkIn)) {
-            System.err.println(apkIn + " is not exists");
+            System.err.println(apkIn + " doesn't exist");
             usage();
             return;
         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/AsmVerify.java
Patch:
@@ -118,7 +118,7 @@ protected void doCommandLine() throws Exception {
         for (String fn : remainingArgs) {
             Path file = new File(fn).toPath();
             if (!Files.exists(file)) {
-                System.err.println(fn + " is not exists");
+                System.err.println(fn + " doesn't exist");
                 usage();
                 return;
             }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DeObfInitCmd.java
Patch:
@@ -49,7 +49,7 @@ protected void doCommandLine() throws Exception {
 
         Path jar = new File(remainingArgs[0]).toPath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             usage();
             return;
         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DecryptStringCmd.java
Patch:
@@ -162,7 +162,7 @@ protected void doCommandLine() throws Exception {
 
         final Path jar = new File(remainingArgs[0]).toPath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             return;
         }
         if (output == null) {

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DexRecomputeChecksum.java
Patch:
@@ -44,7 +44,7 @@ protected void doCommandLine() throws Exception {
 
         Path jar = new File(remainingArgs[0]).toPath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             usage();
             return;
         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/JarAccessCmd.java
Patch:
@@ -126,7 +126,7 @@ protected void doCommandLine() throws Exception {
 
         Path jar = new File(remainingArgs[0]).toPath();
         if (!Files.exists(jar)) {
-            System.err.println(jar + " is not exists");
+            System.err.println(jar + " doesn't exist");
             usage();
             return;
         }

File: dex-translator/src/main/java/com/googlecode/d2j/dex/ExDex2Asm.java
Patch:
@@ -40,7 +40,7 @@ public void convertCode(DexMethodNode methodNode, MethodVisitor mv, ClzCtx clzCt
             super.convertCode(methodNode, mn, clzCtx);
         } catch (Exception ex) {
             if (exceptionHandler == null) {
-                throw new DexException(ex, "fail convert code for %s", methodNode.method);
+                throw new DexException(ex, "Failed to convert code for %s", methodNode.method);
             } else {
                 mn.instructions.clear();
                 mn.tryCatchBlocks.clear();

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestUtils.java
Patch:
@@ -308,7 +308,7 @@ public void convertCode(DexMethodNode methodNode, MethodVisitor mv, ClzCtx clzCt
                     } catch (IOException e) {
                         e.printStackTrace();
                     }
-                    throw new DexException(ex, "fail convert code %s", methodNode.method);
+                    throw new DexException(ex, "Failed to convert code for %s", methodNode.method);
                 }
             }
         };

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/UnSSATransformer.java
Patch:
@@ -364,7 +364,7 @@ private void genRegGraph(IrMethod method, LiveA liveA) {
                 // https://github.com/pxb1988/dex2jar/issues/477
                 // the exception handler is dead and stmt.frame is null
                 LabelStmt label = (LabelStmt) stmt;
-                if (label.phis != null) {
+                if (label.phis != null && stmt.frame != null) {
                     for (AssignStmt phiAssignStmt : (List<AssignStmt>) label.phis) {
                         Local phiLocal = (Local) phiAssignStmt.getOp1();
                         RegAssign a = (RegAssign) phiLocal.tag;

File: dex-translator/src/main/java/com/googlecode/d2j/dex/ExDex2Asm.java
Patch:
@@ -32,12 +32,12 @@ public ExDex2Asm(DexExceptionHandler exceptionHandler) {
     }
 
     @Override
-    public void convertCode(DexMethodNode methodNode, MethodVisitor mv) {
+    public void convertCode(DexMethodNode methodNode, MethodVisitor mv, ClzCtx clzCtx) {
         MethodVisitor mw = AsmBridge.searchMethodWriter(mv);
         MethodNode mn = new MethodNode(Opcodes.ASM5, methodNode.access, methodNode.method.getName(),
                 methodNode.method.getDesc(), null, null);
         try {
-            super.convertCode(methodNode, mn);
+            super.convertCode(methodNode, mn, clzCtx);
         } catch (Exception ex) {
             if (exceptionHandler == null) {
                 throw new DexException(ex, "fail convert code for %s", methodNode.method);

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestUtils.java
Patch:
@@ -296,9 +296,9 @@ public static byte[] translateAndCheck(DexFileNode fileNode, DexClassNode clzNod
         // 1. convert to .class
         Dex2Asm dex2Asm = new Dex2Asm() {
             @Override
-            public void convertCode(DexMethodNode methodNode, MethodVisitor mv) {
+            public void convertCode(DexMethodNode methodNode, MethodVisitor mv, ClzCtx clzCtx) {
                 try {
-                    super.convertCode(methodNode, mv);
+                    super.convertCode(methodNode, mv, clzCtx);
                 } catch (Exception ex) {
                     BaksmaliDumper d = new BaksmaliDumper();
                     try {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/UnSSATransformer.java
Patch:
@@ -361,6 +361,8 @@ private void genRegGraph(IrMethod method, LiveA liveA) {
                 }
                 tos.clear();
             } else if (stmt.st == ST.LABEL) { //
+                // https://github.com/pxb1988/dex2jar/issues/477
+                // the exception handler is dead and stmt.frame is null
                 LabelStmt label = (LabelStmt) stmt;
                 if (label.phis != null) {
                     for (AssignStmt phiAssignStmt : (List<AssignStmt>) label.phis) {

File: d2j-smali/src/main/java/com/googlecode/d2j/smali/BaksmaliCodeDumper.java
Patch:
@@ -245,7 +245,7 @@ public void visitFieldStmt(Op op, int a, int b, Field field) {
     public void visitFilledNewArrayStmt(Op op, int[] args, String type) {
         if (args.length > 0) {
             if (op.format == InstructionFormat.kFmt3rc) { // invoke-x/range
-                out.s("%s { %d .. %d }, %s", op.displayName, reg(args[0]), reg(args[args.length - 1]),
+                out.s("%s { %s .. %s }, %s", op.displayName, reg(args[0]), reg(args[args.length - 1]),
                         BaksmaliDumper.escapeType(type));
             } else {
                 StringBuilder buff = new StringBuilder();

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/CleanLabel.java
Patch:
@@ -40,6 +40,9 @@ public void transform(IrMethod irMethod) {
         addTrap(irMethod.traps, uselabels);
         addVars(irMethod.vars, uselabels);
         addStmt(irMethod.stmts, uselabels);
+        if (irMethod.phiLabels != null) {
+            uselabels.addAll(irMethod.phiLabels);
+        }
         rmUnused(irMethod.stmts, uselabels);
     }
 

File: d2j-smali/src/main/java/com/googlecode/d2j/smali/BaksmaliCodeDumper.java
Patch:
@@ -245,7 +245,7 @@ public void visitFieldStmt(Op op, int a, int b, Field field) {
     public void visitFilledNewArrayStmt(Op op, int[] args, String type) {
         if (args.length > 0) {
             if (op.format == InstructionFormat.kFmt3rc) { // invoke-x/range
-                out.s("%s { %d .. %d }, %s", op.displayName, reg(args[0]), reg(args[args.length - 1]),
+                out.s("%s { %s .. %s }, %s", op.displayName, reg(args[0]), reg(args[args.length - 1]),
                         BaksmaliDumper.escapeType(type));
             } else {
                 StringBuilder buff = new StringBuilder();

File: dex-reader/src/main/java/com/googlecode/d2j/reader/DexFileReader.java
Patch:
@@ -755,6 +755,9 @@ private MethodHandle getMethodHandle(int i) {
 
         case MethodHandle.INVOKE_INSTANCE:
         case MethodHandle.INVOKE_STATIC:
+        case MethodHandle.INVOKE_CONSTRUCTOR:
+        case MethodHandle.INVOKE_DIRECT:
+        case MethodHandle.INVOKE_INTERFACE:
             return new MethodHandle(method_handle_type, getMethod(field_or_method_id));
         default:
             throw new RuntimeException();

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2Asm.java
Patch:
@@ -400,7 +400,7 @@ public void convertClass(int dexVersion, DexClassNode classNode, ClassVisitorFac
         }
         access = clearClassAccess(isInnerClass, access);
 
-        int version = dexVersion >= DexConstants.DEX_037 ? Opcodes.V1_7 : Opcodes.V1_6;
+        int version = dexVersion >= DexConstants.DEX_037 ? Opcodes.V1_8 : Opcodes.V1_6;
         cv.visit(version, access, toInternalName(classNode.className), signature,
                 classNode.superClass == null ? null : toInternalName(classNode.superClass), interfaceInterNames);
 

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestUtils.java
Patch:
@@ -335,7 +335,7 @@ public ClassVisitor create(String classInternalName) {
         CfOptions cfOptions = new CfOptions();
         cfOptions.strictNameCheck = false;
         DexOptions dexOptions = new DexOptions();
-        if (fileNode.dexVersion >= DexConstants.DEX_037) {
+        if (fileNode != null && fileNode.dexVersion >= DexConstants.DEX_037) {
             dexOptions.minSdkVersion = 26;
         }
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/RemoveLocalFromSSA.java
Patch:
@@ -207,13 +207,14 @@ private Map<Local, PhiObject> collectPhiObjects(List<LabelStmt> phiLabels) {
     }
 
     static <T> void fixReplace(Map<Local, T> toReplace) {
-        TreeSet<Map.Entry<Local, T>> set = new TreeSet<>(new Comparator<Map.Entry<Local, T>>() {
+        List<Map.Entry<Local, T>> set = new ArrayList<>(toReplace.entrySet());
+        Collections.sort(set, new Comparator<Map.Entry<Local, T>>() {
             @Override
             public int compare(Map.Entry<Local, T> localTEntry, Map.Entry<Local, T> t1) {
                 return Integer.compare(localTEntry.getKey()._ls_index, t1.getKey()._ls_index);
             }
         });
-        set.addAll(toReplace.entrySet());
+
         boolean changed = true;
         while (changed) {
             changed = false;

File: d2j-jasmin/src/test/java/com/googlecode/d2j/tools/jar/test/Jasmin2jTest.java
Patch:
@@ -53,14 +53,13 @@ public S(Class<?> klass) throws InitializationError {
         List<Path> runners = new ArrayList<>();
 
         public void init(final Class<?> testClass) throws InitializationError {
-            URL url = testClass.getResource("/" + testClass.getName().replace('.', '/') + ".class");
+            URL url = testClass.getResource("/jasmins/type.j");
             Assert.assertNotNull(url);
 
             final String file = url.getFile();
             Assert.assertNotNull(file);
-            String dirx = file.substring(0, file.length() - testClass.getName().length() - ".class".length());
 
-            basePath = new File(dirx, "jasmins").toPath();
+            basePath = new File(file).toPath().getParent();
 
             System.out.println("jasmins dir is " + basePath);
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/RemoveConstantFromSSA.java
Patch:
@@ -56,7 +56,7 @@ public int compare(Local local, Local t1) {
     public boolean transformReportChanged(IrMethod method) {
         boolean changed = false;
         List<AssignStmt> assignStmtList = new ArrayList<>();
-        Map<Local, Object> cstMap = new TreeMap<>(LOCAL_COMPARATOR);
+        Map<Local, Object> cstMap = new HashMap<>();
         for (Stmt p = method.stmts.getFirst(); p != null; p = p.getNext()) {
             if (p.st == Stmt.ST.ASSIGN) {
                 AssignStmt as = (AssignStmt) p;
@@ -74,7 +74,7 @@ public boolean transformReportChanged(IrMethod method) {
             return false;
         }
         RemoveLocalFromSSA.fixReplace(cstMap);
-        final Map<Local, Value> toReplace = new TreeMap<>(LOCAL_COMPARATOR);
+        final Map<Local, Value> toReplace = new HashMap<>();
         Set<Value> usedInPhi = new HashSet<>();
         List<LabelStmt> phiLabels = method.phiLabels;
         if (phiLabels != null) {

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestUtils.java
Patch:
@@ -18,6 +18,7 @@
 import com.android.dx.cf.direct.DirectClassFile;
 import com.android.dx.cf.direct.StdAttributeFactory;
 import com.android.dx.cf.iface.ParseException;
+import com.android.dx.command.dexer.DxContext;
 import com.android.dx.dex.DexOptions;
 import com.android.dx.dex.cf.CfOptions;
 import com.android.dx.dex.cf.CfTranslator;
@@ -344,7 +345,7 @@ public ClassVisitor create(String classInternalName) {
         dcf.setAttributeFactory(new StdAttributeFactory());
         com.android.dx.dex.file.DexFile dxFile = new com.android.dx.dex.file.DexFile(dexOptions);
         try {
-            CfTranslator.translate(dcf, data, cfOptions, dexOptions, dxFile);
+            CfTranslator.translate(new DxContext(), dcf, data, cfOptions, dexOptions, dxFile);
         } catch (ParseException e) {
             if ("MethodHandle not supported".equals(e.getMessage())) {
                 e.printStackTrace();

File: dex-translator/src/test/java/res/Gh28Type.java
Patch:
@@ -8,8 +8,9 @@
 public class Gh28Type {
 
     protected void onCreate() {
-        double t0[] = new double[1];
-        t0[0] = 0;
+        double t0[] = new double[2];
+        t0[0] = 1.0;
+        t0[1] = 2.0; // for https://github.com/pxb1988/dex2jar/issues/101
         double t1[] = (double[]) Array.newInstance(Double.TYPE, 1);
         t1[0] = 0;
         double t2[][] = new double[1][1];

File: dex-translator/src/main/java/com/googlecode/d2j/converter/J2IRConverter.java
Patch:
@@ -84,7 +84,7 @@ IrMethod convert0(String owner, MethodNode methodNode) throws AnalyzerException
         if (methodNode.tryCatchBlocks != null) {
             for (TryCatchBlockNode tcb : methodNode.tryCatchBlocks) {
                 target.traps.add(new Trap(getLabel(tcb.start), getLabel(tcb.end), new LabelStmt[]{getLabel(tcb.handler)},
-                        new String[]{tcb.type}));
+                        new String[]{tcb.type == null ? null : Type.getObjectType(tcb.type).getDescriptor()}));
                 int handlerIdx = insnList.indexOf(tcb.handler);
                 handlers.set(handlerIdx);
 

File: dex-reader/src/main/java/com/googlecode/d2j/reader/DexFileReader.java
Patch:
@@ -999,7 +999,9 @@ private void read_annotation_set_ref_list(int parameter_annotation_offset, DexMe
             }
             DexAnnotationAble dpav = dmv.visitParameterAnnotation(j);
             try {
-                read_annotation_set_item(param_annotation_offset, dpav);
+                if (dpav != null) {
+                    read_annotation_set_item(param_annotation_offset, dpav);
+                }
             } catch (Exception e) {
                 throw new DexException(e, "while accept parameter annotation in parameter:[%d]", j);
             }

File: dex-reader-api/src/main/java/com/googlecode/d2j/node/DexAnnotationNode.java
Patch:
@@ -122,7 +122,7 @@ public DexAnnotationNode(String type, Visibility visibility) {
 
     public void accept(DexAnnotationAble av) {
         DexAnnotationVisitor av1 = av.visitAnnotation(type, visibility);
-        if (av != null) {
+        if (av1 != null) {
             for (Item item : items) {
                 acceptAnnotationItem(av1, item.name, item.value);
             }

File: d2j-smali/src/main/java/com/googlecode/d2j/smali/AntlrSmaliUtil.java
Patch:
@@ -305,7 +305,7 @@ public Object visitFconst(SmaliParser.FconstContext ctx) {
                         scv.visitTypeStmt(op, r, 0, unEscapeId(cst.getText()));
                         break;
                     case CONST_WIDE:
-                        scv.visitConstStmt(op, r, cst.getType() == SmaliLexer.INT ? ((long) parseInt(ctx.getText())) : parseLong(cst.getText()));
+                        scv.visitConstStmt(op, r, cst.getType() == SmaliLexer.INT ? ((long) parseInt(cst.getText())) : parseLong(cst.getText()));
                         break;
                     case CONST_WIDE_16: {
                         long v;

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2Asm.java
Patch:
@@ -422,6 +422,7 @@ public void convertClass(DexClassNode classNode, ClassVisitorFactory cvf, Map<St
         }
         if (classNode.methods != null) {
             for (DexMethodNode methodNode : classNode.methods) {
+                System.err.println(methodNode.method);
                 convertMethod(classNode, methodNode, cv);
             }
         }

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/ClassWriter.java
Patch:
@@ -66,8 +66,7 @@ public DexFieldVisitor visitField(int accessFlags, Field field, Object value) {
         encodedField.accessFlags = accessFlags;
         encodedField.field = cp.uniqField(field);
         if (value != null) {
-            value = cp.wrapEncodedItem(value);
-            encodedField.staticValue = EncodedValue.wrap(value);
+            encodedField.staticValue = EncodedValue.wrap(cp.wrapEncodedItem(value));
         }
         if (0 != (ACC_STATIC & accessFlags)) { // is static
             dataItem.staticFields.add(encodedField);

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/MethodWriter.java
Patch:
@@ -56,8 +56,8 @@ public DexAnnotationVisitor visitAnnotation(String name,
 
     @Override
     public DexCodeVisitor visitCode() {
-        encodedMethod.code = cp.addCodeItem();
-        return new CodeWriter(encodedMethod.code, method, isStatic, cp);
+        encodedMethod.code = new CodeItem();
+        return new CodeWriter(encodedMethod, encodedMethod.code, method, isStatic, cp);
     }
 
     @Override

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/ev/EncodedValue.java
Patch:
@@ -235,7 +235,7 @@ public boolean isDefaultValueForType() {
                 return ((Number) this.value).doubleValue() == 0.0;
             case VALUE_BOOLEAN:
                 Boolean z = (Boolean) this.value;
-                return Boolean.TRUE.equals(z);
+                return Boolean.FALSE.equals(z);
         }
         return false;
     }

File: dex-reader/src/main/java/com/googlecode/d2j/util/ASMifierClassV.java
Patch:
@@ -47,6 +47,7 @@ public ASMifierClassV(String pkgName, String javaClassName, int access_flags, St
         out.s("import com.googlecode.d2j.*;");
         out.s("import com.googlecode.d2j.visitors.*;");
         out.s("import static com.googlecode.d2j.DexConstants.*;");
+        out.s("import static com.googlecode.d2j.reader.Op.*;");
         out.s("public class %s {", javaClassName);
         out.push();
         out.s("public static void accept(DexFileVisitor v) {");

File: d2j-jasmin/src/test/java/com/googlecode/d2j/tools/jar/test/Jasmin2jTest.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.googlecode.d2j.jasmin.JasminDumper;
 import com.googlecode.d2j.jasmin.Jasmins;
-import jdk.internal.org.objectweb.asm.Type;
 import org.junit.Assert;
 import org.junit.runner.Description;
 import org.junit.runner.RunWith;

File: dex-translator/src/main/java/com/googlecode/d2j/dex/BaseDexExceptionHandler.java
Patch:
@@ -41,7 +41,7 @@ public void handleMethodTranslateException(Method method, DexMethodNode methodNo
         mv.visitTypeInsn(Opcodes.NEW, "java/lang/RuntimeException");
         mv.visitInsn(Opcodes.DUP);
         mv.visitLdcInsn(msg);
-        mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/Runtime", "<init>", "(Ljava/lang/String;)V");
+        mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/RuntimeException", "<init>", "(Ljava/lang/String;)V");
         mv.visitInsn(Opcodes.ATHROW);
     }
 }

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jasmin2JarCmd.java
Patch:
@@ -77,7 +77,7 @@ protected void doCommandLine() throws Exception {
         }
 
         if (output == null) {
-            output = new File(getBaseName(jar) + "-jar2jasmin/").toPath();
+            output = new File(getBaseName(jar) + "-jasmin2jar/").toPath();
         }
 
         if (Files.exists(output) && !forceOverwrite) {

File: dex-tools/src/main/java/com/googlecode/d2j/tools/jar/InvocationWeaver.java
Patch:
@@ -92,7 +92,7 @@
  * </pre>
  */
 public class InvocationWeaver implements Opcodes {
-    private String invocationInterfaceDesc = "com/googlecode/d2j/tools/jar/MethodInvocation";
+    private String invocationInterfaceDesc = "Lcom/googlecode/d2j/tools/jar/MethodInvocation;";
     private String invocationTypePrefix = "d2j/gen/MI_";
 
     private static final String DEFAULT_RET_TYPE = "L888;";

File: dex-translator/src/main/java/com/googlecode/d2j/asm/LdcOptimizeAdapter.java
Patch:
@@ -120,7 +120,7 @@ public static MethodVisitor wrap(MethodVisitor mv) {
     }
 
     public static ClassVisitor wrap(ClassVisitor cv) {
-        return cv == null ? null : new ClassVisitor(Opcodes.ASM5, cv) {
+        return cv == null ? null : new ClassVisitor(Opcodes.ASM4, cv) {
             @Override
             public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {
                 return wrap(super.visitMethod(access, name, desc, signature, exceptions));

File: dex-tools/src/test/java/com/googlecode/d2j/tools/jar/MethodInvocation.java
Patch:
@@ -11,6 +11,6 @@ public interface MethodInvocation {
     String getMethodDesc();
 
     Object getThis();
-
+    // @Nullale
     Object[] getArguments();
 }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DecryptStringCmd.java
Patch:
@@ -400,7 +400,7 @@ public Value travel(Value op) {
                     if (c != null) {
                         try {
                             Method jmethod = c.jmethod;
-                            if (ie.args.length != jmethod.getParameterCount()) {
+                            if (ie.args.length != jmethod.getParameterTypes().length) {
                                 throw new RuntimeException();
                             }
                             Object args[] = new Object[ie.args.length];

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2jar.java
Patch:
@@ -130,13 +130,11 @@ public void convertCode(DexMethodNode methodNode, MethodVisitor mv) {
 
             @Override
             public void optimize(IrMethod irMethod) {
-                T_exceptionFix.transform(irMethod);
                 T_endRemove.transform(irMethod);
                 T_cleanLabel.transform(irMethod);
                 if (0 != (v3Config & V3.TOPOLOGICAL_SORT)) {
                     // T_topologicalSort.transform(irMethod);
                 }
-                T_ssa.transform(irMethod);
                 T_removeLocal.transform(irMethod);
                 T_removeConst.transform(irMethod);
                 T_zero.transform(irMethod);

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Util.java
Patch:
@@ -142,8 +142,7 @@ public static String toShortClassName(String desc) {
                     break;
                 }
             }
-            int i = desc.lastIndexOf('/');
-            StringBuilder sb = new StringBuilder().append(desc.substring(i < 0 ? d : i + 1, desc.length() - 1));
+            StringBuilder sb = new StringBuilder().append(toShortClassName(desc.substring(d)));
             for (int t = 0; t < d; t++) {
                 sb.append("[]");
             }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/Value.java
Patch:
@@ -176,7 +176,7 @@ protected void releaseMemory() {
     public static enum VT {
 
         ADD("+", MAY_THROW), AND("&", MAY_THROW), ARRAY(MAY_THROW), CAST(MAY_THROW), CHECK_CAST(CAN_THROW), CONSTANT(0), DCMPG(
-                MAY_THROW), DCMPL(MAY_THROW), DIV("/", CAN_THROW), EQ("==", MAY_THROW), EXCEPTION_REF(0), FCMPG(
+                MAY_THROW), DCMPL(MAY_THROW), IDIV("/", CAN_THROW), LDIV("/", CAN_THROW), FDIV("/", MAY_THROW), DDIV("/", MAY_THROW), EQ("==", MAY_THROW), EXCEPTION_REF(0), FCMPG(
                 MAY_THROW), FCMPL(MAY_THROW), FIELD(CAN_THROW), FILLED_ARRAY(CAN_THROW), GE(">=", MAY_THROW), GT(">",
                 MAY_THROW), INSTANCE_OF(CAN_THROW), INVOKE_INTERFACE(CAN_THROW), //
         INVOKE_NEW(CAN_THROW), INVOKE_SPECIAL(CAN_THROW), INVOKE_STATIC(CAN_THROW), INVOKE_VIRTUAL(CAN_THROW), LCMP(

File: d2j-base-cmd/src/main/java/com/googlecode/dex2jar/tools/BaseCmd.java
Patch:
@@ -18,6 +18,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -26,6 +27,7 @@
 import java.lang.reflect.Field;
 import java.net.URI;
 import java.net.URISyntaxException;
+import java.nio.charset.StandardCharsets;
 import java.nio.file.*;
 import java.nio.file.attribute.BasicFileAttributes;
 import java.nio.file.spi.FileSystemProvider;
@@ -443,7 +445,7 @@ protected void parseSetArgs(String... args) throws IllegalArgumentException, Ill
     }
 
     protected void usage() {
-        PrintWriter out = new PrintWriter(System.err, true);
+        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.err, StandardCharsets.UTF_8), true);
 
         final int maxLength = 80;
         final int maxPaLength = 40;

File: dex-reader/src/main/java/com/googlecode/d2j/reader/zip/ZipUtil.java
Patch:
@@ -23,6 +23,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
 
@@ -72,9 +73,9 @@ public static byte[] readDex(byte[] data) throws IOException {
         if (data.length < 3) {
             throw new IOException("File too small to be a dex/zip");
         }
-        if ("dex".equals(new String(data, 0, 3))) {// dex
+        if ("dex".equals(new String(data, 0, 3, StandardCharsets.ISO_8859_1))) {// dex
             return data;
-        } else if ("PK".equals(new String(data, 0, 2))) {// ZIP
+        } else if ("PK".equals(new String(data, 0, 2, StandardCharsets.ISO_8859_1))) {// ZIP
             try (ZipFile zipFile = new ZipFile(data)) {
                 ZipEntry classes = zipFile.findFirstEntry("classes.dex");
                 if (classes != null) {

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/AsmVerify.java
Patch:
@@ -18,8 +18,10 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.lang.reflect.Field;
+import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.ArrayList;
@@ -142,7 +144,7 @@ public void visitFile(Path file, Path relative) throws IOException {
                                         + method.desc);
                                 if (detail) {
                                     ex.printStackTrace(System.err);
-                                    printAnalyzerResult(method, a, new PrintWriter(System.err));
+                                    printAnalyzerResult(method, a, new PrintWriter(new OutputStreamWriter(System.err, StandardCharsets.UTF_8)));
                                 }
                             }
                         }

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/TypeTransformerTest.java
Patch:
@@ -113,7 +113,8 @@ public void test3Z() {
         addStmt(L0);
         addStmt(nReturnVoid());
         transform();
-        Assert.assertEquals("", "Z", b.valueType);
+        // FIXME local should type to Z but I works as well
+        // Assert.assertEquals("", "Z", b.valueType);
     }
 
     @Test

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TypeTransformer.java
Patch:
@@ -157,6 +157,7 @@ public String getType() {
 
             switch (clz) {
             case ZI:
+                return "I";
             case ZIFL:
             case ZIF:
             case ZIL:

File: dex-tools/src/main/java/com/googlecode/d2j/map/DexInheritanceFileVisitor.java
Patch:
@@ -35,6 +35,9 @@ public DexInheritanceFileVisitor(InheritanceTree tree) {
     @Override
     public DexClassVisitor visit(int access_flags, String className, String superClass, String[] interfaceNames) {
         final InheritanceTree.Clz clz = tree.addClz(access_flags, className);
+        if(clz == null) { // skip the class
+            return null;
+        }
         if (superClass != null) {
             clz.relateSuper(superClass);
         }

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jar2JasminCmd.java
Patch:
@@ -106,7 +106,7 @@ private void disassemble1(Path file, Path output) throws IOException {
         try (InputStream is = Files.newInputStream(file)) {
             ClassReader r = new ClassReader(is);
             Path jFile = output.resolve(r.getClassName().replace('.', '/') + ".j");
-            Files.createDirectories(jFile.getParent());
+            createParentDirectories(jFile);
             try (BufferedWriter out = Files.newBufferedWriter(jFile, Charset.forName(encoding))) {
                 PrintWriter pw = new PrintWriter(out);
                 ClassNode node = new ClassNode();

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/Jasmin2JarCmd.java
Patch:
@@ -138,7 +138,7 @@ private void assemble1(Path file, Path output) throws IOException {
             }
             cn.accept(cw);
             Path clzFile = output.resolve(cn.name.replace('.', '/') + ".class");
-            Files.createDirectories(clzFile.getParent());
+            createParentDirectories(clzFile);
             Files.write(clzFile, cw.toByteArray());
         } catch (RecognitionException e) {
             System.err.println("Fail to assemble " + file);

File: dex-tools/src/main/java/com/googlecode/d2j/tools/jar/InvocationWeaver.java
Patch:
@@ -398,7 +398,7 @@ public void wave(Path from, final Path to) throws IOException {
             public void visitFile(Path file, Path relative) throws IOException {
                 String name = relative.toString();
                 Path targetPath = to.resolve(relative);
-                Files.createDirectories(targetPath.getParent());
+                BaseCmd.createParentDirectories(targetPath);
                 if (name.endsWith(".class")) {
                     String clzName = name.substring(0, name.length() - ".class".length());
                     if (ignores.contains(clzName)) {
@@ -437,7 +437,7 @@ public void visitFile(Path file, Path relative) throws IOException {
             String type = getCurrentInvocationName();
             byte[] data = buildInvocationClz(type);
             Path target = to.resolve(type + ".class");
-            Files.createDirectories(target.getParent());
+            BaseCmd.createParentDirectories(target);
             Files.write(target, data);
             nextInvocationName();
         }

File: dex-tools/src/main/java/com/googlecode/d2j/tools/jar/WebApp.java
Patch:
@@ -1,5 +1,7 @@
 package com.googlecode.d2j.tools.jar;
 
+import com.googlecode.dex2jar.tools.BaseCmd;
+
 import java.io.File;
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
@@ -80,7 +82,7 @@ private static void copyDirectory(final Path clz, final Path tmpClz) throws IOEx
             public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
                 Path n = clz.relativize(file);
                 Path target = tmpClz.resolve(n);
-                Files.createDirectories(target.getParent());
+                BaseCmd.createParentDirectories(target);
                 Files.copy(file, target);
                 return super.visitFile(file, attrs);
             }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarMultiThreadCmd.java
Patch:
@@ -120,7 +120,7 @@ public void visitEnd() {
                         }
                         try {
                             Path dist1 = dist.resolve(name + ".class");
-                            Files.createDirectories(dist1.getParent());
+                            BaseCmd.createParentDirectories(dist1);
                             Files.write(dist1, data);
                         } catch (IOException e) {
                             exceptionHandler.handleFileException(e);

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/GenerateCompileStubFromOdex.java
Patch:
@@ -80,7 +80,7 @@ public void visitEnd() {
                         ClassWriter cw = (ClassWriter) cv;
                         byte[] data = cw.toByteArray();
                         try {
-                            Files.createDirectories(target.getParent());
+                            BaseCmd.createParentDirectories(target);
                             Files.write(target, data);
                         } catch (IOException e) {
                             e.printStackTrace();

File: d2j-jasmin/src/main/java/com/googlecode/d2j/jasmin/JasminDumper.java
Patch:
@@ -442,7 +442,7 @@ public void visitIincInsn(int var, int increment) {
                         }
 
                         @Override
-                        public void visitTableSwitchInsn(int min, int max, Label dflt, Label[] labels) {
+                        public void visitTableSwitchInsn(int min, int max, Label dflt, Label... labels) {
                             pw.print("tableswitch ");
                             pw.println(min);
                             for (Label label : labels) {

File: d2j-smali/src/main/java/com/googlecode/d2j/smali/BaksmaliDexFileVisitor.java
Patch:
@@ -5,7 +5,6 @@
 import com.googlecode.d2j.visitors.DexFileVisitor;
 
 import java.io.BufferedWriter;
-import java.io.File;
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;

File: d2j-smali/src/test/java/a/SmaliTest.java
Patch:
@@ -1,6 +1,5 @@
 package a;
 
-import com.googlecode.d2j.dex.writer.DexFileWriter;
 import com.googlecode.d2j.node.DexClassNode;
 import com.googlecode.d2j.node.DexFileNode;
 import com.googlecode.d2j.smali.BaksmaliDumpOut;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/IrMethod.java
Patch:
@@ -20,7 +20,6 @@
 
 import com.googlecode.dex2jar.ir.expr.Local;
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
-import com.googlecode.dex2jar.ir.stmt.Stmt;
 import com.googlecode.dex2jar.ir.stmt.StmtList;
 
 /**

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/LocalVar.java
Patch:
@@ -1,7 +1,5 @@
 package com.googlecode.dex2jar.ir;
 
-import java.util.Map;
-
 import com.googlecode.dex2jar.ir.expr.Local;
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Trap.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.googlecode.dex2jar.ir;
 
-import java.util.Map;
-
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
 
 /**

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/AggTransformer.java
Patch:
@@ -42,6 +42,7 @@ public boolean transformReportChanged(IrMethod method) {
                 case NOP:
                 case RETURN_VOID:
                     continue;
+                default:
             }
             try {
                 localCanExecFirst(local, next);
@@ -100,6 +101,7 @@ private static void localCanExecFirst(Local local, Stmt target) throws MergeResu
                         localCanExecFirst(local, op1.getOp2());
                         localCanExecFirst(local, op2);
                         break;
+                    default:
                 }
                 break;
         }
@@ -300,6 +302,7 @@ static boolean isLocationInsensitive(Value.VT vt) {
             case FCMPL:
             case NOT:
                 return true;
+            default:
         }
         return false;
     }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ExceptionHandlerCurrectTransformer.java
Patch:
@@ -20,7 +20,6 @@
 import com.googlecode.dex2jar.ir.expr.Exprs;
 import com.googlecode.dex2jar.ir.expr.Local;
 import com.googlecode.dex2jar.ir.expr.Value.VT;
-import com.googlecode.dex2jar.ir.stmt.AssignStmt;
 import com.googlecode.dex2jar.ir.stmt.GotoStmt;
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
 import com.googlecode.dex2jar.ir.stmt.Stmt;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/JimpleTransformer.java
Patch:
@@ -90,6 +90,7 @@ private Value convertExpr(Value x, boolean keep, N tmp) {
                 case NEW:
                 case STATIC_FIELD:
                     return tmp.newAssign(x);
+                default:
                 }
             }
             break;

File: dex-tools/src/main/java/com/googlecode/d2j/map/AutoDetectSourceProcess.java
Patch:
@@ -27,7 +27,6 @@ public class AutoDetectSourceProcess {
 
     public final void process(String file) throws IOException {
         Path path = new File(file).toPath();
-        final int basePathLength = path.getNameCount();
         if (Files.isDirectory(path)) {
             Files.walkFileTree(path, new SimpleFileVisitor<Path>() {
 

File: dex-tools/src/main/java/com/googlecode/d2j/map/ProguardMappingParser.java
Patch:
@@ -75,7 +75,6 @@ public void parse(Reader in, InheritanceTree tree) throws IOException {
                 String fieldNameOrMethodNameDesc = as[1];
                 String newName = as[3];
 
-                String key;
                 if (fieldNameOrMethodNameDesc.contains("(")) { // a method
 
                     int idx = fieldNameOrMethodNameDesc.indexOf('(');

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/ApkSign.java
Patch:
@@ -34,7 +34,7 @@
 
 @BaseCmd.Syntax(cmd = "d2j-apk-sign", syntax = "[options] <apk>", desc = "Sign an android apk file use a test certificate.")
 public class ApkSign extends BaseCmd {
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new ApkSign().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/AsmVerify.java
Patch:
@@ -48,7 +48,7 @@ private static String getShortName(final String name) {
         return n == -1 ? name : "o";
     }
 
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new AsmVerify().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DeObfInitCmd.java
Patch:
@@ -34,7 +34,7 @@ public DeObfInitCmd() {
         super("d2j-init-deobf [options] <jar>", "generate an init config file for deObfuscate a jar");
     }
 
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new DeObfInitCmd().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DecryptStringCmd.java
Patch:
@@ -37,7 +37,7 @@
 
 @Syntax(cmd = "d2j-decrypt-string", syntax = "[options] <jar>", desc = "Decrypt in class file", onlineHelp = "https://code.google.com/p/dex2jar/wiki/DecryptStrings")
 public class DecryptStringCmd extends BaseCmd {
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new DecryptStringCmd().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarCmd.java
Patch:
@@ -28,7 +28,7 @@
 @BaseCmd.Syntax(cmd = "d2j-dex2jar", syntax = "[options] <file0> [file1 ... fileN]", desc = "convert dex to jar")
 public class Dex2jarCmd extends BaseCmd {
 
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new Dex2jarCmd().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DexWeaverCmd.java
Patch:
@@ -89,6 +89,8 @@ public void visitMethodStmt(Op op, int[] args, Method method) {
                                                         case INVOKE_VIRTUAL_RANGE:
                                                             super.visitMethodStmt(Op.INVOKE_STATIC_RANGE, args, replaceTo);
                                                             break;
+                                                        default:
+                                                            // impossible here
                                                         }
                                                     } else {
                                                         super.visitMethodStmt(op, args, method);

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/GenerateCompileStubFromOdex.java
Patch:
@@ -19,7 +19,7 @@ public class GenerateCompileStubFromOdex extends BaseCmd {
     private static final int MAGIC_ODEX = 0x0A796564 & 0x00FFFFFF;// hex for 'dey ', ignore the 0A
     private static final int MAGIC_DEX = 0x0A786564 & 0x00FFFFFF;// hex for 'dex ', ignore the 0A
 
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new GenerateCompileStubFromOdex().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Jar2Dex.java
Patch:
@@ -28,7 +28,7 @@
 
 @BaseCmd.Syntax(cmd = "d2j-jar2dex", syntax = "[options] <dir>", desc = "Convert jar to dex by invoking dx.")
 public class Jar2Dex extends BaseCmd {
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new Jar2Dex().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/JarAccessCmd.java
Patch:
@@ -26,7 +26,7 @@
 
 @BaseCmd.Syntax(cmd = "d2j-jar-access", syntax = "[options] <jar>", desc = "add or remove class/method/field access in jar file")
 public class JarAccessCmd extends BaseCmd implements Opcodes {
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new JarAccessCmd().doMain(args);
     }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/JarRemap.java
Patch:
@@ -23,7 +23,7 @@
 
 @Syntax(cmd = "d2j-jar-remap", syntax = "[options] jar", desc = "rename package/class/method/field name in a jar", onlineHelp = "https://code.google.com/p/dex2jar/wiki/DeObfuscateJarWithDexTool")
 public class JarRemap extends BaseCmd {
-    public static void main(String[] args) {
+    public static void main(String... args) {
         new JarRemap().doMain(args);
     }
 

File: dex-translator/src/main/java/com/googlecode/d2j/dex/Dex2IrAdapter.java
Patch:
@@ -78,7 +78,6 @@
 import com.googlecode.dex2jar.ir.stmt.Stmt;
 import com.googlecode.dex2jar.ir.stmt.StmtList;
 import com.googlecode.dex2jar.ir.stmt.Stmts;
-import org.objectweb.asm.tree.LabelNode;
 
 /**
  * @author <a href="mailto:pxb1988@gmail.com">Panxiaobo</a>

File: dex-writer/src/main/java/com/googlecode/d2j/dex/writer/insn/JumpOp.java
Patch:
@@ -21,6 +21,7 @@ public JumpOp(Op op, int a, int b, Label label) {
                 CodeWriter.checkRegA(op, "vA", a);
                 CodeWriter.checkRegA(op, "vB", b);
                 break;
+            default:
         }
         this.label = label;
         this.a = a;
@@ -54,6 +55,8 @@ public void write(ByteBuffer out) {
                 CodeWriter.checkContentShort(op, "+BBBB", offset);
                 out.put((byte) a).putShort((short) offset);
                 break;
+            default:
+                throw new RuntimeException("not support");
         }
     }
 }
\ No newline at end of file

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java
Patch:
@@ -59,7 +59,7 @@ protected void doCommandLine() throws Exception {
                 if (!nEntry.isDirectory()) {
                     try (InputStream is = zipFile.getInputStream(e)) {
                         while (true) {
-                            int c = is.read(data);
+                            int c = is.read(buffer);
                             if (c < 0) {
                                 break;
                             }

File: d2j-base-cmd/src/main/java/com/googlecode/dex2jar/tools/BaseCmd.java
Patch:
@@ -226,7 +226,7 @@ protected Object convert(String value, Class type) {
             return new File(value);
         }
         if (type.equals(Path.class)) {
-            return new File(value).getPath();
+            return new File(value).toPath();
         }
         try {
             type.asSubclass(Enum.class);

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DexRecomputeChecksum.java
Patch:
@@ -22,6 +22,7 @@
 import java.io.IOException;
 import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
 import java.nio.file.FileSystem;
 import java.nio.file.Files;
 import java.nio.file.Path;
@@ -70,7 +71,8 @@ protected void doCommandLine() throws Exception {
 
         byte[] data = Files.readAllBytes(jar);
 
-        ByteBuffer b = ByteBuffer.wrap(data);
+        ByteBuffer b = ByteBuffer.wrap(data).order(ByteOrder.LITTLE_ENDIAN);
+        b.putInt(32, data.length);
         DexFileWriter.updateChecksum(b, data.length);
         Files.write(output, data);
 

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/AnnotationNode.java
Patch:
@@ -21,6 +21,7 @@
 import org.objectweb.asm.AnnotationVisitor;
 import org.objectweb.asm.ClassVisitor;
 import org.objectweb.asm.FieldVisitor;
+import org.objectweb.asm.Type;
 
 import com.googlecode.dex2jar.DexType;
 import com.googlecode.dex2jar.Field;
@@ -80,7 +81,8 @@ public static void accept(String name, Object v, AnnotationVisitor av) {
             // av.visit(name, v);
             System.err.println("WARN: ignored method annotation value");
         } else if (v instanceof DexType) {
-            av.visit(name, ((DexType) v).desc);
+            // fix issue 222 the type is translated to string in annotation
+            av.visit(name, Type.getType(((DexType) v).desc));
         } else {
             if (v == null) {
                 System.err.println("WARN: ignored null annotation value");

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexFileReader.java
Patch:
@@ -717,6 +717,9 @@ public final void setApiLevel(int apiLevel) {
                             int sizeJ = in.readUIntx();
                             for (int j = 0; j < sizeJ; j++) {
                                 int field_annotation_offset = in.readUIntx();
+                                if(field_annotation_offset == 0){
+                                    continue;
+                                }
                                 in.pushMove(field_annotation_offset);
                                 try {
                                     DexAnnotationAble dpav = dmv.visitParameterAnnotation(j);

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/AnnotationNode.java
Patch:
@@ -197,7 +197,7 @@ public void visitEnum(String name, String desc, String value) {
 
         @Override
         public DexAnnotationVisitor visitAnnotation(String name, String desc) {
-            AnnotationNode node = new AnnotationNode();
+            AnnotationNode node = new AnnotationNode(desc, true);
             list.add(node);
             return node;
         }

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/Dex2jarCmd.java
Patch:
@@ -48,7 +48,8 @@ public static void main(String[] args) {
 
     @Opt(opt = "s", hasArg = false, description = "same with --topological-sort/-ts")
     private boolean topologicalSort1 = false;
-
+    @Opt(opt = "v", longOpt = "verbose", hasArg = false, description = "show progress")
+    private boolean verbose = false;
     @Opt(opt = "ts", longOpt = "topological-sort", hasArg = false, description = "sort block by topological, that will generate more readable code")
     private boolean topologicalSort = false;
 
@@ -106,7 +107,7 @@ protected void doCommandLine() throws Exception {
 
             Dex2jar.from(reader).withExceptionHandler(handler).reUseReg(reuseReg)
                     .topoLogicalSort(topologicalSort || topologicalSort1).skipDebug(!debugInfo)
-                    .optimizeSynchronized(this.optmizeSynchronized).printIR(printIR).to(file);
+                    .optimizeSynchronized(this.optmizeSynchronized).printIR(printIR).verbose(verbose).to(file);
 
             if (!notHandleException) {
                 Map<Method, Exception> exceptions = handler.getExceptions();

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -169,11 +169,13 @@ protected void build() {
      * @param clz
      */
     private void searchEnclosing(Clz clz) {
+        Set<Clz> visited = new HashSet<Clz>();// issue 197 prevent from endless loop
         for (Clz p = clz; p != null; p = p.enclosingClass) {
             Clz enclosingClass = p.enclosingClass;
-            if (enclosingClass == null) {
+            if (enclosingClass == null || visited.contains(enclosingClass)) {
                 break;
             }
+            visited.add(enclosingClass);
             int accessInInner = clearInnerAccess(p.access);
             if (p.innerName != null) {// non-anonymous Innerclass
                 cv.visitInnerClass(Type.getType(p.name).getInternalName(), Type.getType(enclosingClass.name)

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/DecryptStringCmd.java
Patch:
@@ -63,7 +63,7 @@ public static void main(String[] args) {
     private String methodOwner;
     @Opt(opt = "mn", longOpt = "decrypt-method-name", description = "the owner of the mothed which can decrypt the stings, the method's signature must be static (type)Ljava/lang/String;", argName = "name")
     private String methodName;
-    @Opt(opt = "cp", longOpt = "classpath", description = "", argName = "cp")
+    @Opt(opt = "cp", longOpt = "classpath", description = "add extra lib to classpath", argName = "cp")
     private String classpath;
     @Opt(opt = "t", longOpt = "arg-type", description = "the type of the method's argument, int,string. default is string", argName = "type")
     private String type = "string";

File: dex-translator/src/test/java/res/I142_annotation_default.java
Patch:
@@ -30,4 +30,6 @@ enum AA {
 
     double lll() default 1.0D;
 
+    AA[] mmm() default { AA.A, AA.B };
+
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexFileReader.java
Patch:
@@ -126,7 +126,7 @@ public static byte[] readDex(byte[] data) throws IOException {
             } catch (ClassNotFoundException e) {
                 ze = new ZipExtractor();
             }
-            ze.extract(data, "classes.dex");
+            return ze.extract(data, "classes.dex");
         }
         throw new RuntimeException("the src file not a .dex, .odex or zip file");
     }

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexFileReader.java
Patch:
@@ -126,7 +126,9 @@ public static byte[] readDex(byte[] data) throws IOException {
                 zis = new ZipInputStream(new ByteArrayInputStream(data));
                 for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {
                     if (entry.getName().equals("classes.dex")) {
-                        return IOUtils.toByteArray(zis);
+                        data = IOUtils.toByteArray(zis);
+                        zis.close();
+                        return data;
                     }
                 }
             } finally {

File: jar-rename/src/main/java/p/rn/util/FileOut.java
Patch:
@@ -93,7 +93,7 @@ private void check(String dir) throws IOException {
             if (i > 0) {
                 check(dir.substring(0, i));
             }
-            zos.putNextEntry(new ZipEntry(dir));
+            zos.putNextEntry(new ZipEntry(dir + "/"));
             zos.closeEntry();
         }
 

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/Dex2jar.java
Patch:
@@ -182,7 +182,7 @@ private void check(String dir, ZipOutputStream zos) throws IOException {
         if (i > 0) {
             check(dir.substring(0, i), zos);
         }
-        zos.putNextEntry(new ZipEntry(dir));
+        zos.putNextEntry(new ZipEntry(dir + "/"));
         zos.closeEntry();
     }
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TypeAnalyze.java
Patch:
@@ -221,8 +221,9 @@ private void e0expr(E0Expr op) {
             } else if (value instanceof Type) {
                 provideAs(cst, Type.getType(Class.class));
             } else if (value instanceof Number) {
-                if (value instanceof Integer) {
-                    int a = ((Integer) value).intValue();
+                if (value instanceof Integer || value instanceof Byte || value instanceof Short
+                        || value instanceof Character) {
+                    int a = ((Number) value).intValue();
                     if (a >= 0 && a <= 1) {
                         provideAs(cst, Type.BOOLEAN_TYPE);
                     } else if (a >= Byte.MIN_VALUE && a <= Byte.MAX_VALUE) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/StmtList.java
Patch:
@@ -115,7 +115,7 @@ private void indexIt(Stmt stmt) {
         this.index++;
     }
 
-    public void insertAftre(Stmt position, Stmt stmt) {
+    public void insertAfter(Stmt position, Stmt stmt) {
         if (position.list == this) {
             indexIt(stmt);
             stmt.list = this;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/EndRemover.java
Patch:
@@ -190,7 +190,7 @@ public void transform(IrMethod irMethod) {
 
     private void move4Label(StmtList stmts, LabelStmt start, Stmt end, LabelStmt label) {
         move4End(stmts, start, end);
-        stmts.insertAftre(end, Stmts.nGoto(label));
+        stmts.insertAfter(end, Stmts.nGoto(label));
     }
 
     private void move4End(StmtList stmts, LabelStmt start, Stmt end) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ExceptionHandlerCurrectTransformer.java
Patch:
@@ -73,7 +73,7 @@ public void transform(IrMethod irMethod) {
 
                 LabelStmt lbl = Stmts.nLabel();
                 JumpStmt g = Stmts.nGoto(lbl);
-                irMethod.stmts.insertAftre(pre, g);
+                irMethod.stmts.insertAfter(pre, g);
                 irMethod.stmts.insertBefore(st, lbl);
                 if (ex == null) {
                     ex = Exprs.nLocal("unRefEx");

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TopologicalSort.java
Patch:
@@ -243,7 +243,7 @@ private void init_ts_default_next(StmtList stmts, Stmt stmt) {
             Stmt n = stmt.getNext();
             if (n != null && n.st != ST.LABEL) {
                 LabelStmt ls = Stmts.nLabel();
-                stmts.insertAftre(stmt, ls);
+                stmts.insertAfter(stmt, ls);
             }
             stmt._ts_default_next = stmt.getNext();
             break;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TopologicalSort.java
Patch:
@@ -91,7 +91,7 @@ private void rebuild(StmtList stmts, List<Stmt> out) {
          */
         for (JumpStmt gotoStmt : gotos) {
             Stmt t = gotoStmt.getNext();
-            while (t.st == ST.LABEL) {
+            while (t != null && t.st == ST.LABEL) {
                 if (t == gotoStmt.target) {
                     stmts.remove(gotoStmt);
                     break;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalType.java
Patch:
@@ -43,8 +43,6 @@ public void transform(IrMethod irMethod) {
         TypeAnalyze ta = new TypeAnalyze(irMethod);
         List<DefTypeRef> refs = ta.analyze();
 
-        refs.size();
-
         for (DefTypeRef ref : refs) {
             Type type = null;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TypeAnalyze.java
Patch:
@@ -61,7 +61,7 @@ public class TypeAnalyze {
 
     public static class DefTypeRef implements TypeRef {
         static Comparator<Type> c = new Comparator<Type>() {
-            int x[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 };
+            int x[] = { 999, 1, 4, 2, 3, 5, 6, 7, 8, 10, 9 };
 
             @Override
             public int compare(Type o1, Type o2) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LiveAnalyze.java
Patch:
@@ -41,9 +41,9 @@
 public class LiveAnalyze {
     public static class Phi {
         public Local local;
+        public Set<Phi> sets = new HashSet<Phi>(3);
         public Phi tag;
         public boolean used;
-        public Set<Phi> sets = new HashSet<Phi>(3);
 
         @Override
         public String toString() {
@@ -76,8 +76,8 @@ private static Phi trim(Phi phi) {
         return phi;
     }
 
-    protected IrMethod method;
     protected int localSize;
+    protected IrMethod method;
 
     public LiveAnalyze(IrMethod method) {
         super();

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/StmtListTest.java
Patch:
@@ -25,7 +25,7 @@ public void toStringTest() {
         list.add(Stmts.nIdentity(b, Exprs.nParameterRef(Type.INT_TYPE, 0)));
         list.add(Stmts.nIdentity(c, Exprs.nParameterRef(Type.LONG_TYPE, 1)));
         list.add(Stmts.nIdentity(d, Exprs.nParameterRef(Type.FLOAT_TYPE, 2)));
-        list.add(Stmts.nIf(Exprs.nGt(b, Constant.nInt(0)), L1));
+        list.add(Stmts.nIf(Exprs.nGt(b, Constant.nInt(0), Type.INT_TYPE), L1));
         list.add(Stmts.nAssign(c, Exprs.nCast(d, Type.FLOAT_TYPE, Type.LONG_TYPE)));
         list.add(L1);
         list.toString();

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ZeroTransformer.java
Patch:
@@ -45,7 +45,7 @@
  */
 public class ZeroTransformer implements Transformer {
 
-    static class Phi {
+    public static class Phi {
         public Boolean isZero = null;
         // public Set<Phi> parents = new HashSet<Phi>();
         public Set<Phi> children = new HashSet<Phi>();
@@ -249,7 +249,7 @@ public void transform(IrMethod irMethod) {
                 break;
             case E2:
                 E2Stmt e2 = (E2Stmt) p;
-                if (e2.st != ST.ASSIGN && e2.st != ST.IDENTITY) {
+                if (e2.op1.value.vt != VT.LOCAL) {
                     replace(e2.op1, frame);
                 }
                 replace(e2.op2, frame);
@@ -262,7 +262,6 @@ public void transform(IrMethod irMethod) {
                 break;
             }
         }
-
     }
 
     private void replace(ValueBox op, Phi[] frame) {

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -37,6 +37,7 @@
 import com.googlecode.dex2jar.ir.stmt.Stmt;
 import com.googlecode.dex2jar.ir.stmt.Stmt.ST;
 import com.googlecode.dex2jar.ir.stmt.StmtList;
+import com.googlecode.dex2jar.ir.ts.ArrayNullPointerTransformer;
 import com.googlecode.dex2jar.ir.ts.EndRemover;
 import com.googlecode.dex2jar.ir.ts.ExceptionHandlerCurrectTransformer;
 import com.googlecode.dex2jar.ir.ts.FixVar;
@@ -60,8 +61,8 @@ public class V3MethodAdapter implements DexMethodVisitor, Opcodes {
     protected static Transformer topologicalSort = new TopologicalSort();
     private static final Logger log = Logger.getLogger(V3MethodAdapter.class.getName());
     protected static Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrectTransformer(),
-            new ZeroTransformer(), new FixVar(), new LocalSplit(), new LocalRemove(), new LocalType(),
-            new LocalCurrect() };
+            new ZeroTransformer(), new ArrayNullPointerTransformer(), new FixVar(), new LocalSplit(),
+            new LocalRemove(), new LocalType(), new LocalCurrect() };
     static {
         log.log(Level.CONFIG, "InsnList.check=false");
         // Optimize Tree Analyzer

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -116,6 +116,9 @@ protected void build() {
                     for (Item i : ann.items) {
                         if ("value".equals(i.name)) {
                             enclosingMethod = (Method) i.value;
+                            if (enclosingClass == null) {
+                                enclosingClass = enclosingMethod.getOwner();
+                            }
                         }
                     }
                 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Value.java
Patch:
@@ -92,7 +92,7 @@ public static enum VT {
         INVOKE_INTERFACE, INVOKE_NEW, INVOKE_SPECIAL, INVOKE_STATIC, INVOKE_VIRTUAL, //
         LE("<="), LENGTH, LOCAL, LT("<"), MUL("*"), NE("!="), NEG, //
         NEW, NEW_ARRAY, NEW_MUTI_ARRAY, NOT, OR("|"), PARAMETER_REF, REM("%"), SHL("<<"), SHR(">>"), SUB("-"), THIS_REF, USHR(
-                ">>>"), XOR("^");
+                ">>>"), XOR("^"), FILLED_ARRAY;
         private String name;
 
         VT() {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/Exprs.java
Patch:
@@ -168,9 +168,9 @@ public static TypeExpr nNewArray(Type elementType, Value size) {
         return new TypeExpr(VT.NEW_ARRAY, size, elementType);
     }
 
-    // public static NewExpr nNew(Type type) {
-    // return new NewExpr(type);
-    // }
+    public static FilledArrayExpr nFilledArray(Type elementType, Value[] datas) {
+        return new FilledArrayExpr(box(datas), elementType);
+    }
 
     public static NewMutiArrayExpr nNewMutiArray(Type base, int dim, Value[] sizes) {
         return new NewMutiArrayExpr(base, dim, box(sizes));

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Cfg.java
Patch:
@@ -100,7 +100,6 @@ private static boolean notThrow(Value s) {
     public static boolean notThrow(Stmt s) {
         switch (s.st) {
         case LABEL:
-        case RETURN:
         case RETURN_VOID:
         case GOTO:
         case NOP:
@@ -111,8 +110,7 @@ public static boolean notThrow(Stmt s) {
             return notThrow(e2.op1.value) && notThrow(e2.op2.value);
         case TABLE_SWITCH:
         case LOOKUP_SWITCH:
-            E1Stmt s1 = (E1Stmt) s;
-            return notThrow(s1.op.value);
+        case RETURN:
         case IF:
             return notThrow(((E1Stmt) s).op.value);
         }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalType.java
Patch:
@@ -172,6 +172,7 @@ public TypeBox exec(Value v) {
             case LENGTH: {
                 UnopExpr te = (UnopExpr) v;
                 exec(te.op.value);
+                type(te.op.value, Type.getType(Object.class));
                 type(tb, Type.INT_TYPE);
             }
                 break;

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/I120Test.java
Patch:
@@ -22,10 +22,10 @@ public static void a(DexClassVisitor cv) {
         DexMethodVisitor mv = cv.visitMethod(ACC_PUBLIC | ACC_STATIC, new Method("La;", "b", new String[] {}, "V"));
         DexCodeVisitor code = mv.visitCode();
         code.visitArguments(3, new int[] {});
-        code.visitConstStmt(OP_CONST, 0, Integer.valueOf(0), TYPE_SINGLE); // int: 0xffffffff float:NaN
+        code.visitConstStmt(OP_CONST, 0, Integer.valueOf(0), TYPE_SINGLE);
         code.visitMethodStmt(OP_INVOKE_VIRTUAL, new int[] { 0 }, new Method("Ljava/lang/String;", "toString",
                 new String[] {}, "Ljava/lang/String;"));
-        code.visitConstStmt(OP_CONST, 1, Integer.valueOf(0), TYPE_SINGLE); // int: 0xffffffff float:NaN
+        code.visitConstStmt(OP_CONST, 1, Integer.valueOf(0), TYPE_SINGLE);
         code.visitUnopStmt(OP_ARRAY_LENGTH, 2, 1, TYPE_INT);
         code.visitReturnStmt(OP_RETURN_VOID);
         code.visitEnd();

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/V3Test.java
Patch:
@@ -97,7 +97,7 @@ public void visitEnd() {
                             }
                         };
                     }
-                }), 0);
+                }), V3.REUSE_REGISTER | V3.TOPOLOGICAL_SORT | V3.OPTIMIZE_SYNCHRONIZED);
         System.out.flush();
         System.out.println();
         if (exes.size() > 0) {

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3.java
Patch:
@@ -33,6 +33,7 @@ public class V3 implements DexFileVisitor {
     public static final int REUSE_REGISTER = 1 << 0;
     public static final int TOPOLOGICAL_SORT = 1 << 1;
     public static final int PRINT_IR = 1 << 2;
+    public static final int OPTIMIZE_SYNCHRONIZED = 1 << 3;
     protected ClassVisitorFactory cvf;
     protected Map<String, Integer> accessFlagsMap;
     protected Map<String, String> innerNameMap;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -222,8 +222,7 @@ public void visitEnd() {
                     indexLabelStmt4Debug(irMethod.stmts);
                     System.out.println(irMethod);
                 }
-                new IrMethod2AsmMethod(0 != (config & V3.REUSE_REGISTER)).convert(irMethod, new LdcOptimizeAdapter(
-                        methodNode));
+                new IrMethod2AsmMethod(config).convert(irMethod, new LdcOptimizeAdapter(methodNode));
             } catch (Exception e) {
                 if (this.exceptionHandler == null) {
                     throw e instanceof RuntimeException ? (RuntimeException) e : new RuntimeException(e);

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/JasminifierClassAdapter.java
Patch:
@@ -333,7 +333,7 @@ public void visitEnd() {
                 for (int j = 0; j < mn.tryCatchBlocks.size(); ++j) {
                     TryCatchBlockNode tcb = (TryCatchBlockNode) mn.tryCatchBlocks.get(j);
                     pw.print(".catch ");
-                    pw.print(tcb.type);
+                    pw.print(tcb.type == null ? "all" : tcb.type);
                     pw.print(" from ");
                     print(tcb.start);
                     pw.print(" to ");

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Trap.java
Patch:
@@ -49,9 +49,8 @@ public Trap clone(Map<LabelStmt, LabelStmt> map) {
 
     @Override
     public String toString() {
-        return new StringBuilder().append(start.getDisplayName()).append(" - ").append(end.getDisplayName())
-                .append(" > ").append(handler.getDisplayName()).append(" // ")
-                .append(type == null ? "all" : ToStringUtil.toShortClassName(type)).toString();
+        return String.format(".catch %s - %s > %s // %s", start.getDisplayName(), end.getDisplayName(), handler.getDisplayName(),
+                type == null ? "all" : ToStringUtil.toShortClassName(type));
     }
 
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/AssignStmt.java
Patch:
@@ -17,7 +17,6 @@
 
 import java.util.Map;
 
-import com.googlecode.dex2jar.ir.Value;
 import com.googlecode.dex2jar.ir.ValueBox;
 import com.googlecode.dex2jar.ir.stmt.Stmt.E2Stmt;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -133,8 +133,7 @@ public static enum ST {
     /**
      * Used in ordering statements in a {@link TreeSet}, id of the {@link Stmt} in its {@link StmtList}
      */
-    /* default */
-    int id;
+    public int id;
 
     /**
      * Owner of the statement

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Cfg.java
Patch:
@@ -285,5 +285,4 @@ private static void link(Stmt from, Stmt to) {
         from._cfg_tos.add(to);
         to._cfg_froms.add(from);
     }
-
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexDebugInfoReader.java
Patch:
@@ -126,7 +126,7 @@ public void accept(DexCodeVisitor dcv) {
             }
                 break;
             case DBG_ADVANCE_LINE: {
-                int offset = (int) in.readULeb128();
+                int offset = (int) in.readLeb128();
                 line += offset;
             }
                 break;

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/V3Test.java
Patch:
@@ -97,7 +97,7 @@ public void visitEnd() {
                             }
                         };
                     }
-                }), DexFileReader.SKIP_DEBUG);
+                }), 0);
         System.out.flush();
         System.out.println();
         if (exes.size() > 0) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Trap.java
Patch:
@@ -49,9 +49,8 @@ public Trap clone(Map<LabelStmt, LabelStmt> map) {
 
     @Override
     public String toString() {
-        return new StringBuilder().append(start.getDisplayName()).append(" - ").append(end.getDisplayName())
-                .append(" > ").append(handler.getDisplayName()).append(" // ")
-                .append(type == null ? "all" : ToStringUtil.toShortClassName(type)).toString();
+        return String.format(".catch %s - %s > %s // %s", start.getDisplayName(), end.getDisplayName(), handler.getDisplayName(),
+                type == null ? "all" : ToStringUtil.toShortClassName(type));
     }
 
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/AssignStmt.java
Patch:
@@ -17,7 +17,6 @@
 
 import java.util.Map;
 
-import com.googlecode.dex2jar.ir.Value;
 import com.googlecode.dex2jar.ir.ValueBox;
 import com.googlecode.dex2jar.ir.stmt.Stmt.E2Stmt;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -100,7 +100,7 @@ public EnStmt(ST type, ValueBox[] ops) {
     public static enum ST {
 
         ASSIGN, GOTO, IDENTITY, IF, LABEL, LOCK, LOOKUP_SWITCH, //
-        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK, LOCALVARIABLE
+        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK
     }
 
     /**

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/EndRemover.java
Patch:
@@ -34,7 +34,6 @@ static boolean isSimple(Stmt stmt) {
                 }
                 break;
             case LABEL:
-            case LOCALVARIABLE:
             case NOP:
             case UNLOCK:
                 break;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ZeroTransformer.java
Patch:
@@ -245,8 +245,7 @@ public void transform(IrMethod irMethod) {
                 break;
             case E1:
                 E1Stmt e1 = (E1Stmt) p;
-                if(e1.st != ST.LOCALVARIABLE)
-                    replace(e1.op, frame);
+                replace(e1.op, frame);
                 break;
             case E2:
                 E2Stmt e2 = (E2Stmt) p;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -19,6 +19,7 @@
 import static com.googlecode.dex2jar.ir.Constant.nInt;
 import static com.googlecode.dex2jar.ir.Constant.nLong;
 import static com.googlecode.dex2jar.ir.Constant.nString;
+import static com.googlecode.dex2jar.ir.expr.Exprs.box;
 import static com.googlecode.dex2jar.ir.expr.Exprs.nAdd;
 import static com.googlecode.dex2jar.ir.expr.Exprs.nAnd;
 import static com.googlecode.dex2jar.ir.expr.Exprs.nArray;
@@ -64,7 +65,6 @@
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nGoto;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nIdentity;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nIf;
-import static com.googlecode.dex2jar.ir.stmt.Stmts.nLocVar;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nLock;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nLookupSwitch;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nReturn;
@@ -86,6 +86,7 @@
 import com.googlecode.dex2jar.ir.Constant;
 import com.googlecode.dex2jar.ir.IrMethod;
 import com.googlecode.dex2jar.ir.Local;
+import com.googlecode.dex2jar.ir.LocalVar;
 import com.googlecode.dex2jar.ir.Trap;
 import com.googlecode.dex2jar.ir.Value;
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
@@ -649,6 +650,6 @@ public void visitLineNumber(int line, DexLabel label) {
 
     @Override
     public void visitLocalVariable(String name, String type, String signature, DexLabel start, DexLabel end, int reg) {
-        list.add(nLocVar(name, type, signature, toLabelStmt(start), toLabelStmt(end), locals[reg]));
+        irMethod.vars.add(new LocalVar(name, type, signature, toLabelStmt(start), toLabelStmt(end), box(locals[reg])));
     }
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -100,8 +100,7 @@ public EnStmt(ST type, ValueBox[] ops) {
     public static enum ST {
 
         ASSIGN, GOTO, IDENTITY, IF, LABEL, LOCK, LOOKUP_SWITCH, //
-        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK, 
-        LINENUMBER, LOCALVARIABLE
+        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK, LOCALVARIABLE
     }
 
     /**

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Cfg.java
Patch:
@@ -100,7 +100,6 @@ private static boolean notThrow(Value s) {
     public static boolean notThrow(Stmt s) {
         switch (s.st) {
         case LABEL:
-        case LINENUMBER:
         case LOCALVARIABLE:
         case RETURN:
         case RETURN_VOID:

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/EndRemover.java
Patch:
@@ -34,7 +34,6 @@ static boolean isSimple(Stmt stmt) {
                 }
                 break;
             case LABEL:
-            case LINENUMBER:
             case LOCALVARIABLE:
             case NOP:
             case UNLOCK:
@@ -67,7 +66,6 @@ static void directJump(StmtList list) {
                     for (Stmt p = js.target.getNext(); !end; p = p.getNext()) {
                         switch (p.st) {
                         case LABEL:
-                        case LINENUMBER:
                             break;
                         case GOTO:
                             LabelStmt target = ((JumpStmt) p).target;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ExceptionHandlerCurrectTransformer.java
Patch:
@@ -63,10 +63,10 @@ public void transform(IrMethod irMethod) {
             LabelStmt handler = t.handler;
             Stmt st = handler.getNext();
             Stmt pre = handler.getPre();
-            while (st.st == ST.LABEL || st.st == ST.LINENUMBER) {
+            while (st.st == ST.LABEL) {
                 st = st.getNext();
             }
-            while (pre.st == ST.LABEL || pre.st == ST.LINENUMBER) {
+            while (pre.st == ST.LABEL) {
                 pre = pre.getPre();
             }
             if (needInsertMoveExceptionRef(st) && needInsertGoto(pre)) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalRemove.java
Patch:
@@ -253,7 +253,6 @@ public void transform(IrMethod je) {
                 switch (st.st) {
                 case RETURN_VOID:
                 case LABEL:
-                case LINENUMBER:
                 case LOCALVARIABLE:
                 case GOTO:
                 case NOP:

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -64,15 +64,14 @@
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nGoto;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nIdentity;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nIf;
+import static com.googlecode.dex2jar.ir.stmt.Stmts.nLocVar;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nLock;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nLookupSwitch;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nReturn;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nReturnVoid;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nTableSwitch;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nThrow;
 import static com.googlecode.dex2jar.ir.stmt.Stmts.nUnLock;
-import static com.googlecode.dex2jar.ir.stmt.Stmts.nLocVar;
-import static com.googlecode.dex2jar.ir.stmt.Stmts.nLineNum;
 
 import java.util.Arrays;
 
@@ -645,7 +644,7 @@ public void visitUnopStmt(int opcode, int toReg, int fromReg, int xta, int xtb)
 
     @Override
     public void visitLineNumber(int line, DexLabel label) {
-        list.add(nLineNum(line, toLabelStmt(label)));
+        toLabelStmt(label).lineNumber = line;
     }
 
     @Override

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/V3Test.java
Patch:
@@ -97,7 +97,7 @@ public void visitEnd() {
                             }
                         };
                     }
-                }), DexFileReader.SKIP_DEBUG);
+                }), 0);
         System.out.flush();
         System.out.println();
         if (exes.size() > 0) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -100,7 +100,8 @@ public EnStmt(ST type, ValueBox[] ops) {
     public static enum ST {
 
         ASSIGN, GOTO, IDENTITY, IF, LABEL, LOCK, LOOKUP_SWITCH, //
-        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK
+        NOP, RETURN, RETURN_VOID, TABLE_SWITCH, THROW, UNLOCK, 
+        LINENUMBER, LOCALVARIABLE
     }
 
     /**
@@ -133,8 +134,7 @@ public static enum ST {
     /**
      * Used in ordering statements in a {@link TreeSet}, id of the {@link Stmt} in its {@link StmtList}
      */
-    /* default */
-    int id;
+    public int id;
 
     /**
      * Owner of the statement

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/EndRemover.java
Patch:
@@ -34,6 +34,8 @@ static boolean isSimple(Stmt stmt) {
                 }
                 break;
             case LABEL:
+            case LINENUMBER:
+            case LOCALVARIABLE:
             case NOP:
             case UNLOCK:
                 break;
@@ -65,6 +67,7 @@ static void directJump(StmtList list) {
                     for (Stmt p = js.target.getNext(); !end; p = p.getNext()) {
                         switch (p.st) {
                         case LABEL:
+                        case LINENUMBER:
                             break;
                         case GOTO:
                             LabelStmt target = ((JumpStmt) p).target;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ExceptionHandlerCurrectTransformer.java
Patch:
@@ -63,10 +63,10 @@ public void transform(IrMethod irMethod) {
             LabelStmt handler = t.handler;
             Stmt st = handler.getNext();
             Stmt pre = handler.getPre();
-            while (st.st == ST.LABEL) {
+            while (st.st == ST.LABEL || st.st == ST.LINENUMBER) {
                 st = st.getNext();
             }
-            while (pre.st == ST.LABEL) {
+            while (pre.st == ST.LABEL || pre.st == ST.LINENUMBER) {
                 pre = pre.getPre();
             }
             if (needInsertMoveExceptionRef(st) && needInsertGoto(pre)) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/ZeroTransformer.java
Patch:
@@ -245,7 +245,8 @@ public void transform(IrMethod irMethod) {
                 break;
             case E1:
                 E1Stmt e1 = (E1Stmt) p;
-                replace(e1.op, frame);
+                if(e1.st != ST.LOCALVARIABLE)
+                    replace(e1.op, frame);
                 break;
             case E2:
                 E2Stmt e2 = (E2Stmt) p;

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexDebugInfoReader.java
Patch:
@@ -126,7 +126,7 @@ public void accept(DexCodeVisitor dcv) {
             }
                 break;
             case DBG_ADVANCE_LINE: {
-                int offset = (int) in.readULeb128();
+                int offset = (int) in.readLeb128();
                 line += offset;
             }
                 break;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/Cfg.java
Patch:
@@ -140,8 +140,8 @@ public static void createCfgForLiveAnalyze(IrMethod jm) {
         }
 
         for (Trap t : jm.traps) {
-            for (Stmt s = t.start.getNext(); s != t.end; s = s.getNext()) {
-                link(s.getPre(), t.handler);
+            for (Stmt s = t.start; s != t.end; s = s.getNext()) {
+                link(s, t.handler);
             }
         }
 

File: dex-tools/src/main/java/com/googlecode/dex2jar/tools/AsmVerify.java
Patch:
@@ -126,6 +126,7 @@ public static void main(String[] args) throws IOException, IllegalArgumentExcept
                             System.err.println("Error verify method " + cr.getClassName() + "." + method.name + " "
                                     + method.desc);
                             if (detail) {
+                                ex.printStackTrace(System.err);
                                 printAnalyzerResult(method, a, new PrintWriter(System.err));
                             }
                         }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -48,6 +48,7 @@
 import com.googlecode.dex2jar.ir.ts.LocalType;
 import com.googlecode.dex2jar.ir.ts.TopologicalSort;
 import com.googlecode.dex2jar.ir.ts.Transformer;
+import com.googlecode.dex2jar.ir.ts.ZeroTransformer;
 import com.googlecode.dex2jar.visitors.DexAnnotationAble;
 import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
 import com.googlecode.dex2jar.visitors.DexCodeVisitor;
@@ -60,8 +61,8 @@
 public class V3MethodAdapter implements DexMethodVisitor, Opcodes {
     private static Transformer endremove = new EndRemover();
     private static final Logger log = Logger.getLogger(V3MethodAdapter.class.getName());
-    private static Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrect(), new LocalSplit(),
-            new LocalRemove(), new LocalType(), new LocalCurrect(), new TopologicalSort() };
+    private static Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrect(), new ZeroTransformer(),
+            new LocalSplit(), new LocalRemove(), new LocalType(), new LocalCurrect(), new TopologicalSort() };
     static {
         log.log(Level.CONFIG, "InsnList.check=false");
         // Optimize Tree Analyzer

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexCodeReader.java
Patch:
@@ -424,7 +424,7 @@ private void acceptInsn(DataIn in, int instruction_size, DexOpcodeAdapter n) {
                 break;
             }
             case F23x: {
-                int tmp = in.readShortx();
+                int tmp = in.readUShortx();
                 n.x3x(opcode, uOpcodeH, tmp & 0xFF, tmp >> 8);
                 break;
             }

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestDexClassV.java
Patch:
@@ -5,6 +5,9 @@
 import com.googlecode.dex2jar.visitors.DexMethodVisitor;
 import com.googlecode.dex2jar.visitors.EmptyVisitor;
 
+import org.junit.Ignore;
+
+@Ignore
 public class TestDexClassV extends EmptyVisitor {
     @Override
     public DexMethodVisitor visitMethod(int accessFlags, Method method) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/TopologicalSort.java
Patch:
@@ -187,8 +187,8 @@ private void init(StmtList stmts, List<Trap> traps) {
         }
         // 2.1 link exception handler
         for (Trap t : traps) {
-            for (Stmt s = t.start.getNext(); s != t.end; s = s.getNext()) {
-                link(s.getPre(), t.handler);
+            for (Stmt s = t.start; s != t.end; s = s.getNext()) {
+                link(s, t.handler);
             }
         }
         // 2.2 link normal

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -46,6 +46,7 @@
 import com.googlecode.dex2jar.ir.ts.LocalRemove;
 import com.googlecode.dex2jar.ir.ts.LocalSplit;
 import com.googlecode.dex2jar.ir.ts.LocalType;
+import com.googlecode.dex2jar.ir.ts.TopologicalSort;
 import com.googlecode.dex2jar.ir.ts.Transformer;
 import com.googlecode.dex2jar.visitors.DexAnnotationAble;
 import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
@@ -60,7 +61,7 @@ public class V3MethodAdapter implements DexMethodVisitor, Opcodes {
     private static Transformer endremove = new EndRemover();
     private static final Logger log = Logger.getLogger(V3MethodAdapter.class.getName());
     private static Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrect(), new LocalSplit(),
-            new LocalRemove(), new LocalType(), new LocalCurrect() };
+            new LocalRemove(), new LocalType(), new LocalCurrect(), new TopologicalSort() };
     static {
         log.log(Level.CONFIG, "InsnList.check=false");
         // Optimize Tree Analyzer

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/StmtList.java
Patch:
@@ -19,7 +19,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 import com.googlecode.dex2jar.ir.stmt.Stmt.ST;
 
@@ -70,7 +69,6 @@ public void remove() {
         }
     }
 
-    public Set<Stmt> _cfg_tais;
     public List<AssignStmt> _ls_inits = new ArrayList<AssignStmt>();
     public List<Stmt> _ls_visit_order;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -121,6 +121,9 @@ public static enum ST {
      * Used in Local Split, forward frame of the {@link Stmt}
      */
     public Object _ls_forward_frame;
+    
+    public Stmt _ro_default_next;
+    
     /**
      * The number of argument
      */

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/TypeExpr.java
Patch:
@@ -51,7 +51,8 @@ public Value clone() {
     public String toString() {
         switch (super.vt) {
         case CHECK_CAST:
-       case INSTANCE_OF:
+            return "((" + ToStringUtil.toShortClassName(type) + ")" + op + ")";
+        case INSTANCE_OF:
             return "(" + op + " instanceof " + ToStringUtil.toShortClassName(type) + ")";
         case NEW_ARRAY:
             if (type.getSort() == Type.ARRAY) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalType.java
Patch:
@@ -150,7 +150,7 @@ public TypeBox exec(Value v) {
                 break;
             case CHECK_CAST: {
                 TypeExpr te = (TypeExpr) v;
-                merge(exec(te.op.value), tb);
+                type(exec(te.op.value), Type.getType(Object.class));
                 type(tb, te.type);
             }
                 break;

File: dex-reader/src/main/java/com/googlecode/dex2jar/util/DumpDexCodeAdapter.java
Patch:
@@ -26,12 +26,13 @@
 import com.googlecode.dex2jar.Method;
 import com.googlecode.dex2jar.visitors.DexCodeAdapter;
 import com.googlecode.dex2jar.visitors.DexCodeVisitor;
+import com.googlecode.dex2jar.visitors.EmptyVisitor;
 
 /**
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-public class DumpDexCodeAdapter extends DexCodeAdapter implements DexOpcodes {
+public class DumpDexCodeAdapter extends EmptyVisitor implements DexOpcodes {
     private static class TryCatch {
         public DexLabel end;
 
@@ -65,8 +66,7 @@ private static String c(String type) {
     /**
      * @param dcv
      */
-    public DumpDexCodeAdapter(DexCodeVisitor dcv, boolean isStatic, Method m, PrintWriter out) {
-        super(dcv);
+    public DumpDexCodeAdapter( boolean isStatic, Method m, PrintWriter out) {
         this.method = m;
         this.out = out;
         this.isStatic = isStatic;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -224,6 +224,9 @@ public void visit(String name, Object value) {
                             if (annotationDefaults == null) {
                                 annotationDefaults = new HashMap<String, Object>();
                             }
+                            if (value instanceof DexType) {
+                                value = Type.getType(((DexType) value).desc);
+                            }
                             annotationDefaults.put(name, value);
                         }
                     };

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/Exprs.java
Patch:
@@ -140,8 +140,8 @@ public static UnopExpr nLength(Value array) {
         return new UnopExpr(VT.LENGTH, array);
     }
 
-    public static Local nLocal(String name, Type type) {
-        return new Local(name, type);
+    public static Local nLocal(String name) {
+        return new Local(name);
     }
 
     public static BinopExpr nLt(Value a, Value b) {

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalSplit.java
Patch:
@@ -140,7 +140,7 @@ private void doLocalRef(ValueBox vb, Phi[] frame) {
                     if (v.vt == VT.LOCAL) {
                         Phi p = frame[((Local) v)._ls_index];
                         if (p.value == null) {
-                            Local local = new Local("a_" + localId++, null);
+                            Local local = new Local("a_" + localId++);
                             ValueBox nvb = new ValueBox(local);
                             local._ls_vb = nvb;
                             p.setLocal(local);
@@ -269,7 +269,7 @@ public void merge(Phi[] sourceF, Stmt distStmt) {
                     if (e2.op1 instanceof Phi) {
                         Local local = (Local) trim(e2.op1);
                         if (local == null) {
-                            local = new Local("unRef" + unRef++, null);
+                            local = new Local("unRef" + unRef++);
                             local._ls_vb = new ValueBox(local);
                         }
                         locals.add(local);

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/ExceptionHandlerCurrect.java
Patch:
@@ -77,7 +77,7 @@ public void transform(IrMethod irMethod) {
                 irMethod.stmts.insertAftre(pre, g);
                 irMethod.stmts.insertBefore(st, lbl);
                 if (ex == null) {
-                    ex = Exprs.nLocal("unRefEx", null);
+                    ex = Exprs.nLocal("unRefEx");
                 }
                 irMethod.stmts.insertBefore(lbl, Stmts.nAssign(ex, Exprs.nExceptionRef(t.type)));
             }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -131,21 +131,21 @@ public void visitArguments(int total, int[] args) {
         {
             int i = 0;
             if ((irMethod.access & Opcodes.ACC_STATIC) == 0) {
-                Local _this = nLocal("this", this.irMethod.owner);
+                Local _this = nLocal("this");
                 list.add(nIdentity(_this, nThisRef(this.irMethod.owner)));
                 locals[args[i]] = _this;
                 i++;
             }
             int j = 0;
             for (; i < args.length; i++, j++) {
-                Local _arg = nLocal("arg_" + args[i], this.irMethod.args[j]);
+                Local _arg = nLocal("arg_" + args[i]);
                 list.add(nIdentity(_arg, nParameterRef(this.irMethod.args[j], j)));
                 locals[args[i]] = _arg;
             }
         }
         for (int i = 0; i < locals.length; i++) {
             if (locals[i] == null) {
-                locals[i] = nLocal("a" + i, null);
+                locals[i] = nLocal("a" + i);
             }
         }
     }

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/I63Test.java
Patch:
@@ -38,7 +38,7 @@ public void a() throws AnalyzerException {
 
         LabelStmt L1 = Stmts.nLabel();
         LabelStmt L2 = Stmts.nLabel();
-        Local left = Exprs.nLocal("a", null);
+        Local left = Exprs.nLocal("a");
         irMethod.locals.add(left);
         irMethod.stmts.add(L1);
         irMethod.stmts.add(Stmts.nAssign(left, Exprs.nStaticField(Type.getType("La/A;"), "a", Type.getType("La/A;"))));

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/Issue71Test.java
Patch:
@@ -49,7 +49,7 @@ public void shortTest() {
         irMethod.name = "test";
         irMethod.args = new Type[] {};
         irMethod.ret = Type.VOID_TYPE;
-        Local a = nLocal("a", null);
+        Local a = nLocal("a");
         irMethod.locals.add(a);
 
         irMethod.stmts.add(nAssign(a, nLong(0L)));

File: dex-reader/src/main/java/com/googlecode/dex2jar/util/ASMifierClassV.java
Patch:
@@ -154,6 +154,7 @@ public void visitEnd() {
 
             @Override
             public void visitEnd() {
+                m.s("mv.visitEnd();");
                 m.pop();
                 m.s("}");
                 m.pop();

File: dex-translator/src/test/java/res/I88.java
Patch:
@@ -25,5 +25,6 @@ public void a(@A int i) {
     @Target({ ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR, ElementType.FIELD, ElementType.LOCAL_VARIABLE,
             ElementType.METHOD, ElementType.PACKAGE, ElementType.PARAMETER, ElementType.TYPE })
     public @interface A {
+        String a() default "234";
     }
 }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -97,6 +97,8 @@ public V3MethodAdapter(int accessFlags, Method method, Map<Method, Exception> ex
         this.method = method;
         this.accessFlags = accessFlags;
         this.exceptions = exceptions;
+        // issue 88, the desc must set before visitParameterAnnotation
+        methodNode.desc = method.getDesc();
     }
 
     Annotation throwsAnnotation;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -59,8 +59,8 @@
 public class V3MethodAdapter implements DexMethodVisitor, Opcodes {
     private static Transformer endremove = new EndRemover();
     private static final Logger log = LoggerFactory.getLogger(V3MethodAdapter.class);
-    private static Transformer[] tses = new Transformer[] { new LocalSplit(), new LocalRemove(), new LocalType(),
-            new LocalCurrect() };
+    private static Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrect(), new LocalSplit(),
+            new LocalRemove(), new LocalType(), new LocalCurrect() };
     static {
         log.debug("InsnList.check=false");
         // Optimize Tree Analyzer

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/Issue71Test.java
Patch:
@@ -33,6 +33,7 @@
 import com.googlecode.dex2jar.ir.ts.LocalType;
 import com.googlecode.dex2jar.ir.ts.Transformer;
 import com.googlecode.dex2jar.v3.EndRemover;
+import com.googlecode.dex2jar.v3.ExceptionHandlerCurrect;
 import com.googlecode.dex2jar.v3.IrMethod2AsmMethod;
 import com.googlecode.dex2jar.v3.LocalCurrect;
 
@@ -54,8 +55,8 @@ public void shortTest() {
         irMethod.stmts.add(nAssign(a, nLong(0L)));
         irMethod.stmts.add(nAssign(a, nAdd(a, nLong(2))));
 
-        Transformer[] tses = new Transformer[] { new LocalSplit(), new LocalRemove(), new LocalType(),
-                new LocalCurrect() };
+        Transformer[] tses = new Transformer[] { new ExceptionHandlerCurrect(), new LocalSplit(), new LocalRemove(),
+                new LocalType(), new LocalCurrect() };
         Transformer endremove = new EndRemover();
         endremove.transform(irMethod);
 

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexCodeReader.java
Patch:
@@ -96,7 +96,7 @@
 
     private void findLabels(DataIn in, int instruction_size) {
         for (int baseOffset = in.getCurrentPosition(), currentOffset = 0; currentOffset < instruction_size; currentOffset = (in
-                .getCurrentPosition() - baseOffset) >>> 1) {
+                .getCurrentPosition() - baseOffset) / 2) {
             int opcode = in.readByte() & 0xff;
             try {
                 switch (opcode) {
@@ -318,7 +318,7 @@ private void acceptInsn(DataIn in, int instruction_size, DexOpcodeAdapter n) {
         // 处理指令
         int currentOffset = 0;
         for (int baseOffset = in.getCurrentPosition(); currentOffset < instruction_size; currentOffset = (in
-                .getCurrentPosition() - baseOffset) >>> 1) {
+                .getCurrentPosition() - baseOffset) / 2) {
             int opcode = in.readByte() & 0xff;
 
             n.offset(currentOffset);
@@ -363,7 +363,7 @@ private void acceptInsn(DataIn in, int instruction_size, DexOpcodeAdapter n) {
             }
             case F11n: {
                 int VV = in.readByte();
-                int B = VV >>> 4;
+                int B = VV >> 4;
                 n.x1n(opcode, VV & 0xF, B);
                 break;
             }

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/V3Test.java
Patch:
@@ -84,7 +84,7 @@ public void visitEnd() {
                             }
                         };
                     }
-                }));
+                }), DexFileReader.SKIP_DEBUG);
     }
 
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalRemove.java
Patch:
@@ -195,6 +195,7 @@ public void transform(IrMethod je) {
                             if (ie.ops[0].value == aLeft && ie.methodOwnerType.equals(c.type)) {
                                 list.remove(st);
                                 it.remove();
+                                je.locals.remove(stmt.op1.value);
                                 ValueBox[] vb = new ValueBox[ie.ops.length - 1];
                                 System.arraycopy(ie.ops, 1, vb, 0, vb.length);
                                 AssignStmt nas = Stmts.nAssign(as.op1,

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/Main.java
Patch:
@@ -36,6 +36,7 @@
 
 import com.googlecode.dex2jar.DexException;
 import com.googlecode.dex2jar.Method;
+import com.googlecode.dex2jar.ir.ET;
 import com.googlecode.dex2jar.reader.DexFileReader;
 import com.googlecode.dex2jar.util.ASMifierCodeV;
 import com.googlecode.dex2jar.util.Escape;
@@ -187,7 +188,8 @@ public static void doFile(File srcDex, File distJar) throws IOException {
 
     public static String getVersionString() {
         return "dex2jar version: reader-" + DexFileReader.class.getPackage().getImplementationVersion()
-                + ", translator-" + Main.class.getPackage().getImplementationVersion();
+                + ", translator-" + Main.class.getPackage().getImplementationVersion() + ", ir-"
+                + ET.class.getPackage().getImplementationVersion();
     }
 
     /**

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -196,7 +196,7 @@ public void visitEnd() {
         if (irMethod != null) {
             try {
                 if (irMethod.stmts.getSize() > 1) {
-                    indexLabelStmt4Debug(irMethod.stmts);
+                    // indexLabelStmt4Debug(irMethod.stmts);
                     endremove.transform(irMethod);
 
                     for (Transformer ts : tses) {

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexCodeReader.java
Patch:
@@ -294,7 +294,7 @@ public void accept(DexCodeVisitor dcv, int config) {
             }
         }
         // 处理debug信息
-        if (debug_off != 0 && (0 != (config & DexFileReader.SKIP_DEBUG))) {
+        if (debug_off != 0 && (0 == (config & DexFileReader.SKIP_DEBUG))) {
             in.pushMove(debug_off);
             try {
                 new DexDebugInfoReader(in, dex, instruction_size, this, localVariables, args).accept(dcv);

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/ResTest.java
Patch:
@@ -59,6 +59,7 @@ public void test() throws Exception {
             log.info("Testing res file {}", name);
             File dex = TestUtils.dex(e.getValue(), new File(dir, name + ".dex"));
             File distFile = new File(dex.getParentFile(), FilenameUtils.getBaseName(dex.getName()) + "_dex2jar.jar");
+            Main.doData(Main.readClasses(dex), distFile, null);
             Main.doFile(dex, distFile);
             TestUtils.checkZipFile(distFile);
         }

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/Annotation.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.googlecode.dex2jar;
+package com.googlecode.dex2jar.reader;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -24,7 +24,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-public class Annotation {
+/* default */class Annotation {
     public static class Item {
         public String name;
 

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/Constant.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.googlecode.dex2jar.reader;
 
-import com.googlecode.dex2jar.Annotation;
-import com.googlecode.dex2jar.DataIn;
 import com.googlecode.dex2jar.DexException;
 import com.googlecode.dex2jar.DexType;
 
@@ -26,7 +24,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-public class Constant {
+/* default */class Constant {
     private static final int VALUE_BYTE = 0;
     private static final int VALUE_SHORT = 2;
     private static final int VALUE_CHAR = 3;

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexAnnotationReader.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.googlecode.dex2jar.reader;
 
-import com.googlecode.dex2jar.Annotation;
-import com.googlecode.dex2jar.DataIn;
 import com.googlecode.dex2jar.Field;
 import com.googlecode.dex2jar.visitors.DexAnnotationAble;
 import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
@@ -27,7 +25,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-public class DexAnnotationReader {
+/* default */class DexAnnotationReader {
 
     private static final int VISIBILITY_BUILD = 0;
 

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexInternalOpcode.java
Patch:
@@ -19,7 +19,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * 
  */
-interface DexInternalOpcode {
+/* default */interface DexInternalOpcode {
 
     public static final int OP_MOVE_FROM16 = 2;
     public static final int OP_MOVE_16 = 3;
@@ -51,14 +51,14 @@ interface DexInternalOpcode {
     public static final int OP_AGET_BYTE = 72;
     public static final int OP_AGET_CHAR = 73;
     public static final int OP_AGET_SHORT = 74;
-    
+
     public static final int OP_APUT_WIDE = 76;
     public static final int OP_APUT_OBJECT = 77;
     public static final int OP_APUT_BOOLEAN = 78;
     public static final int OP_APUT_BYTE = 79;
     public static final int OP_APUT_CHAR = 80;
     public static final int OP_APUT_SHORT = 81;
-    
+
     public static final int OP_IGET_WIDE = 83;
     public static final int OP_IGET_OBJECT = 84;
     public static final int OP_IGET_BOOLEAN = 85;

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexOpcodeUtil.java
Patch:
@@ -49,7 +49,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-class DexOpcodeUtil implements DexOpcodes, DexInternalOpcode {
+/* default */class DexOpcodeUtil implements DexOpcodes, DexInternalOpcode {
     public static int format(int opcode) {
         switch (opcode) {
         case OP_GOTO:

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/OpcodeFormat.java
Patch:
@@ -1,6 +1,6 @@
 package com.googlecode.dex2jar.reader;
 
-public interface OpcodeFormat {
+/* default */public interface OpcodeFormat {
     int F10t = 1;
     int F10x = 2;
     int F11n = 3;

File: dex-reader/src/main/java/com/googlecode/dex2jar/util/ASMifierCodeV.java
Patch:
@@ -191,7 +191,7 @@ public void visitMoveStmt(int opcode, int toReg, int fromReg) {
 
     @Override
     public void visitReturnStmt(int opcode) {
-        m.s("code.visitReturnStmt(%s);", opcode);
+        m.s("code.visitReturnStmt(%s);", op(opcode));
     }
 
     @Override

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexClassVisitor.java
Patch:
@@ -28,16 +28,16 @@ public interface DexClassVisitor extends DexAnnotationAble {
     void visitSource(String file);
 
     /**
-     * 
+     * @param accessFlags
      * @param field
      * @param value
      *            the actual value, whose type must be {@link Byte}, {@link Boolean}, {@link Character}, {@link Short},
      *            {@link Integer}, {@link Long}, {@link Float}, {@link Double}, {@link String} or {@link DexType}.
      * @return
      */
-    DexFieldVisitor visitField(Field field, Object value);
+    DexFieldVisitor visitField(int accessFlags, Field field, Object value);
 
-    DexMethodVisitor visitMethod(Method method);
+    DexMethodVisitor visitMethod(int accessFlags, Method method);
 
     void visitEnd();
 }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalType.java
Patch:
@@ -97,7 +97,7 @@ private static void type(TypeBox tb, Type t) {
         tb.xtype.tb.xtype.type = tb.xtype.type;
     }
 
-    public static Type type(Value v) {
+    public static Type typeOf(Value v) {
         return get(v).xtype.type;
     }
 

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/Main.java
Patch:
@@ -106,7 +106,7 @@ public static void main(String... args) {
 
         for (String file : args) {
             File dex = new File(file);
-            final File gen = new File(FilenameUtils.getBaseName(file) + "_dex2jar.jar");
+            final File gen = new File(dex.getParentFile(),FilenameUtils.getBaseName(file) + "_dex2jar.jar");
             log.info("dex2jar {} -> {}", dex, gen);
             try {
                 doFile(dex, gen);

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexAnnotationReader.java
Patch:
@@ -19,7 +19,6 @@
 import com.googlecode.dex2jar.DataIn;
 import com.googlecode.dex2jar.Dex;
 import com.googlecode.dex2jar.Field;
-import com.googlecode.dex2jar.reader.Constant.DexType;
 import com.googlecode.dex2jar.visitors.DexAnnotationAble;
 import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
 
@@ -101,8 +100,6 @@ private static void doAccept(DexAnnotationVisitor dav, String name, Object o) {
         } else if (o instanceof Field) {
             Field f = (Field) o;
             dav.visitEnum(name, f.getType(), f.getName());
-        } else if (o instanceof DexType) {
-            dav.visitType(name, ((DexType) o).desc);
         } else {
             dav.visit(name, o);
         }

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexAnnotationAble.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.googlecode.dex2jar.visitors;
 
-import org.objectweb.asm.AnnotationVisitor;
 
 /**
  * 用于访问注解
@@ -33,5 +32,5 @@ public interface DexAnnotationAble {
      *            是否运行时可见
      * @return
      */
-    AnnotationVisitor visitAnnotation(String name, boolean visible);
+    DexAnnotationVisitor visitAnnotation(String name, boolean visible);
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexMethodAdapter.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.googlecode.dex2jar.visitors;
 
-import org.objectweb.asm.AnnotationVisitor;
 
 /**
  * @author Panxiaobo [pxb1988@gmail.com]
@@ -37,7 +36,7 @@ public DexMethodAdapter(DexMethodVisitor mv) {
      * 
      * @see com.googlecode.dex2jar.visitors.DexAnnotationAble#visitAnnotation(java.lang.String, boolean)
      */
-    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+    public DexAnnotationVisitor visitAnnotation(String name, boolean visible) {
         return mv.visitAnnotation(name, visible);
     }
 

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3AccessFlagsAdapter.java
Patch:
@@ -22,12 +22,11 @@
 import java.util.Set;
 import java.util.TreeSet;
 
-import org.objectweb.asm.AnnotationVisitor;
-
 import com.googlecode.dex2jar.Annotation;
 import com.googlecode.dex2jar.Annotation.Item;
 import com.googlecode.dex2jar.Field;
 import com.googlecode.dex2jar.Method;
+import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
 import com.googlecode.dex2jar.visitors.DexClassVisitor;
 import com.googlecode.dex2jar.visitors.DexFieldVisitor;
 import com.googlecode.dex2jar.visitors.DexFileVisitor;
@@ -70,7 +69,7 @@ public DexClassVisitor visit(int access_flags, final String className, String su
             protected List<Annotation> anns = new ArrayList<Annotation>();
 
             @Override
-            public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+            public DexAnnotationVisitor visitAnnotation(String name, boolean visible) {
                 Annotation ann = new Annotation(name, visible);
                 anns.add(ann);
                 return new V3AnnAdapter(ann);

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -30,6 +30,7 @@
 import com.googlecode.dex2jar.Annotation.Item;
 import com.googlecode.dex2jar.Field;
 import com.googlecode.dex2jar.Method;
+import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
 import com.googlecode.dex2jar.visitors.DexClassVisitor;
 import com.googlecode.dex2jar.visitors.DexFieldVisitor;
 import com.googlecode.dex2jar.visitors.DexMethodVisitor;
@@ -204,7 +205,7 @@ protected void build() {
 
     boolean isInnerClass = false;
 
-    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+    public DexAnnotationVisitor visitAnnotation(String name, boolean visible) {
         if (!isInnerClass) {
             isInnerClass = "Ldalvik/annotation/InnerClass;".equals(name);
         }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3FieldAdapter.java
Patch:
@@ -24,8 +24,9 @@
 import org.objectweb.asm.FieldVisitor;
 
 import com.googlecode.dex2jar.Annotation;
-import com.googlecode.dex2jar.Field;
 import com.googlecode.dex2jar.Annotation.Item;
+import com.googlecode.dex2jar.Field;
+import com.googlecode.dex2jar.visitors.DexAnnotationVisitor;
 import com.googlecode.dex2jar.visitors.DexFieldVisitor;
 
 
@@ -78,7 +79,7 @@ protected void build() {
      * 
      * @see com.googlecode.dex2jar.visitors.DexFieldVisitor#visitAnnotation(java.lang .String, boolean)
      */
-    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+    public DexAnnotationVisitor visitAnnotation(String name, boolean visible) {
         Annotation ann = new Annotation(name, visible);
         anns.add(ann);
         return new V3AnnAdapter(ann);

File: dex-reader/src/main/java/com/googlecode/dex2jar/Annotation.java
Patch:
@@ -48,11 +48,11 @@ public Item(String name, Object value) {
 
     /**
      * @param type
-     * @param visitable
+     * @param visible
      */
-    public Annotation(String type, boolean visitable) {
+    public Annotation(String type, boolean visible) {
         super();
         this.type = type;
-        this.visible = visitable;
+        this.visible = visible;
     }
 }
\ No newline at end of file

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexFileReader.java
Patch:
@@ -517,7 +517,7 @@ protected int acceptMethod(int lastIndex, DexClassVisitor cv, Map<Integer, Integ
                                 int field_annotation_offset = in.readIntx();
                                 in.pushMove(field_annotation_offset);
                                 try {
-                                    DexAnnotationAble dpav = dmv.visitParamesterAnnotation(j);
+                                    DexAnnotationAble dpav = dmv.visitParameterAnnotation(j);
                                     if (dpav != null)
                                         new DexAnnotationReader(this).accept(in, dpav);
                                 } catch (Exception e) {

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexAnnotationAble.java
Patch:
@@ -29,9 +29,9 @@ public interface DexAnnotationAble {
      * 
      * @param name
      *            注解名
-     * @param visitable
+     * @param visible
      *            是否运行时可见
      * @return
      */
-    AnnotationVisitor visitAnnotation(String name, boolean visitable);
+    AnnotationVisitor visitAnnotation(String name, boolean visible);
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexClassAdapter.java
Patch:
@@ -41,8 +41,8 @@ public DexClassAdapter(DexClassVisitor dcv) {
      * 
      * @see com.googlecode.dex2jar.visitors.DexClassVisitor#visitAnnotation(java.lang .String, boolean)
      */
-    public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
-        return dcv.visitAnnotation(name, visitable);
+    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+        return dcv.visitAnnotation(name, visible);
     }
 
     /*

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/DexMethodVisitor.java
Patch:
@@ -25,5 +25,5 @@ public interface DexMethodVisitor extends DexAnnotationAble {
 
     void visitEnd();
 
-    DexAnnotationAble visitParamesterAnnotation(int index);
+    DexAnnotationAble visitParameterAnnotation(int index);
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/visitors/EmptyVisitor.java
Patch:
@@ -53,7 +53,7 @@ public void visitEnd() {
      * 
      * @see com.googlecode.dex2jar.visitors.DexClassVisitor#visitAnnotation(java.lang .String, boolean)
      */
-    public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
+    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
 
         return this;
     }
@@ -100,9 +100,9 @@ public DexCodeVisitor visitCode() {
     /*
      * (non-Javadoc)
      * 
-     * @see com.googlecode.dex2jar.visitors.DexMethodVisitor#visitParamesterAnnotation (int)
+     * @see com.googlecode.dex2jar.visitors.DexMethodVisitor#visitParameterAnnotation (int)
      */
-    public DexAnnotationAble visitParamesterAnnotation(int index) {
+    public DexAnnotationAble visitParameterAnnotation(int index) {
 
         return this;
     }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3AccessFlagsAdapter.java
Patch:
@@ -70,8 +70,8 @@ public DexClassVisitor visit(int access_flags, final String className, String su
             protected List<Annotation> anns = new ArrayList<Annotation>();
 
             @Override
-            public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
-                Annotation ann = new Annotation(name, visitable);
+            public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+                Annotation ann = new Annotation(name, visible);
                 anns.add(ann);
                 return new V3AnnAdapter(ann);
             }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -204,11 +204,11 @@ protected void build() {
 
     boolean isInnerClass = false;
 
-    public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
+    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
         if (!isInnerClass) {
             isInnerClass = "Ldalvik/annotation/InnerClass;".equals(name);
         }
-        Annotation ann = new Annotation(name, visitable);
+        Annotation ann = new Annotation(name, visible);
         anns.add(ann);
         return new V3AnnAdapter(ann);
     }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3FieldAdapter.java
Patch:
@@ -78,8 +78,8 @@ protected void build() {
      * 
      * @see com.googlecode.dex2jar.visitors.DexFieldVisitor#visitAnnotation(java.lang .String, boolean)
      */
-    public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
-        Annotation ann = new Annotation(name, visitable);
+    public AnnotationVisitor visitAnnotation(String name, boolean visible) {
+        Annotation ann = new Annotation(name, visible);
         anns.add(ann);
         return new V3AnnAdapter(ann);
     }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Value.java
Patch:
@@ -87,7 +87,7 @@ public EnExpr(VT vt, ValueBox[] ops) {
      */
     public static enum VT {
 
-        ADD("+"), AND("&"), ARRAY, CAST, CHECK_CAST, CMP, CMPG, CMPL, CONSTANT, DIV("/"), EQ("=="), EXCEPTION_REF, FIELD, GE(
+        ADD("+"), AND("&"), ARRAY, CAST, CHECK_CAST, LCMP, FCMPG, FCMPL, DCMPG, DCMPL, CONSTANT, DIV("/"), EQ("=="), EXCEPTION_REF, FIELD, GE(
                 ">="), GT(">"), INSTANCE_OF, //
         INVOKE_INTERFACE, INVOKE_NEW, INVOKE_SPECIAL, INVOKE_STATIC, INVOKE_VIRTUAL, //
         LE("<="), LENGTH, LOCAL, LT("<"), MUL("*"), NE("!="), NEG, //

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/StmtListTest.java
Patch:
@@ -26,7 +26,7 @@ public void toStringTest() {
         list.add(Stmts.nIdentity(c, Exprs.nParameterRef(Type.LONG_TYPE, 1)));
         list.add(Stmts.nIdentity(d, Exprs.nParameterRef(Type.FLOAT_TYPE, 2)));
         list.add(Stmts.nIf(Exprs.nGt(b, Constant.nInt(0)), L1));
-        list.add(Stmts.nAssign(c, Exprs.nCast(d, Type.LONG_TYPE)));
+        list.add(Stmts.nAssign(c, Exprs.nCast(d, Type.FLOAT_TYPE, Type.LONG_TYPE)));
         list.add(L1);
         list.toString();
     }

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -281,7 +281,7 @@ public void visitClassStmt(int opcode, int a, int b, String type) {
             list.add(nAssign(locals[a], nInstanceOf(locals[b], Type.getType(type))));
             break;
         case OP_NEW_ARRAY:
-            list.add(nAssign(locals[a], nNewArray(Type.getType(type).getElementType(), locals[b])));
+            list.add(nAssign(locals[a], nNewArray(Type.getType(type.substring(1)), locals[b])));
             break;
         }
     }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalType.java
Patch:
@@ -73,6 +73,9 @@ static TypeBox get(Value v) {
     }
 
     public static Type merge(Type t2, Type t1) {
+        if (t1.getSort() == Type.ARRAY) {
+            return t1;
+        }
         return t2;
     }
 

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/LocalRemoverTest.java
Patch:
@@ -31,6 +31,7 @@
 import com.googlecode.dex2jar.ir.stmt.AssignStmt;
 import com.googlecode.dex2jar.ir.stmt.LabelStmt;
 import com.googlecode.dex2jar.ir.stmt.StmtList;
+import com.googlecode.dex2jar.ir.stmt.Stmts;
 import com.googlecode.dex2jar.ir.stmt.UnopStmt;
 import com.googlecode.dex2jar.ir.ts.LocalRemove;
 import com.googlecode.dex2jar.ir.ts.LocalSplit;
@@ -206,7 +207,7 @@ public void t7() {
         list.add(L1);
         list.add(nAssign(b, nString("123")));
         list.add(nAssign(ex, nInt(5)));
-        // list.add(nThrow(nInvokeNew(nNull, new Type[0], exType)));
+        list.add(Stmts.nLock(nInt(0)));
         list.add(L2);
         list.add(nGoto(L4));
         list.add(L3);

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/LocalSplitTest.java
Patch:
@@ -106,6 +106,8 @@ public void test3() {
         list.add(L1);
         list.add(nAssign(b, nString("123")));
         list.add(nAssign(ex, nString("test ex")));
+        list.add(Stmts.nLock(ex));
+        list.add(Stmts.nUnLock(ex));
         list.add(L2);
         list.add(nGoto(L4));
         list.add(L3);

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/IrMethod2AsmMethod.java
Patch:
@@ -545,6 +545,7 @@ private static void reBuildE2Expression(E2Expr e2, MethodNode asm) {
             break;
         case CMPG:
             asm.visitInsn(type.getSort() == Type.FLOAT ? FCMPG : DCMPG);
+            break;
         case CMPL:
             asm.visitInsn(type.getSort() == Type.FLOAT ? FCMPL : DCMPL);
             break;

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/TestUtils.java
Patch:
@@ -116,7 +116,7 @@ public static void checkZipFile(File zip) throws ZipException, Exception {
     public static void verify(final ClassReader cr) throws AnalyzerException, IllegalArgumentException,
             IllegalAccessException {
         ClassNode cn = new ClassNode();
-        cr.accept(cn, ClassReader.SKIP_DEBUG);
+        cr.accept(new CheckClassAdapter(cn, false), ClassReader.SKIP_DEBUG);
 
         Type syperType = cn.superName == null ? null : Type.getObjectType(cn.superName);
         List methods = cn.methods;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/EndRemover.java
Patch:
@@ -35,11 +35,11 @@ boolean isSimple(Stmt stmt) {
                 break;
             case LABEL:
             case NOP:
+            case UNLOCK:
                 break;
             case THROW:
             case IF:
             case LOCK:
-            case UNLOCK:
             case LOOKUP_SWITCH:
             case TABLE_SWITCH:
                 return false;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java
Patch:
@@ -95,7 +95,7 @@ private Type detectArray(E2Expr e2) {
         Type t2 = LocalType.type(e2.op1.value);
         if (t2 == null && e2.op1.value.vt == VT.ARRAY) {
             Type t3 = detectArray((E2Expr) e2.op1.value);
-            if (t3 != null && t3.getSize() == Type.ARRAY) {
+            if (t3 != null && t3.getSort() == Type.ARRAY) {
                 Type t4 = Type.getType(t3.getDescriptor().substring(1));
                 LocalType.type(e2, t4);
                 return t4;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ts/LocalRemove.java
Patch:
@@ -268,6 +268,8 @@ public void transform(IrMethod je) {
                     execStmt(vbs, st, preLocal);
                     for (ValueBox vb : vbs) {
                         switch (vb.value.vt) {
+                        case CONSTANT:
+                            continue;
                         case LOCAL:
                             tmp.push(vb);
                             continue;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Value.java
Patch:
@@ -91,7 +91,7 @@ public static enum VT {
                 ">="), GT(">"), INSTANCE_OF, //
         INVOKE_INTERFACE, INVOKE_NEW, INVOKE_SPECIAL, INVOKE_STATIC, INVOKE_VIRTUAL, //
         LE("<="), LENGTH, LOCAL, LT("<"), MUL("*"), NE("!="), NEG, //
-        NEW, NEW_ARRAY, NEW_MUTI_ARRAY, NOT, OR("|"), PARAMETER_REF, REM("%"), SHL(">>"), SHR("<<"), SUB("-"), THIS_REF, USHR(
+        NEW, NEW_ARRAY, NEW_MUTI_ARRAY, NOT, OR("|"), PARAMETER_REF, REM("%"), SHL("<<"), SHR(">>"), SUB("-"), THIS_REF, USHR(
                 ">>>"), XOR("^");
         private String name;
 

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -119,7 +119,7 @@ public static enum ST {
     /**
      * Used in Local Split, backward frame of the {@link Stmt}
      */
-    public ValueBox[] _ls_backward_frame;
+    public Object _ls_backward_frame;
     /**
      * Used in Local Split, forward frame of the {@link Stmt}
      */

File: dex-translator/src/test/java/com/googlecode/dex2jar/test/V3Test.java
Patch:
@@ -17,7 +17,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.zip.ZipOutputStream;
 
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.FilenameUtils;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/ValueBox.java
Patch:
@@ -29,6 +29,6 @@ public ValueBox(Value value) {
     }
 
     public String toString() {
-        return value.toString();
+        return value == null ? "[Null ValueBox]" : value.toString();
     }
 }

File: dex-ir/src/test/java/com/googlecode/dex2jar/ir/test/LocalSplitTest.java
Patch:
@@ -260,6 +260,6 @@ public void test6() {
 
         new LocalSplit().transform(jm);
 
-        Assert.assertTrue(jm.locals.size() == 12);
+        Assert.assertTrue(jm.locals.size() == 14);
     }
 }

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -579,9 +579,9 @@ public void xrc(int opcode, int cCCC, int aA, int bBBB) {
                     nArgs[i++] = args[j];
                     j += Type.getType(t).getSize();
                 }
-                dcv.visitMethodStmt(opcode, nArgs, m);
+                dcv.visitMethodStmt(nOpcode, nArgs, m);
             } else {
-                dcv.visitMethodStmt(opcode, args, m);
+                dcv.visitMethodStmt(nOpcode, args, m);
             }
             break;
         default:

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/IrMethod.java
Patch:
@@ -60,8 +60,7 @@ public String toString() {
         if (traps.size() > 0) {
             sb.append("=============\n");
             for (Trap trap : traps) {
-                sb.append(trap.start).append(" - ").append(trap.end).append(" > ").append(trap.handler).append(" // ")
-                        .append(trap.type == null ? null : ToStringUtil.toShortClassName(trap.type)).append("\n");
+                sb.append(trap).append('\n');
             }
         }
         sb.append("}");

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/TypeExpr.java
Patch:
@@ -46,6 +46,7 @@ public TypeExpr(VT vt, Value value, Type type) {
 
     public String toString() {
         switch (super.vt) {
+        case CHECK_CAST:
         case CAST:
             return "((" + ToStringUtil.toShortClassName(type) + ")" + op + ")";
         case INSTANCE_OF:

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/JumpStmt.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.googlecode.dex2jar.ir.ValueBox;
 import com.googlecode.dex2jar.ir.stmt.Stmt.E1Stmt;
-import com.googlecode.dex2jar.ir.stmt.Stmt.ST;
 
 /**
  * Represent a Jump statement, the op is null if it is a GOTO statement
@@ -57,9 +56,9 @@ public JumpStmt(ST type, ValueBox condition, LabelStmt target) {
     public String toString() {
         switch (st) {
         case GOTO:
-            return "GOTO " + target;
+            return "GOTO " + target.getDisplayName();
         case IF:
-            return "if " + op + " GOTO " + target;
+            return "if " + op + " GOTO " + target.getDisplayName();
         }
         return super.toString();
     }

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/Stmt.java
Patch:
@@ -16,6 +16,7 @@
 package com.googlecode.dex2jar.ir.stmt;
 
 import java.util.Set;
+import java.util.TreeSet;
 
 import com.googlecode.dex2jar.ir.ET;
 import com.googlecode.dex2jar.ir.ValueBox;

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/stmt/StmtList.java
Patch:
@@ -196,7 +196,7 @@ public void remove(Stmt stmt) {
         }
     }
 
-    public void replace(AssignStmt stmt, AssignStmt nas) {
+    public void replace(Stmt stmt, Stmt nas) {
         if (stmt.list == this) {
             indexIt(nas);
             nas.list = this;

File: dex-translator/src/main/java/com/googlecode/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -139,8 +139,8 @@ public AnnotationVisitor visitAnnotation(String name, boolean visitable) {
         return new V3AnnAdapter(ann);
     }
 
-    private static Transformer[] tses = new Transformer[] { new LocalSplit(), new LocalRemove(), new LocalType(),
-            new LocalCurrect() };
+    private static Transformer[] tses = new Transformer[] { new EndRemover(), new LocalSplit(), new LocalRemove(),
+            new LocalType(), new LocalCurrect() };
 
     /*
      * (non-Javadoc)

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/Value.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.googlecode.dex2jar.ir;
 
+
 /**
  * Represent a local/constant/expression
  * 
@@ -117,6 +118,8 @@ public String toString() {
      */
     final public VT vt;
 
+    public Object _lt_type;
+
     /**
      * 
      * @param vt

File: dex-ir/src/main/java/com/googlecode/dex2jar/ir/expr/BinopExpr.java
Patch:
@@ -24,11 +24,12 @@
  * 
  * @see VT#ADD
  * @see VT#AND
- * @see VT#CMPCMPG
+ * @see VT#CMP
+ * @see VT#CMPG
  * @see VT#CMPL
  * @see VT#DIV
  * @see VT#EQ
- * @see VT# GE
+ * @see VT#GE
  * @see VT#GT
  * @see VT#LE
  * @see VT#LT

File: dex-soot-rw/src/main/java/pxb/xjimple/JimpleMethod.java
Patch:
@@ -12,7 +12,9 @@ public class JimpleMethod {
 
     public String name;
     public List<Type> args = new ArrayList<Type>();
-    public List<Local> locals=new ArrayList<Local>();
+    public List<Local> locals = new ArrayList<Local>();
     public Type ret;
     public int access;
+
+    public List<Trap> traps = new ArrayList<Trap>();
 }

File: dex-soot-rw/src/main/java/pxb/xjimple/Value.java
Patch:
@@ -3,8 +3,8 @@
 public abstract class Value {
     public static enum VT {
 
-        ADD, AND, ARRAY, CAST, CMP, CMPG, CMPL, DIV, EQ, FIELD, GE, GT, INSTANCEOF, INTERFACE_INVOKE, LE, LENGTH, LT, MUL, NE, NEG, NEW, NEW_ARRAY, NEW_MUTI_ARRAY, OR, REM, SHL, SHR, SPECIAL_INVOKE, //
-        STATIC_INVOKE, SUB, USHR, VIRTUAL_INVOKE, XOR, LOCAL, CONSTANT, THIS_REF, PARAMETER_REF, EXCEPTION_REF
+        ADD, AND, ARRAY, CAST, CMP, CMPG, CMPL, DIV, EQ, FIELD, GE, GT, INSTANCEOF, INVOKE_INTERFACE, LE, LENGTH, LT, MUL, NE, NEG, NEW_ARRAY, NEW_MUTI_ARRAY, OR, REM, SHL, SHR, INVOKE_SPECIAL, //
+        INVOKE_STATIC, SUB, USHR, INVOKE_VIRTUAL, INVOKE_NEW, XOR, LOCAL, CONSTANT, THIS_REF, PARAMETER_REF, EXCEPTION_REF
     }
 
     final public VT vt;

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -46,7 +46,7 @@ public DexOpcodeAdapter(Dex dex, Map<Integer, Label> labels, DexCodeVisitor dcv)
     }
 
     private Label getLabel(int offset) {
-        return labels.get(this.offset + offset * 2);
+        return labels.get(this.offset + offset);
     }
 
     public void offset(int currentOffset) {

File: dex-reader/src/main/java/com/googlecode/dex2jar/reader/DexOpcodeUtil.java
Patch:
@@ -42,6 +42,7 @@
 
 import org.objectweb.asm.Opcodes;
 
+import com.googlecode.dex2jar.DexOpcodeDump;
 import com.googlecode.dex2jar.DexOpcodes;
 
 /**
@@ -932,7 +933,8 @@ public static int length(int opcode) {
         case OP_USHR_INT_LIT8:
             return 2;
         }
-        throw new RuntimeException("opcode length for " + opcode + " not found!");
+        throw new RuntimeException("opcode length for 0x" + Integer.toHexString(opcode) + DexOpcodeDump.dump(opcode)
+                + " not found!");
     }
 
 }

File: src/main/java/com/googlecode/dex2jar/asm/TypeNameAdapter.java
Patch:
@@ -182,7 +182,7 @@ public static String x(String s) {
     @Override
     public void visit(int version, int access, String name, String signature, String superName, String[] interfaces) {
         name = x(name);
-        superName = x(superName);
+        superName = superName == null ? null : x(superName);
         if (interfaces != null) {
             for (int i = 0; i < interfaces.length; i++) {
                 interfaces[i] = x(interfaces[i]);

File: src/main/java/com/googlecode/dex2jar/reader/Constant.java
Patch:
@@ -20,6 +20,7 @@
 import com.googlecode.dex2jar.Annotation;
 import com.googlecode.dex2jar.DataIn;
 import com.googlecode.dex2jar.Dex;
+import com.googlecode.dex2jar.DexException;
 
 
 /**
@@ -129,7 +130,7 @@ public static Object ReadConstant(Dex dex, DataIn in) {
             return ann;
         }
         default:
-            throw new RuntimeException("Not support yet.");
+            throw new DexException("Not support yet.");
         }
     }
 

File: src/main/java/com/googlecode/dex2jar/reader/DexCodeReader.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.googlecode.dex2jar.DataIn;
 import com.googlecode.dex2jar.Dex;
+import com.googlecode.dex2jar.DexException;
 import com.googlecode.dex2jar.DexOpcodeDump;
 import com.googlecode.dex2jar.DexOpcodeUtil;
 import com.googlecode.dex2jar.DexOpcodes;
@@ -459,7 +460,7 @@ public void accept(DexCodeVisitor dcv) {
             }
                 break;
             default:
-                throw new RuntimeException(String.format("Not support Opcode :0x%02x=%s @[0x%04x]", opcode, DexOpcodeDump.dump(opcode), currentOffset));
+                throw new DexException(String.format("Not support Opcode :0x%02x=%s @[0x%04x]", opcode, DexOpcodeDump.dump(opcode), currentOffset));
             }
         }
         // 结尾可能有一个Label

File: src/main/java/pxb/android/dex2jar/Annotation.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package pxb.android.dex2jar.v3;
+package pxb.android.dex2jar;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -24,7 +24,7 @@
  * @author Panxiaobo [pxb1988@gmail.com]
  * @version $Id$
  */
-public class Ann {
+public class Annotation {
     public static class Item {
         public String name;
 
@@ -50,7 +50,7 @@ public Item(String name, Object value) {
      * @param type
      * @param visitable
      */
-    public Ann(String type, boolean visitable) {
+    public Annotation(String type, boolean visitable) {
         super();
         this.type = type;
         this.visible = visitable;

File: src/main/java/pxb/android/dex2jar/reader/DexFileReader.java
Patch:
@@ -440,6 +440,7 @@ public String getType(int id) {
      * @return
      */
     protected int visitField(int lastIndex, DexClassVisitor dcv, Map<Integer, Integer> fieldAnnotationPositions, Object value) {
+        DataIn in = this.in;
         int diff = (int) in.readUnsignedLeb128();
         int field_id = lastIndex + diff;
         Field field = getField(field_id);
@@ -473,6 +474,7 @@ protected int visitField(int lastIndex, DexClassVisitor dcv, Map<Integer, Intege
      * @return
      */
     protected int visitMethod(int lastIndex, DexClassVisitor cv, Map<Integer, Integer> methodAnnos, Map<Integer, Integer> parameterAnnos) {
+        DataIn in = this.in;
         int diff = (int) in.readUnsignedLeb128();
         int method_id = lastIndex + diff;
         Method method = getMethod(method_id);

File: src/main/java/pxb/android/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -114,6 +114,8 @@ protected void build() {
                     continue;
                 } else if (ann.type.equals("Ldalvik/annotation/InnerClass;")) {
                     continue;
+                } else if (ann.type.equals("Ldalvik/annotation/EnclosingMethod;")) {
+                    continue;
                 }
                 AnnotationVisitor av = cv.visitAnnotation(ann.type, ann.visible);
                 V3AnnAdapter.accept(ann.items, av);

File: src/main/java/pxb/android/dex2jar/optimize/c/CAnalyzer.java
Patch:
@@ -15,7 +15,6 @@
  */
 package pxb.android.dex2jar.optimize.c;
 
-import org.objectweb.asm.tree.analysis.Analyzer;
 import org.objectweb.asm.tree.analysis.Interpreter;
 
 public class CAnalyzer extends Analyzer {

File: src/main/java/pxb/android/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -24,7 +24,6 @@
 import org.objectweb.asm.ClassVisitor;
 import org.objectweb.asm.MethodVisitor;
 import org.objectweb.asm.Opcodes;
-import org.objectweb.asm.commons.LocalVariablesSorter;
 import org.objectweb.asm.tree.MethodNode;
 
 import pxb.android.dex2jar.Method;
@@ -62,7 +61,7 @@ public V3MethodAdapter(ClassVisitor cv, Method method) {
             paramAnns[i] = new ArrayList<Ann>();
         }
         this.paramAnns = paramAnns;
-        methodNode.tryCatchBlocks = new ArrayList();
+        methodNode.tryCatchBlocks = new ArrayList<Object>();
     }
 
     private void build() {
@@ -169,7 +168,7 @@ public void visitEnd() {
                 (String[]) methodNode.exceptions.toArray(new String[methodNode.exceptions.size()]));
         if (mv != null) {
             try {
-                methodNode.accept(new LocalVariablesSorter(method.getAccessFlags(), method.getType().getDesc(), new LdcOptimizeAdapter(mv)));
+                methodNode.accept(new LdcOptimizeAdapter(mv));
             } catch (Exception e) {
                 throw new RuntimeException("Error visit method:" + this.method, e);
             }

File: src/main/java/pxb/android/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -460,7 +460,7 @@ public void visit(int opcode, int arg1, int arg2, int arg3) {
 			dcv.visitFilledNewArrayIns(OP_FILLED_NEW_ARRAY, dex.getType(arg2 & 0xFFFF), args);
 		}
 		case OP_CONST_STRING_JUMBO: {
-			dcv.visitLdcInsn(OP_CONST_STRING, dex.getString((arg3 << 16) | (arg2 & 0xFFFF)), arg1);
+			dcv.visitLdcInsn(OP_CONST_STRING, dex.getString(((arg3 << 16) & 0xFFFF) | (arg2 & 0xFFFF)), arg1);
 		}
 			break;
 		default:

File: src/main/java/pxb/android/dex2jar/v3/V3AnnAdapter.java
Patch:
@@ -55,7 +55,7 @@ public static void accept(List<Item> items, AnnotationVisitor av) {
 				Field e = (Field) v;
 				av.visitEnum(item.name, e.getType(), e.getName());
 			} else if (v instanceof Method) {
-				logger.warn("Find Method Annotation:{}", v);
+				logger.debug("Find Method Annotation:{}", v);
 			} else {
 				av.visit(item.name, v);
 			}

File: src/main/java/pxb/android/dex2jar/DexOpcodeUtil.java
Patch:
@@ -275,6 +275,7 @@ public static int getSize(int opcode) {
 		case OP_FILLED_NEW_ARRAY:
 		case OP_FILLED_NEW_ARRAY_RANGE:
 		case OP_CONST_WIDE_32:
+		case OP_CONST_STRING_JUMBO:
 			//
 		{
 			return 3;

File: src/main/java/pxb/android/dex2jar/reader/DexCodeReader.java
Patch:
@@ -275,8 +275,7 @@ public void accept(DexCodeVisitor dcv) {
 
 		// 处理指令
 		int currentOffset = 0;
-		for (int baseOffset = in.getCurrentPosition(); currentOffset < instruction_size * 2; currentOffset = in.getCurrentPosition()
-				- baseOffset) {
+		for (int baseOffset = in.getCurrentPosition(); currentOffset < instruction_size * 2; currentOffset = in.getCurrentPosition() - baseOffset) {
 			int opcode = in.readByte() & 0xff;
 			if (labels.containsKey(currentOffset))
 				dcv.visitLabel(labels.get(currentOffset));
@@ -433,7 +432,7 @@ public void accept(DexCodeVisitor dcv) {
 				throw new RuntimeException(String.format("Not support Opcode :0x%02x=%s @[0x%04x]", opcode, DexOpcodeDump.dump(opcode), currentOffset));
 			}
 		}
-		//结尾可能有一个Label
+		// 结尾可能有一个Label
 		if (labels.containsKey(currentOffset))
 			dcv.visitLabel(labels.get(currentOffset));
 		tadoa.visitOffset(currentOffset);

File: src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -1069,7 +1069,7 @@ public void visitTableSwitchInsn(int opcode, int reg, int first_case, int last_c
 
 	private void checkResult() {
 		if (typeInStack != null) {
-			if (Type.LONG_TYPE.equals(typeInStack)) {
+			if (Type.LONG_TYPE.equals(typeInStack) || Type.DOUBLE_TYPE.equals(typeInStack)) {
 				mv.visitInsn(POP2);
 			} else {
 				mv.visitInsn(POP);

File: src/main/java/pxb/android/dex2jar/reader/DexCodeReader.java
Patch:
@@ -78,8 +78,6 @@ public DexCodeReader(Dex dex, DataIn in, Method method) {
 	 */
 	public void accept(DexCodeVisitor dcv) {
 
-		if (method.toString().contains("org/mortbay/jetty/HttpTokens"))
-			System.out.println("");
 		DataIn in = this.in;
 		DexOpcodeAdapter tadoa = new DexOpcodeAdapter(dex, dcv, this.labels);
 		int total_registers_size = in.readShortx();

File: src/main/java/pxb/android/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -58,7 +58,8 @@ protected void build() {
 								Integer access = accessFlagsMap.get(name);
 								int d = name.lastIndexOf('$');
 								String innerName = name.substring(d + 1, name.length() - 1);
-								cv.visitInnerClass(name, className, innerName, access);
+								// TODO设置默认内部类修饰符
+								cv.visitInnerClass(name, className, innerName, access == null ? 0 : access);
 							}
 						}
 					}
@@ -99,8 +100,7 @@ protected void build() {
 	 * @param superClass
 	 * @param interfaceNames
 	 */
-	public V3ClassAdapter(Map<String, Integer> accessFlagsMap, ClassVisitor cv, int access_flags, String className,
-			String superClass, String[] interfaceNames) {
+	public V3ClassAdapter(Map<String, Integer> accessFlagsMap, ClassVisitor cv, int access_flags, String className, String superClass, String[] interfaceNames) {
 		super();
 		this.accessFlagsMap = accessFlagsMap;
 		this.cv = new TypeNameAdapter(cv);

File: src/main/java/pxb/android/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -449,8 +449,8 @@ public void visit(int opcode, int arg1, int arg2, int arg3) {
 				args[i] = arg3 + i;
 			}
 			dcv.visitFilledNewArrayIns(OP_FILLED_NEW_ARRAY, dex.getType(arg2), args);
-
 		}
+			break;
 		default:
 			throw new RuntimeException(String.format("Not support Opcode :[0x%04x] = %s", opcode, DexOpcodeDump.dump(opcode)));
 		}

File: src/main/java/pxb/android/dex2jar/DexOpcodeUtil.java
Patch:
@@ -273,6 +273,7 @@ public static int getSize(int opcode) {
 		case OP_CONST:
 
 		case OP_FILLED_NEW_ARRAY:
+		case OP_FILLED_NEW_ARRAY_RANGE:
 		case OP_CONST_WIDE_32:
 			//
 		{

File: src/main/java/pxb/android/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -448,7 +448,7 @@ public void visit(int opcode, int arg1, int arg2, int arg3) {
 			for (int i = 0; i < arg1; i++) {
 				args[i] = arg3 + i;
 			}
-			dcv.visitFilledNewArrayIns(opcode, dex.getType(arg2), args);
+			dcv.visitFilledNewArrayIns(OP_FILLED_NEW_ARRAY, dex.getType(arg2), args);
 
 		}
 		default:

File: src/main/java/pxb/android/dex2jar/optimize/B.java
Patch:
@@ -247,9 +247,6 @@ public void transform(MethodNode method) {
 		for (Block block : blocks) {
 			doBlock(block);
 		}
-
-		method.maxLocals = max * 2 + 2;
-		method.maxStack = max + 2;
 	}
 
 	/**

File: src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -1040,15 +1040,17 @@ public void visitMethodInsn(int opcode, Method method, int[] args) {
 		} else {
 			typeInStack = null;
 		}
-		stack(args.length);
+
 		switch (opcode) {
 		case OP_INVOKE_STATIC:
 		case OP_INVOKE_STATIC_RANGE: {
+			stack(args.length);
 			loadArgument(method, args, true);
 			mv.visitMethodInsn(INVOKESTATIC, method.getOwner(), method.getName(), method.getType().getDesc());
 		}
 			break;
 		default:
+			stack(1 + args.length);
 			loadArgument(method, args, false);
 			switch (opcode) {
 			case OP_INVOKE_DIRECT:

File: src/main/java/pxb/android/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -136,6 +136,7 @@ public DexCodeVisitor visitCode() {
 	 * 
 	 * @see pxb.android.dex2jar.visitors.DexMethodVisitor#visitEnd()
 	 */
+	@SuppressWarnings("unchecked")
 	public void visitEnd() {
 		build();
 		if (mv != null) {

File: src/main/java/pxb/android/dex2jar/ClassVisitorFactory.java
Patch:
@@ -19,7 +19,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: ClassVisitorFactory.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface ClassVisitorFactory {
 	public ClassVisitor create(String className);

File: src/main/java/pxb/android/dex2jar/DataIn.java
Patch:
@@ -19,7 +19,7 @@
  * 输入流
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DataIn.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DataIn {
 

File: src/main/java/pxb/android/dex2jar/DataInImpl.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DataInImpl.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DataInImpl implements DataIn {
 

File: src/main/java/pxb/android/dex2jar/Dex.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Dex.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface Dex {
 	/**

File: src/main/java/pxb/android/dex2jar/DexOpcodeDump.java
Patch:
@@ -19,7 +19,7 @@
  * 输出指令信息
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexOpcodeDump.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public final class DexOpcodeDump {
 	/**

File: src/main/java/pxb/android/dex2jar/DexOpcodeUtil.java
Patch:
@@ -21,7 +21,7 @@
  * 指令的工具类
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexOpcodeUtil.java 91 2010-03-19 09:45:09Z pxb1988 $
+ * @version $Id$
  */
 public final class DexOpcodeUtil implements DexOpcodes, Opcodes {
 	/**

File: src/main/java/pxb/android/dex2jar/DexOpcodes.java
Patch:
@@ -19,7 +19,7 @@
  * dex的所有指令
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexOpcodes.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public abstract interface DexOpcodes {
 	public static final int OP_NOP = 0;

File: src/main/java/pxb/android/dex2jar/Field.java
Patch:
@@ -19,7 +19,7 @@
  * 成员
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Field.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Field {
 	/**

File: src/main/java/pxb/android/dex2jar/Method.java
Patch:
@@ -19,7 +19,7 @@
  * 方法
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Method.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Method {
 	/**

File: src/main/java/pxb/android/dex2jar/Proto.java
Patch:
@@ -22,7 +22,7 @@
  * 参数和返回类型
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Proto.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Proto {
 	/**

File: src/main/java/pxb/android/dex2jar/Version.java
Patch:
@@ -19,7 +19,7 @@
  * 版本号
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Version.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface Version {
 	String version = "$Rev: 60 $";

File: src/main/java/pxb/android/dex2jar/asm/FieldAdapter.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: FieldAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class FieldAdapter implements FieldVisitor {
 	protected FieldVisitor fv;

File: src/main/java/pxb/android/dex2jar/asm/PDescMethodVisitor.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: PDescMethodVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 @SuppressWarnings("serial")
 public class PDescMethodVisitor extends MethodAdapter implements Opcodes {

File: src/main/java/pxb/android/dex2jar/asm/PMethodVisitor.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: PMethodVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 @SuppressWarnings("serial")
 public class PMethodVisitor extends MethodAdapter implements Opcodes {

File: src/main/java/pxb/android/dex2jar/asm/TypeNameAdapter.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: TypeNameAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class TypeNameAdapter extends ClassAdapter {
 

File: src/main/java/pxb/android/dex2jar/dump/Dump.java
Patch:
@@ -41,7 +41,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Dump.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Dump implements DexFileVisitor {
 	private int class_count = 0;

File: src/main/java/pxb/android/dex2jar/dump/DumpDexCodeAdapter.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DumpDexCodeAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DumpDexCodeAdapter extends DexCodeAdapter implements DexOpcodes {
 	// private static final Logger log =

File: src/main/java/pxb/android/dex2jar/optimize/A.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: A.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class A extends MethodTransformerAdapter implements Opcodes {
 

File: src/main/java/pxb/android/dex2jar/optimize/B.java
Patch:
@@ -51,7 +51,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: B.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 @SuppressWarnings("unchecked")
 public class B extends MethodTransformerAdapter implements Opcodes {

File: src/main/java/pxb/android/dex2jar/optimize/LdcOptimizeAdapter.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: LdcOptimizeAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class LdcOptimizeAdapter extends MethodAdapter implements Opcodes {
 

File: src/main/java/pxb/android/dex2jar/optimize/MethodTransformer.java
Patch:
@@ -19,7 +19,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: MethodTransformer.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface MethodTransformer {
 	public void transform(MethodNode method);

File: src/main/java/pxb/android/dex2jar/optimize/MethodTransformerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: MethodTransformerAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class MethodTransformerAdapter implements MethodTransformer {
 	protected MethodTransformer tr;

File: src/main/java/pxb/android/dex2jar/optimize/Util.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Util.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Util implements Opcodes {
 	public static boolean needBreak(AbstractInsnNode ins) {

File: src/main/java/pxb/android/dex2jar/reader/Constant.java
Patch:
@@ -24,7 +24,7 @@
  * 读取静态常量
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Constant.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Constant {
 

File: src/main/java/pxb/android/dex2jar/reader/DexAnnotationReader.java
Patch:
@@ -30,7 +30,7 @@
  * 读取注解
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexAnnotationReader.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexAnnotationReader {
 	private Dex dex;

File: src/main/java/pxb/android/dex2jar/reader/DexCodeReader.java
Patch:
@@ -34,7 +34,7 @@
  * 用于读取方法的指令
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexCodeReader.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexCodeReader implements DexOpcodes {
 	private static final Logger log = LoggerFactory.getLogger(DexCodeReader.class);

File: src/main/java/pxb/android/dex2jar/reader/DexDebugInfoReader.java
Patch:
@@ -28,7 +28,7 @@
  * 读取debug信息
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexDebugInfoReader.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexDebugInfoReader {
 	public static final int DBG_END_SEQUENCE = 0;

File: src/main/java/pxb/android/dex2jar/reader/DexFileReader.java
Patch:
@@ -43,7 +43,7 @@
  * 读取dex文件
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexFileReader.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexFileReader implements Dex {
 	private static final Logger log = LoggerFactory.getLogger(DexFileReader.class);

File: src/main/java/pxb/android/dex2jar/reader/DexOpcodeAdapter.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexOpcodeAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexOpcodeAdapter implements DexOpcodes {
 	private DexCodeVisitor dcv;

File: src/main/java/pxb/android/dex2jar/v3/Ann.java
Patch:
@@ -22,7 +22,7 @@
  * 注解
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Ann.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Ann {
 	public static class Item {

File: src/main/java/pxb/android/dex2jar/v3/Main.java
Patch:
@@ -30,7 +30,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: Main.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class Main {
 

File: src/main/java/pxb/android/dex2jar/v3/V3.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3 implements DexFileVisitor {
 	protected ClassVisitorFactory cvf;

File: src/main/java/pxb/android/dex2jar/v3/V3AccessFlagsAdapter.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3AccessFlagsAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3AccessFlagsAdapter implements DexFileVisitor {
 	Map<String, Integer> map = new HashMap<String, Integer>();

File: src/main/java/pxb/android/dex2jar/v3/V3AnnAdapter.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3AnnAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3AnnAdapter implements DexAnnotationVisitor {
 

File: src/main/java/pxb/android/dex2jar/v3/V3ClassAdapter.java
Patch:
@@ -35,7 +35,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3ClassAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3ClassAdapter implements DexClassVisitor {
 

File: src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java
Patch:
@@ -34,7 +34,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3CodeAdapter.java 91 2010-03-19 09:45:09Z pxb1988 $
+ * @version $Id$
  */
 public class V3CodeAdapter implements DexCodeVisitor, Opcodes, DexOpcodes {
 	protected Method method;

File: src/main/java/pxb/android/dex2jar/v3/V3FieldAdapter.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3FieldAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3FieldAdapter implements DexFieldVisitor {
 	protected List<Ann> anns = new ArrayList<Ann>();

File: src/main/java/pxb/android/dex2jar/v3/V3MethodAdapter.java
Patch:
@@ -40,7 +40,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: V3MethodAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class V3MethodAdapter implements DexMethodVisitor, Opcodes {
 	protected List<Ann> anns = new ArrayList<Ann>();

File: src/main/java/pxb/android/dex2jar/visitors/DexAnnotationAble.java
Patch:
@@ -19,7 +19,7 @@
  * 用于访问注解
  * 
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexAnnotationAble.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexAnnotationAble {
 	/**

File: src/main/java/pxb/android/dex2jar/visitors/DexAnnotationAsmAdapter.java
Patch:
@@ -19,7 +19,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexAnnotationAsmAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexAnnotationAsmAdapter implements DexAnnotationVisitor {
 	AnnotationVisitor av;

File: src/main/java/pxb/android/dex2jar/visitors/DexAnnotationVisitor.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexAnnotationVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexAnnotationVisitor {
 	/**

File: src/main/java/pxb/android/dex2jar/visitors/DexClassAdapter.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexClassAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexClassAdapter implements DexClassVisitor {
 	protected DexClassVisitor dcv;

File: src/main/java/pxb/android/dex2jar/visitors/DexClassVisitor.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexClassVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexClassVisitor extends DexAnnotationAble {
 

File: src/main/java/pxb/android/dex2jar/visitors/DexCodeAdapter.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexCodeAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexCodeAdapter implements DexCodeVisitor {
 	protected DexCodeVisitor dcv;

File: src/main/java/pxb/android/dex2jar/visitors/DexCodeVisitor.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexCodeVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexCodeVisitor {
 	Object ZERO_OR_NULL = new Object() {

File: src/main/java/pxb/android/dex2jar/visitors/DexFieldVisitor.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexFieldVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexFieldVisitor extends DexAnnotationAble {
 

File: src/main/java/pxb/android/dex2jar/visitors/DexFileAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexFileAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexFileAdapter implements DexFileVisitor {
 	protected DexFileVisitor dfv;

File: src/main/java/pxb/android/dex2jar/visitors/DexFileVisitor.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexFileVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexFileVisitor {
 	public DexClassVisitor visit(int access_flags, String className, String superClass, String... interfaceNames);

File: src/main/java/pxb/android/dex2jar/visitors/DexMethodAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexMethodAdapter.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexMethodAdapter implements DexMethodVisitor {
 	protected DexMethodVisitor mv;

File: src/main/java/pxb/android/dex2jar/visitors/DexMethodVisitor.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexMethodVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexMethodVisitor extends DexAnnotationAble {
 

File: src/main/java/pxb/android/dex2jar/visitors/DexOpcodeVisitor.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexOpcodeVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public interface DexOpcodeVisitor {
 	public void visit(int opcode, int arg1);

File: src/main/java/pxb/android/dex2jar/visitors/DexParameterAnnotationVisitor.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: DexParameterAnnotationVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class DexParameterAnnotationVisitor implements DexAnnotationAble {
 

File: src/main/java/pxb/android/dex2jar/visitors/EmptyVisitor.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * @author Panxiaobo [pxb1988@126.com]
- * @version $Id: EmptyVisitor.java 90 2010-03-09 05:31:33Z pxb1988 $
+ * @version $Id$
  */
 public class EmptyVisitor implements DexFileVisitor, DexClassVisitor, DexMethodVisitor, DexFieldVisitor,
 		DexCodeVisitor, DexAnnotationVisitor {

