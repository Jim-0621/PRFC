File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapEditText.java
Patch:
@@ -61,7 +61,7 @@ private void initialise(AttributeSet attrs) {
         try {
             this.rounded = a.getBoolean(R.styleable.BootstrapEditText_roundedCorners, false);
 
-            int typeOrdinal = a.getInt(R.styleable.AwesomeTextView_bootstrapBrand, -1);
+            int typeOrdinal = a.getInt(R.styleable.BootstrapEditText_bootstrapBrand, -1);
             int sizeOrdinal = a.getInt(R.styleable.BootstrapEditText_bootstrapSize, -1);
 
             this.bootstrapBrand = DefaultBootstrapBrand.fromAttributeValue(typeOrdinal);

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapEditText.java
Patch:
@@ -61,7 +61,7 @@ private void initialise(AttributeSet attrs) {
         try {
             this.rounded = a.getBoolean(R.styleable.BootstrapEditText_roundedCorners, false);
 
-            int typeOrdinal = a.getInt(R.styleable.AwesomeTextView_bootstrapBrand, -1);
+            int typeOrdinal = a.getInt(R.styleable.BootstrapEditText_bootstrapBrand, -1);
             int sizeOrdinal = a.getInt(R.styleable.BootstrapEditText_bootstrapSize, -1);
 
             this.bootstrapBrand = DefaultBootstrapBrand.fromAttributeValue(typeOrdinal);

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/AwesomeTextView.java
Patch:
@@ -113,11 +113,13 @@ private void initialise(AttributeSet attrs) {
             markdownText = a.getString(R.styleable.AwesomeTextView_bootstrapText);
 
             setClickable(clickable); // allows view to reach android:state_pressed
+
+            int gravity = a.getInt(R.styleable.AwesomeTextView_android_gravity, Gravity.CENTER);
+            setGravity(gravity);
         }
         finally {
             a.recycle();
         }
-        setGravity(Gravity.CENTER);
 
         if (markdownText != null) {
             setMarkdownText(markdownText);

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapLabel.java
Patch:
@@ -49,7 +49,7 @@ private void initialise(AttributeSet attrs) {
 
         try {
             int attrValue = a.getInt(R.styleable.BootstrapLabel_bootstrapHeading, 5);
-            this.roundable = a.getBoolean(R.styleable.BootstrapButton_roundedCorners, false);
+            this.roundable = a.getBoolean(R.styleable.BootstrapLabel_roundedCorners, false);
 
             this.bootstrapHeading = DefaultBootstrapHeading.fromAttributeValue(attrValue);
         }

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/ProgressView.java
Patch:
@@ -1,7 +1,5 @@
 package com.beardedhen.androidbootstrap.api.view;
 
-import android.support.annotation.IntRange;
-
 /**
  * Views which implement this interface visually display ongoing progress to users
  */
@@ -57,7 +55,8 @@ public interface ProgressView {
 
 
     /**
-     * Used for settings the maxprogress. Also check if Cumulative progress is smaller than the max before asigning, see {@link #checkCumulativeSmallerThanMax}.
+     * Used for settings the maxprogress. Also check if Cumulative progress is smaller than the
+     * max before asigning.
      * @param maxProgress the maxProgress value
      */
     void setMaxProgress(int maxProgress);

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/font/MaterialIcons.java
Patch:
@@ -10,8 +10,6 @@
  * See the <a href="https://design.google.com/icons//">link</a> for icons
  * . <b>Please note that icon codes use underscores rather than hyphens in this
  * library.</b> All icons are prefixed with md_ EG: md_build.
- *
- * Most of this class is auto genarated by the project <a href="">here</a>.
  */
 public class MaterialIcons implements IconSet {
 

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/TypefaceProvider.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.beardedhen.androidbootstrap.font.FontAwesome;
 import com.beardedhen.androidbootstrap.font.IconSet;
+import com.beardedhen.androidbootstrap.font.MaterialIcons;
 import com.beardedhen.androidbootstrap.font.Typicon;
 
 import java.util.Collection;
@@ -44,9 +45,11 @@ public static Typeface getTypeface(Context context, IconSet iconSet) {
     public static void registerDefaultIconSets() {
         final FontAwesome fontAwesome = new FontAwesome();
         final Typicon typicon = new Typicon();
+        final MaterialIcons materialIcons = new MaterialIcons();
 
         REGISTERED_ICON_SETS.put(fontAwesome.fontPath(), fontAwesome);
         REGISTERED_ICON_SETS.put(typicon.fontPath(), typicon);
+        REGISTERED_ICON_SETS.put(materialIcons.fontPath(), materialIcons);
     }
 
     /**

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/defaults/DefaultBootstrapBrand.java
Patch:
@@ -102,5 +102,4 @@ public static DefaultBootstrapBrand fromAttributeValue(int attrValue) {
         return color;
     }
 
-
 }

File: sample/src/main/java/com/fractalwrench/androidbootstrap/sample/AwesomeTextViewExample.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.beardedhen.androidbootstrap.AwesomeTextView;
 import com.beardedhen.androidbootstrap.BootstrapText;
+import com.beardedhen.androidbootstrap.font.MaterialIcons;
 
 import butterknife.Bind;
 import butterknife.OnClick;
@@ -52,6 +53,7 @@ private void setupFontAwesomeText() {
         mixAndMatch.setBootstrapText(new BootstrapText.Builder(this)
                 .addFontAwesomeIcon(FA_ANCHOR)
                 .addTypicon(TY_CODE)
+                .addMaterialIcon(MaterialIcons.MD_PHOTO)
                 .build());
     }
 

File: sample/src/main/java/com/fractalwrench/androidbootstrap/sample/BootstrapButtonExample.java
Patch:
@@ -1,6 +1,7 @@
 package com.fractalwrench.androidbootstrap.sample;
 
 import android.os.Bundle;
+import android.util.Log;
 
 import com.beardedhen.androidbootstrap.BootstrapButton;
 import com.beardedhen.androidbootstrap.api.defaults.DefaultBootstrapBrand;

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapProgressBar.java
Patch:
@@ -42,7 +42,7 @@
  * BootstrapProgressBar displays determinate progress to the user, and is colored with BootstrapBrands.
  * Striped effects and progress update animations are supported out of the box.
  *
- * Its possible to group multiple together in an {@link BootstrapProgressBarGroup} to give the appearance of a <a href="http://getbootstrap.com/components/#progress-stacked">stacked</a> progressbar.
+ * Its possible to group multiple together in an {@link com.beardedhen.androidbootstrap.BootstrapProgressBarGroup BootstrapProgressBarGroup} to give the appearance of a <a href="http://getbootstrap.com/components/#progress-stacked">stacked</a> progressbar.
  */
 public class BootstrapProgressBar extends View implements ProgressView, BootstrapBrandView,
         RoundableView, BootstrapSizeView, Animator.AnimatorListener, ValueAnimator.AnimatorUpdateListener {

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapProgressBar.java
Patch:
@@ -20,7 +20,6 @@
 import android.support.annotation.NonNull;
 import android.util.AttributeSet;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.ViewParent;
 import android.view.animation.DecelerateInterpolator;
 import android.view.animation.LinearInterpolator;
@@ -119,7 +118,7 @@ private void initialise(AttributeSet attrs) {
             this.userProgress = a.getInt(R.styleable.BootstrapProgressBar_bootstrapProgress, 0);
             this.maxProgress = a.getInt(R.styleable.BootstrapProgressBar_bootstrapMaxProgress, 100);
 
-            int typeOrdinal = a.getInt(R.styleable.AwesomeTextView_bootstrapBrand, -1);
+            int typeOrdinal = a.getInt(R.styleable.BootstrapProgressBar_bootstrapBrand, -1);
             int sizeOrdinal = a.getInt(R.styleable.BootstrapProgressBar_bootstrapSize, -1);
 
             this.bootstrapSize = DefaultBootstrapSize.fromAttributeValue(sizeOrdinal).scaleFactor();

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -83,7 +83,7 @@ private void initialise(AttributeSet attrs) {
             this.badgeText = a.getString(R.styleable.BootstrapButton_badgeText);
 
             int sizeOrdinal = a.getInt(R.styleable.BootstrapButton_bootstrapSize, -1);
-            int modeOrdinal = a.getInt(R.styleable.BootstrapButtonGroup_buttonMode, -1);
+            int modeOrdinal = a.getInt(R.styleable.BootstrapButton_buttonMode, -1);
 
             bootstrapSize = DefaultBootstrapSize.fromAttributeValue(sizeOrdinal).scaleFactor();
             buttonMode = ButtonMode.fromAttributeValue(modeOrdinal);
@@ -180,7 +180,6 @@ private void initialise(AttributeSet attrs) {
     }
 
     @Override public boolean onTouchEvent(@NonNull MotionEvent event) {
-
         switch (buttonMode) {
             case REGULAR:
                 return super.onTouchEvent(event);

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapBaseThumbnail.java
Patch:
@@ -42,7 +42,6 @@ abstract class BootstrapBaseThumbnail extends ImageView implements BootstrapBran
 
     protected float baselineBorderWidth;
     protected float baselineOuterBorderWidth;
-
     protected float bootstrapSize;
 
     protected Bitmap sourceBitmap;

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapBaseThumbnail.java
Patch:
@@ -42,7 +42,6 @@ abstract class BootstrapBaseThumbnail extends ImageView implements BootstrapBran
 
     protected float baselineBorderWidth;
     protected float baselineOuterBorderWidth;
-
     protected float bootstrapSize;
 
     protected Bitmap sourceBitmap;

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapBaseThumbnail.java
Patch:
@@ -28,8 +28,8 @@
 import static android.widget.ImageView.ScaleType.CENTER_CROP;
 
 /**
- * Parent class of Circle & Square Thumbnails - contains boilerplate code required to get
- * BootstrapBrand & borders working via getters/setters. Also overrides ImageView so that only
+ * Parent class of Circle and Square Thumbnails - contains boilerplate code required to get
+ * BootstrapBrand and borders working via getters/setters. Also overrides ImageView so that only
  * CENTER_CROP is allowed, and a callback is fired whenever the image source changes.
  */
 abstract class BootstrapBaseThumbnail extends ImageView implements BootstrapBrandView,

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapCircleThumbnail.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * BootstrapCircleThumbnails display a circular image with an optional border, that can be themed
- * using BootstrapBrand colors. The view extends ImageView, and will automatically center crop &
+ * using BootstrapBrand colors. The view extends ImageView, and will automatically center crop and
  * scale images.
  */
 public class BootstrapCircleThumbnail extends BootstrapBaseThumbnail {
@@ -72,11 +72,9 @@ protected void initialise(AttributeSet attrs) {
 
     /**
      * This method is called when the Circle Image needs to be recreated due to changes in size etc.
-     * <p/>
      * A Paint object uses a BitmapShader to draw a center-cropped, circular image onto the View
      * Canvas. A Matrix on the BitmapShader scales the original Bitmap to match the current view
      * bounds, avoiding any inefficiencies in duplicating Bitmaps.
-     * <p/>
      * <a href="http://www.curious-creature.com/2012/12/11/android-recipe-1-image-with-rounded-corners">
      * Further reading</a>
      */

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/defaults/DefaultBootstrapHeading.java
Patch:
@@ -8,7 +8,7 @@
 import com.beardedhen.androidbootstrap.utils.DimenUtils;
 
 /**
- * Bootstrap provides styling for elements H1-H6, and sets their text size & padding using the
+ * Bootstrap provides styling for elements H1-H6, and sets their text size and padding using the
  * values supplied here.
  */
 public enum DefaultBootstrapHeading implements BootstrapHeading {

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/BootstrapHeadingView.java
Patch:
@@ -5,15 +5,15 @@
 import com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading;
 
 /**
- * Views which implement this interface change their text size & padding according to the
+ * Views which implement this interface change their text size and padding according to the
  * given Bootstrap Heading
  */
 public interface BootstrapHeadingView {
 
     String KEY = "com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading";
 
     /**
-     * Sets this view to use the given Bootstrap Heading, changing its text size & padding
+     * Sets this view to use the given Bootstrap Heading, changing its text size and padding
      *
      * @param bootstrapHeading the Bootstrap Heading
      */

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/font/Typicon.java
Patch:
@@ -10,7 +10,7 @@
 /**
  * Maps Typicons Icon Codes to unicode characters, allowing its use in AwesomeTextView.
  * See the <a href='http://typicons.com/'>Cheatsheet</a> for icon
- * code reference. <b>Please note that icon codes have been prefixed with "ty_".
+ * code reference. <b>Please note that icon codes have been prefixed with "ty_".</b>
  * For example, "adjust_brightness" would become "ty_adjust_brightness".
  */
 public class Typicon implements IconSet {

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapDrawableFactory.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.res.ColorStateList;
+import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
 import android.graphics.drawable.LayerDrawable;
@@ -33,7 +34,9 @@ static Drawable bootstrapButton(Context context,
         GradientDrawable disabledGd = new GradientDrawable();
 
         if (showOutline) {
+            defaultGd.setColor(Color.TRANSPARENT);
             activeGd.setColor(brand.activeFill(context));
+            disabledGd.setColor(Color.TRANSPARENT);
         }
         else {
             defaultGd.setColor(brand.defaultFill(context));

File: sample/src/main/java/com/example/sample/BootstrapButtonExample.java
Patch:
@@ -17,7 +17,7 @@ public class BootstrapButtonExample extends BaseActivity {
         return R.layout.example_bootstrap_button;
     }
 
-    private DefaultBootstrapSize size = DefaultBootstrapSize.MD;
+    private DefaultBootstrapSize size = DefaultBootstrapSize.LG;
 
     @Override protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: sample/src/main/java/com/example/sample/BootstrapButtonExample.java
Patch:
@@ -72,6 +72,9 @@ public class BootstrapButtonExample extends BaseActivity {
                 exampleTheme.setBootstrapBrand(DefaultBootstrapBrand.INFO);
                 break;
             case INFO:
+                exampleTheme.setBootstrapBrand(DefaultBootstrapBrand.SECONDARY);
+                break;
+            case SECONDARY:
                 exampleTheme.setBootstrapBrand(DefaultBootstrapBrand.REGULAR);
                 break;
             case REGULAR:

File: sample/src/main/java/com/example/sample/BootstrapButtonGroupExample.java
Patch:
@@ -75,6 +75,9 @@ public class BootstrapButtonGroupExample extends BaseActivity {
                 brandChange.setBootstrapBrand(DefaultBootstrapBrand.DANGER);
                 break;
             case DANGER:
+                brandChange.setBootstrapBrand(DefaultBootstrapBrand.SECONDARY);
+                break;
+            case SECONDARY:
                 brandChange.setBootstrapBrand(DefaultBootstrapBrand.REGULAR);
                 break;
             case REGULAR:

File: sample/src/main/java/com/example/sample/BootstrapLabelExample.java
Patch:
@@ -70,6 +70,9 @@ public class BootstrapLabelExample extends BaseActivity {
                 lblChangeColor.setBootstrapBrand(DefaultBootstrapBrand.DANGER);
                 break;
             case DANGER:
+                lblChangeColor.setBootstrapBrand(DefaultBootstrapBrand.SECONDARY);
+                break;
+            case SECONDARY:
                 lblChangeColor.setBootstrapBrand(DefaultBootstrapBrand.REGULAR);
                 break;
             case REGULAR:

File: sample/src/main/java/com/example/sample/BootstrapProgressBarExample.java
Patch:
@@ -95,8 +95,10 @@ public ChangeState next() {
                 changeExample.setBootstrapBrand(DefaultBootstrapBrand.DANGER);
                 break;
             case DANGER:
-                changeExample.setBootstrapBrand(DefaultBootstrapBrand.REGULAR);
+                changeExample.setBootstrapBrand(DefaultBootstrapBrand.SECONDARY);
                 break;
+            case SECONDARY:
+                changeExample.setBootstrapBrand(DefaultBootstrapBrand.REGULAR);
             case REGULAR:
                 changeExample.setBootstrapBrand(DefaultBootstrapBrand.PRIMARY);
                 break;

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapThumbnail.java
Patch:
@@ -10,7 +10,7 @@
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
-import com.beardedhen.androidbootstrap.font.FontAwesomeIcon;
+import com.beardedhen.androidbootstrap.font.FontAwesomeIconSet;
 import com.beardedhen.androidbootstrap.font.TypefaceProvider;
 
 
@@ -160,7 +160,7 @@ private void initialise(AttributeSet attrs) {
         placeholder.setLayoutParams(new LinearLayout.LayoutParams(width, height));
 
         //set the font awesome icon typeface
-        dimensionsLabel.setTypeface(TypefaceProvider.getTypeface(getContext(), FontAwesomeIcon.FONT_PATH));
+        dimensionsLabel.setTypeface(TypefaceProvider.getTypeface(getContext(), FontAwesomeIconSet.FONT_PATH));
 
         this.setClickable(true);
 

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/font/AwesomeTypefaceSpan.java
Patch:
@@ -16,17 +16,17 @@ public class AwesomeTypefaceSpan extends TypefaceSpan {
     private final FontIcon fontIcon;
 
     public AwesomeTypefaceSpan(Context context, FontIcon fontIcon) {
-        super(fontIcon.fontPath().toString());
+        super(fontIcon.iconSet().fontPath().toString());
         this.context = context.getApplicationContext();
         this.fontIcon = fontIcon;
     }
 
     @Override public void updateDrawState(@NonNull TextPaint ds) {
-        ds.setTypeface(TypefaceProvider.getTypeface(context, fontIcon));
+        ds.setTypeface(TypefaceProvider.getTypeface(context, fontIcon.iconSet()));
     }
 
     @Override public void updateMeasureState(@NonNull TextPaint paint) {
-        paint.setTypeface(TypefaceProvider.getTypeface(context, fontIcon));
+        paint.setTypeface(TypefaceProvider.getTypeface(context, fontIcon.iconSet()));
     }
 
 }

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/attributes/BootstrapHeading.java
Patch:
@@ -6,7 +6,7 @@
 
 public interface BootstrapHeading extends Serializable {
 
-    String KEY = "BootstrapHeading";
+    String KEY = "com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading";
 
     float getTextSize(Context context);
 

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/BootstrapHeadingView.java
Patch:
@@ -4,6 +4,8 @@
 
 public interface BootstrapHeadingView {
 
+    String KEY = "com.beardedhen.androidbootstrap.api.attributes.BootstrapHeading";
+
     void setBootstrapHeading(BootstrapHeading bootstrapHeading);
 
     BootstrapHeading getBootstrapHeading();

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/BootstrapTextView.java
Patch:
@@ -4,6 +4,8 @@
 
 public interface BootstrapTextView {
 
+    String KEY = "com.beardedhen.androidbootstrap.support.BootstrapText";
+
     void setBootstrapText(BootstrapText bootstrapText);
 
 }

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/LabelThemeView.java
Patch:
@@ -4,6 +4,8 @@
 
 public interface LabelThemeView {
 
+    String KEY = "com.beardedhen.androidbootstrap.api.attributes.LabelTheme";
+
     void setLabelTheme(LabelTheme labelTheme);
 
     LabelTheme getLabelTheme();

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/api/view/RoundableView.java
Patch:
@@ -2,7 +2,7 @@
 
 public interface RoundableView {
 
-    String KEY = "Roundable";
+    String KEY = "com.beardedhen.androidbootstrap.api.view.Roundable";
 
     void setRoundedCorners(boolean roundable);
 

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/AwesomeTextView.java
Patch:
@@ -223,7 +223,7 @@ else if (startIndex >= 0 && endIndex < text.length()) {
         requestStateRefresh();
     }
 
-    protected void requestStateRefresh() {
+    private void requestStateRefresh() {
         if (bootstrapText != null) {
             setText(bootstrapText);
         }

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -81,7 +81,8 @@ private void initialise(AttributeSet attrs) {
         requestStateRefresh();
     }
 
-    protected void requestStateRefresh() {
+    private void requestStateRefresh() {
+
         if (bootstrapSize != null && bootstrapTheme != null) {
 
             int vert = bootstrapSize.buttonVerticalPadding(getContext());

File: AndroidBootstrap/src/main/java/com/beardedhen/androidbootstrap/BootstrapLabel.java
Patch:
@@ -75,7 +75,7 @@ private void initialise(AttributeSet attrs) {
         return bootstrapHeading;
     }
 
-    @Override protected void requestStateRefresh() {
+    private void requestStateRefresh() {
         // set bg color etc
 
         setTextColor(getContext().getResources().getColor(android.R.color.white));

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -191,10 +191,7 @@ private void initialise(AttributeSet attrs) {
         setBootstrapType(bootstrapStringType);
         //set the font awesome icon typeface
 
-
-
         if (!isInEditMode()) {
-
             lblLeft.setTypeface(FontAwesome.getFont(getContext()));
             lblRight.setTypeface(FontAwesome.getFont(getContext()));
         }

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/FontAwesomeText.java
Patch:
@@ -95,9 +95,6 @@ private void initialise(AttributeSet attrs) {
             setIcon(icon);
             tv.setTypeface(FontAwesome.getFont(getContext()));
         }
-        else {
-            fontAwesomeTextView = inflater.inflate(R.layout.placeholder, this, false);
-        }
 
         tv.setTextSize(TypedValue.COMPLEX_UNIT_SP, fontSize);
         addView(fontAwesomeTextView);

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -179,9 +179,6 @@ private void initialise(AttributeSet attrs)
 
         BootstrapSize bootstrapSize = BootstrapSize.getBootstrapSizeFromString(size);
 
-        if (a.getString(R.styleable.BootstrapButton_android_textSize) == null) {
-            fontSize = bootstrapSize.getFontSize();
-        }
         paddingA = (int) (bootstrapSize.paddingA * scale + 0.5f);
         paddingB = (int) (bootstrapSize.paddingB * scale + 0.5f);
 

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapThumbnail.java
Patch:
@@ -116,12 +116,12 @@ private void initialise( AttributeSet attrs )
 		container.setBackgroundResource(type.containerDrawable);
 		
 		//if no image is provided by user
-		if(imageDrawable == 0){
+		if(imageDrawable == 0) {
 			//set default grey placeholder background
 			placeholder.setBackgroundResource(type.placeholderDrawable);
 			
 			//set the text 
-	        if(text.length() > 0){        	
+	        if(text.length() > 0) {
 	        	dimensionsLabel.setText(text);
 	        	dimensionsLabel.setVisibility(View.VISIBLE);        	
 	        }

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapCircleThumbnail.java
Patch:
@@ -208,6 +208,7 @@ public void setImage(Bitmap bitmap)
         }
         
         Bitmap roundBitmap = ImageUtils.getCircleBitmap(bitmap, widthPX, heightPX);
+        image.setVisibility(View.VISIBLE);
         image.setImageBitmap(roundBitmap);
         
         invalidate();

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapCircleThumbnail.java
Patch:
@@ -208,6 +208,7 @@ public void setImage(Bitmap bitmap)
         }
         
         Bitmap roundBitmap = ImageUtils.getCircleBitmap(bitmap, widthPX, heightPX);
+        image.setVisibility(View.VISIBLE);
         image.setImageBitmap(roundBitmap);
         
         invalidate();

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapCircleThumbnail.java
Patch:
@@ -141,7 +141,6 @@ else if(this.size.equals(XLARGE))
         }
 
         //convert padding to pixels
-        DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();
         int paddingPX = (int)((padding * scale) + 0.5);
 
         //convert image size to pixels
@@ -150,7 +149,7 @@ else if(this.size.equals(XLARGE))
 
         //make inner image smaller to compensate for the padding so that entire circle including padding equals the size
         //ex. small image = 48dp, small padding = 4dp, inner image = 48 - (4 * 2) = 40
-        if(this.minimal == false)
+        if(!this.minimal)
         {
             imageSizeWidthPX = imageSizeWidthPX - (paddingPX * 2);
             imageSizeHeightPX = imageSizeHeightPX - (paddingPX * 2);
@@ -204,7 +203,7 @@ public void setImage(Bitmap bitmap)
         
         int paddingPX = (int)((this.padding * scale) + 0.5);
         
-        if(this.minimal == false)
+        if(!this.minimal)
         {
             widthPX = widthPX - (paddingPX * 2);
             heightPX = heightPX - (paddingPX * 2);

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -172,7 +172,7 @@ private void initialise( AttributeSet attrs )
 		
 		int layoutWidth = 0;
 		if(a.getString(R.styleable.BootstrapButton_android_layout_width) != null) {
-			layoutWidth = a.getInt(R.styleable.BootstrapButton_android_layout_width, 0);
+			layoutWidth = a.getLayoutDimension(R.styleable.BootstrapButton_android_layout_width, 0);
 		}
 		
 		//works even if it's fill_parent or match_parent 

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/BootstrapButton.java
Patch:
@@ -172,7 +172,7 @@ private void initialise( AttributeSet attrs )
 		
 		int layoutWidth = 0;
 		if(a.getString(R.styleable.BootstrapButton_android_layout_width) != null) {
-			layoutWidth = a.getInt(R.styleable.BootstrapButton_android_layout_width, 0);
+			layoutWidth = a.getLayoutDimension(R.styleable.BootstrapButton_android_layout_width, 0);
 		}
 		
 		//works even if it's fill_parent or match_parent 

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/FontAwesomeText.java
Patch:
@@ -265,7 +265,7 @@ public void setTextColor(int color) {
 	/**
 	 * Used to set the text size of the underlying text view.
 	 * @param unit - Integer value representing a unit size
-	 * @param size - Float value represeting text size
+	 * @param size - Float value representing text size
 	 */
 	public void setTextSize(int unit, float size) {
 		tv.setTextSize(unit, size);

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/FontAwesome.java
Patch:
@@ -1,4 +1,4 @@
-package com.beardedhen.bbutton;
+package com.beardedhen.androidbootstrap;
 
 import java.util.HashMap;
 import java.util.Map;

File: AndroidBootstrap/src/com/beardedhen/androidbootstrap/FontAwesome.java
Patch:
@@ -1,4 +1,4 @@
-package com.beardedhen.bbutton;
+package com.beardedhen.androidbootstrap;
 
 import java.util.HashMap;
 import java.util.Map;

File: AndroidBootstrap/src/com/beardedhen/bbutton/BootstrapButton.java
Patch:
@@ -286,6 +286,8 @@ private void initialise( AttributeSet attrs )
 
         layout.setPadding(0, paddingB, 0, paddingB);
         
+        this.setClickable(true);
+        
 		addView(v);
 	}
 

