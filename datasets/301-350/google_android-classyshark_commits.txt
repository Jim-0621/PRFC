File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/xml/XmlDecompressor.java
Patch:
@@ -295,7 +295,7 @@ private void parseAttributes(StringBuilder sb, DataInput dis, List<String> strin
                     attributeValue = String.format("0x%08X", attributeResourceId);
 
             }
-            sb.append(attributeName).append("='").append(attributeValue).append("'");
+            sb.append(attributeName).append("=\"").append(attributeValue).append("\"");
         }
     }
 
@@ -409,4 +409,4 @@ private static float resValue(int data) {
                 & COMPLEX_RADIX_MASK];
         return value;
     }
-}
\ No newline at end of file
+}

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/xml/XmlDecompressor.java
Patch:
@@ -295,7 +295,7 @@ private void parseAttributes(StringBuilder sb, DataInput dis, List<String> strin
                     attributeValue = String.format("0x%08X", attributeResourceId);
 
             }
-            sb.append(attributeName).append("='").append(attributeValue).append("'");
+            sb.append(attributeName).append("=\"").append(attributeValue).append("\"");
         }
     }
 
@@ -409,4 +409,4 @@ private static float resValue(int data) {
                 & COMPLEX_RADIX_MASK];
         return value;
     }
-}
\ No newline at end of file
+}

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/manifest/ManifestInspector.java
Patch:
@@ -50,7 +50,7 @@ private void inspectService(List<String> serviceInspections, String serviceName,
             return;
         }
 
-        // IntentService - error
+        // IntentService - verify are not running when the app is down
         if (serviceCode.contains("IntentService")) {
             serviceInspections.add("* " + serviceName +
                     " extends IntentService, make sure it doesn't run " +
@@ -61,7 +61,7 @@ private void inspectService(List<String> serviceInspections, String serviceName,
 
         // all services need to be reviewed
         if (serviceCode.contains("Service")) {
-            serviceInspections.add("* please check " + serviceName +
+            serviceInspections.add("* please check that " + serviceName +
                     " is not a background service \n");
         }
     }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/manifest/ManifestInspector.java
Patch:
@@ -54,7 +54,7 @@ private void inspectService(List<String> serviceInspections, String serviceName,
         if (serviceCode.contains("IntentService")) {
             serviceInspections.add("* " + serviceName +
                     " extends IntentService, make sure it doesn't run " +
-                    "when the app us down\n");
+                    "when the app is down\n");
 
             return;
         }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/JavaDependenciesInspector.java
Patch:
@@ -138,7 +138,7 @@ private void updateLogic(String cName) {
             hasActionBarSherlock = true;
         } else if (cName.contains("chrisbanes.pulltorefresh") && !hasPullToRefresh) {
             hasPullToRefresh = true;
-        } else if (cName.contains("com.viewpagerindicator") && !hasPullToRefresh) {
+        } else if (cName.contains("com.viewpagerindicator") && !hasViewPagerIndicator) {
             hasViewPagerIndicator = true;
         }
     }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/ApkDashboard.java
Patch:
@@ -96,12 +96,12 @@ public static Set<String> getClassesWithNativeMethodsPerDexIndex(int dexIndex,
     }
 
     public String getJavaDependenciesErrorsAsString() {
-        List<String> mmm = getJavaDependenciesErrors();
+        List<String> javaDependenciesErrors = getJavaDependenciesErrors();
 
         StringBuilder builder = new StringBuilder();
 
-        for (String nnn : mmm) {
-            builder.append(nnn);
+        for (String javaDepError : javaDependenciesErrors) {
+            builder.append(javaDepError);
         }
 
         return builder.toString();

File: ClassySharkWS/src/com/google/classyshark/Version.java
Patch:
@@ -22,5 +22,5 @@
 public class Version {
 
     public static final int MAJOR = 7;
-    public static final int MINOR = 0;
+    public static final int MINOR = 1;
 }

File: ClassySharkWS/src/com/google/classyshark/silverghost/contentreader/apk/ApkReader.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static com.google.classyshark.silverghost.translator.java.dex.Multidex.readClassNamesFromMultidex;
+import static com.google.classyshark.silverghost.translator.java.dex.MultidexReader.readClassNamesFromMultidex;
 
 public class ApkReader implements BinaryContentReader {
 

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/Translator.java
Patch:
@@ -30,7 +30,7 @@ public interface Translator {
      */
      enum TAG {
         MODIFIER, IDENTIFIER, ANNOTATION, DOCUMENT,
-        XML_TAG, XML_ATTR_NAME, XML_ATTR_VALUE, XML_CDATA, XML_COMMENT, XML_DEFAULT
+        XML_TAG, XML_ATTR_NAME, XML_ATTR_VALUE, XML_CDATA, XML_COMMENT, XML_DEFAULT, SELECTION
     }
 
     /**

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/DynamicSymbolsInspector.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.silverghost.translator.apk.apkinspectionsbag;
+package com.google.classyshark.silverghost.translator.apk.dashboard;
 
 import java.io.IOException;
 import nl.lxtreme.binutils.elf.Elf;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/PrivateNativeLibsInspector.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.silverghost.translator.apk.apkinspectionsbag;
+package com.google.classyshark.silverghost.translator.apk.dashboard;
 
 import java.util.Arrays;
 import java.util.LinkedList;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/dashboard/SyntheticAccessorsInspector.java
Patch:
@@ -15,7 +15,7 @@
  */
 
 
-package com.google.classyshark.silverghost.translator.apk.apkinspectionsbag;
+package com.google.classyshark.silverghost.translator.apk.dashboard;
 
 import com.google.classyshark.silverghost.translator.java.dex.DexlibAdapter;
 import java.util.Iterator;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/java/MetaObjectFactory.java
Patch:
@@ -22,7 +22,7 @@
 import com.google.classyshark.silverghost.translator.java.clazz.reflect.MetaObjectClass;
 import com.google.classyshark.silverghost.translator.java.dex.DexlibAdapter;
 import com.google.classyshark.silverghost.translator.java.dex.MetaObjectDex;
-import com.google.classyshark.silverghost.translator.java.dex.Multidex;
+import com.google.classyshark.silverghost.translator.java.dex.MultidexReader;
 import org.jf.dexlib2.iface.ClassDef;
 import org.jf.dexlib2.iface.DexFile;
 
@@ -139,7 +139,7 @@ private static MetaObject getMetaObjectFromApk(String className, File apk) {
         MetaObject result;
         try {
             File classesDexWithClass =
-                    Multidex.extractClassesDexWithClass(className, apk);
+                    MultidexReader.extractClassesDexWithClass(className, apk);
             result = getMetaObjectFromDex(className, classesDexWithClass);
         } catch (Exception e) {
             result = new MetaObjectClass(Exception.class);

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/dex/DexMethodsDumper.java
Patch:
@@ -60,7 +60,6 @@ public static List<String> dumpMethods(File archiveFile) {
 
                 if (zipEntry.getName().endsWith(".dex")) {
 
-
                     int dexIndex = Character.getNumericValue(zipEntry.getName().charAt(zipEntry.getName().length() - 5));
 
                     String fName = "DUMPER_METHODS_classes";
@@ -86,7 +85,6 @@ public static List<String> dumpMethods(File archiveFile) {
                     List<String> methodsList = fillAnalysis(dexIndex, file);
                     result.addAll(methodsList);
 
-                    dexIndex++;
                 } else {
 
                 }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/ClassySharkPanel.java
Patch:
@@ -447,6 +447,8 @@ protected Void doInBackground() throws Exception {
 
             @Override
             protected void done() {
+                if(className.isEmpty()) return;
+
                 // TODO add logic to scroll to relevant place in file
                 if (viewTopClass || viewMouseClickedClass) {
                     toolbar.setText(className);

File: ClassySharkWS/src/com/google/classyshark/silverghost/SilverGhost.java
Patch:
@@ -173,8 +173,8 @@ public List<Translator.ELEMENT> getManifestMatches(String textFromTypingArea) {
                         result.add(new Translator.ELEMENT(ANDROID_MANIFEST_XML_SEARCH + manifestStrArray[j + 2], Translator.TAG.ANNOTATION));
                     }
 
-                    result.add(new Translator.ELEMENT(ANDROID_MANIFEST_XML_SEARCH, Translator.TAG.ANNOTATION));
-                    result.add(new Translator.ELEMENT(ANDROID_MANIFEST_XML_SEARCH,Translator.TAG.ANNOTATION));
+                    result.add(new Translator.ELEMENT("", Translator.TAG.ANNOTATION));
+                    result.add(new Translator.ELEMENT("",Translator.TAG.ANNOTATION));
                 }
             }
         }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/apkinspectionsbag/ApkInspectionsBag.java
Patch:
@@ -84,8 +84,8 @@ public List<String> getFullPathNativeLibNamesSorted() {
 
     public List<String> getNativeLibNamesSorted() {
 
-        Set<String> s = new LinkedHashSet<>(apkAnalysis.nativeDependencies);
-        LinkedList<String> sortedNativeDependencies = new LinkedList<>(s);
+        Set<String> uniqueDependencies = new LinkedHashSet<>(apkAnalysis.nativeDependencies);
+        LinkedList<String> sortedNativeDependencies = new LinkedList<>(uniqueDependencies);
         Collections.sort(sortedNativeDependencies);
 
         List<String> nativeLibNames =

File: ClassySharkWS/src/com/google/classyshark/Version.java
Patch:
@@ -21,6 +21,6 @@
  */
 public class Version {
 
-    public static final int MAJOR = 6;
-    public static final int MINOR = 7;
+    public static final int MAJOR = 7;
+    public static final int MINOR = 0;
 }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/apkinspectionsbag/DynamicSymbolsInspector.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.silverghost.translator.apk;
+package com.google.classyshark.silverghost.translator.apk.apkinspectionsbag;
 
 import java.io.IOException;
 import nl.lxtreme.binutils.elf.Elf;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/apkinspectionsbag/PrivateNativeLibsInspector.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.silverghost.translator.apk;
+package com.google.classyshark.silverghost.translator.apk.apkinspectionsbag;
 
 import java.util.Arrays;
 import java.util.LinkedList;
@@ -53,7 +53,8 @@ public class PrivateNativeLibsInspector {
 
     private static List<String> APIS_LIB_LIST = new LinkedList<>(Arrays.asList(apiLibs));
 
-    public static String check(String nativeLib, List<String> nativeLibNames) {
+    // TODO make it boolean
+    public static String isPrivate(String nativeLib, List<String> nativeLibNames) {
 
         if (!APIS_LIB_LIST.contains(nativeLib) && !nativeLibNames.contains(nativeLib)) {
             return " -- private api!";

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/elf/ElfTranslator.java
Patch:
@@ -102,8 +102,7 @@ public List<String> getDependencies() {
 
     // TODO currently support only dexes, here is how to do for jar
     // TODO https://github.com/adamheinrich/native-utils/blob/master/NativeUtils.java
-    public static File extractElf(String elfName,
-                                   File apkFile) {
+    public static File extractElf(String elfName, File apkFile) {
         File file = new File("classes.dex");
         ZipInputStream zipFile;
         try {

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/elf/ElfTranslator.java
Patch:
@@ -102,8 +102,7 @@ public List<String> getDependencies() {
 
     // TODO currently support only dexes, here is how to do for jar
     // TODO https://github.com/adamheinrich/native-utils/blob/master/NativeUtils.java
-    public static File extractElf(String elfName,
-                                   File apkFile) {
+    public static File extractElf(String elfName, File apkFile) {
         File file = new File("classes.dex");
         ZipInputStream zipFile;
         try {

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/dex/DexInfoTranslator.java
Patch:
@@ -35,7 +35,8 @@
 /**
  * Translator for the classes.dex entry
  */
-public class DexInfoTranslator implements Translator {
+public class
+DexInfoTranslator implements Translator {
     private File apkfile;
     private String dexFileName;
     private int index;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/java/JavaTranslator.java
Patch:
@@ -352,7 +352,7 @@ public static void testSystemClass() {
     }
 
     public static void testCustomClass() {
-        final File testFile = new File(System.getProperty("user.home") + "/Desktop/Scenarios/3 Class/Reducer.class");
+        final File testFile = new File(System.getProperty("user.home") + "/Desktop/Scenarios/2 Class/Reducer.class");
         String textClass = "com.google.classyshark.gui.panel.reducer.Reducer.class";
         Translator translator = TranslatorFactory.createTranslator(textClass, testFile);
         translator.apply();
@@ -361,7 +361,7 @@ public static void testCustomClass() {
     }
 
     public static void testInnerClass() {
-        final File testFile = new File(System.getProperty("user.home") + "/Desktop/Scenarios/3 Class/Reducer$1.class");
+        final File testFile = new File(System.getProperty("user.home") + "/Desktop/Scenarios/2 Class/Reducer$1.class");
         String textClass = "com.google.classyshark.gui.panel.reducer.Reducer$1.class";
         Translator translator = TranslatorFactory.createTranslator(textClass, testFile);
         translator.apply();

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/elf/ElfTranslator.java
Patch:
@@ -102,7 +102,7 @@ public List<String> getDependencies() {
 
     // TODO currently support only dexes, here is how to do for jar
     // TODO https://github.com/adamheinrich/native-utils/blob/master/NativeUtils.java
-    private static File extractElf(String elfName,
+    public static File extractElf(String elfName,
                                    File apkFile) {
         File file = new File("classes.dex");
         ZipInputStream zipFile;

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/elf/ElfTranslator.java
Patch:
@@ -102,7 +102,7 @@ public List<String> getDependencies() {
 
     // TODO currently support only dexes, here is how to do for jar
     // TODO https://github.com/adamheinrich/native-utils/blob/master/NativeUtils.java
-    private static File extractElf(String elfName,
+    public static File extractElf(String elfName,
                                    File apkFile) {
         File file = new File("classes.dex");
         ZipInputStream zipFile;

File: ClassySharkWS/src/com/google/classyshark/updater/networking/AbstractDownloader.java
Patch:
@@ -37,7 +37,7 @@ public void checkNewVersion() {
     }
 
     @Override
-    public void onReleaseReceived(Release release) {
+    public void onReleaseReceived(final Release release) {
         if (release.isNewerThan(current)) {
             new Thread(new Runnable() {
                 @Override

File: ClassySharkWS/src/com/google/classyshark/cli/CliMode.java
Patch:
@@ -37,7 +37,8 @@ public class CliMode {
             "    -open\t  open an archive with GUI \n" +
             "    -export\t  export to file \n" +
             "    -methodcounts\t  packages with method counts \n" +
-            "    -inspect  experimental prints apk analysis" +
+            "    -inspect  experimental prints apk analysis\n" +
+            "    -update\tupdates ClassyShark" +
             "\nwhere args is an optional classname\n";
 
     private CliMode() {

File: ClassySharkWS/src/com/google/classyshark/Version.java
Patch:
@@ -17,10 +17,10 @@
 package com.google.classyshark;
 
 /**
- * This file is the one containg the data for the current ClassyShark version
+ * This file is the one containing the data for the current ClassyShark version
  */
 public class Version {
 
-    public static final int MAJOR = 1;
-    public static final int MINOR = 0;
+    public static final int MAJOR = 6;
+    public static final int MINOR = 4;
 }

File: ClassySharkWS/src/com/google/classyshark/updater/models/Release.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.google.classyshark.updater.models;
 
-
 import com.google.classyshark.Version;
 import com.google.classyshark.updater.networking.GitHubApi;
 import com.google.gson.annotations.SerializedName;
@@ -37,8 +36,7 @@ public class Release {
     private final ReleaseDownloadData[] assets;
     @SerializedName("created_at")
     private final String createdAt;
-
-
+    
     private Release(String name, boolean preRelease, String body, ReleaseDownloadData[] assets, String createdAt) {
         this.name = name;
         this.preRelease = preRelease;

File: ClassySharkWS/src/com/google/classyshark/updater/networking/GitHubApi.java
Patch:
@@ -22,8 +22,8 @@
 import retrofit2.http.GET;
 
 /**
- * This class is the one taking care of representing the API needed in order to retrieve the latest release data from
- * GitHub.
+ * This class is the one taking care of representing the API needed
+ * in order to retrieve the latest release data from GitHub.
  */
 public interface GitHubApi {
 

File: ClassySharkWS/src/com/google/classyshark/updater/networking/MessageRunnable.java
Patch:
@@ -21,14 +21,14 @@
 public class MessageRunnable implements Runnable {
     private final String title;
     private final String changelog;
-    private final boolean gui;
+    private final boolean isGui;
 
     private final String ICON_PATH = "/resources/ic_update.png";
 
     public MessageRunnable(String title, String changelog, boolean gui) {
         this.title = buildTitleFrom(title);
         this.changelog = buildChangelogFrom(changelog);
-        this.gui = gui;
+        this.isGui = gui;
     }
 
     private String buildTitleFrom(String title) {
@@ -41,7 +41,7 @@ private String buildChangelogFrom(String changelog) {
 
     @Override
     public void run() {
-        if (gui) {
+        if (isGui) {
             warnUserAboutNewRelease();
         }
     }

File: ClassySharkWS/src/com/google/classyshark/updater/utils/NamingUtils.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.google.classyshark.updater.utils;
 
-
 import com.google.classyshark.updater.models.Release;
 import com.sun.istack.internal.NotNull;
 

File: ClassySharkWS/src/com/google/classyshark/updater/networking/GitHubApi.java
Patch:
@@ -5,7 +5,7 @@
 import retrofit2.Call;
 import retrofit2.http.GET;
 
-interface GitHubApi {
+public interface GitHubApi {
 
     String ENDPOINT = "https://api.github.com/";
 

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/xml/XmlHighlighter.java
Patch:
@@ -34,7 +34,7 @@ public enum TagType {
         TAG, ATTR_NAME, ATTR_VALUE, COMMENT, CDATA
     }
     private static final Pattern TAG_PATTERN =
-            Pattern.compile("(</?[a-z-]+)\\s?>?", Pattern.MULTILINE);
+            Pattern.compile("(</?[A-Za-z-\\d\\._]+)\\s?>?", Pattern.MULTILINE);
     private static final Pattern TAG_PATTERN_2 =
             Pattern.compile("(<\\?)[a-z-]+\\s?>?", Pattern.MULTILINE);
 

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/xml/XmlHighlighter.java
Patch:
@@ -34,7 +34,7 @@ public enum TagType {
         TAG, ATTR_NAME, ATTR_VALUE, COMMENT, CDATA
     }
     private static final Pattern TAG_PATTERN =
-            Pattern.compile("(</?[a-z-]+)\\s?>?", Pattern.MULTILINE);
+            Pattern.compile("(</?[A-Za-z-\\d\\._]+)\\s?>?", Pattern.MULTILINE);
     private static final Pattern TAG_PATTERN_2 =
             Pattern.compile("(<\\?)[a-z-]+\\s?>?", Pattern.MULTILINE);
 

File: ClassySharkWS/src/com/google/classyshark/gui/theme/dark/DarkColorScheme.java
Patch:
@@ -8,9 +8,9 @@ private DarkColorScheme() {}
 
     static final Color BACKGROUND = new Color(32,32,32);
     static final Color BACKGROUND_LIGHT = new Color(46, 48,50);
-    static final Color DEFAULT = new Color(131, 148, 150);
-    static final Color KEYWORDS = new Color(181, 137, 0);
-    static final Color IDENTIFIERS = new Color(133, 153, 0);
+    static final Color IDENTIFIERS = new Color(0xFF, 0xFF, 0x80);
+    static final Color DEFAULT = new Color(0xd8, 0xd8, 0xd8);
+    static final Color KEYWORDS = new Color(133, 153, 0);
     static final Color ANNOTATIONS = new Color(108, 113, 196);
     static final Color SELECTION_BG = new Color(7, 56, 66);
     static final Color NAMES = new Color(88, 110, 117);

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/apk/ApkTranslator.java
Patch:
@@ -77,7 +77,7 @@ public void apply() {
                             + dexData.nativeMethodsCount
                             + "\nabstract methods: "
                             + dexData.abstractMethodsCount + "\n",
-                    TAG.ANNOTATION);
+                    TAG.DOCUMENT);
             elements.add(element);
         }
 
@@ -88,7 +88,7 @@ public void apply() {
 
         Collections.sort(apkAnalysis.nativeLibs);
         for (String nativeLib : apkAnalysis.nativeLibs) {
-            element = new ELEMENT(nativeLib, TAG.ANNOTATION);
+            element = new ELEMENT(nativeLib, TAG.DOCUMENT);
             elements.add(element);
         }
     }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/chart/RingChart.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.google.classyshark.gui.panel.chart;
 
+import com.google.classyshark.gui.GuiMode;
 import com.google.classyshark.silverghost.methodscounter.ClassNode;
 
 import java.awt.AlphaComposite;
@@ -160,6 +161,7 @@ public void render(int width, int height, ClassNode rootNode, Graphics g) {
         imageG2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
         imageG2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
         imageG2d.setComposite(AlphaComposite.Src);
+        imageG2d.setColor(GuiMode.getTheme().getBackgroundColor());
         imageG2d.fillRect(0, 0, width, height);
 
         int graphWidth = width - MARGIN * 2;

File: ClassySharkWS/src/com/google/classyshark/gui/panel/methodscount/MethodsCountPanel.java
Patch:
@@ -19,6 +19,7 @@
 import com.google.classyshark.gui.GuiMode;
 import com.google.classyshark.gui.panel.FileTransferHandler;
 import com.google.classyshark.gui.panel.ViewerController;
+import com.google.classyshark.gui.panel.tree.CellRenderer;
 import com.google.classyshark.gui.theme.Theme;
 import com.google.classyshark.silverghost.methodscounter.ClassNode;
 import com.google.classyshark.silverghost.methodscounter.RootBuilder;
@@ -65,6 +66,7 @@ private void setup() {
         treeModel = new DefaultTreeModel(new DefaultMutableTreeNode(null));
         jTree = new JTree(treeModel);
         jTree.setRootVisible(false);
+        jTree.setCellRenderer(new CellRenderer());
         theme.applyTo(jTree);
 
         DefaultTreeCellRenderer cellRenderer = (DefaultTreeCellRenderer) jTree.getCellRenderer();

File: ClassySharkWS/src/com/google/classyshark/gui/panel/chart/RingChart.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.google.classyshark.gui.panel.chart;
 
+import com.google.classyshark.gui.GuiMode;
 import com.google.classyshark.silverghost.methodscounter.ClassNode;
 
 import java.awt.AlphaComposite;
@@ -160,6 +161,7 @@ public void render(int width, int height, ClassNode rootNode, Graphics g) {
         imageG2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
         imageG2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
         imageG2d.setComposite(AlphaComposite.Src);
+        imageG2d.setColor(GuiMode.getTheme().getBackgroundColor());
         imageG2d.fillRect(0, 0, width, height);
 
         int graphWidth = width - MARGIN * 2;

File: ClassySharkWS/src/com/google/classyshark/gui/panel/methodscount/MethodsCountPanel.java
Patch:
@@ -19,6 +19,7 @@
 import com.google.classyshark.gui.GuiMode;
 import com.google.classyshark.gui.panel.FileTransferHandler;
 import com.google.classyshark.gui.panel.ViewerController;
+import com.google.classyshark.gui.panel.tree.CellRenderer;
 import com.google.classyshark.gui.theme.Theme;
 import com.google.classyshark.silverghost.methodscounter.ClassNode;
 import com.google.classyshark.silverghost.methodscounter.RootBuilder;
@@ -65,6 +66,7 @@ private void setup() {
         treeModel = new DefaultTreeModel(new DefaultMutableTreeNode(null));
         jTree = new JTree(treeModel);
         jTree.setRootVisible(false);
+        jTree.setCellRenderer(new CellRenderer());
         theme.applyTo(jTree);
 
         DefaultTreeCellRenderer cellRenderer = (DefaultTreeCellRenderer) jTree.getCellRenderer();

File: ClassySharkWS/src/com/google/classyshark/gui/panel/tree/FilesTree.java
Patch:
@@ -50,6 +50,7 @@ public FilesTree(ViewerController viewerPanel) {
         jTree = new JTree(treeModel);
         jTree.setDragEnabled(true);
         jTree.setTransferHandler(new FileTransferHandler(viewerController));
+        jTree.setCellRenderer(new CellRenderer());
         configureJTree(jTree);
         GuiMode.getTheme().applyTo(jTree);
     }

File: ClassySharkWS/src/com/google/classyshark/gui/theme/light/LightColorScheme.java
Patch:
@@ -28,6 +28,6 @@ private LightColorScheme(){}
     static final Color KEYWORDS = new Color(181, 137, 0);
     static final Color IDENTIFIERS = new Color(133, 153, 0);
     static final Color ANNOTATIONS = new Color(108, 113, 196);
-    static final Color SELECTION_BG = new Color(238, 232, 213);
+    static final Color SELECTION_BG = new Color(7, 56, 66);
     static final Color NAMES = new Color(147, 161, 161);
 }

File: ClassySharkWS/src/com/google/classyshark/gui/theme/light/LightTheme.java
Patch:
@@ -101,7 +101,7 @@ public Color getNamesColor() {
 
     @Override
     public Color getBackgroundColor() {
-        return NAMES;
+        return Color.WHITE;
     }
 
     @Override

File: ClassySharkWS/src/com/google/classyshark/gui/theme/light/LightTheme.java
Patch:
@@ -101,7 +101,7 @@ public Color getNamesColor() {
 
     @Override
     public Color getBackgroundColor() {
-        return NAMES;
+        return Color.WHITE;
     }
 
     @Override

File: ClassySharkWS/src/com/google/classyshark/gui/panel/displayarea/DisplayArea.java
Patch:
@@ -263,6 +263,7 @@ public void displayClass(List<Translator.ELEMENT> elements) {
         displayDataState = DisplayDataState.INSIDE_CLASS;
         clearText();
         StyleConstants.setFontSize(style, 18);
+        StyleConstants.setBackground(style, theme.getBackgroundColor());
 
         Document doc = new DefaultStyledDocument();
 

File: ClassySharkWS/src/com/google/classyshark/gui/theme/Theme.java
Patch:
@@ -23,4 +23,5 @@ public interface Theme extends SwingThemeApplier<Component> {
     Color getAnnotationsColor();
     Color getSelectionBgColor();
     Color getNamesColor();
+    Color getBackgroundColor();
 }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/displayarea/DisplayArea.java
Patch:
@@ -309,7 +309,7 @@ public void displaySharkey() {
         Document doc = jTextPane.getStyledDocument();
 
         try {
-            StyleConstants.setForeground(style, ColorScheme.IDENTIFIERS);
+            StyleConstants.setForeground(style, ColorScheme.DEFAULT);
             StyleConstants.setFontSize(style, 13);
             StyleConstants.setFontFamily(style, "Menlo");
 

File: ClassySharkWS/src/com/google/classyshark/gui/panel/toolbar/Toolbar.java
Patch:
@@ -33,7 +33,7 @@ public class Toolbar extends JToolBar {
 
     private final JTextField typingArea;
     private final ToolbarController toolbarController;
-    private final ThemeManager themeManager;
+    private final ThemeManager themeManager = GuiMode.getThemeManager();
 
     private JButton openBtn;
     private JButton viewBtn;
@@ -47,7 +47,6 @@ public Toolbar(final ToolbarController toolbarController) {
         super();
 
         this.toolbarController = toolbarController;
-        themeManager = GuiMode.getThemeManager();
 
         typingArea = buildTypingArea();
         openBtn = buildOpenButton();

File: ClassySharkWS/src/com/google/classyshark/gui/panel/toolbar/Toolbar.java
Patch:
@@ -104,7 +104,7 @@ public void activateNavigationButtons() {
     private JTextField buildTypingArea() {
         final JTextField result = new JTextField(50);
 
-        result.setEnabled(false);
+        result.setEnabled(true);
 
         result.addMouseListener(new MouseAdapter() {
 

File: ClassySharkWS/src/com/google/classyshark/gui/panel/IconSchemes.java
Patch:
@@ -3,7 +3,7 @@
 
 public class IconSchemes {
 
-    private static final String ROOT_PATH = "resources/";
+    private static final String ROOT_PATH = "/resources/";
     private static final String EXTENSION = ".png";
 
     public static final String TOGGLE_ICON_PATH = ROOT_PATH + "ic_menu" + EXTENSION;

File: ClassySharkWS/src/com/google/classyshark/gui/panel/displayarea/doodles/SharkBG.java
Patch:
@@ -46,6 +46,6 @@ class SharkBG {
                       + "               ii!                             '*YMWM,                        \n"
                       + "               I'                                  \"YM\n"
                       + "\n\n\n\thttp://www.retrojunkie.com/asciiart/animals/sharks.htm"
-                      + "\n\n\n\tClassyShark ver. 6.1 powered by SilverGhost";
+                      + "\n\n\n\tClassyShark ver. 6.2 powered by SilverGhost";
 
 }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/toolbar/RecentArchivesButton.java
Patch:
@@ -37,7 +37,8 @@ public class RecentArchivesButton extends JButton {
     private ToolbarController panel;
 
     public RecentArchivesButton() {
-        super(new ImageIcon(IconSchemes.RECENT_ICON_PATH));
+        super();
+        setIcon(new ImageIcon(getClass().getResource(IconSchemes.RECENT_ICON_PATH)));
         setToolTipText("History");
         popup = new JPopupMenu();
         popup.setLayout(new BoxLayout(popup, BoxLayout.Y_AXIS));

File: ClassySharkWS/src/com/google/classyshark/gui/panel/toolbar/ToolbarController.java
Patch:
@@ -27,6 +27,8 @@ public interface ToolbarController extends ArchiveDisplayer {
 
     void onViewTopClassPressed();
 
+    void onMappingsButtonPressed();
+
     void onExportButtonPressed();
 
     void onChangeLeftPaneVisibility(boolean selected);

File: ClassySharkWS/src/com/google/classyshark/silverghost/exporter/Exporter.java
Patch:
@@ -49,9 +49,9 @@ public static void writeArchive(File archive, List<String> allClasses) throws Ex
         Exporter.writeMethodCounts(archive);
     }
 
-    public static void writeCurrentClass(Translator translator)
+    public static void writeCurrentClass(String className, String content)
             throws IOException {
-        writeString(translator.getClassName() + "_dump", translator.toString());
+        writeString(className + "_dump", content);
     }
 
     public static void writeMethodCounts(File archive) {

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/Translator.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.google.classyshark.silverghost.translator;
 
+import com.google.classyshark.silverghost.tokensmapper.ProguardMapper;
 import java.util.List;
 
 /**
@@ -47,6 +48,8 @@ public ELEMENT(String word, TAG tag) {
 
     String getClassName();
 
+    void addMapper(ProguardMapper reverseMappings);
+
     void apply();
 
     List<ELEMENT> getElementsList();

File: ClassySharkWS/src/com/google/classyshark/gui/panel/IconSchemes.java
Patch:
@@ -3,7 +3,7 @@
 
 public class IconSchemes {
 
-    private static final String ROOT_PATH = "resources/";
+    private static final String ROOT_PATH = "/resources/";
     private static final String EXTENSION = ".png";
 
     public static final String TOGGLE_ICON_PATH = ROOT_PATH + "ic_menu" + EXTENSION;

File: ClassySharkWS/src/com/google/classyshark/gui/panel/displayarea/doodles/SharkBG.java
Patch:
@@ -46,6 +46,6 @@ class SharkBG {
                       + "               ii!                             '*YMWM,                        \n"
                       + "               I'                                  \"YM\n"
                       + "\n\n\n\thttp://www.retrojunkie.com/asciiart/animals/sharks.htm"
-                      + "\n\n\n\tClassyShark ver. 6.1 powered by SilverGhost";
+                      + "\n\n\n\tClassyShark ver. 6.2 powered by SilverGhost";
 
 }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/toolbar/RecentArchivesButton.java
Patch:
@@ -37,7 +37,8 @@ public class RecentArchivesButton extends JButton {
     private ToolbarController panel;
 
     public RecentArchivesButton() {
-        super(new ImageIcon(IconSchemes.RECENT_ICON_PATH));
+        super();
+        setIcon(new ImageIcon(getClass().getResource(IconSchemes.RECENT_ICON_PATH)));
         setToolTipText("History");
         popup = new JPopupMenu();
         popup.setLayout(new BoxLayout(popup, BoxLayout.Y_AXIS));

File: ClassySharkWS/src/com/google/classyshark/gui/panel/chart/RingChart.java
Patch:
@@ -178,6 +178,9 @@ public void render(int width, int height, ClassNode rootNode, Graphics g) {
     }
 
     public ClassNode getClassNodeAt(int x, int y) {
+        if (image == null) {
+            return null;
+        }
         int color = image.getRGB(x,y);
         return colorClassNodeMap.get(color);
     }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/chart/RingChart.java
Patch:
@@ -178,6 +178,9 @@ public void render(int width, int height, ClassNode rootNode, Graphics g) {
     }
 
     public ClassNode getClassNodeAt(int x, int y) {
+        if (image == null) {
+            return null;
+        }
         int color = image.getRGB(x,y);
         return colorClassNodeMap.get(color);
     }

File: ClassySharkWS/src/com/google/classyshark/gui/panel/FileTransferHandler.java
Patch:
@@ -32,8 +32,8 @@ public class FileTransferHandler extends TransferHandler {
 
     private final ArchiveDisplayer archiveDisplayer;
 
-    public FileTransferHandler(ArchiveDisplayer archiveViewer) {
-        this.archiveDisplayer = archiveViewer;
+    public FileTransferHandler(ArchiveDisplayer archiveDisplayer) {
+        this.archiveDisplayer = archiveDisplayer;
     }
 
     public int getSourceActions(JComponent c) {

File: ClassySharkWS/src/com/google/classyshark/gui/panel/displayarea/doodles/Doodle.java
Patch:
@@ -18,6 +18,6 @@
 
 public class Doodle {
     public static String get() {
-        return SharkBG.SHARKEY;
+        return SanFranBG.SHARKEY;
     }
 }

File: ClassySharkWS/src/com/google/classyshark/silverghost/translator/jar/JarInfoTranslator.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.google.classyshark.silverghost.translator.jar;
 
-import com.google.classyshark.gui.panel.reducer.Reducer;
 import com.google.classyshark.silverghost.translator.Translator;
 import java.io.File;
 import java.text.DecimalFormat;
@@ -30,7 +29,7 @@
 public class JarInfoTranslator implements Translator {
 
     private final File jarArchive;
-    private final List<String> allClassNames    ;
+    private final List<String> allClassNames;
     private List<ELEMENT> elements = new ArrayList<>();
 
     public JarInfoTranslator(File jarArchive, List<String> allClassNames) {

File: ClassySharkWS/src/com/google/classyshark/Main.java
Patch:
@@ -30,8 +30,7 @@ private Main() {
     }
 
     private static boolean isGui(List<String> argsAsArray) {
-        return argsAsArray.isEmpty() || argsAsArray.size() == 1
-                || argsAsArray.get(0).equalsIgnoreCase("-open");
+        return argsAsArray.isEmpty() || argsAsArray.get(0).equalsIgnoreCase("-open");
     }
 
     public static void main(final String[] args) {

File: ClassySharkWS/src/com/google/classyshark/silverghost/contentreader/ContentReader.java
Patch:
@@ -61,10 +61,9 @@ public ContentReader(File binaryArchive) {
             formatReader = new DexReader(binaryArchive);
         } else if (binaryArchive.getName().toLowerCase().endsWith(".apk")) {
             formatReader = new ApkReader(binaryArchive);
-        } if (binaryArchive.getName().toLowerCase().endsWith(".aar")) {
+        } else if (binaryArchive.getName().toLowerCase().endsWith(".aar")) {
             formatReader = new AarReader(binaryArchive);
-        }
-        else {
+        } else {
             formatReader = new ClazzReader(binaryArchive);
         }
     }

File: ClassySharkWS/src/com/google/classyshark/ui/Main.java
Patch:
@@ -27,15 +27,15 @@ public class Main {
     private Main() {
     }
 
-    private static boolean isInUIMode(List<String> argsAsArray) {
+    private static boolean isInGUIMode(List<String> argsAsArray) {
         return argsAsArray.isEmpty() || argsAsArray.size() == 1
                 || argsAsArray.get(0).equalsIgnoreCase("-open");
     }
 
     public static void main(final String[] args) {
         final List<String> argsAsArray = Arrays.asList(args);
 
-        if (isInUIMode(argsAsArray)) {
+        if (isInGUIMode(argsAsArray)) {
             GUIMode.workInGUIMode(argsAsArray);
         } else {
             ShellMode.workInShellMode(argsAsArray);

File: ClassySharkWS/src/com/google/classyshark/ui/panel/displayarea/DisplayArea.java
Patch:
@@ -328,6 +328,7 @@ public void displayError() {
             StyleConstants.setFontSize(style, 13);
             StyleConstants.setFontFamily(style, "Menlo");
 
+            doc.insertString(doc.getLength(), "\n\n\n\t\t\t There was a problem loading the class  ", style);
             doc.insertString(doc.getLength(), SharkBG.SHARKEY, style);
         } catch (BadLocationException e) {
             e.printStackTrace();

File: ClassySharkWS/src/com/google/classyshark/ui/panel/tree/FilesTree.java
Patch:
@@ -164,7 +164,7 @@ public void valueChanged(TreeSelectionEvent e) {
                             (String) defaultMutableTreeNode.getUserObject());
                     return;
                 }
-                
+
                 if (!defaultMutableTreeNode.isLeaf()) return;
 
                 if (FilesTree.this.viewerController != null) {

File: ClassySharkWS/src/com/google/classyshark/ui/panel/tree/FilesTree.java
Patch:
@@ -164,8 +164,7 @@ public void valueChanged(TreeSelectionEvent e) {
                             (String) defaultMutableTreeNode.getUserObject());
                     return;
                 }
-
-
+                
                 if (!defaultMutableTreeNode.isLeaf()) return;
 
                 if (FilesTree.this.viewerController != null) {

File: ClassySharkWS/src/com/google/classyshark/translator/jar/JarInfoTranslator.java
Patch:
@@ -65,7 +65,7 @@ public List<String> getDependencies() {
 
     private static String readableFileSize(long size) {
         if(size <= 0) return "0";
-        final String[] units = new String[] { "B", "kB", "MB", "GB", "TB" };
+        final String[] units = new String[] { "B", "KB", "MB", "GB", "TB" };
         int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
         return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
     }

File: ClassySharkWS/src/com/google/classyshark/ui/panel/displayarea/SharkBG.java
Patch:
@@ -46,5 +46,5 @@ class SharkBG {
               + "               ii!                             '*YMWM,                        \n"
               + "               I'                                  \"YM\n"
               + "\n\n\n\thttp://www.retrojunkie.com/asciiart/animals/sharks.htm"
-                      + "\n\n\n\tClassyShark ver. 3.2";
+                      + "\n\n\n\tClassyShark ver. 4.0";
 }

File: ClassySharkWS/src/com/google/classyshark/ui/panel/io/FileChooserUtils.java
Patch:
@@ -33,12 +33,11 @@ public static String getFileChooserDescription() {
         return "dex, jar, apk, class";
     }
 
-    public static boolean isSupportedArchiveFile(File f) {
+    private static boolean isSupportedArchiveFile(File f) {
         String filename = f.getName().toLowerCase();
         return filename.endsWith(".dex")
                 || filename.endsWith(".jar")
                 || filename.endsWith(".apk")
                 || filename.endsWith(".class");
     }
-
 }

File: ClassySharkWS/src/com/google/classyshark/ui/panel/toolbar/RecentArchivesButton.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.google.classyshark.ui.panel.toolbar;
 
-import com.google.classyshark.ui.panel.ClassySharkPanel;
 import com.google.classyshark.ui.panel.ColorScheme;
 import com.google.classyshark.ui.panel.io.RecentArchivesConfig;
 import java.awt.Font;

File: ClassySharkWS/src/com/google/classyshark/ui/panel/tree/FilesTree.java
Patch:
@@ -185,6 +185,7 @@ public static void main(String[] args) {
 
         JFrame frame = new JFrame("Test");
         JScrollPane scrolledTree = new JScrollPane(filesTree.getJTree());
+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         frame.getContentPane().add(scrolledTree);
         frame.pack();
         frame.setVisible(true);

File: ClassySharkWS/src/com/google/classyshark/translator/java/MetaObjectFactory.java
Patch:
@@ -55,10 +55,9 @@ public static MetaObject buildMetaObject(String className, File archiveFile) {
 
     private static MetaObject getMetaObjectFromJar(String className, File archiveFile) {
         MetaObject result = null;
-        String trimmedName = className.substring(0, className.lastIndexOf('.'));
         Class clazz;
         try {
-            clazz = ClassUtils.loadClassFromJar(archiveFile.getPath(), trimmedName);
+            clazz = ClassUtils.loadClassFromJar(archiveFile.getPath(), className);
         } catch (ClassNotFoundException e) {
             clazz = Exception.class;
         } catch (MalformedURLException e) {

File: ClassySharkWS/src/com/google/classyshark/translator/java/clazz/reflect/ClassUtils.java
Patch:
@@ -29,7 +29,6 @@ public class ClassUtils {
     private ClassUtils() {
     }
 
-    // TODO add logic when the className ends with .class
     public static Class loadClassFromJar(String jarAbsolutePath, String className) throws
             MalformedURLException, ClassNotFoundException {
         Class result;

File: ClassySharkWS/src/com/google/classyshark/ui/panel/displayarea/DisplayArea.java
Patch:
@@ -324,7 +324,7 @@ public void displayError() {
 
         try {
             StyleConstants.setForeground(style, ColorScheme.FOREGROUND_YELLOW);
-            StyleConstants.setFontSize(style, 16);
+            StyleConstants.setFontSize(style, 13);
             StyleConstants.setFontFamily(style, "Menlo");
 
             doc.insertString(doc.getLength(), SharkBG.SHARKEY, style);

File: ClassySharkWS/src/com/google/classyshark/ui/viewer/ClassySharkPanel.java
Patch:
@@ -131,12 +131,13 @@ public String getDescription() {
             }
         });
 
-        fc.setCurrentDirectory(new File(System.getProperty("user.home")));
+        fc.setCurrentDirectory(ClassySharkConfig.INSTANCE.getCurrentDirectory());
 
         int returnVal = fc.showOpenDialog(this);
         toolBar.setText("");
         if (returnVal == JFileChooser.APPROVE_OPTION) {
             File resultFile = fc.getSelectedFile();
+            ClassySharkConfig.INSTANCE.setCurrentDirectory(fc.getCurrentDirectory());
             updateUiAfterFileRead(resultFile);
         }
     }

File: ClassySharkWS/src/com/google/classyshark/translator/xml/Translator2AndroidXml.java
Patch:
@@ -17,15 +17,13 @@
 package com.google.classyshark.translator.xml;
 
 import com.google.classyshark.translator.Translator;
-
 import java.io.ByteArrayOutputStream;
 import java.io.Closeable;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.ArrayList;
-import java.util.Enumeration;
 import java.util.List;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;

File: ClassySharkWS/src/com/google/classyshark/translator/TranslatorFactory.java
Patch:
@@ -31,7 +31,7 @@ public static Translator createTranslator(String className, File archiveFile) {
         }
 
         if (className.endsWith(".dex")) {
-           return new DexInfoTranslator(className, archiveFile);
+           return new DexInfoTranslator(className);
         }
 
         return new Translator2Java(className, archiveFile);

File: ClassySharkWS/src/com/google/classyshark/ui/viewer/displayarea/InfoBG.java
Patch:
@@ -33,7 +33,7 @@ public class InfoBG {
                     + "\t\t\t\n5. Double click on import opens class, \nif the class is part of the "
                     + "loaded archive"
                     + "\t\t\t\n6. Mouse selection for command line removes the selected text"
-                    + "\t\t\t\n7. Mouse selection for text shows pop up to copy/paste"
+                    + "\t\t\t"
                     + "\n\n\t\t\tKEYBOARD USAGE"
                     + "\n\t            =================="
                     + "\t\t\t\n1. Can pass archives as command line arguments"

File: ClassySharkWS/src/com/google/classyshark/ui/Main.java
Patch:
@@ -68,6 +68,7 @@ private static void buildAndShowClassySharkFrame(List<String> cmdLineArgs) {
            frame = new ClassySharkTabsFrame("ClassyShark Browser", cmdLineArgs);
         } else {
             frame = new JFrame();
+            frame.setTitle("ClassyShark");
 
             if (cmdLineArgs.size() == 1) {
                 frame.getContentPane().add(

File: ClassySharkWS/src/com/google/classyshark/ui/ExperimentalBlackFrame.java
Patch:
@@ -20,11 +20,13 @@ public static void Driver (String args[]) {
         f.setUndecorated(true);
         f.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
 
+        ////
         File testFile = new File(System.getProperty("user.home") +
                 "/Desktop/Scenarios/2 Samples/android.jar");
 
         ClassySharkPanel tabPanel = new ClassySharkPanel(testFile);
         f.setContentPane(tabPanel);
+        /// 
 
         DefaultMetalTheme blackSchemeForMetal =
                 new DefaultMetalTheme() {

File: ClassySharkWS/src/com/google/classyshark/ui/viewer/ClassySharkPanel.java
Patch:
@@ -213,6 +213,7 @@ public void onSelectedClassName(String className) {
     public void updateUiAfterFileRead(JTabbedPane tabbedPane,
                                       File resultFile,
                                       int myIndexAtTabbedPane) {
+        // TODO update file name if there is panel and not tab view
         String tabName = PanelUtils.fitArchiveNameToTab(resultFile);
         if( jTabbedPane != null) {
             tabbedPane.setTitleAt(myIndexAtTabbedPane, tabName);

File: ClassySharkWS/src/com/google/classyshark/ui/viewer/toolbar/ToolBar.java
Patch:
@@ -232,6 +232,4 @@ public void actionPerformed(ActionEvent e) {
         });
         return jToggleButton;
     }
-
-
 }

File: ClassySharkWS/src/com/google/classyshark/ui/tabs/tabpanel/displayarea/InfoBG.java
Patch:
@@ -22,7 +22,7 @@
 public class InfoBG {
 
     public static final String INFO =
-            "\n\n\t\t\tClassyShark ver. 2.8"
+            "\n\n\t\t\tClassyShark ver. 2.9"
                     + "\n\t            ========================"
                     + "\n\n\t\t\tMOUSE USAGE"
                     + "\n\t            ==============="

File: ClassySharkWS/src/com/google/classyshark/ui/tabs/ToolBar.java
Patch:
@@ -185,7 +185,7 @@ private JButton buildViewButton() {
         result.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                tabPanel.onViewFilePressed();
+                tabPanel.onViewTopClassPressed();
             }
         });
 
@@ -226,7 +226,7 @@ private JToggleButton buildLeftPanelToggleButton() {
         jToggleButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                tabPanel.changeLeftPaneVisibitily(jToggleButton.isSelected());
+                tabPanel.changeLeftPaneVisibility(jToggleButton.isSelected());
             }
         });
         return jToggleButton;

File: ClassySharkWS/src/com/google/classyshark/translator/java/clazz/reflect/ClassLoadingUtils.java
Patch:
@@ -26,7 +26,8 @@
  */
 public class ClassLoadingUtils {
 
-    private ClassLoadingUtils() {}
+    private ClassLoadingUtils() {
+    }
 
     // TODO add logic when the className ends with .class
     public static Class load(String jarAbsolutePath, String className) throws

File: ClassySharkWS/src/com/google/classyshark/translator/Translator.java
Patch:
@@ -19,7 +19,8 @@
 import java.util.List;
 
 /**
- * Is a function : (binary data) --> list of elements <String, Tag>
+ * Is a function : (binary data) --> list of elements <String, Tag>, with Java and XML
+ * semantics
  */
 public interface Translator {
 

File: ClassySharkWS/src/com/google/classyshark/translator/TranslatorFactory.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.google.classyshark.translator;
 
+import com.google.classyshark.translator.java.Translator2Java;
+import com.google.classyshark.translator.xml.Translator2AndroidXml;
 import java.io.File;
 
 /**

File: ClassySharkWS/src/com/google/classyshark/translator/java/clazz/TypesToNamesMapper.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.translator.metaobject.clazz;
+package com.google.classyshark.translator.java.clazz;
 
-import com.google.classyshark.translator.metaobject.dex.DexlibAdapter;
+import com.google.classyshark.translator.java.dex.DexlibAdapter;
 import java.util.HashMap;
 import java.util.Set;
 

File: ClassySharkWS/src/com/google/classyshark/translator/java/dex/MetaObjectDex.java
Patch:
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.translator.metaobject.dex;
+package com.google.classyshark.translator.java.dex;
 
 import com.google.classyshark.translator.Translator;
 import com.google.classyshark.translator.TranslatorFactory;
-import com.google.classyshark.translator.metaobject.MetaObject;
+import com.google.classyshark.translator.java.MetaObject;
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;

File: ClassySharkWS/src/com/google/classyshark/translator/xml/Translator2AndroidXml.java
Patch:
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package com.google.classyshark.translator;
+package com.google.classyshark.translator.xml;
 
+import com.google.classyshark.translator.Translator;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.InputStream;

File: ClassySharkWS/src/com/google/classyshark/ui/tabs/displayarea/DisplayArea.java
Patch:
@@ -17,7 +17,7 @@
 package com.google.classyshark.ui.tabs.displayarea;
 
 import com.google.classyshark.translator.Translator;
-import com.google.classyshark.translator.Translator2Java;
+import com.google.classyshark.translator.java.Translator2Java;
 import com.google.classyshark.ui.ClassySharkFrame.ColorScheme;
 import com.google.classyshark.ui.tabs.TabPanel;
 import java.awt.Component;

File: ClassySharkWS/src/com/google/classyshark/ztests/StressTestDex.java
Patch:
@@ -19,7 +19,7 @@
 import com.google.classyshark.reducer.ArchiveReader;
 import com.google.classyshark.translator.Translator;
 import com.google.classyshark.translator.TranslatorFactory;
-import com.google.classyshark.translator.metaobject.dex.DexlibAdapter;
+import com.google.classyshark.translator.java.dex.DexlibAdapter;
 import java.io.File;
 import java.util.Set;
 import org.jf.dexlib2.iface.ClassDef;

File: ClassySharkWS/src/com/google/classyshark/ui/tabs/TabPanel.java
Patch:
@@ -61,7 +61,6 @@ public TabPanel(JTabbedPane tabbedPane, int myIndex) {
         super(false);
 
         BorderLayout borderLayout = new BorderLayout();
-        borderLayout.setVgap(5);
         this.setLayout(borderLayout);
         this.tabbedPane = tabbedPane;
         this.myIndexAtTabbedPane = myIndex;

File: ClassySharkWS/src/com/google/classyshark/ui/tabs/displayarea/InfoBG.java
Patch:
@@ -22,7 +22,7 @@
 public class InfoBG {
 
     public static final String INFO =
-            "\n\n\t\t\tClassyShark ver. 2.4"
+            "\n\n\t\t\tClassyShark ver. 2.5"
                     + "\n\t            ========================"
                     + "\n\n\t\t\tMOUSE USAGE"
                     + "\n\t            ==============="

