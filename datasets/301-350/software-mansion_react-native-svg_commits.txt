File: android/src/main/java/com/horcrux/svg/ClipPathView.java
Patch:
@@ -40,7 +40,7 @@ boolean isResponsible() {
   }
 
   @Override
-  int hitTest(float[] src) {
+  public int hitTest(float[] src) {
     return -1;
   }
 

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -254,7 +254,7 @@ Path getPath(final Canvas canvas, final Paint paint, final Region.Op op) {
   }
 
   @Override
-  int hitTest(final float[] src) {
+  public int hitTest(final float[] src) {
     if (!mInvertible) {
       return -1;
     }

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -676,7 +676,7 @@ private void setupPaint(Paint paint, float opacity, ReadableArray colors) {
   abstract Path getPath(Canvas canvas, Paint paint);
 
   @Override
-  int hitTest(final float[] src) {
+  public int hitTest(final float[] src) {
     if (mPath == null || !mInvertible) {
       return -1;
     }

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -1208,7 +1208,7 @@ private void setupTextPath() {
   }
 
   @Override
-  int hitTest(final float[] src) {
+  public int hitTest(final float[] src) {
     if (mContent == null) {
       return super.hitTest(src);
     }

File: android/src/main/java/com/horcrux/svg/UseView.java
Patch:
@@ -100,7 +100,7 @@ void draw(Canvas canvas, Paint paint, float opacity) {
   }
 
   @Override
-  int hitTest(float[] src) {
+  public int hitTest(float[] src) {
     if (!mInvertible) {
       return -1;
     }

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -677,7 +677,7 @@ private void setupPaint(Paint paint, float opacity, ReadableArray colors) {
 
   @Override
   int hitTest(final float[] src) {
-    if (mPath == null || !mInvertible || !mTransformInvertible) {
+    if (mPath == null || !mInvertible) {
       return -1;
     }
 

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -518,8 +518,8 @@ public void setTransform(VirtualView node, @Nullable ReadableArray matrix) {
     }
 
     Matrix m = node.getMatrix();
-    node.mTransform = m;
-    node.mTransformInvertible = m.invert(node.mInvTransform);
+    node.mMatrix = m;
+    node.mInvertible = m.invert(node.mInvMatrix);
   }
 
   @ReactProp(name = "transform")

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -1212,7 +1212,7 @@ int hitTest(final float[] src) {
     if (mContent == null) {
       return super.hitTest(src);
     }
-    if (mPath == null || !mInvertible || !mTransformInvertible) {
+    if (mPath == null || !mInvertible) {
       return -1;
     }
 

File: android/src/main/java/com/horcrux/svg/UseView.java
Patch:
@@ -101,7 +101,7 @@ void draw(Canvas canvas, Paint paint, float opacity) {
 
   @Override
   int hitTest(float[] src) {
-    if (!mInvertible || !mTransformInvertible) {
+    if (!mInvertible) {
       return -1;
     }
 

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -11,6 +11,7 @@
 import android.annotation.SuppressLint;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Rect;
@@ -189,7 +190,7 @@ public int reactTagForTouch(float touchX, float touchY) {
   final Matrix mInvViewBoxMatrix = new Matrix();
   private boolean mInvertible = true;
   private boolean mRendered = false;
-  int mCurrentColor = 0;
+  int mCurrentColor = Color.BLACK;
 
   boolean notRendered() {
     return !mRendered;

File: android/src/main/java/com/horcrux/svg/FeCompositeView.java
Patch:
@@ -90,6 +90,7 @@ public Bitmap applyFilter(HashMap<String, Bitmap> resultsMap, Bitmap prevResult)
         int[] pixels2 = new int[nPixels];
         result.getPixels(
             pixels1, 0, result.getWidth(), 0, 0, result.getWidth(), result.getHeight());
+        in2.getPixels(pixels2, 0, result.getWidth(), 0, 0, result.getWidth(), result.getHeight());
 
         for (int i = 0; i < nPixels; i++) {
           int color1 = pixels1[i];

File: android/src/main/java/com/horcrux/svg/FeOffsetView.java
Patch:
@@ -44,8 +44,10 @@ public Bitmap applyFilter(HashMap<String, Bitmap> resultsMap, Bitmap prevResult)
     float dy = this.mDy != null ? (float) this.relativeOnHeight(this.mDy) : 0;
     RectF frame = new RectF(0, 0, dx, dy);
     this.getSvgView().getCtm().mapRect(frame);
+    dx = frame.left < 0 ? frame.left : frame.width();
+    dy = frame.top < 0 ? frame.top : frame.height();
 
-    canvas.drawBitmap(source, frame.width(), frame.height(), null);
+    canvas.drawBitmap(source, dx, dy, null);
 
     return result;
   }

File: android/src/main/java/com/horcrux/svg/FilterRegion.java
Patch:
@@ -36,6 +36,9 @@ private double getRelativeOrDefault(
 
   public Rect getCropRect(VirtualView view, FilterProperties.Units units, RectF bounds) {
     double x, y, width, height;
+    if (bounds == null) {
+      return new Rect(0, 0, 0, 0);
+    }
     if (units == FilterProperties.Units.OBJECT_BOUNDING_BOX) {
       x = bounds.left + view.relativeOnFraction(this.mX, bounds.width());
       y = bounds.top + view.relativeOnFraction(this.mY, bounds.height());

File: android/src/main/java/com/horcrux/svg/FilterView.java
Patch:
@@ -92,7 +92,7 @@ public Bitmap applyFilter(Bitmap source, Bitmap background, RectF renderableBoun
             currentFilter.mFilterSubregion.getCropRect(
                 currentFilter,
                 this.mPrimitiveUnits,
-                this.mFilterUnits == FilterProperties.Units.USER_SPACE_ON_USE
+                this.mPrimitiveUnits == FilterProperties.Units.USER_SPACE_ON_USE
                     ? new RectF(filterRegionRect)
                     : renderableBounds);
         canvas.drawBitmap(currentFilter.applyFilter(mResultsMap, res), cropRect, cropRect, null);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGCircleManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGCircleManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGClipPathManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGEllipseManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGEllipseManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGGroupManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java
Patch:
@@ -65,7 +65,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +74,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
Patch:
@@ -29,10 +29,10 @@ public interface RNSVGImageManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGLineManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGLineManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGMarkerManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGMarkerManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGMaskManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGPathManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGPathManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGPatternManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGPatternManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGRectManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGRectManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGSymbolManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGTSpanManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGTextManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGTextPathManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGTextPathManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ColorPropConverter;
 import com.facebook.react.bridge.DynamicFromObject;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.BaseViewManagerDelegate;
 import com.facebook.react.uimanager.BaseViewManagerInterface;
 
@@ -65,7 +64,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
       case "fill":
-        mViewManager.setFill(view, (ReadableMap) value);
+        mViewManager.setFill(view, new DynamicFromObject(value));
         break;
       case "fillOpacity":
         mViewManager.setFillOpacity(view, value == null ? 1f : ((Double) value).floatValue());
@@ -74,7 +73,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setFillRule(view, value == null ? 1 : ((Double) value).intValue());
         break;
       case "stroke":
-        mViewManager.setStroke(view, (ReadableMap) value);
+        mViewManager.setStroke(view, new DynamicFromObject(value));
         break;
       case "strokeOpacity":
         mViewManager.setStrokeOpacity(view, value == null ? 1f : ((Double) value).floatValue());

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
Patch:
@@ -13,7 +13,6 @@
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 
 public interface RNSVGUseManagerInterface<T extends View> {
   void setName(T view, @Nullable String value);
@@ -29,10 +28,10 @@ public interface RNSVGUseManagerInterface<T extends View> {
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
   void setColor(T view, @Nullable Integer value);
-  void setFill(T view, @Nullable ReadableMap value);
+  void setFill(T view, Dynamic value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);
-  void setStroke(T view, @Nullable ReadableMap value);
+  void setStroke(T view, Dynamic value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, Dynamic value);
   void setStrokeLinecap(T view, int value);

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -189,7 +189,7 @@ public int reactTagForTouch(float touchX, float touchY) {
   final Matrix mInvViewBoxMatrix = new Matrix();
   private boolean mInvertible = true;
   private boolean mRendered = false;
-  int mTintColor = 0;
+  int mCurrentColor = 0;
 
   boolean notRendered() {
     return !mRendered;
@@ -209,8 +209,8 @@ private void clearChildCache() {
     }
   }
 
-  public void setTintColor(Integer tintColor) {
-    mTintColor = tintColor != null ? tintColor : 0;
+  public void setCurrentColor(Integer color) {
+    mCurrentColor = color != null ? color : 0;
     invalidate();
     clearChildCache();
   }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGCircleManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGEllipseManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGImageManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGLineManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGMarkerManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGPathManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGPatternManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGRectManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.java
Patch:
@@ -48,9 +48,6 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "meetOrSlice":
         mViewManager.setMeetOrSlice(view, value == null ? 0 : ((Double) value).intValue());
         break;
-      case "tintColor":
-        mViewManager.setTintColor(view, ColorPropConverter.getColor(value, view.getContext()));
-        break;
       case "color":
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.java
Patch:
@@ -23,7 +23,6 @@ public interface RNSVGSvgViewAndroidManagerInterface<T extends View> {
   void setVbHeight(T view, float value);
   void setAlign(T view, @Nullable String value);
   void setMeetOrSlice(T view, int value);
-  void setTintColor(T view, @Nullable Integer value);
   void setColor(T view, @Nullable Integer value);
   void setPointerEvents(T view, @Nullable String value);
   void setHasTVPreferredFocus(T view, boolean value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGTextPathManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
Patch:
@@ -28,6 +28,7 @@ public interface RNSVGUseManagerInterface<T extends View> {
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
   void setPointerEvents(T view, @Nullable String value);
+  void setColor(T view, @Nullable Integer value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -377,7 +377,7 @@ void render(Canvas canvas, Paint paint, float opacity) {
         canvas.drawBitmap(elementBitmap, 0, 0, bitmapPaint);
         canvas.restoreToCount(saveCount);
       } else {
-        canvas.saveLayer(null, paint);
+        canvas.saveLayer(null, new Paint());
         draw(canvas, paint, opacity);
       }
 

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -136,6 +136,9 @@ protected void onDraw(Canvas canvas) {
       mBitmap = drawOutput();
     }
     if (mBitmap != null) {
+      mPaint.reset();
+      mPaint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
+      mPaint.setTypeface(Typeface.DEFAULT);
       if (mScaleX != 1 || mScaleY != 1) {
         canvas.drawBitmap(
             mBitmap,

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -128,7 +128,7 @@ protected void onDetachedFromWindow() {
 
   @Override
   protected void onDraw(Canvas canvas) {
-    if (getParent() instanceof VirtualView) {
+    if (getParent() instanceof VirtualView || mScaleX <= 0 || mScaleY <= 0) {
       return;
     }
     super.onDraw(canvas);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerDelegate.java
Patch:
@@ -127,7 +127,7 @@ public void setProperty(T view, String propName, @Nullable Object value) {
         mViewManager.setNeedsOffscreenAlphaCompositing(view, value == null ? false : (boolean) value);
         break;
       case "hitSlop":
-        mViewManager.setHitSlop(view, (ReadableMap) value);
+        mViewManager.setHitSlop(view, new DynamicFromObject(value));
         break;
       case "borderTopColor":
         mViewManager.setBorderTopColor(view, ColorPropConverter.getColor(value, view.getContext()));

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewAndroidManagerInterface.java
Patch:
@@ -49,7 +49,7 @@ public interface RNSVGSvgViewAndroidManagerInterface<T extends View> {
   void setBackfaceVisibility(T view, @Nullable String value);
   void setBorderStyle(T view, @Nullable String value);
   void setNeedsOffscreenAlphaCompositing(T view, boolean value);
-  void setHitSlop(T view, @Nullable ReadableMap value);
+  void setHitSlop(T view, Dynamic value);
   void setBorderTopColor(T view, @Nullable Integer value);
   void setNextFocusLeft(T view, int value);
   void setBorderTopRightRadius(T view, double value);

File: android/src/main/java/com/horcrux/svg/FeColorMatrixView.java
Patch:
@@ -44,7 +44,7 @@ public Bitmap applyFilter(HashMap<String, Bitmap> resultsMap, Bitmap prevResult)
         float[] rawMatrix = new float[mValues.size()];
 
         for (int i = 0; i < this.mValues.size(); i++) {
-          rawMatrix[i] = (float) this.mValues.getDouble(i);
+          rawMatrix[i] = (float) this.mValues.getDouble(i) * (i % 5 == 4 ? 255 : 1);
         }
 
         colorMatrix.set(rawMatrix);
@@ -88,8 +88,7 @@ public Bitmap applyFilter(HashMap<String, Bitmap> resultsMap, Bitmap prevResult)
       case LUMINANCE_TO_ALPHA:
         colorMatrix.set(
             new float[] {
-              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2125f, 0.7154f, 0.0721f, 0, 0, 0, 0, 0,
-              0, 1
+              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2125f, 0.7154f, 0.0721f, 0, 0,
             });
         break;
     }

File: android/src/main/java/com/horcrux/svg/ImageView.java
Patch:
@@ -35,7 +35,6 @@
 import com.facebook.react.views.imagehelper.ImageSource;
 import com.facebook.react.views.imagehelper.ResourceDrawableIdHelper;
 import com.horcrux.svg.events.SvgLoadEvent;
-
 import java.util.concurrent.atomic.AtomicBoolean;
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
@@ -142,8 +141,9 @@ private void loadBitmap(final ImagePipeline imagePipeline, final ImageRequest re
           @Override
           public void onNewResultImpl(Bitmap bitmap) {
             final EventDispatcher mEventDispatcher =
-            UIManagerHelper.getEventDispatcherForReactTag(mContext, getId());
-            mEventDispatcher.dispatchEvent(new SvgLoadEvent(
+                UIManagerHelper.getEventDispatcherForReactTag(mContext, getId());
+            mEventDispatcher.dispatchEvent(
+                new SvgLoadEvent(
                     UIManagerHelper.getSurfaceId(ImageView.this),
                     getId(),
                     mContext,

File: android/src/main/java/com/horcrux/svg/FilterView.java
Patch:
@@ -80,7 +80,8 @@ public Bitmap applyFilter(
 
     for (int i = 0; i < getChildCount(); i++) {
       View node = getChildAt(i);
-      if (node instanceof FilterPrimitiveView currentFilter) {
+      if (node instanceof FilterPrimitiveView) {
+        FilterPrimitiveView currentFilter = (FilterPrimitiveView) node;
         res = currentFilter.applyFilter(mResultsMap, res);
         String resultName = currentFilter.getResult();
         if (resultName != null) {

File: android/src/main/java/com/horcrux/svg/TextView.java
Patch:
@@ -20,7 +20,6 @@
 import android.view.ViewParent;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.bridge.ReadableArray;
 import java.util.ArrayList;
 import javax.annotation.Nullable;
 

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "cx":
         mViewManager.setCx(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGCircleManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setCx(T view, Dynamic value);
   void setCy(T view, Dynamic value);
   void setR(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "cx":
         mViewManager.setCx(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGEllipseManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setCx(T view, Dynamic value);
   void setCy(T view, Dynamic value);
   void setRx(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "x":
         mViewManager.setX(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGImageManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setX(T view, Dynamic value);
   void setY(T view, Dynamic value);
   void setWidth(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "x1":
         mViewManager.setX1(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGLineManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setX1(T view, Dynamic value);
   void setY1(T view, Dynamic value);
   void setX2(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGMarkerManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "d":
         mViewManager.setD(view, value == null ? null : (String) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
Patch:
@@ -41,5 +41,6 @@ public interface RNSVGPathManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setD(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGPatternManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "x":
         mViewManager.setX(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGRectManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setX(T view, Dynamic value);
   void setY(T view, Dynamic value);
   void setHeight(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "fontSize":
         mViewManager.setFontSize(view, new DynamicFromObject(value));
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGTextPathManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setFontSize(T view, Dynamic value);
   void setFontWeight(T view, Dynamic value);
   void setFont(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java
Patch:
@@ -99,6 +99,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "propList":
         mViewManager.setPropList(view, (ReadableArray) value);
         break;
+      case "filter":
+        mViewManager.setFilter(view, value == null ? null : (String) value);
+        break;
       case "href":
         mViewManager.setHref(view, value == null ? null : (String) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
Patch:
@@ -41,6 +41,7 @@ public interface RNSVGUseManagerInterface<T extends View> {
   void setStrokeMiterlimit(T view, float value);
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
+  void setFilter(T view, @Nullable String value);
   void setHref(T view, @Nullable String value);
   void setX(T view, Dynamic value);
   void setY(T view, Dynamic value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
Patch:
@@ -126,6 +126,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "maskContentUnits":
         mViewManager.setMaskContentUnits(view, value == null ? 0 : ((Double) value).intValue());
         break;
+      case "maskType":
+        mViewManager.setMaskType(view, value == null ? 0 : ((Double) value).intValue());
+        break;
       default:
         super.setProperty(view, propName, value);
     }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -50,4 +50,5 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setWidth(T view, Dynamic value);
   void setMaskUnits(T view, int value);
   void setMaskContentUnits(T view, int value);
+  void setMaskType(T view, int value);
 }

File: android/src/main/java/com/horcrux/svg/RNSVGRenderableManager.java
Patch:
@@ -23,7 +23,6 @@
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.module.annotations.ReactModule;
-import com.horcrux.rnsvg.NativeSvgRenderableModuleSpec;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;

File: android/src/main/java/com/horcrux/svg/SvgViewModule.java
Patch:
@@ -14,7 +14,6 @@
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.UiThreadUtil;
 import com.facebook.react.module.annotations.ReactModule;
-import com.horcrux.rnsvg.NativeSvgViewModuleSpec;
 import javax.annotation.Nonnull;
 
 @ReactModule(name = SvgViewModule.NAME)

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -339,7 +339,7 @@ String toDataURL() {
     bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
     bitmap.recycle();
     byte[] bitmapBytes = stream.toByteArray();
-    return Base64.encodeToString(bitmapBytes, Base64.DEFAULT);
+    return Base64.encodeToString(bitmapBytes, Base64.NO_WRAP);
   }
 
   String toDataURL(int width, int height) {
@@ -353,7 +353,7 @@ String toDataURL(int width, int height) {
     bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
     bitmap.recycle();
     byte[] bitmapBytes = stream.toByteArray();
-    return Base64.encodeToString(bitmapBytes, Base64.DEFAULT);
+    return Base64.encodeToString(bitmapBytes, Base64.NO_WRAP);
   }
 
   void enableTouchEvents() {

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -273,7 +273,7 @@ public void setStrokeDashoffset(float strokeDashoffset) {
   }
 
   public void setStrokeWidth(Dynamic strokeWidth) {
-    this.strokeWidth = SVGLength.from(strokeWidth);
+    this.strokeWidth = strokeWidth.isNull() ? new SVGLength(1) : SVGLength.from(strokeWidth);
     invalidate();
   }
 

File: android/src/main/java/com/horcrux/svg/RNSVGRenderableManager.java
Patch:
@@ -8,7 +8,7 @@
 
 package com.horcrux.svg;
 
-import static com.facebook.react.common.StandardCharsets.UTF_8;
+import static java.nio.charset.StandardCharsets.UTF_8;
 
 import android.content.res.Resources;
 import android.graphics.Matrix;

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -74,7 +74,7 @@ public void setId(int id) {
   }
 
   @Override
-  public void onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) {
+  public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {
     super.onInitializeAccessibilityNodeInfo(info);
 
     Rect r = new Rect();

File: android/src/main/java/com/horcrux/svg/MarkerView.java
Patch:
@@ -160,15 +160,15 @@ void renderMarker(
 
     markerTransform.reset();
     Point origin = position.origin;
-    markerTransform.setTranslate((float) origin.x * mScale, (float) origin.y * mScale);
+    markerTransform.setTranslate((float) origin.x, (float) origin.y);
 
     double markerAngle = "auto".equals(mOrient) ? -1 : Double.parseDouble(mOrient);
     float degrees = 180 + (float) (markerAngle == -1 ? position.angle : markerAngle);
     markerTransform.preRotate(degrees);
 
     boolean useStrokeWidth = "strokeWidth".equals(mMarkerUnits);
     if (useStrokeWidth) {
-      markerTransform.preScale(strokeWidth, strokeWidth);
+      markerTransform.preScale(strokeWidth / mScale, strokeWidth / mScale);
     }
 
     double width = relativeOnWidth(mMarkerWidth) / mScale;

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -366,7 +366,7 @@ void render(Canvas canvas, Paint paint, float opacity) {
       float maskY = (float) relativeOnHeight(mask.mY);
       float maskWidth = (float) relativeOnWidth(mask.mW);
       float maskHeight = (float) relativeOnHeight(mask.mH);
-      maskCanvas.clipRect(maskX, maskY, maskWidth, maskHeight);
+      maskCanvas.clipRect(maskX, maskY, maskWidth + maskX, maskHeight + maskY);
 
       Paint maskPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
       mask.draw(maskCanvas, maskPaint, 1);

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -373,6 +373,7 @@ boolean isResponsible() {
 
   abstract Path getPath(Canvas canvas, Paint paint);
 
+  @Nullable
   SvgView getSvgView() {
     if (svgView != null) {
       return svgView;

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -186,7 +186,7 @@ private void clearChildCache() {
   }
 
   public void setTintColor(Integer tintColor) {
-    mTintColor = tintColor;
+    mTintColor = tintColor != null ? tintColor : 0;
     invalidate();
     clearChildCache();
   }

File: android/src/main/java/com/horcrux/svg/SVGLength.java
Patch:
@@ -104,11 +104,11 @@ static SVGLength from(Dynamic dynamic) {
   }
 
   static SVGLength from(String string) {
-    return new SVGLength(string);
+    return string != null ? new SVGLength(string) : new SVGLength();
   }
 
   static SVGLength from(Double value) {
-    return new SVGLength(value);
+    return value != null ? new SVGLength(value) : new SVGLength();
   }
 
   static String toString(Dynamic dynamic) {

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
Patch:
@@ -167,9 +167,6 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "maskContentUnits":
         mViewManager.setMaskContentUnits(view, value == null ? 0 : ((Double) value).intValue());
         break;
-      case "maskTransform":
-        mViewManager.setMaskTransform(view, (ReadableArray) value);
-        break;
       default:
         super.setProperty(view, propName, value);
     }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -56,5 +56,4 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setWidth(T view, @Nullable Double value);
   void setMaskUnits(T view, int value);
   void setMaskContentUnits(T view, int value);
-  void setMaskTransform(T view, @Nullable ReadableArray value);
 }

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -21,6 +21,7 @@
 import com.facebook.react.views.view.ReactViewManager;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
+import java.util.Locale;
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
@@ -174,7 +175,8 @@ public void setPointerEvents(SvgView view, @Nullable String pointerEventsStr) {
       if (superclass != null) {
         Method method = superclass.getDeclaredMethod("setPointerEvents", PointerEvents.class);
         method.setAccessible(true);
-        method.invoke(view, PointerEvents.parsePointerEvents(pointerEventsStr));
+        method.invoke(
+            view, PointerEvents.valueOf(pointerEventsStr.toUpperCase(Locale.US).replace("-", "_")));
       }
     } catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
       e.printStackTrace();

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGCircleManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGCircleManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerDelegate.java
Patch:
@@ -55,6 +55,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       default:
         super.setProperty(view, propName, value);
     }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGDefsManagerInterface.java
Patch:
@@ -25,4 +25,5 @@ public interface RNSVGDefsManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGEllipseManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGEllipseManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGImageManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLineManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGLineManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerDelegate.java
Patch:
@@ -55,6 +55,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "x1":
         if (value instanceof String) {
           mViewManager.setX1(view, (String) value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGLinearGradientManagerInterface.java
Patch:
@@ -25,6 +25,7 @@ public interface RNSVGLinearGradientManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setX1(T view, @Nullable String value);
   void setX1(T view, @Nullable Double value);
   void setY1(T view, @Nullable String value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMarkerManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGMarkerManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGPathManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGPatternManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerDelegate.java
Patch:
@@ -55,6 +55,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fx":
         if (value instanceof String) {
           mViewManager.setFx(view, (String) value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRadialGradientManagerInterface.java
Patch:
@@ -25,6 +25,7 @@ public interface RNSVGRadialGradientManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFx(T view, @Nullable String value);
   void setFx(T view, @Nullable Double value);
   void setFy(T view, @Nullable String value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGRectManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewManagerDelegate.java
Patch:
@@ -64,6 +64,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "color":
         mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       default:
         super.setProperty(view, propName, value);
     }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewManagerInterface.java
Patch:
@@ -25,4 +25,5 @@ public interface RNSVGSvgViewManagerInterface<T extends View> {
   void setMeetOrSlice(T view, int value);
   void setTintColor(T view, @Nullable Integer value);
   void setColor(T view, @Nullable Integer value);
+  void setPointerEvents(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextPathManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGTextPathManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerDelegate.java
Patch:
@@ -56,6 +56,9 @@ public void setProperty(T view, String propName, @Nullable Object value) {
       case "display":
         mViewManager.setDisplay(view, value == null ? null : (String) value);
         break;
+      case "pointerEvents":
+        mViewManager.setPointerEvents(view, value == null ? null : (String) value);
+        break;
       case "fill":
         mViewManager.setFill(view, (ReadableMap) value);
         break;

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
Patch:
@@ -26,6 +26,7 @@ public interface RNSVGUseManagerInterface<T extends View> {
   void setClipRule(T view, int value);
   void setResponsible(T view, boolean value);
   void setDisplay(T view, @Nullable String value);
+  void setPointerEvents(T view, @Nullable String value);
   void setFill(T view, @Nullable ReadableMap value);
   void setFillOpacity(T view, float value);
   void setFillRule(T view, int value);

File: android/src/main/java/com/horcrux/svg/RNSVGRenderableManager.java
Patch:
@@ -124,7 +124,7 @@ public WritableMap getPointAtLength(int tag, ReadableMap options) {
 
     float[] pos = new float[2];
     float[] tan = new float[2];
-    float distance = Math.max(0, Math.min(length, pm.getLength()));
+    float distance = Math.max(0, Math.min(length * scale, pm.getLength()));
     pm.getPosTan(distance, pos, tan);
 
     double angle = Math.atan2(tan[1], tan[0]);

File: TestsExample/android/app/src/main/java/com/testsexample/newarchitecture/MainApplicationReactNativeHost.java
Patch:
@@ -16,8 +16,8 @@
 import com.facebook.react.bridge.UIManager;
 import com.facebook.react.fabric.ComponentFactory;
 import com.facebook.react.fabric.CoreComponentsRegistry;
-import com.facebook.react.fabric.EmptyReactNativeConfig;
 import com.facebook.react.fabric.FabricJSIModuleProvider;
+import com.facebook.react.fabric.ReactNativeConfig;
 import com.facebook.react.uimanager.ViewManagerRegistry;
 import com.testsexample.BuildConfig;
 import com.testsexample.newarchitecture.components.MainComponentsRegistry;
@@ -105,7 +105,7 @@ public JSIModuleProvider<UIManager> getJSIModuleProvider() {
                 return new FabricJSIModuleProvider(
                     reactApplicationContext,
                     componentFactory,
-                    new EmptyReactNativeConfig(),
+                    ReactNativeConfig.DEFAULT_CONFIG,
                     viewManagerRegistry);
               }
             });

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGClipPathManagerInterface.java
Patch:
@@ -32,6 +32,7 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setStroke(T view, @Nullable ReadableMap value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, @Nullable String value);
+  void setStrokeWidth(T view, @Nullable Double value);
   void setStrokeLinecap(T view, int value);
   void setStrokeLinejoin(T view, int value);
   void setStrokeDasharray(T view, @Nullable ReadableArray value);
@@ -40,6 +41,8 @@ public interface RNSVGClipPathManagerInterface<T extends View> {
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
   void setFontSize(T view, @Nullable String value);
+  void setFontSize(T view, @Nullable Double value);
   void setFontWeight(T view, @Nullable String value);
+  void setFontWeight(T view, @Nullable Double value);
   void setFont(T view, @Nullable ReadableMap value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGGroupManagerInterface.java
Patch:
@@ -32,6 +32,7 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setStroke(T view, @Nullable ReadableMap value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, @Nullable String value);
+  void setStrokeWidth(T view, @Nullable Double value);
   void setStrokeLinecap(T view, int value);
   void setStrokeLinejoin(T view, int value);
   void setStrokeDasharray(T view, @Nullable ReadableArray value);
@@ -40,6 +41,8 @@ public interface RNSVGGroupManagerInterface<T extends View> {
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
   void setFontSize(T view, @Nullable String value);
+  void setFontSize(T view, @Nullable Double value);
   void setFontWeight(T view, @Nullable String value);
+  void setFontWeight(T view, @Nullable Double value);
   void setFont(T view, @Nullable ReadableMap value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPathManagerInterface.java
Patch:
@@ -32,6 +32,7 @@ public interface RNSVGPathManagerInterface<T extends View> {
   void setStroke(T view, @Nullable ReadableMap value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, @Nullable String value);
+  void setStrokeWidth(T view, @Nullable Double value);
   void setStrokeLinecap(T view, int value);
   void setStrokeLinejoin(T view, int value);
   void setStrokeDasharray(T view, @Nullable ReadableArray value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSvgViewManagerInterface.java
Patch:
@@ -14,7 +14,9 @@
 
 public interface RNSVGSvgViewManagerInterface<T extends View> {
   void setBbWidth(T view, @Nullable String value);
+  void setBbWidth(T view, @Nullable Double value);
   void setBbHeight(T view, @Nullable String value);
+  void setBbHeight(T view, @Nullable Double value);
   void setMinX(T view, float value);
   void setMinY(T view, float value);
   void setVbWidth(T view, float value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGSymbolManagerInterface.java
Patch:
@@ -32,6 +32,7 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setStroke(T view, @Nullable ReadableMap value);
   void setStrokeOpacity(T view, float value);
   void setStrokeWidth(T view, @Nullable String value);
+  void setStrokeWidth(T view, @Nullable Double value);
   void setStrokeLinecap(T view, int value);
   void setStrokeLinejoin(T view, int value);
   void setStrokeDasharray(T view, @Nullable ReadableArray value);
@@ -40,7 +41,9 @@ public interface RNSVGSymbolManagerInterface<T extends View> {
   void setVectorEffect(T view, int value);
   void setPropList(T view, @Nullable ReadableArray value);
   void setFontSize(T view, @Nullable String value);
+  void setFontSize(T view, @Nullable Double value);
   void setFontWeight(T view, @Nullable String value);
+  void setFontWeight(T view, @Nullable Double value);
   void setFont(T view, @Nullable ReadableMap value);
   void setMinX(T view, float value);
   void setMinY(T view, float value);

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -20,7 +20,6 @@
 import android.view.View;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.uimanager.annotations.ReactProp;
 import javax.annotation.Nullable;
 
 @SuppressLint("ViewConstructor")
@@ -32,7 +31,6 @@ public GroupView(ReactContext reactContext) {
     super(reactContext);
   }
 
-  @ReactProp(name = "font")
   public void setFont(@Nullable ReadableMap font) {
     mFont = font;
     invalidate();

File: android/src/main/java/com/horcrux/svg/PathView.java
Patch:
@@ -13,7 +13,6 @@
 import android.graphics.Paint;
 import android.graphics.Path;
 import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.uimanager.annotations.ReactProp;
 
 @SuppressLint("ViewConstructor")
 class PathView extends RenderableView {
@@ -25,7 +24,6 @@ public PathView(ReactContext reactContext) {
     mPath = new Path();
   }
 
-  @ReactProp(name = "d")
   public void setD(String d) {
     mPath = PathParser.parse(d);
     elements = PathParser.elements;

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -39,7 +39,6 @@
 import android.view.ViewParent;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.uimanager.annotations.ReactProp;
 import com.facebook.react.views.text.ReactFontManager;
 import java.text.Bidi;
 import java.util.ArrayList;
@@ -66,7 +65,6 @@ public TSpanView(ReactContext reactContext) {
     assets = mContext.getResources().getAssets();
   }
 
-  @ReactProp(name = "content")
   public void setContent(@Nullable String content) {
     mContent = content;
     invalidate();

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGForeignObjectManagerInterface.java
Patch:
@@ -44,8 +44,6 @@ public interface RNSVGForeignObjectManagerInterface<T extends View> {
   void setFont(T view, @Nullable ReadableMap value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setForeignObjectheight(T view, @Nullable String value);
-  void setForeignObjectwidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGImageManagerInterface.java
Patch:
@@ -41,8 +41,6 @@ public interface RNSVGImageManagerInterface<T extends View> {
   void setPropList(T view, @Nullable ReadableArray value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setImagewidth(T view, @Nullable String value);
-  void setImageheight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setSrc(T view, @Nullable ReadableMap value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGMaskManagerInterface.java
Patch:
@@ -44,8 +44,6 @@ public interface RNSVGMaskManagerInterface<T extends View> {
   void setFont(T view, @Nullable ReadableMap value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setMaskheight(T view, @Nullable String value);
-  void setMaskwidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
   void setMaskUnits(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGPatternManagerInterface.java
Patch:
@@ -44,8 +44,6 @@ public interface RNSVGPatternManagerInterface<T extends View> {
   void setFont(T view, @Nullable ReadableMap value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setPatternheight(T view, @Nullable String value);
-  void setPatternwidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
   void setPatternUnits(T view, int value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGRectManagerInterface.java
Patch:
@@ -41,8 +41,6 @@ public interface RNSVGRectManagerInterface<T extends View> {
   void setPropList(T view, @Nullable ReadableArray value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setRectheight(T view, @Nullable String value);
-  void setRectwidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
   void setRx(T view, @Nullable String value);

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTSpanManagerInterface.java
Patch:
@@ -42,11 +42,8 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setFontSize(T view, @Nullable String value);
   void setFontWeight(T view, @Nullable String value);
   void setFont(T view, @Nullable ReadableMap value);
-  void setTextAnchor(T view, @Nullable String value);
   void setDx(T view, @Nullable ReadableArray value);
   void setDy(T view, @Nullable ReadableArray value);
-  void setPositionX(T view, @Nullable ReadableArray value);
-  void setPositionY(T view, @Nullable ReadableArray value);
   void setX(T view, @Nullable ReadableArray value);
   void setY(T view, @Nullable ReadableArray value);
   void setRotate(T view, @Nullable ReadableArray value);
@@ -55,5 +52,6 @@ public interface RNSVGTSpanManagerInterface<T extends View> {
   void setBaselineShift(T view, @Nullable String value);
   void setLengthAdjust(T view, @Nullable String value);
   void setAlignmentBaseline(T view, @Nullable String value);
+  void setVerticalAlign(T view, @Nullable String value);
   void setContent(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGTextManagerInterface.java
Patch:
@@ -42,11 +42,8 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setFontSize(T view, @Nullable String value);
   void setFontWeight(T view, @Nullable String value);
   void setFont(T view, @Nullable ReadableMap value);
-  void setTextAnchor(T view, @Nullable String value);
   void setDx(T view, @Nullable ReadableArray value);
   void setDy(T view, @Nullable ReadableArray value);
-  void setPositionX(T view, @Nullable ReadableArray value);
-  void setPositionY(T view, @Nullable ReadableArray value);
   void setX(T view, @Nullable ReadableArray value);
   void setY(T view, @Nullable ReadableArray value);
   void setRotate(T view, @Nullable ReadableArray value);
@@ -55,4 +52,5 @@ public interface RNSVGTextManagerInterface<T extends View> {
   void setBaselineShift(T view, @Nullable String value);
   void setLengthAdjust(T view, @Nullable String value);
   void setAlignmentBaseline(T view, @Nullable String value);
+  void setVerticalAlign(T view, @Nullable String value);
 }

File: android/src/paper/java/com/facebook/react/viewmanagers/RNSVGUseManagerInterface.java
Patch:
@@ -42,8 +42,6 @@ public interface RNSVGUseManagerInterface<T extends View> {
   void setHref(T view, @Nullable String value);
   void setX(T view, @Nullable String value);
   void setY(T view, @Nullable String value);
-  void setUseheight(T view, @Nullable String value);
-  void setUsewidth(T view, @Nullable String value);
   void setHeight(T view, @Nullable String value);
   void setWidth(T view, @Nullable String value);
 }

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -26,6 +26,7 @@
 import com.facebook.react.uimanager.ReactCompoundView;
 import com.facebook.react.uimanager.ReactCompoundViewGroup;
 import com.facebook.react.uimanager.annotations.ReactProp;
+import com.facebook.react.views.view.ReactViewGroup;
 import java.io.ByteArrayOutputStream;
 import java.util.HashMap;
 import java.util.Map;
@@ -34,8 +35,7 @@
 
 /** Custom {@link View} implementation that draws an RNSVGSvg React view and its children. */
 @SuppressLint("ViewConstructor")
-public class SvgView extends FabricEnabledViewGroup
-    implements ReactCompoundView, ReactCompoundViewGroup {
+public class SvgView extends ReactViewGroup implements ReactCompoundView, ReactCompoundViewGroup {
 
   @Override
   public boolean interceptsTouchEvent(float touchX, float touchY) {

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -305,7 +305,8 @@ public void setOpacity(float opacity) {
   public void setMatrix(Dynamic matrixArray) {
     ReadableType type = matrixArray.getType();
     if (!matrixArray.isNull() && type.equals(ReadableType.Array)) {
-      setMatrix((ReadableArray) matrixArray);
+      ReadableArray matrix = matrixArray.asArray();
+      setMatrix(matrix);
     } else {
       mMatrix.reset();
       mInvMatrix.reset();

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -542,9 +542,10 @@ public void onChildViewRemoved(View view, View view1) {
    * you want to override this method you should call super.onAfterUpdateTransaction from it as the
    * parent class of the ViewManager may rely on callback being executed.
    */
-  protected void onAfterUpdateTransaction(@Nonnull V node) {
+  @Override
+  protected void onAfterUpdateTransaction(@Nonnull VirtualView node) {
     super.onAfterUpdateTransaction(node);
-    invalidateSvgView(node);
+    invalidateSvgView((V) node);
   }
 
   protected enum SVGClass {

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -78,12 +78,12 @@ public boolean needsCustomLayoutForChildren() {
     }
 
     @ReactProp(name = "tintColor")
-    public void setTintColor(SvgView node, @Nullable Integer tintColor) {
+    public void setTintColor(SvgView node, @Nullable Dynamic tintColor) {
         node.setTintColor(tintColor);
     }
 
     @ReactProp(name = "color")
-    public void setColor(SvgView node, @Nullable Integer color) {
+    public void setColor(SvgView node, @Nullable Dynamic color) {
         node.setTintColor(color);
     }
 

File: android/src/main/java/com/horcrux/svg/ClipPathView.java
Patch:
@@ -22,7 +22,6 @@ class ClipPathView extends GroupView {
 
     public ClipPathView(ReactContext reactContext) {
         super(reactContext);
-        mClipRule = CLIP_RULE_NONZERO;
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -342,11 +342,11 @@ public void setResponsible(boolean responsible) {
             ClipPathView mClipNode = (ClipPathView) getSvgView().getDefinedClipPath(mClipPath);
 
             if (mClipNode != null) {
-                Path clipPath = mClipNode.mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
+                Path clipPath = mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
                         mClipNode.getPath(canvas, paint, Region.Op.UNION);
                 clipPath.transform(mClipNode.mMatrix);
                 clipPath.transform(mClipNode.mTransform);
-                switch (mClipNode.mClipRule) {
+                switch (mClipRule) {
                     case CLIP_RULE_EVENODD:
                         clipPath.setFillType(Path.FillType.EVEN_ODD);
                         break;

File: android/src/main/java/com/horcrux/svg/ClipPathView.java
Patch:
@@ -22,7 +22,6 @@ class ClipPathView extends GroupView {
 
     public ClipPathView(ReactContext reactContext) {
         super(reactContext);
-        mClipRule = CLIP_RULE_NONZERO;
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -342,11 +342,11 @@ public void setResponsible(boolean responsible) {
             ClipPathView mClipNode = (ClipPathView) getSvgView().getDefinedClipPath(mClipPath);
 
             if (mClipNode != null) {
-                Path clipPath = mClipNode.mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
+                Path clipPath = mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
                         mClipNode.getPath(canvas, paint, Region.Op.UNION);
                 clipPath.transform(mClipNode.mMatrix);
                 clipPath.transform(mClipNode.mTransform);
-                switch (mClipNode.mClipRule) {
+                switch (mClipRule) {
                     case CLIP_RULE_EVENODD:
                         clipPath.setFillType(Path.FillType.EVEN_ODD);
                         break;

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -80,8 +80,8 @@ abstract public class RenderableView extends VirtualView {
     public float strokeMiterlimit = 4;
     public float strokeDashoffset = 0;
 
-    public Paint.Cap strokeLinecap = Paint.Cap.ROUND;
-    public Paint.Join strokeLinejoin = Paint.Join.ROUND;
+    public Paint.Cap strokeLinecap = Paint.Cap.BUTT;
+    public Paint.Join strokeLinejoin = Paint.Join.MITER;
 
     public @Nullable ReadableArray fill;
     public float fillOpacity = 1;

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -318,9 +318,9 @@ public void setMatrix(Dynamic matrixArray) {
                 FLog.w(ReactConstants.TAG, "RNSVG: Transform matrices must be of size 6");
             }
         } else {
-            mMatrix = null;
-            mInvMatrix = null;
-            mInvertible = false;
+            mMatrix.reset();
+            mInvMatrix.reset();
+            mInvertible = true;
         }
 
         super.invalidate();

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -122,9 +122,6 @@ void drawGroup(final Canvas canvas, final Paint paint, final float opacity) {
                 if (svgView.isResponsible()) {
                     svg.enableTouchEvents();
                 }
-            } else {
-                // Enable rendering other native ancestor views in e.g. masks
-                child.draw(canvas);
             }
         }
         this.setClientRect(groupRect);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -168,9 +168,10 @@ public void setStroke(@Nullable Dynamic strokeColors) {
             JavaOnlyArray arr = new JavaOnlyArray();
             arr.pushInt(0);
             Matcher m = regex.matcher(strokeColors.asString());
+            int i = 0;
             while (m.find()) {
                 double parsed = Double.parseDouble(m.group());
-                arr.pushDouble(parsed);
+                arr.pushDouble(i++ < 3 ? parsed / 255 : parsed);
             }
             stroke = arr;
         }

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -41,6 +41,8 @@ abstract public class RenderableView extends VirtualView {
 
     RenderableView(ReactContext reactContext) {
         super(reactContext);
+        setPivotX(0);
+        setPivotY(0);
     }
 
     static RenderableView contextElement;

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -380,8 +380,8 @@ private static void setTransformProperty(View view, ReadableArray transforms) {
     }
 
     private static void resetTransformProperty(View view) {
-        view.setTranslationX(PixelUtil.toPixelFromDIP(0));
-        view.setTranslationY(PixelUtil.toPixelFromDIP(0));
+        view.setTranslationX(0);
+        view.setTranslationY(0);
         view.setRotation(0);
         view.setRotationX(0);
         view.setRotationY(0);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -166,9 +166,10 @@ public void setStroke(@Nullable Dynamic strokeColors) {
             JavaOnlyArray arr = new JavaOnlyArray();
             arr.pushInt(0);
             Matcher m = regex.matcher(strokeColors.asString());
+            int i = 0;
             while (m.find()) {
                 double parsed = Double.parseDouble(m.group());
-                arr.pushDouble(parsed);
+                arr.pushDouble(i++ < 3 ? parsed / 255 : parsed);
             }
             stroke = arr;
         }

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -122,10 +122,9 @@ void drawGroup(final Canvas canvas, final Paint paint, final float opacity) {
                 if (svgView.isResponsible()) {
                     svg.enableTouchEvents();
                 }
-            } else if (child instanceof ReactViewGroup) {
+            } else {
                 // Enable rendering other native ancestor views in e.g. masks
-                ReactViewGroup vg = (ReactViewGroup) child;
-                vg.draw(canvas);
+                child.draw(canvas);
             }
         }
         this.setClientRect(groupRect);

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -45,8 +45,6 @@ abstract public class VirtualView extends ReactViewGroup {
     */
     private static final double M_SQRT1_2l = 0.707106781186547524400844362104849039;
 
-    static final float MIN_OPACITY_FOR_DRAW = 0.01f;
-
     private static final float[] sRawMatrix = new float[]{
         1, 0, 0,
         0, 1, 0,

File: android/src/main/java/com/horcrux/svg/Brush.java
Patch:
@@ -204,7 +204,7 @@ void setupPaint(Paint paint, RectF pathBoundingBox, float scale, float opacity)
             double ratio = ry / rx;
 
             double cx = getVal(mPoints[4], width, scale, textSize) + offsetX;
-            double cy = getVal(mPoints[5], height, scale, textSize) + offsetY / ratio;
+            double cy = getVal(mPoints[5], height / ratio, scale, textSize) + offsetY / ratio;
 
             // TODO: support focus point.
             //double fx = PropHelper.fromRelative(mPoints[0], width, offsetX, scale);

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -94,6 +94,9 @@ void drawGroup(final Canvas canvas, final Paint paint, final float opacity) {
             }
             if (child instanceof VirtualView) {
                 VirtualView node = ((VirtualView)child);
+                if ("none".equals(node.mDisplay)) {
+                    continue;
+                }
                 if (node instanceof RenderableView) {
                     ((RenderableView)node).mergeProperties(self);
                 }

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -421,7 +421,7 @@ void renderMarkers(Canvas canvas, Paint paint, float opacity) {
      * Sets up paint according to the props set on a view. Returns {@code true}
      * if the fill should be drawn, {@code false} if not.
      */
-    private boolean setupFillPaint(Paint paint, float opacity) {
+    boolean setupFillPaint(Paint paint, float opacity) {
         if (fill != null && fill.size() > 0) {
             paint.reset();
             paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
@@ -436,7 +436,7 @@ private boolean setupFillPaint(Paint paint, float opacity) {
      * Sets up paint according to the props set on a view. Returns {@code true}
      * if the stroke should be drawn, {@code false} if not.
      */
-    private boolean setupStrokePaint(Paint paint, float opacity) {
+    boolean setupStrokePaint(Paint paint, float opacity) {
         paint.reset();
         double strokeWidth = relativeOnOther(this.strokeWidth);
         if (strokeWidth == 0 || stroke == null || stroke.size() == 0) {

File: android/src/main/java/com/horcrux/svg/PathView.java
Patch:
@@ -24,6 +24,7 @@ class PathView extends RenderableView {
     public PathView(ReactContext reactContext) {
         super(reactContext);
         PathParser.mScale = mScale;
+        mPath = new Path();
     }
 
     @ReactProp(name = "d")

File: android/src/main/java/com/horcrux/svg/PathView.java
Patch:
@@ -24,6 +24,7 @@ class PathView extends RenderableView {
     public PathView(ReactContext reactContext) {
         super(reactContext);
         PathParser.mScale = mScale;
+        mPath = new Path();
     }
 
     @ReactProp(name = "d")

File: android/src/main/java/com/horcrux/svg/ImageView.java
Patch:
@@ -136,9 +136,9 @@ void draw(final Canvas canvas, final Paint paint, final float opacity) {
 
     @Override
     Path getPath(Canvas canvas, Paint paint) {
-        Path path = new Path();
-        path.addRect(getRect(), Path.Direction.CW);
-        return path;
+        mPath = new Path();
+        mPath.addRect(getRect(), Path.Direction.CW);
+        return mPath;
     }
 
     private void loadBitmap(final ImagePipeline imagePipeline, final ImageRequest request) {

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -334,6 +334,7 @@ public void setResponsible(boolean responsible) {
                 Path clipPath = mClipNode.mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
                         mClipNode.getPath(canvas, paint, Region.Op.UNION);
                 clipPath.transform(mClipNode.mMatrix);
+                clipPath.transform(mClipNode.mTransform);
                 switch (mClipNode.mClipRule) {
                     case CLIP_RULE_EVENODD:
                         clipPath.setFillType(Path.FillType.EVEN_ODD);

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -333,6 +333,7 @@ public void setResponsible(boolean responsible) {
             if (mClipNode != null) {
                 Path clipPath = mClipNode.mClipRule == CLIP_RULE_EVENODD ? mClipNode.getPath(canvas, paint) :
                         mClipNode.getPath(canvas, paint, Region.Op.UNION);
+                clipPath.transform(mClipNode.mMatrix);
                 switch (mClipNode.mClipRule) {
                     case CLIP_RULE_EVENODD:
                         clipPath.setFillType(Path.FillType.EVEN_ODD);

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -415,10 +415,10 @@ VirtualView getDefinedMask(String maskRef) {
     }
 
     void defineMarker(VirtualView marker, String markerRef) {
-        mDefinedMasks.put(markerRef, marker);
+        mDefinedMarkers.put(markerRef, marker);
     }
 
     VirtualView getDefinedMarker(String markerRef) {
-        return mDefinedMasks.get(markerRef);
+        return mDefinedMarkers.get(markerRef);
     }
 }

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -121,7 +121,7 @@ private void drawWrappedText(Canvas canvas, Paint paint) {
         FontData font = gc.getFont();
         TextPaint tp = new TextPaint(paint);
         applyTextPropertiesToPaint(tp, font);
-        applySpacingAndFeatuers(tp, font);
+        applySpacingAndFeatures(tp, font);
         double fontSize = gc.getFontSize();
 
         Layout.Alignment align;
@@ -225,7 +225,7 @@ Path getPath(Canvas canvas, Paint paint) {
         FontData font = gc.getFont();
         applyTextPropertiesToPaint(paint, font);
 
-        applySpacingAndFeatuers(paint, font);
+        applySpacingAndFeatures(paint, font);
 
         cachedAdvance = paint.measureText(line);
         return cachedAdvance;
@@ -237,7 +237,7 @@ Path getPath(Canvas canvas, Paint paint) {
     final static String additionalLigatures = "'hlig', 'cala', ";
     final static String fontWeightTag = "'wght' ";
 
-    private void applySpacingAndFeatuers(Paint paint, FontData font) {
+    private void applySpacingAndFeatures(Paint paint, FontData font) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             double letterSpacing = font.letterSpacing;
             paint.setLetterSpacing((float) (letterSpacing / (font.fontSize * mScale)));

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -92,6 +92,7 @@ abstract public class VirtualView extends ReactViewGroup {
     Path mFillPath;
     Path mStrokePath;
     Path mMarkerPath;
+    Path mClipRegionPath;
     RectF mBox;
     RectF mFillBounds;
     RectF mStrokeBounds;
@@ -101,7 +102,6 @@ abstract public class VirtualView extends ReactViewGroup {
     Region mMarkerRegion;
     Region mStrokeRegion;
     Region mClipRegion;
-    Path mClipRegionPath;
     ArrayList<PathElement> elements;
 
     @Override

File: android/src/main/java/com/horcrux/svg/RNSVGRenderableManager.java
Patch:
@@ -189,15 +189,16 @@ public void getScreenCTM(int tag, Callback successCallback) {
         RenderableView svg = RenderableViewManager.getRenderableViewByTag(tag);
         Matrix screenCTM = svg.mCTM;
         SvgView root = svg.getSvgView();
+        float scale = svg.mScale;
         float[] values = new float[9];
         screenCTM.getValues(values);
         WritableMap result = Arguments.createMap();
         result.putDouble("a", values[Matrix.MSCALE_X]);
         result.putDouble("b", values[Matrix.MSKEW_Y]);
         result.putDouble("c", values[Matrix.MSKEW_X]);
         result.putDouble("d", values[Matrix.MSCALE_Y]);
-        result.putDouble("e", values[Matrix.MTRANS_X] + root.getLeft());
-        result.putDouble("f", values[Matrix.MTRANS_Y] + root.getTop());
+        result.putDouble("e", values[Matrix.MTRANS_X] + root.getLeft() / scale);
+        result.putDouble("f", values[Matrix.MTRANS_Y] + root.getTop() / scale);
         successCallback.invoke(result);
     }
 }

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -91,8 +91,10 @@ abstract public class VirtualView extends ReactViewGroup {
     Path mPath;
     Path mFillPath;
     Path mStrokePath;
+    Path mMarkerPath;
     RectF mBox;
     Region mRegion;
+    Region mMarkerRegion;
     Region mStrokeRegion;
     Region mClipRegion;
     Path mClipRegionPath;
@@ -114,6 +116,7 @@ void clearCache() {
         canvasWidth = -1;
         fontSize = -1;
         mStrokeRegion = null;
+        mMarkerRegion = null;
         mRegion = null;
         mPath = null;
     }

File: android/src/main/java/com/horcrux/svg/MarkerView.java
Patch:
@@ -151,7 +151,9 @@ void renderMarker(Canvas canvas, Paint paint, float opacity, RNSVGMarkerPosition
         if (mAlign != null) {
             RectF vbRect = new RectF(mMinX * mScale, mMinY * mScale, (mMinX + mVbWidth) * mScale, (mMinY + mVbHeight) * mScale);
             Matrix viewBoxMatrix = ViewBox.getTransform(vbRect, eRect, mAlign, mMeetOrSlice);
-            canvas.concat(viewBoxMatrix);
+            float[] values = new float[9];
+            viewBoxMatrix.getValues(values);
+            canvas.scale(values[Matrix.MSCALE_X], values[Matrix.MSCALE_Y]);
         }
 
         double x = relativeOnWidth(mRefX);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -281,9 +281,9 @@ void render(Canvas canvas, Paint paint, float opacity) {
 
             // Clip to mask bounds and render the mask
             float maskX = (float) relativeOnWidth(mask.mX);
-            float maskY = (float) relativeOnWidth(mask.mY);
+            float maskY = (float) relativeOnHeight(mask.mY);
             float maskWidth = (float) relativeOnWidth(mask.mW);
-            float maskHeight = (float) relativeOnWidth(mask.mH);
+            float maskHeight = (float) relativeOnHeight(mask.mH);
             maskCanvas.clipRect(maskX, maskY, maskWidth, maskHeight);
 
             Paint maskPaint = new Paint(Paint.ANTI_ALIAS_FLAG);

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -169,7 +169,7 @@ private void clearChildCache() {
         }
     }
 
-    @ReactProp(name = "tintColor", customType = "Color")
+    @ReactProp(name = "tintColor")
     public void setTintColor(@Nullable Integer tintColor) {
         if (tintColor == null) {
             mTintColor = 0;

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -77,12 +77,12 @@ public boolean needsCustomLayoutForChildren() {
         return true;
     }
 
-    @ReactProp(name = "tintColor", customType = "Color")
+    @ReactProp(name = "tintColor")
     public void setTintColor(SvgView node, @Nullable Integer tintColor) {
         node.setTintColor(tintColor);
     }
 
-    @ReactProp(name = "color", customType = "Color")
+    @ReactProp(name = "color")
     public void setColor(SvgView node, @Nullable Integer color) {
         node.setTintColor(color);
     }

File: android/src/main/java/com/horcrux/svg/PathParser.java
Patch:
@@ -40,7 +40,7 @@ Path parse(String data) {
             skip_spaces();
 
             if (i >= l) {
-                break
+                break;
             }
 
             boolean has_prev_cmd = prev_cmd != ' ';

File: android/src/main/java/com/horcrux/svg/PathView.java
Patch:
@@ -23,12 +23,12 @@ class PathView extends RenderableView {
 
     public PathView(ReactContext reactContext) {
         super(reactContext);
+        PathParser.mScale = mScale;
     }
 
     @ReactProp(name = "d")
     public void setD(String d) {
-        PropHelper.PathParser mD = new PropHelper.PathParser(d, mScale);
-        mPath = mD.getPath();
+        mPath = PathParser.parseData(d);
         invalidate();
     }
 

File: android/src/main/java/com/horcrux/svg/TextView.java
Patch:
@@ -148,7 +148,9 @@ void draw(Canvas canvas, Paint paint, float opacity) {
             setupGlyphContext(canvas);
             clip(canvas, paint);
             getGroupPath(canvas, paint);
+            pushGlyphContext();
             drawGroup(canvas, paint, opacity);
+            popGlyphContext();
         }
     }
 

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -139,7 +139,7 @@ public void setFillRule(int fillRule) {
                 break;
             default:
                 throw new JSApplicationIllegalArgumentException(
-                        "fillRule " + this.fillRule + " unrecognized");
+                        "fillRule " + fillRule + " unrecognized");
         }
 
         invalidate();

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -220,7 +220,7 @@ public void setStrokeLinecap(int strokeLinecap) {
                 break;
             default:
                 throw new JSApplicationIllegalArgumentException(
-                        "strokeLinecap " + this.strokeLinecap + " unrecognized");
+                        "strokeLinecap " + strokeLinecap + " unrecognized");
         }
         invalidate();
     }
@@ -239,7 +239,7 @@ public void setStrokeLinejoin(int strokeLinejoin) {
                 break;
             default:
                 throw new JSApplicationIllegalArgumentException(
-                        "strokeLinejoin " + this.strokeLinejoin + " unrecognized");
+                        "strokeLinejoin " + strokeLinejoin + " unrecognized");
         }
         invalidate();
     }

File: android/src/main/java/com/horcrux/svg/Brush.java
Patch:
@@ -103,7 +103,7 @@ private RectF getPaintRect(RectF pathBoundingBox) {
 
     private double getVal(SVGLength length, double relative, float scale, float textSize) {
         return PropHelper.fromRelative(length, relative, 0, mUseObjectBoundingBox &&
-                length.unit == SVGLengthUnitType.SVG_LENGTHTYPE_NUMBER ? relative : scale, textSize);
+                length.unit == SVGLength.UnitType.NUMBER ? relative : scale, textSize);
     }
 
     void setupPaint(Paint paint, RectF pathBoundingBox, float scale, float opacity) {

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -175,6 +175,9 @@ private Path getLinePath(String line, Paint paint, Canvas canvas) {
         final int length = line.length();
         final Path path = new Path();
 
+        emoji.clear();
+        emojiTransforms.clear();
+
         if (length == 0) {
             return path;
         }
@@ -759,9 +762,6 @@ A negative value is an error (see Error processing).
         final float[] startPointMatrixData = new float[9];
         final float[] endPointMatrixData = new float[9];
 
-        emoji.clear();
-        emojiTransforms.clear();
-
         for (int index = 0; index < length; index++) {
             char currentChar = chars[index];
             String current = String.valueOf(currentChar);

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -176,6 +176,8 @@ public void setTintColor(@Nullable Integer tintColor) {
         } else {
             mTintColor = tintColor;
         }
+        invalidate();
+        clearChildCache();
     }
 
     @ReactProp(name = "minX")

File: android/src/main/java/com/horcrux/svg/Brush.java
Patch:
@@ -12,7 +12,6 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapShader;
 import android.graphics.Canvas;
-import android.graphics.Color;
 import android.graphics.LinearGradient;
 import android.graphics.Matrix;
 import android.graphics.Paint;
@@ -32,7 +31,7 @@ class Brush {
     private final boolean mUseObjectBoundingBox;
 
     // TODO implement pattern units
-    @SuppressWarnings({"FieldCanBeLocal", "unused"})
+    @SuppressWarnings({"unused"})
     private boolean mUseContentObjectBoundingBoxUnits;
 
     private Matrix mMatrix;

File: android/src/main/java/com/horcrux/svg/FontData.java
Patch:
@@ -66,7 +66,6 @@ private double toAbsolute(String string, double scale, double fontSize) {
         return PropHelper.fromRelative(
             string,
             0,
-            0,
             scale,
             fontSize
         );
@@ -84,7 +83,6 @@ private double toAbsolute(String string, double scale, double fontSize) {
                 fontSize = PropHelper.fromRelative(
                     string,
                     parentFontSize,
-                    0,
                     1,
                     parentFontSize
                 );

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -29,7 +29,7 @@
 @SuppressLint("ViewConstructor")
 class GroupView extends RenderableView {
     @Nullable ReadableMap mFont;
-    GlyphContext mGlyphContext;
+    private GlyphContext mGlyphContext;
 
     public GroupView(ReactContext reactContext) {
         super(reactContext);

File: android/src/main/java/com/horcrux/svg/ImageView.java
Patch:
@@ -203,6 +203,7 @@ private void doRender(Canvas canvas, Paint paint, Bitmap bitmap, float opacity)
         Paint alphaPaint = new Paint();
         alphaPaint.setAlpha((int) (opacity * 255));
         canvas.drawBitmap(bitmap, null, vbRect, alphaPaint);
+        //noinspection deprecation
         canvas.getMatrix().mapRect(vbRect);
         this.setClientRect(vbRect);
     }

File: android/src/main/java/com/horcrux/svg/SVGLength.java
Patch:
@@ -23,15 +23,15 @@ enum SVGLengthUnitType {
 class SVGLength {
     final double value;
     final SVGLengthUnitType unit;
-    SVGLength() {
+    private SVGLength() {
         value = 0;
         unit = SVGLengthUnitType.SVG_LENGTHTYPE_UNKNOWN;
     }
     SVGLength(double number) {
         value = number;
         unit = SVGLengthUnitType.SVG_LENGTHTYPE_NUMBER;
     }
-    SVGLength(String length) {
+    private SVGLength(String length) {
         length = length.trim();
         int stringLength = length.length();
         int percentIndex = stringLength - 1;

File: android/src/main/java/com/horcrux/svg/TextPathView.java
Patch:
@@ -103,7 +103,7 @@ Path getTextPath(Canvas canvas, Paint paint) {
         SvgView svg = getSvgView();
         VirtualView template = svg.getDefinedTemplate(mHref);
 
-        if (template == null || !(template instanceof RenderableView)) {
+        if (!(template instanceof RenderableView)) {
             // warning about this.
             return null;
         }

File: android/src/main/java/com/horcrux/svg/UseView.java
Patch:
@@ -73,6 +73,7 @@ void draw(Canvas canvas, Paint paint, float opacity) {
             return;
         }
 
+        template.clearCache();
         canvas.translate((float) relativeOnWidth(mX), (float) relativeOnHeight(mY));
         if (template instanceof RenderableView) {
             ((RenderableView)template).mergeProperties(this);

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -1061,6 +1061,9 @@ private void invalidateSvgView(VirtualView node) {
         if (view!= null) {
             view.invalidate();
         }
+        if (node instanceof TextView) {
+            ((TextView)node).getTextContainer().clearChildCache();
+        }
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -13,7 +13,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.facebook.infer.annotation.Assertions;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.JavaOnlyMap;
 import com.facebook.react.bridge.ReadableArray;
@@ -179,7 +178,9 @@ private static boolean isZero(double d) {
     }
 
     private static void decomposeMatrix() {
-        Assertions.assertCondition(sTransformDecompositionArray.length == 16);
+        if (sTransformDecompositionArray.length != 16) {
+          throw new AssertionError();
+        }
 
         // output values
         final double[] perspective = sMatrixDecompositionContext.perspective;

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -238,7 +238,7 @@ Rect getCanvasBounds() {
         return mCanvas.getClipBounds();
     }
 
-    void drawChildren(final Canvas canvas) {
+    synchronized void drawChildren(final Canvas canvas) {
         mRendered = true;
         mCanvas = canvas;
         if (mAlign != null) {

File: android/src/main/java/com/horcrux/svg/GlyphContext.java
Patch:
@@ -19,7 +19,7 @@
 class GlyphContext {
 
     // Current stack (one per node push/pop)
-    private final ArrayList<FontData> mFontContext = new ArrayList<>();
+    final ArrayList<FontData> mFontContext = new ArrayList<>();
 
     // Unique input attribute lists (only added if node sets a value)
     private final ArrayList<SVGLength[]> mXsContext = new ArrayList<>();

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -85,6 +85,9 @@ public void invalidate() {
 
     @Override
     protected void onDraw(Canvas canvas) {
+        if (getParent() instanceof VirtualView) {
+            return;
+        }
         super.onDraw(canvas);
         if (mBitmap == null) {
             mBitmap = drawOutput();

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -167,7 +167,7 @@ public void setStrokeDasharray(@Nullable ReadableArray strokeDasharray) {
             int fromSize = strokeDasharray.size();
             this.strokeDasharray = new SVGLength[fromSize];
             for (int i = 0; i < fromSize; i++) {
-                this.strokeDasharray[i] = new SVGLength(strokeDasharray.getString(i));
+                this.strokeDasharray[i] = SVGLength.from(strokeDasharray.getDynamic(i));
             }
         } else {
             this.strokeDasharray = null;

File: android/src/main/java/com/horcrux/svg/PropHelper.java
Patch:
@@ -184,6 +184,9 @@ static double fromRelative(SVGLength length, double relative, double offset, dou
             https://drafts.csswg.org/css-fonts-3/#propdef-font-size
             https://drafts.csswg.org/css2/fonts.html#propdef-font-size
         */
+        if (length == null) {
+            return offset;
+        }
         SVGLengthUnitType unitType = length.unit;
         double value = length.value;
         double unit = 1;

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -26,6 +26,7 @@
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.annotations.ReactProp;
+import com.facebook.react.views.text.ReactFontManager;
 
 import javax.annotation.Nullable;
 
@@ -929,7 +930,7 @@ private void applyTextPropertiesToPaint(Paint paint, FontData font) {
                 typeface = Typeface.createFromAsset(assetManager, path);
             } catch (Exception ignored2) {
                 try {
-                    typeface = Typeface.create(fontFamily, fontStyle);
+                    typeface = ReactFontManager.getInstance().getTypeface(fontFamily, fontStyle, assetManager);
                 } catch (Exception ignored3) {
                 }
             }

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -197,7 +197,7 @@ int hitTest(final float[] src) {
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
-        mInvTransform.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst);
 
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -434,7 +434,7 @@ int hitTest(final float[] src) {
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
-        mInvTransform.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst);
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -977,7 +977,7 @@ int hitTest(final float[] src) {
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
-        mInvTransform.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst);
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 

File: android/src/main/java/com/horcrux/svg/UseView.java
Patch:
@@ -87,7 +87,7 @@ int hitTest(float[] src) {
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
-        mInvTransform.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst);
 
         VirtualView template = getSvgView().getDefinedTemplate(mHref);
         int hitChild = template.hitTest(dst);

File: android/src/main/java/com/horcrux/svg/ClipPathView.java
Patch:
@@ -22,6 +22,7 @@ class ClipPathView extends GroupView {
 
     public ClipPathView(ReactContext reactContext) {
         super(reactContext);
+        mClipRule = CLIP_RULE_NONZERO;
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -212,6 +212,7 @@ private Bitmap drawOutput() {
             float parentHeight = parent == null ? 0 : parent.getHeight();
             width = (float) PropHelper.fromRelative(mbbWidth, parentWidth, 0, mScale, 12);
             height = (float) PropHelper.fromRelative(mbbHeight, parentHeight, 0, mScale, 12);
+            setMeasuredDimension((int)Math.ceil(width), (int)Math.ceil(height));
         }
         Bitmap bitmap = Bitmap.createBitmap(
                 (int) width,

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -191,12 +191,13 @@ Path getPath(final Canvas canvas, final Paint paint, final Region.Op op) {
 
     @Override
     int hitTest(final float[] src) {
-        if (!mInvertible) {
+        if (!mInvertible || !mTransformInvertible) {
             return -1;
         }
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst, src);
 
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);

File: android/src/main/java/com/horcrux/svg/RenderableView.java
Patch:
@@ -428,12 +428,13 @@ private void setupPaint(Paint paint, float opacity, ReadableArray colors) {
 
     @Override
     int hitTest(final float[] src) {
-        if (mPath == null || !mInvertible) {
+        if (mPath == null || !mInvertible || !mTransformInvertible) {
             return -1;
         }
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst, src);
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 

File: android/src/main/java/com/horcrux/svg/TSpanView.java
Patch:
@@ -971,12 +971,13 @@ int hitTest(final float[] src) {
         if (mContent == null) {
             return super.hitTest(src);
         }
-        if (mPath == null || !mInvertible) {
+        if (mPath == null || !mInvertible || !mTransformInvertible) {
             return -1;
         }
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst, src);
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 

File: android/src/main/java/com/horcrux/svg/UseView.java
Patch:
@@ -81,12 +81,13 @@ void draw(Canvas canvas, Paint paint, float opacity) {
 
     @Override
     int hitTest(float[] src) {
-        if (!mInvertible) {
+        if (!mInvertible || !mTransformInvertible) {
             return -1;
         }
 
         float[] dst = new float[2];
         mInvMatrix.mapPoints(dst, src);
+        mInvTransform.mapPoints(dst, src);
 
         VirtualView template = getSvgView().getDefinedTemplate(mHref);
         int hitChild = template.hitTest(dst);

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -62,7 +62,9 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
     Matrix mMatrix = new Matrix();
     Matrix mTransform = new Matrix();
     Matrix mInvMatrix = new Matrix();
+    Matrix mInvTransform = new Matrix();
     boolean mInvertible = true;
+    boolean mTransformInvertible = true;
     private RectF mClientRect;
 
     private int mClipRule;

File: android/src/main/java/com/horcrux/svg/PropHelper.java
Patch:
@@ -399,8 +399,8 @@ private void move(float x, float y) {
         }
 
         private void moveTo(float x, float y) {
-            mPivotX = mPenX = x;
-            mPivotY = mPenY = y;
+            mPenDownX = mPivotX = mPenX = x;
+            mPenDownY = mPivotY = mPenY = y;
             mPath.moveTo(x * mScale, y * mScale);
 
             mLastStartPoint = getPointMap(x ,y);

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * ViewManager for RNSVGSvgView React views. Renders as a {@link SvgView} and handles
- * invalidating the native view on shadow view updates happening in the underlying tree.
+ * invalidating the native view on view updates happening in the underlying tree.
  */
 class SvgViewManager extends ReactViewManager {
 

File: android/src/main/java/com/horcrux/svg/VirtualView.java
Patch:
@@ -322,7 +322,7 @@ SvgView getSvgView() {
         } else if (parent instanceof VirtualView) {
             svgView = ((VirtualView) parent).getSvgView();
         } else {
-            FLog.e(ReactConstants.TAG, "RNSVG: " + getClass().getName() + " should be descendant of a SvgViewShadow.");
+            FLog.e(ReactConstants.TAG, "RNSVG: " + getClass().getName() + " should be descendant of a SvgView.");
         }
 
         return svgView;

File: android/src/main/java/com/horcrux/svg/SvgViewModule.java
Patch:
@@ -27,7 +27,7 @@ public String getName() {
 
     @ReactMethod
     public void toDataURL(int tag, Callback successCallback) {
-        SvgViewShadowNode svg = SvgViewManager.getShadowNodeByTag(tag);
+        SvgView svg = SvgViewManager.getSvgViewByTag(tag);
 
         if (svg != null) {
             successCallback.invoke(svg.toDataURL());

File: android/src/main/java/com/horcrux/svg/SVGLength.java
Patch:
@@ -35,7 +35,7 @@ class SVGLength {
             value = 0;
         } else if (length.codePointAt(percentIndex) == '%') {
             unit = SVGLengthUnitType.SVG_LENGTHTYPE_PERCENTAGE;
-            value = Double.valueOf(length.substring(0, percentIndex)) / 100;
+            value = Double.valueOf(length.substring(0, percentIndex));
         } else {
             int twoLetterUnitIndex = stringLength - 2;
             if (twoLetterUnitIndex > 0) {

File: android/src/main/java/com/horcrux/svg/GroupView.java
Patch:
@@ -31,8 +31,8 @@
  */
 @SuppressLint("ViewConstructor")
 class GroupView extends RenderableView {
-    @Nullable ReadableMap mFont;
-    private GlyphContext mGlyphContext;
+    public @Nullable ReadableMap mFont;
+    public GlyphContext mGlyphContext;
 
     public GroupView(ReactContext reactContext) {
         super(reactContext);

File: android/src/main/java/com/horcrux/svg/CircleShadowNode.java
Patch:
@@ -22,7 +22,6 @@
  * Shadow node for virtual Circle view
  */
 class CircleShadowNode extends RenderableShadowNode {
-
     private String mCx;
     private String mCy;
     private String mR;
@@ -58,7 +57,7 @@ public void setR(Dynamic r) {
     }
 
     @Override
-    protected Path getPath(Canvas canvas, Paint paint) {
+    Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
 
         double cx = relativeOnWidth(mCx);

File: android/src/main/java/com/horcrux/svg/DefsShadowNode.java
Patch:
@@ -20,7 +20,7 @@
 class DefsShadowNode extends DefinitionShadowNode {
 
     @Override
-    public void draw(Canvas canvas, Paint paint, float opacity) {
+    void draw(Canvas canvas, Paint paint, float opacity) {
         NodeRunnable markUpdateSeenRecursive = new NodeRunnable() {
             public void run(ReactShadowNode node) {
                 node.markUpdateSeen();

File: android/src/main/java/com/horcrux/svg/EllipseShadowNode.java
Patch:
@@ -22,7 +22,6 @@
  * Shadow node for virtual Ellipse view
  */
 class EllipseShadowNode extends RenderableShadowNode {
-
     private String mCx;
     private String mCy;
     private String mRx;
@@ -69,7 +68,7 @@ public void setRy(Dynamic ry) {
     }
 
     @Override
-    protected Path getPath(Canvas canvas, Paint paint) {
+    Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
         double cx = relativeOnWidth(mCx);
         double cy = relativeOnHeight(mCy);

File: android/src/main/java/com/horcrux/svg/FontData.java
Patch:
@@ -6,6 +6,7 @@
 import static com.facebook.react.uimanager.ViewProps.FONT_SIZE;
 import static com.facebook.react.uimanager.ViewProps.FONT_STYLE;
 import static com.facebook.react.uimanager.ViewProps.FONT_WEIGHT;
+import static com.horcrux.svg.TextProperties.*;
 
 class FontData {
     static final double DEFAULT_FONT_SIZE = 12d;
@@ -32,7 +33,7 @@ class FontData {
     final FontVariantLigatures fontVariantLigatures;
 
     final TextAnchor textAnchor;
-    final TextDecoration textDecoration;
+    private final TextDecoration textDecoration;
 
     final double kerning;
     final double wordSpacing;

File: android/src/main/java/com/horcrux/svg/LineShadowNode.java
Patch:
@@ -21,7 +21,6 @@
  * Shadow node for virtual Line view
  */
 class LineShadowNode extends RenderableShadowNode {
-
     private String mX1;
     private String mY1;
     private String mX2;
@@ -68,7 +67,7 @@ public void setY2(Dynamic y2) {
     }
 
     @Override
-    protected Path getPath(Canvas canvas, Paint paint) {
+    Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
         double x1 = relativeOnWidth(mX1);
         double y1 = relativeOnHeight(mY1);

File: android/src/main/java/com/horcrux/svg/LinearGradientShadowNode.java
Patch:
@@ -121,7 +121,7 @@ public void setGradientTransform(@Nullable ReadableArray matrixArray) {
     }
 
     @Override
-    protected void saveDefinition() {
+    void saveDefinition() {
         if (mName != null) {
             WritableArray points = Arguments.createArray();
             points.pushString(mX1);

File: android/src/main/java/com/horcrux/svg/PatternShadowNode.java
Patch:
@@ -176,7 +176,7 @@ RectF getViewBox() {
     }
 
     @Override
-    protected void saveDefinition() {
+    void saveDefinition() {
         if (mName != null) {
             WritableArray points = Arguments.createArray();
             points.pushString(mX);

File: android/src/main/java/com/horcrux/svg/RadialGradientShadowNode.java
Patch:
@@ -141,7 +141,7 @@ public void setGradientTransform(@Nullable ReadableArray matrixArray) {
     }
 
     @Override
-    protected void saveDefinition() {
+    void saveDefinition() {
         if (mName != null) {
             WritableArray points = Arguments.createArray();
             points.pushString(mFx);

File: android/src/main/java/com/horcrux/svg/RectShadowNode.java
Patch:
@@ -22,7 +22,6 @@
  * Shadow node for virtual Rect view
  */
 class RectShadowNode extends RenderableShadowNode {
-
     private String mX;
     private String mY;
     private String mW;
@@ -92,7 +91,7 @@ public void setRy(Dynamic ry) {
     }
 
     @Override
-    protected Path getPath(Canvas canvas, Paint paint) {
+    Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
         double x = relativeOnWidth(mX);
         double y = relativeOnHeight(mY);

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -36,17 +36,14 @@ public boolean interceptsTouchEvent(float touchX, float touchY) {
 
     @SuppressWarnings("unused")
     public enum Events {
-        @SuppressWarnings("unused")
         EVENT_DATA_URL("onDataURL");
 
         private final String mName;
 
-        @SuppressWarnings({"unused", "SameParameterValue"})
         Events(final String name) {
             mName = name;
         }
 
-        @Override
         public String toString() {
             return mName;
         }

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -52,7 +52,6 @@ static void setSvgView(SvgView svg) {
         mTagToSvgView.put(svg.getId(), svg);
     }
 
-    @SuppressWarnings("unused")
     static @Nullable SvgView getSvgViewByTag(int tag) {
         return mTagToSvgView.get(tag);
     }

File: android/src/main/java/com/horcrux/svg/SvgViewModule.java
Patch:
@@ -25,7 +25,6 @@ public String getName() {
     }
 
 
-    @SuppressWarnings("unused")
     @ReactMethod
     public void toDataURL(int tag, Callback successCallback) {
         SvgViewShadowNode svg = SvgViewManager.getShadowNodeByTag(tag);

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -53,7 +53,7 @@ public class SvgViewShadowNode extends LayoutShadowNode {
     private String mbbHeight;
     private String mAlign;
     private int mMeetOrSlice;
-    private Matrix mInvViewBoxMatrix = new Matrix();
+    private final Matrix mInvViewBoxMatrix = new Matrix();
     private boolean mInvertible = true;
     private boolean mRendered = false;
     int mTintColor = 0;

File: android/src/main/java/com/horcrux/svg/SymbolShadowNode.java
Patch:
@@ -62,7 +62,7 @@ public void setMeetOrSlice(int meetOrSlice) {
     }
 
     @Override
-    public void draw(Canvas canvas, Paint paint, float opacity) {
+    void draw(Canvas canvas, Paint paint, float opacity) {
         saveDefinition();
     }
 

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -317,7 +317,9 @@ SvgViewShadowNode getSvgShadowNode() {
 
         ReactShadowNode parent = getParent();
 
-        if (parent instanceof SvgViewShadowNode) {
+        if (parent == null) {
+            return null;
+        } else if (parent instanceof SvgViewShadowNode) {
             mSvgShadowNode = (SvgViewShadowNode)parent;
         } else if (parent instanceof VirtualNode) {
             mSvgShadowNode = ((VirtualNode) parent).getSvgShadowNode();

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -59,7 +59,7 @@ public void setReactTag(int reactTag) {
     Matrix mTransform = new Matrix();
     Matrix mInvMatrix = new Matrix();
     boolean mInvertible = true;
-    private RectF mClientRect;
+    RectF mClientRect;
 
     private int mClipRule;
     private @Nullable String mClipPath;
@@ -113,7 +113,6 @@ private void clearPath() {
         canvasWidth = -1;
         mRegion = null;
         mPath = null;
-        mBox = null;
     }
 
     void releaseCachedPath() {

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -269,7 +269,7 @@ void enableTouchEvents() {
 
     int hitTest(Point point) {
         if (!mResponsible || !mInvertible) {
-            return -1;
+            return getReactTag();
         }
 
         float[] transformed = { point.x, point.y };

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -77,8 +77,11 @@ public void setReactTag(int reactTag) {
     private GlyphContext glyphContext;
 
     Path mPath;
+    Path mFillPath;
+    Path mStrokePath;
     RectF mBox;
     Region mRegion;
+    Region mStrokeRegion;
     Region mClipRegion;
     Path mClipRegionPath;
 

File: android/src/main/java/com/horcrux/svg/RenderableViewManager.java
Patch:
@@ -304,13 +304,13 @@ public void setY(RenderableView<RectShadowNode> node, String y) {
             }
 
             @ReactProp(name = "rectwidth")
-            public void setWidth(RenderableView<RectShadowNode> node, String width) {
+            public void setWidth(RenderableView<RectShadowNode> node, Dynamic width) {
                 node.shadowNode.setWidth(width);
             }
 
 
             @ReactProp(name = "rectheight")
-            public void setHeight(RenderableView<RectShadowNode> node, String height) {
+            public void setHeight(RenderableView<RectShadowNode> node, Dynamic height) {
                 node.shadowNode.setHeight(height);
             }
 

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -289,7 +289,7 @@ int hitTest(Point point) {
             }
         }
 
-        return viewTag;
+        return viewTag == -1 ? getReactTag() : viewTag;
     }
 
     void defineClipPath(VirtualNode clipPath, String clipPathRef) {

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -17,6 +17,7 @@
 import android.graphics.Path;
 import android.graphics.PathMeasure;
 import android.graphics.Rect;
+import android.graphics.RectF;
 import android.graphics.Typeface;
 import android.os.Build;
 

File: android/src/main/java/com/horcrux/svg/GroupShadowNode.java
Patch:
@@ -84,7 +84,7 @@ public void run(ReactShadowNode lNode) {
                     }
 
                     int count = node.saveAndSetupCanvas(canvas);
-                    node.draw(canvas, paint, opacity * mOpacity);
+                    node.render(canvas, paint, opacity * mOpacity);
                     RectF r = node.getClientRect();
                     if (r != null) {
                         groupRect.union(r);

File: android/src/main/java/com/horcrux/svg/SvgPackage.java
Patch:
@@ -42,6 +42,7 @@ public List<ViewManager> createViewManagers(ReactApplicationContext reactContext
                 RenderableViewManager.createLinearGradientManager(),
                 RenderableViewManager.createRadialGradientManager(),
                 RenderableViewManager.createPatternManager(),
+                RenderableViewManager.createMaskManager(),
                 new SvgViewManager());
     }
 

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -12,6 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.Path;
+import android.graphics.Region;
 
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
@@ -141,7 +142,7 @@ protected Path getPath(Canvas canvas, Paint paint) {
     }
 
     @Override
-    protected Path getPath(Canvas canvas, Paint paint, Path.Op op) {
+    protected Path getPath(Canvas canvas, Paint paint, Region.Op op) {
         return getPath(canvas, paint);
     }
 

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -65,6 +65,7 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
     @Override
     protected void releaseCachedPath() {
         mCache = null;
+        mPath = null;
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/RenderableShadowNode.java
Patch:
@@ -233,14 +233,15 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
                 mPath = getPath(canvas, paint);
                 mPath.setFillType(mFillRule);
             }
+            Path path = mPath;
 
             clip(canvas, paint);
 
             if (setupFillPaint(paint, opacity * mFillOpacity)) {
-                canvas.drawPath(mPath, paint);
+                canvas.drawPath(path, paint);
             }
             if (setupStrokePaint(paint, opacity * mStrokeOpacity)) {
-                canvas.drawPath(mPath, paint);
+                canvas.drawPath(path, paint);
             }
         }
     }

File: android/src/main/java/com/horcrux/svg/RenderableShadowNode.java
Patch:
@@ -21,7 +21,6 @@
 import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.JavaOnlyArray;
 import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.bridge.WritableArray;
 import com.facebook.react.uimanager.annotations.ReactProp;

File: android/src/main/java/com/horcrux/svg/RenderableShadowNode.java
Patch:
@@ -302,10 +302,10 @@ public int hitTest(final float[] src) {
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 
-        if (mRegion == null) {
+        if (mRegion == null && mPath != null) {
             mRegion = getRegion(mPath);
         }
-        if (!mRegion.contains(x, y)) {
+        if (mRegion == null || !mRegion.contains(x, y)) {
             return -1;
         }
 

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -962,10 +962,10 @@ public int hitTest(final float[] src) {
         int x = Math.round(dst[0]);
         int y = Math.round(dst[1]);
 
-        if (mRegion == null) {
+        if (mRegion == null && mPath != null) {
             mRegion = getRegion(mPath);
         }
-        if (!mRegion.contains(x, y)) {
+        if (mRegion == null || !mRegion.contains(x, y)) {
             return -1;
         }
 

File: android/src/main/java/com/horcrux/svg/RenderableShadowNode.java
Patch:
@@ -125,8 +125,8 @@ public void setStrokeDasharray(@Nullable ReadableArray strokeDasharray) {
     }
 
     @ReactProp(name = "strokeDashoffset")
-    public void setStrokeDashoffset(float strokeWidth) {
-        mStrokeDashoffset = strokeWidth * mScale;
+    public void setStrokeDashoffset(float strokeDashoffset) {
+        mStrokeDashoffset = strokeDashoffset * mScale;
         markUpdated();
     }
 

File: android/src/main/java/com/horcrux/svg/RectShadowNode.java
Patch:
@@ -40,14 +40,14 @@ public void setY(String y) {
         markUpdated();
     }
 
-    @ReactProp(name = "width")
+    @ReactProp(name = "rectwidth")
     public void setWidth(String width) {
         mW = width;
         markUpdated();
     }
 
 
-    @ReactProp(name = "height")
+    @ReactProp(name = "rectheight")
     public void setHeight(String height) {
         mH = height;
         markUpdated();

File: android/src/main/java/com/horcrux/svg/GroupShadowNode.java
Patch:
@@ -10,10 +10,8 @@
 package com.horcrux.svg;
 
 import android.graphics.Canvas;
-import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Path;
-import android.graphics.Point;
 import android.graphics.RectF;
 
 import com.facebook.react.bridge.ReadableMap;

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -49,7 +49,6 @@ public class SvgViewShadowNode extends LayoutShadowNode {
     private String mbbHeight;
     private String mAlign;
     private int mMeetOrSlice;
-    private Matrix mViewBoxMatrix = new Matrix();
     private Matrix mInvViewBoxMatrix = new Matrix();
     private boolean mInvertible = true;
 
@@ -156,7 +155,7 @@ void drawChildren(final Canvas canvas) {
             if (nested) {
                 canvas.clipRect(eRect);
             }
-            mViewBoxMatrix = ViewBox.getTransform(vbRect, eRect, mAlign, mMeetOrSlice);
+            Matrix mViewBoxMatrix = ViewBox.getTransform(vbRect, eRect, mAlign, mMeetOrSlice);
             mInvertible = mViewBoxMatrix.invert(mInvViewBoxMatrix);
             canvas.concat(mViewBoxMatrix);
         }

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -13,7 +13,6 @@
 import android.graphics.Matrix;
 import android.graphics.Paint;
 import android.graphics.Path;
-import android.graphics.Point;
 import android.graphics.RectF;
 import android.graphics.Region;
 
@@ -90,6 +89,8 @@ public boolean isVirtualAnchor() {
     @Override
     public void markUpdated() {
         super.markUpdated();
+        canvasHeight = -1;
+        canvasWidth = -1;
         mRegion = null;
         mPath = null;
         mBox = null;

File: android/src/main/java/com/horcrux/svg/DefsShadowNode.java
Patch:
@@ -12,7 +12,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 
-import com.facebook.react.uimanager.LayoutShadowNode;
+import com.facebook.react.uimanager.ReactShadowNode;
 
 /**
  * Shadow node for virtual Defs view
@@ -22,7 +22,7 @@ class DefsShadowNode extends DefinitionShadowNode {
     @Override
     public void draw(Canvas canvas, Paint paint, float opacity) {
         NodeRunnable markUpdateSeenRecursive = new NodeRunnable() {
-            public void run(LayoutShadowNode node) {
+            public void run(ReactShadowNode node) {
                 node.markUpdateSeen();
                 if (node instanceof VirtualNode) {
                     ((VirtualNode) node).traverseChildren(this);
@@ -36,7 +36,7 @@ public void run(LayoutShadowNode node) {
 
     void saveDefinition() {
         traverseChildren(new NodeRunnable() {
-            public void run(LayoutShadowNode node) {
+            public void run(ReactShadowNode node) {
                 if (node instanceof VirtualNode) {
                     ((VirtualNode)node).saveDefinition();
                 }

File: android/src/main/java/com/horcrux/svg/SvgPackage.java
Patch:
@@ -49,6 +49,7 @@ public List<NativeModule> createNativeModules(ReactApplicationContext reactConte
         return Collections.<NativeModule>singletonList(new SvgViewModule(reactContext));
     }
 
+    @SuppressWarnings("unused")
     public List<Class<? extends JavaScriptModule>> createJSModules() {
         return Collections.emptyList();
     }

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -20,13 +20,12 @@
 
 import com.facebook.react.ReactRootView;
 import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.uimanager.LayoutShadowNode;
 import com.facebook.react.uimanager.ReactShadowNodeImpl;
 import com.facebook.react.uimanager.UIManagerModule;
+import com.facebook.react.uimanager.events.EventDispatcher;
 import com.facebook.react.uimanager.events.TouchEvent;
 import com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper;
 import com.facebook.react.uimanager.events.TouchEventType;
-import com.facebook.react.uimanager.events.EventDispatcher;
 import com.facebook.react.views.view.ReactViewGroup;
 
 import javax.annotation.Nullable;
@@ -36,6 +35,7 @@
  */
 @SuppressLint("ViewConstructor")
 public class SvgView extends ViewGroup {
+    @SuppressWarnings("unused")
     public enum Events {
         @SuppressWarnings("unused")
         EVENT_DATA_URL("onDataURL");

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -12,12 +12,11 @@
 import android.graphics.Bitmap;
 import android.util.SparseArray;
 
+import com.facebook.react.uimanager.ThemedReactContext;
 import com.facebook.react.uimanager.ViewGroupManager;
-import com.facebook.yoga.YogaMeasureMode;
 import com.facebook.yoga.YogaMeasureFunction;
+import com.facebook.yoga.YogaMeasureMode;
 import com.facebook.yoga.YogaNode;
-import com.facebook.react.uimanager.BaseViewManager;
-import com.facebook.react.uimanager.ThemedReactContext;
 
 import javax.annotation.Nullable;
 

File: android/src/main/java/com/horcrux/svg/SvgViewModule.java
Patch:
@@ -25,6 +25,7 @@ public String getName() {
     }
 
 
+    @SuppressWarnings("unused")
     @ReactMethod
     public void toDataURL(int tag, Callback successCallback) {
         SvgViewShadowNode svg = SvgViewManager.getShadowNodeByTag(tag);

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -15,7 +15,6 @@
 
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.uimanager.LayoutShadowNode;
 import com.facebook.react.uimanager.ReactShadowNode;
 import com.facebook.react.uimanager.annotations.ReactProp;
 
@@ -27,7 +26,7 @@
 
 class TextShadowNode extends GroupShadowNode {
     String mTextLength = null;
-    String mBaselineShift = null;
+    private String mBaselineShift = null;
     TextLengthAdjust mLengthAdjust = TextLengthAdjust.spacing;
     private AlignmentBaseline mAlignmentBaseline;
     private @Nullable ReadableArray mPositionX;
@@ -178,7 +177,7 @@ String getBaselineShift() {
 
     void releaseCachedPath() {
         traverseChildren(new NodeRunnable() {
-            public void run(LayoutShadowNode node) {
+            public void run(ReactShadowNode node) {
                 if (node instanceof TextShadowNode) {
                     ((TextShadowNode)node).releaseCachedPath();
                 }

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -314,13 +314,13 @@ void saveDefinition() {
     }
 
     interface NodeRunnable {
-        void run(LayoutShadowNode node);
+        void run(ReactShadowNode node);
     }
 
     void traverseChildren(NodeRunnable runner) {
         for (int i = 0; i < getChildCount(); i++) {
             ReactShadowNode child = getChildAt(i);
-            runner.run((LayoutShadowNode) child);
+            runner.run(child);
         }
     }
 }

File: android/src/main/java/com/horcrux/svg/GlyphPathBag.java
Patch:
@@ -7,7 +7,7 @@
 
 class GlyphPathBag {
     private final ArrayList<Path> paths = new ArrayList<>();
-    private final int[][] data = new int[255][];
+    private final int[][] data = new int[256][];
     private final Paint paint;
 
     GlyphPathBag(Paint paint) {
@@ -28,7 +28,7 @@ Path getOrCreateAndCache(char ch, String current) {
 
             int[] bin = data[ch >> 8];
             if (bin == null) {
-                bin = data[ch >> 8] = new int[255];
+                bin = data[ch >> 8] = new int[256];
             }
             bin[ch & 0xFF] = paths.size();
 

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -726,7 +726,7 @@ and properties, including spacing properties (e.g. letter-spacing and word-spaci
             double spacing = wordSpace + letterSpacing;
             double advance = charWidth + spacing;
 
-            double x = gc.nextX(kerning + advance);
+            double x = gc.nextX(alreadyRenderedGraphemeCluster ? 0 : kerning + advance);
             double y = gc.nextY();
             double dx = gc.nextDeltaX();
             double dy = gc.nextDeltaY();

File: android/src/main/java/com/horcrux/svg/GlyphPathBag.java
Patch:
@@ -7,7 +7,7 @@
 
 class GlyphPathBag {
     private final ArrayList<Path> paths = new ArrayList<>();
-    private final int[][] data = new int[255][];
+    private final int[][] data = new int[256][];
     private final Paint paint;
 
     GlyphPathBag(Paint paint) {
@@ -28,7 +28,7 @@ Path getOrCreateAndCache(char ch, String current) {
 
             int[] bin = data[ch >> 8];
             if (bin == null) {
-                bin = data[ch >> 8] = new int[255];
+                bin = data[ch >> 8] = new int[256];
             }
             bin[ch & 0xFF] = paths.size();
 

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -726,7 +726,7 @@ and properties, including spacing properties (e.g. letter-spacing and word-spaci
             double spacing = wordSpace + letterSpacing;
             double advance = charWidth + spacing;
 
-            double x = gc.nextX(kerning + advance);
+            double x = gc.nextX(alreadyRenderedGraphemeCluster ? 0 : kerning + advance);
             double y = gc.nextY();
             double dx = gc.nextDeltaX();
             double dy = gc.nextDeltaY();

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -148,6 +148,7 @@ public void handleTouchEvent(MotionEvent ev) {
             // this gesture.
             dispatch(ev, TouchEventType.END);
             mTargetTag = -1;
+            mGestureStartTime = TouchEvent.UNSET;
         } else if (action == MotionEvent.ACTION_MOVE) {
             // Update pointer position for current gesture
             dispatch(ev, TouchEventType.MOVE);
@@ -157,8 +158,6 @@ public void handleTouchEvent(MotionEvent ev) {
         } else if (action == MotionEvent.ACTION_POINTER_UP) {
             // Exactly onw of the pointers goes up
             dispatch(ev, TouchEventType.END);
-            mTargetTag = -1;
-            mGestureStartTime = TouchEvent.UNSET;
         } else if (action == MotionEvent.ACTION_CANCEL) {
             dispatchCancelEvent(ev);
             mTargetTag = -1;

File: android/src/main/java/com/horcrux/svg/PropHelper.java
Patch:
@@ -95,7 +95,7 @@ static double fromRelative(String length, double relative, double offset, double
         length = length.trim();
         int stringLength = length.length();
         int percentIndex = stringLength - 1;
-        if (stringLength == 0) {
+        if (stringLength == 0 || length.equals("normal")) {
             return offset;
         } else if (length.codePointAt(percentIndex) == '%') {
             return Double.valueOf(length.substring(0, percentIndex)) / 100 * relative + offset;

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -115,6 +115,7 @@ AlignmentBaseline getAlignmentBaseline() {
                     TextShadowNode node = (TextShadowNode)parent;
                     final AlignmentBaseline baseline = node.mAlignmentBaseline;
                     if (baseline != null) {
+                        mAlignmentBaseline = baseline;
                         return baseline;
                     }
                 }

File: android/src/main/java/com/horcrux/svg/Brush.java
Patch:
@@ -37,11 +37,12 @@ class Brush {
     enum BrushType {
         LINEAR_GRADIENT(0),
         RADIAL_GRADIENT(1),
-        PATTERN(2);
+        @SuppressWarnings("unused")PATTERN(2);
         BrushType(int ni) {
             nativeInt = ni;
         }
 
+        @SuppressWarnings("unused")
         final int nativeInt;
     }
 
@@ -51,6 +52,7 @@ enum BrushUnits {
         BrushUnits(int ni) {
             nativeInt = ni;
         }
+        @SuppressWarnings("unused")
         final int nativeInt;
     }
 

File: android/src/main/java/com/horcrux/svg/FontStyle.java
Patch:
@@ -3,5 +3,5 @@
 enum FontStyle {
     normal,
     italic,
-    oblique
+    @SuppressWarnings("unused")oblique
 }

File: android/src/main/java/com/horcrux/svg/GlyphPathBag.java
Patch:
@@ -6,9 +6,9 @@
 import java.util.ArrayList;
 
 class GlyphPathBag {
-    private ArrayList<Path> paths = new ArrayList<>();
-    private int[][] data = new int[255][];
-    Paint paint;
+    private final ArrayList<Path> paths = new ArrayList<>();
+    private final int[][] data = new int[255][];
+    private final Paint paint;
 
     GlyphPathBag(Paint paint) {
         this.paint = paint;

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -51,6 +51,7 @@ static void setSvgView(SvgView svg) {
         mTagToSvgView.put(svg.getId(), svg);
     }
 
+    @SuppressWarnings("unused")
     static @Nullable SvgView getSvgViewByTag(int tag) {
         return mTagToSvgView.get(tag);
     }

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -87,6 +87,7 @@ protected Path getPath(Canvas canvas, Paint paint) {
         return mCache;
     }
 
+    @SuppressWarnings("ConstantConditions")
     private Path getLinePath(String line, Paint paint, Canvas canvas) {
         final int length = line.length();
         final Path path = new Path();

File: android/src/main/java/com/horcrux/svg/TextLayoutAlgorithm.java
Patch:
@@ -2,7 +2,9 @@
 
 // TODO implement https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm
 
+@SuppressWarnings("unused")
 public class TextLayoutAlgorithm {
+    @SuppressWarnings("EmptyMethod")
     void layoutText() {
 /*
 

File: android/src/main/java/com/horcrux/svg/TextPathMethod.java
Patch:
@@ -2,5 +2,5 @@
 
 enum TextPathMethod {
     align,
-    stretch
+    @SuppressWarnings("unused")stretch
 }

File: android/src/main/java/com/horcrux/svg/TextPathMidLine.java
Patch:
@@ -8,5 +8,5 @@
 */
 enum TextPathMidLine {
     sharp,
-    smooth
+    @SuppressWarnings("unused")smooth
 }

File: android/src/main/java/com/horcrux/svg/TextPathSide.java
Patch:
@@ -1,6 +1,6 @@
 package com.horcrux.svg;
 
 enum TextPathSide {
-    left,
+    @SuppressWarnings("unused")left,
     right
 }

File: android/src/main/java/com/horcrux/svg/TextPathSpacing.java
Patch:
@@ -1,6 +1,6 @@
 package com.horcrux.svg;
 
 enum TextPathSpacing {
-    auto,
+    @SuppressWarnings("unused")auto,
     exact
 }

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -27,7 +27,7 @@
 class TextShadowNode extends GroupShadowNode {
     String mTextLength = null;
     TextLengthAdjust mLengthAdjust = TextLengthAdjust.spacing;
-    AlignmentBaseline mAlignmentBaseline;
+    private AlignmentBaseline mAlignmentBaseline;
     private @Nullable ReadableArray mPositionX;
     private @Nullable ReadableArray mPositionY;
     private @Nullable ReadableArray mRotate;

File: android/src/main/java/com/horcrux/svg/GlyphContext.java
Patch:
@@ -16,8 +16,6 @@
 
 import javax.annotation.Nullable;
 
-import static com.horcrux.svg.FontData.DEFAULT_FONT_SIZE;
-
 // https://www.w3.org/TR/SVG/text.html#TSpanElement
 class GlyphContext {
 
@@ -46,7 +44,7 @@ class GlyphContext {
     private final ArrayList<Integer> mRsIndices = new ArrayList<>();
 
     // Calculated on push context, percentage and em length depends on parent font size
-    private double mFontSize = DEFAULT_FONT_SIZE;
+    private double mFontSize = FontData.DEFAULT_FONT_SIZE;
     private FontData topFont = FontData.Defaults;
 
     // Current accumulated values

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -134,7 +134,7 @@ private Path getLinePath(String line, Paint paint) {
             if (distance == 0) {
                 return path;
             }
-            offset += getAbsoluteStartOffset(distance, gc.getFontSize(), textPath.getStartOffset());
+            offset += getAbsoluteStartOffset(textPath.getStartOffset(), distance, gc.getFontSize());
             /*
             TextPathSpacing spacing = textPath.getSpacing();
             if (spacing == TextPathSpacing.auto) {
@@ -440,8 +440,8 @@ private double getRenderMethodScaling(double textMeasure, double distance) {
         return 1;
     }
 
-    private double getAbsoluteStartOffset(double distance, double size, String startOffset) {
-        return PropHelper.fromRelative(startOffset, distance, 0, mScale, size);
+    private double getAbsoluteStartOffset(String startOffset, double distance, double fontSize) {
+        return PropHelper.fromRelative(startOffset, distance, 0, mScale, fontSize);
     }
 
     private double getTextAnchorOffset(TextAnchor textAnchor, double textMeasure) {

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -219,7 +219,7 @@ private Path getLinePath(String line, Paint paint) {
         double totalHeight = top + bottom;
         double baselineShift = 0;
         if (mAlignmentBaseline != null) {
-            // TODO alignment-baseline
+            // TODO alignment-baseline, test / verify behavior
             switch (mAlignmentBaseline) {
                 // https://wiki.apache.org/xmlgraphics-fop/LineLayout/AlignmentHandling
                 default:

File: android/src/main/java/com/horcrux/svg/FontData.java
Patch:
@@ -29,7 +29,6 @@ class FontData {
 
     final TextAnchor textAnchor;
     final TextDecoration textDecoration;
-    final AlignmentBaseline alignmentBaseline;
 
     final double kerning;
     final double wordSpacing;
@@ -46,7 +45,6 @@ private FontData() {
 
         textAnchor = TextAnchor.start;
         textDecoration = TextDecoration.None;
-        alignmentBaseline = AlignmentBaseline.baseline;
 
         manualKerning = false;
         kerning = DEFAULT_KERNING;
@@ -87,7 +85,6 @@ private double toAbsolute(String string, double scale, double fontSize) {
 
         textAnchor = font.hasKey(TEXT_ANCHOR) ? TextAnchor.valueOf(font.getString(TEXT_ANCHOR)) : parent.textAnchor;
         textDecoration = font.hasKey(TEXT_DECORATION) ? TextDecoration.getEnum(font.getString(TEXT_DECORATION)) : parent.textDecoration;
-        alignmentBaseline = font.hasKey(ALIGNMENT_BASELINE) ? AlignmentBaseline.getEnum(font.getString(ALIGNMENT_BASELINE)) : parent.alignmentBaseline;
 
         final boolean hasKerning = font.hasKey(KERNING);
         manualKerning = hasKerning || parent.manualKerning;

File: android/src/main/java/com/horcrux/svg/FontData.java
Patch:
@@ -19,7 +19,7 @@ class FontData {
     private static final String WORD_SPACING = "wordSpacing";
     private static final String LETTER_SPACING = "letterSpacing";
     private static final String TEXT_DECORATION = "textDecoration";
-    private static final String ALIGNMENT_BASELINE = "alignment-baseline";
+    private static final String ALIGNMENT_BASELINE = "alignmentBaseline";
 
     final double fontSize;
 

File: android/src/main/java/com/horcrux/svg/GlyphContext.java
Patch:
@@ -174,6 +174,7 @@ private void pushNodeAndFont(GroupShadowNode node, @Nullable ReadableMap font) {
         }
 
         FontData data = new FontData(font, parent, mScale);
+        mFontSize = data.fontSize;
         mFontContext.add(data);
         topFont = data;
 

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -85,6 +85,8 @@ public void setFont(@Nullable ReadableMap font) {
         markUpdated();
     }
 
+    // TODO implement https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm
+
     @Override
     public void draw(Canvas canvas, Paint paint, float opacity) {
         if (opacity > MIN_OPACITY_FOR_DRAW) {

File: android/src/main/java/com/horcrux/svg/ImageShadowNode.java
Patch:
@@ -209,9 +209,9 @@ private void doRender(Canvas canvas, Paint paint, Bitmap bitmap, float opacity)
             renderRect = new RectF(0, 0, (int)rectWidth, (int)(rectWidth / mImageRatio));
         }
 
-        RectF vbRect = new RectF(0, 0, renderRect.width() / mScale, renderRect.height() / mScale);
         float canvasLeft = getCanvasLeft();
         float canvasTop = getCanvasTop();
+        RectF vbRect = new RectF(0, 0, renderRect.width() / mScale, renderRect.height() / mScale);
         RectF eRect = new RectF(canvasLeft, canvasTop, rectWidth / mScale + canvasLeft, rectHeight / mScale + canvasTop);
         Matrix transform = ViewBox.getTransform(vbRect, eRect, mAlign, mMeetOrSlice);
 

File: android/src/main/java/com/horcrux/svg/PropHelper.java
Patch:
@@ -89,7 +89,8 @@ static int toMatrixData(ReadableArray value, float[] sRawMatrix, float mScale) {
      * @param relative   relative size for percentages
      * @param offset     offset for all units
      * @param scale      scaling parameter
-     * @param fontSize   current font size  @return value in the current user coordinate system
+     * @param fontSize   current font size
+     * @return value in the current user coordinate system
      */
     static double fromRelative(String length, double relative, double offset, double scale, double fontSize) {
         /*

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -132,7 +132,7 @@ private Path getLinePath(String line, Paint paint) {
         if (textPath != null) {
             pm = new PathMeasure(textPath.getPath(), false);
             distance = pm.getLength();
-            double size = getFontSizeFromContext();
+            float size = gc.getFontSize();
             String startOffset = textPath.getStartOffset();
             offset = PropHelper.fromRelativeToFloat(startOffset, distance, 0, mScale, size);
             // String spacing = textPath.getSpacing(); // spacing = "auto | exact"

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -219,6 +219,9 @@ public void setMatrix(@Nullable ReadableArray matrixArray) {
         if (matrixArray != null) {
             int matrixSize = PropHelper.toMatrixData(matrixArray, sRawMatrix, mScale);
             if (matrixSize == 6) {
+                if (mMatrix == null) {
+                    mMatrix = new Matrix();
+                }
                 mMatrix.setValues(sRawMatrix);
             } else if (matrixSize != -1) {
                 FLog.w(ReactConstants.TAG, "RNSVG: Transform matrices must be of size 6");

File: android/src/main/java/com/horcrux/svg/GroupShadowNode.java
Patch:
@@ -14,7 +14,6 @@
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.graphics.Point;
-import android.graphics.PointF;
 import android.graphics.RectF;
 
 import com.facebook.react.bridge.ReadableMap;

File: android/src/main/java/com/horcrux/svg/TextPathShadowNode.java
Patch:
@@ -59,7 +59,7 @@ public String getSpacing() {
         return mSpacing;
     }
 
-    public String getStartOffset() {
+    String getStartOffset() {
         return mStartOffset;
     }
 

File: android/src/main/java/com/horcrux/svg/CircleShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -18,7 +18,7 @@
 /**
  * Shadow node for virtual Circle view
  */
-public class CircleShadowNode extends RenderableShadowNode {
+class CircleShadowNode extends RenderableShadowNode {
 
     private String mCx;
     private String mCy;

File: android/src/main/java/com/horcrux/svg/ClipPathShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -20,7 +20,7 @@
 /**
  * Shadow node for virtual ClipPath view
  */
-public class ClipPathShadowNode extends GroupShadowNode {
+class ClipPathShadowNode extends GroupShadowNode {
 
     @Override
     public void draw(Canvas canvas, Paint paint, float opacity) {

File: android/src/main/java/com/horcrux/svg/EllipseShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -19,7 +19,7 @@
 /**
  * Shadow node for virtual Ellipse view
  */
-public class EllipseShadowNode extends RenderableShadowNode {
+class EllipseShadowNode extends RenderableShadowNode {
 
     private String mCx;
     private String mCy;

File: android/src/main/java/com/horcrux/svg/LineShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -17,7 +17,7 @@
 /**
  * Shadow node for virtual Line view
  */
-public class LineShadowNode extends RenderableShadowNode {
+class LineShadowNode extends RenderableShadowNode {
 
     private String mX1;
     private String mY1;

File: android/src/main/java/com/horcrux/svg/PathShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -19,7 +19,7 @@
 /**
  * Shadow node for virtual Path view
  */
-public class PathShadowNode extends RenderableShadowNode {
+class PathShadowNode extends RenderableShadowNode {
 
     private Path mPath;
     private PropHelper.PathParser mD;

File: android/src/main/java/com/horcrux/svg/RectShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -18,7 +18,7 @@
 /**
  * Shadow node for virtual Rect view
  */
-public class RectShadowNode extends RenderableShadowNode {
+class RectShadowNode extends RenderableShadowNode {
 
     private String mX;
     private String mY;

File: android/src/main/java/com/horcrux/svg/SvgPackage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *

File: android/src/main/java/com/horcrux/svg/SvgView.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -46,7 +46,7 @@ public String toString() {
     }
 
     private @Nullable Bitmap mBitmap;
-    private EventDispatcher mEventDispatcher;
+    private final EventDispatcher mEventDispatcher;
     private long mGestureStartTime = TouchEvent.UNSET;
     private int mTargetTag;
 
@@ -131,7 +131,7 @@ private void dispatch(MotionEvent ev, TouchEventType type) {
                 mTouchEventCoalescingKeyHelper));
     }
 
-    public void handleTouchEvent(MotionEvent ev) {
+    private void handleTouchEvent(MotionEvent ev) {
         int action = ev.getAction() & MotionEvent.ACTION_MASK;
         if (action == MotionEvent.ACTION_DOWN) {
             mGestureStartTime = ev.getEventTime();

File: android/src/main/java/com/horcrux/svg/SvgViewManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -24,7 +24,7 @@
  * ViewManager for RNSVGSvgView React views. Renders as a {@link SvgView} and handles
  * invalidating the native view on shadow view updates happening in the underlying tree.
  */
-public class SvgViewManager extends BaseViewManager<SvgView, SvgViewShadowNode> {
+class SvgViewManager extends BaseViewManager<SvgView, SvgViewShadowNode> {
 
     private static final String REACT_CLASS = "RNSVGSvgView";
 

File: android/src/main/java/com/horcrux/svg/TextPathShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -20,7 +20,7 @@
 /**
  * Shadow node for virtual TextPath view
  */
-public class TextPathShadowNode extends TextShadowNode {
+class TextPathShadowNode extends TextShadowNode {
 
     private String mHref;
     private String mMethod;
@@ -51,7 +51,7 @@ public void setSpacing(@Nullable String spacing) {
         markUpdated();
     }
 
-    public String getMethod() {
+    String getMethod() {
         return mMethod;
     }
 

File: android/src/main/java/com/horcrux/svg/UseShadowNode.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2015-present, Horcrux.
  * All rights reserved.
  *
@@ -20,7 +20,7 @@
 /**
  * Shadow node for virtual Use view
  */
-public class UseShadowNode extends RenderableShadowNode {
+class UseShadowNode extends RenderableShadowNode {
 
     private String mHref;
     private String mWidth;

File: android/src/main/java/com/horcrux/svg/TextPathShadowNode.java
Patch:
@@ -95,5 +95,4 @@ protected void pushGlyphContext() {
     protected void popGlyphContext() {
         // do nothing
     }
-
 }

File: android/src/main/java/com/horcrux/svg/GlyphContext.java
Patch:
@@ -121,10 +121,10 @@ public void pushContext(@Nullable ReadableMap font, @Nullable ReadableArray rota
 
         ArrayList<Float> rotations = getFloatArrayListFromReadableArray(rotate);
         if (rotations.size() != 0) {
+            mRotationIndex = mRotationsContext.size();
+            mRotationsContext.add(rotations);
             mRotation = rotations.get(0);
             mRotationContext.add(mRotation);
-            mRotationsContext.add(rotations);
-            mRotationIndex = mRotationsContext.size();
         }
 
         ArrayList<Float> deltaXs = getFloatArrayListFromReadableArray(deltaX);

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -152,7 +152,7 @@ private Path getLinePath(Canvas canvas, String line, Paint paint) {
             if (isKerningValueSet) {
                 glyphPosition += kerningValue;
             } else {
-                float bothWidth = paint.measureText(previous + current);
+                float bothWidth = paint.measureText(previous + current) * renderMethodScaling;
                 float kerning = bothWidth - previousWidth - width;
                 glyphPosition += kerning;
                 previousWidth = width;

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -194,7 +194,7 @@ private Path getLinePath(Canvas canvas, String line, Paint paint) {
                 matrix.postTranslate(0, glyphPoint.y);
             } else {
                 matrix.setTranslate(
-                    glyphPoint.x + glyphDelta.x + textAnchorShift,
+                    glyphPoint.x + glyphDelta.x,
                     glyphPoint.y + glyphDelta.y
                 );
             }

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -32,7 +32,6 @@ public class TSpanShadowNode extends TextShadowNode {
     private BezierTransformer mBezierTransformer;
     private Path mCache;
     private @Nullable String mContent;
-    private boolean debug = false;
 
     private static final String PROP_FONT_FAMILY = "fontFamily";
     private static final String PROP_FONT_SIZE = "fontSize";
@@ -85,6 +84,7 @@ protected Path getPath(Canvas canvas, Paint paint) {
     }
 
     private Path getLinePath(Canvas canvas, String line, Paint paint) {
+        ReadableMap font = applyTextPropertiesToPaint(paint);
         int length = line.length();
         Path path = new Path();
 
@@ -102,6 +102,7 @@ private Path getLinePath(Canvas canvas, String line, Paint paint) {
 
         if (mBezierTransformer != null) {
             offset = mBezierTransformer.getStartOffset();
+            boolean debug = true;
             if (debug) {
                 distance = mBezierTransformer.getTotalDistance();
                 textMeasure = paint.measureText(line);
@@ -126,7 +127,6 @@ private Path getLinePath(Canvas canvas, String line, Paint paint) {
         char[] chars = line.toCharArray();
         float[] widths = new float[length];
 
-        ReadableMap font = applyTextPropertiesToPaint(paint);
         double kerningValue = font.getDouble(PROP_KERNING) * mScale;
         boolean isKerningValueSet = font.getBoolean(PROP_IS_KERNING_VALUE_SET);
 

File: android/src/main/java/com/horcrux/svg/BezierTransformer.java
Patch:
@@ -102,7 +102,7 @@ private void setControlPoints() {
         }
     }
 
-    public float getmStartOffset() {
+    public float getStartOffset() {
         return mStartOffset;
     }
 

File: android/src/main/java/com/horcrux/svg/RenderableShadowNode.java
Patch:
@@ -221,7 +221,7 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
     protected boolean setupFillPaint(Paint paint, float opacity) {
         if (mFill != null && mFill.size() > 0) {
             paint.reset();
-            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
+            paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
             paint.setStyle(Paint.Style.FILL);
             setupPaint(paint, opacity, mFill);
             return true;
@@ -239,7 +239,7 @@ protected boolean setupStrokePaint(Paint paint, float opacity) {
             return false;
         }
 
-        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
+        paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
         paint.setStyle(Paint.Style.STROKE);
         paint.setStrokeCap(mStrokeLinecap);
         paint.setStrokeJoin(mStrokeLinejoin);
@@ -327,7 +327,7 @@ public void mergeProperties(RenderableShadowNode target) {
                 targetAttributeList.size() == 0) {
             return;
         }
-        
+
         mOriginProperties = new ArrayList<>();
         mAttributeList = clonePropList();
 

File: android/src/main/java/com/horcrux/svg/TextPathShadowNode.java
Patch:
@@ -52,7 +52,7 @@ public BezierTransformer getBezierTransformer() {
         }
 
         PathShadowNode path = (PathShadowNode)template;
-        return new BezierTransformer(path.getBezierCurves(), relativeOnWidth(mStartOffset) / 1.2f);
+        return new BezierTransformer(path, relativeOnWidth(mStartOffset));
     }
 
     @Override

File: android/src/main/java/com/horcrux/svg/TSpanShadowNode.java
Patch:
@@ -114,8 +114,7 @@ private Path getLinePath(String line, Paint paint, Path path) {
                     continue;
                 }
 
-                matrix.preTranslate(0, glyphDelta.y);
-                matrix.postTranslate(0, glyphPoint.y);
+                matrix.postTranslate(0, glyphPoint.y + glyphDelta.y);
             } else {
                 matrix.setTranslate(glyphPoint.x + glyphDelta.x, glyphPoint.y + glyphDelta.y);
             }

File: android/src/main/java/com/horcrux/svg/VirtualNode.java
Patch:
@@ -145,7 +145,7 @@ public void setResponsible(boolean responsible) {
     }
 
     protected @Nullable Path getClipPath(Canvas canvas, Paint paint) {
-        if (mClipPath != null && mCachedClipPath == null) {
+        if (mClipPath != null) {
             VirtualNode node = getSvgShadowNode().getDefinedClipPath(mClipPath);
 
             if (node != null) {

File: android/src/main/java/com/horcrux/svg/ImageShadowNode.java
Patch:
@@ -178,7 +178,7 @@ private void doRender(Canvas canvas, Paint paint, Bitmap bitmap, float opacity)
 
         RectF vbRect = new RectF(0, 0, renderRect.width() / mScale, renderRect.height() / mScale);
         RectF eRect = new RectF(getCanvasLeft(), getCanvasTop(), rectWidth / mScale + getCanvasLeft(), rectHeight / mScale + getCanvasTop());
-        Matrix transform = ViewBoxShadowNode.getTransform(vbRect, eRect, mAlign, mMeetOrSlice, false);
+        Matrix transform = ViewBox.getTransform(vbRect, eRect, mAlign, mMeetOrSlice, false);
 
         transform.mapRect(renderRect);
         Matrix translation = new Matrix();

File: android/src/main/java/com/horcrux/svg/PropHelper.java
Patch:
@@ -176,8 +176,8 @@ public void setupPaint(Paint paint, RectF box, float scale, float opacity) {
                 float cx = PropHelper.fromPercentageToFloat(mPoints.getString(4), width, offsetX, scale);
                 float cy = PropHelper.fromPercentageToFloat(mPoints.getString(5), height, offsetY, scale) / (ry / rx);
                 // TODO: support focus point.
-                //float fx = PropHelper.fromPercentageToFloat(mPoints.getString(0), width, offsetX) * scale;
-                //float fy = PropHelper.fromPercentageToFloat(mPoints.getString(1), height, offsetY) * scale / (ry / rx);
+                //float fx = PropHelper.fromPercentageToFloat(mPoints.getString(0), width, offsetX, scale);
+                //float fy = PropHelper.fromPercentageToFloat(mPoints.getString(1), height, offsetY, scale) / (ry / rx);
                 Shader radialGradient = new RadialGradient(
                         cx,
                         cy,

File: android/src/main/java/com/horcrux/svg/SvgPackage.java
Patch:
@@ -38,7 +38,7 @@ public List<ViewManager> createViewManagers(ReactApplicationContext reactContext
                 RenderableViewManager.createClipPathViewManager(),
                 RenderableViewManager.createDefsViewManager(),
                 RenderableViewManager.createUseViewManager(),
-                RenderableViewManager.createViewBoxViewManager(),
+                RenderableViewManager.createSymbolManager(),
                 RenderableViewManager.createLinearGradientManager(),
                 RenderableViewManager.createRadialGradientManager(),
                 new SvgViewManager());
@@ -51,6 +51,6 @@ public List<Class<? extends JavaScriptModule>> createJSModules() {
 
     @Override
     public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {
-        return Collections.emptyList();
+        return Collections.<NativeModule>singletonList(new SvgViewModule(reactContext));
     }
 }

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -75,8 +75,6 @@ public Rect getCanvasBounds() {
     }
 
     private void drawChildren(Canvas canvas) {
-        canvas.getClipBounds();
-        canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);
         Paint paint = new Paint();
 
         for (int i = 0; i < getChildCount(); i++) {

File: android/src/main/java/com/horcrux/svg/SvgViewShadowNode.java
Patch:
@@ -66,7 +66,6 @@ public Object drawOutput() {
 
         mCanvas = new Canvas(bitmap);
         drawChildren(mCanvas);
-        mCanvas = null;
         return bitmap;
     }
 
@@ -75,8 +74,6 @@ public Rect getCanvasBounds() {
     }
 
     private void drawChildren(Canvas canvas) {
-        canvas.getClipBounds();
-        canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);
         Paint paint = new Paint();
 
         for (int i = 0; i < getChildCount(); i++) {

File: android/src/main/java/com/horcrux/svg/ClipPathShadowNode.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Shadow node for virtual RNSVGClipPath view
  */
-public class RNSVGClipPathShadowNode extends RNSVGGroupShadowNode {
+public class ClipPathShadowNode extends GroupShadowNode {
 
     @Override
     public void draw(Canvas canvas, Paint paint, float opacity) {
@@ -44,10 +44,10 @@ public int hitTest(Point point, Matrix matrix) {
     }
 
     @Override
-    public void mergeProperties(RNSVGVirtualNode target, ReadableArray mergeList, boolean inherited) {}
+    public void mergeProperties(VirtualNode target, ReadableArray mergeList, boolean inherited) {}
 
     @Override
-    public void mergeProperties(RNSVGVirtualNode target, ReadableArray mergeList) {}
+    public void mergeProperties(VirtualNode target, ReadableArray mergeList) {}
 
     @Override
     public void resetProperties() {}

File: android/src/main/java/com/horcrux/svg/DefinitionShadowNode.java
Patch:
@@ -20,7 +20,7 @@
 /**
  * Shadow node for virtual Definition type views
  */
-public class RNSVGDefinitionShadowNode extends RNSVGVirtualNode {
+public class DefinitionShadowNode extends VirtualNode {
 
     public void draw(Canvas canvas, Paint paint, float opacity) {}
 
@@ -40,10 +40,10 @@ public int hitTest(Point point, Matrix matrix) {
     }
 
     @Override
-    public void mergeProperties(RNSVGVirtualNode target, ReadableArray mergeList, boolean inherited) {}
+    public void mergeProperties(VirtualNode target, ReadableArray mergeList, boolean inherited) {}
 
     @Override
-    public void mergeProperties(RNSVGVirtualNode target, ReadableArray mergeList) {}
+    public void mergeProperties(VirtualNode target, ReadableArray mergeList) {}
 
     @Override
     public void resetProperties() {}

File: android/src/main/java/com/horcrux/svg/LinearGradientShadowNode.java
Patch:
@@ -17,7 +17,7 @@
 /**
  * Shadow node for virtual LinearGradient definition view
  */
-public class RNSVGLinearGradientShadowNode extends RNSVGDefinitionShadowNode {
+public class LinearGradientShadowNode extends DefinitionShadowNode {
 
     private String mX1;
     private String mY1;

File: android/src/main/java/com/horcrux/svg/RadialGradientShadowNode.java
Patch:
@@ -17,7 +17,7 @@
 /**
  * Shadow node for virtual LinearGradient definition view
  */
-public class RNSVGRadialGradientShadowNode extends RNSVGDefinitionShadowNode {
+public class RadialGradientShadowNode extends DefinitionShadowNode {
     private String mFx;
     private String mFy;
     private String mRx;

File: android/src/main/java/com/horcrux/svg/SpanShadowNode.java
Patch:
@@ -26,7 +26,7 @@
 /**
  * Shadow node for virtual RNSVGPath view
  */
-public class RNSVGSpanShadowNode extends RNSVGPathShadowNode {
+public class SpanShadowNode extends PathShadowNode {
 
     private static final String PROP_FONT_FAMILY = "fontFamily";
     private static final String PROP_FONT_SIZE = "fontSize";

File: android/src/main/java/com/horcrux/svg/TextShadowNode.java
Patch:
@@ -24,6 +24,7 @@
 /**
  * Shadow node for virtual RNSVGText view
  */
+
 public class RNSVGTextShadowNode extends RNSVGGroupShadowNode {
 
     private float mOffsetX = 0;

File: android/src/main/java/com/horcrux/svg/GroupShadowNode.java
Patch:
@@ -15,7 +15,6 @@
 import android.graphics.Path;
 import android.graphics.Point;
 
-import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.uimanager.ReactShadowNode;
 
 

File: android/src/main/java/com/horcrux/svg/RNSVGSvgViewManager.java
Patch:
@@ -46,8 +46,9 @@ public String getName() {
 
     @Override
     @Nullable
-    public Map getExportedCustomDirectEventTypeConstants() {
-        MapBuilder.Builder builder = MapBuilder.builder();
+    public Map<String, Object> getExportedCustomDirectEventTypeConstants() {
+        MapBuilder.Builder<String, Object> builder = MapBuilder.builder();
+
         for (RNSVGSvgView.Events event : RNSVGSvgView.Events.values()) {
             builder.put(event.toString(), MapBuilder.of("registrationName", event.toString()));
         }

File: android/src/main/java/com/horcrux/svg/RNSVGTextShadowNode.java
Patch:
@@ -53,6 +53,7 @@ public class RNSVGTextShadowNode extends RNSVGPathShadowNode {
     @ReactProp(name = "frame")
     public void setFrame(@Nullable ReadableMap frame) {
         mFrame = frame;
+        markUpdated();
     }
 
     @ReactProp(name = "alignment", defaultInt = TEXT_ALIGNMENT_LEFT)

File: android/src/main/java/com/horcrux/svg/RNSVGTextShadowNode.java
Patch:
@@ -53,6 +53,7 @@ public class RNSVGTextShadowNode extends RNSVGPathShadowNode {
     @ReactProp(name = "frame")
     public void setFrame(@Nullable ReadableMap frame) {
         mFrame = frame;
+        markUpdated();
     }
 
     @ReactProp(name = "alignment", defaultInt = TEXT_ALIGNMENT_LEFT)

File: android/src/main/java/com/horcrux/svg/RNSVGSvgView.java
Patch:
@@ -123,7 +123,6 @@ private void dispatch(MotionEvent ev, TouchEventType type) {
         mEventDispatcher.dispatchEvent(
             TouchEvent.obtain(
                 mTargetTag,
-                SystemClock.nanoTime(),
                 type,
                 ev,
                 ev.getX(),

File: android/src/main/java/com/horcrux/svg/RNSVGGroupShadowNode.java
Patch:
@@ -42,7 +42,7 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
                 RNSVGVirtualNode child = (RNSVGVirtualNode) getChildAt(i);
                 child.setupDimensions(canvas);
 
-                child.mergeProperties(this, mPropList, true);
+                child.mergeProperties(this, mOwnedPropList, true);
                 child.draw(canvas, paint, opacity * mOpacity);
 
                 if (child.isResponsible()) {

File: android/src/main/java/com/horcrux/svg/RNSVGImageShadowNode.java
Patch:
@@ -20,7 +20,6 @@
 import android.graphics.RectF;
 import android.graphics.Region;
 import android.net.Uri;
-import android.util.Log;
 
 import com.facebook.common.executors.UiThreadImmediateExecutorService;
 import com.facebook.common.logging.FLog;

File: android/src/main/java/com/horcrux/svg/RNSVGSvgView.java
Patch:
@@ -20,13 +20,11 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.facebook.infer.annotation.Assertions;
 import com.facebook.react.ReactRootView;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.common.SystemClock;
-import com.facebook.react.uimanager.ThemedReactContext;
 import com.facebook.react.uimanager.UIManagerModule;
 import com.facebook.react.uimanager.events.RCTEventEmitter;
 import com.facebook.react.uimanager.events.TouchEvent;

File: android/src/main/java/com/horcrux/svg/RNSVGUseShadowNode.java
Patch:
@@ -59,7 +59,7 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
             int count = saveAndSetupCanvas(canvas);
 
             clip(canvas, paint);
-            template.mergeProperties(this, mPropList);
+            template.mergeProperties(this, mOwnedPropList);
             template.draw(canvas, paint, opacity * mOpacity);
             template.resetProperties();
 

File: android/src/main/java/com/horcrux/svg/RNSVGRectShadowNode.java
Patch:
@@ -103,7 +103,7 @@ protected Path getPath(Canvas canvas, Paint paint) {
             }
             path.addRoundRect(new RectF(x, y, x + w, y + h), rx, ry, Path.Direction.CW);
         } else {
-            path.addRect(x, y, x + w, y + h,  Path.Direction.CW);
+            path.addRect(x, y, x + w, y + h, Path.Direction.CW);
         }
         return path;
     }

File: android/src/main/java/com/horcrux/svg/RNSVGImageShadowNode.java
Patch:
@@ -110,8 +110,9 @@ public void onNewResultImpl(@Nullable Bitmap bitmap) {
                                          paint.reset();
                                          mLoading.set(false);
 
-                                         getSvgShadowNode().drawChildren(canvas, paint);
-                                         getSvgShadowNode().invalidateView(getRect());
+                                         RNSVGSvgViewShadowNode svgShadowNode = getSvgShadowNode();
+                                         svgShadowNode.drawChildren(canvas, paint);
+                                         svgShadowNode.invalidateView();
                                      }
                                  }
 

File: android/src/main/java/com/horcrux/svg/RNSVGGroupShadowNode.java
Patch:
@@ -91,9 +91,10 @@ public int hitTest(Point point, View view, @Nullable Matrix matrix) {
 
             RNSVGVirtualNode node = (RNSVGVirtualNode) child;
 
-            viewTag = node.hitTest(point, ((ViewGroup) view).getChildAt(i), combinedMatrix);
+            View childView = ((ViewGroup) view).getChildAt(i);
+            viewTag = node.hitTest(point, childView, combinedMatrix);
             if (viewTag != -1) {
-                return node.isResponsible() ? viewTag : view.getId();
+                return (node.isResponsible() || (viewTag != childView.getId())) ? viewTag : view.getId();
             }
         }
 

File: android/src/main/java/com/horcrux/svg/RNSVGViewBoxShadowNode.java
Patch:
@@ -159,6 +159,7 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
 
         }
 
+        mMatrix.reset();
         mMatrix.postScale(scaleX, scaleY);
         mMatrix.postTranslate(-translateX * (mFromSymbol ? scaleX : 1), -translateY * (mFromSymbol ? scaleY : 1));
         super.draw(canvas, paint, opacity);

File: android/src/main/java/com/horcrux/svg/RNSVGGroupShadowNode.java
Patch:
@@ -91,9 +91,10 @@ public int hitTest(Point point, View view, @Nullable Matrix matrix) {
 
             RNSVGVirtualNode node = (RNSVGVirtualNode) child;
 
-            viewTag = node.hitTest(point, ((ViewGroup) view).getChildAt(i), combinedMatrix);
+            View childView = ((ViewGroup) view).getChildAt(i);
+            viewTag = node.hitTest(point, childView, combinedMatrix);
             if (viewTag != -1) {
-                return node.isResponsible() ? viewTag : view.getId();
+                return (node.isResponsible() || (viewTag != childView.getId())) ? viewTag : view.getId();
             }
         }
 

File: android/src/main/java/com/horcrux/svg/RNSVGPathShadowNode.java
Patch:
@@ -310,7 +310,9 @@ private void setupPaint(Paint paint, float opacity, ReadableArray colors, @Nulla
                 mPath.computeBounds(box, true);
             }
             PropHelper.RNSVGBrush brush = getSvgShadowNode().getDefinedBrush(colors.getString(1));
-            brush.setupPaint(paint, box, mScale, opacity);
+            if (brush != null) {
+                brush.setupPaint(paint, box, mScale, opacity);
+            }
         } else {
             // TODO: Support pattern.
             FLog.w(ReactConstants.TAG, "RNSVG: Color type " + colorType + " not supported!");

File: Example/android/app/src/main/java/com/artsvgexample/MainActivity.java
Patch:
@@ -10,6 +10,6 @@ public class MainActivity extends ReactActivity {
      */
     @Override
     protected String getMainComponentName() {
-        return "ArtSvgExample";
+        return "SvgExample";
     }
 }

File: android/src/main/java/com/horcrux/svg/RNSVGVirtualNode.java
Patch:
@@ -69,7 +69,7 @@ public abstract class RNSVGVirtualNode extends LayoutShadowNode {
     private RNSVGSvgViewShadowNode mSvgShadowNode;
 
     public RNSVGVirtualNode() {
-        mScale = DisplayMetricsHolder.getWindowDisplayMetrics().density;
+        mScale = DisplayMetricsHolder.getScreenDisplayMetrics().density;
     }
 
     public abstract void draw(Canvas canvas, Paint paint, float opacity);

File: android/src/main/java/com/horcrux/svg/RNSVGEllipseShadowNode.java
Patch:
@@ -63,8 +63,6 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
     @Override
     protected Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
-
-        // draw ellipse
         float cx = PropHelper.fromPercentageToFloat(mCx, mWidth, 0, mScale);
         float cy = PropHelper.fromPercentageToFloat(mCy, mHeight, 0, mScale);
         float rx = PropHelper.fromPercentageToFloat(mRx, mWidth, 0, mScale);

File: android/src/main/java/com/horcrux/svg/RNSVGLineShadowNode.java
Patch:
@@ -68,7 +68,6 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
     @Override
     protected Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
-
         float x1 = PropHelper.fromPercentageToFloat(mX1, mWidth, 0, mScale);
         float y1 = PropHelper.fromPercentageToFloat(mY1, mHeight, 0, mScale);
         float x2 = PropHelper.fromPercentageToFloat(mX2, mWidth, 0, mScale);

File: android/src/main/java/com/horcrux/svg/RNSVGRectShadowNode.java
Patch:
@@ -87,7 +87,6 @@ public void draw(Canvas canvas, Paint paint, float opacity) {
     @Override
     protected Path getPath(Canvas canvas, Paint paint) {
         Path path = new Path();
-
         float x = PropHelper.fromPercentageToFloat(mX, mWidth, 0, mScale);
         float y = PropHelper.fromPercentageToFloat(mY, mHeight, 0, mScale);
         float w = PropHelper.fromPercentageToFloat(mW, mWidth, 0, mScale);

File: android/src/main/java/com/horcrux/svg/RNSVGGroupShadowNode.java
Patch:
@@ -65,7 +65,7 @@ protected Path getPath(Canvas canvas, Paint paint) {
     public int hitTest(Point point, View view) {
         // TODO: run hit test only if necessary
         // TODO: ClipPath never run hitTest
-        if (mClipPathId == null) {
+        if (mAsClipPath != null) {
             return -1;
         }
 

File: android/src/main/java/com/horcrux/svg/RNSVGCircleShadowNode.java
Patch:
@@ -70,13 +70,14 @@ protected Path getPath(Canvas canvas, Paint paint) {
         float cx = PropHelper.fromPercentageToFloat(mCx, width, 0, mScale);
         float cy = PropHelper.fromPercentageToFloat(mCy, height, 0, mScale);
 
-        float r = Float.parseFloat(mR);
+        float r;
         if (PropHelper.isPercentage(mR)) {
+            r = PropHelper.fromPercentageToFloat(mR, 1, 0, 1);
             float powX = (float)Math.pow((width * r), 2);
             float powY = (float)Math.pow((height * r), 2);
             r = (float)Math.sqrt(powX + powY) / (float)Math.sqrt(2);
         } else {
-            r =  r * mScale;
+            r =  Float.parseFloat(mR) * mScale;
         }
 
         path.addCircle(cx, cy, r, Path.Direction.CW);

