File: library/src/main/java/com/davemorrissey/labs/subscaleview/decoder/SkiaImageRegionDecoder.java
Patch:
@@ -99,6 +99,9 @@ public Point init(Context context, @NonNull Uri uri) throws Exception {
             try {
                 ContentResolver contentResolver = context.getContentResolver();
                 inputStream = contentResolver.openInputStream(uri);
+                if (inputStream == null) {
+                    throw new Exception("Content resolver returned null stream. Unable to initialise with uri.");
+                }
                 decoder = BitmapRegionDecoder.newInstance(inputStream, false);
             } finally {
                 if (inputStream != null) {

File: library/src/main/java/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -288,6 +288,7 @@ public SubsamplingScaleImageView(Context context, AttributeSet attr) {
         density = getResources().getDisplayMetrics().density;
         setMinimumDpi(160);
         setDoubleTapZoomDpi(160);
+        setMinimumTileDpi(320);
         setGestureDetector(context);
         this.handler = new Handler(new Handler.Callback() {
             public boolean handleMessage(Message message) {

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -828,7 +828,7 @@ private boolean onTouchEventInternal(@NonNull MotionEvent event) {
                                 maxTouchCount = 0;
                                 handler.removeMessages(MESSAGE_LONG_CLICK);
                                 requestDisallowInterceptTouchEvent(false);
-                            } 
+                            }
                             if (!panEnabled) {
                                 vTranslate.x = vTranslateStart.x;
                                 vTranslate.y = vTranslateStart.y;

File: sample/src/com/davemorrissey/labs/subscaleview/sample/viewpager/VerticalViewPager.java
Patch:
@@ -64,4 +64,4 @@ public boolean onTouchEvent(MotionEvent ev) {
         return super.onTouchEvent(swapXY(ev));
     }
 
-}
\ No newline at end of file
+}

File: library/src/com/davemorrissey/labs/subscaleview/decoder/DecoderFactory.java
Patch:
@@ -1,5 +1,7 @@
 package com.davemorrissey.labs.subscaleview.decoder;
 
+import java.lang.reflect.InvocationTargetException;
+
 /**
  * Interface for decoder (and region decoder) factories.
  * @param <T> the class of decoder that will be produced.
@@ -9,5 +11,5 @@ public interface DecoderFactory<T> {
    * Produce a new instance of a decoder with type {@link T}.
    * @return a new instance of your decoder.
    */
-  T make() throws IllegalAccessException, InstantiationException;
+  T make() throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException;
 }

File: library/src/com/davemorrissey/labs/subscaleview/decoder/DecoderFactory.java
Patch:
@@ -1,5 +1,7 @@
 package com.davemorrissey.labs.subscaleview.decoder;
 
+import java.lang.reflect.InvocationTargetException;
+
 /**
  * Interface for decoder (and region decoder) factories.
  * @param <T> the class of decoder that will be produced.
@@ -9,5 +11,5 @@ public interface DecoderFactory<T> {
    * Produce a new instance of a decoder with type {@link T}.
    * @return a new instance of your decoder.
    */
-  T make() throws IllegalAccessException, InstantiationException;
+  T make() throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException;
 }

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -2519,14 +2519,14 @@ public final void setZoomEnabled(boolean zoomEnabled) {
     }
 
     /**
-     * Returns true if double tap & swipe to zoom is enabled.
+     * Returns true if double tap &amp; swipe to zoom is enabled.
      */
     public final boolean isQuickScaleEnabled() {
         return quickScaleEnabled;
     }
 
     /**
-     * Enable or disable double tap & swipe to zoom.
+     * Enable or disable double tap &amp; swipe to zoom.
      */
     public final void setQuickScaleEnabled(boolean quickScaleEnabled) {
         this.quickScaleEnabled = quickScaleEnabled;

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -936,6 +936,7 @@ protected void onDraw(Canvas canvas) {
         if (anim != null) {
             // Store current values so we can send an event if they change
             float scaleBefore = scale;
+            if (vTranslateBefore == null) { vTranslateBefore = new PointF(0, 0); }
             vTranslateBefore.set(vTranslate);
 
             long scaleElapsed = System.currentTimeMillis() - anim.time;

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -1059,7 +1059,7 @@ protected void onDraw(Canvas canvas) {
 
             if (tileBgPaint != null) {
                 if (sRect == null) { sRect = new RectF(); }
-                sRect.set(0f, 0f, sWidth, sHeight);
+                sRect.set(0f, 0f, bitmapIsPreview ? bitmap.getWidth() : sWidth, bitmapIsPreview ? bitmap.getHeight() : sHeight);
                 matrix.mapRect(sRect);
                 canvas.drawRect(sRect, tileBgPaint);
             }

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -370,7 +370,7 @@ public final void setImage(ImageSource imageSource, ImageSource previewSource, I
         }
 
         if (imageSource.getBitmap() != null && imageSource.getSRegion() != null) {
-            onPreviewLoaded(Bitmap.createBitmap(imageSource.getBitmap(), imageSource.getSRegion().left, imageSource.getSRegion().top, imageSource.getSRegion().width(), imageSource.getSRegion().height()));
+            onImageLoaded(Bitmap.createBitmap(imageSource.getBitmap(), imageSource.getSRegion().left, imageSource.getSRegion().top, imageSource.getSRegion().width(), imageSource.getSRegion().height()), ORIENTATION_0);
         } else if (imageSource.getBitmap() != null) {
             onImageLoaded(imageSource.getBitmap(), ORIENTATION_0);
         } else {

File: sample/src/com/davemorrissey/labs/subscaleview/sample/configuration/ConfigurationActivity.java
Patch:
@@ -141,13 +141,13 @@ private void updateNotes() {
             imageView.setDebug(false);
         }
         if (position == 2) {
-            imageView.setScaleAndCenter(1f, new PointF(0, 0));
+            imageView.setScaleAndCenter(0f, new PointF(1228, 816));
             imageView.setPanEnabled(false);
         } else {
             imageView.setPanEnabled(true);
         }
         if (position == 3) {
-            imageView.setScaleAndCenter(1f, new PointF(0, 0));
+            imageView.setScaleAndCenter(1f, new PointF(1228, 816));
             imageView.setZoomEnabled(false);
         } else {
             imageView.setZoomEnabled(true);

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -956,9 +956,9 @@ private boolean checkReady() {
         if (!readySent && ready) {
             preDraw();
             readySent = true;
+            onReady();
             if (onImageEventListener != null) {
                 onImageEventListener.onReady();
-                onReady();
             }
         }
         return ready;
@@ -973,9 +973,9 @@ private boolean checkImageLoaded() {
         if (!imageLoadedSent && imageLoaded) {
             preDraw();
             imageLoadedSent = true;
+            onImageLoaded();
             if (onImageEventListener != null) {
                 onImageEventListener.onImageLoaded();
-                onImageLoaded();
             }
         }
         return imageLoaded;
@@ -2466,7 +2466,7 @@ public static interface OnImageEventListener {
     /**
      * Default implementation of {@link OnImageEventListener} for extension. This does nothing in any method.
      */
-    public class DefaultOnImageEventListener implements OnImageEventListener {
+    public static class DefaultOnImageEventListener implements OnImageEventListener {
 
         @Override public void onReady() { }
         @Override public void onImageLoaded() { }

File: library/src/com/davemorrissey/labs/subscaleview/ImageSource.java
Patch:
@@ -15,8 +15,8 @@
  */
 public final class ImageSource {
 
-    private static final String FILE_SCHEME = "file:///";
-    private static final String ASSET_SCHEME = "file:///android_asset/";
+    static final String FILE_SCHEME = "file:///";
+    static final String ASSET_SCHEME = "file:///android_asset/";
 
     private final Uri uri;
     private final Bitmap bitmap;

File: sample/src/com/davemorrissey/labs/subscaleview/sample/extension/views/CircleView.java
Patch:
@@ -46,7 +46,7 @@ protected void onDraw(Canvas canvas) {
         super.onDraw(canvas);
 
         // Don't draw pin before image is ready so it doesn't move around during setup.
-        if (!isImageReady()) {
+        if (!isBaseLayerReady()) {
             return;
         }
 

File: sample/src/com/davemorrissey/labs/subscaleview/sample/extension/views/FreehandView.java
Patch:
@@ -118,7 +118,7 @@ protected void onDraw(Canvas canvas) {
         super.onDraw(canvas);
 
         // Don't draw anything before image is ready.
-        if (!isImageReady()) {
+        if (!isBaseLayerReady()) {
             return;
         }
 

File: sample/src/com/davemorrissey/labs/subscaleview/sample/extension/views/PinView.java
Patch:
@@ -60,7 +60,7 @@ protected void onDraw(Canvas canvas) {
         super.onDraw(canvas);
 
         // Don't draw pin before image is ready so it doesn't move around during setup.
-        if (!isImageReady()) {
+        if (!isBaseLayerReady()) {
             return;
         }
 

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -1036,6 +1036,9 @@ public PointF sourceToViewCoord(PointF sxy) {
      * Convert source coordinate to screen coordinate.
      */
     public PointF sourceToViewCoord(float sx, float sy) {
+        if (vTranslate == null) {
+            return null;
+        }
         float vx = (sx * scale) + vTranslate.x;
         float vy = (sy * scale) + vTranslate.y;
         return new PointF(vx, vy);

File: library/src/com/davemorrissey/labs/subscaleview/SubsamplingScaleImageView.java
Patch:
@@ -610,7 +610,7 @@ private void fitToBounds() {
             vTranslate = new PointF(0, 0);
         }
 
-        float minScale = Math.min(getWidth() / (float) sWidth(), getHeight() / (float) sHeight);
+        float minScale = Math.min(getWidth() / (float) sWidth(), getHeight() / (float) sHeight());
         scale = Math.max(minScale, scale);
         scale = Math.min(maxScale, scale);
 

