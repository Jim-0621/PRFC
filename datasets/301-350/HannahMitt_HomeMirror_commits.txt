File: app/src/main/java/com/morristaedt/mirror/SetUpActivity.java
Patch:
@@ -58,12 +58,14 @@ public class SetUpActivity extends Activity {
     private EditText mCountdownDays;
     private EditText mCountdownHours;
     private EditText mCountdownMins;
-    private EditText mCountdownSecs;    private SeekBar mColorPickerRed;
+    private EditText mCountdownSecs;
+    private SeekBar mColorPickerRed;
     private SeekBar mColorPickerGreen;
     private SeekBar mColorPickerBlue;
     private TextView mColorShowerRed;
     private TextView mColorShowerGreen;
     private TextView mColorShowerBlue;
+    
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: app/src/main/java/com/morristaedt/mirror/modules/ForecastModule.java
Patch:
@@ -41,7 +41,7 @@ protected ForecastResponse doInBackground(Void... params) {
                 try {
                     return service.getHourlyForecast(resources.getString(R.string.dark_sky_api_key), lat, lon, excludes, units);
                 } catch (RetrofitError error) {
-                    Log.w("mirror", "Forecast error: " + error.getMessage());
+                    Log.w("ForecastModule", "Forecast error: " + error.getMessage());
                     return null;
                 }
             }

File: app/src/main/java/com/morristaedt/mirror/MirrorActivity.java
Patch:
@@ -219,7 +219,7 @@ private void setViewState() {
         mWaterPlants.setVisibility(ChoresModule.waterPlantsToday() ? View.VISIBLE : View.GONE);
         mGroceryList.setVisibility(ChoresModule.makeGroceryListToday() ? View.VISIBLE : View.GONE);
 
-        ForecastModule.getHourlyForecast(getResources(), mConfigSettings.getLatitude(), mConfigSettings.getLongitude(), mForecastListener);
+        ForecastModule.getHourlyForecast(getResources(), mConfigSettings.getForecastUnits(), mConfigSettings.getLatitude(), mConfigSettings.getLongitude(), mForecastListener);
 
         if (mConfigSettings.showNewsHeadline()) {
             NewsModule.getNewsHeadline(mNewsListener);

File: app/src/main/java/com/morristaedt/mirror/modules/ForecastModule.java
Patch:
@@ -26,7 +26,7 @@ public interface ForecastListener {
         void onShouldBike(boolean showToday, boolean shouldBike);
     }
 
-    public static void getHourlyForecast(final Resources resources, final String lat, final String lon, final ForecastListener listener) {
+    public static void getHourlyForecast(final Resources resources, final String units, final String lat, final String lon, final ForecastListener listener) {
         new AsyncTask<Void, Void, ForecastResponse>() {
 
             @Override
@@ -37,7 +37,6 @@ protected ForecastResponse doInBackground(Void... params) {
 
                 ForecastRequest service = restAdapter.create(ForecastRequest.class);
                 String excludes = "minutely,daily,flags";
-                String units = "si";
 
                 try {
                     return service.getHourlyForecast(resources.getString(R.string.dark_sky_api_key), lat, lon, excludes, units);

File: app/src/main/java/com/morristaedt/mirror/modules/YahooFinanceModule.java
Patch:
@@ -55,7 +55,7 @@ public Throwable handleError(RetrofitError cause) {
             protected void onPostExecute(YahooStockResponse stockResponse) {
                 if (stockResponse != null && stockResponse.getQuoteResponse() != null) {
                     YahooStockResponse.YahooQuoteResponse quoteResponse = stockResponse.getQuoteResponse();
-                    if (quoteResponse.getPercentageChange().abs().compareTo(BigDecimal.valueOf(0.05)) >= 0) {
+                    if (quoteResponse.getPercentageChange().abs().compareTo(BigDecimal.valueOf(0.03)) >= 0) {
                         listener.onNewStockPrice(quoteResponse);
                         return;
                     }

File: app/src/main/java/com/morristaedt/mirror/requests/ForecastRequest.java
Patch:
@@ -9,6 +9,9 @@
  */
 public interface ForecastRequest {
 
+    public static final String UNITS_SI = "si";
+    public static final String UNITS_US = "us";
+
     @GET("/forecast/{apikey}/{lat},{lon}")
     ForecastResponse getHourlyForecast(@Path("apikey") String apiKey, @Path("lat") String lat, @Path("lon") String lon, @Query("exclude") String exclude, @Query("units") String units);
 }

File: app/src/main/java/com/morristaedt/mirror/modules/YahooFinanceModule.java
Patch:
@@ -38,7 +38,7 @@ protected YahooStockResponse doInBackground(Void... params) {
                             @Override
                             public Throwable handleError(RetrofitError cause) {
                                 Log.w("mirror", "Yahoo Finance error: " + cause);
-                                return null;
+                                return cause;
                             }
                         })
                         .build();

File: app/src/main/java/com/morristaedt/mirror/MirrorActivity.java
Patch:
@@ -137,7 +137,7 @@ private void setViewState() {
         ForecastModule.getHourlyForecast(getResources(), 40.681045, -73.9931749, mForecastListener);
         XKCDModule.getXKCDForToday(mXKCDListener);
 
-        if (WeekUtil.isWeekday()) {
+        if (WeekUtil.isWeekday() && WeekUtil.afterFive()) {
             YahooFinanceModule.getStockForToday("ETSY", mStockListener);
         } else {
             mStockText.setVisibility(View.GONE);

File: app/src/main/java/com/morristaedt/mirror/modules/ForecastModule.java
Patch:
@@ -57,7 +57,7 @@ protected void onPostExecute(ForecastResponse forecastResponse) {
                         listener.onWeatherToday(forecastResponse.currently.getDisplayTemperature() + " " + forecastResponse.currently.summary);
                     }
 
-                    if (WeekUtil.isWeekday() && forecastResponse.hourly != null && forecastResponse.hourly.data != null) {
+                    if (WeekUtil.isWeekday() && !WeekUtil.afterFive() && forecastResponse.hourly != null && forecastResponse.hourly.data != null) {
                         listener.onShouldBike(true, shouldBikeToday(forecastResponse.hourly.data));
                     } else {
                         listener.onShouldBike(false, true);

