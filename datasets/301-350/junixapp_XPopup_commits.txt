File: app/src/main/java/com/lxj/xpopupdemo/fragment/CustomAnimatorDemo.java
Patch:
@@ -44,7 +44,8 @@ public void initAnimator() {
         }
         @Override
         public void animateShow() {
-            targetView.animate().rotation(0).scaleX(1).scaleY(1).alpha(1).setInterpolator(new FastOutSlowInInterpolator()).setDuration(340)
+            targetView.animate().rotation(0)
+                    .scaleX(1).scaleY(1).alpha(1).setInterpolator(new FastOutSlowInInterpolator()).setDuration(340)
                     .start();
         }
         @Override

File: library/src/main/java/com/lxj/xpopup/impl/CenterListPopupView.java
Patch:
@@ -165,6 +165,9 @@ public CenterListPopupView setOnSelectListener(OnSelectListener selectListener)
      */
     public CenterListPopupView setCheckedPosition(int position) {
         this.checkedPosition = position;
+        if(recyclerView!=null && recyclerView.getAdapter()!=null){
+            recyclerView.getAdapter().notifyDataSetChanged();
+        }
         return this;
     }
 

File: library/src/main/java/com/lxj/xpopup/impl/PartShadowPopupView.java
Patch:
@@ -98,6 +98,7 @@ public void doAttach() {
         int centerY = rect.top + rect.height() / 2;
         View implView = getPopupImplView();
         FrameLayout.LayoutParams implParams = (LayoutParams) implView.getLayoutParams();
+        if(implParams==null) implParams = new FrameLayout.LayoutParams(-2,-2);
         if ((centerY > getMeasuredHeight() / 2 || popupInfo.popupPosition == PopupPosition.Top) && popupInfo.popupPosition != PopupPosition.Bottom) {
             // 说明atView在Window下半部分，PartShadow应该显示在它上方，计算atView之上的高度
             params.height = rect.top;

File: library/src/main/java/com/lxj/xpopup/core/BasePopupView.java
Patch:
@@ -92,9 +92,7 @@ public Lifecycle getLifecycle() {
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
-
         init();
-        Log.d("tag", "onAttachedToWindow");
     }
 
     public BasePopupView show() {
@@ -226,6 +224,7 @@ protected void doMeasure(){
             params.height = activityContent.getHeight();
         }
         params.leftMargin = popupInfo!=null && popupInfo.isViewMode ?  activityContent.getLeft():0;
+        params.topMargin = activityContent.getTop();
         setLayoutParams(params);
     }
 

File: library/src/main/java/com/lxj/xpopup/core/AttachPopupView.java
Patch:
@@ -207,7 +207,7 @@ public void run() {
             // 尽量优先放在下方，当不够的时候在显示在上方
             //假设下方放不下，超出window高度
             boolean isTallerThanWindowHeight = (rect.bottom + getPopupContentView().getMeasuredHeight()) > maxY;
-            centerY = (rect.top + rect.bottom) / 2;
+            centerY = (rect.top + rect.bottom) / 2f;
             if (isTallerThanWindowHeight) {
                 //超出下方可用大小，但未超出上方可用区域就显示在上方
                 int upAvailableSpace = rect.top - getStatusBarHeight() - overflow;

File: library/src/main/java/com/lxj/xpopup/core/CenterPopupView.java
Patch:
@@ -91,6 +91,7 @@ protected int getImplLayoutId() {
     }
 
     protected int getMaxWidth() {
+        if(popupInfo==null) return 0;
         return popupInfo.maxWidth==0 ? (int) (XPopupUtils.getAppWidth(getContext()) * 0.72f)
                 : popupInfo.maxWidth;
     }

File: library/src/main/java/com/lxj/xpopup/impl/CenterListPopupView.java
Patch:
@@ -169,6 +169,7 @@ public CenterListPopupView setCheckedPosition(int position) {
     }
 
     protected int getMaxWidth() {
+        if(popupInfo==null) return 0;
         return popupInfo.maxWidth==0 ? super.getMaxWidth() : popupInfo.maxWidth;
     }
 }

File: library/src/main/java/com/lxj/xpopup/impl/InputConfirmPopupView.java
Patch:
@@ -90,7 +90,4 @@ public void onClick(View v) {
             if (popupInfo.autoDismiss) dismiss();
         }
     }
-    protected int getMaxWidth() {
-        return popupInfo.maxWidth==0 ? super.getMaxWidth() : popupInfo.maxWidth;
-    }
 }

File: library/src/main/java/com/lxj/xpopup/core/BasePopupView.java
Patch:
@@ -775,8 +775,6 @@ public void destroy() {
         ViewCompat.removeOnUnhandledKeyEventListener(this, this);
         lifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_DESTROY);
         lifecycleRegistry.removeObserver(this);
-        lifecycleRegistry = null;
-        handler = null;
         if (popupInfo != null) {
             popupInfo.atView = null;
             popupInfo.xPopupCallback = null;

File: library/src/main/java/com/lxj/xpopup/core/BasePopupView.java
Patch:
@@ -208,7 +208,7 @@ private void detachFromHost(){
     }
 
     public Window getHostWindow(){
-        return dialog.getWindow();
+        return dialog==null ? null : dialog.getWindow();
     }
 
     protected void doAfterShow() {
@@ -225,7 +225,7 @@ public void run() {
             if (popupInfo != null && popupInfo.xPopupCallback != null)
                 popupInfo.xPopupCallback.onShow(BasePopupView.this);
             //再次检测移动距离
-            if (XPopupUtils.getDecorViewInvisibleHeight(getHostWindow()) > 0 && !hasMoveUp) {
+            if (getHostWindow()!=null && XPopupUtils.getDecorViewInvisibleHeight(getHostWindow()) > 0 && !hasMoveUp) {
                 XPopupUtils.moveUpToKeyboard(XPopupUtils.getDecorViewInvisibleHeight(getHostWindow()), BasePopupView.this);
             }
         }

File: library/src/main/java/com/lxj/xpopup/impl/FullScreenPopupView.java
Patch:
@@ -97,8 +97,8 @@ protected PopupAnimator getPopupAnimator() {
 
     @Override
     protected void onDetachedFromWindow() {
-        getPopupContentView().setTranslationX(popupInfo.offsetX);
-        getPopupContentView().setTranslationY(popupInfo.offsetY);
+        if(popupInfo!=null)getPopupContentView().setTranslationX(popupInfo.offsetX);
+        if(popupInfo!=null)getPopupContentView().setTranslationY(popupInfo.offsetY);
         super.onDetachedFromWindow();
     }
 }

File: app/src/main/java/com/lxj/xpopupdemo/MainActivity.java
Patch:
@@ -8,6 +8,7 @@
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.ActionBar;
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
@@ -49,7 +50,6 @@ protected void onCreate(Bundle savedInstanceState) {
 //        BarUtils.setStatusBarLightMode(this, true);
 //        BarUtils.setNavBarColor(this, Color.RED);
 
-
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(actionBar.getTitle() + "-" + BuildConfig.VERSION_NAME);
 

File: app/src/main/java/com/lxj/xpopupdemo/fragment/QuickStartDemo.java
Patch:
@@ -153,7 +153,6 @@ public void onConfirm() {
                                 new OnInputConfirmListener() {
                                     @Override
                                     public void onConfirm(String text) {
-                                        toast("input text: " + text);
 //                                new XPopup.Builder(getContext()).asLoading().show();
                                     }
                                 })

File: library/src/main/java/com/lxj/xpopup/impl/FullScreenPopupView.java
Patch:
@@ -97,8 +97,8 @@ protected PopupAnimator getPopupAnimator() {
 
     @Override
     protected void onDetachedFromWindow() {
-        super.onDetachedFromWindow();
         getPopupContentView().setTranslationX(popupInfo.offsetX);
         getPopupContentView().setTranslationY(popupInfo.offsetY);
+        super.onDetachedFromWindow();
     }
 }

File: library/src/main/java/com/lxj/xpopup/core/FullScreenDialog.java
Patch:
@@ -174,6 +174,9 @@ private  String getResNameById(int id) {
     BasePopupView contentView;
 
     public FullScreenDialog setContent(BasePopupView view) {
+        if(view.getParent()!=null){
+            ((ViewGroup)view.getParent()).removeView(view);
+        }
         this.contentView = view;
         return this;
     }

File: app/src/main/java/com/lxj/xpopupdemo/fragment/ImageViewerDemo.java
Patch:
@@ -137,8 +137,9 @@ protected void bind(@NonNull final ViewHolder holder, @NonNull final Object s, f
             imageView.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-
                     new XPopup.Builder(holder.itemView.getContext()).asImageViewer(imageView, position, list,
+                            true, true, -1, -1, -1, true,
+                            Color.rgb(32, 36, 46),
                             new OnSrcViewUpdateListener() {
                         @Override
                         public void onSrcViewUpdate(ImageViewerPopupView popupView, int position) {

File: library/src/main/java/com/lxj/xpopup/core/PopupInfo.java
Patch:
@@ -1,6 +1,5 @@
 package com.lxj.xpopup.core;
 
-import android.graphics.Color;
 import android.graphics.PointF;
 import android.view.View;
 import android.view.ViewGroup;

File: library/src/main/java/com/lxj/xpopup/util/XPopupUtils.java
Patch:
@@ -26,6 +26,7 @@
 import android.renderscript.RenderScript;
 import android.renderscript.ScriptIntrinsicBlur;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -234,7 +235,7 @@ public void run() {
     private static void moveUpToKeyboardInternal(int keyboardHeight, BasePopupView pv) {
         if (pv.popupInfo == null || !pv.popupInfo.isMoveUpToKeyboard) return;
         //暂时忽略PartShadow弹窗和AttachPopupView
-        if (pv instanceof PositionPopupView || (pv instanceof AttachPopupView && !(pv instanceof PartShadowPopupView))) {
+        if (pv instanceof PositionPopupView || pv instanceof AttachPopupView ) {
             return;
         }
         //判断是否盖住输入框
@@ -270,7 +271,7 @@ private static void moveUpToKeyboardInternal(int keyboardHeight, BasePopupView p
                 (popupWidth == XPopupUtils.getWindowWidth(pv.getContext()) &&
                         popupHeight == screenHeight)
         ) {
-            // 如果是全屏弹窗，特殊处理，只要输入框没被盖住，就不移动。
+            // 如果是全屏弹窗，特殊处理，只要输入框没被盖住，就不移动
             if (focusBottom + keyboardHeight < screenHeight) {
                 return;
             }

File: library/src/main/java/com/lxj/xpopup/widget/LoadingView.java
Patch:
@@ -63,7 +63,6 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {
     @Override
     public void onWindowFocusChanged(boolean hasWindowFocus) {
         super.onWindowFocusChanged(hasWindowFocus);
-        Log.e("tag", "onWindowFocusChanged");
         start();
     }
 

File: app/src/main/java/com/lxj/xpopupdemo/fragment/QuickStartDemo.java
Patch:
@@ -114,7 +114,7 @@ public void onClick(View v) {
 //                         .autoDismiss(false)
 //                        .popupAnimation(PopupAnimation.NoAnimation)
 //                        .isLightStatusBar(true)
-//                        .hasNavigationBar(false)
+                        .hasNavigationBar(false)
 //                        .setPopupCallback(new DemoXPopupListener())
                         .asConfirm("哈哈", "床前明月光，疑是地上霜；举头望明月，低头思故乡。",
                                 "取消", "确定",

File: app/src/main/java/com/lxj/xpopupdemo/fragment/QuickStartDemo.java
Patch:
@@ -79,7 +79,7 @@ public void init(final View view) {
         view.findViewById(R.id.btnShowAttachPoint).setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View v) {
-                v.setTag("xpopup");//能保证弹窗弹出后，下层的View无法滑动
+                XPopup.fixLongClick(v);//能保证弹窗弹出后，下层的View无法滑动
                 builder.asAttachList(new String[]{"置顶", "复制", "删除", "编辑编辑编辑编辑编辑编辑编"
                         }, null,
                         new OnSelectListener() {

File: app/src/main/java/com/lxj/xpopupdemo/fragment/QuickStartDemo.java
Patch:
@@ -88,7 +88,7 @@ public void onSelect(int position, String text) {
                             }
                         })
                         .show();
-                return false;
+                return true;
             }
         });
 
@@ -289,6 +289,7 @@ public void onSelect(int position, String text) {
                 break;
             case R.id.btnShowDrawerRight:
                 new XPopup.Builder(getContext())
+                        .dismissOnTouchOutside(false)
                         .isDestroyOnDismiss(true) //对于只使用一次的弹窗，推荐设置这个
                         .popupPosition(PopupPosition.Right)//右边
                         .hasStatusBarShadow(true) //启用状态栏阴影

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -4,6 +4,7 @@
 import android.graphics.Color;
 import android.graphics.PointF;
 import android.os.Build;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ImageView;
@@ -168,8 +169,9 @@ public Builder watchView(View watchView) {
             this.popupInfo.watchView.setOnTouchListener(new View.OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
-                    if (popupInfo.touchPoint == null || event.getAction() == MotionEvent.ACTION_DOWN)
+                    if (popupInfo.touchPoint == null || event.getAction() == MotionEvent.ACTION_DOWN){
                         popupInfo.touchPoint = new PointF(event.getRawX(), event.getRawY());
+                    }
                     return false;
                 }
             });

File: library/src/main/java/com/lxj/xpopup/widget/SmartDragLayout.java
Patch:
@@ -134,9 +134,8 @@ public boolean onTouchEvent(MotionEvent event) {
                     } else {
                         finishScroll();
                     }
-
-                    tracker.clear();
                     tracker.recycle();
+                    tracker = null;
                 }
 
                 break;
@@ -216,11 +215,11 @@ public void run() {
     }
 
     public void close() {
-        if(!scroller.isFinished())return;
         isUserClose = true;
         post(new Runnable() {
             @Override
             public void run() {
+                scroller.abortAnimation();
                 smoothScroll(minY - getScrollY(), false);
                 status = LayoutStatus.Closing;
             }

File: app/src/main/java/com/lxj/xpopupdemo/custom/ZhihuCommentPopup.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.util.Log;
 import android.view.View;
 
 import androidx.annotation.NonNull;
@@ -113,11 +114,13 @@ public void run() {
     @Override
     protected void onShow() {
         super.onShow();
+        Log.e("tag", "知乎评论 onShow");
     }
 
     //完全消失执行
     @Override
     protected void onDismiss() {
+        Log.e("tag", "知乎评论 onDismiss");
 
     }
 

File: library/src/main/java/com/lxj/xpopup/core/BottomPopupView.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.content.Context;
 import androidx.annotation.NonNull;
+
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -58,6 +60,7 @@ public void onClose() {
             }
             @Override
             public void onOpen() {
+                Log.e("tag", "onOpen");
                 BottomPopupView.super.doAfterShow();
             }
         });

File: library/src/main/java/com/lxj/xpopup/widget/SmartDragLayout.java
Patch:
@@ -210,23 +210,23 @@ protected void onDetachedFromWindow() {
     }
 
     public void open() {
-        status = LayoutStatus.Opening;
         post(new Runnable() {
             @Override
             public void run() {
                 int dy = maxY - getScrollY();
                 smoothScroll( enableDrag && isThreeDrag ? dy/3 : dy, true);
+                status = LayoutStatus.Opening;
             }
         });
     }
 
     public void close() {
         isUserClose = true;
-        status = LayoutStatus.Closing;
         post(new Runnable() {
             @Override
             public void run() {
                 smoothScroll(minY - getScrollY(), false);
+                status = LayoutStatus.Closing;
             }
         });
     }

File: library/src/main/java/com/lxj/xpopup/core/BottomPopupView.java
Patch:
@@ -115,6 +115,7 @@ protected PopupAnimator getPopupAnimator() {
 
     @Override
     public void dismiss() {
+        if(popupInfo==null) return;
         if (popupInfo.enableDrag) {
             if (popupStatus == PopupStatus.Dismissing) return;
             popupStatus = PopupStatus.Dismissing;

File: library/src/main/java/com/lxj/xpopup/impl/InputConfirmPopupView.java
Patch:
@@ -51,7 +51,7 @@ public EditText getEditText() {
 
     protected void applyPrimary(){
         super.applyPrimaryColor();
-        if(bindItemLayoutId==0){
+        if(bindLayoutId==0){
             XPopupUtils.setCursorDrawableColor(et_input, XPopup.getPrimaryColor());
             et_input.post(new Runnable() {
                 @Override

File: library/src/main/java/com/lxj/xpopup/core/BasePopupView.java
Patch:
@@ -466,7 +466,7 @@ protected View getTargetSizeView() {
      * 消失
      */
     public void dismiss() {
-        if (popupStatus == PopupStatus.Dismissing) return;
+        if (popupStatus == PopupStatus.Dismissing || popupStatus == PopupStatus.Dismiss) return;
         popupStatus = PopupStatus.Dismissing;
         if (popupInfo.autoOpenSoftInput) KeyboardUtils.hideSoftInput(this);
         clearFocus();

File: library/src/main/java/com/lxj/xpopup/enums/PopupType.java
Patch:
@@ -8,5 +8,6 @@ public enum PopupType {
     Center, // 中间显示类型
     Bottom, // 底部弹出的类型
     AttachView,  // 依附于指定View或者指定Point的类型
-    ImageViewer  // 大图浏览类型
+    ImageViewer,  // 大图浏览类型
+    Position  // 自由定位弹窗
 }

File: app/src/main/java/com/lxj/xpopupdemo/custom/ZhihuCommentPopup.java
Patch:
@@ -13,6 +13,7 @@
 import com.lxj.xpopup.XPopup;
 import com.lxj.xpopup.core.BottomPopupView;
 import com.lxj.xpopup.interfaces.OnConfirmListener;
+import com.lxj.xpopup.interfaces.SimpleCallback;
 import com.lxj.xpopup.interfaces.XPopupCallback;
 import com.lxj.xpopup.util.XPopupUtils;
 import com.lxj.xpopup.widget.VerticalRecyclerView;
@@ -51,7 +52,7 @@ public void onClick(View v) {
                 new XPopup.Builder(getContext())
                         .autoOpenSoftInput(true)
 //                        .hasShadowBg(false)
-                        .setPopupCallback(new XPopupCallback() {
+                        .setPopupCallback(new SimpleCallback() {
                             @Override
                             public void onShow() { }
                             @Override

File: app/src/main/java/com/lxj/xpopupdemo/fragment/PartShadowDemo.java
Patch:
@@ -10,6 +10,7 @@
 import com.lxj.xpopup.XPopup;
 import com.lxj.xpopup.enums.PopupPosition;
 import com.lxj.xpopup.interfaces.OnSelectListener;
+import com.lxj.xpopup.interfaces.SimpleCallback;
 import com.lxj.xpopup.interfaces.XPopupCallback;
 import com.lxj.xpopup.widget.VerticalRecyclerView;
 import com.lxj.xpopupdemo.R;
@@ -88,7 +89,7 @@ private void showPartShadow(final View v){
         popupView = (CustomPartShadowPopupView) new XPopup.Builder(getContext())
                 .atView(v)
 //                .dismissOnTouchOutside(false)
-                .setPopupCallback(new XPopupCallback() {
+                .setPopupCallback(new SimpleCallback() {
                     @Override
                     public void onShow() {
                         toast("显示了");

File: library/src/main/java/com/lxj/xpopup/core/BottomPopupView.java
Patch:
@@ -8,6 +8,7 @@
 import com.lxj.xpopup.R;
 import com.lxj.xpopup.animator.PopupAnimator;
 import com.lxj.xpopup.enums.PopupStatus;
+import com.lxj.xpopup.util.KeyboardUtils;
 import com.lxj.xpopup.util.XPopupUtils;
 import com.lxj.xpopup.widget.SmartDragLayout;
 
@@ -110,6 +111,8 @@ public void dismiss() {
         if (popupInfo.enableDrag) {
             if (popupStatus == PopupStatus.Dismissing) return;
             popupStatus = PopupStatus.Dismissing;
+            if (popupInfo.autoOpenSoftInput) KeyboardUtils.hideSoftInput(this);
+            clearFocus();
             // 关闭Drawer，由于Drawer注册了关闭监听，会自动调用dismiss
             bottomPopupContainer.close();
         } else {

File: library/src/main/java/com/lxj/xpopup/util/KeyboardUtils.java
Patch:
@@ -21,7 +21,7 @@
  */
 public final class KeyboardUtils {
 
-    private static int sDecorViewInvisibleHeightPre;
+    public static int sDecorViewInvisibleHeightPre;
     private static ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener;
     private static HashMap<View,OnSoftInputChangedListener> listenerMap = new HashMap<>();
     private KeyboardUtils() {

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -148,7 +148,7 @@ public Builder watchView(View watchView) {
             this.popupInfo.watchView.setOnTouchListener(new View.OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
-                    if (popupInfo.touchPoint==null)popupInfo.touchPoint = new PointF(event.getRawX(), event.getRawY());
+                    if (popupInfo.touchPoint==null || event.getAction()==MotionEvent.ACTION_DOWN)popupInfo.touchPoint = new PointF(event.getRawX(), event.getRawY());
                     return false;
                 }
             });

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -32,6 +32,7 @@
 import com.lxj.xpopup.interfaces.XPopupImageLoader;
 
 import java.util.List;
+import java.util.Stack;
 
 
 public class XPopup {

File: app/src/main/java/com/lxj/xpopupdemo/custom/CustomDrawerPopupView.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.util.Log;
 import android.view.View;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -28,6 +29,7 @@ protected int getImplLayoutId() {
     @Override
     protected void onCreate() {
         super.onCreate();
+        Log.e("tag", "CustomDrawerPopupView onCreate");
         text = findViewById(R.id.text);
         findViewById(R.id.btn).setOnClickListener(new OnClickListener() {
             @Override

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -53,7 +53,7 @@ public class XPopup {
      * 全局弹窗的设置
      **/
     private static int primaryColor = Color.parseColor("#121212");
-    private static int animationDuration = 400;
+    private static int animationDuration = 360;
 
     private static ArrayList<BasePopupView> popupViews = new ArrayList<>();
 

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -157,6 +157,7 @@ public void run() {
                         pv.popupInfo.decorView.removeView(pv);
                         KeyboardUtils.removeLayoutChangeListener(pv.popupInfo.decorView);
                         popupViews.remove(pv);
+
                         if (pv.popupInfo != null && pv.popupInfo.xPopupCallback != null) {
                             pv.popupInfo.xPopupCallback.onDismiss();
                         }

File: library/src/main/java/com/lxj/xpopup/core/BottomPopupView.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 

File: library/src/main/java/com/lxj/xpopup/core/DrawerPopupView.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.graphics.Color;
 import android.support.annotation.NonNull;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.FrameLayout;

File: library/src/main/java/com/lxj/xpopup/widget/SmartDragLayout.java
Patch:
@@ -7,11 +7,11 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.CardView;
 import android.util.AttributeSet;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewConfiguration;
 import android.widget.OverScroller;
-
 import com.lxj.xpopup.animator.ShadowBgAnimator;
 import com.lxj.xpopup.util.XPopupUtils;
 
@@ -101,7 +101,7 @@ public boolean onTouchEvent(MotionEvent event) {
                 // click in child rect
                 Rect rect = new Rect();
                 child.getGlobalVisibleRect(rect);
-                if (!XPopupUtils.isInRect(event.getX(), event.getY(), rect) && dismissOnTouchOutside) {
+                if (!XPopupUtils.isInRect(event.getRawX(), event.getRawY(), rect) && dismissOnTouchOutside) {
                     float distance = (float) Math.sqrt(Math.pow(event.getX() - touchX, 2) + Math.pow(event.getY() - touchY, 2));
                     long duration = System.currentTimeMillis() - downTime;
                     if (distance < ViewConfiguration.get(getContext()).getScaledTouchSlop() && duration < 350) {

File: library/src/main/java/com/lxj/xpopup/core/AttachPopupView.java
Patch:
@@ -14,6 +14,7 @@
 import com.lxj.xpopup.animator.ScrollScaleAnimator;
 import com.lxj.xpopup.enums.PopupAnimation;
 import com.lxj.xpopup.util.XPopupUtils;
+import com.lxj.xpopup.widget.PartShadowContainer;
 
 /**
  * Description: 依附于某个View的弹窗
@@ -22,7 +23,7 @@
 public abstract class AttachPopupView extends BasePopupView {
     protected int defaultOffsetY = 6;
     protected int defaultOffsetX = 0;
-    protected CardView attachPopupContainer;
+    protected PartShadowContainer attachPopupContainer;
 
     public AttachPopupView(@NonNull Context context) {
         super(context);

File: library/src/main/java/com/lxj/xpopup/impl/AttachListPopupView.java
Patch:
@@ -15,7 +15,7 @@
 import java.util.Arrays;
 
 /**
- * Description:
+ * Description: Attach类型的列表弹窗
  * Create by dance, at 2018/12/12
  */
 public class AttachListPopupView extends AttachPopupView {

File: library/src/main/java/com/lxj/xpopup/impl/CenterListPopupView.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 import android.text.TextUtils;
-import android.util.Log;
 import android.view.View;
 import android.widget.TextView;
 
@@ -82,7 +81,6 @@ public void onItemClick(View view, RecyclerView.ViewHolder holder, int position)
             }
         });
         recyclerView.setAdapter(adapter);
-        Log.e("tag", "center list init data...");
     }
 
     String title;

File: library/src/main/java/com/lxj/xpopup/widget/PopupDrawerLayout.java
Patch:
@@ -5,7 +5,6 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ViewDragHelper;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;

File: library/src/main/java/com/lxj/xpopup/widget/SmartDragLayout.java
Patch:
@@ -7,7 +7,6 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.CardView;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewConfiguration;

File: library/src/main/java/com/lxj/xpopup/widget/VerticalRecyclerView.java
Patch:
@@ -1,7 +1,6 @@
 package com.lxj.xpopup.widget;
 
 import android.content.Context;
-import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;

File: app/src/main/java/com/lxj/xpopupdemo/fragment/QuickStartDemo.java
Patch:
@@ -166,6 +166,7 @@ public void onSelect(int position, String text) {
             case R.id.btnShowDrawerLeft:
                 XPopup.get(getActivity())
                         .asCustom(new CustomDrawerPopupView(getContext()))
+//                        .asCustom(new ListDrawerPopupView(getContext()))
                         .show();
                 break;
             case R.id.btnShowDrawerRight:

File: library/src/main/java/com/lxj/xpopup/core/BasePopupView.java
Patch:
@@ -84,8 +84,9 @@ public void run() {
                 setOnKeyListener(new View.OnKeyListener() {
                     @Override
                     public boolean onKey(View v, int keyCode, KeyEvent event) {
-                        if (keyCode == KeyEvent.KEYCODE_BACK && popupInfo.isDismissOnBackPressed) {
-                            dismiss();
+                        if (keyCode == KeyEvent.KEYCODE_BACK) {
+                            if( popupInfo.isDismissOnBackPressed)
+                                dismiss();
                             return true;
                         }
                         return false;

File: library/src/main/java/com/lxj/xpopup/impl/InputConfirmPopupView.java
Patch:
@@ -48,8 +48,9 @@ public void onFocusChange(View v, boolean hasFocus) {
                     tv_input.setOnKeyListener(new View.OnKeyListener() {
                         @Override
                         public boolean onKey(View v, int keyCode, KeyEvent event) {
-                            if (keyCode == KeyEvent.KEYCODE_BACK && popupInfo.isDismissOnBackPressed) {
-                                dismiss();
+                            if (keyCode == KeyEvent.KEYCODE_BACK) {
+                                if( popupInfo.isDismissOnBackPressed)
+                                    dismiss();
                                 return true;
                             }
                             return false;

File: library/src/main/java/com/lxj/xpopup/interfaces/PopupInterface.java
Patch:
@@ -8,7 +8,6 @@
  */
 public interface PopupInterface {
     View getPopupContentView();
-    View getBackgroundView();
     int getAnimationDuration();
     void doShowAnimation();
     void doDismissAnimation();

File: library/src/main/java/com/lxj/xpopup/widget/CheckView.java
Patch:
@@ -6,7 +6,6 @@
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.view.View;
 
 import com.lxj.xpopup.util.Utils;

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -194,6 +194,7 @@ public XPopup dismissOnTouchOutside(boolean isDismissOnTouchOutside) {
     public XPopup atView(View view) {
         checkPopupInfo();
         popupInfo.setAtView(view);
+        popupInfo.touchPoint = null;
         return this;
     }
 

File: library/src/main/java/com/lxj/xpopup/XPopup.java
Patch:
@@ -62,7 +62,7 @@ public void show() {
         if (popupInterface.getPopupView() == null) {
             throw new RuntimeException("PopupInterface getPopupView() method can not return null!");
         }
-        Log.e("tag", "activityView child: "+ activityView.getChildCount());
+
         activityView.addView(popupInterface.getPopupView(), new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,
                 FrameLayout.LayoutParams.MATCH_PARENT));
         activityView.bringChildToFront(popupInterface.getPopupView());

File: library/src/main/java/com/lxj/xpopup/core/AttachPopupView.java
Patch:
@@ -78,7 +78,6 @@ public void run() {
                     // translationX: 在左边就和atView左边对齐，在右边就和其右边对齐
                     getPopupContentView().setTranslationX(isShowLeft? rect.left : maxX);
                     getPopupContentView().setTranslationY(rect.top - getPopupContentView().getMeasuredHeight() - defaultOffsetY);
-
                 } else {
                     // 应该显示在atView下方
                     getPopupContentView().setTranslationX(isShowLeft? rect.left : maxX);

