File: hertzbeat-alerter/src/test/java/org/apache/hertzbeat/alert/notice/impl/DbAlertStoreHandlerImplTest.java
Patch:
@@ -27,7 +27,6 @@
 import org.apache.hertzbeat.common.entity.alerter.GroupAlert;
 import org.apache.hertzbeat.common.entity.alerter.SingleAlert;
 import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.ExtendWith;
 import org.mockito.InjectMocks;
@@ -39,7 +38,6 @@
 /**
  * Test case for {@link DbAlertStoreHandlerImpl}
  */
-@Disabled
 @ExtendWith(MockitoExtension.class)
 class DbAlertStoreHandlerImplTest {
     

File: hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/http/promethus/exporter/ExporterParser.java
Patch:
@@ -17,7 +17,6 @@
 
 package org.apache.hertzbeat.collector.collect.http.promethus.exporter;
 
-import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -419,7 +418,7 @@ private boolean isValidLabelNameContinuation(char c) {
      * @return true/false
      */
     private boolean isValidLabelValue(String s) {
-        return s != null && s.equals(new String(s.getBytes(StandardCharsets.UTF_8)));
+        return s != null;
     }
 
     private boolean isSum(String s) {

File: hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/prometheus/parser/TextParser.java
Patch:
@@ -17,7 +17,6 @@
 
 package org.apache.hertzbeat.collector.collect.prometheus.parser;
 
-import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.LinkedList;
 import java.util.List;
@@ -300,6 +299,6 @@ private static boolean isValidLabelNameContinuation(char c) {
      * @return true/false
      */
     private static boolean isValidLabelValue(String s) {
-        return s != null && s.equals(new String(s.getBytes(StandardCharsets.UTF_8)));
+        return s != null;
     }
 }

File: hertzbeat-alerter/src/test/java/org/apache/hertzbeat/alert/service/AlertDefineYamlImExportServiceTest.java
Patch:
@@ -39,7 +39,6 @@
 import org.apache.hertzbeat.alert.service.impl.AlertDefineYamlImExportServiceImpl;
 import org.apache.hertzbeat.common.util.JsonUtil;
 import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.ExtendWith;
 import org.mockito.InjectMocks;
@@ -48,8 +47,7 @@
 
 /**
  * test case for {@link AlertDefineYamlImExportServiceImpl}
- */
-@Disabled
+*/
 @ExtendWith(MockitoExtension.class)
 class AlertDefineYamlImExportServiceTest {
 

File: hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -153,7 +153,7 @@ public void collect(CollectRep.MetricsData.Builder builder, Metrics metrics) {
                     case DispatchConstants.PARSE_XML_PATH ->
                             parseResponseByXmlPath(resp, metrics.getAliasFields(), metrics.getHttp(), builder);
                     case DispatchConstants.PARSE_WEBSITE ->
-                            parseResponseByWebsite(resp, metrics, metrics.getHttp(), builder, responseTime, response);
+                            parseResponseByWebsite(resp, metrics, metrics.getHttp(), builder, responseTime);
                     case DispatchConstants.PARSE_SITE_MAP ->
                             parseResponseBySiteMap(resp, metrics.getAliasFields(), builder);
                     case DispatchConstants.PARSE_HEADER ->
@@ -222,8 +222,7 @@ public String supportProtocol() {
     }
 
     private void parseResponseByWebsite(String resp, Metrics metrics, HttpProtocol http,
-                                        CollectRep.MetricsData.Builder builder, Long responseTime,
-                                        CloseableHttpResponse response) {
+                                        CollectRep.MetricsData.Builder builder, Long responseTime) {
         CollectRep.ValueRow.Builder valueRowBuilder = CollectRep.ValueRow.newBuilder();
         int keywordNum = CollectUtil.countMatchKeyword(resp, http.getKeyword());
         for (String alias : metrics.getAliasFields()) {

File: hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/push/PushCollectImpl.java
Patch:
@@ -86,8 +86,7 @@ public void collect(CollectRep.MetricsData.Builder builder,
         HttpContext httpContext = createHttpContext(pushProtocol);
         HttpUriRequest request = createHttpRequest(pushProtocol, monitorId, time);
 
-        try {
-            CloseableHttpResponse response = CommonHttpClient.getHttpClient().execute(request, httpContext);
+        try (CloseableHttpResponse response = CommonHttpClient.getHttpClient().execute(request, httpContext)) {
             int statusCode = response.getStatusLine().getStatusCode();
             if (statusCode != SUCCESS_CODE) {
                 builder.setCode(CollectRep.Code.FAIL);

File: hertzbeat-alerter/src/main/java/org/apache/hertzbeat/alert/notice/impl/DbAlertStoreHandlerImpl.java
Patch:
@@ -20,6 +20,7 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Optional;
 import java.util.Set;
 import java.util.stream.Collectors;
 import lombok.RequiredArgsConstructor;
@@ -66,7 +67,8 @@ public void store(GroupAlert groupAlert) {
                 if (CommonConstants.ALERT_STATUS_FIRING.equals(singleAlert.getStatus())) {
                     if (!CommonConstants.ALERT_STATUS_RESOLVED.equals(existAlert.getStatus())) {
                         singleAlert.setStartAt(existAlert.getStartAt());
-                        singleAlert.setTriggerTimes(existAlert.getTriggerTimes() + singleAlert.getTriggerTimes());
+                        int triggerTimes = Optional.ofNullable(existAlert.getTriggerTimes()).orElse(1) + Optional.ofNullable(singleAlert.getTriggerTimes()).orElse(1);
+                        singleAlert.setTriggerTimes(triggerTimes);
                     } 
                 } else if (CommonConstants.ALERT_STATUS_RESOLVED.equals(singleAlert.getStatus())) {
                     // Transition to resolved state

File: hertzbeat-manager/src/main/java/org/apache/hertzbeat/manager/scheduler/CollectorJobScheduler.java
Patch:
@@ -244,7 +244,7 @@ public boolean offlineCollector(String identity) {
                 .setIdentity(identity)
                 .build();
         ClusterMsg.Message response = this.manageServer.sendMsgSync(identity, message);
-        if (response == null || !String.valueOf(CommonConstants.SUCCESS_CODE).equals(response.getMsg())) {
+        if (response == null || !String.valueOf(CommonConstants.SUCCESS_CODE).equals(response.getMsg().toStringUtf8())) {
             return false;
         }
         log.info("send offline collector message to {} success", identity);
@@ -264,7 +264,7 @@ public boolean onlineCollector(String identity) {
                 .setIdentity(identity)
                 .build();
         ClusterMsg.Message response = this.manageServer.sendMsgSync(identity, message);
-        if (response == null || !String.valueOf(CommonConstants.SUCCESS_CODE).equals(response.getMsg())) {
+        if (response == null || !String.valueOf(CommonConstants.SUCCESS_CODE).equals(response.getMsg().toStringUtf8())) {
             return false;
         }
         log.info("send online collector message to {} success", identity);
@@ -442,7 +442,7 @@ public void cancelAsyncCollectJob(Long jobId) {
                             .build();
                     this.manageServer.sendMsg(node.getIdentity(), deleteMessage);
                 }
-                break;
+                // break; if is there jod exist in multi collector?
             }
         }
     }

File: hertzbeat-alerter/src/main/java/org/apache/hertzbeat/alert/calculate/RealTimeAlertCalculator.java
Patch:
@@ -302,6 +302,8 @@ private void handleRecoveredAlert(Map<String, String> fingerprints) {
         String fingerprint = calculateFingerprint(fingerprints);
         SingleAlert firingAlert = firingAlertMap.remove(fingerprint);
         if (firingAlert != null) {
+            // todo consider multi times to tig for resolved alert
+            firingAlert.setTriggerTimes(1);
             firingAlert.setEndAt(System.currentTimeMillis());
             firingAlert.setStatus(CommonConstants.ALERT_STATUS_RESOLVED);
             alarmCommonReduce.reduceAndSendAlarm(firingAlert.clone());

File: hertzbeat-alerter/src/main/java/org/apache/hertzbeat/alert/controller/AlertDefinesController.java
Patch:
@@ -55,12 +55,11 @@ public class AlertDefinesController {
     public ResponseEntity<Message<Page<AlertDefine>>> getAlertDefines(
             @Parameter(description = "Alarm Definition ID", example = "6565463543") @RequestParam(required = false) List<Long> ids,
             @Parameter(description = "Search-Target Expr Template", example = "x") @RequestParam(required = false) String search,
-            @Parameter(description = "Alarm Definition Severity", example = "6565463543") @RequestParam(required = false) Byte priority,
             @Parameter(description = "Sort field, default id", example = "id") @RequestParam(defaultValue = "id") String sort,
             @Parameter(description = "Sort mode: asc: ascending, desc: descending", example = "desc") @RequestParam(defaultValue = "desc") String order,
             @Parameter(description = "List current page", example = "0") @RequestParam(defaultValue = "0") int pageIndex,
             @Parameter(description = "Number of list pages", example = "8") @RequestParam(defaultValue = "8") int pageSize) {
-        Page<AlertDefine> alertDefinePage = alertDefineService.getAlertDefines(ids, search, priority, sort, order, pageIndex, pageSize);
+        Page<AlertDefine> alertDefinePage = alertDefineService.getAlertDefines(ids, search, sort, order, pageIndex, pageSize);
         return ResponseEntity.ok(Message.success(alertDefinePage));
     }
 

File: hertzbeat-alerter/src/main/java/org/apache/hertzbeat/alert/controller/AlertsController.java
Patch:
@@ -55,7 +55,7 @@ public class AlertsController {
     public ResponseEntity<Message<Page<SingleAlert>>> getAlerts(
             @Parameter(description = "Alarm Status", example = "resolved") @RequestParam(required = false) String status,
             @Parameter(description = "Alarm content fuzzy query", example = "linux") @RequestParam(required = false) String search,
-            @Parameter(description = "Sort field, default id", example = "name") @RequestParam(defaultValue = "id") String sort,
+            @Parameter(description = "Sort field, default id", example = "name") @RequestParam(defaultValue = "gmtUpdate") String sort,
             @Parameter(description = "Sort Type", example = "desc") @RequestParam(defaultValue = "desc") String order,
             @Parameter(description = "List current page", example = "0") @RequestParam(defaultValue = "0") int pageIndex,
             @Parameter(description = "Number of list pagination", example = "8") @RequestParam(defaultValue = "8") int pageSize) {
@@ -68,7 +68,7 @@ public ResponseEntity<Message<Page<SingleAlert>>> getAlerts(
     public ResponseEntity<Message<Page<GroupAlert>>> getGroupAlerts(
             @Parameter(description = "Alarm Status", example = "resolved") @RequestParam(required = false) String status,
             @Parameter(description = "Alarm content fuzzy query", example = "linux") @RequestParam(required = false) String search,
-            @Parameter(description = "Sort field, default id", example = "name") @RequestParam(defaultValue = "id") String sort,
+            @Parameter(description = "Sort field, default id", example = "name") @RequestParam(defaultValue = "gmtUpdate") String sort,
             @Parameter(description = "Sort Type", example = "desc") @RequestParam(defaultValue = "desc") String order,
             @Parameter(description = "List current page", example = "0") @RequestParam(defaultValue = "0") int pageIndex,
             @Parameter(description = "Number of list pagination", example = "8") @RequestParam(defaultValue = "8") int pageSize) {
@@ -88,7 +88,7 @@ public ResponseEntity<Message<Void>> deleteAlerts(
     }
 
     @PutMapping(path = "/group/status/{status}")
-    @Operation(summary = "Batch modify alarm status, set read and unread", description = "Batch modify alarm status, set read and unread")
+    @Operation(summary = "Batch modify alarm status, set firing or resolved", description = "Batch modify alarm status, set firing or resolved")
     public ResponseEntity<Message<Void>> applyAlertDefinesStatus(
             @Parameter(description = "Alarm status value", example = "resolved") @PathVariable String status,
             @Parameter(description = "Alarm List IDS", example = "6565463543") @RequestParam(required = false) List<Long> ids) {

File: hertzbeat-alerter/src/main/java/org/apache/hertzbeat/alert/service/AlertDefineService.java
Patch:
@@ -78,14 +78,13 @@ public interface AlertDefineService {
      * Dynamic conditional query
      * @param defineIds     Alarm Definition ID List
      * @param search        Search-Target Expr Template
-     * @param priority      Alarm Definition Severity
      * @param sort          Sort field
      * @param order         Sort mode: asc: ascending, desc: descending
      * @param pageIndex     List current page
      * @param pageSize      Number of list pages
      * @return The query results 
      */
-    Page<AlertDefine> getAlertDefines(List<Long> defineIds, String search, Byte priority, String sort, String order, int pageIndex, int pageSize);
+    Page<AlertDefine> getAlertDefines(List<Long> defineIds, String search, String sort, String order, int pageIndex, int pageSize);
 
     /**
      * Export file configuration of specified type based on ID list and export file type

File: hertzbeat-alerter/src/test/java/org/apache/hertzbeat/alert/controller/AlertDefinesControllerTest.java
Patch:
@@ -112,7 +112,7 @@ void getAlertDefines() throws Exception {
         //            }
         //        }))).thenReturn(new PageImpl<AlertDefine>(new ArrayList<AlertDefine>()));
         AlertDefine define = AlertDefine.builder().id(9L).expr("x").times(1).build();
-        Mockito.when(alertDefineService.getAlertDefines(null, null, null, "id", "desc", 1, 10)).thenReturn(new PageImpl<>(Collections.singletonList(define)));
+        Mockito.when(alertDefineService.getAlertDefines(null, null, "id", "desc", 1, 10)).thenReturn(new PageImpl<>(Collections.singletonList(define)));
 
         mockMvc.perform(MockMvcRequestBuilders.get(
                                 "/api/alert/defines")

File: hertzbeat-alerter/src/test/java/org/apache/hertzbeat/alert/service/AlertDefineServiceTest.java
Patch:
@@ -123,7 +123,7 @@ void deleteAlertDefines() {
     @Test
     void getAlertDefines() {
         when(alertDefineDao.findAll(any(Specification.class), any(PageRequest.class))).thenReturn(Page.empty());
-        assertNotNull(alertDefineService.getAlertDefines(null, null, null, "id", "desc", 1, 10));
+        assertNotNull(alertDefineService.getAlertDefines(null, null, "id", "desc", 1, 10));
         verify(alertDefineDao, times(1)).findAll(any(Specification.class), any(PageRequest.class));
     }
 }

File: hertzbeat-manager/src/main/java/org/apache/hertzbeat/manager/dao/MonitorDao.java
Patch:
@@ -58,7 +58,7 @@ public interface MonitorDao extends JpaRepository<Monitor, Long>, JpaSpecificati
      * @param status Monitor Status
      * @return Monitor List
      */
-    List<Monitor> findMonitorsByStatusNotInAndAndJobIdNotNull(List<Byte> status);
+    List<Monitor> findMonitorsByStatusNotInAndJobIdNotNull(List<Byte> status);
 
     /**
      * Query monitoring by monitoring name

File: hertzbeat-manager/src/main/java/org/apache/hertzbeat/manager/scheduler/SchedulerInit.java
Patch:
@@ -96,7 +96,7 @@ public void run(String... args) throws Exception {
                 .build();
         collectorScheduling.collectorGoOnline(CommonConstants.MAIN_COLLECTOR_NODE, collectorInfo);
         // init jobs
-        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndAndJobIdNotNull(List.of(CommonConstants.MONITOR_PAUSED_CODE));
+        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndJobIdNotNull(List.of(CommonConstants.MONITOR_PAUSED_CODE));
         List<CollectorMonitorBind> monitorBinds = collectorMonitorBindDao.findAll();
         final Set<Long> sdMonitorIds = monitorBindDao.findAllByType(CommonConstants.MONITOR_BIND_TYPE_SD_SUB_MONITOR).stream()
                 .map(MonitorBind::getBizId)

File: hertzbeat-manager/src/test/java/org/apache/hertzbeat/manager/dao/MonitorDaoTest.java
Patch:
@@ -90,9 +90,9 @@ void findMonitorsByAppEquals() {
     }
 
     @Test
-    void findMonitorsByStatusNotInAndAndJobIdNotNull() {
+    void findMonitorsByStatusNotInAndJobIdNotNull() {
         List<Byte> bytes = Arrays.asList((byte) 2, (byte) 3);
-        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndAndJobIdNotNull(bytes);
+        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndJobIdNotNull(bytes);
         assertNotNull(monitors);
         assertEquals(1, monitors.size());
     }

File: hertzbeat-manager/src/test/java/org/apache/hertzbeat/manager/service/MonitorServiceTest.java
Patch:
@@ -647,7 +647,7 @@ void getMonitorDto() {
     @Test
     void getMonitors() {
         doReturn(Page.empty()).when(monitorDao).findAll(any(Specification.class), any(PageRequest.class));
-        assertNotNull(monitorService.getMonitors(null, null, null, null, null, "gmtCreate", "desc", 1, 1, null));
+        assertNotNull(monitorService.getMonitors(null, null, null, null, "gmtCreate", "desc", 1, 1, null));
     }
 
     @Test

File: hertzbeat-common/src/main/java/org/apache/hertzbeat/common/entity/message/CollectRep.java
Patch:
@@ -661,7 +661,7 @@ private Builder() {
             }
 
             public Builder setColumns(List<String> columns) {
-                columns = columns;
+                this.columns = columns;
                 return this;
             }
 

File: hertzbeat-manager/src/main/java/org/apache/hertzbeat/manager/pojo/dto/MonitorDto.java
Patch:
@@ -49,9 +49,6 @@ public class MonitorDto {
     @Schema(description = "Monitor Metrics", accessMode = READ_ONLY)
     private List<String> metrics;
     
-    @Schema(description = "Whether to Detect", accessMode = READ_WRITE)
-    private boolean detected;
-    
     @Schema(description = "pinned collector, default null if system dispatch", accessMode = READ_WRITE)
     private String collector;
     

File: hertzbeat-manager/src/test/java/org/apache/hertzbeat/manager/controller/MonitorControllerTest.java
Patch:
@@ -74,7 +74,6 @@ public MonitorDto dataTest() {
 
         MonitorDto monitorDto = new MonitorDto();
         monitorDto.setMonitor(monitor);
-        monitorDto.setDetected(true);
         monitorDto.setParams(params);
         return monitorDto;
     }

File: hertzbeat-collector/hertzbeat-collector-basic/src/main/java/org/apache/hertzbeat/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -171,6 +171,7 @@ private Statement getConnection(String username, String password, String url, In
         }
         // renew connection when failed
         Connection connection = DriverManager.getConnection(url, username, password);
+        connection.setReadOnly(true);
         statement = connection.createStatement();
         int timeoutSecond = timeout / 1000;
         timeoutSecond = timeoutSecond <= 0 ? 1 : timeoutSecond;

File: hertzbeat-collector/hertzbeat-collector-common/src/main/java/org/apache/hertzbeat/collector/collect/common/cache/ConnectionCommonCache.java
Patch:
@@ -143,6 +143,7 @@ public Optional<C> getCache(T key, boolean refreshCache) {
         Long[] cacheTime = timeoutMap.get(key);
         if (cacheTime == null || cacheTime.length != CACHE_TIME_LENGTH) {
             log.info("[connection common cache] not hit the cache, key {}.", key);
+            removeCache(key);
             return Optional.empty();
         }
         if (cacheTime[0] + cacheTime[1] < System.currentTimeMillis()) {

File: collector/collector-common/src/main/java/org/apache/hertzbeat/collector/collect/common/cache/ConnectionCommonCache.java
Patch:
@@ -147,8 +147,7 @@ public Optional<C> getCache(T key, boolean refreshCache) {
         }
         if (cacheTime[0] + cacheTime[1] < System.currentTimeMillis()) {
             log.warn("[connection common cache] is timeout, remove it, key {}.", key);
-            timeoutMap.remove(key);
-            cacheMap.remove(key);
+            removeCache(key);
             return Optional.empty();
         }
         C value = cacheMap.compute(key, (k, v) -> {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/history/tdengine/TdEngineDataStorage.java
Patch:
@@ -57,7 +57,7 @@
 @Slf4j
 public class TdEngineDataStorage extends AbstractHistoryDataStorage {
 
-    private static final String CONSTANTS_URL_PREFIX = "jdbc:TAOS://";
+    private static final String CONSTANTS_URL_PREFIX = "jdbc:TAOS-RS://";
     private static final Pattern SQL_SPECIAL_STRING_PATTERN = Pattern.compile("(\\\\)|(')");
     private static final String INSTANCE_NULL = "''";
     private static final String CONSTANTS_CREATE_DATABASE = "CREATE DATABASE IF NOT EXISTS %s";

File: manager/src/main/java/org/apache/hertzbeat/manager/config/ConfigInitializer.java
Patch:
@@ -91,7 +91,7 @@ public void initConfig() {
                     .setDateFormat(simpleDateFormat);
         } else {
             // init system config data
-            systemConfig = SystemConfig.builder().timeZoneId(TimeZone.getDefault().getID())
+            systemConfig = SystemConfig.builder().timeZoneId(TimeZone.getDefault().getID()).theme("default")
                                    .locale(Locale.getDefault().getLanguage() + CommonConstants.LOCALE_SEPARATOR
                                                    + Locale.getDefault().getCountry())
                                    .build();

File: collector/collector-rocketmq/src/main/java/org/apache/hertzbeat/collector/collect/rocketmq/RocketmqSingleCollectImpl.java
Patch:
@@ -112,7 +112,7 @@ public void destroy() {
      */
     @Override
     public void preCheck(Metrics metrics) throws IllegalArgumentException {
-        Assert.isTrue(metrics != null && metrics.getRocketmq() != null, "Mongodb collect must has rocketmq params");
+        Assert.isTrue(metrics != null && metrics.getRocketmq() != null, "Rocketmq collect must has rocketmq params");
         RocketmqProtocol rocketmq = metrics.getRocketmq();
         Assert.hasText(rocketmq.getNamesrvHost(), "Rocketmq Protocol namesrvHost is required.");
         Assert.hasText(rocketmq.getNamesrvPort(), "Rocketmq Protocol namesrvPort is required.");

File: grafana/src/main/java/org/apache/hertzbeat/grafana/config/GrafanaProperties.java
Patch:
@@ -17,8 +17,8 @@
 
 package org.apache.hertzbeat.grafana.config;
 
-import static org.apache.hertzbeat.grafana.common.CommonConstants.HTTP;
-import static org.apache.hertzbeat.grafana.common.CommonConstants.HTTPS;
+import static org.apache.hertzbeat.grafana.common.GrafanaConstants.HTTP;
+import static org.apache.hertzbeat.grafana.common.GrafanaConstants.HTTPS;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.bind.DefaultValue;

File: manager/src/main/java/org/apache/hertzbeat/manager/controller/MonitorController.java
Patch:
@@ -55,7 +55,7 @@ public class MonitorController {
     public ResponseEntity<Message<Void>> addNewMonitor(@Valid @RequestBody MonitorDto monitorDto) {
         // Verify request data
         monitorService.validate(monitorDto, false);
-        monitorService.addMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector());
+        monitorService.addMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector(), monitorDto.getGrafanaDashboard());
         return ResponseEntity.ok(Message.success("Add success"));
     }
 
@@ -64,7 +64,7 @@ public ResponseEntity<Message<Void>> addNewMonitor(@Valid @RequestBody MonitorDt
     public ResponseEntity<Message<Void>> modifyMonitor(@Valid @RequestBody MonitorDto monitorDto) {
         // Verify request data
         monitorService.validate(monitorDto, true);
-        monitorService.modifyMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector());
+        monitorService.modifyMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector(), monitorDto.getGrafanaDashboard());
         return ResponseEntity.ok(Message.success("Modify success"));
     }
 

File: manager/src/main/java/org/apache/hertzbeat/manager/service/AccountService.java
Patch:
@@ -38,7 +38,7 @@ public interface AccountService {
      * Use refresh TOKEN to re-acquire TOKEN
      * @param refreshToken refreshToken
      * @return token and refresh token
-     * @throws AuthenticationException failed to refresh
+     * @throws Exception failed to refresh
      */
-    RefreshTokenResponse refreshToken(String refreshToken) throws AuthenticationException;
+    RefreshTokenResponse refreshToken(String refreshToken) throws Exception;
 }

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/AbstractImExportServiceImpl.java
Patch:
@@ -69,7 +69,7 @@ public void importConfig(InputStream is) {
                 if (monitorDto.isDetected()) {
                     monitorService.detectMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector());
                 }
-                monitorService.addMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector());
+                monitorService.addMonitor(monitorDto.getMonitor(), monitorDto.getParams(), monitorDto.getCollector(), monitorDto.getGrafanaDashboard());
             });
         }
     }

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/AccountServiceImpl.java
Patch:
@@ -86,7 +86,7 @@ public Map<String, String> authGetToken(LoginDto loginDto) throws Authentication
     }
 
     @Override
-    public RefreshTokenResponse refreshToken(String refreshToken) throws AuthenticationException {
+    public RefreshTokenResponse refreshToken(String refreshToken) throws Exception {
         Claims claims = JsonWebTokenUtil.parseJwt(refreshToken);
         String userId = String.valueOf(claims.getSubject());
         boolean isRefresh = claims.get("refresh", Boolean.class);

File: manager/src/test/java/org/apache/hertzbeat/manager/service/AccountServiceTest.java
Patch:
@@ -117,7 +117,7 @@ void testAuthGetTokenWithInvalidAccount() {
     }
 
     @Test
-    void testRefreshTokenWithValidToken() throws AuthenticationException {
+    void testRefreshTokenWithValidToken() throws Exception {
 
         String userId = "admin";
         String refreshToken = JsonWebTokenUtil.issueJwt(userId, 3600L, Collections.singletonMap("refresh", true));

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/history/influxdb/InfluxdbDataStorage.java
Patch:
@@ -270,12 +270,12 @@ public Map<String, List<Value>> getHistoryIntervalMetricData(Long monitorId, Str
                                 continue;
                             }
                             if (value.get(3) != null) {
-                                valueBuilder.min(this.parseDoubleValue(value.get(3).toString()));
+                                valueBuilder.max(this.parseDoubleValue(value.get(3).toString()));
                             } else {
                                 continue;
                             }
                             if (value.get(4) != null) {
-                                valueBuilder.max(this.parseDoubleValue(value.get(4).toString()));
+                                valueBuilder.min(this.parseDoubleValue(value.get(4).toString()));
                             } else {
                                 continue;
                             }

File: common/src/main/java/org/apache/hertzbeat/common/entity/manager/bulletin/Bulletin.java
Patch:
@@ -70,7 +70,7 @@ public class Bulletin {
 
 
     @Schema(description = "Monitor Fields")
-    @Column(length = 4096, columnDefinition = "json")
+    @Column(length = 4096)
     private String fields;
 
     @Schema(description = "Tags(status:success,env:prod)", example = "{name: key1, value: value1}",

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/BulletinServiceImpl.java
Patch:
@@ -211,7 +211,7 @@ public BulletinMetricsData buildBulletinMetricsData(BulletinMetricsData.Bulletin
                                     for (int i = 0; i < fieldList.size(); i++) {
                                         fieldList.get(i).setValue(valueRow.getColumns(i));
                                     }
-                                    return fieldList;
+                                    return fieldList.stream().filter(field -> fields.contains(field.getKey())).toList();
                                 })
                                 .toList();
                     } else {

File: manager/src/main/java/org/apache/hertzbeat/manager/controller/BulletinController.java
Patch:
@@ -80,7 +80,7 @@ public ResponseEntity<Message<Void>> editBulletin(@Valid @RequestBody BulletinDt
             bulletinService.validate(bulletinDto);
             bulletinService.editBulletin(bulletinDto);
         } catch (Exception e) {
-            return ResponseEntity.ok(Message.fail(FAIL_CODE, "Add failed! " + e.getMessage()));
+            return ResponseEntity.ok(Message.fail(FAIL_CODE, "Edit failed! " + e.getMessage()));
         }
         return ResponseEntity.ok(Message.success("Add success!"));
     }
@@ -93,7 +93,7 @@ public ResponseEntity<Message<Bulletin>> getBulletinByName(@Valid @PathVariable
         try {
             return ResponseEntity.ok(Message.success(bulletinService.getBulletinByName(name)));
         } catch (Exception e) {
-            return ResponseEntity.ok(Message.fail(FAIL_CODE, "Add failed! " + e.getMessage()));
+            return ResponseEntity.ok(Message.fail(FAIL_CODE, "Get failed! " + e.getMessage()));
         }
     }
 

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/BulletinServiceImpl.java
Patch:
@@ -85,6 +85,9 @@ public void validate(BulletinDto bulletinDto) throws IllegalArgumentException {
         if (bulletinDto.getMonitorIds() == null || bulletinDto.getMonitorIds().isEmpty()) {
             throw new IllegalArgumentException("Bulletin monitorIds cannot be null or empty");
         }
+        if (bulletinDao.countByName(bulletinDto.getName()) > 0) {
+            throw new IllegalArgumentException("Bulletin name duplicated");
+        }
     }
 
 

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/TagServiceImpl.java
Patch:
@@ -18,9 +18,11 @@
 package org.apache.hertzbeat.manager.service.impl;
 
 import jakarta.persistence.criteria.Predicate;
+
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.Set;
 import java.util.stream.Collectors;
@@ -130,7 +132,7 @@ public List<Tag> listTag(Set<Long> ids) {
     @Override
     public void deleteMonitorSystemTags(Monitor monitor) {
         if (CollectionUtils.isNotEmpty(monitor.getTags())) {
-            List<Tag> tags = monitor.getTags().stream().filter(tag -> tag.getType() == (byte) 0).collect(Collectors.toList());
+            List<Tag> tags = monitor.getTags().stream().filter(tag ->  Objects.nonNull(tag.getType()) && tag.getType() == (byte) 0).collect(Collectors.toList());
             tagDao.deleteAll(tags);
         }
     }

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/dns/DnsCollectImplTest.java
Patch:
@@ -19,7 +19,6 @@
 
 
 import static org.junit.jupiter.api.Assertions.assertNotNull;
-
 import java.util.Collections;
 import org.apache.hertzbeat.common.entity.job.Metrics;
 import org.apache.hertzbeat.common.entity.job.protocol.DnsProtocol;
@@ -30,7 +29,6 @@
 
 /**
  * Test case for {@link DnsCollectImpl}
- *
  */
 public class DnsCollectImplTest {
     private DnsProtocol dnsProtocol;

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/ftp/FtpCollectImplTest.java
Patch:
@@ -60,7 +60,7 @@ void testPreCheck() {
         metrics.setName("server");
         metrics.setFtp(ftpProtocol);
         metrics.setAliasFields(aliasField);
-        assertThrows(IllegalArgumentException.class, ()-> ftpCollectImpl.preCheck(metrics));
+        assertThrows(IllegalArgumentException.class, () -> ftpCollectImpl.preCheck(metrics));
 
     }
 
@@ -144,4 +144,4 @@ void testAnonymousCollect() throws IOException {
     }
 
 
-}
\ No newline at end of file
+}

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/icmp/IcmpCollectImplTest.java
Patch:
@@ -62,9 +62,9 @@ class IcmpCollectImplTest {
     @BeforeEach
     void setUp() {
         icmpProtocol = IcmpProtocol.builder()
-            .host("127.0.0.1")
-            .timeout("3000")
-            .build();
+                .host("127.0.0.1")
+                .timeout("3000")
+                .build();
         List<String> aliasField = new ArrayList<>();
         aliasField.add("responseTime");
         metrics = new Metrics();

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/redis/RedisClusterCollectImplTest.java
Patch:
@@ -45,7 +45,7 @@
  */
 @ExtendWith(MockitoExtension.class)
 public class RedisClusterCollectImplTest {
-    
+
     @InjectMocks
     private RedisCommonCollectImpl redisClusterCollect;
 
@@ -70,7 +70,7 @@ void setDown() {
     }
 
     @Test
-    void testCollect(){
+    void testCollect() {
         RedisProtocol redisProtocol = RedisProtocol.builder()
                 .host("127.0.0.1")
                 .port("6379")
@@ -111,7 +111,7 @@ void testCollect(){
         metrics.setFields(fields);
 
 
-        Mockito.mockStatic(RedisClusterClient.class).when(()->RedisClusterClient.create(Mockito.any(ClientResources.class),
+        Mockito.mockStatic(RedisClusterClient.class).when(() -> RedisClusterClient.create(Mockito.any(ClientResources.class),
                 Mockito.any(RedisURI.class))).thenReturn(client);
         Mockito.when(client.connect()).thenReturn(connection);
 

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/telnet/TelnetCollectImplTest.java
Patch:
@@ -46,7 +46,7 @@ class TelnetCollectImplTest {
     private TelnetCollectImpl telnetCollect;
 
     @Test
-    void testCollectWithEquals(){
+    void testCollectWithEquals() {
         CollectRep.MetricsData.Builder builder = CollectRep.MetricsData.newBuilder();
         TelnetProtocol telnetProtocol = TelnetProtocol.builder()
                 .timeout("10")
@@ -99,7 +99,7 @@ void testCollectWithEquals(){
     }
 
     @Test
-    void testCollectWithTab(){
+    void testCollectWithTab() {
         CollectRep.MetricsData.Builder builder = CollectRep.MetricsData.newBuilder();
         TelnetProtocol telnetProtocol = TelnetProtocol.builder()
                 .timeout("10")

File: collector/src/test/java/org/apache/hertzbeat/collector/dispatch/MetricsCollectorQueueTest.java
Patch:
@@ -17,12 +17,12 @@
 
 package org.apache.hertzbeat.collector.dispatch;
 
-import java.util.concurrent.locks.ReentrantLock;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertThrows;
 import static org.mockito.Mockito.mock;
+import java.util.concurrent.locks.ReentrantLock;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
 
 /**
  * Test case for {@link MetricsCollectorQueue}

File: collector/src/test/java/org/apache/hertzbeat/collector/dispatch/WorkerPoolTest.java
Patch:
@@ -17,13 +17,13 @@
 
 package org.apache.hertzbeat.collector.dispatch;
 
-import java.util.concurrent.RejectedExecutionException;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
 import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
 import static org.junit.jupiter.api.Assertions.assertThrows;
 import static org.mockito.Mockito.doThrow;
 import static org.mockito.Mockito.mock;
+import java.util.concurrent.RejectedExecutionException;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
 
 /**
  * Test case for {@link WorkerPool}

File: common/src/test/java/org/apache/hertzbeat/common/util/FileUtilTest.java
Patch:
@@ -17,15 +17,13 @@
 
 package org.apache.hertzbeat.common.util;
 
+import static org.junit.jupiter.api.Assertions.assertEquals;
 import org.apache.hertzbeat.common.constants.ExportFileConstants;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-
 import org.springframework.http.MediaType;
 import org.springframework.mock.web.MockMultipartFile;
 
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
 /**
  * test case for {@link FileUtil}.
  */

File: common/src/test/java/org/apache/hertzbeat/common/util/LruHashMapTest.java
Patch:
@@ -17,11 +17,10 @@
 
 package org.apache.hertzbeat.common.util;
 
-import org.junit.jupiter.api.Test;
-
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertNotNull;
 import static org.junit.jupiter.api.Assertions.assertNull;
+import org.junit.jupiter.api.Test;
 
 /**
  * Test case for {@link LruHashMap}

File: manager/src/test/java/org/apache/hertzbeat/manager/ManagerTest.java
Patch:
@@ -56,6 +56,7 @@
 
 /**
  * Manager Test
+ *
  * @version 2.1
  */
 class ManagerTest extends AbstractSpringIntegrationTest {

File: manager/src/test/java/org/apache/hertzbeat/manager/component/alerter/impl/SlackAlertNotifyHandlerImplTest.java
Patch:
@@ -30,6 +30,7 @@
 
 /**
  * Test case for {@link SlackAlertNotifyHandlerImpl}
+ *
  * @version 2.1
  */
 @Slf4j

File: manager/src/test/java/org/apache/hertzbeat/manager/component/alerter/impl/TelegramBotAlertNotifyHandlerImplTest.java
Patch:
@@ -31,6 +31,7 @@
 
 /**
  * Test case for {@link TelegramBotAlertNotifyHandlerImpl}
+ *
  * @version 2.1
  */
 @Slf4j

File: manager/src/test/java/org/apache/hertzbeat/manager/component/alerter/impl/WeChatAppAlertNotifyHandlerImplTest.java
Patch:
@@ -56,7 +56,7 @@ public void send() {
         Alert alert = new Alert();
         alert.setId(1L);
         alert.setTarget("Mock Target");
-        NoticeTemplate noticeTemplate=new NoticeTemplate();
+        NoticeTemplate noticeTemplate = new NoticeTemplate();
         noticeTemplate.setId(1L);
         noticeTemplate.setName("WeChatApp");
         noticeTemplate.setContent("");

File: manager/src/test/java/org/apache/hertzbeat/manager/controller/AppControllerTest.java
Patch:
@@ -239,8 +239,8 @@ void queryAppsHierarchy() throws Exception {
 
         // Request interface
         this.mockMvc.perform(MockMvcRequestBuilders.get("/api/apps/hierarchy", "zh-CN"))
-                    .andExpect(jsonPath("$.code").value((int) CommonConstants.SUCCESS_CODE))
-                    .andExpect(jsonPath("$.data[0].category").value("os"))
-                    .andReturn();
+                .andExpect(jsonPath("$.code").value((int) CommonConstants.SUCCESS_CODE))
+                .andExpect(jsonPath("$.data[0].category").value("os"))
+                .andReturn();
     }
 }

File: manager/src/test/java/org/apache/hertzbeat/manager/controller/SummaryControllerTest.java
Patch:
@@ -51,7 +51,7 @@ class SummaryControllerTest {
 
 
     @BeforeEach
-    void setUp()  {
+    void setUp() {
         this.mockMvc = MockMvcBuilders.standaloneSetup(summaryController).build();
     }
 
@@ -74,4 +74,4 @@ void appMonitors() throws Exception {
                 .andExpect(jsonPath("$.data.apps[0].app").value("os"))
                 .andReturn();
     }
-}
\ No newline at end of file
+}

File: manager/src/test/java/org/apache/hertzbeat/manager/controller/TagControllerTest.java
Patch:
@@ -71,8 +71,8 @@ void addNewTags() throws Exception {
 
 
         this.mockMvc.perform(MockMvcRequestBuilders.post("/api/tag")
-                .contentType(MediaType.APPLICATION_JSON)
-                .content(JsonUtil.toJson(tags)))
+                        .contentType(MediaType.APPLICATION_JSON)
+                        .content(JsonUtil.toJson(tags)))
                 .andExpect(status().isOk())
                 .andExpect(jsonPath("$.code").value((int) CommonConstants.SUCCESS_CODE))
                 .andExpect(jsonPath("$.msg").value("Add success"))

File: manager/src/test/java/org/apache/hertzbeat/manager/service/AppServiceTest.java
Patch:
@@ -46,10 +46,10 @@ class AppServiceTest {
 
     @Mock
     private MonitorDao monitorDao;
-    
+
     @Mock
     private WarehouseService warehouseService;
-    
+
     @Mock
     private ObjectStoreConfigServiceImpl objectStoreConfigService;
 

File: manager/src/test/java/org/apache/hertzbeat/manager/service/ConfigServiceTest.java
Patch:
@@ -25,7 +25,6 @@
 import static org.mockito.Mockito.when;
 import java.util.ArrayList;
 import java.util.List;
-
 import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.pojo.dto.EmailNoticeSender;
 import org.apache.hertzbeat.manager.pojo.dto.ObjectStoreDTO;
@@ -90,7 +89,7 @@ public void testGetConfig() {
     }
 
     @Test
-    public void testUpdateTemplateAppConfig(){
+    public void testUpdateTemplateAppConfig() {
         TemplateConfig templateConfig = new TemplateConfig();
         when(templateConfigService.getConfig()).thenReturn(templateConfig);
         configService.updateTemplateAppConfig("custom", new TemplateConfig.AppTemplate());
@@ -100,7 +99,7 @@ public void testUpdateTemplateAppConfig(){
     }
 
     @Test
-    public void testException(){
+    public void testException() {
         assertThrows(IllegalArgumentException.class, () -> configService.saveConfig("test", new ObjectStoreDTO<>()));
         assertThrows(IllegalArgumentException.class, () -> configService.getConfig("test2"), "Not supported this config type: test2");
     }

File: manager/src/test/java/org/apache/hertzbeat/manager/service/PluginServiceTest.java
Patch:
@@ -73,7 +73,7 @@ void setUp() {
     }
 
     @Test
-    void testSavePlugin(){
+    void testSavePlugin() {
 
         List<PluginItem> pluginItems = Collections.singletonList(new PluginItem("org.apache.hertzbear.PluginTest", PluginType.POST_ALERT));
         PluginServiceImpl service = spy(pluginService);

File: manager/src/test/java/org/apache/hertzbeat/manager/service/TagServiceTest.java
Patch:
@@ -91,6 +91,6 @@ void deleteTags() {
     @Test
     void deleteUsingTags() {
         when(tagMonitorBindDao.countByTagIdIn(anySet())).thenReturn(1L);
-        assertThrows(CommonException.class,() -> tagService.deleteTags(new HashSet<>(1)));
+        assertThrows(CommonException.class, () -> tagService.deleteTags(new HashSet<>(1)));
     }
 }

File: warehouse/src/test/java/org/apache/hertzbeat/warehouse/controller/MetricsDataControllerTest.java
Patch:
@@ -137,7 +137,7 @@ void getMetricHistoryData() throws Exception {
         when(metricsDataService.getWarehouseStorageServerStatus()).thenReturn(false);
         this.mockMvc.perform(MockMvcRequestBuilders.get(getUrl).params(params))
                 .andExpect(status().isOk())
-                 .andExpect(jsonPath("$.code").value((int) CommonConstants.FAIL_CODE))
+                .andExpect(jsonPath("$.code").value((int) CommonConstants.FAIL_CODE))
                 .andExpect(jsonPath("$.msg").value("time series database not available"))
                 .andExpect(jsonPath("$.data").isEmpty())
                 .andReturn();

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/redfish/RedfishClient.java
Patch:
@@ -73,7 +73,7 @@ public ConnectSession connect() throws Exception {
                     ? String.format("[%s]:%s", this.host, this.port + uri)
                     : String.format("%s:%s", this.host, this.port + uri);
 
-            requestBuilder.setUri(NetworkConstants.HTTP_HEADER + baseUri);
+            requestBuilder.setUri(NetworkConstants.HTTPS_HEADER + baseUri);
         }
 
         requestBuilder.addHeader(HttpHeaders.CONNECTION, NetworkConstants.KEEP_ALIVE);

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/redfish/RedfishCollectImpl.java
Patch:
@@ -176,10 +176,10 @@ private void parseRedfishResource(CollectRep.MetricsData.Builder builder, String
         if (!StringUtils.hasText(resp)) {
             return;
         }
-        List<String> aliasFields = metrics.getAliasFields();
+        List<String> jsonPaths = metrics.getRedfish().getJsonPath();
         CollectRep.ValueRow.Builder valueRowBuilder = CollectRep.ValueRow.newBuilder();
-        for (String alias : aliasFields) {
-            List<Object> res = JsonPathParser.parseContentWithJsonPath(resp, alias);
+        for (String path : jsonPaths) {
+            List<Object> res = JsonPathParser.parseContentWithJsonPath(resp, path);
             if (res != null && !res.isEmpty()) {
                 Object value = res.get(0);
                 valueRowBuilder.addColumns(value == null ? CommonConstants.NULL_VALUE : String.valueOf(value));

File: common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/RedfishProtocol.java
Patch:
@@ -17,6 +17,7 @@
 
 package org.apache.hertzbeat.common.entity.job.protocol;
 
+import java.util.List;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
@@ -59,4 +60,6 @@ public class RedfishProtocol {
      * Redfish Resource Name and Corresponding Collection URI
      */
     private String schema;
+
+    private List<String> jsonPath;
 }

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/MailGeneralConfigServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import java.lang.reflect.Type;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.EmailNoticeSender;
 import org.springframework.stereotype.Service;
@@ -46,7 +47,7 @@ public MailGeneralConfigServiceImpl(GeneralConfigDao generalConfigDao, ObjectMap
     
     @Override
     public String type() {
-        return "email";
+        return GeneralConfigTypeEnum.email.name();
     }
     
     /**

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/ObjectStoreConfigServiceImpl.java
Patch:
@@ -23,6 +23,7 @@
 import java.lang.reflect.Type;
 import javax.annotation.Resource;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.ObjectStoreConfigChangeEvent;
 import org.apache.hertzbeat.manager.pojo.dto.ObjectStoreDTO;
@@ -63,7 +64,7 @@ public ObjectStoreConfigServiceImpl(GeneralConfigDao generalConfigDao, ObjectMap
 
     @Override
     public String type() {
-        return "oss";
+        return GeneralConfigTypeEnum.oss.name();
     }
 
     @Override

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/SmsGeneralConfigServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import java.lang.reflect.Type;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.SmsNoticeSender;
 import org.springframework.stereotype.Service;
@@ -46,7 +47,7 @@ public SmsGeneralConfigServiceImpl(GeneralConfigDao generalConfigDao, ObjectMapp
     
     @Override
     public String type() {
-        return "sms";
+        return GeneralConfigTypeEnum.sms.name();
     }
     
     /**

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/SystemGeneralConfigServiceImpl.java
Patch:
@@ -22,6 +22,7 @@
 import jakarta.annotation.Resource;
 import java.lang.reflect.Type;
 import java.util.Objects;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.common.support.event.SystemConfigChangeEvent;
 import org.apache.hertzbeat.common.util.TimeZoneUtil;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
@@ -60,7 +61,7 @@ public void handler(SystemConfig systemConfig) {
     
     @Override
     public String type() {
-        return "system";
+        return GeneralConfigTypeEnum.system.name();
     }
     
     @Override

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/SystemSecretServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import java.lang.reflect.Type;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.SystemSecret;
 import org.springframework.stereotype.Service;
@@ -43,7 +44,7 @@ public SystemSecretServiceImpl(GeneralConfigDao generalConfigDao, ObjectMapper o
     
     @Override
     public String type() {
-        return "secret";
+        return GeneralConfigTypeEnum.secret.name();
     }
     
     @Override

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/TemplateConfigServiceImpl.java
Patch:
@@ -21,6 +21,7 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import jakarta.annotation.Resource;
 import java.lang.reflect.Type;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.TemplateConfig;
 import org.apache.hertzbeat.manager.service.AppService;
@@ -55,7 +56,7 @@ public void handler(TemplateConfig templateConfig) {
     
     @Override
     public String type() {
-        return "template";
+        return GeneralConfigTypeEnum.template.name();
     }
     
     @Override

File: manager/src/test/java/org/apache/hertzbeat/manager/service/MailGeneralConfigServiceTest.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.EmailNoticeSender;
 import org.apache.hertzbeat.manager.service.impl.MailGeneralConfigServiceImpl;
@@ -54,7 +55,7 @@ void setUp() {
 	@Test
 	void testType() {
 
-		assertEquals("email", mailGeneralConfigService.type());
+		assertEquals(GeneralConfigTypeEnum.email.name(), mailGeneralConfigService.type());
 	}
 
 	@Test

File: manager/src/test/java/org/apache/hertzbeat/manager/service/ObjectStoreConfigServiceTest.java
Patch:
@@ -18,6 +18,7 @@
 package org.apache.hertzbeat.manager.service;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.pojo.dto.ObjectStoreConfigChangeEvent;
 import org.apache.hertzbeat.manager.pojo.dto.ObjectStoreDTO;
 import org.apache.hertzbeat.manager.service.impl.ObjectStoreConfigServiceImpl;
@@ -66,7 +67,7 @@ void setUp() {
 	void testGetType() {
 
 		String type = objectStoreConfigService.type();
-		assertEquals("oss", type);
+		assertEquals(GeneralConfigTypeEnum.oss.name(), type);
 	}
 
 	@Test

File: manager/src/test/java/org/apache/hertzbeat/manager/service/SmsGeneralConfigServiceTest.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.SmsNoticeSender;
 import org.apache.hertzbeat.manager.service.impl.SmsGeneralConfigServiceImpl;
@@ -60,7 +61,7 @@ void setUp() {
 	@Test
 	void testType() {
 		String result = service.type();
-		assertEquals("sms", result);
+		assertEquals(GeneralConfigTypeEnum.sms.name(), result);
 	}
 
 	@Test

File: manager/src/test/java/org/apache/hertzbeat/manager/service/SystemGeneralConfigServiceTest.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.SystemConfig;
 import org.apache.hertzbeat.manager.service.impl.SystemGeneralConfigServiceImpl;
@@ -58,7 +59,7 @@ void setUp() {
 	void testType() {
 
 		String result = service.type();
-		assertEquals("system", result);
+		assertEquals(GeneralConfigTypeEnum.system.name(), result);
 	}
 
 	@Test

File: manager/src/test/java/org/apache/hertzbeat/manager/service/SystemSecretServiceTest.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.SystemSecret;
 import org.apache.hertzbeat.manager.service.impl.SystemSecretServiceImpl;
@@ -54,7 +55,7 @@ void setUp() {
 	@Test
 	void testType() {
 
-		assertEquals("secret", systemSecretService.type());
+		assertEquals(GeneralConfigTypeEnum.secret.name(), systemSecretService.type());
 	}
 
 	@Test

File: manager/src/test/java/org/apache/hertzbeat/manager/service/TemplateConfigServiceTest.java
Patch:
@@ -18,6 +18,7 @@
 package org.apache.hertzbeat.manager.service;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.hertzbeat.common.constants.GeneralConfigTypeEnum;
 import org.apache.hertzbeat.manager.dao.GeneralConfigDao;
 import org.apache.hertzbeat.manager.pojo.dto.TemplateConfig;
 import org.apache.hertzbeat.manager.service.impl.TemplateConfigServiceImpl;
@@ -88,7 +89,7 @@ void testHandlerNullTemplateConfig() {
 	void testType() {
 
 		String type = templateConfigServiceImpl.type();
-		assertEquals("template", type);
+		assertEquals(GeneralConfigTypeEnum.template.name(), type);
 	}
 
 }

File: manager/src/main/java/org/apache/hertzbeat/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -47,6 +47,7 @@ public void send(NoticeReceiver receiver, NoticeTemplate noticeTemplate, Alert a
 
             // fix null pointer exception
             filterInvalidTags(alert);
+            alert.setContent(escapeJsonStr(alert.getContent()));
             String webhookJson = renderContent(noticeTemplate, alert);
             webhookJson = webhookJson.replace(",\n  }", "\n }");
 

File: manager/src/test/java/org/apache/hertzbeat/manager/component/alerter/impl/SmsAlertNotifyHandlerImplTest.java
Patch:
@@ -17,6 +17,7 @@
 
 package org.apache.hertzbeat.manager.component.alerter.impl;
 
+import java.util.Locale;
 import java.util.Map;
 import java.util.ResourceBundle;
 
@@ -73,6 +74,8 @@ public void setUp() {
 		bundle = mock(ResourceBundle.class);
 		when(bundle.getString(anyString())).thenReturn("High");
 
+		Locale.setDefault(Locale.ENGLISH);
+
 		notifyHandler = new SmsAlertNotifyHandlerImpl(tencentSmsClient);
 	}
 

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/MailGeneralConfigServiceImpl.java
Patch:
@@ -54,7 +54,7 @@ public String type() {
      * a TypeReference of NoticeSender type
      */
     @Override
-    protected TypeReference<EmailNoticeSender> getTypeReference() {
+    public TypeReference<EmailNoticeSender> getTypeReference() {
         return new TypeReference<>() {
             @Override
             public Type getType() {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/dao/HistoryDao.java
Patch:
@@ -46,7 +46,7 @@ public interface HistoryDao extends JpaRepository<History, Long>, JpaSpecificati
      */
     @Modifying
     @Transactional(rollbackFor = Exception.class)
-    @Query(value = "delete from hzb_history limit :delNum", nativeQuery = true)
+    @Query(value = "DELETE FROM hzb_history WHERE id IN ( SELECT t2.id from (SELECT t1.id FROM hzb_history t1 LIMIT ?1) as t2)", nativeQuery = true)
     int deleteOlderHistoriesRecord(@Param(value = "delNum") int delNum);
 
     /**

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineJsonImExportServiceImpl.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.List;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.hertzbeat.alert.dto.ExportAlertDefineDTO;
 import org.springframework.stereotype.Service;
 
 /**

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineYamlImExportServiceImpl.java
Patch:
@@ -23,6 +23,7 @@
 import java.nio.charset.StandardCharsets;
 import java.util.List;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.hertzbeat.alert.dto.ExportAlertDefineDTO;
 import org.springframework.stereotype.Service;
 import org.yaml.snakeyaml.DumperOptions;
 import org.yaml.snakeyaml.Yaml;

File: alerter/src/main/java/org/apache/hertzbeat/alert/AlerterProperties.java
Patch:
@@ -34,7 +34,7 @@ public class AlerterProperties {
     /**
      * Alarm content console link
      */
-    private String consoleUrl = "https://console.tancloud.cn";
+    private String consoleUrl = "https://console.tancloud.io";
 
     /**
      * WeWork webhook url

File: manager/src/main/java/org/apache/hertzbeat/manager/pojo/dto/EmailNoticeSender.java
Patch:
@@ -54,5 +54,7 @@ public class EmailNoticeSender {
 
     private boolean emailSsl = true;
 
+    private boolean emailStarttls = false;
+
     private boolean enable = true;
 }

File: common/src/main/java/org/apache/hertzbeat/common/util/CommonUtil.java
Patch:
@@ -21,6 +21,7 @@
 import java.math.RoundingMode;
 import java.time.LocalTime;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -205,6 +206,7 @@ public static String getLangMappingValueFromI18nMap(String lang, Map<String, Str
         }
         return Optional.ofNullable(i18nMap.get(lang))
                 .orElse(i18nMap.values().stream()
+                        .filter(Objects::nonNull)
                         .findFirst().orElse(null));
     }
 

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/AppServiceImpl.java
Patch:
@@ -207,7 +207,7 @@ public Map<String, String> getI18nResources(String lang) {
             var name = job.getName();
             var i18nName = CommonUtil.getLangMappingValueFromI18nMap(lang, name);
             if (i18nName != null) {
-                i18nMap.put("monitor.app." + job.getApp(), i18nName);
+                i18nMap.put("monitor.app." + job.getApp().toLowerCase(), i18nName);
             }
             var help = job.getHelp();
             var i18nHelp = CommonUtil.getLangMappingValueFromI18nMap(lang, help);

File: manager/src/main/java/org/apache/hertzbeat/manager/component/alerter/impl/AbstractAlertNotifyHandlerImpl.java
Patch:
@@ -18,6 +18,7 @@
 package org.apache.hertzbeat.manager.component.alerter.impl;
 
 import freemarker.cache.StringTemplateLoader;
+import freemarker.core.TemplateClassResolver;
 import freemarker.template.Configuration;
 import freemarker.template.TemplateException;
 import java.io.IOException;
@@ -64,6 +65,7 @@ protected String renderContent(NoticeTemplate noticeTemplate, Alert alert) throw
         freemarker.template.Template templateRes;
         Configuration cfg = new Configuration(Configuration.VERSION_2_3_0);
         cfg.setNumberFormat(NUMBER_FORMAT);
+        cfg.setNewBuiltinClassResolver(TemplateClassResolver.SAFER_RESOLVER);
         Map<String, Object> model = new HashMap<>(16);
         model.put("title", bundle.getString("alerter.notify.title"));
 

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -549,7 +549,7 @@ public HttpUriRequest createHttpRequest(HttpProtocol httpProtocol) {
         }
 
         // if it has payload, would override post params
-        if (StringUtils.hasLength(httpProtocol.getPayload())) {
+        if (StringUtils.hasLength(httpProtocol.getPayload()) && (HttpMethod.POST.matches(httpMethod) || HttpMethod.PUT.matches(httpMethod))) {
             requestBuilder.setEntity(new StringEntity(httpProtocol.getPayload(), StandardCharsets.UTF_8));
         }
 

File: manager/src/main/java/org/apache/hertzbeat/manager/controller/PluginController.java
Patch:
@@ -92,7 +92,7 @@ public ResponseEntity<Message<Page<PluginMetadata>>> getPlugins(
 
     @DeleteMapping()
     @Operation(summary = "Delete plugins based on ID", description = "Delete plugins based on ID")
-    public ResponseEntity<Message<Void>> deleteTags(
+    public ResponseEntity<Message<Void>> deletePlugins(
         @Parameter(description = "Plugin IDs ", example = "6565463543") @RequestParam(required = false) List<Long> ids) {
         if (ids != null && !ids.isEmpty()) {
             pluginService.deletePlugins(new HashSet<>(ids));

File: manager/src/test/java/org/apache/hertzbeat/manager/service/PluginServiceTest.java
Patch:
@@ -113,7 +113,9 @@ void testDeletePlugins() {
         Set<Long> ids = new HashSet<>(Collections.singletonList(1L));
 
         when(metadataDao.findAllById(ids)).thenReturn(Collections.singletonList(plugin));
-        doNothing().when(metadataDao).deleteById(anyLong());
+        when(metadataDao.findById(anyLong())).thenReturn(Optional.of(plugin));
+        when(metadataDao.save(plugin)).thenReturn(plugin);
+        doNothing().when(metadataDao).deleteById(1L);
 
         pluginService.deletePlugins(ids);
         verify(metadataDao, times(1)).deleteById(1L);

File: manager/src/main/java/org/apache/hertzbeat/manager/service/AiService.java
Patch:
@@ -18,6 +18,7 @@
 package org.apache.hertzbeat.manager.service;
 
 
+import org.apache.hertzbeat.common.constants.AiTypeEnum;
 import org.springframework.http.codec.ServerSentEvent;
 import reactor.core.publisher.Flux;
 
@@ -31,7 +32,7 @@ public interface AiService {
      * get AI type
      * @return     type
      */
-    String getType();
+    AiTypeEnum getType();
 
     /**
      * AI response

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/ZhiPuServiceImpl.java
Patch:
@@ -23,6 +23,7 @@
 import javax.annotation.PostConstruct;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.hertzbeat.common.constants.AiConstants;
+import org.apache.hertzbeat.common.constants.AiTypeEnum;
 import org.apache.hertzbeat.manager.pojo.dto.AiMessage;
 import org.apache.hertzbeat.manager.pojo.dto.ZhiPuAiResponse;
 import org.apache.hertzbeat.manager.pojo.dto.ZhiPuRequestParamDTO;
@@ -66,8 +67,8 @@ private void init() {
     }
 
     @Override
-    public String getType() {
-        return "0";
+    public AiTypeEnum getType() {
+        return AiTypeEnum.zhiPu;
     }
 
     @Override

File: collector/src/main/java/org/apache/hertzbeat/collector/util/CollectUtil.java
Patch:
@@ -55,7 +55,7 @@ public final class CollectUtil {
     private static final String CRYING_PLACEHOLDER_REX = "\\^o\\^";
     private static final String CRYING_PLACEHOLDER_REGEX = "(\\^o\\^)(\\w|-|$|\\.)+(\\^o\\^)";
     private static final Pattern CRYING_PLACEHOLDER_REGEX_PATTERN = Pattern.compile(CRYING_PLACEHOLDER_REGEX);
-    private static final List<String> UNIT_SYMBOLS = Arrays.asList("%", "G", "g", "M", "m", "K", "k", "B", "b");
+    private static final List<String> UNIT_SYMBOLS = Arrays.asList("%", "G", "g", "M", "m", "K", "k", "B", "b", "Ki", "Mi", "Gi");
 
     /**
      * private constructor, not allow to create instance.
@@ -104,7 +104,7 @@ public static DoubleAndUnit extractDoubleAndUnitFromStr(String str) {
             log.debug(e.getMessage());
         }
 
-        if (!str.matches(DOUBLE_AND_UNIT_CHECK_REGEX)){
+        if (!str.matches(DOUBLE_AND_UNIT_CHECK_REGEX)) {
             return doubleAndUnit;
         }
         // extract unit from str value, eg: 23.43GB, 33KB, 44.22G

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/history/greptime/GreptimeProperties.java
Patch:
@@ -25,7 +25,7 @@
  */
 @ConfigurationProperties(prefix = "warehouse.store.greptime")
 public record GreptimeProperties(@DefaultValue("false") boolean enabled,
-                                 @DefaultValue("127.0.0.1:4001") String endpoint,
-                                 String username,
-                                 String password) {
+	@DefaultValue("127.0.0.1:4001") String grpcEndpoints,
+	@DefaultValue("jdbc:mysql://127.0.0.1:4002/hertzbeat?connectionTimeZone=Asia/Shanghai&forceConnectionTimeZoneToSession=true") String url,
+	@DefaultValue("com.mysql.cj.jdbc.Driver") String driverClassName, String username, String password) {
 }

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -133,7 +133,7 @@ public void collect(CollectRep.MetricsData.Builder builder,
             // Option 1: Parse using InputStream, but this requires significant code changes;
             // Option 2: Manually trigger garbage collection, similar to how it's done in Dubbo for large inputs.
             String resp = EntityUtils.toString(response.getEntity(), StandardCharsets.UTF_8);
-            if (StringUtils.hasText(resp)) {
+            if (!StringUtils.hasText(resp)) {
                 log.info("http response entity is empty, status: {}.", statusCode);
             }
             Long responseTime = System.currentTimeMillis() - startTime;

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/dns/DnsCollectImpl.java
Patch:
@@ -158,7 +158,7 @@ private DnsResolveResult dig(DnsProtocol dns) throws IOException {
         responseTimeStopWatch.start();
 
         Name name = Name.fromString(dns.getAddress(), Name.root);
-        Message query = Message.newQuery(Record.newRecord(name, Type.ANY, DClass.ANY));
+        Message query = Message.newQuery(Record.newRecord(name, Type.ANY, DClass.value(dns.getQueryClass())));
         Resolver res = new SimpleResolver(dns.getDnsServerIP());
         res.setTimeout(Duration.of(Long.parseLong(dns.getTimeout()), ChronoUnit.MILLIS));
         res.setTCP(Boolean.parseBoolean(dns.getTcp()));
@@ -195,7 +195,7 @@ private Map<String, String> getHeaderInfo(Message message, Long responseTime) {
 
     private List<String> getSectionInfo(Message message, int section) {
         List<RRset> currentSetList = message.getSectionRRsets(section);
-        
+
         if (CollectionUtils.isEmpty(currentSetList)) {
             return Lists.newArrayList();
         }

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/common/cache/CommonCacheTest.java
Patch:
@@ -17,9 +17,9 @@
 
 package org.apache.hertzbeat.collector.collect.common.cache;
 
+import static org.junit.jupiter.api.Assertions.assertFalse;
 import static org.junit.jupiter.api.Assertions.assertSame;
 import static org.junit.jupiter.api.Assertions.assertTrue;
-import static org.junit.jupiter.api.Assertions.assertFalse;
 import java.util.Optional;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: collector/src/test/java/org/apache/hertzbeat/collector/util/CollectUtilTest.java
Patch:
@@ -32,8 +32,6 @@
 import java.util.Map;
 import org.apache.hertzbeat.common.entity.job.Configmap;
 import org.apache.hertzbeat.common.entity.job.Metrics;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 /**

File: collector/src/test/java/org/apache/hertzbeat/collector/util/TimeExpressionUtilTest.java
Patch:
@@ -19,7 +19,6 @@
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertNull;
-
 import java.time.LocalDateTime;
 import org.junit.jupiter.api.Test;
 

File: alerter/src/main/java/org/apache/hertzbeat/alert/reduce/AlarmConvergeReduce.java
Patch:
@@ -119,7 +119,7 @@ public boolean filterConverge(Alert currentAlert) {
                 }
             }
             if (match) {
-                long evalInterval = alertConverge.getEvalInterval() * 1000;
+                long evalInterval = alertConverge.getEvalInterval() * 1000L;
                 long now = System.currentTimeMillis();
                 if (evalInterval <= 0) {
                     return true;

File: push/src/main/java/org/apache/hertzbeat/push/service/impl/PushServiceImpl.java
Patch:
@@ -52,11 +52,11 @@ public class PushServiceImpl implements PushService {
 
     private final Map<Long, Long> monitorIdCache; // key: monitorId, value: time stamp of last query
 
-    private static final long cacheTimeout = 5000; // ms
+    private static final long cacheTimeout = 5000L; // ms
 
     private final Map<Long, PushMetricsDto.Metrics> lastPushMetrics;
 
-    private static final long deleteMetricsPeriod = 1000 * 60 * 60 * 12;
+    private static final long deleteMetricsPeriod = 1000 * 60 * 60 * 12L;
 
     private static final long deleteBeforeTime = deleteMetricsPeriod / 2;
 

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/history/greptime/GrepTimeDbDataStorage.java
Patch:
@@ -287,11 +287,11 @@ private long getExpireTimeFromToken(String history) {
         try {
             TemporalAmount temporalAmount = TimePeriodUtil.parseTokenTime(history);
             ZonedDateTime dateTime = ZonedDateTime.now().minus(temporalAmount);
-            expireTime = dateTime.toEpochSecond() * 1000;
+            expireTime = dateTime.toEpochSecond() * 1000L;
         } catch (Exception e) {
             log.error("parse history time error: {}. use default: 6h", e.getMessage());
             ZonedDateTime dateTime = ZonedDateTime.now().minus(Duration.ofHours(6));
-            expireTime = dateTime.toEpochSecond() * 1000;
+            expireTime = dateTime.toEpochSecond() * 1000L;
         }
         return expireTime;
     }

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/TagServiceImpl.java
Patch:
@@ -24,6 +24,7 @@
 import java.util.stream.Collectors;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hertzbeat.common.entity.manager.Monitor;
 import org.apache.hertzbeat.common.entity.manager.Tag;
 import org.apache.hertzbeat.manager.dao.TagDao;
@@ -55,6 +56,7 @@ public void addTags(List<Tag> tags) {
     public void modifyTag(Tag tag) {
         Optional<Tag> tagOptional = tagDao.findById(tag.getId());
         if (tagOptional.isPresent()) {
+            tag.setTagValue(StringUtils.isEmpty(tag.getTagValue()) ? null : tag.getTagValue());
             tagDao.save(tag);
         } else {
             throw new IllegalArgumentException("The tag is not existed");

File: alerter/src/main/java/org/apache/hertzbeat/alert/AlerterProperties.java
Patch:
@@ -112,8 +112,5 @@ public static class KafkaProperties {
             private String groupId;
 
         }
-
     }
-
-
 }

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/AlertDefineImExportService.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.OutputStream;
 import java.util.List;
 
-
 /**
  * Configuration Import Export
  */

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineAbstractImExportServiceImpl.java
Patch:
@@ -17,7 +17,6 @@
 
 package org.apache.hertzbeat.alert.service.impl;
 
-
 import cn.afterturn.easypoi.excel.annotation.Excel;
 import cn.afterturn.easypoi.excel.annotation.ExcelTarget;
 import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineExcelImExportServiceImpl.java
Patch:
@@ -39,7 +39,6 @@
 import org.springframework.stereotype.Service;
 import org.springframework.util.StringUtils;
 
-
 /**
  * Configure the import and export EXCEL format
  */
@@ -263,6 +262,4 @@ void writeOs(List<ExportAlertDefineDTO> exportAlertDefineList, OutputStream os)
             throw new RuntimeException(e);
         }
     }
-
-
 }

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineJsonImExportServiceImpl.java
Patch:
@@ -17,7 +17,6 @@
 
 package org.apache.hertzbeat.alert.service.impl;
 
-
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import java.io.IOException;
@@ -28,7 +27,6 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 
-
 /**
  * Configure the import and export JSON format
  */

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertDefineYamlImExportServiceImpl.java
Patch:
@@ -17,7 +17,6 @@
 
 package org.apache.hertzbeat.alert.service.impl;
 
-
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;
@@ -28,7 +27,6 @@
 import org.yaml.snakeyaml.DumperOptions;
 import org.yaml.snakeyaml.Yaml;
 
-
 /**
  * Configure the import and export Yaml format
  */
@@ -39,7 +37,6 @@ public class AlertDefineYamlImExportServiceImpl extends AlertDefineAbstractImExp
     public static final String TYPE = "YAML";
     public static final String FILE_SUFFIX = ".yaml";
 
-
     @Override
     public String type() {
         return TYPE;

File: alerter/src/main/java/org/apache/hertzbeat/alert/service/impl/AlertServiceImpl.java
Patch:
@@ -158,7 +158,4 @@ private Alert buildAlertData(AlertReport alertReport){
                 .gmtUpdate(dateTime)
                 .build();
     }
-
-
-
 }

File: alerter/src/main/java/org/apache/hertzbeat/alert/util/DateUtil.java
Patch:
@@ -29,7 +29,8 @@ public class DateUtil {
 
     private static final String[] DATE_FORMATS = {
             "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
-            "yyyy-MM-dd HH:mm:ss"};
+            "yyyy-MM-dd HH:mm:ss"
+    };
 
     /**
      * convert date to timestamp

File: alerter/src/test/java/org/apache/hertzbeat/alert/AlerterWorkerPoolTest.java
Patch:
@@ -23,7 +23,6 @@
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-
 /**
  * Test case for {@link AlerterWorkerPool}
  */
@@ -53,4 +52,4 @@ void executeJob() throws InterruptedException {
 
         assertEquals(NUMBER_OF_THREADS, counter.get());
     }
-}
\ No newline at end of file
+}

File: alerter/src/test/java/org/apache/hertzbeat/alert/service/AlertDefineServiceTest.java
Patch:
@@ -187,4 +187,4 @@ void getBindAlertDefineMonitors() {
         when(alertDefineBindDao.getAlertDefineBindsByAlertDefineIdEquals(id)).thenReturn(alertDefineMonitorBinds);
         assertDoesNotThrow(() -> alertDefineService.getBindAlertDefineMonitors(id));
     }
-}
\ No newline at end of file
+}

File: alerter/src/test/java/org/apache/hertzbeat/alert/service/AlertServiceTest.java
Patch:
@@ -56,4 +56,4 @@ void getAlertsSummary() {
     @Test
     void addNewAlertReport() {
     }
-}
\ No newline at end of file
+}

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/common/cache/ConnectionCommonCache.java
Patch:
@@ -219,6 +219,9 @@ public void removeCache(T key) {
         timeoutMap.remove(key);
         C value = cacheMap.remove(key);
         try {
+            if (value == null) {
+                return;
+            }
             value.close();
         } catch (Exception e) {
             log.error("connection close error: {}.", e.getMessage(), e);

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/http/SslCertificateCollectImpl.java
Patch:
@@ -159,8 +159,8 @@ private void validateParams(Metrics metrics) throws Exception {
         }
         HttpProtocol httpProtocol = metrics.getHttp();
         String url = httpProtocol.getUrl();
-        if (StringUtils.hasText(url) || !url.startsWith(RIGHT_DASH)) {
-            httpProtocol.setUrl(url == null ? RIGHT_DASH : RIGHT_DASH + url.trim());
+        if (!StringUtils.hasText(url) || !url.startsWith(RIGHT_DASH)) {
+            httpProtocol.setUrl(StringUtils.hasText(url) ? RIGHT_DASH + url.trim() : RIGHT_DASH);
         }
     }
 }

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/nebulagraph/NgqlCollectImpl.java
Patch:
@@ -67,6 +67,7 @@ public void collect(Builder builder, long monitorId, String app, Metrics metrics
         if (!nebulaTemplate.isInitSuccess()) {
             builder.setCode(CollectRep.Code.FAIL);
             builder.setMsg("Failed to connect Nebula Graph");
+            return;
         }
         stopWatch.stop();
         long responseTime = stopWatch.getTotalTimeMillis();

File: common/src/main/java/org/apache/hertzbeat/common/config/EclipseLinkJpaConfiguration.java
Patch:
@@ -24,7 +24,7 @@
 import javax.sql.DataSource;
 import org.eclipse.persistence.config.PersistenceUnitProperties;
 import org.springframework.beans.factory.ObjectProvider;
-import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration;
 import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties;
 import org.springframework.context.annotation.Configuration;
@@ -36,7 +36,7 @@
  * jpa eclipselink impl config
  */
 @Configuration
-@EnableAutoConfiguration
+@ConditionalOnProperty(prefix = "spring.datasource", name = "url")
 public class EclipseLinkJpaConfiguration extends JpaBaseConfiguration {
 
     protected EclipseLinkJpaConfiguration(DataSource dataSource, JpaProperties properties, 

File: collector/src/main/java/org/apache/hertzbeat/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -199,8 +199,8 @@ private void validateParams(Metrics metrics) throws Exception {
         HttpProtocol httpProtocol = metrics.getHttp();
         String url = httpProtocol.getUrl();
         
-        if (StringUtils.hasText(url) || !url.startsWith(RIGHT_DASH)) {
-            httpProtocol.setUrl(url == null ? RIGHT_DASH : RIGHT_DASH + url.trim());
+        if (!StringUtils.hasText(url) || !url.startsWith(RIGHT_DASH)) {
+            httpProtocol.setUrl(StringUtils.hasText(url) ? RIGHT_DASH + url.trim() : RIGHT_DASH);
         }
         
         if (CollectionUtils.isEmpty(httpProtocol.getSuccessCodes())) {

File: manager/src/main/java/org/apache/hertzbeat/manager/service/impl/AbstractImExportServiceImpl.java
Patch:
@@ -135,7 +135,7 @@ private MonitorDto convert(ExportMonitorDTO exportMonitor) {
         log.debug("exportMonitor.monitor{}", exportMonitor.monitor);
         if (exportMonitor.monitor != null) { // Add one more null check
             BeanUtils.copyProperties(exportMonitor.monitor, monitor);
-            if (exportMonitor.monitor.tags != null) {
+            if (exportMonitor.monitor.tags != null && !exportMonitor.monitor.tags.isEmpty()) {
                 monitor.setTags(tagService.listTag(new HashSet<>(exportMonitor.monitor.tags))
                         .stream()
                         .filter(tag -> !(tag.getName().equals(CommonConstants.TAG_MONITOR_ID) || tag.getName().equals(CommonConstants.TAG_MONITOR_NAME)))

File: collector/src/main/java/org/apache/hertzbeat/collector/util/CollectUtil.java
Patch:
@@ -113,7 +113,7 @@ public static DoubleAndUnit extractDoubleAndUnitFromStr(String str) {
         } catch (Exception e) {
             log.debug(e.getMessage());
         }
-        return doubleAndUnit;
+        return null;
     }
 
     /**

File: common/src/main/java/org/apache/hertzbeat/common/entity/manager/JsonLongListAttributeConverter.java
Patch:
@@ -43,6 +43,9 @@ public List<Long> convertToEntityAttribute(String dbData) {
         if (StringUtils.isBlank(dbData)) {
             return List.of();
         }
+        if (!JsonUtil.isJsonStr(dbData) && StringUtils.isNumeric(dbData)) {
+            return List.of(Long.parseLong(dbData));
+        }
         TypeReference<List<Long>> typeReference = new TypeReference<>() {
         };
         List<Long> longList = JsonUtil.fromJson(dbData, typeReference);

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryVictoriaMetricsDataStorage.java
Patch:
@@ -59,7 +59,7 @@
 import org.springframework.web.util.UriComponentsBuilder;
 
 /**
- * tdengine data storage
+ * VictoriaMetrics data storage
  */
 @Primary
 @Component

File: collector/src/main/java/org/apache/hertzbeat/collector/dispatch/MetricsCollect.java
Patch:
@@ -406,6 +406,6 @@ private void setNewThreadName(long monitorId, String app, long startTime, Metric
 
     @Override
     public int compareTo(MetricsCollect collect) {
-        return runPriority - collect.runPriority;
+        return collect.runPriority - this.runPriority;
     }
 }

File: collector/src/test/java/org/apache/hertzbeat/collector/collect/dns/DnsCollectImplTest.java
Patch:
@@ -38,6 +38,7 @@ public void setup() {
         dnsCollect = new DnsCollectImpl();
         dnsProtocol = DnsProtocol.builder()
                 .dnsServerIP("8.8.8.8")
+                .queryClass("IN")
                 .address("www.google.com")
                 .build();
     }

File: common/src/main/java/org/apache/hertzbeat/common/entity/job/protocol/DnsProtocol.java
Patch:
@@ -36,8 +36,9 @@ public class DnsProtocol {
     private String address;
     private String timeout;
     private String tcp;
+    private String queryClass;
 
     public boolean isInvalid() {
-        return StringUtils.isAnyBlank(dnsServerIP, port, address, timeout, tcp);
+        return StringUtils.isAnyBlank(dnsServerIP, port, address, timeout, tcp, queryClass);
     }
 }

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryGrepTimeDbDataStorage.java
Patch:
@@ -84,7 +84,7 @@ public class HistoryGrepTimeDbDataStorage extends AbstractHistoryDataStorage {
     private GreptimeDB greptimeDb;
 
     public HistoryGrepTimeDbDataStorage(WarehouseProperties properties) {
-        this.serverAvailable = this.initDbSession(properties.getStore().getGreptime());
+        this.serverAvailable = this.initDbSession(properties.store().greptime());
     }
 
     private boolean initDbSession(WarehouseProperties.StoreProperties.GreptimeProperties properties) {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryInfluxdbDataStorage.java
Patch:
@@ -93,7 +93,7 @@ public void initInfluxDb(WarehouseProperties properties) {
         client.sslSocketFactory(defaultSslSocketFactory(), defaultTrustManager());
         client.hostnameVerifier(noopHostnameVerifier());
 
-        WarehouseProperties.StoreProperties.InfluxdbProperties influxdbProperties = properties.getStore().getInfluxdb();
+        WarehouseProperties.StoreProperties.InfluxdbProperties influxdbProperties = properties.store().influxdb();
         this.influxDb = InfluxDBFactory.connect(influxdbProperties.serverUrl(), influxdbProperties.username(), influxdbProperties.password(), client);
         // Close it if your application is terminating, or you are not using it anymore.
         Runtime.getRuntime().addShutdownHook(new Thread(influxDb::close));

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryIotDbDataStorage.java
Patch:
@@ -88,7 +88,7 @@ public class HistoryIotDbDataStorage extends AbstractHistoryDataStorage {
     private long queryTimeoutInMs;
 
     public HistoryIotDbDataStorage(WarehouseProperties properties) {
-        this.serverAvailable = this.initIotDbSession(properties.getStore().getIotDb());
+        this.serverAvailable = this.initIotDbSession(properties.store().iotDb());
     }
 
     private boolean initIotDbSession(WarehouseProperties.StoreProperties.IotDbProperties properties) {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryJpaDatabaseDataStorage.java
Patch:
@@ -64,7 +64,7 @@ public class HistoryJpaDatabaseDataStorage extends AbstractHistoryDataStorage {
 
     public HistoryJpaDatabaseDataStorage(WarehouseProperties properties,
                                          HistoryDao historyDao) {
-        this.jpaProperties = properties.getStore().getJpa();
+        this.jpaProperties = properties.store().jpa();
         this.serverAvailable = true;
         this.historyDao = historyDao;
         expiredDataCleaner();

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -73,12 +73,12 @@ public class HistoryTdEngineDataStorage extends AbstractHistoryDataStorage {
     private final int tableStrColumnDefineMaxLength;
 
     public HistoryTdEngineDataStorage(WarehouseProperties properties) {
-        if (properties == null || properties.getStore() == null || properties.getStore().getTdEngine() == null) {
+        if (properties == null || properties.store() == null || properties.store().tdEngine() == null) {
             log.error("init error, please config Warehouse TdEngine props in application.yml");
             throw new IllegalArgumentException("please config Warehouse TdEngine props");
         }
-        tableStrColumnDefineMaxLength = properties.getStore().getTdEngine().tableStrColumnDefineMaxLength();
-        serverAvailable = initTdEngineDatasource(properties.getStore().getTdEngine());
+        tableStrColumnDefineMaxLength = properties.store().tdEngine().tableStrColumnDefineMaxLength();
+        serverAvailable = initTdEngineDatasource(properties.store().tdEngine());
     }
 
     private boolean initTdEngineDatasource(WarehouseProperties.StoreProperties.TdEngineProperties tdEngineProperties) {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryVictoriaMetricsDataStorage.java
Patch:
@@ -92,12 +92,12 @@ public class HistoryVictoriaMetricsDataStorage extends AbstractHistoryDataStorag
     private final RestTemplate restTemplate;
 
     public HistoryVictoriaMetricsDataStorage(WarehouseProperties properties, RestTemplate restTemplate) {
-        if (properties == null || properties.getStore() == null || properties.getStore().getVictoriaMetrics() == null) {
+        if (properties == null || properties.store() == null || properties.store().victoriaMetrics() == null) {
             log.error("init error, please config Warehouse victoriaMetrics props in application.yml");
             throw new IllegalArgumentException("please config Warehouse victoriaMetrics props");
         }
         this.restTemplate = restTemplate;
-        victoriaMetricsProp = properties.getStore().getVictoriaMetrics();
+        victoriaMetricsProp = properties.store().victoriaMetrics();
         serverAvailable = checkVictoriaMetricsDatasourceAvailable();
     }
 

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/RealTimeMemoryDataStorage.java
Patch:
@@ -46,9 +46,9 @@ public class RealTimeMemoryDataStorage extends AbstractRealTimeDataStorage {
 
     public RealTimeMemoryDataStorage(WarehouseProperties properties) {
         int initSize = DEFAULT_INIT_SIZE;
-        if (properties != null && properties.getStore() != null && properties.getStore().getMemory() != null
-                && properties.getStore().getMemory().initSize() != null) {
-            initSize = properties.getStore().getMemory().initSize();
+        if (properties != null && properties.store() != null && properties.store().memory() != null
+                && properties.store().memory().initSize() != null) {
+            initSize = properties.store().memory().initSize();
         }
         monitorMetricsDataMap = new ConcurrentHashMap<>(initSize);
         this.serverAvailable = true;

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/RealTimeRedisDataStorage.java
Patch:
@@ -55,7 +55,7 @@ public RealTimeRedisDataStorage(WarehouseProperties properties) {
     }
 
     private Integer getRedisSelectDb(WarehouseProperties properties){
-        return properties.getStore().getRedis().db();
+        return properties.store().redis().db();
     }
 
     @Override
@@ -96,11 +96,11 @@ public void saveData(CollectRep.MetricsData metricsData) {
     }
 
     private boolean initRedisClient(WarehouseProperties properties) {
-        if (properties == null || properties.getStore() == null || properties.getStore().getRedis() == null) {
+        if (properties == null || properties.store() == null || properties.store().redis() == null) {
             log.error("init error, please config Warehouse redis props in application.yml");
             return false;
         }
-        WarehouseProperties.StoreProperties.RedisProperties redisProp = properties.getStore().getRedis();
+        WarehouseProperties.StoreProperties.RedisProperties redisProp = properties.store().redis();
         RedisURI.Builder uriBuilder = RedisURI.builder()
                 .withHost(redisProp.host())
                 .withPort(redisProp.port())

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryGrepTimeDbDataStorage.java
Patch:
@@ -72,7 +72,7 @@ public HistoryGrepTimeDbDataStorage(WarehouseProperties properties) {
     }
 
     private boolean initDbSession(WarehouseProperties.StoreProperties.GreptimeProperties properties) {
-        String endpoint = properties.getEndpoint();
+        String endpoint = properties.endpoint();
         GreptimeOptions opts = GreptimeOptions.newBuilder(endpoint)
                 .writeMaxRetries(1)
                 .readMaxRetries(2)

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/HistoryJpaDatabaseDataStorage.java
Patch:
@@ -80,7 +80,7 @@ public void expiredDataCleaner() {
         scheduledExecutor.scheduleAtFixedRate(() -> {
             log.warn("[jpa-metrics-store]-start running expired data cleaner." +
                     "Please use time series db instead of jpa for better performance");
-            String expireTimeStr = jpaProperties.getExpireTime();
+            String expireTimeStr = jpaProperties.expireTime();
             long expireTime = 0;
             try {
                 if (NumberUtils.isParsable(expireTimeStr)) {
@@ -100,8 +100,8 @@ public void expiredDataCleaner() {
                 int rows = historyDao.deleteHistoriesByTimeBefore(expireTime);
                 log.info("[jpa-metrics-store]-delete {} rows.", rows);
                 long total = historyDao.count();
-                if (total > jpaProperties.getMaxHistoryRecordNum()) {
-                    rows = historyDao.deleteOlderHistoriesRecord(jpaProperties.getMaxHistoryRecordNum() / 2);
+                if (total > jpaProperties.maxHistoryRecordNum()) {
+                    rows = historyDao.deleteOlderHistoriesRecord(jpaProperties.maxHistoryRecordNum() / 2);
                     log.warn("[jpa-metrics-store]-force delete {} rows due too many. Please use time series db instead of jpa for better performance.", rows);
                 }
             } catch (Exception e) {

File: warehouse/src/main/java/org/apache/hertzbeat/warehouse/store/RealTimeMemoryDataStorage.java
Patch:
@@ -48,8 +48,8 @@ public class RealTimeMemoryDataStorage extends AbstractRealTimeDataStorage {
     public RealTimeMemoryDataStorage(WarehouseProperties properties) {
         int initSize = DEFAULT_INIT_SIZE;
         if (properties != null && properties.getStore() != null && properties.getStore().getMemory() != null
-                && properties.getStore().getMemory().getInitSize() != null) {
-            initSize = properties.getStore().getMemory().getInitSize();
+                && properties.getStore().getMemory().initSize() != null) {
+            initSize = properties.getStore().getMemory().initSize();
         }
         monitorMetricsDataMap = new ConcurrentHashMap<>(initSize);
         this.serverAvailable = true;

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/CollectorAndJobScheduler.java
Patch:
@@ -426,6 +426,9 @@ public long updateAsyncCollectJob(Job modifyJob, String collector) {
 
     @Override
     public void cancelAsyncCollectJob(Long jobId) {
+        if (jobId == null) {
+            return;
+        }
         for (ConsistentHash.Node node : consistentHash.getAllNodes().values()) {
             AssignJobs assignJobs = node.getAssignJobs();
             if (assignJobs.getPinnedJobs().remove(jobId)

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CacheIdentifier.java
Patch:
@@ -37,13 +37,16 @@ public class CacheIdentifier {
     private String username;
 
     private String password;
+    
+    private String customArg;
 
     @Override
     public String toString() {
         return "CacheIdentifier {" +
                 "ip='" + ip + '\'' +
                 ", port='" + port + '\'' +
                 ", username+password=>hash='" + Objects.hash(username, password) + '\'' +
+                ", customArg='" + customArg + '\'' +
                 '}';
     }
 }

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/redis/RedisCommonCollectImpl.java
Patch:
@@ -298,6 +298,7 @@ private CacheIdentifier doIdentifier(RedisProtocol redisProtocol) {
                 .port(redisProtocol.getPort())
                 .username(redisProtocol.getUsername())
                 .password(redisProtocol.getPassword())
+                .customArg(redisProtocol.getPattern())
                 .build();
     }
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/httpsd/discovery/DiscoveryClient.java
Patch:
@@ -10,7 +10,7 @@
 public interface DiscoveryClient extends AutoCloseable {
     ConnectConfig buildConnectConfig(HttpsdProtocol httpsdProtocol);
 
-    void connect(ConnectConfig connectConfig);
+    void initClient(ConnectConfig connectConfig);
 
     ServerInfo getServerInfo();
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/httpsd/discovery/DiscoveryClientManagement.java
Patch:
@@ -37,7 +37,7 @@ private DiscoveryClient doCreateClient(HttpsdProtocol httpsdProtocol, DiscoveryC
                 return null;
         }
 
-        discoveryClient.connect(discoveryClient.buildConnectConfig(httpsdProtocol));
+        discoveryClient.initClient(discoveryClient.buildConnectConfig(httpsdProtocol));
         return discoveryClient;
     }
 }

File: push/src/main/java/org/dromara/hertzbeat/push/dao/PushMetricsDao.java
Patch:
@@ -29,7 +29,7 @@
 public interface PushMetricsDao extends JpaRepository<PushMetrics, Long> {
     
     PushMetrics findFirstByMonitorIdOrderByTimeDesc(Long monitorId);
-    
-    @Transactional
+
+    @Transactional(rollbackFor = Exception.class)
     void deleteAllByTimeBefore(Long time);
 }

File: common/src/main/java/org/dromara/hertzbeat/common/support/ResourceBundleUtf8Control.java
Patch:
@@ -62,9 +62,7 @@ public ResourceBundle newBundle(String baseName, Locale locale, String format, C
                     throw new ClassCastException(bundleClass.getName()
                             + " cannot be cast to ResourceBundle");
                 }
-            } catch (ClassNotFoundException e) {
-                log.error(e.getMessage(), e);
-            }
+            } catch (ClassNotFoundException ignored) {}
         } else if (JAVA_PROPERTIES.equals(format)) {
             final String resourceName = toResourceName0(bundleName, "properties");
             if (resourceName == null) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/status/CalculateStatus.java
Patch:
@@ -174,7 +174,7 @@ private void startCombineHistory() {
                 // combine pre day status history to one record
                 LocalDateTime nowTime = LocalDateTime.now();
                 ZoneOffset zoneOffset = ZoneId.systemDefault().getRules().getOffset(Instant.now());
-                LocalDateTime midnight = nowTime.withHour(20).withMinute(0).withSecond(0).withNano(0);
+                LocalDateTime midnight = nowTime.withHour(0).withMinute(0).withSecond(0).withNano(0);
                 LocalDateTime preNight = midnight.minusDays(1);
                 long midnightTimestamp = midnight.toInstant(zoneOffset).toEpochMilli();
                 long preNightTimestamp = preNight.toInstant(zoneOffset).toEpochMilli();

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmConvergeReduce.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.alert.dao.AlertConvergeDao;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
-import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.cache.CommonCacheService;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.alerter.AlertConverge;
@@ -60,7 +60,7 @@ public boolean filterConverge(Alert currentAlert) {
             converageAlertMap.remove(alertHash);
             return true;
         }
-        ICacheService<String, Object> convergeCache = CacheFactory.getAlertConvergeCache();
+        CommonCacheService<String, Object> convergeCache = CacheFactory.getAlertConvergeCache();
         List<AlertConverge> alertConvergeList = (List<AlertConverge>) convergeCache.get(CommonConstants.CACHE_ALERT_CONVERGE);
         if (alertConvergeList == null) {
             alertConvergeList = alertConvergeDao.findAll();

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmSilenceReduce.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.RequiredArgsConstructor;
 import org.dromara.hertzbeat.alert.dao.AlertSilenceDao;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
-import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.cache.CommonCacheService;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.alerter.AlertSilence;
@@ -35,7 +35,7 @@ public class AlarmSilenceReduce {
      */
     @SuppressWarnings("unchecked")
     public boolean filterSilence(Alert alert) {
-        ICacheService<String, Object> silenceCache = CacheFactory.getAlertSilenceCache();
+        CommonCacheService<String, Object> silenceCache = CacheFactory.getAlertSilenceCache();
         List<AlertSilence> alertSilenceList = (List<AlertSilence>) silenceCache.get(CommonConstants.CACHE_ALERT_SILENCE);
         if (alertSilenceList == null) {
             alertSilenceList = alertSilenceDao.findAll();

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertConvergeServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import org.dromara.hertzbeat.alert.dao.AlertConvergeDao;
 import org.dromara.hertzbeat.alert.service.AlertConvergeService;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
-import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.cache.CommonCacheService;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.AlertConverge;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -62,7 +62,7 @@ public Page<AlertConverge> getAlertConverges(Specification<AlertConverge> specif
     }
     
     private void clearAlertConvergesCache() {
-        ICacheService<String, Object> convergeCache = CacheFactory.getAlertConvergeCache();
+        CommonCacheService<String, Object> convergeCache = CacheFactory.getAlertConvergeCache();
         convergeCache.remove(CommonConstants.CACHE_ALERT_CONVERGE);
     }
 }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertSilenceServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import org.dromara.hertzbeat.alert.dao.AlertSilenceDao;
 import org.dromara.hertzbeat.alert.service.AlertSilenceService;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
-import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.cache.CommonCacheService;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.AlertSilence;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -68,7 +68,7 @@ public Page<AlertSilence> getAlertSilences(Specification<AlertSilence> specifica
     }
 
     private void clearAlertSilencesCache() {
-        ICacheService<String, Object> silenceCache = CacheFactory.getAlertSilenceCache();
+        CommonCacheService<String, Object> silenceCache = CacheFactory.getAlertSilenceCache();
         silenceCache.remove(CommonConstants.CACHE_ALERT_SILENCE);
     }
 }

File: common/src/main/java/org/dromara/hertzbeat/common/cache/CaffeineCacheServiceImpl.java
Patch:
@@ -26,7 +26,7 @@
  * caffeine cache impl
  *
  */
-public class CaffeineCacheServiceImpl<K, V> implements ICacheService<K, V> {
+public class CaffeineCacheServiceImpl<K, V> implements CommonCacheService<K, V> {
     private final Cache<K, V> cache;
 
     public CaffeineCacheServiceImpl(final int initialCapacity, final long maximumSize, final Duration expireAfterWrite, final boolean useWeakKey) {

File: common/src/main/java/org/dromara/hertzbeat/common/cache/CommonCacheService.java
Patch:
@@ -21,7 +21,7 @@
  * common cache service
  *
  */
-public interface ICacheService<K, V> {
+public interface CommonCacheService<K, V> {
 
     /**
      * get cache by key use clazz

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/Metrics.java
Patch:
@@ -283,6 +283,9 @@ public int hashCode() {
         return Objects.hash(name);
     }
 
+    /**
+     * Metrics.Field
+     */
     @Data
     @AllArgsConstructor
     @NoArgsConstructor

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/Pop3Protocol.java
Patch:
@@ -6,6 +6,9 @@
 import lombok.NoArgsConstructor;
 import org.apache.commons.lang3.StringUtils;
 
+/**
+ * pop3 protocol
+ */
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonByteListAttributeConverter.java
Patch:
@@ -22,7 +22,6 @@
 
 import javax.persistence.AttributeConverter;
 import java.util.List;
-import java.util.Map;
 
 /**
  * json str to list Byte converter

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/NoticeReceiver.java
Patch:
@@ -65,7 +65,8 @@ public class NoticeReceiver {
     @NotNull
     private String name;
 
-    @Schema(title = "Notification information method: 0-SMS 1-Email 2-webhook 3-WeChat Official Account 4-Enterprise WeChat Robot 5-DingTalk Robot 6-FeiShu Robot 7-Telegram Bot 8-SlackWebHook 9-Discord Bot 10-Enterprise WeChat app message",
+    @Schema(title = "Notification information method: 0-SMS 1-Email 2-webhook 3-WeChat Official Account 4-Enterprise WeChat Robot " +
+            "5-DingTalk Robot 6-FeiShu Robot 7-Telegram Bot 8-SlackWebHook 9-Discord Bot 10-Enterprise WeChat app message",
             description = "通知信息方式: 0-手机短信 1-邮箱 2-webhook 3-微信公众号 4-企业微信机器人 5-钉钉机器人 6-飞书机器人 7-Telegram机器人 8-SlackWebHook 9-Discord机器人 10-企业微信-应用消息",
             accessMode = READ_WRITE)
     @Min(0)

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/NoticeTemplate.java
Patch:
@@ -67,7 +67,8 @@ public class NoticeTemplate {
     @NotBlank
     private String name;
 
-    @Schema(title = "Notification information method: 0-SMS 1-Email 2-webhook 3-WeChat Official Account 4-Enterprise WeChat Robot 5-DingTalk Robot 6-FeiShu Robot 7-Telegram Bot 8-SlackWebHook 9-Discord Bot 10-Enterprise WeChat app message",
+    @Schema(title = "Notification information method: 0-SMS 1-Email 2-webhook 3-WeChat Official Account 4-Enterprise WeChat Robot " +
+            "5-DingTalk Robot 6-FeiShu Robot 7-Telegram Bot 8-SlackWebHook 9-Discord Bot 10-Enterprise WeChat app message",
             description = "通知信息方式: 0-手机短信 1-邮箱 2-webhook 3-微信公众号 4-企业微信机器人 5-钉钉机器人 6-飞书机器人 7-Telegram机器人 8-SlackWebHook 9-Discord机器人 10-企业微信-应用消息",
             accessMode = READ_WRITE)
     @Min(0)

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/Param.java
Patch:
@@ -28,7 +28,6 @@
 import org.springframework.data.jpa.domain.support.AuditingEntityListener;
 
 import javax.persistence.*;
-import javax.validation.constraints.Max;
 import javax.validation.constraints.Min;
 import javax.validation.constraints.NotNull;
 import java.time.LocalDateTime;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/ParamDefine.java
Patch:
@@ -194,6 +194,9 @@ public class ParamDefine {
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 
+    /**
+     * Parameter option configuration
+     */
     @Data
     @AllArgsConstructor
     @NoArgsConstructor

File: common/src/main/java/org/dromara/hertzbeat/common/entity/push/PushMetricsDto.java
Patch:
@@ -25,6 +25,9 @@ public PushMetricsDto() {
         metricsList = new ArrayList<>();
     }
 
+    /**
+     * metrics
+     */
     @Data
     @Builder
     @AllArgsConstructor

File: common/src/main/java/org/dromara/hertzbeat/common/service/TencentSmsClient.java
Patch:
@@ -51,7 +51,6 @@ private void initSmsClient(CommonProperties.TencentSmsProperties tencent) {
      * @param templateId template id
      * @param templateValues template values
      * @param phones phones num
-     * @return true when send success
      */
     public void sendMessage(String appId, String signName, String templateId,
                             String[] templateValues, String[] phones) {
@@ -77,7 +76,6 @@ public void sendMessage(String appId, String signName, String templateId,
      * 发送短信
      * @param templateValues template values
      * @param phones phones num
-     * @return true when send success
      */
     public void sendMessage(String[] templateValues, String[] phones) {
         sendMessage(this.appId, this.signName, this.templateId, templateValues, phones);

File: common/src/main/java/org/dromara/hertzbeat/common/support/SpringContextHolder.java
Patch:
@@ -57,9 +57,9 @@ public static <T> T getBean(String beanName) {
         return (T) applicationContext.getBean(beanName);
     }
 
-    public static <T> T getBean(Class<T> tClass) {
+    public static <T> T getBean(Class<T> clazz) {
         assertApplicationContext();
-        return (T) applicationContext.getBean(tClass);
+        return (T) applicationContext.getBean(clazz);
     }
     
     public static void shutdown() {

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostParamValidator.java
Patch:
@@ -36,10 +36,10 @@ public class HostParamValidator implements ConstraintValidator<HostValid, String
 
     @Override
     public boolean isValid(String value, ConstraintValidatorContext context) {
-        if(value != null && value.toLowerCase().contains(HTTP)){
+        if (value != null && value.toLowerCase().contains(HTTP)){
             value = value.replaceAll(PATTERN_HTTP, BLANK);
         }
-        if(value != null && value.toLowerCase().contains(HTTPS)){
+        if (value != null && value.toLowerCase().contains(HTTPS)){
             value = value.replace(PATTERN_HTTPS, BLANK);
         }
         return IpDomainUtil.validateIpDomain(value);

File: common/src/test/java/org/dromara/hertzbeat/common/cache/CaffeineCacheTest.java
Patch:
@@ -11,7 +11,7 @@
  *
  */
 class CaffeineCacheTest {
-    private ICacheService<String, String> cacheService;
+    private CommonCacheService<String, String> cacheService;
 
     @BeforeEach
     void setUp() {

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/NoticeConfigServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
-import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.cache.CommonCacheService;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
@@ -134,7 +134,7 @@ public void deleteNoticeRule(Long ruleId) {
     @SuppressWarnings("unchecked")
     public List<NoticeRule> getReceiverFilterRule(Alert alert) {
         // use cache
-        ICacheService<String, Object> noticeCache = CacheFactory.getNoticeCache();
+        CommonCacheService<String, Object> noticeCache = CacheFactory.getNoticeCache();
         List<NoticeRule> rules = (List<NoticeRule>) noticeCache.get(CommonConstants.CACHE_NOTICE_RULE);
         if (rules == null) {
             rules = noticeRuleDao.findNoticeRulesByEnableTrue();
@@ -264,7 +264,7 @@ public boolean sendTestMsg(NoticeReceiver noticeReceiver) {
     }
 
     private void clearNoticeRulesCache() {
-        ICacheService<String, Object> noticeCache = CacheFactory.getNoticeCache();
+        CommonCacheService<String, Object> noticeCache = CacheFactory.getNoticeCache();
         noticeCache.remove(CommonConstants.CACHE_NOTICE_RULE);
     }
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/MongodbConnect.java
Patch:
@@ -25,6 +25,7 @@ public void close() {
             log.error("[connection common cache] close mongodb connect error: {}", e.getMessage());
         }
     }
+
     public MongoClient getMongoClient() {
         return mongoClient;
     }

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/http/CommonHttpClient.java
Patch:
@@ -87,14 +87,15 @@ public class CommonHttpClient {
     /**
      * ssl supported version
      */
-    private static final String[] SUPPORTED_SSL = {"TLSv1","TLSv1.1","TLSv1.2","SSLv3"};
+    private static final String[] SUPPORTED_SSL = {"TLSv1", "TLSv1.1", "TLSv1.2", "SSLv3"};
 
     static {
         try {
             SSLContext sslContext = SSLContexts.createDefault();
             X509TrustManager x509TrustManager = new X509TrustManager() {
                 @Override
                 public void checkClientTrusted(X509Certificate[] x509Certificates, String s) { }
+
                 @Override
                 public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
                     // check server ssl certificate expired
@@ -108,6 +109,7 @@ public void checkServerTrusted(X509Certificate[] x509Certificates, String s) thr
                         }
                     }
                 }
+
                 @Override
                 public X509Certificate[] getAcceptedIssuers() { return null; }
             };

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/ssh/CommonSshClient.java
Patch:
@@ -7,10 +7,8 @@
 import org.apache.sshd.common.NamedFactory;
 import org.apache.sshd.common.PropertyResolverUtils;
 import org.apache.sshd.common.kex.BuiltinDHFactories;
-import org.apache.sshd.common.signature.BuiltinSignatures;
 import org.apache.sshd.core.CoreModuleProperties;
 
-import java.util.ArrayList;
 
 /**
  * common ssh pool client

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -134,7 +134,7 @@ public String supportProtocol() {
     }
 
 
-    private Statement getConnection(String username, String password, String url,Integer timeout) throws Exception {
+    private Statement getConnection(String username, String password, String url, Integer timeout) throws Exception {
         CacheIdentifier identifier = CacheIdentifier.builder()
                 .ip(url)
                 .username(username).password(password).build();

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/ftp/FtpCollectImpl.java
Patch:
@@ -96,14 +96,14 @@ private Map<String, String> collectValue(FTPClient ftpClient, FtpProtocol ftpPro
     private void login(FTPClient ftpClient, FtpProtocol ftpProtocol) {
         try {
             // username: not empty, password: not empty
-            if(StringUtils.hasText(ftpProtocol.getUsername()) && StringUtils.hasText(ftpProtocol.getPassword())) {
-                if(!ftpClient.login(ftpProtocol.getUsername(), ftpProtocol.getPassword())) {
+            if (StringUtils.hasText(ftpProtocol.getUsername()) && StringUtils.hasText(ftpProtocol.getPassword())) {
+                if (!ftpClient.login(ftpProtocol.getUsername(), ftpProtocol.getPassword())) {
                     throw new IllegalArgumentException("The username or password may be wrong.");
                 }
                 return;
             }
             // anonymous access
-            if(!ftpClient.login(ANONYMOUS, PASSWORD)) {
+            if (!ftpClient.login(ANONYMOUS, PASSWORD)) {
                 throw new IllegalArgumentException("The server may not allow anonymous access, we need to username and password.");
             }
         } catch (Exception e) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/SslCertificateCollectImpl.java
Patch:
@@ -79,7 +79,7 @@ public void collect(CollectRep.MetricsData.Builder builder,
             } else {
                 uri = "https://" + httpProtocol.getHost() + ":" + httpProtocol.getPort();
             }
-            urlConnection = (HttpsURLConnection)new URL(uri).openConnection();
+            urlConnection = (HttpsURLConnection) new URL(uri).openConnection();
             urlConnection.connect();
             Certificate[] certificates = urlConnection.getServerCertificates();
             if (certificates == null || certificates.length == 0) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusLastParser.java
Patch:
@@ -17,8 +17,8 @@
 public class PrometheusLastParser extends AbstractPrometheusParse {
     @Override
     public Boolean checkType(String responseStr) {
-        log.error("prometheus response data:{} ,no adaptive parser",responseStr);
-       return true;
+        log.error("prometheus response data:{} ,no adaptive parser", responseStr);
+        return true;
     }
 
     @Override

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusMatrixParser.java
Patch:
@@ -24,7 +24,7 @@ public class PrometheusMatrixParser extends AbstractPrometheusParse {
     public Boolean checkType(String responseStr) {
         try {
             PromVectorOrMatrix promVectorOrMatrix = JsonUtil.fromJson(responseStr, PromVectorOrMatrix.class);
-            if(promVectorOrMatrix != null && promVectorOrMatrix.getData() != null) {
+            if (promVectorOrMatrix != null && promVectorOrMatrix.getData() != null) {
                 return DispatchConstants.PARSE_PROM_QL_MATRIX.equals(promVectorOrMatrix.getData().getResultType());
             }
             return false;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusParseCreater.java
Patch:
@@ -16,6 +16,7 @@ public class PrometheusParseCreater implements InitializingBean {
     private static void create() {
         PROMETHEUSPARSE.setInstance(new PrometheusMatrixParser().setInstance(new PrometheusLastParser()));
     }
+
     public static AbstractPrometheusParse getPrometheusParse(){
         return PROMETHEUSPARSE;
     }

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/jmx/JmxCollectImpl.java
Patch:
@@ -118,7 +118,7 @@ private Map<String, String> extractAttributeValue(AttributeList attributeList) {
             } else if (value instanceof String[]) {
                 String[] values = (String[]) value;
                 StringBuilder builder = new StringBuilder();
-                for (int index = 0; index < values.length; index ++) {
+                for (int index = 0; index < values.length; index++) {
                     builder.append(values[index]);
                     if (index < values.length - 1) {
                         builder.append(",");

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/memcached/MemcachedCollectImpl.java
Patch:
@@ -60,8 +60,8 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
                 BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                 // 发送统计命令
                 Map<String, String> resultMap = new HashMap<>(128);
-                parseCMDResponse(resultMap, in, out, STATS);
-                parseCMDResponse(resultMap, in, out, STATS_SETTINGS);
+                parseCmdResponse(resultMap, in, out, STATS);
+                parseCmdResponse(resultMap, in, out, STATS_SETTINGS);
                 parseSizesOutput(resultMap, in, out);
 
                 resultMap.put(CollectorConstants.RESPONSE_TIME, Long.toString(responseTime));
@@ -107,7 +107,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
         }
     }
 
-    private static void parseCMDResponse(Map<String, String> statsMap,
+    private static void parseCmdResponse(Map<String, String> statsMap,
                                          BufferedReader in,
                                          PrintWriter out,
                                          String cmd) throws IOException {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/mq/RocketmqSingleCollectImpl.java
Patch:
@@ -27,7 +27,6 @@
 import org.dromara.hertzbeat.common.entity.job.protocol.RocketmqProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
 import org.dromara.hertzbeat.common.util.CommonUtil;
-import org.jetbrains.annotations.NotNull;
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.util.Assert;
 
@@ -44,7 +43,6 @@
 import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicLong;
 import java.util.stream.Collectors;
 
 /**

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/ntp/NtpCollectImpl.java
Patch:
@@ -59,7 +59,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
             timeInfo.computeDetails();
 
             // 获取ntp服务器信息
-            Map<String, String> resultMap = getNTPInfo(timeInfo);
+            Map<String, String> resultMap = getNtpInfo(timeInfo);
             resultMap.put(CollectorConstants.RESPONSE_TIME, Long.toString(responseTime));
 
             List<String> aliasFields = metrics.getAliasFields();
@@ -101,7 +101,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
         }
     }
 
-    private Map<String, String> getNTPInfo(TimeInfo timeInfo) {
+    private Map<String, String> getNtpInfo(TimeInfo timeInfo) {
         Map<String, String> valueMap = new HashMap<>(16);
 
         TimeStamp timeStamp = timeInfo.getMessage().getTransmitTimeStamp();

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/redis/RedisCommonCollectImpl.java
Patch:
@@ -92,7 +92,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
     private Map<String, String> getSingleRedisInfo(Metrics metrics) {
         StatefulRedisConnection<String, String> connection = getSingleConnection(metrics.getRedis());
         String info = connection.sync().info(metrics.getName());
-        Map<String, String> valueMap = parseInfo(info ,metrics);
+        Map<String, String> valueMap = parseInfo(info, metrics);
         if (log.isDebugEnabled()) {
             log.debug("[RedisSingleCollectImpl] fetch redis info");
             valueMap.forEach((k, v) -> log.debug("{} : {}", k, v));

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/websocket/WebsocketCollectImpl.java
Patch:
@@ -45,9 +45,9 @@ public void collect(CollectRep.MetricsData.Builder builder, long monitorId, Stri
             builder.setMsg("Websocket collect must has Websocket params");
             return;
         }
-        WebsocketProtocol WebsocketProtocol = metrics.getWebsocket();
-        String host = WebsocketProtocol.getHost();
-        String port = WebsocketProtocol.getPort();
+        WebsocketProtocol websocketProtocol = metrics.getWebsocket();
+        String host = websocketProtocol.getHost();
+        String port = websocketProtocol.getPort();
         Socket socket = null;
         try {
             socket = new Socket();

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/entrance/CollectServer.java
Patch:
@@ -99,6 +99,9 @@ public void run(String... args) throws Exception {
         this.remotingClient.start();
     }
 
+    /**
+     * CollectNettyEventListener
+     */
     public class CollectNettyEventListener implements NettyEventListener {
 
         @Override

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/HashedWheelTimer.java
Patch:
@@ -24,7 +24,6 @@
 
 import java.util.Collections;
 import java.util.HashSet;
-import java.util.Locale;
 import java.util.Queue;
 import java.util.Set;
 import java.util.concurrent.CountDownLatch;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/AlerterProperties.java
Patch:
@@ -88,6 +88,9 @@ public static class EntranceProperties {
          */
         private KafkaProperties kafka;
 
+        /**
+         * kafka configuration information
+         */
         @Getter
         @Setter
         public static class KafkaProperties {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -348,7 +348,7 @@ private void handlerAvailableMetrics(long monitorId, String app, CollectRep.Metr
             return;
         }
         long currentTimeMill = System.currentTimeMillis();
-        if (metricsData.getCode() != CollectRep.Code.SUCCESS ) {
+        if (metricsData.getCode() != CollectRep.Code.SUCCESS) {
             Alert preAlert = triggeredAlertMap.get(String.valueOf(monitorId));
             Map<String, String> tags = new HashMap<>(6);
             tags.put(CommonConstants.TAG_MONITOR_ID, String.valueOf(monitorId));

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertSilencesController.java
Patch:
@@ -86,7 +86,7 @@ public ResponseEntity<Message<Page<AlertSilence>>> getAlertSilences(
         };
         Sort sortExp = Sort.by(new Sort.Order(Sort.Direction.fromString(order), sort));
         PageRequest pageRequest = PageRequest.of(pageIndex, pageSize, sortExp);
-        Page<AlertSilence> alertSilencePage = alertSilenceService.getAlertSilences(specification,pageRequest);
+        Page<AlertSilence> alertSilencePage = alertSilenceService.getAlertSilences(specification, pageRequest);
         Message<Page<AlertSilence>> message = Message.success(alertSilencePage);
         return ResponseEntity.ok(message);
     }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertDefineServiceImpl.java
Patch:
@@ -124,7 +124,8 @@ public Map<String, List<AlertDefine>> getMonitorBindAlertDefines(long monitorId,
         List<AlertDefine> defaultDefines = alertDefineDao.queryAlertDefinesByAppAndMetricAndPresetTrueAndEnableTrue(app, metrics);
         defines.addAll(defaultDefines);
         Set<AlertDefine> defineSet = defines.stream().filter(item -> item.getField() != null).collect(Collectors.toSet());
-        // The alarm thresholds are defined in ascending order of the alarm severity from 0 to 3. The lower the number, the higher the alarm is. That is, the alarm is calculated from the highest alarm threshold
+        // The alarm thresholds are defined in ascending order of the alarm severity from 0 to 3.
+        // The lower the number, the higher the alarm is. That is, the alarm is calculated from the highest alarm threshold
         // 将告警阈值定义从告警级别0-3数字升序排序，数字越小告警基本越高，即从最高的告警阈值开始匹配计算
         return defineSet.stream().sorted(Comparator.comparing(AlertDefine::getPriority))
                 .collect(Collectors.groupingBy(AlertDefine::getField));

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertServiceImpl.java
Patch:
@@ -144,12 +144,12 @@ public List<Alert> getAlerts(Specification<Alert> specification) {
     private Alert buildAlertData(AlertReport alertReport){
         Map<String, String> annotations = alertReport.getAnnotations();
         StringBuilder sb = new StringBuilder();
-        if(alertReport.getContent() == null || alertReport.getContent().length() <= 0){
+        if (alertReport.getContent() == null || alertReport.getContent().length() <= 0){
             StringBuilder finalSb = sb;
             annotations.forEach((k, v) -> {
                 finalSb.append(k).append(":").append(v).append("\n");
             });
-        }else{
+        }else {
             sb = new StringBuilder(alertReport.getContent());
         }
         LocalDateTime dateTime = LocalDateTime.ofInstant(Instant.ofEpochMilli(alertReport.getAlertTime()), 

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryGrepTimeDbDataStorage.java
Patch:
@@ -63,7 +63,8 @@ public class HistoryGrepTimeDbDataStorage extends AbstractHistoryDataStorage {
     private static final String QUERY_INSTANCE_SQL
             = "SELECT DISTINCT instance FROM %s WHERE ts >= now() - interval '1' WEEK";
     private static final String QUERY_HISTORY_INTERVAL_WITH_INSTANCE_SQL
-            = "SELECT first, avg ,max, min FROM (SELECT \"%s\" as first FROM %s WHERE monitor_id = %s and ts >= %s and ts < %s ORDER BY ts LIMIT 1) LEFT JOIN (SELECT avg(\"%s\") as avg, min(\"%s\") as min, max(\"%s\") as max FROM %s WHERE ts >= %s and ts < %s) ON 1=1";
+            = "SELECT first, avg ,max, min FROM (SELECT \"%s\" as first FROM %s WHERE monitor_id = %s and ts >= %s" +
+            " and ts < %s ORDER BY ts LIMIT 1) LEFT JOIN (SELECT avg(\"%s\") as avg, min(\"%s\") as min, max(\"%s\") as max FROM %s WHERE ts >= %s and ts < %s) ON 1=1";
     private static final String TABLE_NOT_EXIST = "not exist";
     private static final String DATABASE_NOT_EXIST = "not exist";
     private GreptimeDB greptimeDb;

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/RealTimeRedisDataStorage.java
Patch:
@@ -56,9 +56,11 @@ public RealTimeRedisDataStorage(WarehouseProperties properties) {
         this.serverAvailable = initRedisClient(properties);
         this.db = getRedisSelectDb(properties);
     }
+
     private Integer getRedisSelectDb(WarehouseProperties properties){
         return properties.getStore().getRedis().getDb();
     }
+
     @Override
     public CollectRep.MetricsData getCurrentMetricsData(@NonNull Long monitorId, @NonNull String metric) {
         RedisCommands<String, CollectRep.MetricsData> commands = connection.sync();

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertReportController.java
Patch:
@@ -48,6 +48,7 @@ public ResponseEntity<Message<Void>> addNewAlertReportFromCloud(@PathVariable("c
                 CloudAlertReportAbstract cloudAlertReport = JsonUtil
                         .fromJson(alertReport, cloudService.getCloudServiceAlarmInformationEntity());
                 // 模板填充
+                assert cloudAlertReport != null;
                 alert = AlertReport.builder()
                         .content(cloudAlertReport.getContent())
                         .alertName(cloudAlertReport.getAlertName())

File: manager/src/main/java/org/dromara/hertzbeat/manager/Manager.java
Patch:
@@ -27,7 +27,7 @@
 import javax.annotation.PostConstruct;
 
 /**
- *
+ * start up class.
  *
  */
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/GlobalExceptionHandler.java
Patch:
@@ -257,7 +257,7 @@ ResponseEntity<Message<Void>> handleUnknownException(Exception exception) {
      * 处理监控指标传参异常
      *
      * @param exception 指标参数异常
-     * @return
+     * @return response
      */
     @ExceptionHandler(MonitorMetricsException.class)
     @ResponseBody

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/AbstractAlertNotifyHandlerImpl.java
Patch:
@@ -84,7 +84,6 @@ protected String renderContent(NoticeTemplate noticeTemplate, Alert alert) throw
                 model.put("thresholdId", thresholdId);
             }
         }
-        
         model.put("alarmId", alert.getId());
         model.put("status", alert.getStatus());
         model.put("monitorIdLabel", bundle.getString("alerter.notify.monitorId"));
@@ -127,7 +126,6 @@ public void onEvent(SystemConfigChangeEvent event) {
         log.info("{} receive system config change event: {}.", this.getClass().getName(), event.getSource());
         this.bundle = ResourceBundleUtil.getBundle("alerter");
     }
-
 }
 
 

File: manager/src/test/java/org/dromara/hertzbeat/manager/service/NoticeConfigServiceTest.java
Patch:
@@ -1,7 +1,6 @@
 package org.dromara.hertzbeat.manager.service;
 
 import com.google.common.collect.Lists;
-import com.google.common.collect.Sets;
 import org.assertj.core.util.Maps;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
@@ -23,7 +22,6 @@
 
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.mockito.ArgumentMatchers.any;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -132,6 +132,9 @@ private void calculate(CollectRep.MetricsData metricsData) {
         long currentTimeMilli = System.currentTimeMillis();
         long monitorId = metricsData.getId();
         String app = metricsData.getApp();
+        if (app.startsWith(CommonConstants.PROMETHEUS_APP_PREFIX)) {
+            app = CommonConstants.PROMETHEUS;
+        }
         String metrics = metricsData.getMetrics();
         // If the metrics whose scheduling priority is 0 has the status of collecting response data UN_REACHABLE/UN_CONNECTABLE,
         // the highest severity alarm is generated to monitor the status change

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/CommonDispatcher.java
Patch:
@@ -126,6 +126,7 @@ public void start() {
                         log.error("[Dispatcher]-{}.", e.getMessage(), e);
                     }
                 }
+                log.info("Thread Interrupted, Shutdown the [metrics-task-dispatcher]");
             });
             // monitoring metrics collection task execution timeout
             ThreadFactory threadFactory = new ThreadFactoryBuilder()
@@ -178,7 +179,7 @@ public void dispatchMetricsTask(Timeout timeout) {
         job.constructPriorMetrics();
         Set<Metrics> metricsSet = job.getNextCollectMetrics(null, true);
         metricsSet.forEach(metrics -> {
-            MetricsCollect metricsCollect = new MetricsCollect(metrics, timeout, this, 
+            MetricsCollect metricsCollect = new MetricsCollect(metrics, timeout, this,
                     collectorIdentity, unitConvertList);
             jobRequestQueue.addJob(metricsCollect);
             if (metrics.getPrometheus() != null) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/WorkerPool.java
Patch:
@@ -45,14 +45,14 @@ private void initWorkExecutor() {
         // thread factory
         ThreadFactory threadFactory = new ThreadFactoryBuilder()
                 .setUncaughtExceptionHandler((thread, throwable) -> {
-                    log.error("workerExecutor has uncaughtException.");
-                    log.error(throwable.getMessage(), throwable);
+                    log.error("[Important] WorkerPool workerExecutor has uncaughtException.", throwable);
+                    log.error("Thread Name {} : {}", thread.getName(), throwable.getMessage(), throwable);
                 })
                 .setDaemon(true)
                 .setNameFormat("collect-worker-%d")
                 .build();
         workerExecutor = new ThreadPoolExecutor(100,
-                800,
+                1024,
                 10,
                 TimeUnit.SECONDS,
                 new SynchronousQueue<>(),

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -112,9 +112,7 @@ public void collect(CollectRep.MetricsData.Builder builder,
         }
         HttpContext httpContext = createHttpContext(metrics.getHttp());
         HttpUriRequest request = createHttpRequest(metrics.getHttp());
-        try {
-            CloseableHttpResponse response = CommonHttpClient.getHttpClient()
-                                                     .execute(request, httpContext);
+        try (CloseableHttpResponse response = CommonHttpClient.getHttpClient().execute(request, httpContext)) {
             int statusCode = response.getStatusLine().getStatusCode();
             boolean isSuccessInvoke = checkSuccessInvoke(metrics, statusCode);
             log.debug("http response status: {}", statusCode);

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/SnmpProtocol.java
Patch:
@@ -81,7 +81,7 @@ public class SnmpProtocol {
     /**
      * contextName
      */
-    private String contextName = "";
+    private String contextName;
 
     /**
      * authPasswordEncryption

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryVictoriaMetricsDataStorage.java
Patch:
@@ -221,6 +221,8 @@ public Map<String, List<Value>> getHistoryMetricData(Long monitorId, String app,
             HttpEntity<Void> httpEntity = new HttpEntity<>(headers);
             URI uri = UriComponentsBuilder.fromHttpUrl(victoriaMetricsProp.getUrl() + EXPORT_PATH)
                     .queryParam(URLEncoder.encode("match[]", StandardCharsets.UTF_8), URLEncoder.encode("{" + timeSeriesSelector + "}", StandardCharsets.UTF_8))
+                    .queryParam("start", URLEncoder.encode("now-" + history, StandardCharsets.UTF_8))
+                    .queryParam("end", "now")
                     .build(true).toUri();
             ResponseEntity<String> responseEntity = restTemplate.exchange(uri,
                     HttpMethod.GET, httpEntity, String.class);

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -652,7 +652,6 @@ public void cancelManageMonitors(HashSet<Long> ids) {
         if (!managedMonitors.isEmpty()) {
             for (Monitor monitor : managedMonitors) {
                 collectJobScheduling.cancelAsyncCollectJob(monitor.getJobId());
-                monitor.setJobId(null);
             }
             monitorDao.saveAll(managedMonitors);
         }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertDefineDao.java
Patch:
@@ -51,10 +51,9 @@ public interface AlertDefineDao extends JpaRepository<AlertDefine, Long>, JpaSpe
      * Query app metric alert define
      * @param app app
      * @param metric metric
-     * @param field field
      * @return alert define
      */
-    List<AlertDefine> queryAlertDefineByAppAndMetricAndField(String app, String metric, String field);
+    List<AlertDefine> queryAlertDefineByAppAndMetric(String app, String metric);
 
     /**
      * Query the alarm definition list associated with the monitoring ID

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -34,7 +34,7 @@ public void run(String... args) throws Exception {
 		Set<String> apps = appService.getAllAppDefines().keySet();
 		for (String app : apps) {
 			try {
-				List<AlertDefine> defines = alertDefineDao.queryAlertDefineByAppAndMetricAndField(app, CommonConstants.AVAILABILITY, null);
+				List<AlertDefine> defines = alertDefineDao.queryAlertDefineByAppAndMetric(app, CommonConstants.AVAILABILITY);
 				if (defines.isEmpty()) {
 					AlertDefine alertDefine = AlertDefine.builder()
 							.app(app)

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -315,7 +315,7 @@ private boolean execAlertExpression(Map<String, Object> fieldValueMap, String ex
         } catch (Exception e) {
             log.error("Alert Define Rule: {} Run Error: {}.", e, e.getMessage());
         }
-        return match;
+        return match != null && match;
     }
 
     private void handlerAvailableMetrics(long monitorId, String app, CollectRep.MetricsData metricsData) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/entrance/processor/GoCloseProcessor.java
Patch:
@@ -29,7 +29,7 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
             this.timerDispatch = SpringContextHolder.getBean(TimerDispatch.class);
         }
         if (message.getMsg().contains(CommonConstants.COLLECTOR_AUTH_FAILED)) {
-            log.error("receive client auth failed message and go close. {}", message.getMsg());
+            log.error("[Auth Failed]receive client auth failed message and go close. {}", message.getMsg());
         }
         this.timerDispatch.goOffline();
         this.collectServer.shutdown();

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/entrance/processor/GoOfflineProcessor.java
Patch:
@@ -26,7 +26,7 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
         log.info("receive offline message and handle success");
         message.getMsg();
         if (message.getMsg().contains(CommonConstants.COLLECTOR_AUTH_FAILED)) {
-            log.error("receive client auth failed message and go offline. {}", message.getMsg());
+            log.error("[Auth Failed]receive client auth failed message and go offline. {}", message.getMsg());
             return null;
         }
         return ClusterMsg.Message.newBuilder()

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/SchedulerInit.java
Patch:
@@ -73,7 +73,7 @@ public void run(String... args) throws Exception {
                                               .build();
         collectorScheduling.collectorGoOnline(CommonConstants.MAIN_COLLECTOR_NODE, collectorInfo);
         // init jobs
-        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndAndJobIdNotNull(Arrays.asList((byte) 0, (byte) 4));
+        List<Monitor> monitors = monitorDao.findMonitorsByStatusNotInAndAndJobIdNotNull(List.of((byte) 0));
         List<CollectorMonitorBind> monitorBinds = collectorMonitorBindDao.findAll();
         Map<Long, String> monitorIdCollectorMap = monitorBinds.stream().collect(
                 Collectors.toMap(CollectorMonitorBind::getMonitorId, CollectorMonitorBind::getCollector));

File: alerter/src/main/java/org/dromara/hertzbeat/alert/config/AlerterAutoConfiguration.java
Patch:
@@ -22,7 +22,6 @@
 /**
  *
  * @version 2.1
- * Created by Musk.Chen on 2023/1/14
  */
 @ComponentScan(basePackages = "org.dromara.hertzbeat.alert")
 public class AlerterAutoConfiguration {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertConvergeController.java
Patch:
@@ -34,8 +34,6 @@
 
 /**
  * Alarm Converge management API
- * 告警收敛管理API
- *
  *
  */
 @Tag(name = "Alert Converge API | 告警收敛管理API")

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertConvergesController.java
Patch:
@@ -42,8 +42,6 @@
 
 /**
  * Converge the batch API for alarms
- * 收敛告警批量API
- *
  *
  */
 @Tag(name = "Alert Converge Batch API | 告警收敛管理API")

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertDefinesController.java
Patch:
@@ -46,8 +46,6 @@
 
 /**
  * Define the batch API for alarms
- * 告警定义批量API
- *
  *
  */
 @Tag(name = "Alert Define Batch API | 告警定义管理API")
@@ -111,7 +109,6 @@ public ResponseEntity<Message<Page<AlertDefine>>> getAlertDefines(
             Predicate[] predicates = new Predicate[andList.size()];
             return criteriaBuilder.and(andList.toArray(predicates));
         };
-        // 分页是必须的
         Sort sortExp = Sort.by(new Sort.Order(Sort.Direction.fromString(order), sort));
         PageRequest pageRequest = PageRequest.of(pageIndex, pageSize, sortExp);
         Page<AlertDefine> alertDefinePage = alertDefineService.getAlertDefines(specification, pageRequest);

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertReportController.java
Patch:
@@ -20,8 +20,8 @@
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
 
 /**
+ * Extern Alarm Manage API
  *
- * 第三方告警上报接口
  */
 @Tag(name = "Extern Alarm Manage API | 第三方告警管理API")
 @RestController
@@ -33,8 +33,7 @@ public class AlertReportController {
     private AlertService alertService;
 
     @PostMapping("/{cloud}")
-    @Operation(summary = "Interface for reporting external alarm information of cloud service ｜ 对外上报告警信息 接口",
-            description = "对外 新增一个云服务告警")
+    @Operation(summary = "Interface for reporting external alarm information of cloud service ｜ 对外上报告警信息接口")
     public ResponseEntity<Message<Void>> addNewAlertReportFromCloud(@PathVariable("cloud") String cloudServiceName,
                                                                     @RequestBody String alertReport) {
         // 根据枚举获取到对应的枚举对象

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertSilenceController.java
Patch:
@@ -35,8 +35,6 @@
 
 /**
  * Alarm Silence management API
- * 告警静默管理API
- *
  *
  */
 @Tag(name = "Alert Silence API | 告警静默管理API")

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertSilencesController.java
Patch:
@@ -42,8 +42,6 @@
 
 /**
  * Silence the batch API for alarms
- * 静默告警批量API
- *
  *
  */
 @Tag(name = "Alert Silence Batch API | 告警静默管理API")

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertsController.java
Patch:
@@ -41,9 +41,7 @@
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
 
 /**
- * Alarm Management API 告警管理API
- *
- *
+ * Alarm Management API
  *
  *
  */

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertConvergeDao.java
Patch:
@@ -25,8 +25,7 @@
 import java.util.Set;
 
 /**
- * AlertConverge 数据库操作
- *
+ * AlertConverge Dao
  *
  */
 public interface AlertConvergeDao extends JpaRepository<AlertConverge, Long>, JpaSpecificationExecutor<AlertConverge> {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertSilenceDao.java
Patch:
@@ -25,8 +25,7 @@
 import java.util.Set;
 
 /**
- * AlertSilence 数据库操作
- *
+ * AlertSilence Dao
  *
  */
 public interface AlertSilenceDao extends JpaRepository<AlertSilence, Long>, JpaSpecificationExecutor<AlertSilence> {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dto/AlertSummary.java
Patch:
@@ -26,9 +26,7 @@
 
 
 /**
- * Alarm Statistics Information  告警统计信息
- *
- *
+ * Alarm Statistics Information
  *
  */
 @Data

File: alerter/src/main/java/org/dromara/hertzbeat/alert/enums/CloudServiceAlarmInformationEnum.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Arrays;
 
 /**
- * 云服务告警枚举
+ * Cloud server alarm enum
  */
 @AllArgsConstructor
 @Getter
@@ -17,12 +17,12 @@ public enum CloudServiceAlarmInformationEnum {
     TencentCloud("tencloud", TenCloudAlertReport.class);
 
     /**
-     * 云服务名称
+     * cloud service name
      */
     private final String cloudServiceName;
 
     /**
-     * 云服务对应的请求实体
+     * cloud service body
      */
     private final Class<? extends CloudAlertReportAbstract> cloudServiceAlarmInformationEntity;
 

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmCommonReduce.java
Patch:
@@ -16,7 +16,6 @@
 /**
  * reduce alarm and send alert data
  *
- *
  */
 @Service
 @RequiredArgsConstructor

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmSilenceReduce.java
Patch:
@@ -19,7 +19,6 @@
 /**
  * silence alarm
  *
- *
  */
 @Service
 @RequiredArgsConstructor

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertConvergeServiceImpl.java
Patch:
@@ -19,7 +19,6 @@
 /**
  * implement for alert converge service
  *
- *
  */
 @Service
 @Transactional(rollbackFor = Exception.class)

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertSilenceServiceImpl.java
Patch:
@@ -20,7 +20,6 @@
 /**
  * management interface service implement for alert silence
  *
- *
  */
 @Service
 @Transactional(rollbackFor = Exception.class)

File: alerter/src/main/java/org/dromara/hertzbeat/alert/util/AlertTemplateUtil.java
Patch:
@@ -27,7 +27,6 @@
  * Alarm template keyword matching replacement engine tool
  * 告警模版关键字匹配替换引擎工具
  *
- *
  */
 @Slf4j
 public class AlertTemplateUtil {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CacheCloseable.java
Patch:
@@ -18,14 +18,13 @@
 package org.dromara.hertzbeat.collector.collect.common.cache;
 
 /**
- * 连接资源关闭回调接口
- *
+ * resource in cache remove callback 
  *
  */
 public interface CacheCloseable {
 
     /**
-     * 在缓存remove掉此对象前，回调接口对连接对象进行相关资源的释放
+     * when the resource in cache want to be removed, callback this
      */
     void close();
 }

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CacheIdentifier.java
Patch:
@@ -23,8 +23,7 @@
 import java.util.Objects;
 
 /**
- * 缓存key唯一标识符
- *
+ * resource identifier in cache
  *
  */
 @Data

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/JdbcConnect.java
Patch:
@@ -24,7 +24,6 @@
 /**
  * jdbc common connection
  *
- *
  */
 @Slf4j
 public class JdbcConnect implements CacheCloseable {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/JmxConnect.java
Patch:
@@ -5,9 +5,7 @@
 import javax.management.remote.JMXConnector;
 
 /**
- * jmx链接销毁管理
- *
- *
+ * jmx connect object
  *
  **/
 @Slf4j

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/MongodbConnect.java
Patch:
@@ -6,8 +6,6 @@
 /**
  * mongodb connect client
  *
- *
- *
  */
 @Slf4j
 public class MongodbConnect implements CacheCloseable {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/RedisConnect.java
Patch:
@@ -23,8 +23,6 @@
 /**
  * redis connection
  *
- *
- *
  */
 @Slf4j
 public class RedisConnect implements CacheCloseable {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/SshConnect.java
Patch:
@@ -6,8 +6,6 @@
 /**
  * ssh connection holder
  *
- *
- *
  */
 @Slf4j
 public class SshConnect implements CacheCloseable {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/database/JdbcSpiLoader.java
Patch:
@@ -24,8 +24,7 @@
 import org.springframework.stereotype.Service;
 
 /**
- * 预加载jdbc驱动包 避免spi并发加载造成死锁
- *
+ * load the jdbc driver first to avoid spi concurrent deadlock
  *
  */
 @Service

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/mongodb/MongodbSingleCollectImpl.java
Patch:
@@ -44,7 +44,7 @@
 import lombok.extern.slf4j.Slf4j;
 
 /**
- * Mongodb 单机指标收集器
+ * Mongodb single collect
  *
  *
  * see also https://www.mongodb.com/languages/java,
@@ -80,7 +80,7 @@ public class MongodbSingleCollectImpl extends AbstractCollect {
     };
 
     @Override
-    public void collect(CollectRep.MetricsData.Builder builder, long appId, String app, Metrics metrics) {
+    public void collect(CollectRep.MetricsData.Builder builder, long monitorId, String app, Metrics metrics) {
         try {
             preCheck(metrics);
         } catch (Exception e) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/mq/RocketmqCollectData.java
Patch:
@@ -6,10 +6,9 @@
 import java.util.Map;
 
 /**
- * rocketmq采集数据实体类
+ * rocketmq collect data
  *
  *
- * @since 5/6/2023
  */
 @Data
 public class RocketmqCollectData {

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/DispatchConstants.java
Patch:
@@ -18,7 +18,7 @@
 package org.dromara.hertzbeat.collector.dispatch;
 
 /**
- * dispatch  constant 常量
+ * dispatch  constant
  */
 public interface DispatchConstants {
 
@@ -123,7 +123,7 @@ public interface DispatchConstants {
      */
     String PARSE_XML_PATH = "xmlPath";
     /**
-     * Analysis method  Website availability monitoring rules Provide responseTime indicators
+     * Analysis method  Website availability monitoring rules Provide responseTime metrics
      * 解析方式 网站可用性监控规则 提供responseTime指标
      */
     String PARSE_WEBSITE = "website";

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/MetricsCollectorQueue.java
Patch:
@@ -25,7 +25,6 @@
 
 /**
  * queue of jobs to run
- * 待运行的job队列
  */
 @Component
 @Slf4j

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/HashedWheelTimer.java
Patch:
@@ -429,7 +429,7 @@ public void run() {
             // Initialize the startTime.
             startTime = System.nanoTime();
             if (startTime == 0) {
-                // We use 0 as an indicator for the uninitialized value here, so make sure it's not 0 when initialized.
+                // We use 0 as an metric for the uninitialized value here, so make sure it's not 0 when initialized.
                 startTime = 1;
             }
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/unit/TimeLengthUnit.java
Patch:
@@ -1,10 +1,7 @@
 package org.dromara.hertzbeat.collector.dispatch.unit;
 
-import java.util.concurrent.TimeUnit;
-
 /**
  * the enum of time length
- * 时间长短的枚举类
  *
  *
  */

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/PrivateKeyUtils.java
Patch:
@@ -9,10 +9,9 @@
 import java.util.Objects;
 
 /**
- * 将私钥写入~/.ssh
+ * private key util
+ * write private key to ~/.ssh
  *
- *
- * Created by gcdd1993 on 2023/7/9
  */
 @Slf4j
 @UtilityClass

File: common/src/main/java/org/dromara/hertzbeat/common/cache/CacheFactory.java
Patch:
@@ -20,7 +20,7 @@
 import java.time.Duration;
 
 /**
- *
+ * common cache factory
  *
  */
 public class CacheFactory {
@@ -36,7 +36,7 @@ private CacheFactory() {}
             new CaffeineCacheServiceImpl<>(10, 1000, Duration.ofDays(1), false);
     
     /**
-     * 获取notice模块的cache
+     * get notice cache
      * @return caffeine cache
      */
     public static ICacheService<String, Object> getNoticeCache() {

File: common/src/main/java/org/dromara/hertzbeat/common/cache/CaffeineCacheServiceImpl.java
Patch:
@@ -23,7 +23,7 @@
 import java.time.Duration;
 
 /**
- *
+ * caffeine cache impl
  *
  */
 public class CaffeineCacheServiceImpl<K, V> implements ICacheService<K, V> {

File: common/src/main/java/org/dromara/hertzbeat/common/cache/ICacheService.java
Patch:
@@ -18,8 +18,7 @@
 package org.dromara.hertzbeat.common.cache;
 
 /**
- * common cache
- *
+ * common cache service
  *
  */
 public interface ICacheService<K, V> {

File: common/src/main/java/org/dromara/hertzbeat/common/config/AviatorConfiguration.java
Patch:
@@ -34,7 +34,7 @@
 import java.util.regex.Pattern;
 
 /**
- *
+ * aviator config
  *
  */
 @Configuration

File: common/src/main/java/org/dromara/hertzbeat/common/config/CommonConfig.java
Patch:
@@ -23,7 +23,7 @@
 import org.springframework.context.annotation.Configuration;
 
 /**
- *
+ * common module config
  *
  */
 @ComponentScan(basePackages = "org.dromara.hertzbeat.common")

File: common/src/main/java/org/dromara/hertzbeat/common/config/CommonProperties.java
Patch:
@@ -20,8 +20,7 @@
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
- * common properties
- *
+ * common module properties
  *
  *
  */

File: common/src/main/java/org/dromara/hertzbeat/common/constants/CollectorConstants.java
Patch:
@@ -18,8 +18,7 @@
 package org.dromara.hertzbeat.common.constants;
 
 /**
- * collector 常量
- *
+ * collector constant
  *
  */
 public interface CollectorConstants {
@@ -39,7 +38,7 @@ public interface CollectorConstants {
     String HTTPS_HEADER = "https://";
 
     /**
-     * POSTGRESQL状态码 不可达
+     * POSTGRESQL un reachable status code
      */
     String POSTGRESQL_UN_REACHABLE_CODE = "08001";
 

File: common/src/main/java/org/dromara/hertzbeat/common/constants/CommonConstants.java
Patch:
@@ -18,8 +18,7 @@
 package org.dromara.hertzbeat.common.constants;
 
 /**
- * Public Constant
- *
+ * Public Common Constant
  *
  */
 public interface CommonConstants {
@@ -158,7 +157,7 @@ public interface CommonConstants {
     byte TYPE_TIME = 3;
 
     /**
-     * Collection indicator value: null placeholder for empty value
+     * Collection metric value: null placeholder for empty value
      * 采集指标值：null空值占位符
      */
     String NULL_VALUE = "&nbsp;";

File: common/src/main/java/org/dromara/hertzbeat/common/constants/SignConstants.java
Patch:
@@ -1,8 +1,7 @@
 package org.dromara.hertzbeat.common.constants;
 
 /**
- * 特殊字符常量
- *
+ * Sign Constants
  *
  */
 public interface SignConstants {
@@ -17,5 +16,4 @@ public interface SignConstants {
     String CARRIAGE_RETURN = "\r";
 
     String RIGHT_DASH = "/";
-
 }

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/JsonMapAttributeConverter.java
Patch:
@@ -24,8 +24,7 @@
 import java.util.Map;
 
 /**
- * json 互转map对象字段为数据String字段
- *
+ * json map converter
  *
  */
 public class JsonMapAttributeConverter implements AttributeConverter<Map<String, String>, String> {

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/AlertReport.java
Patch:
@@ -29,15 +29,14 @@
 
 
 /**
- * 告警 对外上报实体类
- *
+ * Alarm Report Content Entity
  *
  */
 @Data
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
-@Schema(description = "告警对外上报字段")
+@Schema(description = "Alarm Report Content Entity")
 public class AlertReport {
 
     @Schema(title = "Alert record saas index ID")

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/PromVectorOrMatrix.java
Patch:
@@ -17,7 +17,6 @@
 import java.util.List;
 
 /**
- *
  *
  */
 @Data

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/ValueRow.java
Patch:
@@ -27,20 +27,20 @@
 import java.util.Map;
 
 /**
- * 监控指标集合的一行指标数据
+ * Monitoring Metrics DataRow
  *
  *
  */
 @Data
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
-@Schema(description = "监控指标集合的一行指标数据")
+@Schema(description = "Monitoring Metrics DataRow")
 public class ValueRow {
     
     @Schema(title = "Value Row Labels")
     private Map<String, String> labels;
 
-    @Schema(description = "监控指标集合指标值")
+    @Schema(description = "Monitoring Metrics DataRow")
     private List<Value> values;
 }

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/HttpProtocol.java
Patch:
@@ -28,7 +28,6 @@
 /**
  * http 协议配置
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/IcmpProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  * icmp(即ping)协议配置
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/JdbcProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  * 公共的jdbc规范实现的数据库配置信息
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/JmxProtocol.java
Patch:
@@ -9,7 +9,6 @@
  * Jmx protocol
  *
  *
- *
  **/
 @Data
 @Builder
@@ -47,13 +46,13 @@ public class JmxProtocol {
     private String password;
 
     /**
-     * jmx protocol custom collection indicator address
+     * jmx protocol custom collection metric address
      * jmx协议自定义收集指标地址
      */
     private String url;
 
     /**
-     * The name of the type where the outer layer of the jmx indicator is located
+     * The name of the type where the outer layer of the jmx metric is located
      * jmx指标外层所在类型名称
      */
     private String objectName;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/MongodbProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  *
  * @version 1.0
- * Created by Musk.Chen on 2022/5/17
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/PrometheusProtocol.java
Patch:
@@ -27,7 +27,6 @@
 /**
  * Prometheus 协议配置
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/RedisProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  *
  * @version 1.0
- * Created by Musk.Chen on 2022/5/17
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/RocketmqProtocol.java
Patch:
@@ -8,8 +8,6 @@
 /**
  * rocketmq protocol
  *
- *
- * @since 5/6/2023
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/SshProtocol.java
Patch:
@@ -25,8 +25,6 @@
 /**
  * ssh 协议参数配置
  *
- *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/TelnetProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  * telnet协议配置
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/UdpProtocol.java
Patch:
@@ -25,7 +25,6 @@
 /**
  * 使用socket实现的udp进行服务端口可用性探测
  *
- *
  */
 @Data
 @Builder

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonByteListAttributeConverter.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Map;
 
 /**
- * json 互转list Byte 对象字段为数据String字段
+ * json str to list Byte converter
  *
  *
  */

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonOptionListAttributeConverter.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.List;
 
 /**
- * json 互转list paramDefine.Option 对象字段为数据String字段
+ * json str to list paramDefine.Option 
  *
  *
  */

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonTagListAttributeConverter.java
Patch:
@@ -26,7 +26,7 @@
 import java.util.stream.Collectors;
 
 /**
- * json 互转 tag list 对象字段为数据String字段
+ * json str to tag list 
  *
  *
  */

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/TagItem.java
Patch:
@@ -10,7 +10,6 @@
 /**
  * tag item
  *
- *
  */
 @AllArgsConstructor
 @NoArgsConstructor

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/TagMonitorBind.java
Patch:
@@ -35,7 +35,6 @@
  * Tag Bind Monitor
  * 标签与监控关联实体
  *
- *
  */
 @Entity
 @Table(name = "hzb_tag_monitor_bind", indexes = {
@@ -63,11 +62,11 @@ public class TagMonitorBind {
     @Column(name = "monitor_id")
     private Long monitorId;
 
-    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "Record create time", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "Record modify time", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/org/dromara/hertzbeat/common/queue/impl/InMemoryCommonDataQueue.java
Patch:
@@ -32,8 +32,7 @@
 import java.util.concurrent.TimeUnit;
 
 /**
- * 内存采集数据队列实现
- *
+ * common data queue implement memory
  *
  */
 @Configuration

File: common/src/main/java/org/dromara/hertzbeat/common/queue/impl/KafkaCommonDataQueue.java
Patch:
@@ -29,7 +29,7 @@
 
 
 /**
- * kafka采集数据队列实现
+ * common data queue implement kafka
  *
  *
  */

File: common/src/main/java/org/dromara/hertzbeat/common/serialize/AlertDeserializer.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Map;
 
 /**
- * kafka告警记录反序列化类
+ * kafka alert deserializer
  *
  */
 public class AlertDeserializer implements Deserializer<Alert> {

File: common/src/main/java/org/dromara/hertzbeat/common/serialize/AlertSerializer.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Map;
 
 /**
- * kafka告警记录序列化类
+ * kafka alert entity serializer
  *
  */
 public class AlertSerializer implements Serializer<Alert> {

File: common/src/main/java/org/dromara/hertzbeat/common/serialize/KafkaMetricsDataDeserializer.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Map;
 
 /**
- * kafka指标组监控数据反序列化类
+ * kafka metrics data deserializer
  *
  */
 public class KafkaMetricsDataDeserializer implements Deserializer<CollectRep.MetricsData> {

File: common/src/main/java/org/dromara/hertzbeat/common/serialize/KafkaMetricsDataSerializer.java
Patch:
@@ -9,7 +9,7 @@
 
 
 /**
- * kafka指标组监控数据序列化类
+ * kafka metrics data serializer
  *
  */
 public class KafkaMetricsDataSerializer implements Serializer<CollectRep.MetricsData> {

File: common/src/main/java/org/dromara/hertzbeat/common/service/TencentSmsClient.java
Patch:
@@ -14,7 +14,6 @@
 /**
  * sms service client for tencent cloud
  *
- *
  */
 @Component
 @ConditionalOnProperty("common.sms.tencent.app-id")

File: common/src/main/java/org/dromara/hertzbeat/common/support/SpringContextHolder.java
Patch:
@@ -24,8 +24,7 @@
 import org.springframework.stereotype.Component;
 
 /**
- * Spring的ApplicationContext的持有者,可以用静态方法的方式获取spring容器中的bean
- *
+ * Spring ApplicationContext Holder
  *
  */
 @Component

File: common/src/main/java/org/dromara/hertzbeat/common/support/exception/SendMessageException.java
Patch:
@@ -3,7 +3,6 @@
 /**
  * send message exception
  *
- *
  */
 public class SendMessageException extends RuntimeException {
     public SendMessageException(String message) {

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/EmailParamValidator.java
Patch:
@@ -23,15 +23,14 @@
 import javax.validation.ConstraintValidatorContext;
 
 /**
- * email注解数据自定义校验器
- *
+ * email validator
  *
  */
 public class EmailParamValidator implements ConstraintValidator<EmailValid, String> {
 
     @Override
     public boolean isValid(String value, ConstraintValidatorContext context) {
-        // 判断value是否满足ipv4 ipv5 域名 格式
+        // validate email 
         return CommonUtil.validateEmail(value);
     }
 }

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/EmailValid.java
Patch:
@@ -28,8 +28,7 @@
 import static java.lang.annotation.RetentionPolicy.RUNTIME;
 
 /**
- * email注解数据自定义校验器注解
- *
+ * EmailValid 
  *
  */
 @Target({ FIELD, PARAMETER })

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostParamValidator.java
Patch:
@@ -23,7 +23,7 @@
 import javax.validation.ConstraintValidatorContext;
 
 /**
- * host注解数据自定义校验器
+ * Host Param Validator
  *
  *
  */
@@ -36,7 +36,6 @@ public class HostParamValidator implements ConstraintValidator<HostValid, String
 
     @Override
     public boolean isValid(String value, ConstraintValidatorContext context) {
-        // 判断value是否满足ipv4 ipv5 域名 格式
         if(value != null && value.toLowerCase().contains(HTTP)){
             value = value.replaceAll(PATTERN_HTTP, BLANK);
         }

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostValid.java
Patch:
@@ -28,8 +28,7 @@
 import static java.lang.annotation.RetentionPolicy.RUNTIME;
 
 /**
- * host注解数据自定义校验器注解
- *
+ * Host Param Validator
  *
  */
 @Target({ FIELD, PARAMETER })
@@ -38,7 +37,7 @@
 @Constraint(validatedBy = HostParamValidator.class)
 public @interface HostValid {
 
-    String message() default "监控Host必须是ipv4,ipv6或域名,<br>EX:127.0.0.1 或者 hertzbeat.com";
+    String message() default "Host need ipv4,ipv6 or domain,<br>EG:127.0.0.1  hertzbeat.com";
 
     Class<?>[] groups() default {};
 

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/PhoneNumParamValidator.java
Patch:
@@ -23,15 +23,14 @@
 import javax.validation.ConstraintValidatorContext;
 
 /**
- * PhoneNum注解数据自定义校验器
+ * PhoneNum Param Validator
  *
  *
  */
 public class PhoneNumParamValidator implements ConstraintValidator<PhoneNumValid, String> {
 
     @Override
     public boolean isValid(String value, ConstraintValidatorContext context) {
-        // 判断value是否满足ipv4 ipv5 域名 格式
         return CommonUtil.validatePhoneNum(value);
     }
 }

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/PhoneNumValid.java
Patch:
@@ -28,8 +28,7 @@
 import static java.lang.annotation.RetentionPolicy.RUNTIME;
 
 /**
- * phoneNum注解数据自定义校验器注解
- *
+ * PhoneNum Param Validator
  *
  */
 @Target({ FIELD, PARAMETER })

File: common/src/main/java/org/dromara/hertzbeat/common/util/AesUtil.java
Patch:
@@ -28,8 +28,7 @@
 import java.util.Base64;
 
 /**
- * AES 对称加密解密工具
- *
+ * AES Util
  *
  */
 @Slf4j

File: common/src/main/java/org/dromara/hertzbeat/common/util/Base64Util.java
Patch:
@@ -20,8 +20,7 @@
 import java.util.Base64;
 
 /**
- * base64工具类
- *
+ * base64 util
  *
  */
 public class Base64Util {

File: common/src/main/java/org/dromara/hertzbeat/common/util/CommonUtil.java
Patch:
@@ -29,8 +29,7 @@
 import java.util.regex.Pattern;
 
 /**
- * 公共工具类
- *
+ * common util
  *
  */
 @Slf4j

File: common/src/main/java/org/dromara/hertzbeat/common/util/IntervalExpressionUtil.java
Patch:
@@ -20,6 +20,7 @@
 import lombok.extern.slf4j.Slf4j;
 
 /**
+ * expression calculate for number range
  * 数值区间表达式计算
  * [a,b] = {a <= x <= b}
  * [a,b) = {a <= x < b}

File: common/src/main/java/org/dromara/hertzbeat/common/util/JsonUtil.java
Patch:
@@ -30,8 +30,7 @@
 import javax.annotation.concurrent.ThreadSafe;
 
 /**
- * gson 工具类
- *
+ * json util
  *
  */
 @ThreadSafe

File: common/src/main/java/org/dromara/hertzbeat/common/util/LruHashMap.java
Patch:
@@ -21,6 +21,7 @@
 import java.util.Map;
 
 /**
+ * lru hash map
  * 最近最少使用淘汰算法map
  *
  *

File: common/src/main/java/org/dromara/hertzbeat/common/util/NetworkUtil.java
Patch:
@@ -1,8 +1,8 @@
 package org.dromara.hertzbeat.common.util;
 
 /**
+ * network util
  *
- * @since 19/7/2023
  */
 public class NetworkUtil {
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/Pair.java
Patch:
@@ -1,8 +1,7 @@
 package org.dromara.hertzbeat.common.util;
 
 /**
- * Pair类(简写)，类似java.util.Map.Entry，只包含一个K、V
- *
+ * Pair KV 
  *
  */
 public class Pair<K, V> {

File: common/src/main/java/org/dromara/hertzbeat/common/util/ResourceBundleUtil.java
Patch:
@@ -27,7 +27,6 @@
 /**
  * i18n ResourceBundle util
  *
- *
  */
 @Slf4j
 public class ResourceBundleUtil {

File: common/src/main/java/org/dromara/hertzbeat/common/util/SnowFlakeIdGenerator.java
Patch:
@@ -19,9 +19,6 @@
 
 /**
  * Snowflake Algorithm Generator Tool
- * 雪花算法生成器工具
- *
- *
  *
  */
 public class SnowFlakeIdGenerator {

File: common/src/main/java/org/dromara/hertzbeat/common/util/TimePeriodUtil.java
Patch:
@@ -7,8 +7,6 @@
 /**
  * time util
  *
- *
- *
  */
 public class TimePeriodUtil {
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/TelegramBotAlertNotifyHandlerImpl.java
Patch:
@@ -41,10 +41,8 @@
  * Created by Musk.Chen on 2023/1/16
  */
 @Component
-@RequiredArgsConstructor
 @Slf4j
 final class TelegramBotAlertNotifyHandlerImpl extends AbstractAlertNotifyHandlerImpl {
-    private final RestTemplate restTemplate;
 
     @Override
     public void send(NoticeReceiver receiver, NoticeTemplate noticeTemplate, Alert alert) throws AlertNoticeException {

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -31,11 +31,8 @@
  *
  */
 @Component
-@RequiredArgsConstructor
 @Slf4j
 final class WebHookAlertNotifyHandlerImpl extends AbstractAlertNotifyHandlerImpl {
-    
-    private final RestTemplate restTemplate;
 
     @Override
     public void send(NoticeReceiver receiver, NoticeTemplate noticeTemplate, Alert alert) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/AppController.java
Patch:
@@ -138,7 +138,7 @@ public ResponseEntity<Message<Void>> updateAppDefineYml(@Valid @RequestBody Moni
     }
 
     @GetMapping(path = "/hierarchy")
-    @Operation(summary = "Query all monitor metrics level, output in a hierarchical structure", description = "查询所有监控的类型-指标组-指标层级,以层级结构输出")
+    @Operation(summary = "Query all monitor metrics level, output in a hierarchical structure", description = "查询所有监控的类型指标层级,以层级结构输出")
     public ResponseEntity<Message<List<Hierarchy>>> queryAppsHierarchy(
             @Parameter(description = "en: language type,zh: 语言类型",
                     example = "zh-CN")

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/AppServiceImpl.java
Patch:
@@ -363,7 +363,6 @@ public void applyMonitorDefineYml(String ymlContent, boolean isModify) {
         verifyDefineAppContent(app, isModify);
         appDefineStore.save(app.getApp(), ymlContent);
         appDefines.put(app.getApp().toLowerCase(), app);
-        // bug  当模板 app-redis.yml被修改，比如 增加指标组，删除指标，当前的job中，持有的缓存 metrics实例，
         // 解决 ：模板修改后，同类型模板的所有监控实例 ，在任务状态中，需要重新下发任务
         SpringContextHolder.getBean(MonitorService.class).updateAppCollectJob(app);
     }

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -140,8 +140,7 @@ public void detectMonitor(Monitor monitor, List<Param> params, String collector)
         List<Configmap> configmaps = params.stream().map(param ->
                 new Configmap(param.getField(), param.getValue(), param.getType())).collect(Collectors.toList());
         appDefine.setConfigmap(configmaps);
-        // To detect availability, you only need to collect the set of availability indicators with a priority of 0.
-        // 探测可用性只需要采集优先级为0的可用性指标集合
+        // To detect availability, you only need to collect the set of availability metrics with a priority of 0.
         List<Metrics> availableMetrics = appDefine.getMetrics().stream()
                 .filter(item -> item.getPriority() == 0).collect(Collectors.toList());
         appDefine.setMetrics(availableMetrics);
@@ -152,7 +151,6 @@ public void detectMonitor(Monitor monitor, List<Param> params, String collector)
             collectRep = collectJobScheduling.collectSyncJobData(appDefine);
         }
         // If the detection result fails, a detection exception is thrown
-        // 判断探测结果 失败则抛出探测异常
         if (collectRep == null || collectRep.isEmpty()) {
             throw new MonitorDetectException("Collect Timeout No Response");
         }

File: collector/src/test/java/org/dromara/hertzbeat/collector/util/CollectUtilTest.java
Patch:
@@ -111,7 +111,7 @@ void replaceCryPlaceholder() throws JsonMappingException, JsonProcessingExceptio
     }
 
     @Test
-    void replaceSmilingPlaceholder() {
+    void replaceSmilingPlaceholder() throws JsonMappingException, JsonProcessingException {
         Metrics metrics = Metrics.builder().name("^_^name^_^").build();
         JsonElement jsonElement = new Gson().toJsonTree(metrics);
         HashMap<String, Configmap> configmap = new HashMap<>();
@@ -120,7 +120,7 @@ void replaceSmilingPlaceholder() {
         JsonElement res = CollectUtil.replaceSmilingPlaceholder(jsonElement, configmap);
         Metrics metricsTarget = Metrics.builder().name("张三").build();
         JsonElement jsonElement2 = new Gson().toJsonTree(metricsTarget);
-        assertEquals(jsonElement2.toString(), res.toString());
+        assertEquals(JSON_MAPPER.readTree(jsonElement2.toString()), JSON_MAPPER.readTree(res.toString()));
 
 
         List<Metrics> metricsList = new ArrayList<>();
@@ -133,7 +133,7 @@ void replaceSmilingPlaceholder() {
         metricsListTarget.add(metricsTarget);
         metricsListTarget.add(metricsTarget);
         JsonElement jsonArrayTarget = new Gson().toJsonTree(metricsListTarget);
-        assertEquals(jsonArrayTarget.toString(), res2.toString());
+        assertEquals(JSON_MAPPER.readTree(jsonArrayTarget.toString()), JSON_MAPPER.readTree(res2.toString()));
     }
 
     @Test

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/AbstractAlertNotifyHandlerImpl.java
Patch:
@@ -26,7 +26,6 @@
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeTemplate;
 import org.dromara.hertzbeat.common.support.event.SystemConfigChangeEvent;
-import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.common.util.ResourceBundleUtil;
 import org.dromara.hertzbeat.manager.component.alerter.AlertNotifyHandler;
 import org.dromara.hertzbeat.manager.service.NoticeConfigService;
@@ -52,6 +51,7 @@
 @Slf4j
 abstract class AbstractAlertNotifyHandlerImpl implements AlertNotifyHandler {
 
+    private static final String NUMBER_FORMAT = "0";
     protected static final DateTimeFormatter DTF = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
     protected ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
     @Resource
@@ -63,10 +63,10 @@ abstract class AbstractAlertNotifyHandlerImpl implements AlertNotifyHandler {
 
 
     protected String renderContent(NoticeTemplate noticeTemplate, Alert alert) throws TemplateException, IOException {
-
         StringTemplateLoader stringLoader = new StringTemplateLoader();
         freemarker.template.Template templateRes;
         Configuration cfg = new Configuration(Configuration.VERSION_2_3_0);
+        cfg.setNumberFormat(NUMBER_FORMAT);
         Map<String, Object> model = new HashMap<>(16);
         model.put("title", bundle.getString("alerter.notify.title"));
 
@@ -109,6 +109,7 @@ protected String renderContent(NoticeTemplate noticeTemplate, Alert alert) throw
             log.error("alert does not have mapping default notice template. type: {}.", type());
             throw new NullPointerException(type() + " does not have mapping default notice template");
         }
+        // TODO 单实例复用缓存 考虑多线程问题
         String templateName = "freeMakerTemplate";
         stringLoader.putTemplate(templateName, noticeTemplate.getContent());
         cfg.setTemplateLoader(stringLoader);

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MailServiceImpl.java
Patch:
@@ -69,7 +69,7 @@ public String buildAlertHtmlTemplate(final Alert alert, NoticeTemplate noticeTem
         }
         monitorId = monitorId == null ? "External Alarm, No ID" : monitorId;
         monitorName = monitorName == null ? "External Alarm, No Name" : monitorName;
-        // Introduce thymeleaf context parameters to render pages
+        // Introduce context parameters to render pages
         Map<String, String> model = new HashMap<>(16);
         model.put("nameTitle", bundle.getString("alerter.notify.title"));
         model.put("nameMonitorId", bundle.getString("alerter.notify.monitorId"));

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/NoticeConfigServiceImpl.java
Patch:
@@ -250,7 +250,7 @@ public boolean sendTestMsg(NoticeReceiver noticeReceiver) {
         tags.put(CommonConstants.TAG_THRESHOLD_ID, "200");
         Alert alert = new Alert();
         alert.setTags(tags);
-        alert.setId(100L);
+        alert.setId(1003445L);
         alert.setTarget(ALERT_TEST_TARGET);
         alert.setPriority(CommonConstants.ALERT_PRIORITY_CODE_CRITICAL);
         alert.setContent(ALERT_TEST_CONTENT);

File: collector/src/test/java/org/dromara/hertzbeat/collector/collect/telnet/TelnetCollectImplTest.java
Patch:
@@ -29,8 +29,7 @@
  * Test case for {@link TelnetCollectImpl}
  */
 class TelnetCollectImplTest {
-
-    @Test
+    
     void telnet() {
         TelnetClient telnetClient = null;
         try {
@@ -51,4 +50,4 @@ void telnet() {
             }
         }
     }
-}
\ No newline at end of file
+}

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/NoticeTemplate.java
Patch:
@@ -91,6 +91,7 @@ public class NoticeTemplate {
                     "${triggerTimeLabel} : ${triggerTime}\n" +
                     "${contentLabel} : ${content}", accessMode = READ_WRITE)
     @Length(max = 60000)
+    @Lob
     @NotBlank
     private String content;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -43,6 +43,7 @@ public void send(NoticeReceiver receiver, NoticeTemplate noticeTemplate, Alert a
             HttpHeaders headers = new HttpHeaders();
             headers.setContentType(MediaType.APPLICATION_JSON);
             String webhookJson = renderContent(noticeTemplate, alert);
+            webhookJson = webhookJson.replace(",\n  }", "\n }");
             HttpEntity<String> alertHttpEntity = new HttpEntity<>(webhookJson, headers);
             ResponseEntity<String> entity = restTemplate.postForEntity(receiver.getHookUrl(), alertHttpEntity, String.class);
             if (entity.getStatusCode().value() < HttpStatus.BAD_REQUEST.value()) {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -115,8 +115,10 @@ private void startCalculate() {
                     if (metricsData != null) {
                         calculate(metricsData);
                     }
+                } catch (InterruptedException ignored) {
+                    
                 } catch (Exception e) {
-                    log.error(e.getMessage());
+                    log.error("calculate alarm error: {}.", e.getMessage(), e);
                 }
             }
         };

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -40,7 +40,7 @@ public void run(String... args) throws Exception {
 							.app(app)
 							.metric(CommonConstants.AVAILABILITY)
 							.preset(true)
-							.times(1)
+							.times(2)
 							.enable(true)
                             .recoverNotice(false)
 							.priority(CommonConstants.ALERT_PRIORITY_CODE_EMERGENCY)

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertDefineDao.java
Patch:
@@ -24,7 +24,6 @@
 import org.springframework.data.repository.query.Param;
 
 import java.util.List;
-import java.util.Optional;
 import java.util.Set;
 
 /**
@@ -57,7 +56,7 @@ public interface AlertDefineDao extends JpaRepository<AlertDefine, Long>, JpaSpe
      * @param field field
      * @return alert define
      */
-    Optional<AlertDefine> queryAlertDefineByAppAndMetricAndField(String app, String metric, String field);
+    List<AlertDefine> queryAlertDefineByAppAndMetricAndField(String app, String metric, String field);
 
     /**
      * Query the alarm definition list associated with the monitoring ID

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -10,7 +10,7 @@
 import org.springframework.core.annotation.Order;
 import org.springframework.stereotype.Service;
 
-import java.util.Optional;
+import java.util.List;
 import java.util.Set;
 
 /**
@@ -34,8 +34,8 @@ public void run(String... args) throws Exception {
 		Set<String> apps = appService.getAllAppDefines().keySet();
 		for (String app : apps) {
 			try {
-				Optional<AlertDefine> optional = alertDefineDao.queryAlertDefineByAppAndMetricAndField(app, CommonConstants.AVAILABILITY, null);
-				if (optional.isEmpty()) {
+				List<AlertDefine> defines = alertDefineDao.queryAlertDefineByAppAndMetricAndField(app, CommonConstants.AVAILABILITY, null);
+				if (defines.isEmpty()) {
 					AlertDefine alertDefine = AlertDefine.builder()
 							.app(app)
 							.metric(CommonConstants.AVAILABILITY)

File: manager/src/test/java/org/dromara/hertzbeat/manager/service/NoticeConfigServiceTest.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.Map;
 import java.util.Set;
 
+import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.*;
@@ -180,9 +181,8 @@ void getReceiverFilterRule() {
         lenient().when(alert.getPriority()).thenReturn(priority);
         lenient().when(alert.getTags()).thenReturn(tagsMap);
 
-        noticeConfigService.getReceiverFilterRule(alert);
-        final Set<Long> sets = Sets.newHashSet(1L, 4L);
-        verify(noticeReceiverDao, times(1)).findAllById(sets);
+        List<NoticeRule> ruleList = noticeConfigService.getReceiverFilterRule(alert);
+        assertEquals(2, ruleList.size());
     }
 
     @Test

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/CollectorAndJobScheduler.java
Patch:
@@ -369,8 +369,8 @@ public long addAsyncCollectJob(Job job, String collector) {
                 log.error("there is no collector name: {} online to assign job.", collector);
                 return jobId;
             }
+            node.getAssignJobs().addPinnedJob(jobId);
         }
-        node.getAssignJobs().addPinnedJob(jobId);
         if (CommonConstants.MAIN_COLLECTOR_NODE.equals(node.getIdentity())) {
             collectJobService.addAsyncCollectJob(job);
         } else {

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/CollectorOnlineProcessor.java
Patch:
@@ -24,6 +24,7 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
         String collector = message.getIdentity();
         log.info("the collector {} actively requests to go online.", collector);
         CollectorInfo collectorInfo = JsonUtil.fromJson(message.getMsg(), CollectorInfo.class);
+        this.manageServer.addChannel(collector, ctx.channel());
         this.manageServer.getCollectorAndJobScheduler().collectorGoOnline(collector, collectorInfo);
         return null;
     }

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/HeartbeatProcessor.java
Patch:
@@ -23,11 +23,10 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
         String identity = message.getIdentity();
         boolean isChannelExist = this.manageServer.isChannelExist(identity);
         if (!isChannelExist) {
-            log.info("the collector {} has reconnected and to go online.", identity);
-            this.manageServer.getCollectorAndJobScheduler().collectorGoOnline(identity, null);
+            log.info("the collector {} is not online.", identity);
         }
         if (log.isDebugEnabled()) {
-            log.debug("server receive collector heartbeat");
+            log.debug("server receive collector {} heartbeat", message.getIdentity());
         }
         return ClusterMsg.Message.newBuilder()
                 .setType(ClusterMsg.MessageType.HEARTBEAT)

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyRemotingServer.java
Patch:
@@ -138,7 +138,7 @@ private void initChannel(final SocketChannel channel) {
         pipeline.addLast(new ProtobufVarint32LengthFieldPrepender());
         pipeline.addLast(new ProtobufEncoder());
         // idle state
-        pipeline.addLast(new IdleStateHandler(0, 0, 30));
+        pipeline.addLast(new IdleStateHandler(0, 0, nettyServerConfig.getIdleStateEventTriggerTime()));
         pipeline.addLast(new NettyServerHandler());
     }
 

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyServerConfig.java
Patch:
@@ -27,4 +27,6 @@ public class NettyServerConfig {
 
     private Integer port;
 
+    private Integer idleStateEventTriggerTime = 100;
+
 }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -309,6 +309,7 @@ private boolean execAlertExpression(Map<String, Object> fieldValueMap, String ex
     }
 
     private void handlerAvailableMetrics(long monitorId, String app, CollectRep.MetricsData metricsData) {
+        // TODO CACHE getMonitorBindAlertAvaDefine
         AlertDefine avaAlertDefine = alertDefineService.getMonitorBindAlertAvaDefine(monitorId, app, CommonConstants.AVAILABILITY);
         if (avaAlertDefine == null) {
             return;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/database/JdbcSpiLoader.java
Patch:
@@ -19,6 +19,7 @@
 
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.CommandLineRunner;
+import org.springframework.core.Ordered;
 import org.springframework.core.annotation.Order;
 import org.springframework.stereotype.Service;
 
@@ -29,7 +30,7 @@
  */
 @Service
 @Slf4j
-@Order(value = 0)
+@Order(value = Ordered.HIGHEST_PRECEDENCE)
 public class JdbcSpiLoader implements CommandLineRunner {
 
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/strategy/CollectStrategyFactory.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 @Configuration
-@Order(value = Ordered.HIGHEST_PRECEDENCE)
+@Order(value = Ordered.HIGHEST_PRECEDENCE + 1)
 public class CollectStrategyFactory implements CommandLineRunner {
 
     /**

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/entrance/processor/GoOnlineProcessor.java
Patch:
@@ -23,7 +23,7 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
             this.timerDispatch = SpringContextHolder.getBean(TimerDispatch.class);
         }
         timerDispatch.goOnline();
-        log.info("receive online message and close success");
+        log.info("receive online message and handle success");
         return ClusterMsg.Message.newBuilder()
                 .setIdentity(message.getIdentity())
                 .setDirection(ClusterMsg.Direction.RESPONSE)

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/CollectOneTimeDataResponseProcessor.java
Patch:
@@ -1,4 +1,4 @@
-package org.dromara.hertzbeat.manager.netty.process;
+package org.dromara.hertzbeat.manager.scheduler.netty.process;
 
 import com.fasterxml.jackson.core.type.TypeReference;
 import io.netty.channel.ChannelHandlerContext;
@@ -7,7 +7,7 @@
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.common.util.ProtoJsonUtil;
-import org.dromara.hertzbeat.manager.netty.ManageServer;
+import org.dromara.hertzbeat.manager.scheduler.netty.ManageServer;
 import org.dromara.hertzbeat.remoting.netty.NettyRemotingProcessor;
 
 import java.util.ArrayList;

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/CollectorOfflineProcessor.java
Patch:
@@ -1,9 +1,9 @@
-package org.dromara.hertzbeat.manager.netty.process;
+package org.dromara.hertzbeat.manager.scheduler.netty.process;
 
 import io.netty.channel.ChannelHandlerContext;
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.entity.message.ClusterMsg;
-import org.dromara.hertzbeat.manager.netty.ManageServer;
+import org.dromara.hertzbeat.manager.scheduler.netty.ManageServer;
 import org.dromara.hertzbeat.remoting.netty.NettyRemotingProcessor;
 
 /**

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/CollectorOnlineProcessor.java
Patch:
@@ -1,11 +1,11 @@
-package org.dromara.hertzbeat.manager.netty.process;
+package org.dromara.hertzbeat.manager.scheduler.netty.process;
 
 import io.netty.channel.ChannelHandlerContext;
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.entity.dto.CollectorInfo;
 import org.dromara.hertzbeat.common.entity.message.ClusterMsg;
 import org.dromara.hertzbeat.common.util.JsonUtil;
-import org.dromara.hertzbeat.manager.netty.ManageServer;
+import org.dromara.hertzbeat.manager.scheduler.netty.ManageServer;
 import org.dromara.hertzbeat.remoting.netty.NettyRemotingProcessor;
 
 /**

File: manager/src/main/java/org/dromara/hertzbeat/manager/scheduler/netty/process/HeartbeatProcessor.java
Patch:
@@ -1,9 +1,9 @@
-package org.dromara.hertzbeat.manager.netty.process;
+package org.dromara.hertzbeat.manager.scheduler.netty.process;
 
 import io.netty.channel.ChannelHandlerContext;
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.entity.message.ClusterMsg;
-import org.dromara.hertzbeat.manager.netty.ManageServer;
+import org.dromara.hertzbeat.manager.scheduler.netty.ManageServer;
 import org.dromara.hertzbeat.remoting.netty.NettyRemotingProcessor;
 
 /**
@@ -24,7 +24,7 @@ public ClusterMsg.Message handle(ChannelHandlerContext ctx, ClusterMsg.Message m
         boolean isChannelExist = this.manageServer.isChannelExist(identity);
         if (!isChannelExist) {
             log.info("the collector {} has reconnected and to go online.", identity);
-            this.manageServer.getCollectorAndJobScheduler().collectorGoOnline(identity);
+            this.manageServer.getCollectorAndJobScheduler().collectorGoOnline(identity, null);
         }
         if (log.isDebugEnabled()) {
             log.debug("server receive collector heartbeat");

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -6,6 +6,7 @@
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.CommandLineRunner;
+import org.springframework.core.Ordered;
 import org.springframework.core.annotation.Order;
 import org.springframework.stereotype.Service;
 
@@ -18,7 +19,7 @@
  *
  */
 @Service
-@Order(value = 2)
+@Order(value = Ordered.HIGHEST_PRECEDENCE + 1)
 @Slf4j
 public class AvailableAlertDefineInit implements CommandLineRunner {
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/AppServiceImpl.java
Patch:
@@ -31,6 +31,7 @@
 import org.dromara.hertzbeat.manager.service.MonitorService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.CommandLineRunner;
+import org.springframework.core.Ordered;
 import org.springframework.core.annotation.Order;
 import org.springframework.core.io.Resource;
 import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
@@ -61,7 +62,7 @@
  *
  */
 @Service
-@Order(value = 1)
+@Order(value = Ordered.HIGHEST_PRECEDENCE)
 @Slf4j
 public class AppServiceImpl implements AppService, CommandLineRunner {
 
@@ -256,7 +257,7 @@ public void applyMonitorDefineYml(String ymlContent, boolean isModify) {
             app = yaml.loadAs(ymlContent, Job.class);
         } catch (Exception e) {
             log.error(e.getMessage());
-            throw new IllegalArgumentException("parse yml define error: " + e.getMessage());
+            throw new IllegalArgumentException("parse yml error: " + e.getMessage());
         }
         // app params verify
         verifyDefineAppContent(app, isModify);

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/RemotingClient.java
Patch:
@@ -40,7 +40,7 @@ public interface RemotingClient extends RemotingService {
     void sendMsg(final ClusterMsg.Message request);
 
     /**
-     * send message to server and receive server message
+     * send message to server and sync waiting receive server message
      * @param request request message
      * @param timeoutMillis timeout millis
      * @return response message

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyClientConfig.java
Patch:
@@ -25,7 +25,7 @@
 @Data
 public class NettyClientConfig {
 
-    private String serverIp;
+    private String serverHost;
 
     private int serverPort;
 

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyRemotingAbstract.java
Patch:
@@ -127,13 +127,13 @@ protected ClusterMsg.Message sendMsgSyncImpl(final Channel channel, final Cluste
         return null;
     }
 
-    protected void channelActive(ChannelHandlerContext ctx) {
+    protected void channelActive(ChannelHandlerContext ctx) throws Exception {
         if (this.nettyEventListener != null && ctx.channel().isActive()) {
             this.nettyEventListener.onChannelActive(ctx.channel());
         }
     }
 
-    protected void channelIdle(ChannelHandlerContext ctx, Object evt) {
+    protected void channelIdle(ChannelHandlerContext ctx, Object evt) throws Exception {
         IdleStateEvent event = (IdleStateEvent) evt;
         if (this.nettyEventListener != null && event.state() == IdleState.ALL_IDLE) {
             ctx.channel().closeFuture();

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyRemotingClient.java
Patch:
@@ -96,7 +96,7 @@ protected void initChannel(SocketChannel channel) throws Exception {
                 first = false;
                 try {
                     this.channel = this.bootstrap
-                            .connect(this.nettyClientConfig.getServerIp(), this.nettyClientConfig.getServerPort())
+                            .connect(this.nettyClientConfig.getServerHost(), this.nettyClientConfig.getServerPort())
                             .sync().channel();
                     this.channel.closeFuture().sync();
                 } catch (InterruptedException ignored) {

File: remoting/src/main/java/org/dromara/hertzbeat/remoting/netty/NettyRemotingServer.java
Patch:
@@ -185,7 +185,7 @@ protected void channelRead0(ChannelHandlerContext ctx, ClusterMsg.Message msg) t
         }
 
         @Override
-        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) {
+        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {
             NettyRemotingServer.this.channelIdle(ctx, evt);
         }
     }

File: remoting/src/test/java/org/dromara/hertzbeat/remoting/RemotingServiceTest.java
Patch:
@@ -34,7 +34,7 @@ public RemotingServer createRemotingServer(int port) {
 
     public RemotingClient createRemotingClient(int port) {
         NettyClientConfig nettyClientConfig = new NettyClientConfig();
-        nettyClientConfig.setServerIp("localhost");
+        nettyClientConfig.setServerHost("localhost");
         nettyClientConfig.setServerPort(port);
         RemotingClient client = new NettyRemotingClient(nettyClientConfig, null, threadPool);
         client.start();

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/AlertReport.java
Patch:
@@ -50,7 +50,7 @@ public class AlertReport {
     private Integer alertDuration;
 
     @Schema(title = "Time when the log service receives the alarm message", description = "日志服务接收到告警消息的时间",
-            example = "1648889320", accessMode = READ_WRITE)
+            example = "1694589491000", accessMode = READ_WRITE)
     private long alertTime;
 
     @Schema(title = "Alarm priority. 0: high emergency alarm red 1: medium critical serious alarm Orange 2: low warning warning alarm yellow",

File: common/src/main/java/org/dromara/hertzbeat/common/util/JsonUtil.java
Patch:
@@ -22,6 +22,7 @@
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.databind.SerializationFeature;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.util.StringUtils;
 
@@ -41,7 +42,8 @@ public class JsonUtil {
     static {
         OBJECT_MAPPER
                 .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
-                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
+                .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false)
+                .registerModule(new JavaTimeModule());
     }
 
     public static String toJson(Object source) {

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/AlertReport.java
Patch:
@@ -63,10 +63,10 @@ public class AlertReport {
     private Integer reportType;
 
     @Schema(title = "Alarm tag information", description = "告警标签信息((monitorId:xxx,monitorName:xxx))",
-            example = "{key1:value1}", accessMode = READ_WRITE)
+            example = "{\"key1\":\"value1\"}", accessMode = READ_WRITE)
     private Map<String, String> labels;
 
-    @Schema(title = " Alarm marking (monitorId:xxx,monitorName:xxx)", description = "告警标注", example = "{key1:value1}"
+    @Schema(title = " Alarm marking (monitorId:xxx,monitorName:xxx)", description = "告警标注", example ="{\"key1\":\"value1\"}"
             , accessMode = READ_WRITE)
     private Map<String, String> annotations;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/AccountController.java
Patch:
@@ -29,6 +29,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.dto.Message;
+import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.pojo.dto.LoginDto;
 import org.dromara.hertzbeat.manager.pojo.dto.RefreshTokenResponse;
 import org.springframework.http.ResponseEntity;
@@ -98,6 +99,7 @@ public ResponseEntity<Message<Map<String, String>>> authGetToken(@Valid @Request
         Map<String, String> resp = new HashMap<>(2);
         resp.put("token", issueToken);
         resp.put("refreshToken", issueRefresh);
+        resp.put("role", JsonUtil.toJson(roles));
         return ResponseEntity.ok(new Message<>(resp));
     }
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/WeChatAppAlertNotifyHandlerImpl.java
Patch:
@@ -95,7 +95,7 @@ private String generateContent(Alert alert){
         contentMap.put("alertDefineId",alert.getAlertDefineId());
         contentMap.put("content",alert.getContent());
         contentMap.put("monitorName",alert.getTags().get(CommonConstants.TAG_MONITOR_NAME));
-        return JSON.toJSONString(contentMap);
+        return JsonUtil.toJson(contentMap);
     }
 
 }

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/export/NettyDataQueue.java
Patch:
@@ -37,7 +37,7 @@
  *
  */
 @Configuration
-@ConditionalOnProperty(prefix = "common.queue", name = "type", havingValue = "netty", matchIfMissing = true)
+@ConditionalOnProperty(prefix = "common.queue", name = "type", havingValue = "netty")
 @Slf4j
 public class NettyDataQueue implements CommonDataQueue {
     

File: common/src/main/java/org/dromara/hertzbeat/common/queue/impl/InMemoryCommonDataQueue.java
Patch:
@@ -24,6 +24,7 @@
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -38,6 +39,7 @@
 @Configuration
 @ConditionalOnProperty(prefix = "common.queue", name = "type", havingValue = "memory", matchIfMissing = true)
 @Slf4j
+@Primary
 public class InMemoryCommonDataQueue implements CommonDataQueue, DisposableBean {
 
     private final LinkedBlockingQueue<Alert> alertDataQueue;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/util/AlertTemplateUtil.java
Patch:
@@ -40,6 +40,9 @@ public class AlertTemplateUtil {
     private static final Pattern PATTERN = Pattern.compile("\\$\\{(\\w+)\\}");
 
     public static String render(String template, Map<String, Object> replaceData) {
+        if (template == null) {
+            return null;  
+        }
         try {
             Matcher matcher = PATTERN.matcher(template);
             StringBuffer buffer = new StringBuffer();

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmConvergeReduce.java
Patch:
@@ -39,8 +39,8 @@ public AlarmConvergeReduce(AlertConvergeDao alertConvergeDao) {
      */
     @SuppressWarnings("unchecked")
     public boolean filterConverge(Alert currentAlert) {
-        // ignore ALERT_STATUS_CODE_RESTORED
-        if (currentAlert.getStatus() == CommonConstants.ALERT_STATUS_CODE_RESTORED) {
+        // ignore monitor status auto recover notice
+        if (currentAlert.getTags() != null && currentAlert.getTags().containsKey(CommonConstants.IGNORE)) {
             return true;
         }
         ICacheService<String, Object> convergeCache = CacheFactory.getAlertConvergeCache();

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -41,7 +41,7 @@ public void run(String... args) throws Exception {
 							.preset(true)
 							.times(1)
 							.enable(true)
-                            .recoverNotice(true)
+                            .recoverNotice(false)
 							.priority(CommonConstants.ALERT_PRIORITY_CODE_EMERGENCY)
 							.template("${app} monitoring availability alert, code is ${code}")
 							.build();

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostValid.java
Patch:
@@ -38,7 +38,7 @@
 @Constraint(validatedBy = HostParamValidator.class)
 public @interface HostValid {
 
-    String message() default "监控Host必须是ipv4,ipv6或域名";
+    String message() default "监控Host必须是ipv4,ipv6或域名,<br>EX:127.0.0.1 或者 hertzbeat.com";
 
     Class<?>[] groups() default {};
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AppService.java
Patch:
@@ -94,9 +94,11 @@ public interface AppService {
 
     /**
      * update and apply app define yml
+     *
      * @param ymlContent yml content
+     * @param isModify is modified?
      */
-    void applyMonitorDefineYml(String ymlContent);
+    void applyMonitorDefineYml(String ymlContent, boolean isModify);
 
     /**
      * delete monitor define yml

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmConvergeReduce.java
Patch:
@@ -80,6 +80,8 @@ public boolean filterConverge(Alert currentAlert) {
                             return false;
                         }
                     });
+                } else {
+                    match = true;
                 }
                 if (match && alertConverge.getPriorities() != null && !alertConverge.getPriorities().isEmpty()) {
                     match = alertConverge.getPriorities().stream().anyMatch(item -> item != null && item == currentAlert.getPriority());

File: alerter/src/main/java/org/dromara/hertzbeat/alert/reduce/AlarmSilenceReduce.java
Patch:
@@ -61,7 +61,9 @@ public boolean filterSilence(Alert alert) {
 							return false;
 						}
 					});
-				}
+				} else {
+                    match = true;
+                }
 				if (match && alertSilence.getPriorities() != null && !alertSilence.getPriorities().isEmpty()) {
 					match = alertSilence.getPriorities().stream().anyMatch(item -> item != null && item == alert.getPriority());
 				}

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/MonitorsController.java
Patch:
@@ -99,11 +99,11 @@ public ResponseEntity<Message<Page<Monitor>>> getMonitors(
 			if (StringUtils.hasText(tag)) {
 				String[] tagArr = tag.split(":");
 				String tagName = tagArr[0];
-				String tagValue = tagArr[1];
 				ListJoin<Monitor, org.dromara.hertzbeat.common.entity.manager.Tag> tagJoin = root
 						.join(root.getModel()
 								.getList("tags", org.dromara.hertzbeat.common.entity.manager.Tag.class), JoinType.LEFT);
 				if (tagArr.length == TAG_LENGTH) {
+					String tagValue = tagArr[1];
 					andList.add(criteriaBuilder.equal(tagJoin.get("name"), tagName));
 					andList.add(criteriaBuilder.equal(tagJoin.get("value"), tagValue));
 				} else {

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -175,7 +175,7 @@ private void calculate(CollectRep.MetricsData metricsData) {
                                     int defineTimes = define.getTimes() == null ? 1 : define.getTimes();
                                     if (times >= defineTimes) {
                                         triggeredAlertMap.remove(monitorAlertKey);
-                                        alarmCommonReduce.reduceAndSendAlarm(triggeredAlert);
+                                        alarmCommonReduce.reduceAndSendAlarm(triggeredAlert.clone());
                                     }
                                 } else {
                                     fieldValueMap.put("app", app);
@@ -311,7 +311,7 @@ private void handlerMonitorAvailableAlert(long monitorId, String app, CollectRep
             int defineTimes = avaAlertDefine.getTimes() == null ? 1 : avaAlertDefine.getTimes();
             if (times >= defineTimes) {
                 preAlert.setStatus(CommonConstants.ALERT_STATUS_CODE_PENDING);
-                alarmCommonReduce.reduceAndSendAlarm(preAlert);
+                alarmCommonReduce.reduceAndSendAlarm(preAlert.clone());
                 unAvailableMonitors.add(monitorId);
             } else {
                 preAlert.setStatus(CommonConstants.ALERT_STATUS_CODE_NOT_REACH);

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/GeneralConfigDao.java
Patch:
@@ -7,11 +7,9 @@
 
 /**
  * 公共服务端配置Dao
- *
+ * todo common config data cache
  * <p>该接口继承了JpaRepository和JpaSpecificationExecutor两个接口，提供基本的CRUD操作和规范查询能力。</p>
  *
- * @version 1.0
- * @since 2023/5/9 22:39
  *
  */
 @Component

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MailGeneralConfigServiceImpl.java
Patch:
@@ -15,8 +15,6 @@
  * which inherits the AbstractGeneralConfigServiceImpl<NoticeSender> class.
  *
  *
- * @version 1.0.0
- * @since 2023/5/15
  */
 
 @Service

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/MetricsCollect.java
Patch:
@@ -328,7 +328,7 @@ private void calculateFields(Metrics metrics, CollectRep.MetricsData.Builder col
     private Object[] transformCal(String cal, Map<String, String> fieldAliasMap) {
         int splitIndex = cal.indexOf("=");
         String field = cal.substring(0, splitIndex).trim();
-        String expressionStr = cal.substring(splitIndex + 1).trim();
+        String expressionStr = cal.substring(splitIndex + 1).trim().replace("\\#","#");
         Expression expression;
         try {
             expression = AviatorEvaluator.compile(expressionStr, true);

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/WeChatAppAlertNotifyHandlerImpl.java
Patch:
@@ -73,8 +73,8 @@ public void send(NoticeReceiver receiver, Alert alert) throws AlertNoticeExcepti
                 HttpEntity<WeChatAppDTO> weChatAppEntity = new HttpEntity<>(weChatAppDTO, headers);
                 ResponseEntity<WeChatAppReq> response = restTemplate.postForEntity(String.format(APP_MESSAGE_URL, accessToken), weChatAppEntity, WeChatAppReq.class);
                 if (Objects.nonNull(response.getBody()) && !Objects.equals(response.getBody().getErrCode(), 0)) {
-                    log.warn("Send Enterprise WeChat App Error: {} Failed: {}", receiver.getHookUrl(), response.getBody().getErrMsg());
-                    throw new AlertNoticeException("Http StatusCode " + response.getStatusCode());
+                    log.warn("Send Enterprise WeChat App Error: {}", response.getBody().getErrMsg());
+                    throw new AlertNoticeException("Http StatusCode " + response.getStatusCode() + " Error: " + response.getBody().getErrMsg());
                 }
             }
         } catch (Exception e) {

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -55,11 +55,11 @@ public class HistoryTdEngineDataStorage extends AbstractHistoryDataStorage {
     private static final String CREATE_SUPER_TABLE_SQL = "CREATE STABLE IF NOT EXISTS `%s` %s TAGS (monitor BIGINT)";
     private static final String NO_SUPER_TABLE_ERROR = "Table does not exist";
     private static final String QUERY_HISTORY_WITH_INSTANCE_SQL
-            = "SELECT ts, instance, `%s` FROM %s WHERE instance = %s AND ts >= now - %s order by ts desc";
+            = "SELECT ts, instance, `%s` FROM %s WHERE instance = '%s' AND ts >= now - %s order by ts desc";
     private static final String QUERY_HISTORY_SQL
             = "SELECT ts, instance, `%s` FROM %s WHERE ts >= now - %s order by ts desc";
     private static final String QUERY_HISTORY_INTERVAL_WITH_INSTANCE_SQL
-            = "SELECT first(`ts`), first(`%s`), avg(`%s`), min(`%s`), max(`%s`) FROM %s WHERE instance = %s AND ts >= now - %s interval(4h)";
+            = "SELECT first(`ts`), first(`%s`), avg(`%s`), min(`%s`), max(`%s`) FROM %s WHERE instance = '%s' AND ts >= now - %s interval(4h)";
     private static final String QUERY_INSTANCE_SQL
             = "SELECT DISTINCT instance FROM %s WHERE ts >= now - 1w";
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/WeWorkWebHookDto.java
Patch:
@@ -43,7 +43,7 @@ public class WeWorkWebHookDto {
     /**
      * 文本格式
      */
-    private static final String TEXT = "TEXT";
+    private static final String TEXT = "text";
 
     /**
      * 消息类型

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -59,7 +59,7 @@ public class HistoryTdEngineDataStorage extends AbstractHistoryDataStorage {
     private static final String QUERY_HISTORY_SQL
             = "SELECT ts, instance, `%s` FROM %s WHERE ts >= now - %s order by ts desc";
     private static final String QUERY_HISTORY_INTERVAL_WITH_INSTANCE_SQL
-            = "SELECT first(`%s`), avg(`%s`), min(`%s`), max(`%s`) FROM %s WHERE instance = %s AND ts >= now - %s interval(4h)";
+            = "SELECT first(`ts`), first(`%s`), avg(`%s`), min(`%s`), max(`%s`) FROM %s WHERE instance = %s AND ts >= now - %s interval(4h)";
     private static final String QUERY_INSTANCE_SQL
             = "SELECT DISTINCT instance FROM %s WHERE ts >= now - 1w";
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/IpDomainUtil.java
Patch:
@@ -37,7 +37,7 @@ public class IpDomainUtil {
      * 域名校验正则
      */
     private static final Pattern DOMAIN_PATTERN =
-            Pattern.compile("^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$");
+            Pattern.compile("^(?=^.{3,255}$)[_a-zA-Z0-9][-_a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-_a-zA-Z0-9]{0,62})+$");
 
     private static final String LOCALHOST = "localhost";
 

File: common/src/test/java/org/dromara/hertzbeat/common/util/IpDomainUtilTest.java
Patch:
@@ -38,6 +38,8 @@ void validateIpDomain() {
         assertTrue(IpDomainUtil.validateIpDomain("www.student.dev.com.cn"));
         assertTrue(IpDomainUtil.validateIpDomain("www.baidu.com"));
         assertTrue(IpDomainUtil.validateIpDomain("good.didi"));
+        assertTrue(IpDomainUtil.validateIpDomain("spider_rds.sogou"));
+        assertTrue(IpDomainUtil.validateIpDomain("_redis.hn.sogou"));
         assertFalse(IpDomainUtil.validateIpDomain("tmp"));
         assertFalse(IpDomainUtil.validateIpDomain("good"));
         assertFalse(IpDomainUtil.validateIpDomain("www.baidu.com."));

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/Job.java
Patch:
@@ -217,7 +217,8 @@ public synchronized Set<Metrics> getNextCollectMetrics(Metrics metrics, boolean
             if (priorMetrics.isEmpty()) {
                 return null;
             }
-            return priorMetrics.peek();
+            Set<Metrics> source = priorMetrics.peek();
+            return new HashSet<>(source);
         } else {
             return Collections.emptySet();
         }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertServiceImpl.java
Patch:
@@ -155,7 +155,7 @@ private Alert buildAlertData(AlertReport alertReport){
                 .priority(alertReport.getPriority().byteValue())
                 .status(CommonConstants.ALERT_STATUS_CODE_PENDING)
                 .tags(alertReport.getLabels())
-                .target(CommonConstants.AVAILABLE)
+                .target(alertReport.getAlertName())
                 .times(3)
                 .gmtCreate(LocalDateTime.ofInstant(Instant.ofEpochMilli(alertReport.getAlertTime()), ZoneId.systemDefault()))
                 .build();

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/redis/RedisCommonCollectImpl.java
Patch:
@@ -294,6 +294,7 @@ private Map<String, String> parseInfo(String info, Metrics metrics) {
                 .filter(it -> StringUtils.hasText(it) && !it.startsWith(SignConstants.WELL_NO) && it.contains(SignConstants.DOUBLE_MARK))
                 .map(this::removeCr)
                 .map(r -> r.split(SignConstants.DOUBLE_MARK))
+                .filter(t -> t.length > 1)
                 .forEach(it -> {
                     result.put(it[0], it[1]);
                 });

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/CollectUtil.java
Patch:
@@ -290,7 +290,8 @@ public static JsonElement replaceSmilingPlaceholder(JsonElement jsonElement, Map
                     Configmap param = configmap.get(key);
                     if (param != null && param.getType() == (byte) 3) {
                         String jsonValue = (String) param.getValue();
-                        Map<String, String> map = JsonUtil.fromJson(jsonValue, new TypeReference<>() {});
+                        TypeReference<Map<String, String>> typeReference = new TypeReference<>() {};
+                        Map<String, String> map = JsonUtil.fromJson(jsonValue, typeReference);
                         if (map != null) {
                             map.forEach((name, value) -> {
                                 if (name != null && !"".equals(name.trim())) {

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/JsonMapAttributeConverter.java
Patch:
@@ -37,6 +37,7 @@ public String convertToDatabaseColumn(Map<String, String> attribute) {
 
     @Override
     public Map<String, String> convertToEntityAttribute(String dbData) {
-        return JsonUtil.fromJson(dbData, new TypeReference<>() {});
+        TypeReference<Map<String, String>> typeReference = new TypeReference<>() {};
+        return JsonUtil.fromJson(dbData, typeReference);
     }
 }

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonByteListAttributeConverter.java
Patch:
@@ -22,6 +22,7 @@
 
 import javax.persistence.AttributeConverter;
 import java.util.List;
+import java.util.Map;
 
 /**
  * json 互转list Byte 对象字段为数据String字段
@@ -37,6 +38,7 @@ public String convertToDatabaseColumn(List<Byte> attribute) {
 
     @Override
     public List<Byte> convertToEntityAttribute(String dbData) {
-        return JsonUtil.fromJson(dbData, new TypeReference<>() {});
+        TypeReference<List<Byte>> typeReference = new TypeReference<>() {};
+        return JsonUtil.fromJson(dbData, typeReference);
     }
 }

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonOptionListAttributeConverter.java
Patch:
@@ -37,6 +37,7 @@ public String convertToDatabaseColumn(List<ParamDefine.Option> attribute) {
 
     @Override
     public List<ParamDefine.Option> convertToEntityAttribute(String dbData) {
-        return JsonUtil.fromJson(dbData, new TypeReference<>() {});
+        TypeReference<List<ParamDefine.Option>> typeReference = new TypeReference<>() {};
+        return JsonUtil.fromJson(dbData, typeReference);
     }
 }

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -17,6 +17,7 @@
 
 package org.dromara.hertzbeat.manager.service.impl;
 
+import com.fasterxml.jackson.core.type.TypeReference;
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.alert.calculate.CalculateAlarm;
 import org.dromara.hertzbeat.alert.dao.AlertDefineBindDao;
@@ -402,7 +403,7 @@ public void validate(MonitorDto monitorDto, Boolean isModify) throws IllegalArgu
                             }
                             break;
                         case "key-value":
-                            if (JsonUtil.fromJson(param.getValue()) == null) {
+                            if (JsonUtil.fromJson(param.getValue(), new TypeReference<>() {}) == null) {
                                 throw new IllegalArgumentException("Params field " + field + " value "
                                         + param.getValue() + " is invalid key-value value");
                             }

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/DiscordBotAlertNotifyHandlerImpl.java
Patch:
@@ -11,6 +11,7 @@
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
 import org.springframework.stereotype.Component;
 
 import java.util.List;
@@ -33,10 +34,10 @@ public void send(NoticeReceiver receiver, Alert alert) throws AlertNoticeExcepti
                             .description(renderContent(alert))
                             .build()))
                     .build();
-
             var url = String.format(alerterProperties.getDiscordNotifyUrl(), receiver.getDiscordChannelId());
             var headers = new HttpHeaders();
             headers.add("Authorization", "Bot " + receiver.getDiscordBotToken());
+            headers.setContentType(MediaType.APPLICATION_JSON);
             var request = new HttpEntity<>(notifyBody, headers);
             var entity = restTemplate.postForEntity(url, request, DiscordResponseDTO.class);
             if (entity.getStatusCode() == HttpStatus.OK && entity.getBody() != null) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/HuaweiCloudSmnAlertNotifyHandlerImpl.java
Patch:
@@ -41,7 +41,7 @@
 @Component
 @RequiredArgsConstructor
 @Slf4j
-final class HuaweiyunSmnAlertNotifyHandlerImpl extends AbstractAlertNotifyHandlerImpl {
+final class HuaweiCloudSmnAlertNotifyHandlerImpl extends AbstractAlertNotifyHandlerImpl {
     private final ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
 
     private final Map<String, SmnClient> smnClientMap = new ConcurrentHashMap<>();
@@ -57,7 +57,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
                     .withMessage(renderContent(alert));
             request.withBody(body);
             var response = smnClient.publishMessage(request);
-            log.debug("huaweiyun smn alert response: {}", response);
+            log.debug("huaweiCloud smn alert response: {}", response);
         } catch (Exception e) {
             throw new AlertNoticeException("[WebHook Notify Error] " + e.getMessage());
         }

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/HuaweiCloudSmnAlertNotifyHandlerImplTest.java
Patch:
@@ -31,10 +31,10 @@
  * Created by gcdd1993 on 2023/4/22
  */
 @Slf4j
-class HuaweiyunSmnAlertNotifyHandlerImplTest extends AbstractSpringIntegrationTest {
+class HuaweiCloudSmnAlertNotifyHandlerImplTest extends AbstractSpringIntegrationTest {
 
     @Resource
-    private HuaweiyunSmnAlertNotifyHandlerImpl huaweiyunSmnAlertNotifyHandler;
+    private HuaweiCloudSmnAlertNotifyHandlerImpl huaweiyunSmnAlertNotifyHandler;
 
     @Test
     void send() throws InterruptedException {
@@ -85,4 +85,4 @@ void send() throws InterruptedException {
 
         huaweiyunSmnAlertNotifyHandler.send(receiver, alert);
     }
-}
\ No newline at end of file
+}

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/controller/MetricsDataController.java
Patch:
@@ -59,9 +59,9 @@ public class MetricsDataController {
 
     private static final Integer METRIC_FULL_LENGTH = 3;
 
-    private List<AbstractRealTimeDataStorage> realTimeDataStorages;
+    private final List<AbstractRealTimeDataStorage> realTimeDataStorages;
 
-    private List<AbstractHistoryDataStorage> historyDataStorages;
+    private final List<AbstractHistoryDataStorage> historyDataStorages;
 
     public MetricsDataController(List<AbstractRealTimeDataStorage> realTimeDataStorages,
                                  List<AbstractHistoryDataStorage> historyDataStorages) {

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/unit/UnitConvert.java
Patch:
@@ -2,7 +2,7 @@
 
 /**
  * the interface of unit convert
- * 单位转换的接口类，处理com.usthe.common.entity.job.Metrics#units
+ * 单位转换的接口类，处理 org.dromara.hertzbeat.common.entity.job.Metrics#units
  *
  * @since 2022/10/03
  */
@@ -25,4 +25,4 @@ public interface UnitConvert {
      * @return true/false
      */
     boolean checkUnit(String unit);
-}
\ No newline at end of file
+}

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -265,7 +265,7 @@ public Map<String, List<Value>> getHistoryMetricData(Long monitorId, String app,
                 double value = resultSet.getDouble(3);
                 String strValue = new BigDecimal(value).setScale(4, RoundingMode.HALF_UP).stripTrailingZeros().toPlainString();
                 List<Value> valueList = instanceValuesMap.computeIfAbsent(instanceValue, k -> new LinkedList<>());
-                valueList.add(new Value(strValue, ts.getTime()));
+                valueList.add(new Value(strValue, ts.getTime() / 100 * 100));
             }
             resultSet.close();
             return instanceValuesMap;
@@ -355,7 +355,7 @@ public Map<String, List<Value>> getHistoryIntervalMetricData(Long monitorId, Str
                     Value value = Value.builder()
                             .origin(originStr).mean(avgStr)
                             .min(minStr).max(maxStr)
-                            .time(ts.getTime())
+                            .time(ts.getTime() / 100 * 100)
                             .build();
                     values.add(value);
                 }

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/AppController.java
Patch:
@@ -31,6 +31,7 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
+import javax.validation.Valid;
 import java.util.List;
 import java.util.Locale;
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
@@ -89,7 +90,7 @@ public ResponseEntity<Message<Void>> deleteAppDefineYml(
 
     @PostMapping(path = "/define/yml")
     @Operation(summary = "Save and apply monitoring type define yml", description = "保存并应用监控类型的定义YML")
-    public ResponseEntity<Message<Void>> applyAppDefineYml(@RequestBody MonitorDefineDto defineDto) {
+    public ResponseEntity<Message<Void>> applyAppDefineYml(@Valid @RequestBody MonitorDefineDto defineDto) {
         try {
             appService.applyMonitorDefineYml(defineDto.getDefine());
         } catch (Exception e) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/LoginDto.java
Patch:
@@ -22,6 +22,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+import org.hibernate.validator.constraints.Length;
 import org.hibernate.validator.constraints.Range;
 
 import javax.validation.constraints.NotBlank;
@@ -62,6 +63,7 @@ public class LoginDto {
      */
     @Schema(description = "密钥", example = "1", accessMode = READ_ONLY)
     @NotBlank(message = "Credential can not null")
+    @Length(max = 512, message = "credential max length 512")
     private String credential;
 
 }

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -55,11 +55,11 @@ public class HistoryTdEngineDataStorage extends AbstractHistoryDataStorage {
     private static final String CREATE_SUPER_TABLE_SQL = "CREATE STABLE IF NOT EXISTS `%s` %s TAGS (monitor BIGINT)";
     private static final String NO_SUPER_TABLE_ERROR = "Table does not exist";
     private static final String QUERY_HISTORY_WITH_INSTANCE_SQL
-            = "SELECT ts, instance, %s FROM %s WHERE instance = %s AND ts >= now - %s order by ts desc";
+            = "SELECT ts, instance, `%s` FROM %s WHERE instance = %s AND ts >= now - %s order by ts desc";
     private static final String QUERY_HISTORY_SQL
-            = "SELECT ts, instance, %s FROM %s WHERE ts >= now - %s order by ts desc";
+            = "SELECT ts, instance, `%s` FROM %s WHERE ts >= now - %s order by ts desc";
     private static final String QUERY_HISTORY_INTERVAL_WITH_INSTANCE_SQL
-            = "SELECT first(%s), avg(%s), min(%s), max(%s) FROM %s WHERE instance = %s AND ts >= now - %s interval(4h)";
+            = "SELECT first(`%s`), avg(`%s`), min(`%s`), max(`%s`) FROM %s WHERE instance = %s AND ts >= now - %s interval(4h)";
     private static final String QUERY_INSTANCE_SQL
             = "SELECT DISTINCT instance FROM %s WHERE ts >= now - 1w";
 

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertDefineBindDao.java
Patch:
@@ -22,6 +22,7 @@
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 
 import java.util.List;
+import java.util.Set;
 
 /**
  * AlertDefineBind database operations  数据库操作
@@ -53,7 +54,7 @@ public interface AlertDefineBindDao extends JpaRepository<AlertDefineMonitorBind
      *
      * @param monitorIds Monitoring ID List     监控ID列表
      */
-    void deleteAlertDefineMonitorBindsByMonitorIdIn(List<Long> monitorIds);
+    void deleteAlertDefineMonitorBindsByMonitorIdIn(Set<Long> monitorIds);
 
     /**
      * Query monitoring related information based on alarm definition ID

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/Monitor.java
Patch:
@@ -163,7 +163,7 @@ public class Monitor {
      *           JoinColumn  name 中间表的关联字段名称
      *                       referencedColumnName 关联表的映射字段名称
      */
-    @ManyToMany(targetEntity = Tag.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)
+    @ManyToMany(targetEntity = Tag.class, cascade = CascadeType.MERGE, fetch = FetchType.EAGER)
     @JoinTable(name = "hzb_tag_monitor_bind",
         foreignKey = @ForeignKey(ConstraintMode.NO_CONSTRAINT),
         inverseForeignKey = @ForeignKey(ConstraintMode.NO_CONSTRAINT),

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/TagDao.java
Patch:
@@ -46,5 +46,5 @@ public interface TagDao extends JpaRepository<Tag, Long>, JpaSpecificationExecut
      * @return tag list
      */
     List<Tag> findByIdIn(Set<Long> ids);
-
+    
 }

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/ssh/CommonSshClient.java
Patch:
@@ -22,11 +22,11 @@ public class CommonSshClient {
         // 接受所有服务端公钥校验，会打印warn日志 Server at {} presented unverified {} key: {}
         AcceptAllServerKeyVerifier verifier = AcceptAllServerKeyVerifier.INSTANCE;
         sshClient.setServerKeyVerifier(verifier);
-        // 设置链接保活心跳10000毫秒一次, 客户端等待保活心跳超时响应时间3000毫秒
+        // 设置链接保活心跳2000毫秒一次, 客户端等待保活心跳响应超时时间300_0000毫秒
         PropertyResolverUtils.updateProperty(
-                sshClient, CoreModuleProperties.HEARTBEAT_INTERVAL.getName(), 10000);
+                sshClient, CoreModuleProperties.HEARTBEAT_INTERVAL.getName(), 2000);
         PropertyResolverUtils.updateProperty(
-                sshClient, CoreModuleProperties.HEARTBEAT_REPLY_WAIT.getName(), 3000);
+                sshClient, CoreModuleProperties.HEARTBEAT_REPLY_WAIT.getName(), 300_000);
         sshClient.start();
     }
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/CommonDispatcher.java
Patch:
@@ -208,7 +208,7 @@ public void dispatchCollectData(Timeout timeout, Metrics metrics, CollectRep.Met
             // 若是异步的周期性循环任务,直接发送指标组的采集数据到消息中间件
             commonDataQueue.sendMetricsData(metricsData);
             if (log.isDebugEnabled()) {
-                log.debug("Cyclic Job: {}",metricsData.getMetrics());
+                log.debug("Cyclic Job: {} - {} - {}", job.getMonitorId(), job.getApp(), metricsData.getMetrics());
                 for (CollectRep.ValueRow valueRow : metricsData.getValuesList()) {
                     for (CollectRep.Field field : metricsData.getFieldsList()) {
                         log.debug("Field-->{},Value-->{}", field.getName(), valueRow.getColumns(metricsData.getFieldsList().indexOf(field)));

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/WheelTimerTask.java
Patch:
@@ -78,7 +78,7 @@ private void initJobMetrics(Job job) {
                         item.setValue(((String) item.getValue()).trim());
                     }
                 })
-                .collect(Collectors.toMap(Configmap::getKey, item -> item));
+                .collect(Collectors.toMap(Configmap::getKey, item -> item, (key1, key2) -> key1));
         List<Metrics> metrics = job.getMetrics();
         List<Metrics> metricsTmp = new ArrayList<>(metrics.size());
         for (Metrics metric : metrics) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -249,6 +249,9 @@ public void importConfig(MultipartFile file) throws IOException {
         if (fileName.toLowerCase().endsWith(ExcelImExportServiceImpl.FILE_SUFFIX)) {
             type = ExcelImExportServiceImpl.TYPE;
         }
+        if (fileName.toLowerCase().endsWith(YamlImExportServiceImpl.FILE_SUFFIX)) {
+            type = YamlImExportServiceImpl.TYPE;
+        }
         if (!imExportServiceMap.containsKey(type)) {
             throw new RuntimeException("file " + fileName + " is not supported.");
         }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/CalculateAlarm.java
Patch:
@@ -31,7 +31,7 @@
 import org.dromara.hertzbeat.alert.util.AlertTemplateUtil;
 import org.dromara.hertzbeat.common.entity.manager.Monitor;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import org.dromara.hertzbeat.common.util.ResourceBundleUtil;
 import lombok.extern.slf4j.Slf4j;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/calculate/SilenceAlarm.java
Patch:
@@ -4,11 +4,11 @@
 import org.dromara.hertzbeat.alert.dao.AlertSilenceDao;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
 import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.alerter.AlertSilence;
 import org.dromara.hertzbeat.common.entity.manager.TagItem;
 import org.dromara.hertzbeat.common.queue.CommonDataQueue;
-import org.dromara.hertzbeat.common.util.CommonConstants;
 import org.springframework.stereotype.Service;
 
 import java.time.LocalDateTime;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertDefineController.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-import static org.dromara.hertzbeat.common.util.CommonConstants.MONITOR_NOT_EXIST_CODE;
+import static org.dromara.hertzbeat.common.constants.CommonConstants.MONITOR_NOT_EXIST_CODE;
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
 
 /**

File: alerter/src/main/java/org/dromara/hertzbeat/alert/controller/AlertSilenceController.java
Patch:
@@ -29,7 +29,8 @@
 
 import javax.validation.Valid;
 
-import static org.dromara.hertzbeat.common.util.CommonConstants.MONITOR_NOT_EXIST_CODE;
+
+import static org.dromara.hertzbeat.common.constants.CommonConstants.MONITOR_NOT_EXIST_CODE;
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
 
 /**

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertServiceImpl.java
Patch:
@@ -24,7 +24,7 @@
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.alert.service.AlertService;
 import org.dromara.hertzbeat.common.entity.dto.AlertReport;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.data.domain.Page;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/impl/AlertSilenceServiceImpl.java
Patch:
@@ -5,8 +5,8 @@
 import org.dromara.hertzbeat.alert.service.AlertSilenceService;
 import org.dromara.hertzbeat.common.cache.CacheFactory;
 import org.dromara.hertzbeat.common.cache.ICacheService;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.alerter.AlertSilence;
-import org.dromara.hertzbeat.common.util.CommonConstants;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.PageRequest;

File: alerter/src/test/java/org/dromara/hertzbeat/alert/controller/AlertDefineControllerTest.java
Patch:
@@ -4,7 +4,7 @@
 import org.dromara.hertzbeat.common.entity.alerter.AlertDefine;
 import org.dromara.hertzbeat.common.entity.alerter.AlertDefineMonitorBind;
 import org.dromara.hertzbeat.common.entity.manager.Monitor;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: alerter/src/test/java/org/dromara/hertzbeat/alert/controller/AlertDefinesControllerTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.alert.service.AlertDefineService;
 import org.dromara.hertzbeat.common.entity.alerter.AlertDefine;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: alerter/src/test/java/org/dromara/hertzbeat/alert/controller/AlertsControllerTest.java
Patch:
@@ -4,7 +4,7 @@
 import org.dromara.hertzbeat.alert.service.AlertService;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.dto.AlertReport;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -24,11 +24,11 @@
 import org.dromara.hertzbeat.collector.collect.common.cache.JdbcConnect;
 import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
 import org.dromara.hertzbeat.collector.util.CollectUtil;
-import org.dromara.hertzbeat.collector.util.CollectorConstants;
+import org.dromara.hertzbeat.common.constants.CollectorConstants;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.JdbcProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.postgresql.util.PSQLException;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/ftp/FtpCollectImpl.java
Patch:
@@ -5,7 +5,7 @@
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.FtpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.net.ftp.FTPClient;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusLastParser.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.job.protocol.HttpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import lombok.NoArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusMatrixParser.java
Patch:
@@ -6,7 +6,7 @@
 import org.dromara.hertzbeat.common.entity.dto.PromVectorOrMatrix;
 import org.dromara.hertzbeat.common.entity.job.protocol.HttpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import lombok.NoArgsConstructor;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusVectorParser.java
Patch:
@@ -6,7 +6,7 @@
 import org.dromara.hertzbeat.common.entity.dto.PromVectorOrMatrix;
 import org.dromara.hertzbeat.common.entity.job.protocol.HttpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import lombok.NoArgsConstructor;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/icmp/IcmpCollectImpl.java
Patch:
@@ -19,11 +19,11 @@
 
 import org.dromara.hertzbeat.collector.collect.AbstractCollect;
 import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
-import org.dromara.hertzbeat.collector.util.CollectorConstants;
+import org.dromara.hertzbeat.common.constants.CollectorConstants;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.IcmpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/jmx/JmxCollectImpl.java
Patch:
@@ -8,7 +8,7 @@
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.JmxProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.util.StringUtils;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/mongodb/MongodbSingleCollectImpl.java
Patch:
@@ -32,7 +32,7 @@
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.MongodbProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.bson.Document;
 import org.springframework.util.Assert;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/redis/RedisCommonCollectImpl.java
Patch:
@@ -9,10 +9,10 @@
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.RedisProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import org.dromara.hertzbeat.common.util.MapCapUtil;
-import org.dromara.hertzbeat.common.util.SignConstants;
+import org.dromara.hertzbeat.common.constants.SignConstants;
 import io.lettuce.core.RedisClient;
 import io.lettuce.core.RedisConnectionException;
 import io.lettuce.core.RedisURI;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/snmp/SnmpCollectImpl.java
Patch:
@@ -20,11 +20,11 @@
 import org.dromara.hertzbeat.collector.collect.AbstractCollect;
 import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
 import org.dromara.hertzbeat.collector.util.CollectUtil;
-import org.dromara.hertzbeat.collector.util.CollectorConstants;
+import org.dromara.hertzbeat.common.constants.CollectorConstants;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.SnmpProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.snmp4j.PDU;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/ssh/SshCollectImpl.java
Patch:
@@ -22,12 +22,12 @@
 import org.dromara.hertzbeat.collector.collect.common.cache.CommonCache;
 import org.dromara.hertzbeat.collector.collect.common.ssh.CommonSshClient;
 import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
-import org.dromara.hertzbeat.collector.util.CollectorConstants;
+import org.dromara.hertzbeat.common.constants.CollectorConstants;
 import org.dromara.hertzbeat.collector.util.KeyPairUtil;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.SshProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.sshd.client.SshClient;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/telnet/TelnetCollectImpl.java
Patch:
@@ -19,11 +19,11 @@
 
 import org.dromara.hertzbeat.collector.collect.AbstractCollect;
 import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
-import org.dromara.hertzbeat.collector.util.CollectorConstants;
+import org.dromara.hertzbeat.common.constants.CollectorConstants;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.job.protocol.TelnetProtocol;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.net.telnet.TelnetClient;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/MetricsCollect.java
Patch:
@@ -28,7 +28,7 @@
 import org.dromara.hertzbeat.common.entity.job.Job;
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.CommonUtil;
 import org.dromara.hertzbeat.common.util.Pair;
 import lombok.Data;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/WheelTimerTask.java
Patch:
@@ -26,7 +26,7 @@
 import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.dromara.hertzbeat.common.support.SpringContextHolder;
 import org.dromara.hertzbeat.common.util.AesUtil;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import lombok.extern.slf4j.Slf4j;
 
 import java.util.ArrayList;

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/CollectUtil.java
Patch:
@@ -20,7 +20,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.google.gson.*;
 import org.dromara.hertzbeat.common.entity.job.Configmap;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import lombok.extern.slf4j.Slf4j;
 

File: common/src/main/java/org/dromara/hertzbeat/common/constants/CollectorConstants.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.dromara.hertzbeat.collector.util;
+package org.dromara.hertzbeat.common.constants;
 
 /**
  * collector 常量

File: common/src/main/java/org/dromara/hertzbeat/common/constants/CommonConstants.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.dromara.hertzbeat.common.util;
+package org.dromara.hertzbeat.common.constants;
 
 /**
  * Public Constant

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/Message.java
Patch:
@@ -23,7 +23,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import static org.dromara.hertzbeat.common.util.CommonConstants.SUCCESS_CODE;
+import static org.dromara.hertzbeat.common.constants.CommonConstants.SUCCESS_CODE;
 
 /**
  * Unified message structure definition for front and back ends

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/DbAlertStoreHandlerImpl.java
Patch:
@@ -20,7 +20,7 @@
 import org.dromara.hertzbeat.alert.service.AlertService;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.Monitor;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.component.alerter.AlertStoreHandler;
 import org.dromara.hertzbeat.manager.service.MonitorService;
 import lombok.RequiredArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/SmsAlertNotifyHandlerImpl.java
Patch:
@@ -20,7 +20,7 @@
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
 import org.dromara.hertzbeat.common.service.TencentSmsClient;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.ResourceBundleUtil;
 import org.dromara.hertzbeat.manager.component.alerter.AlertNotifyHandler;
 import org.dromara.hertzbeat.manager.support.exception.AlertNoticeException;

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/AccountController.java
Patch:
@@ -24,7 +24,7 @@
 import com.usthe.sureness.provider.ducument.DocumentAccountProvider;
 import com.usthe.sureness.util.JsonWebTokenUtil;
 import com.usthe.sureness.util.Md5Util;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import io.jsonwebtoken.Claims;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/AppController.java
Patch:
@@ -20,7 +20,7 @@
 import org.dromara.hertzbeat.common.entity.dto.Message;
 import org.dromara.hertzbeat.common.entity.job.Job;
 import org.dromara.hertzbeat.common.entity.manager.ParamDefine;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.pojo.dto.Hierarchy;
 import org.dromara.hertzbeat.manager.pojo.dto.MonitorDefineDto;
 import org.dromara.hertzbeat.manager.service.AppService;

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/NoticeConfigController.java
Patch:
@@ -21,7 +21,7 @@
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
 import org.dromara.hertzbeat.common.entity.manager.NoticeRule;
 import org.dromara.hertzbeat.manager.service.NoticeConfigService;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;
 import io.swagger.v3.oas.annotations.tags.Tag;

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/AvailableAlertDefineInit.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.alert.dao.AlertDefineDao;
 import org.dromara.hertzbeat.common.entity.alerter.AlertDefine;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.CommandLineRunner;
 import org.springframework.core.annotation.Order;

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MailServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.dromara.hertzbeat.alert.AlerterProperties;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.ResourceBundleUtil;
 import org.dromara.hertzbeat.manager.service.MailService;
 import lombok.extern.slf4j.Slf4j;

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -17,11 +17,11 @@
 
 package org.dromara.hertzbeat.manager.service.impl;
 
-import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.alert.calculate.CalculateAlarm;
 import org.dromara.hertzbeat.alert.dao.AlertDefineBindDao;
 import org.dromara.hertzbeat.collector.dispatch.entrance.internal.CollectJobService;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.entity.job.Configmap;
 import org.dromara.hertzbeat.common.entity.job.Job;
 import org.dromara.hertzbeat.common.entity.job.Metrics;

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/NoticeConfigServiceImpl.java
Patch:
@@ -20,7 +20,7 @@
 import org.dromara.hertzbeat.common.cache.CacheFactory;
 import org.dromara.hertzbeat.common.cache.ICacheService;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.component.alerter.DispatcherAlarm;
 import org.dromara.hertzbeat.manager.dao.NoticeReceiverDao;
 import org.dromara.hertzbeat.manager.dao.NoticeRuleDao;

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/GlobalExceptionHandler.java
Patch:
@@ -22,7 +22,7 @@
 import org.dromara.hertzbeat.manager.support.exception.MonitorDatabaseException;
 import org.dromara.hertzbeat.manager.support.exception.MonitorDetectException;
 import org.dromara.hertzbeat.manager.support.exception.MonitorMetricsException;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.HttpStatus;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/DingTalkRobotAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/DiscordBotAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/FlyBookAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/SlackAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/TelegramBotAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/WeChatAppAlertNotifyHandlerImplTest.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import org.junit.jupiter.api.Test;
 import org.springframework.util.StringUtils;

File: manager/src/test/java/org/dromara/hertzbeat/manager/component/alerter/impl/WeWorkRobotAlertNotifyHandlerImplTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.alerter.Alert;
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.AbstractSpringIntegrationTest;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/AccountControllerTest.java
Patch:
@@ -1,6 +1,6 @@
 package org.dromara.hertzbeat.manager.controller;
 
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.pojo.dto.LoginDto;
 import com.usthe.sureness.util.JsonWebTokenUtil;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/AppControllerTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.job.Job;
 import org.dromara.hertzbeat.common.entity.manager.ParamDefine;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.pojo.dto.Hierarchy;
 import org.dromara.hertzbeat.manager.service.impl.AppServiceImpl;
 import org.junit.jupiter.api.BeforeEach;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/I18nControllerTest.java
Patch:
@@ -1,6 +1,6 @@
 package org.dromara.hertzbeat.manager.controller;
 
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.service.impl.AppServiceImpl;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/MonitorControllerTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.manager.Monitor;
 import org.dromara.hertzbeat.common.entity.manager.Param;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.pojo.dto.MonitorDto;
 import org.dromara.hertzbeat.manager.service.impl.MonitorServiceImpl;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/MonitorsControllerTest.java
Patch:
@@ -1,6 +1,6 @@
 package org.dromara.hertzbeat.manager.controller;
 
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.service.impl.MonitorServiceImpl;
 import org.junit.jupiter.api.BeforeEach;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/NoticeConfigControllerTest.java
Patch:
@@ -1,9 +1,9 @@
 package org.dromara.hertzbeat.manager.controller;
 
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
-import org.dromara.hertzbeat.common.entity.manager.NoticeRule;
 import org.dromara.hertzbeat.common.entity.manager.TagItem;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.entity.manager.NoticeRule;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.service.impl.NoticeConfigServiceImpl;
 import org.junit.jupiter.api.BeforeEach;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/SummaryControllerTest.java
Patch:
@@ -1,6 +1,6 @@
 package org.dromara.hertzbeat.manager.controller;
 
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.pojo.dto.AppCount;
 import org.dromara.hertzbeat.manager.service.impl.MonitorServiceImpl;
 import org.junit.jupiter.api.BeforeEach;

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/TagControllerTest.java
Patch:
@@ -1,7 +1,7 @@
 package org.dromara.hertzbeat.manager.controller;
 
 import org.dromara.hertzbeat.common.entity.manager.Tag;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.service.impl.TagServiceImpl;
 import org.junit.jupiter.api.BeforeEach;

File: manager/src/test/java/org/dromara/hertzbeat/manager/service/MonitorServiceTest.java
Patch:
@@ -10,7 +10,7 @@
 import org.dromara.hertzbeat.common.entity.manager.Param;
 import org.dromara.hertzbeat.common.entity.manager.ParamDefine;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.manager.dao.MonitorDao;
 import org.dromara.hertzbeat.manager.dao.ParamDao;
 import org.dromara.hertzbeat.manager.pojo.dto.AppCount;

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/controller/MetricsDataController.java
Patch:
@@ -24,7 +24,7 @@
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.dto.ValueRow;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.warehouse.store.AbstractHistoryDataStorage;
 import org.dromara.hertzbeat.warehouse.store.AbstractRealTimeDataStorage;
 import org.dromara.hertzbeat.warehouse.store.HistoryJpaDatabaseDataStorage;
@@ -43,7 +43,7 @@
 import java.util.Map;
 import java.util.stream.Collectors;
 
-import static org.dromara.hertzbeat.common.util.CommonConstants.FAIL_CODE;
+import static org.dromara.hertzbeat.common.constants.CommonConstants.FAIL_CODE;
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
 
 /**

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryGrepTimeDbDataStorage.java
Patch:
@@ -22,7 +22,7 @@
 import org.apache.arrow.flight.FlightRuntimeException;
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.TimePeriodUtil;
 import org.dromara.hertzbeat.warehouse.config.WarehouseProperties;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryIotDbDataStorage.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.warehouse.config.IotDbVersion;
 import org.dromara.hertzbeat.warehouse.config.WarehouseProperties;
 import lombok.extern.slf4j.Slf4j;

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryJpaDatabaseDataStorage.java
Patch:
@@ -20,7 +20,7 @@
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
 import org.dromara.hertzbeat.common.entity.warehouse.History;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.common.util.TimePeriodUtil;
 import org.dromara.hertzbeat.warehouse.config.WarehouseProperties;
 import org.dromara.hertzbeat.warehouse.dao.HistoryDao;

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.warehouse.config.WarehouseProperties;
 import com.zaxxer.hikari.HikariConfig;
 import com.zaxxer.hikari.HikariDataSource;

File: warehouse/src/test/java/org/dromara/hertzbeat/warehouse/controller/MetricsDataControllerTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.dto.Value;
 import org.dromara.hertzbeat.common.entity.message.CollectRep;
-import org.dromara.hertzbeat.common.util.CommonConstants;
+import org.dromara.hertzbeat.common.constants.CommonConstants;
 import org.dromara.hertzbeat.warehouse.store.AbstractHistoryDataStorage;
 import org.dromara.hertzbeat.warehouse.store.AbstractRealTimeDataStorage;
 import org.junit.jupiter.api.BeforeEach;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/warehouse/History.java
Patch:
@@ -49,13 +49,14 @@ public class History {
     private String metric;
 
     @Schema(title = "实例")
+    @Column(length = 2048)
     private String instance;
 
     @Schema(title = "字段类型 0: 数值 1：字符串")
     private Byte metricType;
 
     @Schema(title = "字符值")
-    @Column(length = 1024)
+    @Column(length = 2048)
     private String str;
 
     @Schema(title = "数值")

File: manager/src/test/java/org/dromara/hertzbeat/manager/controller/NoticeConfigControllerTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
 import org.dromara.hertzbeat.common.entity.manager.NoticeRule;
+import org.dromara.hertzbeat.common.entity.manager.TagItem;
 import org.dromara.hertzbeat.common.util.CommonConstants;
 import org.dromara.hertzbeat.common.util.JsonUtil;
 import org.dromara.hertzbeat.manager.service.impl.NoticeConfigServiceImpl;
@@ -39,8 +40,8 @@ class NoticeConfigControllerTest {
 
 
     public NoticeRule getNoticeRule(){
-        List<NoticeRule.TagItem> tags = new ArrayList<>();
-        NoticeRule.TagItem tagItem = new NoticeRule.TagItem();
+        List<TagItem> tags = new ArrayList<>();
+        TagItem tagItem = new TagItem();
         tagItem.setName("key1");
         tagItem.setValue("value1");
         tags.add(tagItem);

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/exporter/ExporterParser.java
Patch:
@@ -376,6 +376,7 @@ private String readTokenAsLabelValue(StrBuffer buffer) {
                     default:
                         throw new ParseException("parse label value error");
                 }
+                escaped = false;
             } else {
                 switch (c) {
                     case QUOTES:

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/JsonImExportServiceImpl.java
Patch:
@@ -70,7 +70,7 @@ public String type() {
 
     @Override
     public String getFileName() {
-        return fileNamePrefix() + ".json";
+        return fileNamePrefix() + FILE_SUFFIX;
     }
 
 }

File: warehouse/src/main/java/org/dromara/hertzbeat/warehouse/store/HistoryIotDbDataStorage.java
Patch:
@@ -127,7 +127,7 @@ private boolean initIotDbSession(WarehouseProperties.StoreProperties.IotDbProper
 
     private boolean checkConnection() {
         try {
-            this.sessionPool.executeNonQueryStatement(SHOW_STORAGE_GROUP);
+            this.sessionPool.executeQueryStatement(SHOW_STORAGE_GROUP);
             return true;
         } catch (Exception e) {
             log.error(e.getMessage(), e);

File: alerter/src/main/java/org/dromara/hertzbeat/alert/AlerterProperties.java
Patch:
@@ -69,18 +69,21 @@ public class AlerterProperties {
      * 告警评估时间间隔起始基数 每下一次乘2 单位毫秒
      * base of alert eval interval time, unit:ms. The next time is 2 times the previous time.
      */
+    @Deprecated
     private long alertEvalIntervalBase = 1000 * 60 * 10L;
 
     /**
      * 最大告警评估时间间隔 单位毫秒
      * max of alert eval interval time, unit:ms
      */
+    @Deprecated
     private long maxAlertEvalInterval = 1000 * 60 * 60 * 24L;
 
     /**
      * 系统内置告警(available alert, reachable alert...)触发次数
      * system alert(available alert, reachable alert...) trigger times
      */
+    @Deprecated
     private int systemAlertTriggerTimes = 1;
 
     /**

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/Job.java
Patch:
@@ -52,8 +52,6 @@
 @Slf4j
 public class Job {
 
-    private static final String AVAILABILITY = "availability";
-
     /**
      * Task id      任务ID
      */

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/impl/AppServiceImpl.java
Patch:
@@ -69,7 +69,7 @@ public class AppServiceImpl implements AppService, CommandLineRunner {
 
     @Override
     public List<ParamDefine> getAppParamDefines(String app) {
-        if (app == null) {
+        if (app == null || app.chars().allMatch(Character::isSpaceChar)) {
             return Collections.emptyList();
         }
         Job appDefine = appDefines.get(app.toLowerCase());
@@ -82,7 +82,7 @@ public List<ParamDefine> getAppParamDefines(String app) {
 
     @Override
     public Job getAppDefine(String app) throws IllegalArgumentException {
-        if (app == null) {
+        if (app == null || app.chars().allMatch(Character::isSpaceChar)) {
             throw new IllegalArgumentException("The app can not null.");
         }
         Job appDefine = appDefines.get(app.toLowerCase());

File: alerter/src/main/java/org/dromara/hertzbeat/alert/AlerterProperties.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert;
+package org.dromara.hertzbeat.alert;
 
 import lombok.Getter;
 import lombok.Setter;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/AlerterWorkerPool.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert;
+package org.dromara.hertzbeat.alert;
 
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
 import lombok.extern.slf4j.Slf4j;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/config/AlerterAutoConfiguration.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.config;
+package org.dromara.hertzbeat.alert.config;
 
 import org.springframework.context.annotation.ComponentScan;
 
@@ -24,6 +24,6 @@
  * @version 2.1
  * Created by Musk.Chen on 2023/1/14
  */
-@ComponentScan(basePackages = "com.usthe.alert")
+@ComponentScan(basePackages = "org.dromara.hertzbeat.alert")
 public class AlerterAutoConfiguration {
 }

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertDefineBindDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.dao;
+package org.dromara.hertzbeat.alert.dao;
 
-import com.usthe.common.entity.alerter.AlertDefineMonitorBind;
+import org.dromara.hertzbeat.common.entity.alerter.AlertDefineMonitorBind;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertDefineDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.dao;
+package org.dromara.hertzbeat.alert.dao;
 
-import com.usthe.common.entity.alerter.AlertDefine;
+import org.dromara.hertzbeat.common.entity.alerter.AlertDefine;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 import org.springframework.data.jpa.repository.Query;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dao/AlertMonitorDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.dao;
+package org.dromara.hertzbeat.alert.dao;
 
-import com.usthe.common.entity.manager.Monitor;
+import org.dromara.hertzbeat.common.entity.manager.Monitor;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dto/AlertPriorityNum.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.dto;
+package org.dromara.hertzbeat.alert.dto;
 
 import lombok.AllArgsConstructor;
 import lombok.Data;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/dto/AlertSummary.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.dto;
+package org.dromara.hertzbeat.alert.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/service/AlertDefineService.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.service;
+package org.dromara.hertzbeat.alert.service;
 
-import com.usthe.common.entity.alerter.AlertDefine;
-import com.usthe.common.entity.alerter.AlertDefineMonitorBind;
+import org.dromara.hertzbeat.common.entity.alerter.AlertDefine;
+import org.dromara.hertzbeat.common.entity.alerter.AlertDefineMonitorBind;
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.PageRequest;
 import org.springframework.data.jpa.domain.Specification;

File: alerter/src/main/java/org/dromara/hertzbeat/alert/util/AlertTemplateUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.alert.util;
+package org.dromara.hertzbeat.alert.util;
 
 import lombok.extern.slf4j.Slf4j;
 

File: alerter/src/test/java/org/dromara/hertzbeat/alert/AlerterWorkerPoolTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.alert;
+package org.dromara.hertzbeat.alert;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 

File: alerter/src/test/java/org/dromara/hertzbeat/alert/service/AlertServiceTest.java
Patch:
@@ -1,10 +1,8 @@
-package com.usthe.alert.service;
+package org.dromara.hertzbeat.alert.service;
 
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-import static org.junit.jupiter.api.Assertions.*;
-
 /**
  * Test case for {@link AlertService}
  */

File: alerter/src/test/java/org/dromara/hertzbeat/alert/util/AlertTemplateUtilTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.alert.util;
+package org.dromara.hertzbeat.alert.util;
 
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/AbstractCollect.java
Patch:
@@ -15,11 +15,11 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect;
+package org.dromara.hertzbeat.collector.collect;
 
 
-import com.usthe.common.entity.job.Metrics;
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.job.Metrics;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 
 /**
  * Specific indicator group collection implementation abstract class

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/AbstractParseResponse.java
Patch:
@@ -1,7 +1,7 @@
-package com.usthe.collector.collect;
+package org.dromara.hertzbeat.collector.collect;
 
-import com.usthe.common.entity.job.protocol.HttpProtocol;
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.job.protocol.HttpProtocol;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 import org.springframework.beans.factory.InitializingBean;
 
 import java.util.List;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CacheCloseable.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 /**
  * 连接资源关闭回调接口

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CacheIdentifier.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import lombok.Builder;
 import lombok.Data;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/CommonCache.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 
 import com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/JdbcConnect.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import lombok.extern.slf4j.Slf4j;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/JmxConnect.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import lombok.extern.slf4j.Slf4j;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/MongodbConnect.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import com.mongodb.client.MongoClient;
 import lombok.extern.slf4j.Slf4j;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/cache/RedisConnect.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import io.lettuce.core.api.StatefulConnection;
 import lombok.extern.slf4j.Slf4j;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/http/CommonHttpClient.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.common.http;
+package org.dromara.hertzbeat.collector.collect.common.http;
 
 import lombok.extern.slf4j.Slf4j;
 import org.apache.http.client.config.RequestConfig;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/common/ssh/CommonSshClient.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.common.ssh;
+package org.dromara.hertzbeat.collector.collect.common.ssh;
 
 import lombok.extern.slf4j.Slf4j;
 import org.apache.sshd.client.SshClient;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/database/JdbcSpiLoader.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.database;
+package org.dromara.hertzbeat.collector.collect.database;
 
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.CommandLineRunner;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/AbstractPrometheusParse.java
Patch:
@@ -1,7 +1,7 @@
-package com.usthe.collector.collect.http.promethus;
+package org.dromara.hertzbeat.collector.collect.http.promethus;
 
-import com.usthe.common.entity.job.protocol.HttpProtocol;
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.job.protocol.HttpProtocol;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 
 import java.util.List;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/ParseException.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.http.promethus;
+package org.dromara.hertzbeat.collector.collect.http.promethus;
 
 /**
  *

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/PrometheusParseCreater.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.http.promethus;
+package org.dromara.hertzbeat.collector.collect.http.promethus;
 
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.InitializingBean;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/exporter/ExporterParser.java
Patch:
@@ -1,7 +1,7 @@
-package com.usthe.collector.collect.http.promethus.exporter;
+package org.dromara.hertzbeat.collector.collect.http.promethus.exporter;
 
-import com.usthe.collector.collect.http.promethus.ParseException;
-import com.usthe.common.util.StrBuffer;
+import org.dromara.hertzbeat.collector.collect.http.promethus.ParseException;
+import org.dromara.hertzbeat.common.util.StrBuffer;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.util.StringUtils;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/exporter/MetricFamily.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.http.promethus.exporter;
+package org.dromara.hertzbeat.collector.collect.http.promethus.exporter;
 
 import lombok.Data;
 import lombok.ToString;

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/http/promethus/exporter/MetricType.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.http.promethus.exporter;
+package org.dromara.hertzbeat.collector.collect.http.promethus.exporter;
 
 /**
  * prometheus metrics type

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/strategy/CollectStrategyFactory.java
Patch:
@@ -1,6 +1,6 @@
-package com.usthe.collector.collect.strategy;
+package org.dromara.hertzbeat.collector.collect.strategy;
 
-import com.usthe.collector.collect.AbstractCollect;
+import org.dromara.hertzbeat.collector.collect.AbstractCollect;
 import org.springframework.boot.CommandLineRunner;
 import org.springframework.context.annotation.Configuration;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/collect/strategy/ParseStrategyFactory.java
Patch:
@@ -1,7 +1,7 @@
-package com.usthe.collector.collect.strategy;
+package org.dromara.hertzbeat.collector.collect.strategy;
 
-import com.usthe.collector.collect.AbstractParseResponse;
-import com.usthe.collector.dispatch.DispatchConstants;
+import org.dromara.hertzbeat.collector.collect.AbstractParseResponse;
+import org.dromara.hertzbeat.collector.dispatch.DispatchConstants;
 import org.springframework.util.StringUtils;
 
 import java.util.concurrent.ConcurrentHashMap;

File: collector/src/main/java/org/dromara/hertzbeat/collector/config/CollectorAutoConfiguration.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.config;
+package org.dromara.hertzbeat.collector.config;
 
 import org.springframework.context.annotation.ComponentScan;
 
@@ -24,6 +24,6 @@
  * @version 2.1
  * Created by Musk.Chen on 2023/1/14
  */
-@ComponentScan(basePackages = "com.usthe.collector")
+@ComponentScan(basePackages = "org.dromara.hertzbeat.collector")
 public class CollectorAutoConfiguration {
 }

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/DispatchConstants.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch;
+package org.dromara.hertzbeat.collector.dispatch;
 
 /**
  * dispatch  constant 常量

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/DispatchProperties.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch;
+package org.dromara.hertzbeat.collector.dispatch;
 
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.stereotype.Component;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/MetricsCollectorQueue.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch;
+package org.dromara.hertzbeat.collector.dispatch;
 
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Component;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/MetricsTaskDispatch.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch;
+package org.dromara.hertzbeat.collector.dispatch;
 
-import com.usthe.collector.dispatch.timer.Timeout;
+import org.dromara.hertzbeat.collector.dispatch.timer.Timeout;
 
 /**
  * Metric group collection task scheduler interface

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/WorkerPool.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch;
+package org.dromara.hertzbeat.collector.dispatch;
 
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
 import lombok.extern.slf4j.Slf4j;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/entrance/internal/CollectResponseEventListener.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch.entrance.internal;
+package org.dromara.hertzbeat.collector.dispatch.entrance.internal;
 
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 
 import java.util.EventListener;
 import java.util.List;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/HashedWheelTimer.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch.timer;
+package org.dromara.hertzbeat.collector.dispatch.timer;
 
 
 import org.slf4j.Logger;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/Timeout.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch.timer;
+package org.dromara.hertzbeat.collector.dispatch.timer;
 
 /**
  * A handle associated with a {@link TimerTask} that is returned by a

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/Timer.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch.timer;
+package org.dromara.hertzbeat.collector.dispatch.timer;
 
 import java.util.Set;
 import java.util.concurrent.TimeUnit;

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/timer/TimerTask.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.dispatch.timer;
+package org.dromara.hertzbeat.collector.dispatch.timer;
 
 import java.util.concurrent.TimeUnit;
 

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/unit/DataUnit.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.dispatch.unit;
+package org.dromara.hertzbeat.collector.dispatch.unit;
 
 /**
  * the enum of data size

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/unit/UnitConvert.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.dispatch.unit;
+package org.dromara.hertzbeat.collector.dispatch.unit;
 
 /**
  * the interface of unit convert

File: collector/src/main/java/org/dromara/hertzbeat/collector/dispatch/unit/impl/DataSizeConvert.java
Patch:
@@ -1,7 +1,7 @@
-package com.usthe.collector.dispatch.unit.impl;
+package org.dromara.hertzbeat.collector.dispatch.unit.impl;
 
-import com.usthe.collector.dispatch.unit.DataUnit;
-import com.usthe.collector.dispatch.unit.UnitConvert;
+import org.dromara.hertzbeat.collector.dispatch.unit.DataUnit;
+import org.dromara.hertzbeat.collector.dispatch.unit.UnitConvert;
 import org.springframework.stereotype.Component;
 
 import java.math.BigDecimal;

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/CollectorConstants.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 /**
  * collector 常量

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/JsonPathParser.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 import com.jayway.jsonpath.*;
 import com.jayway.jsonpath.spi.cache.CacheProvider;

File: collector/src/main/java/org/dromara/hertzbeat/collector/util/KeyPairUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 import lombok.experimental.UtilityClass;
 import lombok.extern.slf4j.Slf4j;

File: collector/src/test/java/org/dromara/hertzbeat/collector/collect/common/cache/CommonCacheTest.java
Patch:
@@ -1,11 +1,9 @@
-package com.usthe.collector.collect.common.cache;
+package org.dromara.hertzbeat.collector.collect.common.cache;
 
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-import static org.junit.jupiter.api.Assertions.*;
-
 /**
  * Test case for {@link CommonCache}
  */

File: collector/src/test/java/org/dromara/hertzbeat/collector/collect/http/promethus/exporter/ExporterParserTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.collect.http.promethus.exporter;
+package org.dromara.hertzbeat.collector.collect.http.promethus.exporter;
 
 import org.junit.jupiter.api.Test;
 

File: collector/src/test/java/org/dromara/hertzbeat/collector/collect/telnet/TelnetCollectImplTest.java
Patch:
@@ -15,9 +15,8 @@
  * limitations under the License.
  */
 
-package com.usthe.collector.collect.telnet;
+package org.dromara.hertzbeat.collector.collect.telnet;
 
-import com.usthe.collector.collect.common.cache.CommonCache;
 import org.apache.commons.net.telnet.TelnetClient;
 import org.junit.jupiter.api.Test;
 

File: collector/src/test/java/org/dromara/hertzbeat/collector/util/CollectUtilTest.java
Patch:
@@ -1,9 +1,9 @@
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 import com.google.gson.Gson;
 import com.google.gson.JsonElement;
-import com.usthe.common.entity.job.Configmap;
-import com.usthe.common.entity.job.Metrics;
+import org.dromara.hertzbeat.common.entity.job.Configmap;
+import org.dromara.hertzbeat.common.entity.job.Metrics;
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;

File: collector/src/test/java/org/dromara/hertzbeat/collector/util/JsonPathParserTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 import com.jayway.jsonpath.TypeRef;
 import org.junit.jupiter.api.BeforeEach;

File: collector/src/test/java/org/dromara/hertzbeat/collector/util/KeyPairUtilTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.collector.util;
+package org.dromara.hertzbeat.collector.util;
 
 import org.apache.commons.codec.binary.Base64;
 import org.junit.jupiter.api.BeforeEach;

File: common/src/main/java/org/dromara/hertzbeat/common/config/AviatorConfiguration.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.config;
+package org.dromara.hertzbeat.common.config;
 
 import com.googlecode.aviator.AviatorEvaluator;
 import com.googlecode.aviator.lexer.token.OperatorType;

File: common/src/main/java/org/dromara/hertzbeat/common/config/CommonConfig.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.config;
+package org.dromara.hertzbeat.common.config;
 
-import com.usthe.common.util.AesUtil;
+import org.dromara.hertzbeat.common.util.AesUtil;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.ComponentScan;
 import org.springframework.context.annotation.Configuration;
@@ -26,7 +26,7 @@
  *
  *
  */
-@ComponentScan(basePackages = "com.usthe.common")
+@ComponentScan(basePackages = "org.dromara.hertzbeat.common")
 @EnableConfigurationProperties(CommonProperties.class)
 @Configuration
 public class CommonConfig {

File: common/src/main/java/org/dromara/hertzbeat/common/config/CommonProperties.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.config;
+package org.dromara.hertzbeat.common.config;
 
 import org.springframework.boot.context.properties.ConfigurationProperties;
 

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/Alert.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.alerter;
+package org.dromara.hertzbeat.common.entity.alerter;
 
-import com.usthe.common.util.GsonUtil;
+import org.dromara.hertzbeat.common.util.GsonUtil;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/AlertDefine.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.alerter;
+package org.dromara.hertzbeat.common.entity.alerter;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/AlertDefineMonitorBind.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.alerter;
+package org.dromara.hertzbeat.common.entity.alerter;
 
-import com.usthe.common.entity.manager.Monitor;
+import org.dromara.hertzbeat.common.entity.manager.Monitor;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/alerter/JsonMapAttributeConverter.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.alerter;
+package org.dromara.hertzbeat.common.entity.alerter;
 
 import com.google.gson.reflect.TypeToken;
-import com.usthe.common.util.GsonUtil;
+import org.dromara.hertzbeat.common.util.GsonUtil;
 
 import javax.persistence.AttributeConverter;
 import java.lang.reflect.Type;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/AlertReport.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/Field.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/Message.java
Patch:
@@ -15,15 +15,15 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import static com.usthe.common.util.CommonConstants.SUCCESS_CODE;
+import static org.dromara.hertzbeat.common.util.CommonConstants.SUCCESS_CODE;
 
 /**
  * Unified message structure definition for front and back ends

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/MetricsData.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/MetricsHistoryData.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/PromVectorOrMatrix.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import com.google.gson.JsonObject;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/Value.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/dto/ValueRow.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.dto;
+package org.dromara.hertzbeat.common.entity.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/Configmap.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job;
+package org.dromara.hertzbeat.common.entity.job;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/Metrics.java
Patch:
@@ -15,16 +15,16 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job;
+package org.dromara.hertzbeat.common.entity.job;
 
 import com.fasterxml.jackson.annotation.JsonIgnore;
-import com.usthe.common.entity.job.protocol.*;
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
+import org.dromara.hertzbeat.common.entity.job.protocol.*;
 
 import java.util.List;
 import java.util.Objects;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/FtpProtocol.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/HttpProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/IcmpProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/JdbcProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/JmxProtocol.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/MongodbProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/RedisProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/SnmpProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/SshProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/TcpUdpProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/job/protocol/TelnetProtocol.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.job.protocol;
+package org.dromara.hertzbeat.common.entity.job.protocol;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonByteListAttributeConverter.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import com.google.gson.reflect.TypeToken;
-import com.usthe.common.util.GsonUtil;
+import org.dromara.hertzbeat.common.util.GsonUtil;
 
 import javax.persistence.AttributeConverter;
 import java.lang.reflect.Type;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonOptionListAttributeConverter.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import com.google.gson.reflect.TypeToken;
-import com.usthe.common.util.GsonUtil;
+import org.dromara.hertzbeat.common.util.GsonUtil;
 
 import javax.persistence.AttributeConverter;
 import java.lang.reflect.Type;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/JsonTagListAttributeConverter.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import com.google.gson.reflect.TypeToken;
-import com.usthe.common.util.GsonUtil;
+import org.dromara.hertzbeat.common.util.GsonUtil;
 
 import javax.persistence.AttributeConverter;
 import java.lang.reflect.Type;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/Monitor.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
-import com.usthe.common.support.valid.HostValid;
+import org.dromara.hertzbeat.common.support.valid.HostValid;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/NoticeReceiver.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/NoticeRule.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/Param.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/ParamDefine.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
-import com.usthe.common.entity.alerter.JsonMapAttributeConverter;
+import org.dromara.hertzbeat.common.entity.alerter.JsonMapAttributeConverter;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/Tag.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/manager/TagMonitorBind.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.entity.manager;
+package org.dromara.hertzbeat.common.entity.manager;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/entity/warehouse/History.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.entity.warehouse;
+package org.dromara.hertzbeat.common.entity.warehouse;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: common/src/main/java/org/dromara/hertzbeat/common/model/ServicePodModel.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.model;
+package org.dromara.hertzbeat.common.model;
 
 import lombok.Getter;
 import lombok.Setter;

File: common/src/main/java/org/dromara/hertzbeat/common/queue/CommonDataQueue.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.common.queue;
+package org.dromara.hertzbeat.common.queue;
 
-import com.usthe.common.entity.alerter.Alert;
-import com.usthe.common.entity.message.CollectRep;
+import org.dromara.hertzbeat.common.entity.alerter.Alert;
+import org.dromara.hertzbeat.common.entity.message.CollectRep;
 
 /**
  * common data queue

File: common/src/main/java/org/dromara/hertzbeat/common/service/TencentSmsClient.java
Patch:
@@ -1,12 +1,12 @@
-package com.usthe.common.service;
+package org.dromara.hertzbeat.common.service;
 
 import com.tencentcloudapi.common.Credential;
 import com.tencentcloudapi.sms.v20210111.SmsClient;
 import com.tencentcloudapi.sms.v20210111.models.SendSmsRequest;
 import com.tencentcloudapi.sms.v20210111.models.SendSmsResponse;
 import com.tencentcloudapi.sms.v20210111.models.SendStatus;
-import com.usthe.common.config.CommonProperties;
-import com.usthe.common.support.exception.SendMessageException;
+import org.dromara.hertzbeat.common.config.CommonProperties;
+import org.dromara.hertzbeat.common.support.exception.SendMessageException;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.stereotype.Component;

File: common/src/main/java/org/dromara/hertzbeat/common/support/ResourceBundleUtf8Control.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support;
+package org.dromara.hertzbeat.common.support;
 
 import java.io.IOException;
 import java.io.InputStream;

File: common/src/main/java/org/dromara/hertzbeat/common/support/SpringContextHolder.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support;
+package org.dromara.hertzbeat.common.support;
 
 import org.springframework.beans.BeansException;
 import org.springframework.context.ApplicationContext;

File: common/src/main/java/org/dromara/hertzbeat/common/support/exception/SendMessageException.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.support.exception;
+package org.dromara.hertzbeat.common.support.exception;
 
 /**
  * send message exception

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/EmailParamValidator.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
-import com.usthe.common.util.CommonUtil;
+import org.dromara.hertzbeat.common.util.CommonUtil;
 
 import javax.validation.ConstraintValidator;
 import javax.validation.ConstraintValidatorContext;

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/EmailValid.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
 import javax.validation.Constraint;
 import javax.validation.Payload;

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostParamValidator.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
-import com.usthe.common.util.IpDomainUtil;
+import org.dromara.hertzbeat.common.util.IpDomainUtil;
 
 import javax.validation.ConstraintValidator;
 import javax.validation.ConstraintValidatorContext;

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/HostValid.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
 import javax.validation.Constraint;
 import javax.validation.Payload;

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/PhoneNumParamValidator.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
-import com.usthe.common.util.CommonUtil;
+import org.dromara.hertzbeat.common.util.CommonUtil;
 
 import javax.validation.ConstraintValidator;
 import javax.validation.ConstraintValidatorContext;

File: common/src/main/java/org/dromara/hertzbeat/common/support/valid/PhoneNumValid.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.support.valid;
+package org.dromara.hertzbeat.common.support.valid;
 
 import javax.validation.Constraint;
 import javax.validation.Payload;

File: common/src/main/java/org/dromara/hertzbeat/common/util/AesUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import lombok.extern.slf4j.Slf4j;
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/Base64Util.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import java.util.Base64;
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/CommonConstants.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  * Public Constant

File: common/src/main/java/org/dromara/hertzbeat/common/util/CommonUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import lombok.extern.slf4j.Slf4j;
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/GsonUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;

File: common/src/main/java/org/dromara/hertzbeat/common/util/IntervalExpressionUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import lombok.extern.slf4j.Slf4j;
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/IpDomainUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import lombok.extern.slf4j.Slf4j;
 import org.apache.http.conn.util.InetAddressUtils;

File: common/src/main/java/org/dromara/hertzbeat/common/util/LruHashMap.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import java.util.LinkedHashMap;
 import java.util.Map;

File: common/src/main/java/org/dromara/hertzbeat/common/util/MapCapUtil.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  * map initial capacity calculation

File: common/src/main/java/org/dromara/hertzbeat/common/util/Pair.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  * Pair类(简写)，类似java.util.Map.Entry，只包含一个K、V

File: common/src/main/java/org/dromara/hertzbeat/common/util/ProtoJsonUtil.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import com.google.protobuf.Message;
 import com.google.protobuf.util.JsonFormat;

File: common/src/main/java/org/dromara/hertzbeat/common/util/ResourceBundleUtil.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
-import com.usthe.common.support.ResourceBundleUtf8Control;
+import org.dromara.hertzbeat.common.support.ResourceBundleUtf8Control;
 import lombok.extern.slf4j.Slf4j;
 
 import java.util.Locale;

File: common/src/main/java/org/dromara/hertzbeat/common/util/SignConstants.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  * 特殊服务常量

File: common/src/main/java/org/dromara/hertzbeat/common/util/SnowFlakeIdGenerator.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  * Snowflake Algorithm Generator Tool

File: common/src/main/java/org/dromara/hertzbeat/common/util/SnowFlakeIdWorker.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import lombok.extern.slf4j.Slf4j;
 

File: common/src/main/java/org/dromara/hertzbeat/common/util/StrBuffer.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 /**
  *

File: common/src/main/java/org/dromara/hertzbeat/common/util/TimePeriodUtil.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
 import java.time.Duration;
 import java.time.Period;

File: common/src/test/java/org/dromara/hertzbeat/common/queue/CommonDataQueueTest.java
Patch:
@@ -1,11 +1,9 @@
-package com.usthe.common.queue;
+package org.dromara.hertzbeat.common.queue;
 
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-import static org.junit.jupiter.api.Assertions.*;
-
 /**
  * Test case for {@link CommonDataQueue}
  */

File: common/src/test/java/org/dromara/hertzbeat/common/util/CommonUtilTest.java
Patch:
@@ -15,9 +15,8 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
-import com.usthe.common.queue.CommonDataQueue;
 import org.junit.jupiter.api.Test;
 
 import static org.junit.jupiter.api.Assertions.*;

File: common/src/test/java/org/dromara/hertzbeat/common/util/IpDomainUtilTest.java
Patch:
@@ -15,9 +15,8 @@
  * limitations under the License.
  */
 
-package com.usthe.common.util;
+package org.dromara.hertzbeat.common.util;
 
-import com.usthe.common.queue.CommonDataQueue;
 import org.junit.jupiter.api.Test;
 
 import static org.junit.jupiter.api.Assertions.assertFalse;

File: manager/src/main/java/org/dromara/hertzbeat/manager/Manager.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager;
+package org.dromara.hertzbeat.manager;
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -32,8 +32,8 @@
 @SpringBootApplication
 @EnableJpaAuditing
 @EnableScheduling
-@EnableJpaRepositories(basePackages = {"com.usthe"})
-@EntityScan(basePackages = {"com.usthe"})
+@EnableJpaRepositories(basePackages = {"org.dromara.hertzbeat"})
+@EntityScan(basePackages = {"org.dromara.hertzbeat"})
 public class Manager {
 
     public static void main(String[] args) {

File: manager/src/main/java/org/dromara/hertzbeat/manager/cache/CacheFactory.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.cache;
+package org.dromara.hertzbeat.manager.cache;
 
 /**
  *

File: manager/src/main/java/org/dromara/hertzbeat/manager/cache/CaffeineCacheServiceImpl.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.cache;
+package org.dromara.hertzbeat.manager.cache;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.github.benmanes.caffeine.cache.Cache;

File: manager/src/main/java/org/dromara/hertzbeat/manager/cache/ICacheService.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.cache;
+package org.dromara.hertzbeat.manager.cache;
 
 /**
  * common cache

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/AlertStoreHandler.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.component.alerter;
+package org.dromara.hertzbeat.manager.component.alerter;
 
-import com.usthe.common.entity.alerter.Alert;
+import org.dromara.hertzbeat.common.entity.alerter.Alert;
 
 /**
  * 报警持久化

File: manager/src/main/java/org/dromara/hertzbeat/manager/component/alerter/impl/CommonRobotNotifyResp.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.component.alerter.impl;
+package org.dromara.hertzbeat.manager.component.alerter.impl;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 import lombok.AllArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/AngularErrorViewResolver.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider;
 import org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/HeaderRequestInterceptor.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpRequest;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/JpaAuditorConfig.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import com.usthe.sureness.subject.SubjectSum;
 import com.usthe.sureness.util.SurenessContextHolder;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/RestTemplateConfig.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/SecurityCorsConfiguration.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/SwaggerConfig.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import io.swagger.v3.oas.models.Components;
 import io.swagger.v3.oas.models.ExternalDocumentation;

File: manager/src/main/java/org/dromara/hertzbeat/manager/config/ThymeleafConfig.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.config;
+package org.dromara.hertzbeat.manager.config;
 
 import org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties;
 import org.springframework.context.annotation.Bean;

File: manager/src/main/java/org/dromara/hertzbeat/manager/controller/I18nController.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.controller;
+package org.dromara.hertzbeat.manager.controller;
 
-import com.usthe.common.entity.dto.Message;
-import com.usthe.manager.service.AppService;
+import org.dromara.hertzbeat.common.entity.dto.Message;
+import org.dromara.hertzbeat.manager.service.AppService;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;
 import io.swagger.v3.oas.annotations.tags.Tag;

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/NoticeReceiverDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.dao;
+package org.dromara.hertzbeat.manager.dao;
 
-import com.usthe.common.entity.manager.NoticeReceiver;
+import org.dromara.hertzbeat.common.entity.manager.NoticeReceiver;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/NoticeRuleDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.dao;
+package org.dromara.hertzbeat.manager.dao;
 
-import com.usthe.common.entity.manager.NoticeRule;
+import org.dromara.hertzbeat.common.entity.manager.NoticeRule;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/ParamDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.dao;
+package org.dromara.hertzbeat.manager.dao;
 
-import com.usthe.common.entity.manager.Param;
+import org.dromara.hertzbeat.common.entity.manager.Param;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 import java.util.List;

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/ParamDefineDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.dao;
+package org.dromara.hertzbeat.manager.dao;
 
-import com.usthe.common.entity.manager.ParamDefine;
+import org.dromara.hertzbeat.common.entity.manager.ParamDefine;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 import java.util.List;

File: manager/src/main/java/org/dromara/hertzbeat/manager/dao/TagDao.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.dao;
+package org.dromara.hertzbeat.manager.dao;
 
-import com.usthe.common.entity.manager.Tag;
+import org.dromara.hertzbeat.common.entity.manager.Tag;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/AppCount.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import lombok.AllArgsConstructor;
 import lombok.Data;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/Dashboard.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/Hierarchy.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/LoginDto.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/MonitorDefineDto.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/MonitorDto.java
Patch:
@@ -15,10 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
-import com.usthe.common.entity.manager.Monitor;
-import com.usthe.common.entity.manager.Param;
+import org.dromara.hertzbeat.common.entity.manager.Monitor;
+import org.dromara.hertzbeat.common.entity.manager.Param;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/ParamDefineDto.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
-import com.usthe.common.entity.manager.ParamDefine;
+import org.dromara.hertzbeat.common.entity.manager.ParamDefine;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;

File: manager/src/main/java/org/dromara/hertzbeat/manager/pojo/dto/WeWorkWebHookDto.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.pojo.dto;
+package org.dromara.hertzbeat.manager.pojo.dto;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/NoticeDispatchService.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.service;
+package org.dromara.hertzbeat.manager.service;
 
 /**
  * 消息通知转发接口

File: manager/src/main/java/org/dromara/hertzbeat/manager/service/TagService.java
Patch:
@@ -15,9 +15,9 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.service;
+package org.dromara.hertzbeat.manager.service;
 
-import com.usthe.common.entity.manager.Tag;
+import org.dromara.hertzbeat.common.entity.manager.Tag;
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.PageRequest;
 import org.springframework.data.jpa.domain.Specification;

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/exception/AlertNoticeException.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.support.exception;
+package org.dromara.hertzbeat.manager.support.exception;
 
 /**
  * alert notice send failed

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/exception/MonitorDatabaseException.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.support.exception;
+package org.dromara.hertzbeat.manager.support.exception;
 
 /**
  * 数据库操作异常

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/exception/MonitorDetectException.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.support.exception;
+package org.dromara.hertzbeat.manager.support.exception;
 
 /**
  * 探测失败异常

File: manager/src/main/java/org/dromara/hertzbeat/manager/support/exception/MonitorMetricsException.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.usthe.manager.support.exception;
+package org.dromara.hertzbeat.manager.support.exception;
 
 /**
  * 描述：监控指标异常

File: manager/src/test/java/org/dromara/hertzbeat/manager/AbstractSpringIntegrationTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.usthe.manager;
+package org.dromara.hertzbeat.manager;
 
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.test.context.ActiveProfiles;

File: collector/src/main/java/com/usthe/collector/dispatch/entrance/internal/CollectJobService.java
Patch:
@@ -66,7 +66,7 @@ public void response(List<CollectRep.MetricsData> responseMetrics) {
         try {
             countDownLatch.await(120, TimeUnit.SECONDS);
         } catch (Exception e) {
-            log.info("The sync task runs for 100 seconds with no response and returns");
+            log.info("The sync task runs for 120 seconds with no response and returns");
         }
         return metricsData;
     }

File: collector/src/main/java/com/usthe/collector/collect/http/promethus/exporter/ExporterParser.java
Patch:
@@ -123,7 +123,7 @@ private void parseType(StrBuffer line) {
 
     private void parseMetric(StrBuffer buffer) {
         String metricName = this.readTokenAsMetricName(buffer);
-        if (StringUtils.isEmpty(metricName)) {
+        if (metricName.isEmpty()) {
             log.error("error parse metric, metric name is null, line: {}", buffer.toStr());
             return;
         }
@@ -311,6 +311,7 @@ private String readTokenUnitWhitespace(StrBuffer buffer) {
      * @return token name
      */
     private String readTokenAsMetricName(StrBuffer buffer) {
+        buffer.skipBlankTabs();
         StringBuilder builder = new StringBuilder();
         if (this.isValidMetricNameStart(buffer.charAt(0))) {
             while (!buffer.isEmpty()) {
@@ -333,6 +334,7 @@ private String readTokenAsMetricName(StrBuffer buffer) {
      * @return label name
      */
     private String readTokenAsLabelName(StrBuffer buffer) {
+        buffer.skipBlankTabs();
         StringBuilder builder = new StringBuilder();
         char c = buffer.read();
         if (this.isValidLabelNameStart(c)) {

File: collector/src/test/java/com/usthe/collector/collect/http/promethus/exporter/ExporterParserTest.java
Patch:
@@ -14,7 +14,7 @@ class ExporterParserTest {
 
     @Test
     void textToMetric() {
-        String resp = "# HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.\n" +
+        String resp = "# HELP  go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.\n" +
                         "# TYPE go_gc_cycles_automatic_gc_cycles_total counter\n" +
                         "go_gc_cycles_automatic_gc_cycles_total 0\n" +
                         "# HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.\n" +
@@ -42,6 +42,7 @@ void textToMetric() {
                         "# EOF";
         ExporterParser parser = new ExporterParser();
         Map<String, MetricFamily> metricFamilyMap = parser.textToMetric(resp);
-        assertEquals(metricFamilyMap.size(), 6);
+        assertEquals(6, metricFamilyMap.size());
+        assertEquals(5, metricFamilyMap.get("go_gc_duration_seconds").getMetricList().get(0).getSummary().getQuantileList().size());
     }
 }
\ No newline at end of file

File: collector/src/main/java/com/usthe/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -310,7 +310,8 @@ private String constructDatabaseUrl(JdbcProtocol jdbcProtocol) {
                 break;
             case "sqlserver":
                 url = "jdbc:sqlserver://" + jdbcProtocol.getHost() + ":" + jdbcProtocol.getPort()
-                        + ";" + (jdbcProtocol.getDatabase() == null ? "" : "DatabaseName=" + jdbcProtocol.getDatabase());
+                        + ";" + (jdbcProtocol.getDatabase() == null ? "" : "DatabaseName=" + jdbcProtocol.getDatabase())
+                        + ";trustServerCertificate=true;";
                 break;
             case "oracle":
                 url = "jdbc:oracle:thin:@" + jdbcProtocol.getHost() + ":" + jdbcProtocol.getPort()

File: collector/src/main/java/com/usthe/collector/collect/snmp/SnmpCollectImpl.java
Patch:
@@ -187,7 +187,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
             }
         } catch (ExecutionException | InterruptedException ex) {
             String errorMsg = CommonUtil.getMessageFromThrowable(ex);
-            log.warn("[snmp collect] error: {}", errorMsg, ex);
+            log.warn("[snmp collect] error: {}", errorMsg);
             builder.setCode(CollectRep.Code.UN_CONNECTABLE);
             builder.setMsg(errorMsg);
         } catch (Exception e) {

File: common/src/main/java/com/usthe/common/entity/job/protocol/SshProtocol.java
Patch:
@@ -26,6 +26,7 @@
  * ssh 协议参数配置
  *
  *
+ *
  */
 @Data
 @Builder
@@ -59,9 +60,9 @@ public class SshProtocol {
     private String password;
 
     /**
-     * 公钥(可选)
+     * 私钥(可选)
      */
-    private String publicKey;
+    private String privateKey;
 
     /**
      * SSH执行脚本

File: warehouse/src/main/java/com/usthe/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -127,7 +127,8 @@ public void saveData(CollectRep.MetricsData metricsData) {
         for (CollectRep.ValueRow valueRow : metricsData.getValuesList()) {
             StringBuilder sqlRowBuffer = new StringBuilder("(");
             sqlRowBuffer.append(metricsData.getTime() + i++).append(", ");
-            sqlRowBuffer.append("'").append(valueRow.getInstance()).append("', ");
+            String instance = formatStringValue(valueRow.getInstance());
+            sqlRowBuffer.append("'").append(instance).append("', ");
             for (int index = 0; index < fields.size(); index++) {
                 CollectRep.Field field = fields.get(index);
                 String value = valueRow.getColumns(index);

File: collector/src/main/java/com/usthe/collector/collect/common/cache/RedisConnect.java
Patch:
@@ -18,7 +18,6 @@
 package com.usthe.collector.collect.common.cache;
 
 import io.lettuce.core.api.StatefulConnection;
-import io.lettuce.core.api.StatefulRedisConnection;
 import lombok.extern.slf4j.Slf4j;
 
 /**

File: collector/src/main/java/com/usthe/collector/collect/mongodb/MongodbSingleCollectImpl.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.Optional;
 
 import com.mongodb.MongoServerUnavailableException;
+import com.mongodb.MongoTimeoutException;
 import com.usthe.collector.collect.common.cache.CacheIdentifier;
 import com.usthe.collector.collect.common.cache.CommonCache;
 import com.usthe.collector.collect.common.cache.MongodbConnect;
@@ -116,7 +117,7 @@ public void collect(Builder builder, long appId, String app, Metrics metrics) {
             }
             fillBuilder(metrics, valueRowBuilder, document);
             builder.addValues(valueRowBuilder.build());
-        } catch (MongoServerUnavailableException unavailableException) {
+        } catch (MongoServerUnavailableException | MongoTimeoutException unavailableException) {
             builder.setCode(CollectRep.Code.UN_CONNECTABLE);
             String message = CommonUtil.getMessageFromThrowable(unavailableException);
             builder.setMsg(message);

File: collector/src/main/java/com/usthe/collector/collect/ssh/SshCollectImpl.java
Patch:
@@ -96,7 +96,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
             String result = response.toString();
             if (!StringUtils.hasText(result)) {
                 builder.setCode(CollectRep.Code.FAIL);
-                builder.setMsg("采集数据失败");
+                builder.setMsg("collect response data is null");
             }
             switch (sshProtocol.getParseType()) {
                 case PARSE_TYPE_NETCAT:

File: collector/src/test/java/com/usthe/collector/collect/redis/RedisClusterCollectImplTest.java
Patch:
@@ -14,9 +14,9 @@
 import java.util.List;
 
 /**
- * Test case for {@link RedisClusterCollectImpl}
+ * Test case for {@link RedisCommonCollectImpl}
+ *
  *
- * @create: 2023/02/17
  */
 @ExtendWith(MockitoExtension.class)
 public class RedisClusterCollectImplTest {
@@ -25,7 +25,7 @@ public class RedisClusterCollectImplTest {
     private RedisProtocol redisProtocol;
 
     @InjectMocks
-    private RedisClusterCollectImpl redisClusterCollect;
+    private RedisCommonCollectImpl redisClusterCollect;
 
     @BeforeEach
     void setUp() {

File: common/src/main/java/com/usthe/common/entity/warehouse/History.java
Patch:
@@ -50,6 +50,7 @@ public class History {
     private Byte metricType;
 
     @Schema(title = "字符值")
+    @Column(length = 1024)
     private String str;
 
     @Schema(title = "数值")

File: manager/src/main/java/com/usthe/manager/service/JobSchedulerInit.java
Patch:
@@ -77,7 +77,9 @@ public void run(String... args) throws Exception {
                         new Configmap(param.getField(), param.getValue(), param.getType())).collect(Collectors.toList());
                 appDefine.setConfigmap(configmaps);
                 // 下发采集任务
-                collectJobService.addAsyncCollectJob(appDefine);
+                long jobId = collectJobService.addAsyncCollectJob(appDefine);
+                monitor.setJobId(jobId);
+                monitorDao.save(monitor);
             } catch (Exception e) {
                 log.error("init monitor job: {} error,continue next monitor", monitor, e);
             }

File: warehouse/src/main/java/com/usthe/warehouse/config/WarehouseProperties.java
Patch:
@@ -245,7 +245,7 @@ public static class JpaProperties {
             /**
              * save data expire time(ms)
              */
-            private String expireTime = "7D";
+            private String expireTime = "1h";
 
             public boolean isEnabled() {
                 return enabled;

File: warehouse/src/main/java/com/usthe/warehouse/store/DataStorageDispatch.java
Patch:
@@ -71,7 +71,6 @@ protected void startStoragePersistentData() {
             }
         };
         workerPool.executeJob(runnable);
-        workerPool.executeJob(runnable);
     }
 
 

File: common/src/main/java/com/usthe/common/entity/job/Job.java
Patch:
@@ -167,7 +167,7 @@ public synchronized void constructPriorMetrics() {
         // 构造指标组任务执行顺序链表
         priorMetrics = new LinkedList<>();
         map.values().forEach(metric -> {
-            Set<Metrics> metricsSet = new HashSet<>(metric);
+            Set<Metrics> metricsSet = Collections.synchronizedSet(new HashSet<>(metric));
             priorMetrics.add(metricsSet);
         });
         priorMetrics.sort(Comparator.comparing(e -> {

File: collector/src/main/java/com/usthe/collector/dispatch/timer/TimerDispatcher.java
Patch:
@@ -62,9 +62,9 @@ public TimerDispatcher() {
             ret.setDaemon(true);
             return ret;
         }, 1, TimeUnit.SECONDS, 512);
-        this.currentCyclicTaskMap = new ConcurrentHashMap<>(1024);
-        this.currentTempTaskMap = new ConcurrentHashMap<>(64);
-        eventListeners = new ConcurrentHashMap<>(64);
+        this.currentCyclicTaskMap = new ConcurrentHashMap<>(64);
+        this.currentTempTaskMap = new ConcurrentHashMap<>(8);
+        eventListeners = new ConcurrentHashMap<>(8);
     }
 
     @Override

File: collector/src/main/java/com/usthe/collector/dispatch/CommonDispatcher.java
Patch:
@@ -219,8 +219,9 @@ public void dispatchCollectData(Timeout timeout, Metrics metrics, CollectRep.Met
             // If the availability collection fails, the next indicator group scheduling will be cancelled and the next round of scheduling will be entered directly.
             // 若metricsSet为null表示执行完成
             // 或判断采集指标组是否优先级为0，即为可用性采集指标组 若可用性采集失败 则取消后面的指标组调度直接进入下一轮调度
-            if (metricsSet == null
-                    || (metrics.getPriority() == (byte) 0 && metricsData.getCode() != CollectRep.Code.SUCCESS)) {
+            boolean isAvailableCollectFailed = metricsSet != null && !metricsSet.isEmpty()
+                    && metrics.getPriority() == (byte) 0 && metricsData.getCode() != CollectRep.Code.SUCCESS;
+            if (metricsSet == null || isAvailableCollectFailed) {
                 // The collection and execution of all index groups of this job are completed.
                 // The periodic task pushes the task to the time wheel again.
                 // First, determine the execution time of the task and the task collection interval.

File: common/src/main/java/com/usthe/common/entity/alerter/Alert.java
Patch:
@@ -135,7 +135,7 @@ public class Alert {
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefine.java
Patch:
@@ -109,11 +109,11 @@ public class AlertDefine {
     @LastModifiedBy
     private String modifier;
 
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefineMonitorBind.java
Patch:
@@ -63,11 +63,11 @@ public class AlertDefineMonitorBind {
     @Column(name = "monitor_id")
     private Long monitorId;
 
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/Monitor.java
Patch:
@@ -139,15 +139,15 @@ public class Monitor {
      * record creation time (millisecond timestamp)
      * 记录创建时间
      */
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
     /**
      * Record the latest modification time (timestamp in milliseconds)
      * 记录最新修改时间
      */
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/NoticeReceiver.java
Patch:
@@ -142,13 +142,13 @@ public class NoticeReceiver {
     @LastModifiedBy
     private String modifier;
 
-    @Schema(title = "Record creation time (millisecond timestamp)", description = "记录创建时间(毫秒时间戳)",
+    @Schema(title = "Record creation time (millisecond timestamp)", description = "记录创建时间",
             example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
     @Schema(title = "Record the latest modification time (timestamp in milliseconds)",
-            description = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+            description = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/Param.java
Patch:
@@ -100,15 +100,15 @@ public class Param {
      * Record Creation Time
      * 记录创建时间
      */
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
     /**
      * Record the latest modification time
      * 记录最新修改时间
      */
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/ParamDefine.java
Patch:
@@ -188,15 +188,15 @@ public class ParamDefine {
      * record creation time
      * 记录创建时间
      */
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
     /**
      * Record the latest modification time
      * 记录最新修改时间
      */
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/Tag.java
Patch:
@@ -82,11 +82,11 @@ public class Tag {
     @LastModifiedBy
     private String modifier;
 
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: common/src/main/java/com/usthe/common/entity/manager/TagMonitorBind.java
Patch:
@@ -60,11 +60,11 @@ public class TagMonitorBind {
     @Column(name = "monitor_id")
     private Long monitorId;
 
-    @Schema(title = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY)
+    @Schema(title = "记录创建时间", example = "1612198922000", accessMode = READ_ONLY)
     @CreatedDate
     private LocalDateTime gmtCreate;
 
-    @Schema(title = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY)
+    @Schema(title = "记录最新修改时间", example = "1612198444000", accessMode = READ_ONLY)
     @LastModifiedDate
     private LocalDateTime gmtUpdate;
 

File: manager/src/main/java/com/usthe/manager/component/alerter/DispatcherAlarm.java
Patch:
@@ -73,12 +73,13 @@ public void afterPropertiesSet() throws Exception {
 
     /**
      * send alert msg to receiver
+     *
      * @param receiver receiver
-     * @param alert alert msg
+     * @param alert    alert msg
      * @return send success or failed
      */
     public boolean sendNoticeMsg(NoticeReceiver receiver, Alert alert) {
-        if(receiver == null || receiver.getType() == null){
+        if (receiver == null || receiver.getType() == null) {
             log.warn("DispatcherAlarm-sendNoticeMsg params is empty alert:[{}], receiver:[{}]", alert, receiver);
             return false;
         }
@@ -91,7 +92,6 @@ public boolean sendNoticeMsg(NoticeReceiver receiver, Alert alert) {
     }
 
     private List<NoticeReceiver> matchReceiverByNoticeRules(Alert alert) {
-        // todo use cache 使用缓存
         return noticeConfigService.getReceiverFilterRule(alert);
     }
 

File: manager/src/test/java/com/usthe/manager/service/NoticeConfigServiceTest.java
Patch:
@@ -163,14 +163,14 @@ void getReceiverFilterRule() {
     void getReceiverById() {
         final Long receiverId = 343432325L;
         noticeConfigService.getReceiverById(receiverId);
-        verify(noticeReceiverDao, times(1)).getOne(receiverId);
+        verify(noticeReceiverDao, times(1)).getReferenceById(receiverId);
     }
 
     @Test
     void getNoticeRulesById() {
         final Long receiverId = 343432325L;
         noticeConfigService.getNoticeRulesById(receiverId);
-        verify(noticeRuleDao, times(1)).getOne(receiverId);
+        verify(noticeRuleDao, times(1)).getReferenceById(receiverId);
     }
 
     @Test

File: warehouse/src/main/java/com/usthe/warehouse/store/HistoryTdEngineDataStorage.java
Patch:
@@ -264,7 +264,7 @@ public Map<String, List<Value>> getHistoryMetricData(Long monitorId, String app,
                 Timestamp ts = resultSet.getTimestamp(1);
                 String instanceValue = resultSet.getString(2);
                 if (instanceValue == null || "".equals(instanceValue)) {
-                    instanceValue = "NULL";
+                    instanceValue = "";
                 }
                 double value = resultSet.getDouble(3);
                 String strValue = new BigDecimal(value).setScale(4, RoundingMode.HALF_UP).stripTrailingZeros().toPlainString();
@@ -338,7 +338,7 @@ public Map<String, List<Value>> getHistoryIntervalMetricData(Long monitorId, Str
                             metric, metric, metric, metric, table, instanceValue, history);
             log.debug(selectSql);
             if ("''".equals(instanceValue)) {
-                instanceValue = "NULL";
+                instanceValue = "";
             }
             List<Value> values = instanceValuesMap.computeIfAbsent(instanceValue, k -> new LinkedList<>());
             Connection connection = null;

File: collector/src/main/java/com/usthe/collector/collect/http/promethus/exporter/ExporterParser.java
Patch:
@@ -3,7 +3,7 @@
 import com.usthe.collector.collect.http.promethus.ParseException;
 import com.usthe.common.util.StrBuffer;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang.StringUtils;
+import org.springframework.util.StringUtils;
 
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
@@ -253,7 +253,7 @@ else if (label != null && this.isCount(label.getName())) {
                     summary.setCount(buffer.toLong());
                 }
                 // 处理 "xxx{quantile=\"0\"} 0" 的格式
-                else if (StringUtils.isNotEmpty(this.currentQuantile)) {
+                else if (StringUtils.hasText(this.currentQuantile)) {
                     List<MetricFamily.Quantile> quantileList = summary.getQuantileList();
                     MetricFamily.Quantile quantile = new MetricFamily.Quantile();
                     quantile.setXLabel(StrBuffer.parseDouble(this.currentQuantile));
@@ -273,7 +273,7 @@ else if (StringUtils.isNotEmpty(this.currentQuantile)) {
                     histogram.setCount(buffer.toLong());
                 }
                 // 处理 "xxx{quantile=\"0\"} 0" 的格式
-                else if (StringUtils.isNotEmpty(this.currentBucket)) {
+                else if (StringUtils.hasText(this.currentBucket)) {
                     List<MetricFamily.Bucket> bucketList = histogram.getBucketList();
                     MetricFamily.Bucket bucket = new MetricFamily.Bucket();
                     bucket.setUpperBound(StrBuffer.parseDouble(this.currentBucket));

File: warehouse/src/main/java/com/usthe/warehouse/store/RealTimeRedisDataStorage.java
Patch:
@@ -65,6 +65,9 @@ public CollectRep.MetricsData getCurrentMetricsData(@NonNull Long monitorId, @No
     public void saveData(CollectRep.MetricsData metricsData) {
         String key = String.valueOf(metricsData.getId());
         String hashKey = metricsData.getMetrics();
+        if (metricsData.getCode() != CollectRep.Code.SUCCESS) {
+            return;
+        }
         if (metricsData.getValuesList().isEmpty()) {
             log.info("[warehouse redis] redis flush metrics data {} - {} is null, ignore.", key, hashKey);
             return;

File: collector/src/main/java/com/usthe/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -135,7 +135,7 @@ public void collect(CollectRep.MetricsData.Builder builder,
                     } else if (DispatchConstants.PARSE_JSON_PATH.equals(parseType)) {
                         parseResponseByJsonPath(resp, metrics.getAliasFields(), metrics.getHttp(), builder, responseTime);
                     } else if (DispatchConstants.PARSE_PROM_QL.equalsIgnoreCase(parseType)) {
-                        parseResponseByPromQL(resp, metrics.getAliasFields(), metrics.getHttp(), builder);
+                        parseResponseByPromQl(resp, metrics.getAliasFields(), metrics.getHttp(), builder);
                     } else if (DispatchConstants.PARSE_PROMETHEUS.equals(parseType)) {
                         parseResponseByPrometheusExporter(resp, metrics.getAliasFields(), builder);
                     } else if (DispatchConstants.PARSE_XML_PATH.equals(parseType)) {
@@ -367,7 +367,7 @@ private void parseResponseByJsonPath(String resp, List<String> aliasFields, Http
         }
     }
 
-    private void parseResponseByPromQL(String resp, List<String> aliasFields, HttpProtocol http,
+    private void parseResponseByPromQl(String resp, List<String> aliasFields, HttpProtocol http,
                                        CollectRep.MetricsData.Builder builder) {
         AbstractPrometheusParse prometheusParser = PrometheusParseCreater.getPrometheusParse();
         prometheusParser.handle(resp, aliasFields, http, builder);

File: common/src/main/java/com/usthe/common/util/GsonUtil.java
Patch:
@@ -50,8 +50,8 @@ public static <T> T fromJson(String jsonStr, Class<T> clazz) {
         return gson.fromJson(jsonStr, clazz);
     }
 
-    public static <T> T fromJson(String jsonStr, Type typeOfT) {
-        return gson.fromJson(jsonStr, typeOfT);
+    public static <T> T fromJson(String jsonStr, Type type) {
+        return gson.fromJson(jsonStr, type);
     }
 
     public static <T> T fromJson(JsonElement element, Class<T> clazz) {

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/AbstractAlertNotifyHandlerImpl.java
Patch:
@@ -34,7 +34,7 @@ abstract class AbstractAlertNotifyHandlerImpl implements AlertNotifyHandler {
     @Resource
     protected AlerterProperties alerterProperties;
 
-    protected String renderContext(Alert alert) {
+    protected String renderContent(Alert alert) {
         Context context = new Context();
         context.setVariable("title", "[" + bundle.getString("alerter.notify.title") + "]");
         if (alert.getTags() != null) {

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/DingTalkRobotAlertNotifyHandlerImpl.java
Patch:
@@ -44,7 +44,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
         try {
             DingTalkWebHookDto dingTalkWebHookDto = new DingTalkWebHookDto();
             MarkdownDTO markdownDTO = new MarkdownDTO();
-            markdownDTO.setText(renderContext(alert));
+            markdownDTO.setText(renderContent(alert));
             markdownDTO.setTitle(bundle.getString("alerter.notify.title"));
             dingTalkWebHookDto.setMarkdown(markdownDTO);
             String webHookUrl = alerterProperties.getDingTalkWebHookUrl() + receiver.getAccessToken();

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/FlyBookAlertNotifyHandlerImpl.java
Patch:
@@ -57,7 +57,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
             List<FlyBookContent> contents1 = new ArrayList<>();
             FlyBookContent flyBookContent = new FlyBookContent();
             flyBookContent.setTag("text");
-            flyBookContent.setText(renderContext(alert));
+            flyBookContent.setText(renderContent(alert));
             contents1.add(flyBookContent);
             FlyBookContent bookContent = new FlyBookContent();
             bookContent.setTag("a");

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/TelegramBotAlertNotifyHandlerImpl.java
Patch:
@@ -35,7 +35,7 @@ public void send(NoticeReceiver receiver, Alert alert) throws AlertNoticeExcepti
             String url = String.format(alerterProperties.getTelegramBotApiUrl(), receiver.getTgBotToken());
             TelegramBotNotifyDTO notifyBody = TelegramBotNotifyDTO.builder()
                     .chatId(receiver.getTgUserId())
-                    .text(renderContext(alert))
+                    .text(renderContent(alert))
                     .disableWebPagePreview(true)
                     .build();
             ResponseEntity<TelegramBotNotifyResponse> entity = restTemplate.postForEntity(url, notifyBody, TelegramBotNotifyResponse.class);

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WeWorkRobotAlertNotifyHandlerImpl.java
Patch:
@@ -44,7 +44,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
         try {
             WeWorkWebHookDto weWorkWebHookDTO = new WeWorkWebHookDto();
             WeWorkWebHookDto.MarkdownDTO markdownDTO = new WeWorkWebHookDto.MarkdownDTO();
-            markdownDTO.setContent(renderContext(alert));
+            markdownDTO.setContent(renderContent(alert));
             weWorkWebHookDTO.setMarkdown(markdownDTO);
             String webHookUrl = alerterProperties.getWeWorkWebHookUrl() + receiver.getWechatId();
             ResponseEntity<CommonRobotNotifyResp> entity = restTemplate.postForEntity(webHookUrl, weWorkWebHookDTO, CommonRobotNotifyResp.class);

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/FlyBookAlertNotifyHandlerImpl.java
Patch:
@@ -49,7 +49,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
             FlyBookWebHookDto flyBookWebHookDto = new FlyBookWebHookDto();
             Content content = new Content();
             Post post = new Post();
-            zhCn zhCn = new zhCn();
+            ZhCn zhCn = new ZhCn();
             content.setPost(post);
             post.setZhCn(zhCn);
             flyBookWebHookDto.setMsgType("post");
@@ -145,11 +145,11 @@ private static class FlyBookContent {
     @Data
     private static class Post {
         @JsonProperty("zh_cn")
-        public zhCn zhCn;
+        public ZhCn zhCn;
     }
 
     @Data
-    private static class zhCn {
+    private static class ZhCn {
         /**
          * 标题
          */

File: common/src/main/java/com/usthe/common/entity/manager/NoticeReceiver.java
Patch:
@@ -94,8 +94,8 @@ public class NoticeReceiver {
     @Length(max = 300)
     private String hookUrl;
 
-    @Schema(title = "openId : The notification method is valid for WeChat official account or enterprise WeChat robot",
-            description = "openId : 通知方式为微信公众号或企业微信机器人有效",
+    @Schema(title = "openId : The notification method is valid for WeChat official account, enterprise WeChat robot or FlyBook robot",
+            description = "openId : 通知方式为微信公众号，企业微信机器人或飞书机器人有效",
             example = "343432", accessMode = READ_WRITE)
     @Length(max = 300)
     private String wechatId;

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/SmsAlertNotifyHandlerImpl.java
Patch:
@@ -43,7 +43,7 @@ final class SmsAlertNotifyHandlerImpl implements AlertNotifyHandler {
 
     private final TencentSmsClient tencentSmsClient;
 
-    private ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
+    private final ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
 
     @Override
     public void send(NoticeReceiver receiver, Alert alert) {

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WeWorkRobotAlertNotifyHandlerImpl.java
Patch:
@@ -52,7 +52,7 @@ final class WeWorkRobotAlertNotifyHandlerImpl implements AlertNotifyHandler {
 
     private final AlerterProperties alerterProperties;
 
-    private ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
+    private final ResourceBundle bundle = ResourceBundleUtil.getBundle("alerter");
 
     @Override
     public void send(NoticeReceiver receiver, Alert alert) {

File: common/src/main/java/com/usthe/common/config/CommonProperties.java
Patch:
@@ -18,15 +18,13 @@
 package com.usthe.common.config;
 
 import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.stereotype.Component;
 
 /**
  * common properties
  *
  *
  *
  */
-@Component
 @ConfigurationProperties(prefix = "common")
 public class CommonProperties {
 

File: common/src/main/java/com/usthe/common/service/TencentSmsClient.java
Patch:
@@ -9,14 +9,14 @@
 import com.usthe.common.support.exception.SendMessageException;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
-import org.springframework.context.annotation.Configuration;
+import org.springframework.stereotype.Component;
 
 /**
  * sms service client for tencent cloud
  *
  *
  */
-@Configuration
+@Component
 @ConditionalOnProperty("common.sms.tencent.app-id")
 @Slf4j
 public class TencentSmsClient {

File: warehouse/src/main/java/com/usthe/warehouse/config/WarehouseProperties.java
Patch:
@@ -15,11 +15,10 @@
  * limitations under the License.
  */
 
-package com.usthe.warehouse;
+package com.usthe.warehouse.config;
 
 import org.apache.iotdb.session.util.Version;
 import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.stereotype.Component;
 
 import java.time.ZoneId;
 import java.util.List;
@@ -29,7 +28,6 @@
  *
  *
  */
-@Component
 @ConfigurationProperties(prefix = "warehouse")
 public class WarehouseProperties {
 

File: warehouse/src/main/java/com/usthe/warehouse/store/AbstractHistoryDataStorage.java
Patch:
@@ -3,7 +3,7 @@
 import com.usthe.common.entity.dto.Value;
 import com.usthe.common.entity.message.CollectRep;
 import com.usthe.common.queue.CommonDataQueue;
-import com.usthe.warehouse.WarehouseProperties;
+import com.usthe.warehouse.config.WarehouseProperties;
 import com.usthe.warehouse.WarehouseWorkerPool;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.DisposableBean;

File: collector/src/main/java/com/usthe/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -136,7 +136,7 @@ private Statement getConnection(String username, String password, String url,Int
                 // 设置查询最大行数1000行
                 statement.setMaxRows(1000);
             } catch (Exception e) {
-                log.info("The jdbc connect form cache, create statement error: {}", e.getMessage());
+                log.info("The jdbc connect from cache, create statement error: {}", e.getMessage());
                 try {
                     if (statement != null) {
                         statement.close();

File: collector/src/main/java/com/usthe/collector/dispatch/DispatchConstants.java
Patch:
@@ -115,8 +115,8 @@ public interface DispatchConstants {
      */
     String PARSE_SITE_MAP = "sitemap";
     /**
-     * Parsing method prometheus rules
-     * 解析方式 prometheus规则
+     * Parsing method prometheus exporter data
+     * 解析方式 prometheus exporter接口获取的数据
      */
     String PARSE_PROMETHEUS = "prometheus";
     /**

File: common/src/main/java/com/usthe/common/util/CommonUtil.java
Patch:
@@ -103,4 +103,5 @@ public static boolean validatePhoneNum(String phoneNum) {
         Matcher m = PHONE_PATTERN.matcher(phoneNum);
         return m.find();
     }
+
 }

File: manager/src/main/java/com/usthe/manager/config/SecurityCorsConfiguration.java
Patch:
@@ -33,14 +33,12 @@
 @Configuration
 public class SecurityCorsConfiguration {
 
-    private static final String ORIGIN_PATTERN = "http://localhost:*";
-
     @Bean
     public FilterRegistrationBean corsFilter() {
         UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
         CorsConfiguration corsConfiguration = new CorsConfiguration();
         corsConfiguration.setAllowCredentials(true);
-        corsConfiguration.setAllowedOriginPatterns(Collections.singletonList(ORIGIN_PATTERN));
+        corsConfiguration.setAllowedOriginPatterns(Collections.singletonList(CorsConfiguration.ALL));
         corsConfiguration.addAllowedHeader(CorsConfiguration.ALL);
         corsConfiguration.addAllowedMethod(CorsConfiguration.ALL);
         source.registerCorsConfiguration("/**", corsConfiguration);

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -51,6 +51,7 @@
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.CollectionUtils;
 
+import java.time.LocalDateTime;
 import java.util.*;
 import java.util.stream.Collectors;
 
@@ -389,6 +390,8 @@ public void modifyMonitor(Monitor monitor, List<Param> params) throws RuntimeExc
         try {
             monitor.setJobId(preMonitor.getJobId());
             monitor.setStatus(preMonitor.getStatus());
+            // force update gmtUpdate time, due the case: monitor not change, param change. we also think monitor change
+            monitor.setGmtUpdate(LocalDateTime.now());
             monitorDao.save(monitor);
             paramDao.saveAll(params);
             // Update the collection task after the storage is completed

File: collector/src/main/java/com/usthe/collector/util/K8sClient.java
Patch:
@@ -33,7 +33,7 @@ public class K8sClient {
      */
     public K8sClient(String serverHost, String serverPort, String token) {
         try {
-            String serverIp = serverHost + ":" + serverPort;
+            String serverIp = "https://" + serverHost + ":" + serverPort;
             this.apiClient = new ClientBuilder()
                     .setBasePath(serverIp)
                     .setVerifyingSsl(false)

File: collector/src/main/java/com/usthe/collector/collect/http/HttpCollectImpl.java
Patch:
@@ -86,7 +86,7 @@
 @Slf4j
 public class HttpCollectImpl extends AbstractCollect {
 
-    private HttpCollectImpl() {}
+    public HttpCollectImpl() {}
 
     public static HttpCollectImpl getInstance() {
         return Singleton.INSTANCE;
@@ -397,7 +397,7 @@ private void parseResponseByDefault(String resp, List<String> aliasFields, HttpP
      * @param httpProtocol http protocol
      * @return context
      */
-    private HttpContext createHttpContext(HttpProtocol httpProtocol) {
+    public HttpContext createHttpContext(HttpProtocol httpProtocol) {
         HttpProtocol.Authorization auth = httpProtocol.getAuthorization();
         if (auth != null && DispatchConstants.DIGEST_AUTH.equals(auth.getType())) {
             HttpClientContext clientContext = new HttpClientContext();
@@ -422,7 +422,7 @@ private HttpContext createHttpContext(HttpProtocol httpProtocol) {
      * @param httpProtocol http参数配置
      * @return 请求体
      */
-    private HttpUriRequest createHttpRequest(HttpProtocol httpProtocol) {
+    public HttpUriRequest createHttpRequest(HttpProtocol httpProtocol) {
         RequestBuilder requestBuilder;
         // method
         String httpMethod = httpProtocol.getMethod().toUpperCase();

File: common/src/main/java/com/usthe/common/entity/job/protocol/HttpProtocol.java
Patch:
@@ -91,6 +91,9 @@ public class HttpProtocol {
      */
     private String keyword;
 
+    /** 解析微服务使用链式判断 */
+    private String chain;
+
     /**
      * 认证信息
      */

File: warehouse/src/main/java/com/usthe/warehouse/store/RealTimeRedisDataStorage.java
Patch:
@@ -45,7 +45,7 @@
 @ConditionalOnProperty(prefix = "warehouse.store.redis",
         name = "enabled", havingValue = "true", matchIfMissing = false)
 @Slf4j
-public class RealTimeRedisDataStorage extends RealTimeMemoryDataStorage {
+public class RealTimeRedisDataStorage extends AbstractRealTimeDataStorage {
 
     private RedisClient redisClient;
     private StatefulRedisConnection<String, CollectRep.MetricsData> connection;

File: collector/src/main/java/com/usthe/collector/collect/database/JdbcSpiLoader.java
Patch:
@@ -41,6 +41,7 @@ public void run(String... args) throws Exception {
             Class.forName("org.postgresql.Driver");
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Class.forName("oracle.jdbc.driver.OracleDriver");
+            Class.forName("dm.jdbc.driver.DmDriver");
         } catch (Exception e) {
             log.error("load jdbc error: {}", e.getMessage(), e);
         }

File: warehouse/src/main/java/com/usthe/warehouse/store/HistoryIotDbDataStorage.java
Patch:
@@ -116,7 +116,7 @@ private boolean initIotDbSession(WarehouseProperties.StoreProperties.IotDbProper
 
     private boolean checkConnection() {
         try {
-            this.sessionPool.executeNonQueryStatement(SHOW_STORAGE_GROUP);
+            this.sessionPool.executeQueryStatement(SHOW_STORAGE_GROUP);
             return true;
         } catch (Exception e) {
             log.error(e.getMessage(), e);

File: manager/src/main/java/com/usthe/manager/config/SecurityCorsConfiguration.java
Patch:
@@ -33,12 +33,14 @@
 @Configuration
 public class SecurityCorsConfiguration {
 
+    private static final String ORIGIN_PATTERN = "http://localhost:*";
+
     @Bean
     public FilterRegistrationBean corsFilter() {
         UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
         CorsConfiguration corsConfiguration = new CorsConfiguration();
         corsConfiguration.setAllowCredentials(true);
-        corsConfiguration.setAllowedOriginPatterns(Collections.singletonList(CorsConfiguration.ALL));
+        corsConfiguration.setAllowedOriginPatterns(Collections.singletonList(ORIGIN_PATTERN));
         corsConfiguration.addAllowedHeader(CorsConfiguration.ALL);
         corsConfiguration.addAllowedMethod(CorsConfiguration.ALL);
         source.registerCorsConfiguration("/**", corsConfiguration);

File: warehouse/src/main/java/com/usthe/warehouse/store/TdEngineDataStorage.java
Patch:
@@ -32,6 +32,7 @@
 import org.springframework.context.annotation.Configuration;
 
 import java.math.BigDecimal;
+import java.math.RoundingMode;
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.SQLException;
@@ -287,7 +288,7 @@ public Map<String, List<Value>> getHistoryMetricData(Long monitorId, String app,
                     instanceValue = "NULL";
                 }
                 double value = resultSet.getDouble(3);
-                String strValue = new BigDecimal(value).stripTrailingZeros().toPlainString();
+                String strValue = new BigDecimal(value).setScale(4, RoundingMode.HALF_UP).stripTrailingZeros().toPlainString();
                 List<Value> valueList = instanceValuesMap.computeIfAbsent(instanceValue, k -> new LinkedList<>());
                 valueList.add(new Value(strValue, ts.getTime()));
             }

File: manager/src/main/java/com/usthe/manager/config/JpaAuditorConfig.java
Patch:
@@ -19,7 +19,6 @@
 
 import com.usthe.sureness.subject.SubjectSum;
 import com.usthe.sureness.util.SurenessContextHolder;
-import org.jetbrains.annotations.NotNull;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.data.domain.AuditorAware;
 
@@ -33,7 +32,6 @@
 @Configuration
 public class JpaAuditorConfig implements AuditorAware<String> {
 
-    @NotNull
     @Override
     public Optional<String> getCurrentAuditor() {
         SubjectSum subjectSum = SurenessContextHolder.getBindSubject();

File: manager/src/main/java/com/usthe/manager/pojo/dto/Dashboard.java
Patch:
@@ -17,7 +17,7 @@
 
 package com.usthe.manager.pojo.dto;
 
-import io.swagger.annotations.ApiModel;
+import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
@@ -32,7 +32,7 @@
 @Data
 @AllArgsConstructor
 @NoArgsConstructor
-@ApiModel(description = "大屏仪表盘统计信息")
+@Schema(description = "大屏仪表盘统计信息")
 public class Dashboard {
 
     List<AppCount> apps;

File: manager/src/main/java/com/usthe/manager/service/TagService.java
Patch:
@@ -41,15 +41,15 @@ public interface TagService {
 
     /**
      * update tag
-     * @param tag tag
+     * @param tag Tag
      */
     void modifyTag(Tag tag);
 
     /**
      * get tag page list
      * @param specification 查询条件
      * @param pageRequest 分页条件
-     * @return tags
+     * @return Tags
      */
     Page<Tag> getTags(Specification<Tag> specification, PageRequest pageRequest);
 

File: alerter/src/main/java/com/usthe/alert/calculate/CalculateAlarm.java
Patch:
@@ -205,7 +205,7 @@ private void calculate(CollectRep.MetricsData metricsData) {
                         try {
                             Expression expression = AviatorEvaluator.compile(expr, true);
                             Boolean match = (Boolean) expression.execute(fieldValueMap);
-                            if (match) {
+                            if (match != null && match) {
                                 // 阈值规则匹配，判断已触发阈值次数，触发告警
                                 String monitorAlertKey = String.valueOf(monitorId) + define.getId();
                                 Alert triggeredAlert = triggeredAlertMap.get(monitorAlertKey);

File: collector/src/main/java/com/usthe/collector/dispatch/timer/TimerDispatcher.java
Patch:
@@ -61,7 +61,7 @@ public TimerDispatcher() {
             Thread ret = new Thread(r, "wheelTimer");
             ret.setDaemon(true);
             return ret;
-        }, 10, TimeUnit.SECONDS, 512);
+        }, 1, TimeUnit.SECONDS, 512);
         this.currentCyclicTaskMap = new ConcurrentHashMap<>(1024);
         this.currentTempTaskMap = new ConcurrentHashMap<>(64);
         eventListeners = new ConcurrentHashMap<>(64);

File: collector/src/main/java/com/usthe/collector/collect/AbstractCollect.java
Patch:
@@ -21,6 +21,8 @@
 import com.usthe.common.entity.job.Metrics;
 import com.usthe.common.entity.message.CollectRep;
 
+import java.io.IOException;
+
 /**
  * Specific indicator group collection implementation abstract class
  * 具体的指标组采集实现抽象类
@@ -40,5 +42,5 @@ public abstract class AbstractCollect {
      * @param metrics Metric group configuration    指标组配置
      *                return response builder
      */
-    public abstract void collect(CollectRep.MetricsData.Builder builder, long appId, String app, Metrics metrics);
+    public abstract void collect(CollectRep.MetricsData.Builder builder, long appId, String app, Metrics metrics) throws IOException;
 }

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -410,6 +410,7 @@ public void enableManageMonitors(HashSet<Long> ids) {
                 // 构造采集任务Job实体
                 Job appDefine = appService.getAppDefine(monitor.getApp());
                 appDefine.setMonitorId(monitor.getId());
+                appDefine.setId(monitor.getJobId());
                 appDefine.setInterval(monitor.getIntervals());
                 appDefine.setCyclic(true);
                 appDefine.setTimestamp(System.currentTimeMillis());

File: common/src/main/java/com/usthe/common/util/SnowFlakeIdGenerator.java
Patch:
@@ -12,7 +12,7 @@ public class SnowFlakeIdGenerator {
     private final static SnowFlakeIdWorker ID_WORKER;
 
     static {
-        ID_WORKER = new SnowFlakeIdWorker(0);
+        ID_WORKER = new SnowFlakeIdWorker();
     }
 
     public static long generateId() {

File: alerter/src/main/java/com/usthe/alert/service/impl/AlertServiceImpl.java
Patch:
@@ -20,7 +20,7 @@
 import java.math.RoundingMode;
 import java.time.Instant;
 import java.time.LocalDateTime;
-import java.time.ZoneOffset;
+import java.time.ZoneId;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
@@ -134,8 +134,7 @@ private Alert buildAlertData(AlertReport alertReport){
                 .tags(alertReport.getLabels())
                 .target(CommonConstants.AVAILABLE)
                 .times(3)
-                // todo 时区问题
-                .gmtCreate(LocalDateTime.ofInstant(Instant.ofEpochMilli(alertReport.getAlertTime()), ZoneOffset.of("+8")))
+                .gmtCreate(LocalDateTime.ofInstant(Instant.ofEpochMilli(alertReport.getAlertTime()), ZoneId.systemDefault()))
                 .build();
     }
 

File: manager/src/main/java/com/usthe/manager/controller/I18nController.java
Patch:
@@ -23,7 +23,7 @@
  *
  *
  */
-@Api(tags = "en:I18N API | I18N Internationalization Resource API,zh: I18N API | I18N国际化资源API")
+@Api(tags = "I18N API | I18N国际化资源API")
 @RestController
 @RequestMapping(path = "/api/i18n", produces = {APPLICATION_JSON_VALUE})
 public class I18nController {

File: manager/src/main/java/com/usthe/manager/pojo/dto/LoginDto.java
Patch:
@@ -23,7 +23,7 @@
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
-@ApiModel(description = "en: Account information transfer body,zh: 账户信息传输体")
+@ApiModel(description = "Account information transfer body | 账户信息传输体")
 public class LoginDto {
 
     /**

File: common/src/main/java/com/usthe/common/entity/alerter/Alert.java
Patch:
@@ -76,7 +76,7 @@ public class Alert {
             notes = "告警状态: 0-正常告警(待处理) 1-阈值触发但未达到告警次数 2-恢复告警 3-已处理",
             example = "1", accessMode = READ_WRITE, position = 7)
     @Min(0)
-    @Max(2)
+    @Max(3)
     private byte status;
 
     @ApiModelProperty(value = "Alarm threshold trigger times",

File: common/src/main/java/com/usthe/common/entity/alerter/Alert.java
Patch:
@@ -31,7 +31,7 @@
  *
  */
 @Entity
-@Table(name = "alert")
+@Table(name = "hzb_alert")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefine.java
Patch:
@@ -29,7 +29,7 @@
  *
  */
 @Entity
-@Table(name = "alert_define")
+@Table(name = "hzb_alert_define")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefineMonitorBind.java
Patch:
@@ -25,7 +25,7 @@
  *
  */
 @Entity
-@Table(name = "alert_define_monitor_bind")
+@Table(name = "hzb_alert_define_monitor_bind")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/Monitor.java
Patch:
@@ -31,7 +31,7 @@
  *
  */
 @Entity
-@Table(name = "monitor")
+@Table(name = "hzb_monitor")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/NoticeReceiver.java
Patch:
@@ -30,7 +30,7 @@
  *
  */
 @Entity
-@Table(name = "notice_receiver")
+@Table(name = "hzb_notice_receiver")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/NoticeRule.java
Patch:
@@ -30,7 +30,7 @@
  *
  */
 @Entity
-@Table(name = "notice_rule")
+@Table(name = "hzb_notice_rule")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/Param.java
Patch:
@@ -28,7 +28,7 @@
  *
  */
 @Entity
-@Table(name = "param")
+@Table(name = "hzb_param")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/ParamDefine.java
Patch:
@@ -30,7 +30,7 @@
  *
  */
 @Entity
-@Table(name = "param_define")
+@Table(name = "hzb_param_define")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/Tag.java
Patch:
@@ -29,7 +29,7 @@
  *
  */
 @Entity
-@Table(name = "tag")
+@Table(name = "hzb_tag")
 @Data
 @Builder
 @AllArgsConstructor

File: common/src/main/java/com/usthe/common/entity/manager/TagMonitorBind.java
Patch:
@@ -23,7 +23,7 @@
  *
  */
 @Entity
-@Table(name = "tag_monitor_bind")
+@Table(name = "hzb_tag_monitor_bind")
 @Data
 @Builder
 @AllArgsConstructor

File: collector/src/main/java/com/usthe/collector/dispatch/entrance/internal/CollectJobService.java
Patch:
@@ -14,10 +14,10 @@
 import java.util.concurrent.TimeUnit;
 
 /**
+ * Collection job management provides api interface
  * 采集job管理提供api接口
  *
  *
- *
  */
 @Service
 @Slf4j
@@ -49,7 +49,7 @@ public void response(List<CollectRep.MetricsData> responseMetrics) {
         try {
             countDownLatch.await(100, TimeUnit.SECONDS);
         } catch (Exception e) {
-            log.info("同步任务运行100秒无响应，返回");
+            log.info("The sync task runs for 100 seconds with no response and returns");
         }
         return metricsData;
     }

File: collector/src/main/java/com/usthe/collector/dispatch/entrance/internal/CollectResponseEventListener.java
Patch:
@@ -6,15 +6,17 @@
 import java.util.List;
 
 /**
+ * One-time collection task response result listener
  * 一次性采集任务响应结果监听器
  *
  *
  */
 public interface CollectResponseEventListener extends EventListener {
 
     /**
+     * Collection task completion result notification
      * 采集任务完成结果通知
-     * @param responseMetrics 响应数据
+     * @param responseMetrics Response Metrics
      */
     default void response(List<CollectRep.MetricsData> responseMetrics) {}
 }

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/EmailAlertNotifyHandlerImpl.java
Patch:
@@ -47,7 +47,6 @@ public void send(NoticeReceiver receiver, Alert alert) {
             javaMailSender.send(mimeMessage);
         } catch (Exception e) {
             log.error("[Email Alert] Exception，Exception information={}", e.getMessage());
-            throw new AlertNoticeException("[Email Alert] failed: " + e.getMessage());
         }
     }
 

File: manager/src/main/java/com/usthe/manager/Manager.java
Patch:
@@ -3,6 +3,7 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.autoconfigure.domain.EntityScan;
+import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
 import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
 
 /**
@@ -11,6 +12,7 @@
  */
 
 @SpringBootApplication
+@EnableJpaAuditing
 @EnableJpaRepositories(basePackages = {"com.usthe"})
 @EntityScan(basePackages = {"com.usthe"})
 public class Manager {

File: manager/src/main/java/com/usthe/manager/service/impl/AppServiceImpl.java
Patch:
@@ -41,7 +41,6 @@
  */
 @Service
 @Order(value = 1)
-@Transactional(rollbackFor = Exception.class)
 @Slf4j
 public class AppServiceImpl implements AppService, CommandLineRunner {
 

File: collector/src/main/java/com/usthe/collector/dispatch/export/MetricsDataExporter.java
Patch:
@@ -32,7 +32,7 @@ public CollectRep.MetricsData pollAlertMetricsData() throws InterruptedException
     }
 
     public CollectRep.MetricsData pollPersistentStorageMetricsData() throws InterruptedException {
-        return metricsDataToAlertQueue.poll(2, TimeUnit.SECONDS);
+        return metricsDataToPersistentStorageQueue.poll(2, TimeUnit.SECONDS);
     }
 
     public CollectRep.MetricsData pollMemoryStorageMetricsData() throws InterruptedException {

File: collector/src/main/java/com/usthe/collector/dispatch/export/MetricsDataExporter.java
Patch:
@@ -32,7 +32,7 @@ public CollectRep.MetricsData pollAlertMetricsData() throws InterruptedException
     }
 
     public CollectRep.MetricsData pollPersistentStorageMetricsData() throws InterruptedException {
-        return metricsDataToAlertQueue.poll(2, TimeUnit.SECONDS);
+        return metricsDataToPersistentStorageQueue.poll(2, TimeUnit.SECONDS);
     }
 
     public CollectRep.MetricsData pollMemoryStorageMetricsData() throws InterruptedException {

File: collector/src/main/java/com/usthe/collector/collect/common/cache/JdbcConnect.java
Patch:
@@ -5,6 +5,7 @@
 import java.sql.Connection;
 
 /**
+ * jdbc common connection
  *
  *
  */

File: collector/src/main/java/com/usthe/collector/collect/icmp/IcmpCollectImpl.java
Patch:
@@ -61,7 +61,7 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
                 builder.addValues(valueRowBuilder.build());
             } else {
                 builder.setCode(CollectRep.Code.UN_REACHABLE);
-                builder.setMsg("对端不可达，Timeout " + timeout + "ms");
+                builder.setMsg("Un Reachable, Timeout " + timeout + "ms");
                 return;
             }
         } catch (UnknownHostException unknownHostException) {

File: alerter/src/main/java/com/usthe/alert/calculate/CalculateAlarm.java
Patch:
@@ -13,9 +13,9 @@
 import com.usthe.collector.dispatch.export.MetricsDataExporter;
 import com.usthe.common.entity.manager.Monitor;
 import com.usthe.common.entity.message.CollectRep;
-import com.usthe.common.support.ResourceBundleUtf8Control;
 import com.usthe.common.util.CommonConstants;
 import com.usthe.common.util.CommonUtil;
+import com.usthe.common.util.ResourceBundleUtil;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.context.annotation.Configuration;
 
@@ -53,7 +53,7 @@ public CalculateAlarm (AlerterWorkerPool workerPool, AlerterDataQueue dataQueue,
         this.dataExporter = dataExporter;
         this.alertDefineService = alertDefineService;
         this.alerterProperties = alerterProperties;
-        this.bundle = ResourceBundle.getBundle("alerter", new ResourceBundleUtf8Control());
+        this.bundle = ResourceBundleUtil.getBundle("alerter");
         this.triggeredAlertMap = new ConcurrentHashMap<>(128);
         // 初始化stateAlertMap
         List<Monitor> monitors = monitorDao.findMonitorsByStatusIn(Arrays.asList(CommonConstants.UN_AVAILABLE_CODE,

File: alerter/src/main/java/com/usthe/alert/calculate/CalculateAlarm.java
Patch:
@@ -123,17 +123,17 @@ private void calculate(CollectRep.MetricsData metricsData) {
                 return;
             } else {
                 // 判断关联监控之前是否有可用性或者不可达告警,发送恢复告警进行监控状态恢复
-                Alert preAlert = triggeredAlertMap.get(String.valueOf(monitorId));
+                Alert preAlert = triggeredAlertMap.remove(String.valueOf(monitorId));
                 if (preAlert != null) {
                     // 发送告警恢复
                     Map<String, String> tags = new HashMap<>(6);
                     tags.put(CommonConstants.TAG_MONITOR_ID, String.valueOf(monitorId));
                     tags.put(CommonConstants.TAG_MONITOR_APP, app);
                     String target = CommonConstants.AVAILABLE;
-                    String content = "Availability Alert Resolved, monitoring status has returned to normal";
+                    String content = "Availability Alert Resolved, Monitor Status Normal Now";
                     if (CommonConstants.REACHABLE.equals(preAlert.getTarget())) {
                         target = CommonConstants.REACHABLE;
-                        content = "Reachability Alert Resolved, monitoring status has returned to normal";
+                        content = "Reachability Alert Resolved, Monitor Status Normal Now";
                     }
                     Alert resumeAlert = Alert.builder()
                             .tags(tags)

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -30,10 +30,8 @@ public void send(NoticeReceiver receiver, Alert alert) {
             } else {
                 log.warn("Send WebHook: {} Failed", receiver.getHookUrl());
             }
-        } catch (ResourceAccessException e) {
-            log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         } catch (Exception e) {
-            log.warn(e.getMessage());
+            log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         }
     }
 

File: manager/src/main/java/com/usthe/manager/controller/TagController.java
Patch:
@@ -13,7 +13,6 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
-import javax.persistence.criteria.CriteriaBuilder;
 import javax.persistence.criteria.Predicate;
 import javax.validation.Valid;
 
@@ -47,8 +46,7 @@ public ResponseEntity<Message<Void>> addNewTags(@Valid @RequestBody List<Tag> ta
         tags = tags.stream().peek(tag -> {
             tag.setType((byte) 1);
             tag.setId(null);
-            }).filter(tag -> tag.getValue() != null)
-            .distinct().collect(Collectors.toList());
+            }).distinct().collect(Collectors.toList());
         tagService.addTags(tags);
         return ResponseEntity.ok(new Message<>("Add success"));
     }

File: manager/src/main/java/com/usthe/manager/service/impl/MailServiceImpl.java
Patch:
@@ -26,6 +26,7 @@ public class MailServiceImpl implements MailService {
 
     @Resource
     private TemplateEngine templateEngine;
+
     @Resource
     private AlerterProperties alerterProperties;
 

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -167,6 +167,9 @@ public void validate(MonitorDto monitorDto, Boolean isModify) throws IllegalArgu
             }
         }
         // todo 校验标签
+        if (monitor.getTags() != null) {
+            monitor.setTags(monitor.getTags().stream().distinct().collect(Collectors.toList()));
+        }
 
         // Parameter definition structure verification  参数定义结构校验
         List<ParamDefine> paramDefines = appService.getAppParamDefines(monitorDto.getMonitor().getApp());

File: collector/src/main/java/com/usthe/collector/dispatch/MetricsCollect.java
Patch:
@@ -203,8 +203,8 @@ private void calculateFields(Metrics metrics, CollectRep.MetricsData.Builder col
                 .stream()
                 .map(cal -> {
                     int splitIndex = cal.indexOf("=");
-                    String field = cal.substring(0, splitIndex);
-                    String expressionStr = cal.substring(splitIndex + 1);
+                    String field = cal.substring(0, splitIndex).trim();
+                    String expressionStr = cal.substring(splitIndex + 1).trim();
                     Expression expression = null;
                     try {
                         expression = AviatorEvaluator.compile(expressionStr, true);

File: common/src/main/java/com/usthe/common/entity/manager/JsonOptionListAttributeConverter.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 /**
- * json 互转map对象字段为数据String字段
+ * json 互转list paramDefine.Option 对象字段为数据String字段
  *
  *
  */

File: manager/src/main/java/com/usthe/manager/component/alerter/AlertStoreHandler.java
Patch:
@@ -12,6 +12,7 @@ public interface AlertStoreHandler {
 
     /**
      * 持久化报警记录
+     * 需在持久化的同时对alert的标签信息tags关联赋值
      *
      * @param alert 报警
      */

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -33,7 +33,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
         } catch (ResourceAccessException e) {
             log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         } catch (Exception e) {
-            log.error(e.getMessage(), e);
+            log.warn(e.getMessage());
         }
     }
 

File: manager/src/main/java/com/usthe/manager/controller/AccountController.java
Patch:
@@ -93,7 +93,7 @@ public ResponseEntity<Message<Map<String, String>>> authGetToken(@RequestBody Lo
     @GetMapping("/refresh/{refreshToken}")
     @ApiOperation(value = "Use refresh TOKEN to re-acquire TOKEN", notes = "使用刷新TOKEN重新获取TOKEN")
     public ResponseEntity<Message<Map<String, String>>> refreshToken(
-            @ApiParam(value = "en: Refresh TOKEN,zh: 刷新TOKEN", example = "xxx")
+            @ApiParam(value = "Refresh TOKEN | 刷新TOKEN", example = "xxx")
             @PathVariable("refreshToken") @NotNull final String refreshToken) {
         String userId;
         boolean isRefresh;

File: alerter/src/main/java/com/usthe/alert/calculate/CalculateAlarm.java
Patch:
@@ -123,17 +123,17 @@ private void calculate(CollectRep.MetricsData metricsData) {
                 return;
             } else {
                 // 判断关联监控之前是否有可用性或者不可达告警,发送恢复告警进行监控状态恢复
-                Alert preAlert = triggeredAlertMap.get(String.valueOf(monitorId));
+                Alert preAlert = triggeredAlertMap.remove(String.valueOf(monitorId));
                 if (preAlert != null) {
                     // 发送告警恢复
                     Map<String, String> tags = new HashMap<>(6);
                     tags.put(CommonConstants.TAG_MONITOR_ID, String.valueOf(monitorId));
                     tags.put(CommonConstants.TAG_MONITOR_APP, app);
                     String target = CommonConstants.AVAILABLE;
-                    String content = "Availability Alert Resolved, monitoring status has returned to normal";
+                    String content = "Availability Alert Resolved, Monitor Status Normal Now";
                     if (CommonConstants.REACHABLE.equals(preAlert.getTarget())) {
                         target = CommonConstants.REACHABLE;
-                        content = "Reachability Alert Resolved, monitoring status has returned to normal";
+                        content = "Reachability Alert Resolved, Monitor Status Normal Now";
                     }
                     Alert resumeAlert = Alert.builder()
                             .tags(tags)

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -30,10 +30,8 @@ public void send(NoticeReceiver receiver, Alert alert) {
             } else {
                 log.warn("Send WebHook: {} Failed", receiver.getHookUrl());
             }
-        } catch (ResourceAccessException e) {
-            log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         } catch (Exception e) {
-            log.warn(e.getMessage());
+            log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         }
     }
 

File: manager/src/main/java/com/usthe/manager/controller/TagController.java
Patch:
@@ -13,7 +13,6 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
-import javax.persistence.criteria.CriteriaBuilder;
 import javax.persistence.criteria.Predicate;
 import javax.validation.Valid;
 
@@ -47,8 +46,7 @@ public ResponseEntity<Message<Void>> addNewTags(@Valid @RequestBody List<Tag> ta
         tags = tags.stream().peek(tag -> {
             tag.setType((byte) 1);
             tag.setId(null);
-            }).filter(tag -> tag.getValue() != null)
-            .distinct().collect(Collectors.toList());
+            }).distinct().collect(Collectors.toList());
         tagService.addTags(tags);
         return ResponseEntity.ok(new Message<>("Add success"));
     }

File: manager/src/main/java/com/usthe/manager/service/impl/MailServiceImpl.java
Patch:
@@ -26,6 +26,7 @@ public class MailServiceImpl implements MailService {
 
     @Resource
     private TemplateEngine templateEngine;
+
     @Resource
     private AlerterProperties alerterProperties;
 

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -167,6 +167,9 @@ public void validate(MonitorDto monitorDto, Boolean isModify) throws IllegalArgu
             }
         }
         // todo 校验标签
+        if (monitor.getTags() != null) {
+            monitor.setTags(monitor.getTags().stream().distinct().collect(Collectors.toList()));
+        }
 
         // Parameter definition structure verification  参数定义结构校验
         List<ParamDefine> paramDefines = appService.getAppParamDefines(monitorDto.getMonitor().getApp());

File: collector/src/main/java/com/usthe/collector/dispatch/MetricsCollect.java
Patch:
@@ -203,8 +203,8 @@ private void calculateFields(Metrics metrics, CollectRep.MetricsData.Builder col
                 .stream()
                 .map(cal -> {
                     int splitIndex = cal.indexOf("=");
-                    String field = cal.substring(0, splitIndex);
-                    String expressionStr = cal.substring(splitIndex + 1);
+                    String field = cal.substring(0, splitIndex).trim();
+                    String expressionStr = cal.substring(splitIndex + 1).trim();
                     Expression expression = null;
                     try {
                         expression = AviatorEvaluator.compile(expressionStr, true);

File: common/src/main/java/com/usthe/common/entity/manager/JsonOptionListAttributeConverter.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 /**
- * json 互转map对象字段为数据String字段
+ * json 互转list paramDefine.Option 对象字段为数据String字段
  *
  *
  */

File: manager/src/main/java/com/usthe/manager/component/alerter/AlertStoreHandler.java
Patch:
@@ -12,6 +12,7 @@ public interface AlertStoreHandler {
 
     /**
      * 持久化报警记录
+     * 需在持久化的同时对alert的标签信息tags关联赋值
      *
      * @param alert 报警
      */

File: manager/src/main/java/com/usthe/manager/component/alerter/impl/WebHookAlertNotifyHandlerImpl.java
Patch:
@@ -33,7 +33,7 @@ public void send(NoticeReceiver receiver, Alert alert) {
         } catch (ResourceAccessException e) {
             log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
         } catch (Exception e) {
-            log.error(e.getMessage(), e);
+            log.warn(e.getMessage());
         }
     }
 

File: manager/src/main/java/com/usthe/manager/controller/AccountController.java
Patch:
@@ -93,7 +93,7 @@ public ResponseEntity<Message<Map<String, String>>> authGetToken(@RequestBody Lo
     @GetMapping("/refresh/{refreshToken}")
     @ApiOperation(value = "Use refresh TOKEN to re-acquire TOKEN", notes = "使用刷新TOKEN重新获取TOKEN")
     public ResponseEntity<Message<Map<String, String>>> refreshToken(
-            @ApiParam(value = "en: Refresh TOKEN,zh: 刷新TOKEN", example = "xxx")
+            @ApiParam(value = "Refresh TOKEN | 刷新TOKEN", example = "xxx")
             @PathVariable("refreshToken") @NotNull final String refreshToken) {
         String userId;
         boolean isRefresh;

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -22,7 +22,6 @@
 import com.usthe.manager.service.MonitorService;
 import com.usthe.manager.support.exception.MonitorDatabaseException;
 import com.usthe.manager.support.exception.MonitorDetectException;
-import jdk.nashorn.internal.runtime.regexp.joni.constants.Traverse;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.data.domain.Page;

File: alerter/src/main/java/com/usthe/alert/calculate/CalculateAlarm.java
Patch:
@@ -110,7 +110,7 @@ private void calculate(CollectRep.MetricsData metricsData) {
                 } else {
                     // 其他异常
                     alertBuilder.target(CommonConstants.AVAILABLE)
-                            .content("监控紧急可用性告警: " + metricsData.getCode().name());
+                            .content("监控可用性告警: " + metricsData.getCode().name() + " : " + metricsData.getMsg());
                     triggeredMonitorStateAlertMap.put(monitorId, metricsData.getCode());
                     dataQueue.addAlertData(alertBuilder.build());
                 }

File: collector/src/main/java/com/usthe/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -52,8 +52,8 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
         }
         JdbcProtocol jdbcProtocol = metrics.getJdbc();
         String databaseUrl = constructDatabaseUrl(jdbcProtocol);
-        // 查询超时时间默认3000毫秒
-        int timeout = 3000;
+        // 查询超时时间默认6000毫秒
+        int timeout = 6000;
         try {
             // 获取查询语句超时时间
             if (jdbcProtocol.getTimeout() != null) {

File: collector/src/main/java/com/usthe/collector/collect/icmp/IcmpCollectImpl.java
Patch:
@@ -37,8 +37,8 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
             return;
         }
         IcmpProtocol icmp = metrics.getIcmp();
-        // 超时时间默认300毫秒
-        int timeout = 300;
+        // 超时时间默认6000毫秒
+        int timeout = 6000;
         try {
             timeout = Integer.parseInt(icmp.getTimeout());
         } catch (Exception e) {

File: collector/src/main/java/com/usthe/collector/collect/telnet/TelnetCollectImpl.java
Patch:
@@ -38,8 +38,8 @@ public void collect(CollectRep.MetricsData.Builder builder, long appId, String a
         }
 
         TelnetProtocol telnet = metrics.getTelnet();
-        // 超时时间默认300毫秒
-        int timeout = 300;
+        // 超时时间默认6000毫秒
+        int timeout = 6000;
         try {
             timeout = Integer.parseInt(telnet.getTimeout());
         } catch (Exception e) {

File: common/src/main/java/com/usthe/common/entity/job/protocol/SshProtocol.java
Patch:
@@ -29,7 +29,7 @@ public class SshProtocol {
     /**
      * 超时时间
      */
-    private String timeout = "6000";
+    private String timeout;
 
     /**
      * 用户名

File: collector/src/main/java/com/usthe/collector/util/KeyPairUtil.java
Patch:
@@ -1,12 +1,12 @@
 package com.usthe.collector.util;
 
 import lombok.extern.slf4j.Slf4j;
-import sun.misc.BASE64Decoder;
 
 import java.security.KeyFactory;
 import java.security.KeyPair;
 import java.security.PublicKey;
 import java.security.spec.X509EncodedKeySpec;
+import java.util.Base64;
 
 /**
  * 密钥工具类
@@ -35,7 +35,7 @@ public static KeyPair getKeyPairFromPublicKey(String publicKeyStr) {
                 return null;
             }
             // todo fix 公钥解析
-            byte[] publicKeyBytes = (new BASE64Decoder()).decodeBuffer(publicKeyStr);
+            byte[] publicKeyBytes = Base64.getDecoder().decode(publicKeyStr);
             X509EncodedKeySpec keySpec = new X509EncodedKeySpec(publicKeyBytes);
             PublicKey publicKey = keyFactory.generatePublic(keySpec);
             return new KeyPair(publicKey, null);

File: common/src/main/java/com/usthe/common/entity/job/Job.java
Patch:
@@ -166,7 +166,7 @@ public synchronized Set<Metrics> getNextCollectMetrics(Metrics metrics, boolean
             return null;
         }
         if (!metricsSet.remove(metrics)) {
-            log.error("Job {} appId {} app {} metrics {} remove empty error in priorMetrics.",
+            log.warn("Job {} appId {} app {} metrics {} remove empty error in priorMetrics.",
                     id, monitorId, app, metrics.getName());
         }
         if (metricsSet.isEmpty()) {

File: warehouse/src/main/java/com/usthe/warehouse/store/TdEngineDataStorage.java
Patch:
@@ -183,6 +183,7 @@ public void saveData(CollectRep.MetricsData metricsData) {
                 String createTableSql = String.format(CREATE_SUPER_TABLE_SQL, superTable, fieldSqlBuilder);
                 try {
                     assert statement != null;
+                    log.info("[tdengine-data]: create {} use sql: {}.", superTable, createTableSql);
                     statement.execute(createTableSql);
                     statement.execute(insertDataSql);
                 } catch (Exception createTableException) {

File: common/src/main/java/com/usthe/common/entity/job/protocol/JdbcProtocol.java
Patch:
@@ -38,7 +38,7 @@ public class JdbcProtocol {
     /**
      * 超时时间
      */
-    private Long timeout;
+    private String timeout;
     /**
      * 数据库类型 mysql oracle ...
      */

File: collector/src/main/java/com/usthe/collector/collect/common/cache/CacheIdentifier.java
Patch:
@@ -2,6 +2,7 @@
 
 import lombok.Builder;
 import lombok.Data;
+import lombok.ToString;
 
 /**
  * 缓存key唯一标识符
@@ -10,6 +11,7 @@
  */
 @Data
 @Builder
+@ToString
 public class CacheIdentifier {
 
     private String ip;

File: collector/src/main/java/com/usthe/collector/collect/database/JdbcCommonCollect.java
Patch:
@@ -134,7 +134,7 @@ private Statement getConnection(String username, String password, String url) th
         // 设置查询最大行数1000行
         statement.setMaxRows(1000);
         JdbcConnect jdbcConnect = new JdbcConnect(connection);
-        CommonCache.getInstance().addCache(identifier, jdbcConnect, 10000L);
+        CommonCache.getInstance().addCache(identifier, jdbcConnect);
         return statement;
     }
 

File: collector/src/main/java/com/usthe/collector/dispatch/timer/WheelTimerTask.java
Patch:
@@ -55,6 +55,8 @@ private void initJobMetrics(Job job) {
                             log.error("Aes Decode value {} error.", item.getValue());
                         }
                         item.setValue(decodeValue);
+                    } else if (item.getValue() != null && item.getValue() instanceof String) {
+                        item.setValue(((String) item.getValue()).trim());
                     }
                 })
                 .collect(Collectors.toMap(Configmap::getKey, item -> item));

File: common/src/main/java/com/usthe/common/util/IpDomainUtil.java
Patch:
@@ -33,6 +33,7 @@ public static boolean validateIpDomain(String ipDomain) {
         if (ipDomain == null || "".equals(ipDomain)) {
             return false;
         }
+        ipDomain = ipDomain.trim();
         if (LOCALHOST.equalsIgnoreCase(ipDomain)) {
             return true;
         }

File: collector/src/main/java/com/usthe/collector/dispatch/timer/WheelTimerTask.java
Patch:
@@ -55,6 +55,8 @@ private void initJobMetrics(Job job) {
                             log.error("Aes Decode value {} error.", item.getValue());
                         }
                         item.setValue(decodeValue);
+                    } else if (item.getValue() != null && item.getValue() instanceof String) {
+                        item.setValue(((String) item.getValue()).trim());
                     }
                 })
                 .collect(Collectors.toMap(Configmap::getKey, item -> item));

File: common/src/main/java/com/usthe/common/util/IpDomainUtil.java
Patch:
@@ -33,6 +33,7 @@ public static boolean validateIpDomain(String ipDomain) {
         if (ipDomain == null || "".equals(ipDomain)) {
             return false;
         }
+        ipDomain = ipDomain.trim();
         if (LOCALHOST.equalsIgnoreCase(ipDomain)) {
             return true;
         }

File: manager/src/main/java/com/usthe/manager/pojo/dto/FlyBookWebHookDto.java
Patch:
@@ -18,6 +18,7 @@
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
+@SuppressWarnings("PMD")
 public class FlyBookWebHookDto {
 
     public static final String WEBHOOK_URL = "https://open.feishu.cn/open-apis/bot/v2/hook/";

File: manager/src/main/java/com/usthe/manager/pojo/dto/WeWorkWebHookDto.java
Patch:
@@ -15,7 +15,7 @@
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
-public class WeWorkWebHookDTO {
+public class WeWorkWebHookDto {
 
     public static final String WEBHOOK_URL = "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=";
     private static final String MARKDOWN = "markdown";

File: manager/src/main/java/com/usthe/manager/component/alerter/DispatchAlarm.java
Patch:
@@ -117,7 +117,6 @@ private void sendAlertDataListener(Alert alert) {
         List<NoticeReceiver> receivers = matchReceiverByNoticeRules(alert);
         // todo 发送通知这里暂时单线程
         for (NoticeReceiver receiver : receivers) {
-            sendWeWorkRobotAlert(receiver, alert);
             switch (receiver.getType()) {
                 // todo 短信通知
                 case 0: break;
@@ -162,7 +161,7 @@ private void sendWeWorkRobotAlert(NoticeReceiver receiver, Alert alert) {
                 log.warn("Send weWork webHook: {} Failed: {}", webHookUrl, entity.getBody());
             }
         } catch (ResourceAccessException e) {
-            log.warn("Send WebHook: {} Failed: {}.", receiver.getHookUrl(), e.getMessage());
+            log.warn("Send WebHook: {} Failed: {}.", webHookUrl, e.getMessage());
         } catch (Exception e) {
             log.error(e.getMessage(), e);
         }

File: manager/src/main/java/com/usthe/manager/service/MailService.java
Patch:
@@ -11,7 +11,6 @@
  *
  * @version 1.0
  *
- * @Description
  */
 public interface MailService {
 
@@ -20,5 +19,5 @@ public interface MailService {
      * @param alert     告警信息
      * @return          邮件内容
      */
-    String buildHTMLTemplate(Alert alert);
+    String buildAlertHtmlTemplate(Alert alert);
 }

File: manager/src/main/java/com/usthe/manager/service/impl/MailServiceImpl.java
Patch:
@@ -26,8 +26,8 @@ public class MailServiceImpl implements MailService {
     private TemplateEngine templateEngine;
 
     @Override
-    public String buildHTMLTemplate(final Alert alert) {
-        //引入thymeleaf上下文参数渲染页面
+    public String buildAlertHtmlTemplate(final Alert alert) {
+        // 引入thymeleaf上下文参数渲染页面
         Context context = new Context();
         context.setVariable("target",alert.getTarget());
         context.setVariable("ID",alert.getMonitorId());

File: alerter/src/main/java/com/usthe/alert/controller/AlertDefineController.java
Patch:
@@ -21,6 +21,7 @@
 import javax.validation.Valid;
 
 import java.util.List;
+import java.util.stream.Collectors;
 
 import static com.usthe.common.util.CommonConstants.MONITOR_NOT_EXIST_CODE;
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
@@ -94,6 +95,7 @@ public ResponseEntity<Message<Void>> applyAlertDefineMonitorsBind(
     public ResponseEntity<Message<List<AlertDefineMonitorBind>>> getAlertDefineMonitorsBind(
             @ApiParam(value = "告警定义ID", example = "6565463543") @PathVariable("alertDefineId") long alertDefineId) {
         List<AlertDefineMonitorBind> defineBinds = alertDefineService.getBindAlertDefineMonitors(alertDefineId);
+        defineBinds = defineBinds.stream().filter(item -> item.getMonitor() != null).collect(Collectors.toList());
         return ResponseEntity.ok(new Message<>(defineBinds));
     }
 

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefineMonitorBind.java
Patch:
@@ -7,6 +7,8 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+import org.hibernate.annotations.NotFound;
+import org.hibernate.annotations.NotFoundAction;
 
 import javax.persistence.Column;
 import javax.persistence.Entity;
@@ -58,5 +60,6 @@ public class AlertDefineMonitorBind {
 
     @OneToOne(fetch = FetchType.EAGER)
     @JoinColumn(name = "monitor_id", referencedColumnName = "id", insertable = false, updatable = false)
+    @NotFound(action = NotFoundAction.IGNORE)
     private Monitor monitor;
 }

File: common/src/main/java/com/usthe/common/entity/alerter/AlertDefineMonitorBind.java
Patch:
@@ -48,9 +48,6 @@ public class AlertDefineMonitorBind {
     @Column(name = "monitor_id")
     private Long monitorId;
 
-    @ApiModelProperty(value = "租户ID", example = "42343", accessMode = READ_WRITE, position = 3)
-    private Long tenantId;
-
     @ApiModelProperty(value = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY, position = 4)
     @Column(insertable = false, updatable = false)
     private LocalDateTime gmtCreate;

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -169,6 +169,7 @@ public void validate(MonitorDto monitorDto, Boolean isModify) throws IllegalArgu
                             }
                             param.setType(CommonConstants.PARAM_TYPE_NUMBER);
                             break;
+                        case "textarea":
                         case "text":
                             Short limit = paramDefine.getLimit();
                             if (limit != null) {

File: manager/src/main/java/com/usthe/manager/service/impl/AppServiceImpl.java
Patch:
@@ -123,11 +123,11 @@ public List<Hierarchy> getAllAppHierarchy(String lang) {
     public void run(String... args) throws Exception {
         // 读取app定义配置加载到内存中 define/app/*.yml
         Yaml yaml = new Yaml();
-        String classpath = this.getClass().getResource(File.separator).getPath();
+        String classpath = this.getClass().getClassLoader().getResource("").getPath();
         String defineAppPath = classpath + File.separator + "define" + File.separator + "app";
         File directory = new File(defineAppPath);
         if (!directory.exists() || directory.listFiles() == null) {
-            classpath = this.getClass().getResource("").getPath();
+            classpath = this.getClass().getResource(File.separator).getPath();
             defineAppPath = classpath + File.separator + "define" + File.separator + "app";
             directory = new File(defineAppPath);
             if (!directory.exists() || directory.listFiles() == null) {

File: manager/src/main/java/com/usthe/manager/service/impl/AppServiceImpl.java
Patch:
@@ -59,7 +59,7 @@ public Job getAppDefine(String app) throws IllegalArgumentException {
         if (appDefine == null) {
             throw new IllegalArgumentException("The app " + app + " not support.");
         }
-        return appDefine;
+        return appDefine.clone();
     }
 
     @Override
@@ -123,7 +123,7 @@ public List<Hierarchy> getAllAppHierarchy(String lang) {
     public void run(String... args) throws Exception {
         // 读取app定义配置加载到内存中 define/app/*.yml
         Yaml yaml = new Yaml();
-        String classpath = this.getClass().getResource(File.separator).getPath();
+        String classpath = this.getClass().getClassLoader().getResource("").getPath();
         String defineAppPath = classpath + File.separator + "define" + File.separator + "app";
         File directory = new File(defineAppPath);
         if (!directory.exists() || directory.listFiles() == null) {

File: manager/src/main/java/com/usthe/manager/service/impl/AppServiceImpl.java
Patch:
@@ -59,7 +59,7 @@ public Job getAppDefine(String app) throws IllegalArgumentException {
         if (appDefine == null) {
             throw new IllegalArgumentException("The app " + app + " not support.");
         }
-        return appDefine;
+        return appDefine.clone();
     }
 
     @Override
@@ -123,7 +123,7 @@ public List<Hierarchy> getAllAppHierarchy(String lang) {
     public void run(String... args) throws Exception {
         // 读取app定义配置加载到内存中 define/app/*.yml
         Yaml yaml = new Yaml();
-        String classpath = this.getClass().getResource(File.separator).getPath();
+        String classpath = this.getClass().getClassLoader().getResource("").getPath();
         String defineAppPath = classpath + File.separator + "define" + File.separator + "app";
         File directory = new File(defineAppPath);
         if (!directory.exists() || directory.listFiles() == null) {

File: collector/src/main/java/com/usthe/collector/dispatch/MetricsCollect.java
Patch:
@@ -132,7 +132,7 @@ public void run() {
                 log.error("[Metrics Collect]: {}.", msg, e);
                 response.setCode(CollectRep.Code.FAIL);
                 if (msg != null) {
-                    response.setMsg(e.getMessage());
+                    response.setMsg(msg);
                 }
             }
         }

File: manager/src/main/java/com/usthe/manager/service/JobSchedulerInit.java
Patch:
@@ -5,6 +5,7 @@
 import com.usthe.common.entity.job.Job;
 import com.usthe.common.entity.manager.Monitor;
 import com.usthe.common.entity.manager.Param;
+import com.usthe.common.util.GsonUtil;
 import com.usthe.manager.dao.MonitorDao;
 import com.usthe.manager.dao.ParamDao;
 import lombok.extern.slf4j.Slf4j;
@@ -47,6 +48,8 @@ public void run(String... args) throws Exception {
             try {
                 // 构造采集任务Job实体
                 Job appDefine = appService.getAppDefine(monitor.getApp());
+                // todo 这里暂时是深拷贝处理
+                appDefine = GsonUtil.fromJson(GsonUtil.toJson(appDefine), Job.class);
                 appDefine.setId(monitor.getJobId());
                 appDefine.setMonitorId(monitor.getId());
                 appDefine.setInterval(monitor.getIntervals());

File: warehouse/src/main/java/com/usthe/warehouse/store/TdEngineDataStorage.java
Patch:
@@ -55,8 +55,8 @@ public TdEngineDataStorage(WarehouseWorkerPool workerPool, WarehouseProperties p
         this.workerPool = workerPool;
         this.dataExporter = dataExporter;
         if (properties == null || properties.getStore() == null || properties.getStore().getTdEngine() == null) {
-            log.error("init error, please config Warehouse influxdb props in application.yml");
-            throw new IllegalArgumentException("please config Warehouse influxdb props");
+            log.error("init error, please config Warehouse TdEngine props in application.yml");
+            throw new IllegalArgumentException("please config Warehouse TdEngine props");
         }
         initTdEngineDatasource(properties.getStore().getTdEngine());
         startStorageData();

File: manager/src/main/java/com/usthe/manager/service/impl/MonitorServiceImpl.java
Patch:
@@ -242,9 +242,9 @@ public void modifyMonitor(Monitor monitor, List<Param> params) throws RuntimeExc
             throw new IllegalArgumentException("The Monitor " + monitorId + " not exists");
         }
         Monitor preMonitor = queryOption.get();
-        if (!preMonitor.getApp().equals(monitor.getApp()) || !preMonitor.getHost().equals(monitor.getHost())) {
-            // 监控的 类型和host不能修改
-            throw new IllegalArgumentException("Can not modify monitor's app or host");
+        if (!preMonitor.getApp().equals(monitor.getApp())) {
+            // 监控的类型不能修改
+            throw new IllegalArgumentException("Can not modify monitor's app type");
         }
         // 构造采集任务Job实体
         Job appDefine = appService.getAppDefine(monitor.getApp());

File: alerter/src/main/java/com/usthe/alert/dao/AlertDefineBindDao.java
Patch:
@@ -1,6 +1,6 @@
 package com.usthe.alert.dao;
 
-import com.usthe.common.entity.alerter.AlertDefineBind;
+import com.usthe.common.entity.alerter.AlertDefineMonitorBind;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
 
@@ -11,7 +11,7 @@
  *
  *
  */
-public interface AlertDefineBindDao extends JpaRepository<AlertDefineBind, Long>, JpaSpecificationExecutor<AlertDefineBind> {
+public interface AlertDefineBindDao extends JpaRepository<AlertDefineMonitorBind, Long>, JpaSpecificationExecutor<AlertDefineMonitorBind> {
 
     /**
      * 根据告警定义ID删除告警定义与监控关联
@@ -24,5 +24,5 @@ public interface AlertDefineBindDao extends JpaRepository<AlertDefineBind, Long>
      * @param alertDefineId 告警定义ID
      * @return 关联监控信息
      */
-    List<AlertDefineBind> getAlertDefineBindsByAlertDefineIdEquals(Long alertDefineId);
+    List<AlertDefineMonitorBind> getAlertDefineBindsByAlertDefineIdEquals(Long alertDefineId);
 }

File: alerter/src/main/java/com/usthe/alert/dao/AlertDefineDao.java
Patch:
@@ -28,7 +28,7 @@ public interface AlertDefineDao extends JpaRepository<AlertDefine, Long>, JpaSpe
      * @param metrics 指标组
      * @return 告警定义列表
      */
-    @Query("select define from AlertDefine define join AlertDefineBind bind on bind.alertDefineId = define.id " +
+    @Query("select define from AlertDefine define join AlertDefineMonitorBind bind on bind.alertDefineId = define.id " +
             "where bind.monitorId = :monitorId and define.metric = :metrics and define.enable = true")
     List<AlertDefine> queryAlertDefinesByMonitor(@Param(value = "monitorId") Long monitorId,
                                                  @Param(value = "metrics") String metrics);

File: alerter/src/main/java/com/usthe/alert/service/AlertDefineService.java
Patch:
@@ -1,7 +1,7 @@
 package com.usthe.alert.service;
 
 import com.usthe.common.entity.alerter.AlertDefine;
-import com.usthe.common.entity.alerter.AlertDefineBind;
+import com.usthe.common.entity.alerter.AlertDefineMonitorBind;
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.PageRequest;
 import org.springframework.data.jpa.domain.Specification;
@@ -75,7 +75,7 @@ public interface AlertDefineService {
      * @param alertId 告警定义ID
      * @param alertDefineBinds 关联关系
      */
-    void applyBindAlertDefineMonitors(Long alertId, List<AlertDefineBind> alertDefineBinds);
+    void applyBindAlertDefineMonitors(Long alertId, List<AlertDefineMonitorBind> alertDefineBinds);
 
     /**
      * 查询与此监控ID关联的指定指标组匹配的告警定义
@@ -99,5 +99,5 @@ public interface AlertDefineService {
      * @param alertDefineId 告警定义ID
      * @return 监控列表关联信息
      */
-    List<AlertDefineBind> getBindAlertDefineMonitors(long alertDefineId);
+    List<AlertDefineMonitorBind> getBindAlertDefineMonitors(long alertDefineId);
 }

File: alerter/src/main/java/com/usthe/alert/service/impl/AlertDefineServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import com.usthe.alert.dao.AlertDefineBindDao;
 import com.usthe.alert.dao.AlertDefineDao;
 import com.usthe.common.entity.alerter.AlertDefine;
-import com.usthe.common.entity.alerter.AlertDefineBind;
+import com.usthe.common.entity.alerter.AlertDefineMonitorBind;
 import com.usthe.alert.service.AlertDefineService;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -73,7 +73,7 @@ public Page<AlertDefine> getMonitorBindAlertDefines(Specification<AlertDefine> s
     }
 
     @Override
-    public void applyBindAlertDefineMonitors(Long alertId, List<AlertDefineBind> alertDefineBinds) {
+    public void applyBindAlertDefineMonitors(Long alertId, List<AlertDefineMonitorBind> alertDefineBinds) {
         // todo 校验此告警定义和监控是否存在
 
         // 先删除此告警的所有关联
@@ -99,7 +99,7 @@ public Page<AlertDefine> getAlertDefines(Specification<AlertDefine> specificatio
     }
 
     @Override
-    public List<AlertDefineBind> getBindAlertDefineMonitors(long alertDefineId) {
+    public List<AlertDefineMonitorBind> getBindAlertDefineMonitors(long alertDefineId) {
         return alertDefineBindDao.getAlertDefineBindsByAlertDefineIdEquals(alertDefineId);
     }
 }

File: warehouse/src/main/java/com/usthe/warehouse/controller/MetricsDataController.java
Patch:
@@ -36,7 +36,7 @@ public class MetricsDataController {
     @Autowired
     private RedisDataStorage redisDataStorage;
 
-    @GetMapping("/monitors/{monitorId}/metrics/{metrics}")
+    @GetMapping("/monitor/{monitorId}/metrics/{metrics}")
     @ApiOperation(value = "查询监控指标组的指标数据", notes = "查询监控指标组的指标数据")
     public ResponseEntity<Message<MetricsData>> getMetricsData(
             @ApiParam(value = "监控ID", example = "343254354")
@@ -66,7 +66,7 @@ public ResponseEntity<Message<MetricsData>> getMetricsData(
         }
     }
 
-    @GetMapping("/monitors/{monitorId}/metrics/{metricFull}")
+    @GetMapping("/monitor/{monitorId}/metric/{metricFull}")
     @ApiOperation(value = "查询监控指标组的指定指标的历史数据", notes = "查询监控指标组下的指定指标的历史数据")
     public ResponseEntity<Message<Void>> getMetricHistoryData(
             @ApiParam(value = "监控ID", example = "343254354")

File: manager/src/main/java/com/usthe/manager/pojo/entity/NoticeRule.java
Patch:
@@ -42,17 +42,16 @@ public class NoticeRule {
     @ApiModelProperty(value = "策略名称", example = "dispatch-1", accessMode = READ_WRITE, position = 1)
     @Length(max = 100)
     @NotNull
-    private Long name;
+    private String name;
 
     @ApiModelProperty(value = "接收人ID", example = "4324324", accessMode = READ_WRITE, position = 2)
-    @Length(max = 100)
     @NotNull
     private Long receiverId;
 
     @ApiModelProperty(value = "接收人标识", example = "tom", accessMode = READ_WRITE, position = 3)
     @Length(max = 100)
     @NotNull
-    private Long receiverName;
+    private String receiverName;
 
     @ApiModelProperty(value = "是否启用此策略", example = "true", accessMode = READ_WRITE, position = 4)
     private boolean enable = true;

File: manager/src/main/java/com/usthe/manager/pojo/entity/Monitor.java
Patch:
@@ -9,6 +9,7 @@
 import lombok.NoArgsConstructor;
 import org.hibernate.validator.constraints.Length;
 
+import javax.persistence.Column;
 import javax.persistence.Entity;
 import javax.persistence.Id;
 import javax.persistence.Table;
@@ -103,12 +104,14 @@ public class Monitor {
      * 记录创建时间
      */
     @ApiModelProperty(value = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY, position = 10)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtCreate;
 
     /**
      * 记录最新修改时间
      */
     @ApiModelProperty(value = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY, position = 11)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtUpdate;
 
 }

File: manager/src/main/java/com/usthe/manager/pojo/entity/Param.java
Patch:
@@ -8,6 +8,7 @@
 import lombok.NoArgsConstructor;
 import org.hibernate.validator.constraints.Length;
 
+import javax.persistence.Column;
 import javax.persistence.Entity;
 import javax.persistence.GeneratedValue;
 import javax.persistence.GenerationType;
@@ -74,12 +75,14 @@ public class Param {
      * 记录创建时间
      */
     @ApiModelProperty(value = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY, position = 5)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtCreate;
 
     /**
      * 记录最新修改时间
      */
     @ApiModelProperty(value = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY, position = 6)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtUpdate;
 
 }

File: manager/src/main/java/com/usthe/manager/pojo/entity/ParamDefine.java
Patch:
@@ -126,12 +126,14 @@ public class ParamDefine {
      * 记录创建时间
      */
     @ApiModelProperty(value = "记录创建时间(毫秒时间戳)", example = "1612198922000", accessMode = READ_ONLY, position = 11)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtCreate;
 
     /**
      * 记录最新修改时间
      */
     @ApiModelProperty(value = "记录最新修改时间(毫秒时间戳)", example = "1612198444000", accessMode = READ_ONLY, position = 12)
+    @Column(insertable = false, updatable = false)
     private LocalDateTime gmtUpdate;
 
     @Data

File: manager/src/main/java/com/usthe/manager/controller/MonitorController.java
Patch:
@@ -40,7 +40,7 @@ public class MonitorController {
     public ResponseEntity<Message<Void>> addNewMonitor(@Valid @RequestBody MonitorDto monitorDto) {
         // 校验请求数据
         monitorService.validate(monitorDto, false);
-        if (monitorDto.getDetected()) {
+        if (monitorDto.isDetected()) {
             // 进行探测
             monitorService.detectMonitor(monitorDto.getMonitor(), monitorDto.getParams());
         }
@@ -53,7 +53,7 @@ public ResponseEntity<Message<Void>> addNewMonitor(@Valid @RequestBody MonitorDt
     public ResponseEntity<Message<Void>> modifyMonitor(@Valid @RequestBody MonitorDto monitorDto) {
         // 校验请求数据
         monitorService.validate(monitorDto, true);
-        if (monitorDto.getDetected()) {
+        if (monitorDto.isDetected()) {
             // 进行探测
             monitorService.detectMonitor(monitorDto.getMonitor(), monitorDto.getParams());
         }

File: manager/src/main/java/com/usthe/manager/pojo/dto/MonitorDto.java
Patch:
@@ -41,5 +41,5 @@ public class MonitorDto {
      * 是否探测
      */
     @ApiModelProperty(value = "是否进行探测", accessMode = READ_WRITE, position = 2)
-    private Boolean detected;
+    private boolean detected;
 }

File: common/src/main/java/com/usthe/common/util/AesUtil.java
Patch:
@@ -19,9 +19,9 @@
 public class AesUtil {
 
     /**
-     *  默认加密秘钥 AES加密秘钥为约定16位，小于16位会报错
+     *  默认加密秘钥 AES加密秘钥为约定16位，大于小于16位会报错
      */
-    private static final String ENCODE_RULES = "tomSun28HaHaHaHaHa";
+    private static final String ENCODE_RULES = "tomSun28HaHaHaHa";
 
     /**
      *  默认算法

File: common/src/main/java/com/usthe/common/entity/job/Configmap.java
Patch:
@@ -32,5 +32,5 @@ public class Configmap {
      * number,string,secret
      * 数字,非加密字符串,加密字符串
      */
-    private byte type;
+    private byte type = 1;
 }

File: common/src/main/java/com/usthe/common/entity/job/Metrics.java
Patch:
@@ -95,9 +95,9 @@ public static class Field {
          */
         private String field;
         /**
-         * 指标类型 number:数字 string:字符串
+         * 指标类型 0-number:数字 1-string:字符串
          */
-        private String type;
+        private byte type = 1;
         /**
          * 此字段是否为实例主键
          */

File: common/src/main/java/com/usthe/common/entity/job/Configmap.java
Patch:
@@ -28,8 +28,9 @@ public class Configmap {
     private Object value;
 
     /**
+     * 参数类型 0:数字 1:字符串 2:加密串
      * number,string,secret
      * 数字,非加密字符串,加密字符串
      */
-    private String type;
+    private byte type;
 }

File: common/src/main/java/com/usthe/common/entity/job/Job.java
Patch:
@@ -50,11 +50,11 @@ public class Job {
     /**
      * 任务采集时间间隔(单位秒) eg: 30,60,600
      */
-    private long interval;
+    private long interval = 600L;
     /**
      * 是否是循环周期性任务 true为是,false为否
      */
-    private boolean isCyclic;
+    private boolean isCyclic = false;
     /**
      * 指标组配置 eg: cpu memory
      */
@@ -88,7 +88,7 @@ public synchronized void constructPriorMetrics() {
                 .peek(metric -> {
                     // 判断是否配置aliasFields 没有则配置默认
                     if (metric.getAliasFields() == null || metric.getAliasFields().isEmpty()) {
-                        metric.setAliasFields(metric.getFields());
+                        metric.setAliasFields(metric.getFields().stream().map(Metrics.Field::getField).collect(Collectors.toList()));
                     }
                     // 设置默认的指标组执行优先级
                     if (metric.getPriority() == null) {

File: common/src/main/java/com/usthe/common/entity/job/Metrics.java
Patch:
@@ -39,7 +39,7 @@ public class Metrics {
     /**
      * 公共属性-采集监控的最终结果属性集合 eg: speed | times | size
      */
-    private List<String> fields;
+    private List<Field> fields;
     /**
      * 公共属性-采集监控的前置查询属性集合 eg: size1 | size2 | speedSize
      */
@@ -74,7 +74,7 @@ public class Metrics {
     @Data
     @AllArgsConstructor
     @NoArgsConstructor
-    public class Field {
+    public static class Field {
         /**
          * 指标名称
          */

File: manager/src/main/java/com/usthe/manager/controller/AppController.java
Patch:
@@ -14,14 +14,16 @@
 
 import java.util.List;
 
+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
+
 /**
  * 监控类型管理API
  *
  *
  */
 @Api(tags = "监控类型管理API")
 @RestController
-@RequestMapping(path = "/apps")
+@RequestMapping(path = "/apps", produces = {APPLICATION_JSON_VALUE})
 public class AppController {
 
     @Autowired

File: manager/src/main/java/com/usthe/manager/dao/MonitorDao.java
Patch:
@@ -1,14 +1,14 @@
 package com.usthe.manager.dao;
 
+import com.usthe.manager.pojo.entity.Monitor;
 import org.springframework.data.jpa.repository.JpaRepository;
-import sun.security.util.AuthResources;
 
 /**
  * AuthResources 数据库操作
  *
  *
  */
-public interface MonitorDao extends JpaRepository<AuthResources, Long> {
+public interface MonitorDao extends JpaRepository<Monitor, Long> {
 
 
 }

File: manager/src/main/java/com/usthe/manager/dao/ParamDao.java
Patch:
@@ -1,11 +1,12 @@
 package com.usthe.manager.dao;
 
+import com.usthe.manager.pojo.entity.Param;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 /**
  * ParamDao 数据库操作
  *
  *
  */
-public interface ParamDao extends JpaRepository<ParamDao, Long> {
+public interface ParamDao extends JpaRepository<Param, Long> {
 }

