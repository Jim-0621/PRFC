File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/SysUserService.java
Patch:
@@ -22,6 +22,7 @@
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
 import com.baomidou.mybatisplus.extension.service.IService;
+import com.pig4cloud.pig.admin.api.dto.RegisterUserDTO;
 import com.pig4cloud.pig.admin.api.dto.UserDTO;
 import com.pig4cloud.pig.admin.api.dto.UserInfo;
 import com.pig4cloud.pig.admin.api.entity.SysUser;
@@ -108,7 +109,7 @@ public interface SysUserService extends IService<SysUser> {
 	 * @param userDto 用户信息
 	 * @return success/false
 	 */
-	R<Boolean> registerUser(UserDTO userDto);
+	R<Boolean> registerUser(RegisterUserDTO userDto);
 
 	/**
 	 * 锁定用户

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/support/core/FormIdentityLoginConfigurer.java
Patch:
@@ -18,11 +18,12 @@ public final class FormIdentityLoginConfigurer
 	public void init(HttpSecurity http) throws Exception {
 		http.formLogin(formLogin -> {
 			formLogin.loginPage("/token/login");
-			formLogin.loginProcessingUrl("/token/form");
+			formLogin.loginProcessingUrl("/oauth2/form");
 			formLogin.failureHandler(new FormAuthenticationFailureHandler());
 
 		})
-			.logout(logout -> logout.logoutSuccessHandler(new SsoLogoutSuccessHandler())
+			.logout(logout -> logout.logoutUrl("/oauth2/logout")
+				.logoutSuccessHandler(new SsoLogoutSuccessHandler())
 				.deleteCookies("JSESSIONID")
 				.invalidateHttpSession(true)) // SSO登出成功处理
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/support/filter/ValidateCodeFilter.java
Patch:
@@ -60,9 +60,9 @@ protected void doFilterInternal(HttpServletRequest request, HttpServletResponse
 			return;
 		}
 
-		// 客户端配置跳过验证码
+		// 如果是密码模式 && 客户端不需要校验验证码
 		boolean isIgnoreClient = authSecurityConfigProperties.getIgnoreClients().contains(WebUtils.getClientId());
-		if (isIgnoreClient) {
+		if (StrUtil.equals(SecurityConstants.PASSWORD, grantType) && isIgnoreClient) {
 			filterChain.doFilter(request, response);
 			return;
 		}

File: pig-common/pig-common-core/src/main/java/com/pig4cloud/pig/common/core/constant/SecurityConstants.java
Patch:
@@ -125,6 +125,6 @@ public interface SecurityConstants {
 	/**
 	 * 授权码模式confirm
 	 */
-	String CUSTOM_CONSENT_PAGE_URI = "/token/confirm_access";
+	String CUSTOM_CONSENT_PAGE_URI = "/oauth2/confirm_access";
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/entity/SysLog.java
Patch:
@@ -19,8 +19,8 @@
 
 package com.pig4cloud.pig.admin.api.entity;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
-import com.alibaba.excel.annotation.ExcelProperty;
+import cn.idev.excel.annotation.ExcelIgnore;
+import cn.idev.excel.annotation.ExcelProperty;
 import com.baomidou.mybatisplus.annotation.*;
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotBlank;

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/DeptExcelVo.java
Patch:
@@ -1,7 +1,7 @@
 package com.pig4cloud.pig.admin.api.vo;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
-import com.alibaba.excel.annotation.ExcelProperty;
+import cn.idev.excel.annotation.ExcelIgnore;
+import cn.idev.excel.annotation.ExcelProperty;
 import com.pig4cloud.plugin.excel.annotation.ExcelLine;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/PostExcelVO.java
Patch:
@@ -1,8 +1,8 @@
 package com.pig4cloud.pig.admin.api.vo;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
-import com.alibaba.excel.annotation.ExcelProperty;
-import com.alibaba.excel.annotation.write.style.ColumnWidth;
+import cn.idev.excel.annotation.ExcelIgnore;
+import cn.idev.excel.annotation.ExcelProperty;
+import cn.idev.excel.annotation.write.style.ColumnWidth;
 import com.pig4cloud.plugin.excel.annotation.ExcelLine;
 import jakarta.validation.constraints.NotBlank;
 import jakarta.validation.constraints.NotNull;

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/RoleExcelVO.java
Patch:
@@ -1,8 +1,8 @@
 package com.pig4cloud.pig.admin.api.vo;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
-import com.alibaba.excel.annotation.ExcelProperty;
-import com.alibaba.excel.annotation.write.style.ColumnWidth;
+import cn.idev.excel.annotation.ExcelIgnore;
+import cn.idev.excel.annotation.ExcelProperty;
+import cn.idev.excel.annotation.write.style.ColumnWidth;
 import com.pig4cloud.plugin.excel.annotation.ExcelLine;
 import jakarta.validation.constraints.NotBlank;
 import lombok.Data;

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/UserExcelVO.java
Patch:
@@ -1,8 +1,8 @@
 package com.pig4cloud.pig.admin.api.vo;
 
-import com.alibaba.excel.annotation.ExcelIgnore;
-import com.alibaba.excel.annotation.ExcelProperty;
-import com.alibaba.excel.annotation.write.style.ColumnWidth;
+import cn.idev.excel.annotation.ExcelIgnore;
+import cn.idev.excel.annotation.ExcelProperty;
+import cn.idev.excel.annotation.write.style.ColumnWidth;
 import com.pig4cloud.plugin.excel.annotation.DictTypeProperty;
 import com.pig4cloud.plugin.excel.annotation.ExcelLine;
 import jakarta.validation.constraints.NotBlank;

File: pig-common/pig-common-feign/src/main/java/com/pig4cloud/pig/common/feign/sentinel/handle/GlobalBizExceptionHandler.java
Patch:
@@ -131,7 +131,7 @@ public R bindExceptionHandler(BindException exception) {
 	 */
 	@ExceptionHandler({ NoResourceFoundException.class })
 	@ResponseStatus(HttpStatus.NOT_FOUND)
-	public R bindExceptionHandler(NoResourceFoundException exception) {
+	public R notFoundExceptionHandler(NoResourceFoundException exception) {
 		log.debug("请求路径 404 {}", exception.getMessage());
 		return R.failed(exception.getMessage());
 	}

File: pig-common/pig-common-feign/src/main/java/com/pig4cloud/pig/common/feign/sentinel/handle/GlobalBizExceptionHandler.java
Patch:
@@ -131,7 +131,7 @@ public R bindExceptionHandler(BindException exception) {
 	 */
 	@ExceptionHandler({ NoResourceFoundException.class })
 	@ResponseStatus(HttpStatus.NOT_FOUND)
-	public R bindExceptionHandler(NoResourceFoundException exception) {
+	public R notFoundExceptionHandler(NoResourceFoundException exception) {
 		log.debug("请求路径 404 {}", exception.getMessage());
 		return R.failed(exception.getMessage());
 	}

File: pig-common/pig-common-feign/src/main/java/com/pig4cloud/pig/common/feign/sentinel/handle/GlobalBizExceptionHandler.java
Patch:
@@ -92,7 +92,7 @@ public R handleAccessDeniedException(AccessDeniedException e) {
 		String msg = SpringSecurityMessageSource.getAccessor()
 			.getMessage("AbstractAccessDecisionManager.accessDenied", e.getMessage());
 		log.warn("拒绝授权异常信息 ex={}", msg);
-		return R.failed(e.getLocalizedMessage());
+		return R.failed(msg);
 	}
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -204,7 +204,7 @@ public Boolean deleteUserByIds(Long[] ids) {
 	@Override
 	@CacheEvict(value = CacheConstants.USER_DETAILS, key = "#userDto.username")
 	public R<Boolean> updateUserInfo(UserDTO userDto) {
-		UserVO userVO = baseMapper.getUserVoByUsername(userDto.getUsername());
+		UserVO userVO = baseMapper.getUserVoById(SecurityUtils.getUser().getId());
 
 		SysUser sysUser = new SysUser();
 		sysUser.setPhone(userDto.getPhone());
@@ -412,7 +412,7 @@ public R<Boolean> lockUser(String username) {
 	@Override
 	@CacheEvict(value = CacheConstants.USER_DETAILS, key = "#userDto.username")
 	public R changePassword(UserDTO userDto) {
-		UserVO userVO = baseMapper.getUserVoByUsername(userDto.getUsername());
+		UserVO userVO = baseMapper.getUserVoById(SecurityUtils.getUser().getId());
 		if (Objects.isNull(userVO)) {
 			return R.failed("用户不存在");
 		}

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -204,7 +204,7 @@ public Boolean deleteUserByIds(Long[] ids) {
 	@Override
 	@CacheEvict(value = CacheConstants.USER_DETAILS, key = "#userDto.username")
 	public R<Boolean> updateUserInfo(UserDTO userDto) {
-		UserVO userVO = baseMapper.getUserVoByUsername(userDto.getUsername());
+		UserVO userVO = baseMapper.getUserVoById(SecurityUtils.getUser().getId());
 
 		SysUser sysUser = new SysUser();
 		sysUser.setPhone(userDto.getPhone());
@@ -412,7 +412,7 @@ public R<Boolean> lockUser(String username) {
 	@Override
 	@CacheEvict(value = CacheConstants.USER_DETAILS, key = "#userDto.username")
 	public R changePassword(UserDTO userDto) {
-		UserVO userVO = baseMapper.getUserVoByUsername(userDto.getUsername());
+		UserVO userVO = baseMapper.getUserVoById(SecurityUtils.getUser().getId());
 		if (Objects.isNull(userVO)) {
 			return R.failed("用户不存在");
 		}

File: pig-common/pig-common-oss/src/main/java/com/pig4cloud/pig/common/file/oss/http/OssEndpoint.java
Patch:
@@ -55,7 +55,7 @@ public class OssEndpoint {
 	 */
 	@SneakyThrows
 	@PostMapping("/bucket/{bucketName}")
-	public Bucket createBucker(@PathVariable String bucketName) {
+	public Bucket createBucket(@PathVariable String bucketName) {
 
 		template.createBucket(bucketName);
 		return template.getBucket(bucketName).get();

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/support/base/OAuth2ResourceOwnerBaseAuthenticationProvider.java
Patch:
@@ -147,14 +147,14 @@ public Authentication authenticate(Authentication authentication) throws Authent
 					.principal(usernamePasswordAuthentication)
 					.authorizationServerContext(AuthorizationServerContextHolder.getContext())
 					.authorizedScopes(authorizedScopes)
-					.authorizationGrantType(AuthorizationGrantType.PASSWORD)
+					.authorizationGrantType(resouceOwnerBaseAuthentication.getAuthorizationGrantType())
 					.authorizationGrant(resouceOwnerBaseAuthentication);
 			// @formatter:on
 
 			OAuth2Authorization.Builder authorizationBuilder = OAuth2Authorization
 				.withRegisteredClient(registeredClient)
 				.principalName(usernamePasswordAuthentication.getName())
-				.authorizationGrantType(AuthorizationGrantType.PASSWORD)
+				.authorizationGrantType(resouceOwnerBaseAuthentication.getAuthorizationGrantType())
 				// 0.4.0 新增的方法
 				.authorizedScopes(authorizedScopes);
 

File: pig-common/pig-common-oss/src/main/java/com/pig4cloud/pig/common/file/local/LocalFileTemplate.java
Patch:
@@ -132,7 +132,7 @@ public List<S3ObjectSummary> getAllObjectsByPrefix(String bucketName, String pre
 		return Arrays.stream(FileUtil.ls(dir)).filter(file -> file.getName().startsWith(prefix)).map(file -> {
 			S3ObjectSummary summary = new S3ObjectSummary();
 			summary.setKey(file.getName());
-			return new S3ObjectSummary();
+			return summary;
 		}).collect(Collectors.toList());
 	}
 

File: pig-common/pig-common-oss/src/main/java/com/pig4cloud/pig/common/file/local/LocalFileTemplate.java
Patch:
@@ -132,7 +132,7 @@ public List<S3ObjectSummary> getAllObjectsByPrefix(String bucketName, String pre
 		return Arrays.stream(FileUtil.ls(dir)).filter(file -> file.getName().startsWith(prefix)).map(file -> {
 			S3ObjectSummary summary = new S3ObjectSummary();
 			summary.setKey(file.getName());
-			return new S3ObjectSummary();
+			return summary;
 		}).collect(Collectors.toList());
 	}
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigCustomOpaqueTokenIntrospector.java
Patch:
@@ -12,6 +12,7 @@
 import org.springframework.security.core.userdetails.UserDetails;
 import org.springframework.security.core.userdetails.UsernameNotFoundException;
 import org.springframework.security.oauth2.core.AuthorizationGrantType;
+import org.springframework.security.oauth2.core.DefaultOAuth2AuthenticatedPrincipal;
 import org.springframework.security.oauth2.core.OAuth2AuthenticatedPrincipal;
 import org.springframework.security.oauth2.server.authorization.OAuth2Authorization;
 import org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService;
@@ -44,8 +45,8 @@ public OAuth2AuthenticatedPrincipal introspect(String token) {
 
 		// 客户端模式默认返回
 		if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(oldAuthorization.getAuthorizationGrantType())) {
-			return new PigClientCredentialsOAuth2AuthenticatedPrincipal(oldAuthorization.getAttributes(),
-					AuthorityUtils.NO_AUTHORITIES, oldAuthorization.getPrincipalName());
+			return new DefaultOAuth2AuthenticatedPrincipal(oldAuthorization.getPrincipalName(),
+					Objects.requireNonNull(oldAuthorization.getAccessToken().getClaims()), AuthorityUtils.NO_AUTHORITIES);
 		}
 
 		Map<String, PigUserDetailsService> userDetailsServiceMap = SpringUtil

File: pig-register/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -59,8 +59,7 @@ public ResponseEntity<Map<String, String>> serverState() {
 	@SneakyThrows
 	@GetMapping("/announcement")
 	public RestResult<String> getAnnouncement() {
-		ClassPathResource resource = new ClassPathResource(ANNOUNCEMENT_FILE);
-		return RestResultUtils.success(FileUtil.readString(resource.getFile(), Charset.defaultCharset()));
+		return RestResultUtils.success();
 	}
 
 }

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/handler/GlobalExceptionHandler.java
Patch:
@@ -40,7 +40,6 @@
  */
 @Slf4j
 @Order(-1)
-@Configuration
 @RequiredArgsConstructor
 public class GlobalExceptionHandler implements ErrorWebExceptionHandler {
 

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/handler/GlobalExceptionHandler.java
Patch:
@@ -40,7 +40,6 @@
  */
 @Slf4j
 @Order(-1)
-@Configuration
 @RequiredArgsConstructor
 public class GlobalExceptionHandler implements ErrorWebExceptionHandler {
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/endpoint/PigTokenEndpoint.java
Patch:
@@ -182,8 +182,8 @@ public R<Boolean> removeToken(@PathVariable("token") String token) {
 		if (accessToken == null || StrUtil.isBlank(accessToken.getToken().getTokenValue())) {
 			return R.ok();
 		}
-		// 清空用户信息
-		cacheManager.getCache(CacheConstants.USER_DETAILS).evict(authorization.getPrincipalName());
+		// 清空用户信息（立即删除）
+		cacheManager.getCache(CacheConstants.USER_DETAILS).evictIfPresent(authorization.getPrincipalName());
 		// 清空access token
 		authorizationService.remove(authorization);
 		// 处理自定义退出事件，保存相关日志

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -192,7 +192,8 @@ public Boolean deleteUserByIds(Long[] ids) {
 		List<SysUser> userList = baseMapper.selectBatchIds(CollUtil.toList(ids));
 		Cache cache = cacheManager.getCache(CacheConstants.USER_DETAILS);
 		for (SysUser sysUser : userList) {
-			cache.evict(sysUser.getUsername());
+			// 立即删除
+			cache.evictIfPresent(sysUser.getUsername());
 		}
 
 		sysUserRoleMapper.delete(Wrappers.<SysUserRole>lambdaQuery().in(SysUserRole::getUserId, CollUtil.toList(ids)));

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/endpoint/PigTokenEndpoint.java
Patch:
@@ -182,8 +182,8 @@ public R<Boolean> removeToken(@PathVariable("token") String token) {
 		if (accessToken == null || StrUtil.isBlank(accessToken.getToken().getTokenValue())) {
 			return R.ok();
 		}
-		// 清空用户信息
-		cacheManager.getCache(CacheConstants.USER_DETAILS).evict(authorization.getPrincipalName());
+		// 清空用户信息（立即删除）
+		cacheManager.getCache(CacheConstants.USER_DETAILS).evictIfPresent(authorization.getPrincipalName());
 		// 清空access token
 		authorizationService.remove(authorization);
 		// 处理自定义退出事件，保存相关日志

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -192,7 +192,8 @@ public Boolean deleteUserByIds(Long[] ids) {
 		List<SysUser> userList = baseMapper.selectBatchIds(CollUtil.toList(ids));
 		Cache cache = cacheManager.getCache(CacheConstants.USER_DETAILS);
 		for (SysUser sysUser : userList) {
-			cache.evict(sysUser.getUsername());
+			// 立即删除
+			cache.evictIfPresent(sysUser.getUsername());
 		}
 
 		sysUserRoleMapper.delete(Wrappers.<SysUserRole>lambdaQuery().in(SysUserRole::getUserId, CollUtil.toList(ids)));

File: pig-register/src/main/java/com/alibaba/nacos/PigNacosApplication.java
Patch:
@@ -43,7 +43,7 @@ public static void main(String[] args) {
 	 */
 	private static boolean initEnv() {
 		System.setProperty(ConfigConstants.STANDALONE_MODE, "true");
-		System.setProperty(ConfigConstants.AUTH_ENABLED, "false");
+		System.setProperty(ConfigConstants.AUTH_ENABLED, "true");
 		System.setProperty(ConfigConstants.LOG_BASEDIR, "logs");
 		System.setProperty(ConfigConstants.LOG_ENABLED, "false");
 		System.setProperty(ConfigConstants.NACOS_CONTEXT_PATH, "/nacos");

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -96,6 +96,7 @@ public Boolean saveUser(UserDTO userDto) {
 		SysUser sysUser = new SysUser();
 		BeanUtils.copyProperties(userDto, sysUser);
 		sysUser.setDelFlag(CommonConstants.STATUS_NORMAL);
+		sysUser.setCreateBy(userDto.getUsername());
 		sysUser.setPassword(ENCODER.encode(userDto.getPassword()));
 		baseMapper.insert(sysUser);
 		// 保存用户岗位信息

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysUserServiceImpl.java
Patch:
@@ -96,6 +96,7 @@ public Boolean saveUser(UserDTO userDto) {
 		SysUser sysUser = new SysUser();
 		BeanUtils.copyProperties(userDto, sysUser);
 		sysUser.setDelFlag(CommonConstants.STATUS_NORMAL);
+		sysUser.setCreateBy(userDto.getUsername());
 		sysUser.setPassword(ENCODER.encode(userDto.getPassword()));
 		baseMapper.insert(sysUser);
 		// 保存用户岗位信息

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/annotation/EnablePigResourceServer.java
Patch:
@@ -20,7 +20,6 @@
 import com.pig4cloud.pig.common.security.component.PigResourceServerConfiguration;
 import com.pig4cloud.pig.common.security.feign.PigFeignClientConfiguration;
 import org.springframework.context.annotation.Import;
-import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
 
 import java.lang.annotation.*;
 
@@ -32,7 +31,6 @@
  */
 @Documented
 @Inherited
-@EnableMethodSecurity
 @Target({ ElementType.TYPE })
 @Retention(RetentionPolicy.RUNTIME)
 @Import({ PigResourceServerAutoConfiguration.class, PigResourceServerConfiguration.class,

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigResourceServerConfiguration.java
Patch:
@@ -22,6 +22,7 @@
 import org.springframework.context.annotation.Bean;
 import org.springframework.core.Ordered;
 import org.springframework.core.annotation.Order;
+import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
 import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
@@ -37,6 +38,7 @@
  */
 @Slf4j
 @EnableWebSecurity
+@EnableMethodSecurity
 @RequiredArgsConstructor
 public class PigResourceServerConfiguration {
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -71,7 +71,7 @@ public R<List<GenDatasourceConf>> list() {
 	 * @return R
 	 */
 	@GetMapping("/{id}")
-	public R<GenDatasourceConf> getById(@PathVariable("id") Integer id) {
+	public R<GenDatasourceConf> getById(@PathVariable("id") Long id) {
 		return R.ok(datasourceConfService.getById(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -71,7 +71,7 @@ public R<List<GenDatasourceConf>> list() {
 	 * @return R
 	 */
 	@GetMapping("/{id}")
-	public R<GenDatasourceConf> getById(@PathVariable("id") Integer id) {
+	public R<GenDatasourceConf> getById(@PathVariable("id") Long id) {
 		return R.ok(datasourceConfService.getById(id));
 	}
 

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/controller/OauthClientDetailsController.java
Patch:
@@ -118,7 +118,7 @@ public R clearClientCache() {
 		return R.ok();
 	}
 
-	@Inner(false)
+	@Inner
 	@GetMapping("/getClientDetailsById/{clientId}")
 	public R getClientDetailsById(@PathVariable String clientId) {
 		return R.ok(sysOauthClientDetailsService.getOne(

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/controller/OauthClientDetailsController.java
Patch:
@@ -118,7 +118,7 @@ public R clearClientCache() {
 		return R.ok();
 	}
 
-	@Inner(false)
+	@Inner
 	@GetMapping("/getClientDetailsById/{clientId}")
 	public R getClientDetailsById(@PathVariable String clientId) {
 		return R.ok(sysOauthClientDetailsService.getOne(

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/WebSecurityConfiguration.java
Patch:
@@ -30,7 +30,7 @@
  * @author lengleng
  * @date 2022/1/12
  */
-@EnableWebSecurity(debug = true)
+@EnableWebSecurity
 public class WebSecurityConfiguration {
 
 	/**

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/WebSecurityConfiguration.java
Patch:
@@ -30,7 +30,7 @@
  * @author lengleng
  * @date 2022/1/12
  */
-@EnableWebSecurity(debug = true)
+@EnableWebSecurity
 public class WebSecurityConfiguration {
 
 	/**

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigAppUserDetailsServiceImpl.java
Patch:
@@ -80,7 +80,7 @@ public UserDetails loadUserByUser(PigUser pigUser) {
 	 */
 	@Override
 	public boolean support(String clientId, String grantType) {
-		return SecurityConstants.APP.equals(clientId);
+		return SecurityConstants.APP.equals(grantType);
 	}
 
 }

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/ResourceAuthExceptionEntryPoint.java
Patch:
@@ -24,6 +24,7 @@
 import org.springframework.context.MessageSource;
 import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.http.HttpStatus;
+import org.springframework.security.authentication.InsufficientAuthenticationException;
 import org.springframework.security.core.AuthenticationException;
 import org.springframework.security.oauth2.server.resource.InvalidBearerTokenException;
 import org.springframework.security.web.AuthenticationEntryPoint;
@@ -60,7 +61,8 @@ public void commence(HttpServletRequest request, HttpServletResponse response,
 		}
 
 		// 针对令牌过期返回特殊的 424
-		if (authException instanceof InvalidBearerTokenException) {
+		if (authException instanceof InvalidBearerTokenException
+				|| authException instanceof InsufficientAuthenticationException) {
 			response.setStatus(org.springframework.http.HttpStatus.FAILED_DEPENDENCY.value());
 			result.setMsg(this.messageSource.getMessage("OAuth2ResourceOwnerBaseAuthenticationProvider.tokenExpired",
 					null, LocaleContextHolder.getLocale()));

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigRemoteRegisteredClientRepository.java
Patch:
@@ -34,7 +34,7 @@
 public class PigRemoteRegisteredClientRepository implements RegisteredClientRepository {
 
 	/**
-	 * 刷新令牌有效期默认 30 填
+	 * 刷新令牌有效期默认 30 天
 	 */
 	private final static int refreshTokenValiditySeconds = 60 * 60 * 24 * 30;
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigRemoteRegisteredClientRepository.java
Patch:
@@ -34,7 +34,7 @@
 public class PigRemoteRegisteredClientRepository implements RegisteredClientRepository {
 
 	/**
-	 * 刷新令牌有效期默认 30 填
+	 * 刷新令牌有效期默认 30 天
 	 */
 	private final static int refreshTokenValiditySeconds = 60 * 60 * 24 * 30;
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/support/handler/PigAuthenticationSuccessEventHandler.java
Patch:
@@ -17,6 +17,7 @@
 package com.pig4cloud.pig.auth.support.handler;
 
 import com.pig4cloud.pig.admin.api.entity.SysLog;
+import com.pig4cloud.pig.common.core.constant.SecurityConstants;
 import com.pig4cloud.pig.common.core.util.SpringContextHolder;
 import com.pig4cloud.pig.common.log.event.SysLogEvent;
 import com.pig4cloud.pig.common.log.util.SysLogUtils;
@@ -63,7 +64,7 @@ public void onAuthenticationSuccess(HttpServletRequest request, HttpServletRespo
 			Authentication authentication) {
 		OAuth2AccessTokenAuthenticationToken accessTokenAuthentication = (OAuth2AccessTokenAuthenticationToken) authentication;
 		Map<String, Object> map = accessTokenAuthentication.getAdditionalParameters();
-		PigUser userInfo = (PigUser) map.get("user_info");
+		PigUser userInfo = (PigUser) map.get(SecurityConstants.DETAILS_USER);
 
 		log.info("用户：{} 登录成功", userInfo.getName());
 		SecurityContextHolder.getContext().setAuthentication(accessTokenAuthentication);

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/ResourceAuthExceptionEntryPoint.java
Patch:
@@ -22,8 +22,8 @@
 import com.pig4cloud.pig.common.core.util.R;
 import lombok.RequiredArgsConstructor;
 import lombok.SneakyThrows;
-import org.springframework.security.authentication.InsufficientAuthenticationException;
 import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.oauth2.server.resource.InvalidBearerTokenException;
 import org.springframework.security.web.AuthenticationEntryPoint;
 
 import javax.servlet.http.HttpServletRequest;
@@ -56,7 +56,7 @@ public void commence(HttpServletRequest request, HttpServletResponse response,
 		}
 
 		// 针对令牌过期返回特殊的 424
-		if (authException instanceof InsufficientAuthenticationException) {
+		if (authException instanceof InvalidBearerTokenException) {
 			response.setStatus(org.springframework.http.HttpStatus.FAILED_DEPENDENCY.value());
 			result.setMsg("token expire");
 		}

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigRemoteRegisteredClientRepository.java
Patch:
@@ -87,7 +87,7 @@ public RegisteredClient findByClientId(String clientId) {
 		SysOauthClientDetails clientDetails = detailsR.getData();
 
 		RegisteredClient.Builder builder = RegisteredClient.withId(clientDetails.getClientId())
-				.clientId(clientDetails.getClientSecret())
+				.clientId(clientDetails.getClientId())
 				.clientSecret(SecurityConstants.NOOP + clientDetails.getClientSecret())
 				.clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC);
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigRemoteRegisteredClientRepository.java
Patch:
@@ -87,7 +87,7 @@ public RegisteredClient findByClientId(String clientId) {
 		SysOauthClientDetails clientDetails = detailsR.getData();
 
 		RegisteredClient.Builder builder = RegisteredClient.withId(clientDetails.getClientId())
-				.clientId(clientDetails.getClientSecret())
+				.clientId(clientDetails.getClientId())
 				.clientSecret(SecurityConstants.NOOP + clientDetails.getClientSecret())
 				.clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC);
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/WebSecurityConfiguration.java
Patch:
@@ -51,7 +51,7 @@ SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Excepti
 
 	@Bean
 	public WebSecurityCustomizer webSecurityCustomizer() {
-		return (web) -> web.ignoring().antMatchers("/css/**", "/error");
+		return (web) -> web.ignoring().antMatchers("/actuator/**", "/css/**", "/error");
 	}
 
 }

File: pig-common/pig-common-core/src/main/java/com/pig4cloud/pig/common/core/constant/SecurityConstants.java
Patch:
@@ -115,7 +115,7 @@ public interface SecurityConstants {
 	/**
 	 * 短信登录 参数名称
 	 */
-	String SMS_PARAMETER_NAME = "phone";
+	String SMS_PARAMETER_NAME = "mobile";
 
 	/**
 	 * 授权码模式confirm

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysMenuMapper.java
Patch:
@@ -38,6 +38,6 @@ public interface SysMenuMapper extends BaseMapper<SysMenu> {
 	 * @param roleId 角色ID
 	 * @return
 	 */
-	Set<SysMenu> listMenusByRoleId(Long roleIds);
+	Set<SysMenu> listMenusByRoleId(Long roleId);
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysMenuMapper.java
Patch:
@@ -38,6 +38,6 @@ public interface SysMenuMapper extends BaseMapper<SysMenu> {
 	 * @param roleId 角色ID
 	 * @return
 	 */
-	Set<SysMenu> listMenusByRoleId(Long roleIds);
+	Set<SysMenu> listMenusByRoleId(Long roleId);
 
 }

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigBearerTokenExtractor.java
Patch:
@@ -36,7 +36,7 @@
  */
 public class PigBearerTokenExtractor implements BearerTokenResolver {
 
-	private static final Pattern authorizationPattern = Pattern.compile("^Bearer (?<token>[a-zA-Z0-9-._~+/]+=*)$",
+	private static final Pattern authorizationPattern = Pattern.compile("^Bearer (?<token>[a-zA-Z0-9-:._~+/]+=*)$",
 			Pattern.CASE_INSENSITIVE);
 
 	private boolean allowFormEncodedBodyParameter = false;

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigRemoteRegisteredClientRepository.java
Patch:
@@ -3,10 +3,12 @@
 import cn.hutool.core.util.BooleanUtil;
 import com.pig4cloud.pig.admin.api.entity.SysOauthClientDetails;
 import com.pig4cloud.pig.admin.api.feign.RemoteClientDetailsService;
+import com.pig4cloud.pig.common.core.constant.CacheConstants;
 import com.pig4cloud.pig.common.core.constant.SecurityConstants;
 import com.pig4cloud.pig.common.core.util.R;
 import lombok.RequiredArgsConstructor;
 import lombok.SneakyThrows;
+import org.springframework.cache.annotation.Cacheable;
 import org.springframework.security.oauth2.core.AuthorizationGrantType;
 import org.springframework.security.oauth2.core.ClientAuthenticationMethod;
 import org.springframework.security.oauth2.core.OAuth2TokenFormat;
@@ -78,8 +80,7 @@ public RegisteredClient findById(String id) {
 	 */
 	@Override
 	@SneakyThrows
-	// @Cacheable(value = CacheConstants.CLIENT_DETAILS_KEY, key = "#clientId", unless =
-	// "#result == null")
+	@Cacheable(value = CacheConstants.CLIENT_DETAILS_KEY, key = "#clientId", unless = "#result == null")
 	public RegisteredClient findByClientId(String clientId) {
 		R<SysOauthClientDetails> detailsR = clientDetailsService.getClientDetailsById(clientId,
 				SecurityConstants.FROM_IN);

File: pig-common/pig-common-job/src/main/java/com/pig4cloud/pig/common/job/XxlJobAutoConfiguration.java
Patch:
@@ -47,7 +47,7 @@ public XxlJobSpringExecutor xxlJobSpringExecutor(XxlJobProperties xxlJobProperti
 			appName = environment.getProperty("spring.application.name");
 		}
 		String accessToken = environment.getProperty("xxl.job.accessToken");
-		if (!StringUtils.hasText(appName)) {
+		if (!StringUtils.hasText(accessToken)) {
 			accessToken = executor.getAccessToken();
 		}
 

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/filter/ApiLoggingFilter.java
Patch:
@@ -29,10 +29,10 @@ public class ApiLoggingFilter implements GlobalFilter, Ordered {
 
 	@Override
 	public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
-		String info = String.format("Method:{%s} Host:{%s} Path:{%s} Query:{%s}",
-				exchange.getRequest().getMethod().name(), exchange.getRequest().getURI().getHost(),
-				exchange.getRequest().getURI().getPath(), exchange.getRequest().getQueryParams());
 		if (log.isDebugEnabled()) {
+			String info = String.format("Method:{%s} Host:{%s} Path:{%s} Query:{%s}",
+					exchange.getRequest().getMethod().name(), exchange.getRequest().getURI().getHost(),
+					exchange.getRequest().getURI().getPath(), exchange.getRequest().getQueryParams());
 			log.debug(info);
 		}
 		exchange.getAttributes().put(START_TIME, System.currentTimeMillis());

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/dto/SysLogDTO.java
Patch:
@@ -12,19 +12,19 @@
  * 日志查询传输对象
  */
 @Data
-@Schema(name = "日志查询对象")
+@Schema(description = "日志查询对象")
 public class SysLogDTO {
 
 	/**
 	 * 查询日志类型
 	 */
-	@Schema(name = "日志类型")
+	@Schema(description = "日志类型")
 	private String type;
 
 	/**
 	 * 创建时间区间 [开始时间，结束时间]
 	 */
-	@Schema(name = "创建时间区间")
+	@Schema(description = "创建时间区间")
 	private LocalDateTime[] createTime;
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/entity/SysDeptRelation.java
Patch:
@@ -29,7 +29,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
-@Schema(name = "部门关系")
+@Schema(description = "部门关系")
 @Data
 @EqualsAndHashCode(callSuper = true)
 public class SysDeptRelation extends Model<SysDeptRelation> {
@@ -39,13 +39,13 @@ public class SysDeptRelation extends Model<SysDeptRelation> {
 	/**
 	 * 祖先节点
 	 */
-	@Schema(name = "祖先节点")
+	@Schema(description = "祖先节点")
 	private Long ancestor;
 
 	/**
 	 * 后代节点
 	 */
-	@Schema(name = "后代节点")
+	@Schema(description = "后代节点")
 	private Long descendant;
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/entity/SysRoleMenu.java
Patch:
@@ -38,13 +38,13 @@ public class SysRoleMenu extends Model<SysRoleMenu> {
 	/**
 	 * 角色ID
 	 */
-	@Schema(name = "角色id")
+	@Schema(description = "角色id")
 	private Long roleId;
 
 	/**
 	 * 菜单ID
 	 */
-	@Schema(name = "菜单id")
+	@Schema(description = "菜单id")
 	private Long menuId;
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/entity/SysUserPost.java
Patch:
@@ -37,13 +37,13 @@ public class SysUserPost extends Model<SysUserPost> {
 	/**
 	 * 用户ID
 	 */
-	@Schema(name = "用户id")
+	@Schema(description = "用户id")
 	private Long userId;
 
 	/**
 	 * 岗位ID
 	 */
-	@Schema(name = "岗位id")
+	@Schema(description = "岗位id")
 	private Long postId;
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/entity/SysUserRole.java
Patch:
@@ -38,13 +38,13 @@ public class SysUserRole extends Model<SysUserRole> {
 	/**
 	 * 用户ID
 	 */
-	@Schema(name = "用户id")
+	@Schema(description = "用户id")
 	private Long userId;
 
 	/**
 	 * 角色ID
 	 */
-	@Schema(name = "角色id")
+	@Schema(description = "角色id")
 	private Long roleId;
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/RoleVo.java
Patch:
@@ -24,7 +24,7 @@
  * @date 2020/2/10
  */
 @Data
-@Schema(name = "前端角色展示对象")
+@Schema(description = "前端角色展示对象")
 public class RoleVo {
 
 	/**

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/config/SpringDocConfiguration.java
Patch:
@@ -3,6 +3,7 @@
 import lombok.Data;
 import org.springdoc.core.GroupedOpenApi;
 import org.springdoc.core.SwaggerUiConfigParameters;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -16,14 +17,15 @@
 /**
  * @author lengleng
  * @date 2022/3/26
- *
+ * <p>
  * swagger 3.0 展示
  */
 @Configuration(proxyBeanMethods = false)
 public class SpringDocConfiguration {
 
 	@Bean
 	@Lazy(false)
+	@ConditionalOnProperty(name = "springdoc.api-docs.enabled", matchIfMissing = true)
 	public List<GroupedOpenApi> apis(SwaggerUiConfigParameters swaggerUiConfigParameters,
 			SwaggerProperties properties) {
 		List<GroupedOpenApi> groups = new ArrayList<>();

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/WebSecurityConfiguration.java
Patch:
@@ -31,7 +31,6 @@
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.builders.WebSecurity;
 import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
-import org.springframework.security.core.userdetails.UserDetailsService;
 import org.springframework.security.crypto.factory.PasswordEncoderFactories;
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.security.web.authentication.AuthenticationFailureHandler;
@@ -85,7 +84,7 @@ public AuthenticationManager authenticationManagerBean() {
 	 */
 	@Override
 	public void configure(WebSecurity web) {
-		web.ignoring().antMatchers("/css/**");
+		web.ignoring().antMatchers("/css/**", "/error");
 	}
 
 	/**

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -101,7 +101,7 @@ public R<Boolean> updateById(@RequestBody GenDatasourceConf conf) {
 	 */
 	@SysLog("删除数据源表")
 	@DeleteMapping("/{id}")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(datasourceConfService.removeByDsId(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenFormConfController.java
Patch:
@@ -100,7 +100,7 @@ public R<Boolean> save(@RequestBody GenFormConf formConf) {
 	@SysLog("通过id删除生成记录")
 	@DeleteMapping("/{id}")
 	@PreAuthorize("@pms.hasPermission('gen_form_del')")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(genRecordService.removeById(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -101,7 +101,7 @@ public R<Boolean> updateById(@RequestBody GenDatasourceConf conf) {
 	 */
 	@SysLog("删除数据源表")
 	@DeleteMapping("/{id}")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(datasourceConfService.removeByDsId(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenFormConfController.java
Patch:
@@ -100,7 +100,7 @@ public R<Boolean> save(@RequestBody GenFormConf formConf) {
 	@SysLog("通过id删除生成记录")
 	@DeleteMapping("/{id}")
 	@PreAuthorize("@pms.hasPermission('gen_form_del')")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(genRecordService.removeById(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -101,7 +101,7 @@ public R<Boolean> updateById(@RequestBody GenDatasourceConf conf) {
 	 */
 	@SysLog("删除数据源表")
 	@DeleteMapping("/{id}")
-	public R<Boolean> removeById(@PathVariable Long id) {
+	public R<Boolean> removeById(@PathVariable Integer id) {
 		return R.ok(datasourceConfService.removeByDsId(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenFormConfController.java
Patch:
@@ -100,7 +100,7 @@ public R<Boolean> save(@RequestBody GenFormConf formConf) {
 	@SysLog("通过id删除生成记录")
 	@DeleteMapping("/{id}")
 	@PreAuthorize("@pms.hasPermission('gen_form_del')")
-	public R<Boolean> removeById(@PathVariable Long id) {
+	public R<Boolean> removeById(@PathVariable Integer id) {
 		return R.ok(genRecordService.removeById(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -101,7 +101,7 @@ public R<Boolean> updateById(@RequestBody GenDatasourceConf conf) {
 	 */
 	@SysLog("删除数据源表")
 	@DeleteMapping("/{id}")
-	public R<Boolean> removeById(@PathVariable Long id) {
+	public R<Boolean> removeById(@PathVariable Integer id) {
 		return R.ok(datasourceConfService.removeByDsId(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenFormConfController.java
Patch:
@@ -100,7 +100,7 @@ public R<Boolean> save(@RequestBody GenFormConf formConf) {
 	@SysLog("通过id删除生成记录")
 	@DeleteMapping("/{id}")
 	@PreAuthorize("@pms.hasPermission('gen_form_del')")
-	public R<Boolean> removeById(@PathVariable Long id) {
+	public R<Boolean> removeById(@PathVariable Integer id) {
 		return R.ok(genRecordService.removeById(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenDsConfController.java
Patch:
@@ -101,7 +101,7 @@ public R<Boolean> updateById(@RequestBody GenDatasourceConf conf) {
 	 */
 	@SysLog("删除数据源表")
 	@DeleteMapping("/{id}")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(datasourceConfService.removeByDsId(id));
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/controller/GenFormConfController.java
Patch:
@@ -100,7 +100,7 @@ public R<Boolean> save(@RequestBody GenFormConf formConf) {
 	@SysLog("通过id删除生成记录")
 	@DeleteMapping("/{id}")
 	@PreAuthorize("@pms.hasPermission('gen_form_del')")
-	public R<Boolean> removeById(@PathVariable Integer id) {
+	public R<Boolean> removeById(@PathVariable Long id) {
 		return R.ok(genRecordService.removeById(id));
 	}
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/AuthorizationServerConfiguration.java
Patch:
@@ -55,7 +55,7 @@
 @Configuration
 @RequiredArgsConstructor
 @EnableAuthorizationServer
-public class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter {
+public class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {
 
 	private final DataSource dataSource;
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigWebResponseExceptionTranslator.java
Patch:
@@ -24,6 +24,7 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.security.access.AccessDeniedException;
 import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.core.SpringSecurityMessageSource;
 import org.springframework.security.oauth2.common.DefaultThrowableAnalyzer;
 import org.springframework.security.oauth2.common.OAuth2AccessToken;
 import org.springframework.security.oauth2.common.exceptions.*;

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigUserDetailsService.java
Patch:
@@ -69,8 +69,8 @@ default UserDetails getUserDetails(R<UserInfo> result) {
 
 		// 构造security用户
 		return new PigUser(user.getUserId(), user.getDeptId(), user.getUsername(),
-				SecurityConstants.BCRYPT + user.getPassword(), user.getPhone(),
-				StrUtil.equals(user.getLockFlag(), CommonConstants.STATUS_NORMAL), true, true, true, authorities);
+				SecurityConstants.BCRYPT + user.getPassword(), user.getPhone(), true, true, true,
+				StrUtil.equals(user.getLockFlag(), CommonConstants.STATUS_NORMAL), authorities);
 	}
 
 	/**

File: pig-common/pig-common-mybatis/src/main/java/com/pig4cloud/pig/common/mybatis/MybatisAutoConfiguration.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.pig4cloud.pig.common.mybatis;
 
-import com.baomidou.mybatisplus.annotation.DbType;
 import com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;
 import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
 import com.pig4cloud.pig.common.mybatis.config.MybatisPlusMetaObjectHandler;
@@ -53,7 +52,7 @@ public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentRes
 	@Bean
 	public MybatisPlusInterceptor mybatisPlusInterceptor() {
 		MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
-		interceptor.addInnerInterceptor(new PigPaginationInnerInterceptor(DbType.MYSQL));
+		interceptor.addInnerInterceptor(new PigPaginationInnerInterceptor());
 		return interceptor;
 	}
 

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysFileServiceImpl.java
Patch:
@@ -68,7 +68,8 @@ public R uploadFile(MultipartFile file) {
 		resultMap.put("url", String.format("/admin/sys-file/%s/%s", ossProperties.getBucketName(), fileName));
 
 		try {
-			ossTemplate.putObject(ossProperties.getBucketName(), fileName,file.getContentType(), file.getInputStream());
+			ossTemplate.putObject(ossProperties.getBucketName(), fileName, file.getContentType(),
+					file.getInputStream());
 			// 文件管理数据记录,收集管理追踪文件
 			fileLog(file, fileName);
 		}

File: pig-common/pig-common-mybatis/src/main/java/com/pig4cloud/pig/common/mybatis/resolver/SqlFilterArgumentResolver.java
Patch:
@@ -46,7 +46,7 @@
 public class SqlFilterArgumentResolver implements HandlerMethodArgumentResolver {
 
 	private final static String[] KEYWORDS = { "master", "truncate", "insert", "select", "delete", "update", "declare",
-			"alter", "drop", "sleep" };
+			"alter", "drop", "sleep", "extractvalue", "concat" };
 
 	/**
 	 * 判断Controller是否包含page 参数

File: pig-common/pig-common-job/src/main/java/com/pig4cloud/pig/common/job/XxlJobAutoConfiguration.java
Patch:
@@ -54,7 +54,7 @@ public XxlJobSpringExecutor xxlJobSpringExecutor(XxlJobProperties xxlJobProperti
 		xxlJobSpringExecutor.setLogPath(executor.getLogPath());
 		xxlJobSpringExecutor.setLogRetentionDays(executor.getLogRetentionDays());
 
-		// 如果配置为空则获取注册中心的服务列表 "http://pigx-xxl:9080/xxl-job-admin"
+		// 如果配置为空则获取注册中心的服务列表 "http://pig-xxl:9080/xxl-job-admin"
 		if (!StringUtils.hasText(xxlJobProperties.getAdmin().getAddresses())) {
 			String serverList = discoveryClient.getServices().stream().filter(s -> s.contains(XXL_JOB_ADMIN))
 					.flatMap(s -> discoveryClient.getInstances(s).stream()).map(instance -> String

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigLocalResourceServerTokenServices.java
Patch:
@@ -41,14 +41,14 @@ public OAuth2Authentication loadAuthentication(String accessToken)
 		}
 
 		// 根据 username 查询 spring cache 最新的值 并返回
-		PigUser pigxUser = (PigUser) oAuth2Authentication.getPrincipal();
+		PigUser pigUser = (PigUser) oAuth2Authentication.getPrincipal();
 
 		UserDetails userDetails;
 		try {
-			userDetails = userDetailsService.loadUserByUsername(pigxUser.getUsername());
+			userDetails = userDetailsService.loadUserByUsername(pigUser.getUsername());
 		}
 		catch (UsernameNotFoundException notFoundException) {
-			throw new UnauthorizedException(String.format("%s username not found", pigxUser.getUsername()),
+			throw new UnauthorizedException(String.format("%s username not found", pigUser.getUsername()),
 					notFoundException);
 		}
 		Authentication userAuthentication = new UsernamePasswordAuthenticationToken(userDetails, "N/A",

File: pig-common/pig-common-job/src/main/java/com/pig4cloud/pig/common/job/XxlJobAutoConfiguration.java
Patch:
@@ -54,7 +54,7 @@ public XxlJobSpringExecutor xxlJobSpringExecutor(XxlJobProperties xxlJobProperti
 		xxlJobSpringExecutor.setLogPath(executor.getLogPath());
 		xxlJobSpringExecutor.setLogRetentionDays(executor.getLogRetentionDays());
 
-		// 如果配置为空则获取注册中心的服务列表 "http://pigx-xxl:9080/xxl-job-admin"
+		// 如果配置为空则获取注册中心的服务列表 "http://pig-xxl:9080/xxl-job-admin"
 		if (!StringUtils.hasText(xxlJobProperties.getAdmin().getAddresses())) {
 			String serverList = discoveryClient.getServices().stream().filter(s -> s.contains(XXL_JOB_ADMIN))
 					.flatMap(s -> discoveryClient.getInstances(s).stream()).map(instance -> String

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigLocalResourceServerTokenServices.java
Patch:
@@ -41,14 +41,14 @@ public OAuth2Authentication loadAuthentication(String accessToken)
 		}
 
 		// 根据 username 查询 spring cache 最新的值 并返回
-		PigUser pigxUser = (PigUser) oAuth2Authentication.getPrincipal();
+		PigUser pigUser = (PigUser) oAuth2Authentication.getPrincipal();
 
 		UserDetails userDetails;
 		try {
-			userDetails = userDetailsService.loadUserByUsername(pigxUser.getUsername());
+			userDetails = userDetailsService.loadUserByUsername(pigUser.getUsername());
 		}
 		catch (UsernameNotFoundException notFoundException) {
-			throw new UnauthorizedException(String.format("%s username not found", pigxUser.getUsername()),
+			throw new UnauthorizedException(String.format("%s username not found", pigUser.getUsername()),
 					notFoundException);
 		}
 		Authentication userAuthentication = new UsernamePasswordAuthenticationToken(userDetails, "N/A",

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigRedisTokenStore.java
Patch:
@@ -93,7 +93,7 @@ private byte[] serialize(Object object) {
 	}
 
 	private byte[] serializeKey(String object) {
-		return serialize(object);
+		return serialize(prefix + object);
 	}
 
 	private OAuth2AccessToken deserializeAccessToken(byte[] bytes) {

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/handler/SsoLogoutSuccessHandler.java
Patch:
@@ -22,6 +22,9 @@ public class SsoLogoutSuccessHandler implements LogoutSuccessHandler {
 	@Override
 	public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication)
 			throws IOException {
+		if (response == null) {
+			return;
+		}
 
 		// 获取请求参数中是否包含 回调地址
 		String redirectUrl = request.getParameter(REDIRECT_URL);

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysRoleMenuServiceImpl.java
Patch:
@@ -25,7 +25,6 @@
 import com.pig4cloud.pig.common.core.constant.CacheConstants;
 import lombok.RequiredArgsConstructor;
 import org.springframework.cache.CacheManager;
-import org.springframework.cache.annotation.CacheEvict;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
@@ -55,7 +54,6 @@ public class SysRoleMenuServiceImpl extends ServiceImpl<SysRoleMenuMapper, SysRo
 	 */
 	@Override
 	@Transactional(rollbackFor = Exception.class)
-	@CacheEvict(value = CacheConstants.MENU_DETAILS, key = "#roleId + '_menu'")
 	public Boolean saveRoleMenus(String role, Integer roleId, String menuIds) {
 		this.remove(Wrappers.<SysRoleMenu>query().lambda().eq(SysRoleMenu::getRoleId, roleId));
 
@@ -71,6 +69,8 @@ public Boolean saveRoleMenus(String role, Integer roleId, String menuIds) {
 
 		// 清空userinfo
 		cacheManager.getCache(CacheConstants.USER_DETAILS).clear();
+		// 清空全部的菜单缓存 fix #I4BM58
+		cacheManager.getCache(CacheConstants.MENU_DETAILS).clear();
 		return this.saveBatch(roleMenuList);
 	}
 

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/service/impl/GeneratorServiceImpl.java
Patch:
@@ -61,6 +61,7 @@ public class GeneratorServiceImpl implements GeneratorService {
 	@Override
 	@DS("#last")
 	public IPage<List<Map<String, Object>>> getPage(Page page, String tableName, String dsName) {
+		page.setOptimizeCountSql(false);
 		return generatorMapper.queryList(page, tableName);
 	}
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigWebResponseExceptionTranslator.java
Patch:
@@ -65,10 +65,11 @@ public ResponseEntity<OAuth2Exception> translate(Exception e) {
 			return handleOAuth2Exception(new InvalidException(ase.getMessage(), ase));
 		}
 
+		// token 过期 特殊处理 返回 424 不是 401
 		ase = (InvalidTokenException) throwableAnalyzer.getFirstThrowableOfType(InvalidTokenException.class,
 				causeChain);
 		if (ase != null) {
-			return handleOAuth2Exception(new UnauthorizedException(ase.getMessage(), ase));
+			return handleOAuth2Exception(new TokenInvalidException(ase.getMessage(), ase));
 		}
 
 		ase = (HttpRequestMethodNotSupportedException) throwableAnalyzer

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/support/CodeGenKits.java
Patch:
@@ -169,9 +169,9 @@ public Map<String, String> generatorCode(GenConfig genConfig, Map<String, String
 			columnEntity.setLowerAttrName(StringUtils.uncapitalize(attrName));
 
 			// 判断注释是否为空
-			if (StrUtil.isNotBlank(column.get("comments"))) {
+			if (StrUtil.isNotBlank(column.get("columnComment"))) {
 				// 注意去除换行符号
-				columnEntity.setComments(StrUtil.removeAllLineBreaks(column.get("comments")));
+				columnEntity.setComments(StrUtil.removeAllLineBreaks(column.get("columnComment")));
 			}
 			else {
 				columnEntity.setComments(columnEntity.getLowerAttrName());

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/handler/PigLogoutSuccessEventHandler.java
Patch:
@@ -39,7 +39,6 @@ public class PigLogoutSuccessEventHandler extends AbstractLogoutSuccessEventHand
 	 * 处理退出成功方法
 	 * <p>
 	 * 获取到登录的authentication 对象
-	 *
 	 * @param authentication 登录对象
 	 */
 	@Override

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/handler/AbstractLogoutSuccessEventHandler.java
Patch:
@@ -26,8 +26,7 @@
  * @author zhangran
  * @date 2021/6/23 退出成功事件处理器
  */
-public abstract class AbstractLogoutSuccessEventHandler
-		implements ApplicationListener<LogoutSuccessEvent> {
+public abstract class AbstractLogoutSuccessEventHandler implements ApplicationListener<LogoutSuccessEvent> {
 
 	/**
 	 * Handle an application event.

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/filter/ValidateCodeGatewayFilter.java
Patch:
@@ -60,7 +60,7 @@ public GatewayFilter apply(Object config) {
 			ServerHttpRequest request = exchange.getRequest();
 			boolean isAuthToken = CharSequenceUtil.containsAnyIgnoreCase(request.getURI().getPath(),
 					SecurityConstants.OAUTH_TOKEN_URL);
-			boolean isIgnoreClient = configProperties.getIgnoreClients().contains(WebUtils.getClientId(request)[0]);
+			boolean isIgnoreClient = configProperties.getIgnoreClients().contains(WebUtils.getClientId(request));
 			try {
 				// only oauth and the request not in ignore clients need check code.
 				if (isAuthToken && !isIgnoreClient) {

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/config/RateLimiterConfiguration.java
Patch:
@@ -38,7 +38,7 @@ public class RateLimiterConfiguration {
 	public KeyResolver remoteAddrKeyResolver() {
 		return exchange -> Mono
 				.just(Objects.requireNonNull(Objects.requireNonNull(exchange.getRequest().getRemoteAddress()))
-							  .getAddress().getHostAddress());
+						.getAddress().getHostAddress());
 	}
 
 }

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/filter/PasswordDecoderFilter.java
Patch:
@@ -59,7 +59,8 @@ public GatewayFilter apply(Object config) {
 			ServerHttpRequest request = exchange.getRequest();
 
 			// 不是登录请求，直接向下执行
-			if (!CharSequenceUtil.containsAnyIgnoreCase(request.getURI().getPath(), SecurityConstants.OAUTH_TOKEN_URL)) {
+			if (!CharSequenceUtil.containsAnyIgnoreCase(request.getURI().getPath(),
+					SecurityConstants.OAUTH_TOKEN_URL)) {
 				return chain.filter(exchange);
 			}
 
@@ -89,7 +90,7 @@ public GatewayFilter apply(Object config) {
 
 	private static String decrypt(String data, String pass) {
 		AES aes = new AES(Mode.CBC, Padding.NoPadding, new SecretKeySpec(pass.getBytes(), KEY_ALGORITHM),
-						  new IvParameterSpec(pass.getBytes()));
+				new IvParameterSpec(pass.getBytes()));
 		byte[] result = aes.decrypt(Base64.decode(data.getBytes(StandardCharsets.UTF_8)));
 		return new String(result, StandardCharsets.UTF_8);
 	}

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/handler/ImageCodeHandler.java
Patch:
@@ -60,7 +60,7 @@ public Mono<ServerResponse> handle(ServerRequest serverRequest) {
 		Optional<String> randomStr = serverRequest.queryParam("randomStr");
 		redisTemplate.setKeySerializer(new StringRedisSerializer());
 		randomStr.ifPresent(s -> redisTemplate.opsForValue().set(CacheConstants.DEFAULT_CODE_KEY + s, result,
-																 SecurityConstants.CODE_TIME, TimeUnit.SECONDS));
+				SecurityConstants.CODE_TIME, TimeUnit.SECONDS));
 
 		// 转换流信息写出
 		FastByteArrayOutputStream os = new FastByteArrayOutputStream();

File: pig-register/src/main/java/com/alibaba/nacos/PigNacosApplication.java
Patch:
@@ -33,6 +33,7 @@ public class PigNacosApplication {
 	public static void main(String[] args) {
 		System.setProperty(ConfigConstants.STANDALONE_MODE, "true");
 		System.setProperty(ConfigConstants.AUTH_ENABLED, "false");
+		System.setProperty(ConfigConstants.LOG_BASEDIR, "logs");
 		SpringApplication.run(PigNacosApplication.class, args);
 	}
 

File: pig-register/src/main/java/com/alibaba/nacos/controller/HealthController.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.controller;
 
 import javax.servlet.http.HttpServletRequest;
 

File: pig-register/src/main/java/com/alibaba/nacos/controller/PermissionController.java
Patch:
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.security.nacos.NacosAuthConfig;
+import com.alibaba.nacos.security.nacos.roles.NacosRoleServiceImpl;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: pig-register/src/main/java/com/alibaba/nacos/controller/RoleController.java
Patch:
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.security.nacos.NacosAuthConfig;
+import com.alibaba.nacos.security.nacos.roles.NacosRoleServiceImpl;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: pig-register/src/main/java/com/alibaba/nacos/controller/ServerStateController.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.controller;
 
 import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.sys.env.EnvUtil;

File: pig-register/src/main/java/com/alibaba/nacos/exception/ConsoleExceptionHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.exception;
+package com.alibaba.nacos.exception;
 
 import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;

File: pig-register/src/main/java/com/alibaba/nacos/model/Namespace.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.model;
+package com.alibaba.nacos.model;
 
 /**
  * Namespace.

File: pig-register/src/main/java/com/alibaba/nacos/model/NamespaceAllInfo.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.model;
+package com.alibaba.nacos.model;
 
 /**
  * all namespace info.

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/CustomAuthenticationProvider.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.security.nacos;
 
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.security.nacos.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/JwtTokenManager.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.security.nacos;
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import io.jsonwebtoken.Claims;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/NacosAuthConfig.java
Patch:
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.security.nacos;
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.auth.common.AuthSystemTypes;
-import com.alibaba.nacos.console.filter.JwtAuthenticationTokenFilter;
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.filter.JwtAuthenticationTokenFilter;
+import com.alibaba.nacos.security.nacos.users.NacosUserDetailsServiceImpl;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/NacosAuthManager.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.security.nacos;
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.auth.AuthManager;
@@ -23,8 +23,8 @@
 import com.alibaba.nacos.auth.model.User;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
-import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import com.alibaba.nacos.console.security.nacos.users.NacosUser;
+import com.alibaba.nacos.security.nacos.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.security.nacos.users.NacosUser;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.ExpiredJwtException;
 import org.apache.commons.lang3.StringUtils;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.roles;
+package com.alibaba.nacos.security.nacos.roles;
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.auth.model.Permission;
@@ -23,8 +23,8 @@
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.auth.RolePersistService;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.security.nacos.NacosAuthConfig;
+import com.alibaba.nacos.security.nacos.users.NacosUserDetailsServiceImpl;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.lang.Collections;
 import org.apache.commons.lang3.StringUtils;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/users/NacosUser.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.security.nacos.users;
 
 import com.alibaba.nacos.auth.model.User;
 

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/users/NacosUserDetails.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.security.nacos.users;
 
 import com.alibaba.nacos.config.server.model.User;
 import org.springframework.security.core.GrantedAuthority;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.security.nacos.users;
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.config.server.auth.UserPersistService;

File: pig-visual/pig-codegen/src/main/java/com/pig4cloud/pig/codegen/service/impl/GeneratorServiceImpl.java
Patch:
@@ -21,7 +21,6 @@
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.StrUtil;
 import com.baomidou.dynamic.datasource.annotation.DS;
-import com.baomidou.dynamic.datasource.toolkit.DynamicDataSourceContextHolder;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
@@ -76,8 +75,6 @@ public Map<String, String> previewCode(GenConfig genConfig) {
 		List<GenFormConf> formConfList = genFormConfMapper.selectList(Wrappers.<GenFormConf>lambdaQuery()
 				.eq(GenFormConf::getTableName, genConfig.getTableName()).orderByDesc(GenFormConf::getCreateTime));
 
-		DynamicDataSourceContextHolder.push(genConfig.getDsName());
-
 		String tableNames = genConfig.getTableName();
 		for (String tableName : StrUtil.split(tableNames, StrUtil.DASHED)) {
 			// 查询表信息
@@ -92,6 +89,7 @@ public Map<String, String> previewCode(GenConfig genConfig) {
 				return CodeGenUtils.generatorCode(genConfig, table, columns, null, null);
 			}
 		}
+
 		return MapUtil.empty();
 	}
 

File: pig-common/pig-common-core/src/main/java/com/pig4cloud/pig/common/core/config/JacksonConfiguration.java
Patch:
@@ -18,6 +18,7 @@
 
 import cn.hutool.core.date.DatePattern;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import com.pig4cloud.pig.common.core.jackson.PigJavaTimeModule;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
@@ -51,6 +52,7 @@ public Jackson2ObjectMapperBuilderCustomizer customizer() {
 			builder.locale(Locale.CHINA);
 			builder.timeZone(TimeZone.getTimeZone(ZoneId.systemDefault()));
 			builder.simpleDateFormat(DatePattern.NORM_DATETIME_PATTERN);
+			builder.serializerByType(Long.class, ToStringSerializer.instance);
 			builder.modules(new PigJavaTimeModule());
 		};
 	}

File: pig-common/pig-common-job/src/main/java/com/pig4cloud/pig/common/job/properties/XxlAdminProperties.java
Patch:
@@ -14,6 +14,6 @@ public class XxlAdminProperties {
 	/**
 	 * 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。 执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
 	 */
-	private String addresses = "http://pig-job:5004/xxl-job-admin";
+	private String addresses;
 
 }

File: pig-common/pig-common-mybatis/src/main/java/com/pig4cloud/pig/common/mybatis/resolver/SqlFilterArgumentResolver.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.pig4cloud.pig.common.core.mybatis;
+package com.pig4cloud.pig.common.mybatis.resolver;
 
 import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.metadata.OrderItem;

File: pig-register/src/main/java/com/alibaba/nacos/PigNacosApplication.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos;
 
-import com.alibaba.nacos.config.ConfigConstants;
+import com.alibaba.nacos.utils.StartUpEnvInitUtil;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.scheduling.annotation.EnableScheduling;
@@ -31,8 +31,7 @@
 public class PigNacosApplication {
 
 	public static void main(String[] args) {
-		System.setProperty(ConfigConstants.STANDALONE_MODE, "true");
-		System.setProperty(ConfigConstants.AUTH_ENABLED, "false");
+		StartUpEnvInitUtil.init();
 		SpringApplication.run(PigNacosApplication.class, args);
 	}
 

File: pig-register/src/main/java/com/alibaba/nacos/controller/NamespaceController.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.model.Namespace;
 import com.alibaba.nacos.model.NamespaceAllInfo;
 import com.alibaba.nacos.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: pig-register/src/main/java/com/alibaba/nacos/controller/ServerStateController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.controller;
 
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: pig-register/src/main/java/com/alibaba/nacos/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.exception;
 
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.core.auth.AccessException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.http.HttpStatus;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/NacosAuthConfig.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.security.nacos;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthSystemTypes;
 import com.alibaba.nacos.filter.JwtAuthenticationTokenFilter;
 import com.alibaba.nacos.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.AuthSystemTypes;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;

File: pig-register/src/main/java/com/alibaba/nacos/security/nacos/users/NacosUser.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.security.nacos.users;
 
-import com.alibaba.nacos.core.auth.User;
+import com.alibaba.nacos.auth.model.User;
 
 /**
  * Nacos User.

File: pig-common/pig-common-core/src/main/java/com/pig4cloud/pig/common/core/mybatis/SqlFilterArgumentResolver.java
Patch:
@@ -79,9 +79,9 @@ public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer m
 		}
 
 		List<OrderItem> orderItemList = new ArrayList<>();
-		Optional.ofNullable(ascs).ifPresent(s -> orderItemList.addAll(Arrays.stream(s).filter(Objects::isNull)
+		Optional.ofNullable(ascs).ifPresent(s -> orderItemList.addAll(Arrays.stream(s).filter(StrUtil::isNotBlank)
 				.map(this::clear).map(OrderItem::asc).collect(Collectors.toList())));
-		Optional.ofNullable(descs).ifPresent(s -> orderItemList.addAll(Arrays.stream(s).filter(Objects::isNull)
+		Optional.ofNullable(descs).ifPresent(s -> orderItemList.addAll(Arrays.stream(s).filter(StrUtil::isNotBlank)
 				.map(this::clear).map(OrderItem::desc).collect(Collectors.toList())));
 		page.addOrder(orderItemList);
 

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/util/TreeUtil.java
Patch:
@@ -20,7 +20,7 @@
  * @ Apache-2.0
  */
 
-package com.pig4cloud.pig.admin.api.vo;
+package com.pig4cloud.pig.admin.api.util;
 
 import com.pig4cloud.pig.admin.api.dto.MenuTree;
 import com.pig4cloud.pig.admin.api.dto.TreeNode;

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/controller/LogController.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.pig4cloud.pig.admin.controller;
 
-import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.pig4cloud.pig.admin.api.dto.SysLogDTO;
 import com.pig4cloud.pig.admin.api.entity.SysLog;
 import com.pig4cloud.pig.admin.service.SysLogService;
 import com.pig4cloud.pig.common.core.util.R;
@@ -51,8 +51,8 @@ public class LogController {
 	 * @return
 	 */
 	@GetMapping("/page")
-	public R getLogPage(Page page, SysLog sysLog) {
-		return R.ok(sysLogService.page(page, Wrappers.query(sysLog)));
+	public R getLogPage(Page page, SysLogDTO sysLog) {
+		return R.ok(sysLogService.getLogByPage(page, sysLog));
 	}
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysDeptServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 import com.pig4cloud.pig.admin.api.dto.DeptTree;
 import com.pig4cloud.pig.admin.api.entity.SysDept;
 import com.pig4cloud.pig.admin.api.entity.SysDeptRelation;
-import com.pig4cloud.pig.admin.api.vo.TreeUtil;
+import com.pig4cloud.pig.admin.api.util.TreeUtil;
 import com.pig4cloud.pig.admin.mapper.SysDeptMapper;
 import com.pig4cloud.pig.admin.service.SysDeptRelationService;
 import com.pig4cloud.pig.admin.service.SysDeptService;

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/service/impl/SysMenuServiceImpl.java
Patch:
@@ -22,8 +22,8 @@
 import com.pig4cloud.pig.admin.api.dto.MenuTree;
 import com.pig4cloud.pig.admin.api.entity.SysMenu;
 import com.pig4cloud.pig.admin.api.entity.SysRoleMenu;
+import com.pig4cloud.pig.admin.api.util.TreeUtil;
 import com.pig4cloud.pig.admin.api.vo.MenuVO;
-import com.pig4cloud.pig.admin.api.vo.TreeUtil;
 import com.pig4cloud.pig.admin.mapper.SysMenuMapper;
 import com.pig4cloud.pig.admin.mapper.SysRoleMenuMapper;
 import com.pig4cloud.pig.admin.service.SysMenuService;

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/filter/PasswordDecoderFilter.java
Patch:
@@ -53,7 +53,7 @@ public class PasswordDecoderFilter extends AbstractGatewayFilterFactory {
 
 	private static final String KEY_ALGORITHM = "AES";
 
-	private GatewayConfigProperties configProperties;
+	private final GatewayConfigProperties configProperties;
 
 	private static String decryptAES(String data, String pass) {
 		AES aes = new AES(Mode.CBC, Padding.NoPadding, new SecretKeySpec(pass.getBytes(), KEY_ALGORITHM),

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/dto/MenuTree.java
Patch:
@@ -107,6 +107,7 @@ public MenuTree(MenuVO menuVo) {
 		this.label = menuVo.getName();
 		this.sort = menuVo.getSort();
 		this.keepAlive = menuVo.getKeepAlive();
+		this.hasChildren = false;
 	}
 
 }

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/dto/TreeNode.java
Patch:
@@ -41,6 +41,8 @@ public class TreeNode {
 
 	protected List<TreeNode> children = new ArrayList<TreeNode>();
 
+	protected Boolean hasChildren;
+
 	public void add(TreeNode node) {
 		children.add(node);
 	}

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/vo/TreeUtil.java
Patch:
@@ -59,6 +59,7 @@ public <T extends TreeNode> List<T> build(List<T> treeNodes, Object root) {
 						treeNode.setChildren(new ArrayList<>());
 					}
 					treeNode.add(it);
+					treeNode.setHasChildren(true);
 				}
 			}
 		}
@@ -117,7 +118,7 @@ public List<MenuTree> buildTree(List<SysMenu> menus, int root) {
 			node.setIcon(menu.getIcon());
 			node.setType(menu.getType());
 			node.setSort(menu.getSort());
-			node.setHasChildren(true);
+			node.setHasChildren(false);
 			node.setKeepAlive(menu.getKeepAlive());
 			trees.add(node);
 		}

File: pig-common/pig-common-job/src/main/java/com/pig4cloud/pig/common/job/properties/XxlAdminProperties.java
Patch:
@@ -14,6 +14,6 @@ public class XxlAdminProperties {
 	/**
 	 * 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。 执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
 	 */
-	private String addresses = "http://pig-job:8080/xxl-job-admin";
+	private String addresses = "http://pig-job:5004/xxl-job-admin";
 
 }

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigUserDetailsServiceImpl.java
Patch:
@@ -73,7 +73,9 @@ public UserDetails loadUserByUsername(String username) {
 
 		R<UserInfo> result = remoteUserService.info(username, SecurityConstants.FROM_IN);
 		UserDetails userDetails = getUserDetails(result);
-		cache.put(username, userDetails);
+        if (cache != null) {
+		    cache.put(username, userDetails);
+        }
 		return userDetails;
 	}
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/service/PigUserDetailsServiceImpl.java
Patch:
@@ -73,7 +73,9 @@ public UserDetails loadUserByUsername(String username) {
 
 		R<UserInfo> result = remoteUserService.info(username, SecurityConstants.FROM_IN);
 		UserDetails userDetails = getUserDetails(result);
-		cache.put(username, userDetails);
+        if (cache != null) {
+		    cache.put(username, userDetails);
+        }
 		return userDetails;
 	}
 

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/GlobalExceptionHandlerResolver.java
Patch:
@@ -49,7 +49,7 @@ public class GlobalExceptionHandlerResolver {
 	@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
 	public R exception(Exception e) {
 		log.error("全局异常信息 ex={}", e.getMessage(), e);
-		return R.failed(e);
+		return R.failed(e.getLocalizedMessage());
 	}
 
 	/**

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/handler/FormAuthenticationFailureHandler.java
Patch:
@@ -47,7 +47,7 @@ public class FormAuthenticationFailureHandler implements AuthenticationFailureHa
 	@SneakyThrows
 	public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) {
 		log.debug("表单登录失败:{}", exception.getLocalizedMessage());
-		response.sendRedirect(String.format("/token/login?error=%s"
-				, HttpUtil.encodeParams(exception.getMessage(), Charset.defaultCharset())));
+		String url = HttpUtil.encodeParams(String.format("/token/login?error=%s", exception.getMessage()), Charset.defaultCharset());
+		WebUtils.getResponse().sendRedirect(url);
 	}
 }

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/handler/FormAuthenticationFailureHandler.java
Patch:
@@ -47,7 +47,7 @@ public class FormAuthenticationFailureHandler implements AuthenticationFailureHa
 	@SneakyThrows
 	public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) {
 		log.debug("表单登录失败:{}", exception.getLocalizedMessage());
-		response.sendRedirect(String.format("/token/login?error=%s"
-				, HttpUtil.encodeParams(exception.getMessage(), Charset.defaultCharset())));
+		String url = HttpUtil.encodeParams(String.format("/token/login?error=%s", exception.getMessage()), Charset.defaultCharset());
+		WebUtils.getResponse().sendRedirect(url);
 	}
 }

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/filter/ValidateCodeGatewayFilter.java
Patch:
@@ -34,6 +34,7 @@
 import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
 import org.springframework.http.server.reactive.ServerHttpRequest;
 import org.springframework.http.server.reactive.ServerHttpResponse;
 import org.springframework.stereotype.Component;
@@ -81,6 +82,7 @@ public GatewayFilter apply(Object config) {
 			} catch (Exception e) {
 				ServerHttpResponse response = exchange.getResponse();
 				response.setStatusCode(HttpStatus.PRECONDITION_REQUIRED);
+                response.getHeaders().setContentType(MediaType.APPLICATION_JSON);
 				try {
 					return response.writeWith(Mono.just(response.bufferFactory()
 						.wrap(objectMapper.writeValueAsBytes(

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigSecurityInnerAspect.java
Patch:
@@ -29,7 +29,6 @@
 import org.aspectj.lang.annotation.Aspect;
 import org.springframework.core.Ordered;
 import org.springframework.security.access.AccessDeniedException;
-import org.springframework.stereotype.Component;
 
 import javax.servlet.http.HttpServletRequest;
 
@@ -41,7 +40,6 @@
  */
 @Slf4j
 @Aspect
-@Component
 @AllArgsConstructor
 public class PigSecurityInnerAspect implements Ordered {
 	private final HttpServletRequest request;

File: pig-common/pig-common-security/src/main/java/com/pig4cloud/pig/common/security/component/PigSecurityInnerAspect.java
Patch:
@@ -29,7 +29,6 @@
 import org.aspectj.lang.annotation.Aspect;
 import org.springframework.core.Ordered;
 import org.springframework.security.access.AccessDeniedException;
-import org.springframework.stereotype.Component;
 
 import javax.servlet.http.HttpServletRequest;
 
@@ -41,7 +40,6 @@
  */
 @Slf4j
 @Aspect
-@Component
 @AllArgsConstructor
 public class PigSecurityInnerAspect implements Ordered {
 	private final HttpServletRequest request;

File: pig-codegen/src/main/java/com/pig4cloud/pig/codegen/config/MybatisPlusConfiguration.java
Patch:
@@ -17,7 +17,6 @@
 package com.pig4cloud.pig.codegen.config;
 
 import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
-import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -26,8 +25,7 @@
  * @date 2019/2/1
  */
 @Configuration
-@MapperScan("com.pig4cloud.pig.codegen.mapper")
-public class MybatisPlusConfigurer {
+public class MybatisPlusConfiguration {
 	/**
 	 * 分页插件
 	 *

File: pig-codegen/src/main/java/com/pig4cloud/pig/codegen/mapper/SysGeneratorMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -29,6 +30,7 @@
  * @author lengleng
  * @date 2019/2/1
  */
+@Mapper
 public interface SysGeneratorMapper {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/config/MybatisPlusConfiguration.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
 import com.pig4cloud.pig.common.core.mybatis.DataScopeInterceptor;
-import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -27,8 +26,7 @@
  * @date 2019/2/1
  */
 @Configuration
-@MapperScan("com.pig4cloud.pig.admin.mapper")
-public class MybatisPlusConfigurer {
+public class MybatisPlusConfiguration {
 	/**
 	 * 分页插件
 	 *

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDeptMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDept;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDeptMapper extends BaseMapper<SysDept> {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDeptRelationMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDeptRelation;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,6 +28,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDeptRelationMapper extends BaseMapper<SysDeptRelation> {
 	/**
 	 * 删除部门关系表数据

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDictMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDict;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,6 +28,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDictMapper extends BaseMapper<SysDict> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysLogMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysLog;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,5 +28,6 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysLogMapper extends BaseMapper<SysLog> {
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysMenuMapper.java
Patch:
@@ -19,6 +19,7 @@
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysMenu;
 import com.pig4cloud.pig.admin.api.vo.MenuVO;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -30,6 +31,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysMenuMapper extends BaseMapper<SysMenu> {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysOauthClientDetailsMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysOauthClientDetails;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -28,6 +29,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysOauthClientDetailsMapper extends BaseMapper<SysOauthClientDetails> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysRoleMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysRole;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysRoleMapper extends BaseMapper<SysRole> {
 	/**
 	 * 通过用户ID，查询角色信息

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysRoleMenuMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysRoleMenu;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -28,6 +29,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysRoleMenuMapper extends BaseMapper<SysRoleMenu> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysUserMapper.java
Patch:
@@ -22,6 +22,7 @@
 import com.pig4cloud.pig.admin.api.dto.UserDTO;
 import com.pig4cloud.pig.admin.api.entity.SysUser;
 import com.pig4cloud.pig.admin.api.vo.UserVO;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -34,6 +35,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysUserMapper extends BaseMapper<SysUser> {
 	/**
 	 * 通过用户名查询用户信息（含有角色信息）

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysUserRoleMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysUserRole;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 /**
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysUserRoleMapper extends BaseMapper<SysUserRole> {
 	/**
 	 * 根据用户Id删除该用户的角色关系

File: pig-codegen/src/main/java/com/pig4cloud/pig/codegen/config/MybatisPlusConfiguration.java
Patch:
@@ -17,7 +17,6 @@
 package com.pig4cloud.pig.codegen.config;
 
 import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
-import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -26,8 +25,7 @@
  * @date 2019/2/1
  */
 @Configuration
-@MapperScan("com.pig4cloud.pig.codegen.mapper")
-public class MybatisPlusConfigurer {
+public class MybatisPlusConfiguration {
 	/**
 	 * 分页插件
 	 *

File: pig-codegen/src/main/java/com/pig4cloud/pig/codegen/mapper/SysGeneratorMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -29,6 +30,7 @@
  * @author lengleng
  * @date 2019/2/1
  */
+@Mapper
 public interface SysGeneratorMapper {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/config/MybatisPlusConfiguration.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
 import com.pig4cloud.pig.common.core.mybatis.DataScopeInterceptor;
-import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -27,8 +26,7 @@
  * @date 2019/2/1
  */
 @Configuration
-@MapperScan("com.pig4cloud.pig.admin.mapper")
-public class MybatisPlusConfigurer {
+public class MybatisPlusConfiguration {
 	/**
 	 * 分页插件
 	 *

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDeptMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDept;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDeptMapper extends BaseMapper<SysDept> {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDeptRelationMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDeptRelation;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,6 +28,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDeptRelationMapper extends BaseMapper<SysDeptRelation> {
 	/**
 	 * 删除部门关系表数据

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysDictMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysDict;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,6 +28,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysDictMapper extends BaseMapper<SysDict> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysLogMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysLog;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -27,5 +28,6 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysLogMapper extends BaseMapper<SysLog> {
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysMenuMapper.java
Patch:
@@ -19,6 +19,7 @@
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysMenu;
 import com.pig4cloud.pig.admin.api.vo.MenuVO;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -30,6 +31,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysMenuMapper extends BaseMapper<SysMenu> {
 
 	/**

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysOauthClientDetailsMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysOauthClientDetails;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -28,6 +29,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysOauthClientDetailsMapper extends BaseMapper<SysOauthClientDetails> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysRoleMapper.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysRole;
+import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
 
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysRoleMapper extends BaseMapper<SysRole> {
 	/**
 	 * 通过用户ID，查询角色信息

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysRoleMenuMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysRoleMenu;
+import org.apache.ibatis.annotations.Mapper;
 
 /**
  * <p>
@@ -28,6 +29,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysRoleMenuMapper extends BaseMapper<SysRoleMenu> {
 
 }

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysUserMapper.java
Patch:
@@ -22,6 +22,7 @@
 import com.pig4cloud.pig.admin.api.dto.UserDTO;
 import com.pig4cloud.pig.admin.api.entity.SysUser;
 import com.pig4cloud.pig.admin.api.vo.UserVO;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -34,6 +35,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysUserMapper extends BaseMapper<SysUser> {
 	/**
 	 * 通过用户名查询用户信息（含有角色信息）

File: pig-upms/pig-upms-biz/src/main/java/com/pig4cloud/pig/admin/mapper/SysUserRoleMapper.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.pig4cloud.pig.admin.api.entity.SysUserRole;
+import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
 /**
@@ -29,6 +30,7 @@
  * @author lengleng
  * @since 2019/2/1
  */
+@Mapper
 public interface SysUserRoleMapper extends BaseMapper<SysUserRole> {
 	/**
 	 * 根据用户Id删除该用户的角色关系

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/endpoint/PigTokenEndpoint.java
Patch:
@@ -75,7 +75,7 @@ public R<Boolean> logout(@RequestHeader(value = HttpHeaders.AUTHORIZATION, requi
 		String tokenValue = authHeader.replace(OAuth2AccessToken.BEARER_TYPE, StrUtil.EMPTY).trim();
 		OAuth2AccessToken accessToken = tokenStore.readAccessToken(tokenValue);
 		if (accessToken == null || StrUtil.isBlank(accessToken.getValue())) {
-			return R.failed("退出失败，token 无效");
+			return R.ok();
 		}
 		tokenStore.removeAccessToken(accessToken);
 

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/endpoint/PigTokenEndpoint.java
Patch:
@@ -50,7 +50,7 @@
  */
 @RestController
 @AllArgsConstructor
-@RequestMapping("/oauth")
+@RequestMapping("/token")
 public class PigTokenEndpoint {
 	private static final String PROJECT_OAUTH_ACCESS = SecurityConstants.PROJECT_PREFIX + SecurityConstants.OAUTH_PREFIX + "access:";
 	private static final String CURRENT = "current";
@@ -98,7 +98,7 @@ public R<Boolean> removeToken(@PathVariable("token") String token, @RequestHeade
 	 * @param params 分页参数
 	 * @param from   标志
 	 */
-	@PostMapping("/token/page")
+	@PostMapping("/page")
 	public R getTokenPage(@RequestBody Map<String, Object> params, @RequestHeader(required = false) String from) {
 		if (StrUtil.isBlank(from)) {
 			return null;

File: pig-upms/pig-upms-api/src/main/java/com/pig4cloud/pig/admin/api/feign/RemoteTokenService.java
Patch:
@@ -38,7 +38,7 @@ public interface RemoteTokenService {
 	 * @param from   内部调用标志
 	 * @return page
 	 */
-	@PostMapping("/oauth/token/page")
+	@PostMapping("/token/page")
 	R getTokenPage(@RequestBody Map<String, Object> params, @RequestHeader(SecurityConstants.FROM) String from);
 
 	/**
@@ -48,6 +48,6 @@ public interface RemoteTokenService {
 	 * @param from  调用标志
 	 * @return
 	 */
-	@DeleteMapping("/oauth/{token}")
+	@DeleteMapping("/token/{token}")
 	R<Boolean> removeToken(@PathVariable("token") String token, @RequestHeader(SecurityConstants.FROM) String from);
 }

File: pig-auth/src/main/java/com/pig4cloud/pig/auth/config/AuthorizationServerConfig.java
Patch:
@@ -25,6 +25,7 @@
 import org.springframework.data.redis.connection.RedisConnectionFactory;
 import org.springframework.http.HttpMethod;
 import org.springframework.security.authentication.AuthenticationManager;
+import org.springframework.security.core.userdetails.UserDetailsService;
 import org.springframework.security.oauth2.common.DefaultOAuth2AccessToken;
 import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;
 import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;
@@ -49,7 +50,7 @@
 @EnableAuthorizationServer
 public class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter {
 	private final DataSource dataSource;
-	private final org.springframework.security.core.userdetails.UserDetailsService UserDetailsService;
+	private final UserDetailsService userDetailsService;
 	private final AuthenticationManager authenticationManager;
 	private final RedisConnectionFactory redisConnectionFactory;
 
@@ -74,7 +75,7 @@ public void configure(AuthorizationServerEndpointsConfigurer endpoints) {
 			.allowedTokenEndpointRequestMethods(HttpMethod.GET, HttpMethod.POST)
 			.tokenStore(tokenStore())
 			.tokenEnhancer(tokenEnhancer())
-			.userDetailsService(UserDetailsService)
+			.userDetailsService(userDetailsService)
 			.authenticationManager(authenticationManager)
 			.reuseRefreshTokens(false)
 			.exceptionTranslator(new PigWebResponseExceptionTranslator());

File: pig-gateway/src/main/java/com/pig4cloud/pig/gateway/handler/ImageCodeHandler.java
Patch:
@@ -17,7 +17,7 @@
 package com.pig4cloud.pig.gateway.handler;
 
 import com.google.code.kaptcha.Producer;
-import com.pig4cloud.pig.gateway.filter.ImageCodeGatewayFilter;
+import com.pig4cloud.pig.common.core.constant.CommonConstants;
 import lombok.AllArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.core.io.ByteArrayResource;
@@ -57,7 +57,7 @@ public Mono<ServerResponse> handle(ServerRequest serverRequest) {
 
 		//保存验证码信息
 		String randomStr = serverRequest.queryParam("randomStr").get();
-		redisTemplate.opsForValue().set(ImageCodeGatewayFilter.DEFAULT_CODE_KEY + randomStr, text, 60, TimeUnit.SECONDS);
+		redisTemplate.opsForValue().set(CommonConstants.DEFAULT_CODE_KEY + randomStr, text, 60, TimeUnit.SECONDS);
 
 		// 转换流信息写出
 		FastByteArrayOutputStream os = new FastByteArrayOutputStream();

