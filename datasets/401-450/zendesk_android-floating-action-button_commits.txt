File: library/src/main/java/com/getbase/floatingactionbutton/FloatingActionsMenu.java
Patch:
@@ -254,12 +254,12 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     switch (mExpandDirection) {
     case EXPAND_UP:
     case EXPAND_DOWN:
-      height += mButtonSpacing * (getChildCount() - 1);
+      height += mButtonSpacing * (mButtonsCount - 1);
       height = adjustForOvershoot(height);
       break;
     case EXPAND_LEFT:
     case EXPAND_RIGHT:
-      width += mButtonSpacing * (getChildCount() - 1);
+      width += mButtonSpacing * (mButtonsCount - 1);
       width = adjustForOvershoot(width);
       break;
     }

File: library/src/main/java/com/getbase/floatingactionbutton/FloatingActionsMenu.java
Patch:
@@ -197,6 +197,7 @@ public void addButton(FloatingActionButton button) {
   public void removeButton(FloatingActionButton button) {
     removeView(button.getLabelView());
     removeView(button);
+    button.setTag(R.id.fab_label, null);
     mButtonsCount--;
   }
 

File: library/src/main/java/com/getbase/floatingactionbutton/FloatingActionsMenu.java
Patch:
@@ -481,6 +481,7 @@ private void createLabels() {
           button.getTag(R.id.fab_label) != null) continue;
 
       TextView label = new TextView(context);
+      label.setTextAppearance(getContext(), mLabelsStyle);
       label.setText(button.getTitle());
       addView(label);
 

File: sample/src/main/java/com/getbase/floatingactionbutton/sample/MainActivity.java
Patch:
@@ -34,7 +34,7 @@ public void onClick(View v) {
     final View actionB = findViewById(R.id.action_b);
 
     FloatingActionButton actionC = new FloatingActionButton(getBaseContext());
-    actionC.setTitle("Hide/Show Action B");
+    actionC.setTitle("Hide/Show Action above");
     actionC.setOnClickListener(new OnClickListener() {
       @Override
       public void onClick(View v) {

File: library/src/main/java/com/getbase/floatingactionbutton/FloatingActionsMenu.java
Patch:
@@ -269,7 +269,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
       int addButtonLeft = r - l - mMaxButtonWidth + (mMaxButtonWidth - mAddButton.getMeasuredWidth()) / 2;
       mAddButton.layout(addButtonLeft, addButtonY, addButtonLeft + mAddButton.getMeasuredWidth(), addButtonY + mAddButton.getMeasuredHeight());
 
-      int labelsRight = addButtonLeft - mLabelsMargin;
+      int labelsRight = r - l - mMaxButtonWidth - mLabelsMargin;
 
       int nextY = expandUp ?
           addButtonY - mButtonSpacing :

File: library/src/main/java/com/getbase/floatingactionbutton/AddFloatingActionButton.java
Patch:
@@ -31,7 +31,7 @@ void init(Context context, AttributeSet attributeSet) {
       TypedArray attr = context.obtainStyledAttributes(attributeSet, R.styleable.AddFloatingActionButton, 0, 0);
       if (attr != null) {
         try {
-          mPlusColor = attr.getColor(R.styleable.AddFloatingActionButton_plusIconColor, getColor(android.R.color.white));
+          mPlusColor = attr.getColor(R.styleable.AddFloatingActionButton_fab_plusIconColor, getColor(android.R.color.white));
         } finally {
           attr.recycle();
         }

File: library/src/main/java/com/getbase/floatingactionbutton/FloatingActionsMenu.java
Patch:
@@ -61,9 +61,9 @@ private void init(Context context, AttributeSet attributeSet) {
       TypedArray attr = context.obtainStyledAttributes(attributeSet, R.styleable.FloatingActionsMenu, 0, 0);
       if (attr != null) {
         try {
-          mAddButtonPlusColor = attr.getColor(R.styleable.FloatingActionsMenu_addButtonPlusIconColor, getColor(android.R.color.white));
-          mAddButtonColorNormal = attr.getColor(R.styleable.FloatingActionsMenu_addButtonColorNormal, getColor(android.R.color.holo_blue_dark));
-          mAddButtonColorPressed = attr.getColor(R.styleable.FloatingActionsMenu_addButtonColorPressed, getColor(android.R.color.holo_blue_light));
+          mAddButtonPlusColor = attr.getColor(R.styleable.FloatingActionsMenu_fab_addButtonPlusIconColor, getColor(android.R.color.white));
+          mAddButtonColorNormal = attr.getColor(R.styleable.FloatingActionsMenu_fab_addButtonColorNormal, getColor(android.R.color.holo_blue_dark));
+          mAddButtonColorPressed = attr.getColor(R.styleable.FloatingActionsMenu_fab_addButtonColorPressed, getColor(android.R.color.holo_blue_light));
         } finally {
           attr.recycle();
         }

